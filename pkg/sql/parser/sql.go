// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:76

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) regionAffinity() tree.RegionalAffinity {
	return u.val.(tree.RegionalAffinity)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:713
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12398

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1412,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	253, 366,
	-2, 0,
	-1, 73,
	235, 219,
	495, 219,
	-2, 0,
	-1, 84,
	223, 1181,
	237, 1181,
	253, 362,
	379, 362,
	389, 961,
	424, 362,
	436, 961,
	479, 961,
	506, 362,
	532, 961,
	-2, 0,
	-1, 90,
	130, 1412,
	230, 1412,
	517, 1412,
	518, 1412,
	-2, 0,
	-1, 106,
	147, 1383,
	166, 1383,
	179, 1383,
	233, 1383,
	266, 1383,
	331, 1383,
	341, 1383,
	512, 1383,
	-2, 1354,
	-1, 144,
	155, 832,
	252, 832,
	382, 801,
	441, 801,
	498, 832,
	500, 801,
	-2, 0,
	-1, 146,
	4, 1414,
	21, 1414,
	22, 1414,
	23, 1414,
	24, 1414,
	25, 1414,
	26, 1414,
	27, 1414,
	28, 1414,
	30, 1414,
	31, 1414,
	37, 1414,
	42, 1414,
	43, 1414,
	45, 1414,
	46, 1414,
	47, 1414,
	48, 1414,
	49, 1414,
	50, 1414,
	51, 1414,
	53, 1414,
	54, 1414,
	55, 1414,
	56, 1414,
	58, 1414,
	59, 1414,
	60, 1414,
	61, 1414,
	62, 1414,
	63, 1414,
	64, 1414,
	68, 1414,
	69, 1414,
	70, 1414,
	71, 1414,
	73, 1414,
	74, 1414,
	75, 1414,
	79, 1414,
	80, 1414,
	81, 1414,
	82, 1414,
	83, 1414,
	84, 1414,
	85, 1414,
	88, 1414,
	89, 1414,
	90, 1414,
	91, 1414,
	92, 1414,
	94, 1414,
	96, 1414,
	97, 1414,
	98, 1414,
	99, 1414,
	100, 1414,
	101, 1414,
	103, 1414,
	104, 1414,
	105, 1414,
	107, 1414,
	108, 1414,
	116, 1414,
	117, 1414,
	118, 1414,
	119, 1414,
	121, 1414,
	122, 1414,
	123, 1414,
	125, 1414,
	126, 1414,
	127, 1414,
	129, 1414,
	130, 1414,
	132, 1414,
	133, 1414,
	134, 1414,
	137, 1414,
	138, 1414,
	139, 1414,
	141, 1414,
	142, 1414,
	144, 1414,
	145, 1414,
	146, 1414,
	148, 1414,
	149, 1414,
	150, 1414,
	151, 1414,
	152, 1414,
	153, 1414,
	154, 1414,
	155, 1414,
	156, 1414,
	157, 1414,
	158, 1414,
	159, 1414,
	160, 1414,
	161, 1414,
	162, 1414,
	163, 1414,
	165, 1414,
	171, 1414,
	172, 1414,
	173, 1414,
	174, 1414,
	178, 1414,
	180, 1414,
	184, 1414,
	185, 1414,
	186, 1414,
	187, 1414,
	188, 1414,
	189, 1414,
	190, 1414,
	191, 1414,
	192, 1414,
	193, 1414,
	194, 1414,
	195, 1414,
	197, 1414,
	198, 1414,
	200, 1414,
	201, 1414,
	203, 1414,
	204, 1414,
	205, 1414,
	206, 1414,
	207, 1414,
	208, 1414,
	209, 1414,
	210, 1414,
	211, 1414,
	213, 1414,
	214, 1414,
	216, 1414,
	217, 1414,
	218, 1414,
	219, 1414,
	223, 1414,
	224, 1414,
	225, 1414,
	226, 1414,
	227, 1414,
	230, 1414,
	231, 1414,
	232, 1414,
	234, 1414,
	236, 1414,
	237, 1414,
	239, 1414,
	241, 1414,
	242, 1414,
	243, 1414,
	245, 1414,
	249, 1414,
	250, 1414,
	251, 1414,
	252, 1414,
	253, 1414,
	254, 1414,
	256, 1414,
	257, 1414,
	258, 1414,
	260, 1414,
	261, 1414,
	263, 1414,
	264, 1414,
	267, 1414,
	271, 1414,
	272, 1414,
	273, 1414,
	276, 1414,
	277, 1414,
	278, 1414,
	279, 1414,
	281, 1414,
	282, 1414,
	283, 1414,
	284, 1414,
	285, 1414,
	286, 1414,
	287, 1414,
	288, 1414,
	289, 1414,
	290, 1414,
	291, 1414,
	292, 1414,
	293, 1414,
	294, 1414,
	295, 1414,
	296, 1414,
	297, 1414,
	298, 1414,
	299, 1414,
	300, 1414,
	301, 1414,
	302, 1414,
	304, 1414,
	306, 1414,
	307, 1414,
	308, 1414,
	309, 1414,
	310, 1414,
	311, 1414,
	312, 1414,
	313, 1414,
	314, 1414,
	315, 1414,
	316, 1414,
	317, 1414,
	319, 1414,
	321, 1414,
	323, 1414,
	324, 1414,
	326, 1414,
	327, 1414,
	328, 1414,
	329, 1414,
	330, 1414,
	333, 1414,
	336, 1414,
	337, 1414,
	338, 1414,
	339, 1414,
	342, 1414,
	343, 1414,
	344, 1414,
	346, 1414,
	348, 1414,
	349, 1414,
	350, 1414,
	351, 1414,
	352, 1414,
	353, 1414,
	354, 1414,
	355, 1414,
	356, 1414,
	357, 1414,
	358, 1414,
	359, 1414,
	361, 1414,
	362, 1414,
	363, 1414,
	364, 1414,
	365, 1414,
	366, 1414,
	367, 1414,
	368, 1414,
	369, 1414,
	370, 1414,
	371, 1414,
	372, 1414,
	373, 1414,
	374, 1414,
	375, 1414,
	377, 1414,
	378, 1414,
	380, 1414,
	381, 1414,
	382, 1414,
	383, 1414,
	384, 1414,
	385, 1414,
	386, 1414,
	387, 1414,
	388, 1414,
	389, 1414,
	390, 1414,
	391, 1414,
	393, 1414,
	395, 1414,
	396, 1414,
	397, 1414,
	402, 1414,
	404, 1414,
	405, 1414,
	406, 1414,
	407, 1414,
	408, 1414,
	409, 1414,
	410, 1414,
	411, 1414,
	413, 1414,
	414, 1414,
	415, 1414,
	417, 1414,
	418, 1414,
	419, 1414,
	420, 1414,
	421, 1414,
	422, 1414,
	424, 1414,
	425, 1414,
	426, 1414,
	427, 1414,
	428, 1414,
	429, 1414,
	430, 1414,
	431, 1414,
	432, 1414,
	433, 1414,
	434, 1414,
	436, 1414,
	437, 1414,
	438, 1414,
	439, 1414,
	440, 1414,
	441, 1414,
	443, 1414,
	444, 1414,
	445, 1414,
	446, 1414,
	447, 1414,
	448, 1414,
	450, 1414,
	451, 1414,
	452, 1414,
	453, 1414,
	454, 1414,
	455, 1414,
	456, 1414,
	458, 1414,
	460, 1414,
	461, 1414,
	462, 1414,
	463, 1414,
	464, 1414,
	465, 1414,
	466, 1414,
	467, 1414,
	468, 1414,
	469, 1414,
	470, 1414,
	471, 1414,
	472, 1414,
	473, 1414,
	475, 1414,
	476, 1414,
	478, 1414,
	480, 1414,
	481, 1414,
	482, 1414,
	483, 1414,
	484, 1414,
	485, 1414,
	486, 1414,
	487, 1414,
	488, 1414,
	490, 1414,
	491, 1414,
	492, 1414,
	493, 1414,
	494, 1414,
	496, 1414,
	498, 1414,
	499, 1414,
	500, 1414,
	501, 1414,
	502, 1414,
	503, 1414,
	505, 1414,
	506, 1414,
	507, 1414,
	508, 1414,
	510, 1414,
	511, 1414,
	514, 1414,
	515, 1414,
	516, 1414,
	517, 1414,
	518, 1414,
	519, 1414,
	520, 1414,
	522, 1414,
	525, 1414,
	526, 1414,
	527, 1414,
	528, 1414,
	529, 1414,
	530, 1414,
	532, 1414,
	533, 1414,
	534, 1414,
	535, 1414,
	540, 1414,
	541, 1414,
	542, 1414,
	543, 1414,
	544, 1414,
	545, 1414,
	-2, 0,
	-1, 147,
	1, 1273,
	128, 1273,
	241, 1273,
	320, 1273,
	377, 1273,
	386, 1273,
	549, 1273,
	573, 1273,
	-2, 0,
	-1, 149,
	1, 1273,
	573, 1273,
	-2, 0,
	-1, 150,
	1, 1273,
	573, 1273,
	-2, 0,
	-1, 151,
	1, 1273,
	495, 1273,
	573, 1273,
	-2, 0,
	-1, 180,
	147, 1382,
	166, 1382,
	179, 1382,
	233, 1382,
	266, 1382,
	331, 1382,
	341, 1382,
	512, 1382,
	-2, 1357,
	-1, 222,
	4, 1421,
	5, 1421,
	6, 1421,
	7, 1421,
	8, 1421,
	9, 1421,
	10, 1421,
	21, 1421,
	22, 1421,
	23, 1421,
	24, 1421,
	25, 1421,
	26, 1421,
	27, 1421,
	28, 1421,
	30, 1421,
	31, 1421,
	37, 1421,
	38, 1421,
	42, 1421,
	43, 1421,
	44, 1421,
	45, 1421,
	46, 1421,
	47, 1421,
	48, 1421,
	49, 1421,
	50, 1421,
	51, 1421,
	53, 1421,
	54, 1421,
	55, 1421,
	56, 1421,
	58, 1421,
	59, 1421,
	60, 1421,
	61, 1421,
	62, 1421,
	63, 1421,
	64, 1421,
	65, 1421,
	66, 1421,
	67, 1421,
	68, 1421,
	69, 1421,
	70, 1421,
	71, 1421,
	73, 1421,
	74, 1421,
	75, 1421,
	77, 1421,
	79, 1421,
	80, 1421,
	81, 1421,
	82, 1421,
	83, 1421,
	84, 1421,
	85, 1421,
	88, 1421,
	89, 1421,
	90, 1421,
	91, 1421,
	92, 1421,
	94, 1421,
	96, 1421,
	97, 1421,
	98, 1421,
	99, 1421,
	100, 1421,
	101, 1421,
	103, 1421,
	104, 1421,
	105, 1421,
	106, 1421,
	107, 1421,
	108, 1421,
	109, 1421,
	110, 1421,
	111, 1421,
	112, 1421,
	113, 1421,
	114, 1421,
	115, 1421,
	116, 1421,
	117, 1421,
	118, 1421,
	119, 1421,
	120, 1421,
	121, 1421,
	122, 1421,
	123, 1421,
	124, 1421,
	125, 1421,
	126, 1421,
	127, 1421,
	129, 1421,
	130, 1421,
	132, 1421,
	133, 1421,
	134, 1421,
	137, 1421,
	138, 1421,
	139, 1421,
	141, 1421,
	142, 1421,
	144, 1421,
	145, 1421,
	146, 1421,
	148, 1421,
	149, 1421,
	150, 1421,
	151, 1421,
	152, 1421,
	153, 1421,
	154, 1421,
	155, 1421,
	156, 1421,
	157, 1421,
	158, 1421,
	159, 1421,
	160, 1421,
	161, 1421,
	162, 1421,
	163, 1421,
	164, 1421,
	165, 1421,
	171, 1421,
	172, 1421,
	173, 1421,
	174, 1421,
	178, 1421,
	180, 1421,
	183, 1421,
	184, 1421,
	185, 1421,
	186, 1421,
	187, 1421,
	188, 1421,
	189, 1421,
	190, 1421,
	191, 1421,
	192, 1421,
	193, 1421,
	194, 1421,
	195, 1421,
	197, 1421,
	198, 1421,
	200, 1421,
	201, 1421,
	203, 1421,
	204, 1421,
	205, 1421,
	206, 1421,
	207, 1421,
	208, 1421,
	209, 1421,
	210, 1421,
	211, 1421,
	212, 1421,
	213, 1421,
	214, 1421,
	216, 1421,
	217, 1421,
	218, 1421,
	219, 1421,
	223, 1421,
	224, 1421,
	225, 1421,
	226, 1421,
	227, 1421,
	229, 1421,
	230, 1421,
	231, 1421,
	232, 1421,
	234, 1421,
	236, 1421,
	237, 1421,
	238, 1421,
	239, 1421,
	240, 1421,
	241, 1421,
	242, 1421,
	243, 1421,
	244, 1421,
	245, 1421,
	249, 1421,
	250, 1421,
	251, 1421,
	252, 1421,
	253, 1421,
	254, 1421,
	256, 1421,
	257, 1421,
	258, 1421,
	260, 1421,
	261, 1421,
	262, 1421,
	263, 1421,
	264, 1421,
	265, 1421,
	267, 1421,
	271, 1421,
	272, 1421,
	273, 1421,
	274, 1421,
	275, 1421,
	276, 1421,
	277, 1421,
	278, 1421,
	279, 1421,
	281, 1421,
	282, 1421,
	283, 1421,
	284, 1421,
	285, 1421,
	286, 1421,
	287, 1421,
	288, 1421,
	289, 1421,
	290, 1421,
	291, 1421,
	292, 1421,
	293, 1421,
	294, 1421,
	295, 1421,
	296, 1421,
	297, 1421,
	298, 1421,
	299, 1421,
	300, 1421,
	301, 1421,
	302, 1421,
	304, 1421,
	305, 1421,
	306, 1421,
	307, 1421,
	308, 1421,
	309, 1421,
	310, 1421,
	311, 1421,
	312, 1421,
	313, 1421,
	314, 1421,
	315, 1421,
	316, 1421,
	317, 1421,
	318, 1421,
	319, 1421,
	320, 1421,
	321, 1421,
	322, 1421,
	323, 1421,
	324, 1421,
	325, 1421,
	326, 1421,
	327, 1421,
	328, 1421,
	329, 1421,
	330, 1421,
	333, 1421,
	337, 1421,
	338, 1421,
	339, 1421,
	342, 1421,
	343, 1421,
	344, 1421,
	345, 1421,
	346, 1421,
	347, 1421,
	348, 1421,
	349, 1421,
	350, 1421,
	351, 1421,
	352, 1421,
	353, 1421,
	354, 1421,
	355, 1421,
	356, 1421,
	357, 1421,
	358, 1421,
	359, 1421,
	361, 1421,
	362, 1421,
	363, 1421,
	364, 1421,
	365, 1421,
	366, 1421,
	367, 1421,
	368, 1421,
	369, 1421,
	370, 1421,
	371, 1421,
	372, 1421,
	373, 1421,
	374, 1421,
	375, 1421,
	377, 1421,
	378, 1421,
	380, 1421,
	381, 1421,
	382, 1421,
	383, 1421,
	384, 1421,
	385, 1421,
	386, 1421,
	387, 1421,
	388, 1421,
	389, 1421,
	390, 1421,
	391, 1421,
	393, 1421,
	395, 1421,
	396, 1421,
	397, 1421,
	402, 1421,
	404, 1421,
	405, 1421,
	406, 1421,
	407, 1421,
	408, 1421,
	409, 1421,
	410, 1421,
	411, 1421,
	413, 1421,
	414, 1421,
	415, 1421,
	416, 1421,
	417, 1421,
	418, 1421,
	419, 1421,
	420, 1421,
	421, 1421,
	422, 1421,
	424, 1421,
	425, 1421,
	426, 1421,
	427, 1421,
	428, 1421,
	429, 1421,
	430, 1421,
	431, 1421,
	432, 1421,
	433, 1421,
	434, 1421,
	436, 1421,
	437, 1421,
	438, 1421,
	439, 1421,
	440, 1421,
	441, 1421,
	442, 1421,
	443, 1421,
	444, 1421,
	445, 1421,
	446, 1421,
	447, 1421,
	448, 1421,
	449, 1421,
	450, 1421,
	451, 1421,
	452, 1421,
	453, 1421,
	454, 1421,
	455, 1421,
	456, 1421,
	458, 1421,
	460, 1421,
	461, 1421,
	462, 1421,
	463, 1421,
	464, 1421,
	465, 1421,
	466, 1421,
	467, 1421,
	468, 1421,
	469, 1421,
	470, 1421,
	471, 1421,
	472, 1421,
	473, 1421,
	475, 1421,
	476, 1421,
	477, 1421,
	478, 1421,
	480, 1421,
	481, 1421,
	482, 1421,
	483, 1421,
	484, 1421,
	485, 1421,
	486, 1421,
	487, 1421,
	488, 1421,
	490, 1421,
	491, 1421,
	492, 1421,
	493, 1421,
	494, 1421,
	496, 1421,
	498, 1421,
	499, 1421,
	500, 1421,
	501, 1421,
	502, 1421,
	503, 1421,
	504, 1421,
	505, 1421,
	506, 1421,
	507, 1421,
	508, 1421,
	510, 1421,
	511, 1421,
	513, 1421,
	514, 1421,
	515, 1421,
	516, 1421,
	517, 1421,
	518, 1421,
	519, 1421,
	520, 1421,
	521, 1421,
	522, 1421,
	525, 1421,
	526, 1421,
	527, 1421,
	528, 1421,
	529, 1421,
	530, 1421,
	532, 1421,
	533, 1421,
	534, 1421,
	535, 1421,
	540, 1421,
	541, 1421,
	542, 1421,
	543, 1421,
	544, 1421,
	545, 1421,
	546, 1421,
	554, 1421,
	561, 1421,
	562, 1421,
	563, 1421,
	570, 1421,
	574, 1421,
	-2, 0,
	-1, 707,
	4, 1179,
	21, 1179,
	22, 1179,
	23, 1179,
	24, 1179,
	25, 1179,
	26, 1179,
	27, 1179,
	28, 1179,
	30, 1179,
	31, 1179,
	37, 1179,
	42, 1179,
	43, 1179,
	45, 1179,
	46, 1179,
	47, 1179,
	48, 1179,
	49, 1179,
	50, 1179,
	51, 1179,
	53, 1179,
	54, 1179,
	55, 1179,
	56, 1179,
	58, 1179,
	59, 1179,
	60, 1179,
	61, 1179,
	62, 1179,
	63, 1179,
	64, 1179,
	68, 1179,
	69, 1179,
	70, 1179,
	71, 1179,
	73, 1179,
	74, 1179,
	75, 1179,
	79, 1179,
	80, 1179,
	81, 1179,
	82, 1179,
	83, 1179,
	84, 1179,
	85, 1179,
	88, 1179,
	89, 1179,
	90, 1179,
	91, 1179,
	92, 1179,
	94, 1179,
	96, 1179,
	97, 1179,
	98, 1179,
	99, 1179,
	100, 1179,
	101, 1179,
	103, 1179,
	104, 1179,
	105, 1179,
	107, 1179,
	108, 1179,
	116, 1179,
	117, 1179,
	118, 1179,
	119, 1179,
	121, 1179,
	122, 1179,
	123, 1179,
	125, 1179,
	126, 1179,
	127, 1179,
	129, 1179,
	130, 1179,
	132, 1179,
	133, 1179,
	134, 1179,
	137, 1179,
	138, 1179,
	139, 1179,
	141, 1179,
	142, 1179,
	144, 1179,
	145, 1179,
	146, 1179,
	148, 1179,
	149, 1179,
	150, 1179,
	151, 1179,
	152, 1179,
	153, 1179,
	154, 1179,
	155, 1179,
	156, 1179,
	157, 1179,
	158, 1179,
	159, 1179,
	160, 1179,
	161, 1179,
	162, 1179,
	163, 1179,
	165, 1179,
	171, 1179,
	172, 1179,
	173, 1179,
	174, 1179,
	178, 1179,
	180, 1179,
	184, 1179,
	185, 1179,
	186, 1179,
	187, 1179,
	188, 1179,
	189, 1179,
	190, 1179,
	191, 1179,
	192, 1179,
	193, 1179,
	194, 1179,
	195, 1179,
	197, 1179,
	198, 1179,
	200, 1179,
	201, 1179,
	203, 1179,
	204, 1179,
	205, 1179,
	206, 1179,
	207, 1179,
	208, 1179,
	209, 1179,
	210, 1179,
	211, 1179,
	213, 1179,
	214, 1179,
	216, 1179,
	217, 1179,
	218, 1179,
	219, 1179,
	223, 1179,
	224, 1179,
	225, 1179,
	226, 1179,
	227, 1179,
	230, 1179,
	231, 1179,
	232, 1179,
	234, 1179,
	236, 1179,
	237, 1179,
	239, 1179,
	241, 1179,
	242, 1179,
	243, 1179,
	245, 1179,
	249, 1179,
	250, 1179,
	251, 1179,
	252, 1179,
	253, 1179,
	254, 1179,
	256, 1179,
	257, 1179,
	258, 1179,
	260, 1179,
	261, 1179,
	263, 1179,
	264, 1179,
	267, 1179,
	271, 1179,
	272, 1179,
	273, 1179,
	276, 1179,
	277, 1179,
	278, 1179,
	279, 1179,
	281, 1179,
	282, 1179,
	283, 1179,
	284, 1179,
	285, 1179,
	286, 1179,
	287, 1179,
	288, 1179,
	289, 1179,
	290, 1179,
	291, 1179,
	292, 1179,
	293, 1179,
	294, 1179,
	295, 1179,
	296, 1179,
	297, 1179,
	298, 1179,
	299, 1179,
	300, 1179,
	301, 1179,
	302, 1179,
	304, 1179,
	306, 1179,
	307, 1179,
	308, 1179,
	309, 1179,
	310, 1179,
	311, 1179,
	312, 1179,
	313, 1179,
	314, 1179,
	315, 1179,
	316, 1179,
	317, 1179,
	319, 1179,
	321, 1179,
	323, 1179,
	324, 1179,
	326, 1179,
	327, 1179,
	328, 1179,
	329, 1179,
	330, 1179,
	333, 1179,
	337, 1179,
	338, 1179,
	339, 1179,
	342, 1179,
	343, 1179,
	344, 1179,
	346, 1179,
	348, 1179,
	349, 1179,
	350, 1179,
	351, 1179,
	352, 1179,
	353, 1179,
	354, 1179,
	355, 1179,
	356, 1179,
	357, 1179,
	358, 1179,
	359, 1179,
	361, 1179,
	362, 1179,
	363, 1179,
	364, 1179,
	365, 1179,
	366, 1179,
	367, 1179,
	368, 1179,
	369, 1179,
	370, 1179,
	371, 1179,
	372, 1179,
	373, 1179,
	374, 1179,
	375, 1179,
	377, 1179,
	378, 1179,
	380, 1179,
	381, 1179,
	382, 1179,
	383, 1179,
	384, 1179,
	385, 1179,
	386, 1179,
	387, 1179,
	388, 1179,
	389, 1179,
	390, 1179,
	391, 1179,
	393, 1179,
	395, 1179,
	396, 1179,
	397, 1179,
	402, 1179,
	404, 1179,
	405, 1179,
	406, 1179,
	407, 1179,
	408, 1179,
	409, 1179,
	410, 1179,
	411, 1179,
	413, 1179,
	414, 1179,
	415, 1179,
	417, 1179,
	418, 1179,
	419, 1179,
	420, 1179,
	421, 1179,
	422, 1179,
	424, 1179,
	425, 1179,
	426, 1179,
	427, 1179,
	428, 1179,
	429, 1179,
	430, 1179,
	431, 1179,
	432, 1179,
	433, 1179,
	434, 1179,
	436, 1179,
	437, 1179,
	438, 1179,
	439, 1179,
	440, 1179,
	441, 1179,
	443, 1179,
	444, 1179,
	445, 1179,
	446, 1179,
	447, 1179,
	448, 1179,
	450, 1179,
	451, 1179,
	452, 1179,
	453, 1179,
	454, 1179,
	455, 1179,
	456, 1179,
	458, 1179,
	460, 1179,
	461, 1179,
	462, 1179,
	463, 1179,
	464, 1179,
	465, 1179,
	466, 1179,
	467, 1179,
	468, 1179,
	469, 1179,
	470, 1179,
	471, 1179,
	472, 1179,
	473, 1179,
	475, 1179,
	476, 1179,
	478, 1179,
	480, 1179,
	481, 1179,
	482, 1179,
	483, 1179,
	484, 1179,
	485, 1179,
	486, 1179,
	487, 1179,
	488, 1179,
	490, 1179,
	491, 1179,
	492, 1179,
	493, 1179,
	494, 1179,
	496, 1179,
	498, 1179,
	499, 1179,
	500, 1179,
	501, 1179,
	502, 1179,
	503, 1179,
	505, 1179,
	506, 1179,
	507, 1179,
	508, 1179,
	510, 1179,
	511, 1179,
	514, 1179,
	515, 1179,
	516, 1179,
	517, 1179,
	518, 1179,
	519, 1179,
	520, 1179,
	522, 1179,
	525, 1179,
	526, 1179,
	527, 1179,
	528, 1179,
	529, 1179,
	530, 1179,
	532, 1179,
	533, 1179,
	534, 1179,
	535, 1179,
	540, 1179,
	541, 1179,
	542, 1179,
	543, 1179,
	544, 1179,
	545, 1179,
	-2, 0,
	-1, 726,
	182, 2178,
	495, 2178,
	553, 2178,
	572, 2178,
	-2, 0,
	-1, 727,
	182, 2278,
	495, 2278,
	553, 2278,
	572, 2278,
	-2, 0,
	-1, 728,
	182, 2165,
	495, 2165,
	553, 2165,
	572, 2165,
	-2, 0,
	-1, 730,
	182, 2407,
	495, 2407,
	553, 2407,
	572, 2407,
	-2, 0,
	-1, 732,
	182, 2444,
	495, 2444,
	553, 2444,
	572, 2444,
	-2, 0,
	-1, 739,
	182, 2305,
	495, 2305,
	553, 2305,
	572, 2305,
	-2, 640,
	-1, 768,
	572, 2114,
	575, 2114,
	-2, 894,
	-1, 769,
	572, 2116,
	575, 2116,
	-2, 895,
	-1, 770,
	572, 2115,
	575, 2115,
	-2, 896,
	-1, 771,
	575, 2041,
	-2, 897,
	-1, 794,
	179, 233,
	-2, 0,
	-1, 817,
	44, 2088,
	-2, 0,
	-1, 818,
	532, 1158,
	-2, 962,
	-1, 834,
	4, 1550,
	21, 1550,
	22, 1550,
	23, 1550,
	24, 1550,
	25, 1550,
	26, 1550,
	27, 1550,
	28, 1550,
	30, 1550,
	31, 1550,
	37, 1550,
	42, 1550,
	43, 1550,
	45, 1550,
	46, 1550,
	47, 1550,
	48, 1550,
	49, 1550,
	50, 1550,
	51, 1550,
	53, 1550,
	54, 1550,
	55, 1550,
	56, 1550,
	58, 1550,
	59, 1550,
	60, 1550,
	61, 1550,
	62, 1550,
	63, 1550,
	64, 1550,
	68, 1550,
	69, 1550,
	70, 1550,
	71, 1550,
	73, 1550,
	74, 1550,
	75, 1550,
	79, 1550,
	80, 1550,
	81, 1550,
	82, 1550,
	83, 1550,
	84, 1550,
	85, 1550,
	88, 1550,
	89, 1550,
	90, 1550,
	91, 1550,
	92, 1550,
	94, 1550,
	96, 1550,
	97, 1550,
	98, 1550,
	99, 1550,
	100, 1550,
	101, 1550,
	103, 1550,
	104, 1550,
	105, 1550,
	107, 1550,
	108, 1550,
	116, 1550,
	117, 1550,
	118, 1550,
	119, 1550,
	121, 1550,
	122, 1550,
	123, 1550,
	125, 1550,
	126, 1550,
	127, 1550,
	129, 1550,
	130, 1550,
	132, 1550,
	133, 1550,
	134, 1550,
	137, 1550,
	138, 1550,
	139, 1550,
	141, 1550,
	142, 1550,
	144, 1550,
	145, 1550,
	146, 1550,
	148, 1550,
	149, 1550,
	150, 1550,
	151, 1550,
	152, 1550,
	153, 1550,
	154, 1550,
	155, 1550,
	156, 1550,
	157, 1550,
	158, 1550,
	159, 1550,
	160, 1550,
	161, 1550,
	162, 1550,
	163, 1550,
	165, 1550,
	171, 1550,
	172, 1550,
	173, 1550,
	174, 1550,
	178, 1550,
	180, 1550,
	184, 1550,
	185, 1550,
	186, 1550,
	187, 1550,
	188, 1550,
	189, 1550,
	190, 1550,
	191, 1550,
	192, 1550,
	193, 1550,
	194, 1550,
	195, 1550,
	197, 1550,
	198, 1550,
	200, 1550,
	201, 1550,
	203, 1550,
	204, 1550,
	205, 1550,
	206, 1550,
	207, 1550,
	208, 1550,
	209, 1550,
	210, 1550,
	211, 1550,
	213, 1550,
	214, 1550,
	216, 1550,
	217, 1550,
	218, 1550,
	219, 1550,
	223, 1550,
	224, 1550,
	225, 1550,
	226, 1550,
	227, 1550,
	230, 1550,
	231, 1550,
	232, 1550,
	234, 1550,
	236, 1550,
	237, 1550,
	239, 1550,
	241, 1550,
	242, 1550,
	243, 1550,
	245, 1550,
	249, 1550,
	250, 1550,
	251, 1550,
	252, 1550,
	253, 1550,
	254, 1550,
	256, 1550,
	257, 1550,
	258, 1550,
	260, 1550,
	261, 1550,
	263, 1550,
	264, 1550,
	267, 1550,
	271, 1550,
	272, 1550,
	273, 1550,
	276, 1550,
	277, 1550,
	278, 1550,
	279, 1550,
	281, 1550,
	282, 1550,
	283, 1550,
	284, 1550,
	285, 1550,
	286, 1550,
	287, 1550,
	288, 1550,
	289, 1550,
	290, 1550,
	291, 1550,
	292, 1550,
	293, 1550,
	294, 1550,
	295, 1550,
	296, 1550,
	297, 1550,
	298, 1550,
	299, 1550,
	300, 1550,
	301, 1550,
	302, 1550,
	304, 1550,
	306, 1550,
	307, 1550,
	308, 1550,
	309, 1550,
	310, 1550,
	311, 1550,
	312, 1550,
	313, 1550,
	314, 1550,
	315, 1550,
	316, 1550,
	317, 1550,
	319, 1550,
	321, 1550,
	323, 1550,
	324, 1550,
	326, 1550,
	327, 1550,
	328, 1550,
	329, 1550,
	330, 1550,
	333, 1550,
	337, 1550,
	338, 1550,
	339, 1550,
	342, 1550,
	343, 1550,
	344, 1550,
	346, 1550,
	348, 1550,
	349, 1550,
	350, 1550,
	351, 1550,
	352, 1550,
	353, 1550,
	354, 1550,
	355, 1550,
	356, 1550,
	357, 1550,
	358, 1550,
	359, 1550,
	361, 1550,
	362, 1550,
	363, 1550,
	364, 1550,
	365, 1550,
	366, 1550,
	367, 1550,
	368, 1550,
	369, 1550,
	370, 1550,
	371, 1550,
	372, 1550,
	373, 1550,
	374, 1550,
	375, 1550,
	377, 1550,
	378, 1550,
	380, 1550,
	381, 1550,
	382, 1550,
	383, 1550,
	384, 1550,
	385, 1550,
	386, 1550,
	387, 1550,
	388, 1550,
	389, 1550,
	390, 1550,
	391, 1550,
	393, 1550,
	395, 1550,
	396, 1550,
	397, 1550,
	402, 1550,
	404, 1550,
	405, 1550,
	406, 1550,
	407, 1550,
	408, 1550,
	409, 1550,
	410, 1550,
	411, 1550,
	413, 1550,
	414, 1550,
	415, 1550,
	417, 1550,
	418, 1550,
	419, 1550,
	420, 1550,
	421, 1550,
	422, 1550,
	424, 1550,
	425, 1550,
	426, 1550,
	427, 1550,
	428, 1550,
	429, 1550,
	430, 1550,
	431, 1550,
	432, 1550,
	433, 1550,
	434, 1550,
	436, 1550,
	437, 1550,
	438, 1550,
	439, 1550,
	440, 1550,
	441, 1550,
	443, 1550,
	444, 1550,
	445, 1550,
	446, 1550,
	447, 1550,
	448, 1550,
	450, 1550,
	451, 1550,
	452, 1550,
	453, 1550,
	454, 1550,
	455, 1550,
	456, 1550,
	458, 1550,
	460, 1550,
	461, 1550,
	462, 1550,
	463, 1550,
	464, 1550,
	465, 1550,
	466, 1550,
	467, 1550,
	468, 1550,
	469, 1550,
	470, 1550,
	471, 1550,
	472, 1550,
	473, 1550,
	475, 1550,
	476, 1550,
	478, 1550,
	480, 1550,
	481, 1550,
	482, 1550,
	483, 1550,
	484, 1550,
	485, 1550,
	486, 1550,
	487, 1550,
	488, 1550,
	490, 1550,
	491, 1550,
	492, 1550,
	493, 1550,
	494, 1550,
	496, 1550,
	498, 1550,
	499, 1550,
	500, 1550,
	501, 1550,
	502, 1550,
	503, 1550,
	505, 1550,
	506, 1550,
	507, 1550,
	508, 1550,
	510, 1550,
	511, 1550,
	514, 1550,
	515, 1550,
	516, 1550,
	517, 1550,
	518, 1550,
	519, 1550,
	520, 1550,
	522, 1550,
	525, 1550,
	526, 1550,
	527, 1550,
	528, 1550,
	529, 1550,
	530, 1550,
	532, 1550,
	533, 1550,
	534, 1550,
	535, 1550,
	540, 1550,
	541, 1550,
	542, 1550,
	543, 1550,
	544, 1550,
	545, 1550,
	-2, 0,
	-1, 842,
	253, 366,
	-2, 0,
	-1, 912,
	382, 802,
	441, 802,
	500, 802,
	-2, 0,
	-1, 913,
	382, 801,
	441, 801,
	500, 801,
	-2, 743,
	-1, 917,
	1, 846,
	569, 846,
	571, 846,
	573, 846,
	-2, 0,
	-1, 918,
	1, 778,
	569, 778,
	571, 778,
	573, 778,
	-2, 0,
	-1, 919,
	1, 780,
	569, 780,
	571, 780,
	573, 780,
	-2, 0,
	-1, 920,
	1, 893,
	179, 893,
	569, 893,
	571, 893,
	573, 893,
	-2, 0,
	-1, 928,
	1, 805,
	569, 805,
	571, 805,
	573, 805,
	-2, 0,
	-1, 934,
	1, 846,
	569, 846,
	571, 846,
	573, 846,
	-2, 0,
	-1, 935,
	1, 848,
	569, 848,
	571, 848,
	573, 848,
	-2, 0,
	-1, 936,
	1, 851,
	569, 851,
	571, 851,
	573, 851,
	-2, 0,
	-1, 942,
	1, 868,
	569, 868,
	571, 868,
	573, 868,
	-2, 0,
	-1, 943,
	1, 870,
	569, 870,
	571, 870,
	573, 870,
	-2, 0,
	-1, 993,
	166, 1425,
	179, 1425,
	266, 1425,
	331, 1425,
	-2, 1361,
	-1, 1008,
	166, 1424,
	179, 1424,
	266, 1424,
	331, 1424,
	-2, 1358,
	-1, 1034,
	572, 2113,
	-2, 648,
	-1, 1062,
	5, 2105,
	570, 2103,
	-2, 2094,
	-1, 1070,
	5, 2126,
	570, 2123,
	-2, 2114,
	-1, 1071,
	5, 2127,
	570, 2124,
	-2, 2115,
	-1, 1079,
	572, 2111,
	-2, 2093,
	-1, 1080,
	570, 2526,
	-2, 2112,
	-1, 1103,
	570, 2525,
	-2, 2128,
	-1, 1104,
	5, 1625,
	-2, 2496,
	-1, 1105,
	5, 1626,
	-2, 2497,
	-1, 1106,
	5, 1627,
	-2, 2511,
	-1, 1107,
	5, 1628,
	-2, 2475,
	-1, 1108,
	5, 1629,
	-2, 2509,
	-1, 1109,
	5, 1637,
	-2, 2488,
	-1, 1110,
	5, 1624,
	-2, 2484,
	-1, 1111,
	5, 1624,
	-2, 2483,
	-1, 1112,
	5, 1624,
	-2, 2502,
	-1, 1113,
	5, 1635,
	-2, 2477,
	-1, 1114,
	5, 1640,
	-2, 2476,
	-1, 1115,
	5, 1642,
	-2, 2521,
	-1, 1118,
	5, 1664,
	-2, 2514,
	-1, 1119,
	5, 1656,
	-2, 2515,
	-1, 1120,
	5, 1664,
	-2, 2516,
	-1, 1121,
	5, 1660,
	-2, 2517,
	-1, 1122,
	5, 1610,
	-2, 2489,
	-1, 1123,
	5, 1611,
	-2, 2490,
	-1, 1124,
	5, 1612,
	-2, 2478,
	-1, 1152,
	5, 1647,
	-2, 2522,
	-1, 1153,
	5, 1648,
	-2, 2512,
	-1, 1154,
	5, 1649,
	533, 1649,
	-2, 2479,
	-1, 1155,
	5, 1650,
	533, 1650,
	-2, 2480,
	-1, 1192,
	570, 2123,
	-2, 2114,
	-1, 1193,
	570, 2124,
	-2, 2115,
	-1, 1292,
	182, 2444,
	495, 2444,
	553, 2444,
	572, 2444,
	-2, 0,
	-1, 1295,
	1, 626,
	573, 626,
	-2, 1281,
	-1, 1422,
	404, 2089,
	443, 2089,
	563, 2089,
	-2, 2079,
	-1, 1433,
	574, 2089,
	-2, 2090,
	-1, 1438,
	1, 1155,
	569, 1155,
	571, 1155,
	573, 1155,
	-2, 1410,
	-1, 1486,
	389, 961,
	532, 961,
	-2, 361,
	-1, 1502,
	44, 2087,
	-2, 929,
	-1, 1509,
	1, 1155,
	569, 1155,
	571, 1155,
	573, 1155,
	-2, 1410,
	-1, 1516,
	4, 1179,
	21, 1179,
	22, 1179,
	23, 1179,
	24, 1179,
	25, 1179,
	26, 1179,
	27, 1179,
	28, 1179,
	30, 1179,
	31, 1179,
	37, 1179,
	42, 1179,
	43, 1179,
	45, 1179,
	46, 1179,
	47, 1179,
	48, 1179,
	49, 1179,
	50, 1179,
	51, 1179,
	53, 1179,
	54, 1179,
	55, 1179,
	56, 1179,
	58, 1179,
	59, 1179,
	60, 1179,
	61, 1179,
	62, 1179,
	63, 1179,
	64, 1179,
	68, 1179,
	69, 1179,
	70, 1179,
	71, 1179,
	73, 1179,
	74, 1179,
	75, 1179,
	79, 1179,
	80, 1179,
	81, 1179,
	82, 1179,
	83, 1179,
	84, 1179,
	85, 1179,
	88, 1179,
	89, 1179,
	90, 1179,
	91, 1179,
	92, 1179,
	94, 1179,
	96, 1179,
	97, 1179,
	98, 1179,
	99, 1179,
	100, 1179,
	101, 1179,
	103, 1179,
	104, 1179,
	105, 1179,
	107, 1179,
	108, 1179,
	116, 1179,
	117, 1179,
	118, 1179,
	119, 1179,
	121, 1179,
	122, 1179,
	123, 1179,
	125, 1179,
	126, 1179,
	127, 1179,
	129, 1179,
	130, 1179,
	132, 1179,
	133, 1179,
	134, 1179,
	137, 1179,
	138, 1179,
	139, 1179,
	141, 1179,
	142, 1179,
	144, 1179,
	145, 1179,
	146, 1179,
	148, 1179,
	149, 1179,
	150, 1179,
	151, 1179,
	152, 1179,
	153, 1179,
	154, 1179,
	155, 1179,
	156, 1179,
	157, 1179,
	158, 1179,
	159, 1179,
	160, 1179,
	161, 1179,
	162, 1179,
	163, 1179,
	171, 1179,
	172, 1179,
	173, 1179,
	174, 1179,
	178, 1179,
	180, 1179,
	184, 1179,
	185, 1179,
	186, 1179,
	187, 1179,
	188, 1179,
	189, 1179,
	190, 1179,
	191, 1179,
	192, 1179,
	193, 1179,
	194, 1179,
	195, 1179,
	197, 1179,
	198, 1179,
	200, 1179,
	201, 1179,
	203, 1179,
	204, 1179,
	205, 1179,
	206, 1179,
	207, 1179,
	208, 1179,
	209, 1179,
	210, 1179,
	211, 1179,
	213, 1179,
	214, 1179,
	216, 1179,
	217, 1179,
	218, 1179,
	219, 1179,
	224, 1179,
	225, 1179,
	226, 1179,
	227, 1179,
	230, 1179,
	231, 1179,
	232, 1179,
	234, 1179,
	236, 1179,
	237, 1179,
	239, 1179,
	241, 1179,
	242, 1179,
	243, 1179,
	245, 1179,
	249, 1179,
	250, 1179,
	251, 1179,
	252, 1179,
	253, 1179,
	254, 1179,
	256, 1179,
	257, 1179,
	258, 1179,
	260, 1179,
	261, 1179,
	263, 1179,
	264, 1179,
	267, 1179,
	271, 1179,
	272, 1179,
	273, 1179,
	276, 1179,
	277, 1179,
	278, 1179,
	279, 1179,
	281, 1179,
	282, 1179,
	283, 1179,
	284, 1179,
	285, 1179,
	286, 1179,
	287, 1179,
	288, 1179,
	289, 1179,
	290, 1179,
	291, 1179,
	292, 1179,
	293, 1179,
	294, 1179,
	295, 1179,
	296, 1179,
	297, 1179,
	298, 1179,
	299, 1179,
	300, 1179,
	301, 1179,
	302, 1179,
	304, 1179,
	306, 1179,
	307, 1179,
	308, 1179,
	309, 1179,
	310, 1179,
	311, 1179,
	312, 1179,
	313, 1179,
	314, 1179,
	315, 1179,
	316, 1179,
	317, 1179,
	319, 1179,
	323, 1179,
	324, 1179,
	326, 1179,
	327, 1179,
	328, 1179,
	329, 1179,
	330, 1179,
	333, 1179,
	335, 1179,
	337, 1179,
	338, 1179,
	339, 1179,
	342, 1179,
	343, 1179,
	344, 1179,
	346, 1179,
	348, 1179,
	349, 1179,
	350, 1179,
	351, 1179,
	352, 1179,
	353, 1179,
	354, 1179,
	355, 1179,
	356, 1179,
	357, 1179,
	358, 1179,
	359, 1179,
	361, 1179,
	362, 1179,
	363, 1179,
	364, 1179,
	365, 1179,
	366, 1179,
	367, 1179,
	368, 1179,
	369, 1179,
	370, 1179,
	371, 1179,
	372, 1179,
	373, 1179,
	374, 1179,
	375, 1179,
	377, 1179,
	378, 1179,
	380, 1179,
	381, 1179,
	382, 1179,
	383, 1179,
	384, 1179,
	385, 1179,
	386, 1179,
	387, 1179,
	388, 1179,
	389, 1179,
	390, 1179,
	391, 1179,
	393, 1179,
	395, 1179,
	396, 1179,
	397, 1179,
	402, 1179,
	404, 1179,
	405, 1179,
	406, 1179,
	407, 1179,
	408, 1179,
	409, 1179,
	410, 1179,
	411, 1179,
	413, 1179,
	414, 1179,
	415, 1179,
	417, 1179,
	418, 1179,
	419, 1179,
	420, 1179,
	421, 1179,
	422, 1179,
	424, 1179,
	425, 1179,
	426, 1179,
	427, 1179,
	428, 1179,
	429, 1179,
	430, 1179,
	431, 1179,
	432, 1179,
	433, 1179,
	434, 1179,
	436, 1179,
	437, 1179,
	438, 1179,
	439, 1179,
	440, 1179,
	441, 1179,
	443, 1179,
	444, 1179,
	445, 1179,
	446, 1179,
	447, 1179,
	448, 1179,
	450, 1179,
	451, 1179,
	452, 1179,
	453, 1179,
	454, 1179,
	455, 1179,
	456, 1179,
	458, 1179,
	460, 1179,
	461, 1179,
	462, 1179,
	463, 1179,
	464, 1179,
	465, 1179,
	466, 1179,
	467, 1179,
	468, 1179,
	469, 1179,
	470, 1179,
	471, 1179,
	472, 1179,
	473, 1179,
	475, 1179,
	476, 1179,
	478, 1179,
	480, 1179,
	481, 1179,
	482, 1179,
	483, 1179,
	484, 1179,
	485, 1179,
	486, 1179,
	487, 1179,
	488, 1179,
	490, 1179,
	491, 1179,
	492, 1179,
	493, 1179,
	494, 1179,
	496, 1179,
	498, 1179,
	499, 1179,
	500, 1179,
	501, 1179,
	502, 1179,
	503, 1179,
	505, 1179,
	506, 1179,
	507, 1179,
	508, 1179,
	510, 1179,
	511, 1179,
	514, 1179,
	515, 1179,
	516, 1179,
	517, 1179,
	518, 1179,
	519, 1179,
	520, 1179,
	522, 1179,
	525, 1179,
	526, 1179,
	527, 1179,
	528, 1179,
	529, 1179,
	530, 1179,
	532, 1179,
	533, 1179,
	534, 1179,
	535, 1179,
	540, 1179,
	541, 1179,
	542, 1179,
	543, 1179,
	544, 1179,
	545, 1179,
	-2, 0,
	-1, 1539,
	1, 499,
	569, 499,
	571, 499,
	573, 499,
	-2, 1381,
	-1, 1542,
	4, 2520,
	11, 2520,
	12, 2520,
	14, 2520,
	15, 2520,
	16, 2520,
	17, 2520,
	18, 2520,
	19, 2520,
	21, 2520,
	22, 2520,
	23, 2520,
	24, 2520,
	25, 2520,
	26, 2520,
	27, 2520,
	28, 2520,
	30, 2520,
	31, 2520,
	34, 2520,
	35, 2520,
	37, 2520,
	39, 2520,
	42, 2520,
	43, 2520,
	45, 2520,
	46, 2520,
	47, 2520,
	48, 2520,
	49, 2520,
	50, 2520,
	51, 2520,
	53, 2520,
	54, 2520,
	55, 2520,
	56, 2520,
	58, 2520,
	59, 2520,
	60, 2520,
	61, 2520,
	62, 2520,
	63, 2520,
	64, 2520,
	68, 2520,
	69, 2520,
	70, 2520,
	71, 2520,
	73, 2520,
	74, 2520,
	75, 2520,
	76, 2520,
	79, 2520,
	80, 2520,
	81, 2520,
	82, 2520,
	83, 2520,
	84, 2520,
	85, 2520,
	86, 2520,
	88, 2520,
	89, 2520,
	90, 2520,
	91, 2520,
	92, 2520,
	94, 2520,
	95, 2520,
	96, 2520,
	97, 2520,
	98, 2520,
	99, 2520,
	100, 2520,
	101, 2520,
	103, 2520,
	104, 2520,
	105, 2520,
	106, 2520,
	107, 2520,
	108, 2520,
	116, 2520,
	117, 2520,
	118, 2520,
	119, 2520,
	121, 2520,
	122, 2520,
	123, 2520,
	125, 2520,
	126, 2520,
	127, 2520,
	129, 2520,
	130, 2520,
	132, 2520,
	133, 2520,
	134, 2520,
	137, 2520,
	138, 2520,
	139, 2520,
	141, 2520,
	142, 2520,
	144, 2520,
	145, 2520,
	146, 2520,
	148, 2520,
	149, 2520,
	150, 2520,
	151, 2520,
	152, 2520,
	153, 2520,
	154, 2520,
	155, 2520,
	156, 2520,
	157, 2520,
	158, 2520,
	159, 2520,
	160, 2520,
	161, 2520,
	162, 2520,
	163, 2520,
	167, 2520,
	168, 2520,
	169, 2520,
	170, 2520,
	171, 2520,
	172, 2520,
	173, 2520,
	174, 2520,
	177, 2520,
	178, 2520,
	180, 2520,
	183, 2520,
	184, 2520,
	185, 2520,
	186, 2520,
	187, 2520,
	188, 2520,
	189, 2520,
	190, 2520,
	191, 2520,
	192, 2520,
	193, 2520,
	194, 2520,
	195, 2520,
	197, 2520,
	198, 2520,
	200, 2520,
	201, 2520,
	203, 2520,
	204, 2520,
	205, 2520,
	206, 2520,
	207, 2520,
	208, 2520,
	209, 2520,
	210, 2520,
	211, 2520,
	212, 2520,
	213, 2520,
	214, 2520,
	215, 2520,
	216, 2520,
	217, 2520,
	218, 2520,
	219, 2520,
	221, 2520,
	222, 2520,
	224, 2520,
	225, 2520,
	226, 2520,
	227, 2520,
	229, 2520,
	230, 2520,
	231, 2520,
	232, 2520,
	234, 2520,
	236, 2520,
	237, 2520,
	238, 2520,
	239, 2520,
	240, 2520,
	241, 2520,
	242, 2520,
	243, 2520,
	244, 2520,
	245, 2520,
	247, 2520,
	248, 2520,
	249, 2520,
	250, 2520,
	251, 2520,
	252, 2520,
	253, 2520,
	254, 2520,
	256, 2520,
	257, 2520,
	258, 2520,
	260, 2520,
	261, 2520,
	262, 2520,
	263, 2520,
	264, 2520,
	265, 2520,
	267, 2520,
	271, 2520,
	272, 2520,
	273, 2520,
	276, 2520,
	277, 2520,
	278, 2520,
	279, 2520,
	280, 2520,
	281, 2520,
	282, 2520,
	283, 2520,
	284, 2520,
	285, 2520,
	286, 2520,
	287, 2520,
	288, 2520,
	289, 2520,
	290, 2520,
	291, 2520,
	292, 2520,
	293, 2520,
	294, 2520,
	295, 2520,
	296, 2520,
	297, 2520,
	298, 2520,
	299, 2520,
	300, 2520,
	301, 2520,
	302, 2520,
	304, 2520,
	305, 2520,
	306, 2520,
	307, 2520,
	308, 2520,
	309, 2520,
	310, 2520,
	311, 2520,
	312, 2520,
	313, 2520,
	314, 2520,
	315, 2520,
	316, 2520,
	317, 2520,
	319, 2520,
	322, 2520,
	323, 2520,
	324, 2520,
	326, 2520,
	327, 2520,
	328, 2520,
	329, 2520,
	330, 2520,
	333, 2520,
	337, 2520,
	338, 2520,
	339, 2520,
	340, 2520,
	342, 2520,
	343, 2520,
	344, 2520,
	346, 2520,
	348, 2520,
	349, 2520,
	350, 2520,
	351, 2520,
	352, 2520,
	353, 2520,
	354, 2520,
	355, 2520,
	356, 2520,
	357, 2520,
	358, 2520,
	359, 2520,
	361, 2520,
	362, 2520,
	363, 2520,
	364, 2520,
	365, 2520,
	366, 2520,
	367, 2520,
	368, 2520,
	369, 2520,
	370, 2520,
	371, 2520,
	372, 2520,
	373, 2520,
	374, 2520,
	375, 2520,
	377, 2520,
	378, 2520,
	380, 2520,
	381, 2520,
	382, 2520,
	383, 2520,
	384, 2520,
	385, 2520,
	386, 2520,
	387, 2520,
	388, 2520,
	389, 2520,
	390, 2520,
	391, 2520,
	393, 2520,
	395, 2520,
	396, 2520,
	397, 2520,
	402, 2520,
	403, 2520,
	404, 2520,
	405, 2520,
	406, 2520,
	407, 2520,
	408, 2520,
	409, 2520,
	410, 2520,
	411, 2520,
	413, 2520,
	414, 2520,
	415, 2520,
	416, 2520,
	417, 2520,
	418, 2520,
	419, 2520,
	420, 2520,
	421, 2520,
	422, 2520,
	423, 2520,
	424, 2520,
	425, 2520,
	426, 2520,
	427, 2520,
	428, 2520,
	429, 2520,
	430, 2520,
	431, 2520,
	432, 2520,
	433, 2520,
	434, 2520,
	436, 2520,
	437, 2520,
	438, 2520,
	439, 2520,
	440, 2520,
	441, 2520,
	443, 2520,
	444, 2520,
	445, 2520,
	446, 2520,
	447, 2520,
	448, 2520,
	449, 2520,
	450, 2520,
	451, 2520,
	452, 2520,
	453, 2520,
	454, 2520,
	455, 2520,
	456, 2520,
	458, 2520,
	460, 2520,
	461, 2520,
	462, 2520,
	463, 2520,
	464, 2520,
	465, 2520,
	466, 2520,
	467, 2520,
	468, 2520,
	469, 2520,
	470, 2520,
	471, 2520,
	472, 2520,
	473, 2520,
	475, 2520,
	476, 2520,
	478, 2520,
	480, 2520,
	481, 2520,
	482, 2520,
	483, 2520,
	484, 2520,
	485, 2520,
	486, 2520,
	487, 2520,
	488, 2520,
	490, 2520,
	491, 2520,
	492, 2520,
	493, 2520,
	494, 2520,
	496, 2520,
	498, 2520,
	499, 2520,
	500, 2520,
	501, 2520,
	502, 2520,
	503, 2520,
	505, 2520,
	506, 2520,
	507, 2520,
	508, 2520,
	510, 2520,
	511, 2520,
	514, 2520,
	515, 2520,
	516, 2520,
	517, 2520,
	518, 2520,
	519, 2520,
	520, 2520,
	522, 2520,
	525, 2520,
	526, 2520,
	527, 2520,
	528, 2520,
	529, 2520,
	530, 2520,
	532, 2520,
	533, 2520,
	534, 2520,
	535, 2520,
	540, 2520,
	541, 2520,
	542, 2520,
	543, 2520,
	544, 2520,
	545, 2520,
	546, 2520,
	548, 2520,
	551, 2520,
	552, 2520,
	553, 2520,
	554, 2520,
	555, 2520,
	556, 2520,
	558, 2520,
	559, 2520,
	560, 2520,
	561, 2520,
	562, 2520,
	563, 2520,
	564, 2520,
	565, 2520,
	566, 2520,
	568, 2520,
	571, 2520,
	572, 2520,
	574, 2520,
	575, 2520,
	-2, 0,
	-1, 1547,
	182, 2407,
	495, 2407,
	553, 2407,
	572, 2407,
	-2, 0,
	-1, 1596,
	382, 802,
	441, 802,
	500, 802,
	-2, 0,
	-1, 1622,
	1, 797,
	569, 797,
	571, 797,
	573, 797,
	-2, 0,
	-1, 1623,
	1, 833,
	569, 833,
	571, 833,
	573, 833,
	-2, 0,
	-1, 1624,
	1, 841,
	569, 841,
	571, 841,
	573, 841,
	-2, 0,
	-1, 1625,
	1, 804,
	569, 804,
	571, 804,
	573, 804,
	-2, 0,
	-1, 1627,
	1, 808,
	569, 808,
	571, 808,
	573, 808,
	-2, 0,
	-1, 1633,
	1, 815,
	569, 815,
	571, 815,
	573, 815,
	-2, 0,
	-1, 1661,
	1, 2466,
	569, 2466,
	571, 2466,
	572, 2466,
	573, 2466,
	-2, 866,
	-1, 1662,
	1, 2404,
	569, 2404,
	571, 2404,
	572, 2404,
	573, 2404,
	-2, 867,
	-1, 1679,
	1, 1276,
	573, 1276,
	-2, 1281,
	-1, 1682,
	166, 1424,
	179, 1424,
	266, 1424,
	331, 1424,
	-2, 1362,
	-1, 1776,
	147, 1383,
	166, 1383,
	179, 1383,
	233, 1383,
	266, 1383,
	331, 1383,
	341, 1383,
	512, 1383,
	-2, 1825,
	-1, 1836,
	571, 1975,
	-2, 0,
	-1, 1871,
	147, 1383,
	166, 1383,
	179, 1383,
	233, 1383,
	266, 1383,
	331, 1383,
	341, 1383,
	512, 1383,
	-2, 1511,
	-1, 1920,
	570, 1652,
	-2, 1640,
	-1, 1998,
	1, 628,
	573, 628,
	-2, 1281,
	-1, 2116,
	215, 234,
	-2, 2122,
	-1, 2117,
	215, 235,
	-2, 277,
	-1, 2216,
	1, 799,
	569, 799,
	571, 799,
	573, 799,
	-2, 0,
	-1, 2217,
	1, 835,
	569, 835,
	571, 835,
	573, 835,
	-2, 0,
	-1, 2218,
	1, 843,
	569, 843,
	571, 843,
	573, 843,
	-2, 0,
	-1, 2251,
	1, 817,
	569, 817,
	571, 817,
	573, 817,
	-2, 0,
	-1, 2299,
	421, 1451,
	422, 1451,
	-2, 1685,
	-1, 2330,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1705,
	-1, 2331,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1706,
	-1, 2332,
	95, 0,
	247, 0,
	248, 0,
	555, 0,
	556, 0,
	-2, 1707,
	-1, 2333,
	95, 0,
	247, 0,
	248, 0,
	555, 0,
	556, 0,
	-2, 1708,
	-1, 2334,
	95, 0,
	247, 0,
	248, 0,
	555, 0,
	556, 0,
	-2, 1709,
	-1, 2335,
	95, 0,
	247, 0,
	248, 0,
	555, 0,
	556, 0,
	-2, 1710,
	-1, 2336,
	95, 0,
	247, 0,
	248, 0,
	555, 0,
	556, 0,
	-2, 1711,
	-1, 2337,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1712,
	-1, 2349,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1724,
	-1, 2350,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1725,
	-1, 2351,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1726,
	-1, 2354,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1731,
	-1, 2360,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1735,
	-1, 2362,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1743,
	-1, 2363,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1744,
	-1, 2364,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1745,
	-1, 2365,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1746,
	-1, 2501,
	5, 2126,
	182, 1986,
	570, 2123,
	-2, 2114,
	-1, 2502,
	182, 1987,
	-2, 2471,
	-1, 2503,
	182, 1988,
	-2, 2304,
	-1, 2504,
	182, 1989,
	-2, 2194,
	-1, 2505,
	182, 1990,
	-2, 2245,
	-1, 2506,
	182, 1991,
	-2, 2289,
	-1, 2507,
	182, 1992,
	-2, 2402,
	-1, 2508,
	182, 1993,
	-2, 1808,
	-1, 2578,
	1, 1512,
	2, 1512,
	106, 1512,
	147, 1512,
	166, 1512,
	179, 1512,
	183, 1512,
	199, 1512,
	202, 1512,
	229, 1512,
	233, 1512,
	244, 1512,
	262, 1512,
	266, 1512,
	305, 1512,
	331, 1512,
	335, 1512,
	341, 1512,
	412, 1512,
	416, 1512,
	512, 1512,
	523, 1512,
	537, 1512,
	538, 1512,
	539, 1512,
	549, 1512,
	569, 1512,
	571, 1512,
	573, 1512,
	575, 1512,
	-2, 1511,
	-1, 2591,
	570, 2095,
	-2, 2109,
	-1, 2593,
	53, 1410,
	132, 1410,
	-2, 293,
	-1, 2618,
	570, 1651,
	-2, 1641,
	-1, 2789,
	1, 1155,
	569, 1155,
	571, 1155,
	573, 1155,
	-2, 1410,
	-1, 2949,
	336, 1454,
	-2, 2510,
	-1, 2950,
	336, 1455,
	-2, 2388,
	-1, 2954,
	421, 2052,
	422, 2052,
	-2, 1806,
	-1, 2955,
	421, 2056,
	422, 2056,
	-2, 1807,
	-1, 2956,
	421, 2053,
	422, 2053,
	-2, 1806,
	-1, 2957,
	421, 2057,
	422, 2057,
	-2, 1807,
	-1, 2970,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1733,
	-1, 2971,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1737,
	-1, 2977,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1739,
	-1, 3217,
	1, 625,
	569, 625,
	571, 625,
	573, 625,
	-2, 1281,
	-1, 3358,
	44, 2087,
	-2, 930,
	-1, 3363,
	1, 1155,
	569, 1155,
	571, 1155,
	573, 1155,
	-2, 1410,
	-1, 3463,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1741,
	-1, 3470,
	238, 0,
	240, 0,
	322, 0,
	-2, 1760,
	-1, 3537,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1789,
	-1, 3538,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1790,
	-1, 3539,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1791,
	-1, 3543,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1795,
	-1, 3544,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1796,
	-1, 3545,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1797,
	-1, 3591,
	570, 2096,
	-2, 2110,
	-1, 3742,
	572, 2627,
	-2, 1336,
	-1, 3798,
	238, 0,
	240, 0,
	322, 0,
	-2, 1761,
	-1, 3801,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1764,
	-1, 3802,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1766,
	-1, 3895,
	572, 2111,
	-2, 1189,
	-1, 4024,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1765,
	-1, 4025,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1767,
	-1, 4036,
	238, 0,
	-2, 1798,
	-1, 4197,
	238, 0,
	-2, 1799,
	-1, 4372,
	50, 0,
	212, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 2474,
}

const sqlPrivate = 57344

const sqlLast = 118793

var sqlAct = [...]int{

	258, 2851, 4123, 4231, 2864, 3128, 4253, 4371, 2682, 4077,
	4249, 4354, 3348, 3347, 4382, 4488, 4270, 4343, 4223, 2113,
	4324, 4307, 4383, 4130, 4327, 3891, 4384, 4435, 3781, 1069,
	4064, 4150, 3502, 2723, 4201, 4370, 3976, 3981, 3948, 4082,
	4045, 2741, 3455, 2533, 4013, 3734, 1450, 4139, 2309, 1264,
	3379, 2185, 1257, 3962, 3294, 3930, 1018, 3676, 2963, 3892,
	1907, 1196, 3876, 4164, 1268, 2377, 3373, 1980, 1691, 1009,
	3694, 1250, 3710, 3986, 770, 2752, 3242, 2194, 3343, 1967,
	2053, 737, 3245, 2317, 3696, 1908, 3418, 4041, 3333, 2840,
	2310, 1877, 1328, 2873, 2822, 3420, 2875, 2886, 770, 1419,
	3171, 2812, 3594, 3151, 3837, 3780, 3143, 3111, 2883, 1604,
	2866, 2837, 3134, 2872, 3132, 2835, 844, 2852, 2063, 1846,
	2108, 2107, 2672, 2684, 1562, 3562, 2421, 1068, 2570, 4,
	1822, 2571, 4202, 2314, 2419, 1784, 1426, 2390, 765, 250,
	3239, 1504, 1185, 2086, 3110, 3228, 1262, 2766, 2882, 2102,
	252, 2823, 1017, 171, 2037, 1066, 1176, 2722, 2947, 2093,
	3178, 1311, 1955, 2192, 251, 1978, 1062, 2410, 2551, 2573,
	2024, 1679, 4250, 1236, 2034, 1847, 2374, 2298, 2281, 1259,
	2603, 2279, 1561, 2159, 1071, 1540, 2845, 3345, 2147, 1507,
	1297, 771, 772, 2667, 668, 2413, 2602, 2876, 1856, 1073,
	1179, 1817, 2560, 1158, 1769, 2530, 2391, 2463, 1692, 180,
	2541, 1863, 1693, 2280, 2497, 2282, 181, 1633, 1866, 654,
	837, 2146, 719, 676, 776, 1193, 1445, 1175, 2171, 731,
	2052, 767, 4355, 1538, 1531, 1956, 2303, 1247, 779, 671,
	1047, 1953, 44, 171, 43, 41, 32, 30, 776, 679,
	28, 1156, 1181, 1698, 1188, 906, 2998, 1456, 1678, 926,
	2994, 3576, 779, 3577, 1969, 4557, 4547, 1013, 1969, 2550,
	3398, 694, 1969, 1969, 105, 838, 818, 3130, 3389, 1969,
	1969, 4534, 3083, 3084, 1449, 2550, 4533, 4524, 4506, 4504,
	2550, 2121, 4081, 4081, 4454, 4413, 4406, 4404, 2121, 4414,
	2550, 2550, 3201, 72, 4401, 841, 840, 4398, 4402, 4368,
	4367, 4399, 4366, 2121, 2121, 3388, 1990, 4361, 4360, 73,
	4352, 1990, 1990, 4350, 4081, 3200, 4322, 4081, 4297, 859,
	4081, 1013, 2609, 3083, 3084, 77, 4290, 1173, 4289, 4284,
	2550, 4283, 2550, 4081, 4277, 4081, 4245, 4199, 2121, 4181,
	3940, 2609, 1187, 3769, 4178, 4175, 4132, 4097, 2121, 4081,
	4133, 2121, 4096, 4088, 3186, 3007, 2121, 2121, 3083, 3084,
	4087, 3008, 4080, 4052, 4081, 84, 4081, 2121, 4026, 4005,
	3994, 994, 2609, 1990, 3398, 3925, 1159, 1159, 993, 2550,
	3913, 1191, 1306, 1306, 2550, 3800, 1706, 1707, 3750, 2609,
	3398, 2628, 3415, 3744, 3083, 3084, 3708, 3415, 2121, 3586,
	3709, 3584, 842, 3587, 2543, 3585, 1270, 3569, 2193, 3566,
	1737, 2550, 2748, 1207, 3486, 3482, 104, 1709, 2121, 2550,
	1214, 90, 101, 3414, 90, 1003, 3405, 3415, 1008, 2962,
	3406, 3127, 3122, 3098, 1987, 2550, 2550, 2550, 3089, 3121,
	3074, 1706, 1707, 2550, 3075, 3048, 3040, 1014, 3038, 3049,
	3041, 1708, 2550, 3009, 2889, 1706, 1707, 2550, 1990, 1160,
	2862, 1728, 2861, 2651, 2181, 1737, 2181, 2550, 2605, 2608,
	1725, 2627, 1709, 2609, 1706, 1707, 2600, 91, 2594, 1737,
	2550, 2549, 2121, 2180, 4298, 2550, 1709, 2181, 1162, 3089,
	1163, 2550, 4203, 1208, 2416, 4194, 4182, 1990, 3566, 2542,
	3975, 3940, 3914, 3769, 2121, 1709, 1708, 3406, 2743, 2666,
	2003, 1968, 1984, 1987, 2818, 2057, 2120, 2760, 2664, 1842,
	1708, 3794, 1444, 3665, 3089, 3458, 3436, 1864, 2096, 3390,
	1706, 1707, 222, 1739, 1740, 1741, 1749, 1750, 1751, 1708,
	2587, 3099, 1731, 1732, 1733, 1734, 2586, 1606, 3391, 1449,
	2585, 2584, 1714, 1742, 1737, 2997, 2583, 222, 1164, 1161,
	3089, 1709, 1002, 1001, 1000, 1470, 999, 998, 997, 1755,
	1570, 996, 992, 3083, 3084, 991, 224, 990, 989, 2417,
	2926, 1793, 988, 987, 986, 985, 984, 222, 983, 982,
	3083, 3084, 3099, 981, 980, 1708, 1736, 1738, 979, 978,
	1970, 224, 977, 976, 1970, 1728, 1116, 1714, 1970, 1970,
	904, 903, 902, 901, 1725, 1970, 1970, 900, 899, 898,
	94, 1714, 1723, 1724, 897, 223, 896, 3099, 895, 894,
	893, 224, 892, 891, 890, 889, 216, 888, 887, 886,
	1714, 885, 884, 883, 882, 217, 881, 880, 879, 878,
	223, 1736, 1738, 877, 876, 1729, 875, 874, 873, 3853,
	2418, 3388, 2415, 3099, 872, 1736, 1738, 182, 862, 861,
	3812, 179, 97, 857, 100, 1556, 856, 850, 1706, 1707,
	223, 849, 836, 3988, 3100, 1208, 1731, 1732, 1733, 1734,
	835, 216, 182, 793, 792, 3604, 1714, 791, 222, 790,
	217, 222, 1273, 1071, 782, 781, 843, 1045, 1987, 1709,
	1729, 144, 780, 752, 144, 743, 742, 741, 725, 246,
	245, 244, 182, 39, 1729, 3580, 1071, 243, 242, 241,
	1071, 1746, 240, 239, 1756, 3100, 238, 237, 236, 3089,
	1736, 1738, 224, 1708, 2848, 224, 1331, 1458, 1626, 235,
	1331, 234, 233, 232, 1273, 231, 3089, 1752, 230, 1753,
	229, 228, 227, 4389, 226, 2638, 1723, 1724, 146, 1968,
	3100, 1469, 3416, 1987, 1984, 1071, 225, 1071, 1735, 1071,
	2627, 2274, 1310, 183, 1744, 1273, 1315, 3174, 3020, 3003,
	2799, 223, 2831, 2613, 223, 1464, 2592, 2542, 1730, 1729,
	1301, 2577, 216, 2446, 1434, 216, 3100, 2420, 1825, 3125,
	1273, 217, 2432, 1208, 217, 1824, 1574, 1867, 1429, 2430,
	1424, 3093, 3085, 3086, 3087, 3088, 3090, 3091, 2032, 1560,
	1273, 1825, 1989, 839, 1890, 1273, 182, 1828, 1824, 1258,
	1705, 1754, 3099, 1071, 1714, 1071, 1795, 3126, 1452, 1273,
	1317, 1195, 1458, 1730, 4369, 1071, 1448, 1071, 4260, 1743,
	1823, 4206, 4191, 4075, 1513, 1515, 4185, 1730, 4183, 1241,
	1244, 3092, 3093, 3085, 3086, 3087, 3088, 3090, 3091, 1457,
	1254, 4040, 3990, 2188, 3995, 3974, 1518, 1422, 1786, 3860,
	1433, 1258, 3835, 3834, 1295, 3828, 3083, 3084, 3827, 1436,
	3826, 1324, 1273, 1416, 1421, 3094, 3092, 3093, 3085, 3086,
	3087, 3088, 3090, 3091, 776, 1281, 1016, 2414, 3713, 3819,
	1071, 3818, 1735, 1071, 3816, 1458, 3811, 3808, 779, 3807,
	1726, 1722, 1189, 1719, 1717, 1718, 1710, 1711, 1712, 1713,
	1715, 1716, 1730, 2622, 3085, 3086, 3087, 3088, 3090, 3091,
	1290, 1258, 1258, 3707, 1502, 1447, 1446, 3608, 3607, 3606,
	1543, 1545, 3590, 2187, 3557, 3556, 3555, 3478, 1747, 3474,
	3169, 3118, 3109, 1706, 1707, 1575, 3082, 3079, 3078, 1749,
	1750, 1751, 3076, 171, 171, 3100, 3047, 1788, 1719, 1717,
	1718, 1710, 1711, 1712, 1713, 1715, 1716, 1737, 222, 3663,
	2708, 1463, 3046, 222, 1709, 1710, 1711, 1712, 1713, 1715,
	1716, 3045, 1755, 3042, 1071, 1071, 1071, 1071, 1071, 1071,
	1071, 3039, 3019, 3002, 1710, 1711, 1712, 1713, 1715, 1716,
	1301, 2995, 2833, 1301, 1642, 1787, 2863, 1785, 1708, 2578,
	2403, 1705, 224, 1786, 1172, 1071, 2128, 224, 1728, 2126,
	1704, 1071, 1534, 1683, 4551, 222, 1458, 1725, 4498, 2162,
	4497, 4466, 3089, 3714, 4423, 1745, 4421, 1197, 3504, 4314,
	1720, 1721, 1727, 1748, 1726, 1722, 4252, 1719, 1717, 1718,
	1710, 1711, 1712, 1713, 1715, 1716, 4241, 4238, 4237, 4207,
	3822, 223, 4236, 4217, 3821, 4205, 223, 3123, 4204, 224,
	4179, 1555, 216, 4163, 1014, 4162, 1677, 216, 222, 2380,
	4148, 217, 3166, 1569, 4145, 4093, 217, 3989, 4071, 4038,
	3094, 3092, 3093, 3085, 3086, 3087, 3088, 3090, 3091, 1731,
	1732, 1733, 1734, 182, 1775, 4021, 4020, 4002, 182, 1714,
	3085, 3086, 3087, 3088, 3090, 3091, 1794, 4001, 223, 2611,
	3965, 3941, 224, 1580, 3852, 3714, 1071, 1071, 1071, 216,
	3833, 3770, 1071, 1597, 3764, 3761, 3652, 3651, 217, 1193,
	3638, 1193, 3637, 3635, 1746, 222, 1629, 1756, 3572, 3560,
	3469, 222, 1773, 1736, 1738, 3417, 1331, 3399, 3366, 3305,
	2847, 3273, 2386, 3244, 1071, 3194, 3024, 770, 1188, 3192,
	1188, 223, 3023, 1925, 770, 1853, 3018, 1273, 2986, 1723,
	1724, 1844, 216, 1688, 1680, 1687, 2811, 994, 2832, 224,
	1831, 217, 1706, 1707, 993, 224, 1830, 1744, 222, 1829,
	1712, 1713, 1715, 1716, 1893, 1826, 1818, 1900, 1816, 2620,
	1682, 1827, 1729, 182, 1904, 2619, 1541, 2589, 2582, 222,
	1684, 1951, 2548, 1709, 2428, 1701, 1702, 1889, 1845, 1898,
	1894, 1840, 222, 1839, 1838, 1837, 1836, 1835, 223, 1834,
	1833, 1832, 224, 1273, 223, 1813, 1850, 1851, 1812, 216,
	1071, 1811, 1628, 1874, 1273, 216, 1810, 1708, 217, 1809,
	1808, 1807, 1806, 224, 217, 1805, 1187, 1804, 1187, 1803,
	1802, 1801, 1071, 1819, 1820, 1800, 224, 1799, 1331, 1788,
	182, 1974, 222, 1774, 1976, 1772, 182, 1159, 1767, 1014,
	1981, 223, 1289, 1996, 1983, 171, 1212, 1203, 3968, 1986,
	3856, 1433, 216, 2021, 3804, 1191, 3603, 1191, 1532, 3583,
	3575, 217, 223, 3006, 2580, 4056, 1896, 776, 222, 222,
	3858, 2189, 1537, 216, 776, 223, 224, 1897, 2030, 1995,
	1301, 779, 217, 182, 3602, 1735, 216, 1787, 779, 3083,
	3084, 1872, 2445, 3190, 1770, 217, 3394, 1433, 1865, 1885,
	1306, 2431, 1314, 2023, 182, 1730, 4495, 4487, 2429, 2742,
	1875, 3916, 224, 224, 2023, 3276, 2023, 182, 4239, 1843,
	4135, 4134, 1919, 3993, 1972, 223, 3943, 4186, 3942, 4184,
	3915, 1747, 3855, 3773, 1867, 1884, 216, 1883, 1882, 1880,
	1879, 1869, 3772, 1878, 3771, 217, 3578, 3401, 1901, 3400,
	3456, 4074, 1307, 1273, 1273, 1948, 4140, 1280, 1905, 1596,
	1313, 223, 223, 1331, 3299, 1014, 2727, 182, 3087, 3088,
	3090, 3091, 216, 216, 1998, 3717, 1825, 1999, 974, 2009,
	1675, 217, 217, 1824, 3044, 1306, 1808, 1312, 3043, 1808,
	2968, 2710, 1309, 3650, 3350, 3246, 3349, 1797, 3410, 1643,
	4365, 2208, 1605, 182, 182, 2186, 4131, 2045, 4409, 1306,
	4394, 4381, 3334, 2887, 1606, 2081, 2109, 2085, 3130, 3673,
	2090, 975, 3670, 3656, 3433, 3215, 4042, 3506, 1745, 1455,
	4390, 1462, 1994, 1468, 1992, 2057, 1748, 1726, 1722, 2001,
	1719, 1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716, 2411,
	3012, 2618, 1064, 1841, 1821, 1273, 2026, 1273, 3341, 1273,
	2016, 2156, 1512, 1441, 1284, 1303, 1240, 4403, 3630, 4400,
	3384, 2754, 4232, 3977, 4321, 1273, 1273, 2114, 2118, 2757,
	4214, 2062, 3249, 4478, 3645, 3327, 1273, 2870, 2844, 4452,
	4451, 3450, 4114, 3904, 3686, 4391, 2289, 1554, 1273, 1559,
	1273, 1273, 1273, 1307, 1536, 776, 1584, 1480, 2111, 1568,
	2163, 1573, 2094, 3219, 3300, 1488, 2152, 1012, 972, 779,
	970, 2652, 770, 2670, 2195, 968, 4019, 4546, 966, 963,
	4107, 4099, 1171, 4060, 2257, 3938, 3682, 2255, 2668, 3681,
	3675, 2157, 1442, 1959, 1308, 3669, 1447, 1446, 2670, 2168,
	2207, 3667, 3618, 3617, 3330, 2287, 2155, 955, 3685, 3185,
	2200, 3017, 3016, 2668, 3015, 3014, 2972, 2080, 2764, 2763,
	2089, 2759, 1627, 2750, 2740, 2739, 2736, 2735, 2191, 1641,
	2714, 2119, 2701, 2601, 2361, 2212, 2010, 1681, 3221, 831,
	2015, 2014, 1537, 2459, 2023, 2025, 2458, 1489, 2319, 2612,
	2137, 1304, 1524, 1011, 1523, 1071, 2841, 1071, 2416, 1959,
	1305, 3434, 2272, 2176, 1071, 2216, 1303, 1925, 1925, 1331,
	1959, 1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071,
	1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071,
	1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071,
	1071, 1071, 1071, 1071, 1071, 1071, 2178, 1071, 2196, 1071,
	1071, 1071, 1071, 1534, 2165, 2173, 2273, 2173, 2174, 2139,
	2170, 2291, 776, 2138, 2217, 2204, 1314, 2278, 1622, 4479,
	3191, 1071, 3865, 1582, 1071, 1071, 779, 1290, 2182, 832,
	2183, 960, 1071, 2417, 2288, 1308, 1071, 1716, 1071, 1071,
	1314, 1497, 2315, 2316, 3275, 1522, 1331, 1521, 2199, 2084,
	2018, 1013, 1071, 1071, 1071, 1071, 3246, 1071, 1071, 1071,
	1071, 1071, 1071, 1071, 1071, 2186, 1640, 2392, 2393, 1014,
	2712, 1014, 2269, 2218, 1313, 2224, 1577, 1623, 1484, 1922,
	3864, 2392, 2408, 1071, 1071, 1071, 1071, 1071, 1071, 1071,
	1071, 1071, 1304, 2233, 4482, 2659, 1071, 2376, 1313, 750,
	2266, 1305, 3888, 2251, 2286, 2376, 2593, 2454, 1193, 1652,
	2960, 1226, 2054, 1306, 2418, 1331, 2415, 2302, 2700, 1296,
	2261, 2945, 4018, 2289, 1193, 1030, 2500, 2500, 2514, 1686,
	2392, 3641, 4225, 2534, 2536, 3884, 1624, 1188, 1288, 2540,
	1071, 1331, 1443, 4508, 2699, 2050, 1189, 2277, 1189, 2276,
	2290, 2175, 2283, 1188, 2275, 2221, 1919, 1919, 994, 2215,
	2020, 994, 994, 1639, 1536, 2306, 1881, 3441, 2307, 2308,
	1598, 2055, 2056, 2407, 2731, 3440, 3900, 2268, 2923, 3692,
	2225, 2420, 2287, 2590, 3091, 4483, 2411, 3885, 3290, 3492,
	2565, 1200, 1578, 1706, 1707, 2456, 2724, 2725, 2019, 3495,
	2457, 2051, 870, 2460, 748, 2461, 2462, 2724, 2725, 2724,
	2725, 1541, 3917, 1541, 2384, 4463, 4451, 1737, 3691, 3937,
	2557, 2382, 1010, 2388, 1709, 1508, 1656, 3289, 3283, 666,
	2791, 1198, 3668, 1594, 3666, 1187, 1874, 2959, 829, 2076,
	828, 1273, 1273, 2060, 2405, 1307, 3329, 4227, 1885, 2038,
	3297, 1187, 2758, 2734, 2579, 2039, 661, 863, 1708, 2713,
	2285, 2420, 1159, 1674, 1306, 4469, 2673, 3282, 1728, 2790,
	3493, 2756, 1506, 2929, 1191, 2556, 1606, 1725, 2075, 1606,
	3653, 3218, 2059, 1331, 2686, 4511, 2606, 2641, 2614, 2496,
	1191, 2647, 1258, 2525, 4485, 2753, 2538, 1014, 2509, 1563,
	1635, 2675, 2633, 2755, 2640, 2669, 1014, 2558, 2637, 171,
	1014, 2546, 2547, 2562, 2563, 1925, 834, 833, 2125, 2124,
	1827, 2288, 2648, 4468, 1872, 2372, 2711, 2599, 3467, 2516,
	1301, 4440, 2564, 2604, 2569, 4387, 1201, 2575, 2576, 1258,
	3083, 3084, 3868, 3101, 3102, 3103, 2420, 1331, 3786, 1731,
	1732, 1733, 1734, 3785, 2370, 964, 2265, 964, 1303, 1714,
	3633, 1273, 964, 3796, 2040, 965, 964, 1583, 3381, 2621,
	2256, 2414, 3898, 2254, 1258, 1258, 1071, 1071, 2932, 1071,
	2625, 2044, 2678, 3880, 2643, 1486, 1819, 1820, 3881, 2674,
	2064, 2286, 3382, 2689, 2106, 2632, 2624, 2626, 1014, 2635,
	2717, 2636, 1273, 1736, 1738, 2952, 2953, 2650, 4272, 1638,
	4273, 749, 2068, 2751, 2677, 3098, 2642, 2420, 2644, 4537,
	950, 3627, 1969, 3654, 2732, 4233, 3626, 3230, 2649, 1723,
	1724, 2716, 1273, 2267, 2855, 3642, 2223, 1308, 3233, 3883,
	1483, 2048, 2815, 2653, 1273, 1007, 2738, 2673, 2105, 2884,
	2041, 2046, 4247, 2737, 1508, 3886, 2703, 751, 4491, 1273,
	747, 3261, 1729, 3220, 1422, 1653, 4294, 2065, 2715, 3381,
	1210, 2829, 2676, 1225, 1650, 2983, 4484, 2726, 2728, 2729,
	2730, 2733, 2675, 2691, 2694, 1433, 2681, 2027, 2028, 715,
	783, 3308, 2366, 1814, 1304, 4439, 3188, 864, 865, 1071,
	2892, 2893, 4226, 1305, 2981, 4388, 3089, 2781, 961, 2931,
	2367, 2899, 2900, 2901, 1919, 2368, 2670, 3260, 2048, 2373,
	2358, 776, 3899, 2097, 4015, 2910, 3782, 2911, 2794, 2104,
	2974, 2692, 2796, 2042, 951, 779, 4462, 4031, 2375, 2928,
	2773, 2771, 684, 2908, 4341, 1071, 2907, 2775, 2777, 2767,
	3957, 1071, 1071, 1579, 2869, 4332, 3923, 2915, 3264, 2917,
	2859, 2919, 1447, 2797, 2821, 1766, 871, 3104, 2888, 2069,
	2674, 1651, 1685, 1922, 1922, 2047, 3882, 1013, 2809, 2048,
	2561, 1287, 2905, 171, 2934, 1735, 2936, 2819, 2688, 662,
	2825, 2937, 1199, 2938, 2914, 2677, 2916, 2857, 2918, 2220,
	3022, 1654, 4386, 2214, 2671, 1730, 1071, 1071, 3266, 3099,
	2890, 2850, 1071, 3889, 2894, 1433, 2895, 2860, 2927, 4512,
	2655, 2574, 1258, 3508, 2402, 1071, 1071, 2871, 3231, 3268,
	4499, 1071, 1071, 3967, 2930, 2070, 2071, 1071, 2103, 2657,
	1859, 2858, 2978, 3776, 2383, 3599, 1071, 1071, 1071, 4292,
	1215, 4416, 1071, 2676, 4014, 2839, 1433, 3787, 1433, 2066,
	4417, 2912, 1071, 2913, 663, 2979, 1306, 3452, 3269, 2984,
	1022, 3265, 2658, 2943, 2038, 2975, 1593, 1595, 4254, 1071,
	2039, 2940, 2356, 866, 867, 2359, 1862, 4293, 1655, 4438,
	3000, 3001, 2656, 1610, 2369, 3004, 1581, 4385, 950, 3005,
	2067, 2559, 4489, 4450, 2371, 4448, 2942, 2951, 2941, 664,
	4269, 665, 4147, 2996, 3732, 2302, 3369, 2145, 1852, 1860,
	952, 2769, 2946, 1007, 1213, 2687, 1206, 653, 3712, 2961,
	784, 785, 2783, 1696, 1695, 2355, 3783, 1726, 1722, 2305,
	1719, 1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716, 2058,
	3546, 2043, 3100, 2782, 2774, 2772, 2776, 2778, 2768, 2770,
	2784, 3958, 2011, 3179, 4090, 4538, 4089, 2780, 1970, 1071,
	1071, 1071, 4068, 4156, 1855, 4213, 3153, 2295, 1071, 1071,
	1071, 3831, 3733, 1071, 1695, 2973, 3679, 2008, 4517, 2040,
	4016, 2078, 3629, 1071, 1193, 1331, 3699, 1690, 3240, 1071,
	2787, 1071, 3137, 3138, 4490, 3697, 2044, 3699, 3491, 3370,
	1193, 3362, 951, 2072, 2693, 3236, 3697, 2830, 1959, 1477,
	2824, 2813, 2169, 1188, 2158, 1189, 3120, 3011, 1331, 3903,
	2150, 2131, 2057, 1217, 1694, 3561, 3902, 4492, 4308, 1188,
	1193, 1189, 3139, 1331, 2980, 3453, 851, 4274, 1541, 2100,
	4059, 1859, 3869, 3235, 2982, 3234, 2262, 2057, 953, 2004,
	1925, 4255, 2006, 724, 1331, 3614, 2082, 3154, 3735, 1188,
	787, 786, 2810, 1861, 3982, 2041, 2046, 1228, 1273, 1273,
	3095, 3096, 3097, 4129, 1694, 3159, 2073, 3094, 3092, 3093,
	3085, 3086, 3087, 3088, 3090, 3091, 4415, 1862, 3184, 1696,
	4127, 1071, 2007, 2098, 1855, 1014, 2079, 954, 3149, 4070,
	3173, 2296, 1857, 2718, 3700, 1071, 3152, 1695, 3252, 2357,
	3198, 1187, 3147, 2205, 3168, 3700, 3225, 3226, 788, 789,
	1860, 1922, 1766, 1925, 3248, 3547, 3247, 1187, 2966, 2944,
	3574, 3142, 2099, 3148, 3548, 3189, 3141, 3156, 3157, 1696,
	3250, 1071, 1273, 3254, 3160, 3161, 3209, 3216, 2042, 2552,
	1191, 1625, 3205, 3165, 3177, 3207, 3208, 1187, 3131, 2788,
	3211, 3222, 3212, 1858, 3213, 3832, 1191, 3146, 2779, 2598,
	1301, 1859, 3172, 3115, 3116, 3117, 3788, 1273, 2597, 4516,
	2596, 2595, 3158, 2555, 3704, 2817, 3195, 3196, 952, 3197,
	2047, 1331, 3695, 3145, 2048, 1913, 1191, 3181, 3182, 3183,
	1273, 1267, 1011, 3311, 1530, 1273, 3314, 1694, 3241, 3251,
	3319, 3321, 3256, 1516, 3237, 3258, 1611, 1862, 1433, 1433,
	3278, 4078, 3901, 1528, 2554, 869, 2707, 1517, 1273, 2553,
	3202, 3203, 1857, 3296, 1273, 4220, 1273, 3163, 4124, 3164,
	1331, 3949, 4256, 3155, 2035, 3210, 3615, 770, 3206, 1919,
	1860, 2697, 3298, 1438, 3636, 3411, 2167, 3789, 1273, 3337,
	3346, 3223, 3999, 2747, 3217, 4459, 3306, 3698, 4251, 1273,
	4058, 2719, 2720, 3180, 1861, 3292, 852, 853, 3698, 2045,
	2891, 2795, 2793, 2036, 1473, 1193, 2048, 1587, 4066, 3377,
	4318, 3309, 1433, 1858, 4311, 4221, 2884, 4305, 2800, 3280,
	3838, 2803, 3563, 2805, 3263, 2884, 2427, 2077, 3355, 1509,
	1273, 1273, 3274, 4336, 1188, 2155, 2045, 3285, 3267, 1672,
	3291, 4079, 1919, 3375, 3288, 3286, 953, 3361, 1897, 3287,
	3998, 4067, 1273, 723, 1549, 3307, 2092, 1670, 3281, 3293,
	1668, 3386, 4461, 3301, 3315, 2846, 4405, 3113, 2846, 3322,
	3317, 3328, 4240, 3324, 3376, 3397, 2094, 4037, 3332, 2091,
	3335, 2083, 3316, 3830, 2094, 3703, 2043, 3323, 1647, 1331,
	1778, 1645, 1331, 3112, 1783, 954, 3468, 3431, 4312, 4222,
	3199, 3144, 2716, 1621, 1619, 3339, 1617, 1615, 1613, 3331,
	3435, 3077, 2087, 1603, 1601, 3371, 1526, 776, 2985, 3378,
	2814, 1588, 3359, 1071, 1861, 2426, 2749, 3358, 2709, 1071,
	1071, 779, 1187, 1071, 1071, 1071, 2623, 1071, 2055, 2056,
	2568, 2920, 1892, 1888, 1673, 1565, 1071, 1925, 3429, 2253,
	2084, 3395, 3396, 3413, 3409, 1071, 3383, 1529, 1071, 3449,
	3447, 3444, 3448, 1690, 1331, 3392, 2925, 2924, 2088, 2897,
	2284, 1191, 2264, 1071, 171, 171, 1527, 3407, 868, 3385,
	1634, 1331, 854, 855, 3446, 3437, 2228, 3438, 2130, 3439,
	1952, 1925, 1925, 1071, 1071, 1798, 1071, 1071, 1071, 1576,
	1501, 4380, 2038, 3672, 1959, 1959, 3671, 3471, 2039, 1005,
	3924, 950, 962, 3454, 3310, 4304, 3912, 3980, 3929, 1671,
	3873, 3731, 3723, 3684, 3648, 3443, 3646, 3628, 3365, 3480,
	3481, 3360, 1433, 3351, 3430, 2842, 1007, 1669, 1071, 3488,
	1667, 2828, 1071, 3520, 1925, 1925, 1071, 1071, 1071, 1071,
	1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071,
	1071, 1071, 1071, 1071, 1071, 3451, 1071, 2820, 1646, 3521,
	2807, 1644, 2792, 1071, 1071, 1925, 2315, 3511, 1959, 2639,
	1071, 1006, 1014, 1620, 1618, 2634, 1616, 1614, 1612, 2129,
	2127, 1071, 3476, 1602, 1600, 2110, 1525, 3374, 2095, 2074,
	2061, 2049, 1193, 1193, 3487, 3498, 1071, 1991, 1988, 1985,
	3494, 3496, 3497, 1959, 1982, 3503, 1977, 2040, 1975, 1971,
	1079, 1962, 4436, 3558, 3510, 951, 2252, 4428, 3517, 2315,
	3526, 1188, 1188, 3518, 2044, 1331, 1959, 3519, 1168, 3318,
	1899, 1959, 3592, 1699, 753, 2104, 1919, 3596, 2964, 4452,
	2012, 2270, 4346, 4004, 3997, 3996, 3936, 3861, 2885, 2031,
	3554, 1482, 967, 969, 971, 1169, 254, 254, 254, 2670,
	656, 657, 4158, 672, 656, 672, 682, 3525, 3550, 722,
	3579, 2670, 1071, 740, 2668, 3523, 1922, 4151, 746, 2698,
	1919, 1919, 3597, 3598, 254, 2271, 2695, 3743, 2166, 2057,
	1665, 1666, 2219, 2041, 2046, 1071, 3609, 3610, 3611, 1913,
	1913, 3428, 848, 3559, 3570, 3571, 3551, 1248, 254, 1249,
	3421, 1189, 2248, 3567, 3568, 711, 3595, 4345, 2247, 1187,
	1187, 3428, 2226, 3905, 1071, 1071, 171, 1189, 3931, 2965,
	3421, 1706, 1707, 1919, 1919, 1599, 3612, 3623, 4193, 1700,
	3613, 1706, 1707, 3582, 2103, 3581, 3565, 3839, 3817, 1922,
	758, 3619, 2721, 2702, 1703, 1282, 1071, 1189, 1191, 1191,
	4173, 1170, 1709, 1216, 1919, 4455, 4446, 3657, 667, 3678,
	247, 3605, 4410, 1249, 2806, 2250, 2042, 3720, 1273, 2151,
	1293, 2754, 2762, 2761, 3647, 2746, 3649, 2744, 763, 2706,
	3677, 2704, 1249, 4299, 4264, 4486, 1708, 1925, 2745, 3674,
	819, 952, 2705, 4261, 3423, 4219, 1708, 3661, 3662, 3664,
	4143, 4122, 4165, 3722, 3680, 3711, 3632, 650, 2047, 3422,
	3589, 3364, 2048, 678, 3423, 4166, 1273, 656, 656, 2849,
	2539, 717, 1071, 1997, 1906, 254, 4076, 3871, 3870, 3422,
	1193, 1071, 3655, 3745, 3625, 4338, 3232, 2855, 256, 3683,
	4339, 1273, 1273, 1273, 3752, 760, 4167, 2716, 3187, 4515,
	3083, 3084, 1706, 1707, 4263, 4338, 3736, 1586, 1273, 1188,
	4339, 4465, 3224, 1585, 2884, 3702, 2662, 2663, 2660, 2661,
	3718, 3740, 3241, 1449, 3809, 2422, 3601, 1331, 3270, 3271,
	3737, 2662, 3272, 2660, 2455, 1649, 3719, 3739, 1648, 4144,
	4108, 1258, 3932, 3928, 3927, 3756, 3805, 3419, 3729, 1331,
	3721, 3600, 1071, 1071, 764, 3499, 4169, 3768, 1071, 1071,
	1925, 3312, 1792, 1071, 1071, 3689, 1071, 1791, 3302, 3303,
	1071, 4501, 3304, 4470, 4303, 3724, 4302, 1004, 4168, 953,
	4301, 1071, 4208, 4125, 4103, 4057, 3693, 3738, 4054, 3701,
	2155, 3741, 3960, 3857, 3747, 4170, 3746, 1071, 3767, 3751,
	3749, 3706, 3644, 3639, 3690, 3368, 3790, 1187, 3367, 3803,
	3759, 3757, 3758, 3763, 3766, 3705, 3762, 3257, 3204, 3073,
	3799, 3765, 3072, 3071, 3791, 3070, 755, 3069, 954, 3068,
	3067, 3066, 3065, 3064, 2043, 3063, 1919, 3062, 3061, 3726,
	3060, 3059, 3779, 3784, 3058, 3057, 1191, 3056, 3055, 3054,
	3053, 3052, 1189, 3051, 3050, 2922, 759, 1193, 2904, 2903,
	3424, 3425, 3426, 3427, 2902, 1193, 2834, 2808, 2696, 1331,
	2630, 1331, 1034, 2616, 2615, 2387, 2249, 2246, 1193, 2245,
	3424, 3425, 3426, 3427, 3774, 2244, 1188, 2243, 2184, 716,
	2242, 2164, 2140, 1922, 1188, 1331, 2136, 1913, 2135, 2134,
	2133, 2132, 762, 1965, 1267, 2197, 1964, 1188, 757, 3844,
	1963, 1961, 1664, 1663, 1608, 2198, 3862, 3863, 1607, 1496,
	1495, 3829, 1494, 1493, 1492, 1491, 1193, 2206, 1193, 2209,
	2210, 2211, 2385, 1490, 1485, 1481, 1479, 1922, 1922, 1478,
	1322, 1321, 1320, 1319, 3847, 3906, 1318, 1778, 1286, 1285,
	1235, 754, 1234, 3896, 1233, 1188, 1331, 1188, 1232, 1919,
	1231, 1230, 3841, 3842, 1229, 3867, 1331, 3850, 3843, 3840,
	3846, 1227, 1222, 1221, 1220, 3897, 1219, 3845, 3851, 761,
	3836, 3933, 1218, 3934, 1187, 1151, 3854, 2002, 3908, 3909,
	1922, 1922, 1187, 718, 1273, 1273, 973, 959, 4224, 3887,
	1658, 2521, 89, 171, 756, 1187, 1487, 806, 3950, 83,
	2101, 1273, 3872, 3643, 931, 3907, 4335, 1471, 4246, 814,
	3172, 1922, 1331, 1191, 4320, 3259, 1329, 1273, 3935, 2765,
	1427, 1191, 2227, 1609, 4171, 2229, 3167, 2581, 4291, 4172,
	3813, 3926, 3021, 3945, 1191, 4200, 4030, 2425, 1796, 3124,
	85, 1055, 1193, 1187, 1101, 1187, 3956, 3947, 3955, 3922,
	3874, 3631, 1273, 1273, 1273, 2874, 3953, 3983, 3893, 3952,
	3893, 1910, 3939, 1331, 1912, 1021, 1334, 4000, 3973, 4271,
	3944, 1188, 2013, 1061, 2029, 1071, 1071, 1071, 2022, 2617,
	3911, 3984, 1191, 2499, 1191, 1078, 3951, 3978, 3987, 2155,
	1075, 4003, 3919, 1331, 3921, 3992, 3970, 3966, 1071, 1204,
	1914, 1071, 1071, 1916, 1077, 1258, 1076, 1915, 3985, 3946,
	1815, 1071, 1074, 1909, 1925, 3728, 3727, 2816, 2853, 1071,
	1071, 3393, 1535, 1533, 933, 2017, 2381, 2409, 3010, 1789,
	4022, 3920, 1224, 1036, 1331, 1057, 1273, 4007, 2406, 1189,
	1189, 1211, 1046, 1035, 254, 4006, 254, 254, 3150, 1253,
	254, 1263, 4011, 3129, 3380, 4017, 4027, 3588, 1331, 2294,
	823, 3080, 1283, 3969, 2412, 1202, 1071, 2522, 2515, 1187,
	2511, 740, 3214, 2843, 4039, 1071, 1676, 4009, 4044, 1768,
	2854, 1316, 1039, 1071, 3893, 1925, 2379, 3972, 4033, 1780,
	2990, 2304, 3387, 1071, 3170, 254, 1071, 254, 254, 1253,
	2610, 254, 254, 1263, 4342, 1071, 3507, 2144, 1191, 4050,
	4051, 1167, 1331, 1166, 254, 4086, 1451, 1209, 1165, 4326,
	4053, 4323, 3760, 1273, 1273, 3344, 2005, 2654, 1758, 3352,
	1051, 1432, 4062, 3135, 3412, 1498, 745, 1475, 4083, 1063,
	1757, 4063, 2786, 1922, 2785, 4069, 4216, 4061, 1302, 1300,
	1299, 1298, 4102, 4424, 3346, 4536, 1500, 3640, 1263, 221,
	4137, 1331, 254, 254, 1273, 1253, 4094, 4095, 4128, 2958,
	4092, 4113, 1697, 1689, 218, 4105, 4100, 220, 219, 4104,
	3961, 3593, 1193, 1193, 740, 3176, 254, 254, 4408, 3659,
	4109, 3336, 4118, 4111, 4112, 4110, 23, 22, 21, 109,
	42, 1071, 1071, 4126, 4152, 4117, 20, 4176, 4177, 848,
	125, 1188, 1188, 1919, 4142, 4121, 4157, 4155, 1071, 1925,
	2646, 1267, 143, 142, 4136, 4141, 117, 4161, 4153, 141,
	140, 139, 4154, 138, 145, 137, 4149, 4180, 136, 4160,
	131, 3987, 135, 4174, 4189, 4190, 4159, 134, 4120, 133,
	132, 130, 1071, 129, 124, 1071, 128, 127, 126, 123,
	122, 121, 1193, 4115, 120, 119, 1922, 4188, 118, 116,
	115, 114, 113, 112, 1193, 111, 110, 4212, 3725, 4198,
	4192, 736, 254, 733, 1919, 61, 60, 1189, 108, 107,
	19, 1188, 40, 4209, 14, 4210, 65, 2299, 66, 4235,
	254, 18, 4116, 1188, 13, 4211, 35, 88, 99, 1187,
	1187, 98, 36, 96, 1034, 1071, 1071, 1959, 1034, 95,
	34, 4228, 4229, 17, 3893, 3893, 1193, 16, 4234, 1193,
	15, 93, 1913, 1273, 1414, 92, 33, 31, 1414, 1433,
	2789, 11, 9, 1273, 1273, 3775, 4242, 4244, 1191, 1191,
	2521, 4266, 8, 37, 4268, 1188, 1891, 1876, 1188, 4282,
	1273, 12, 5, 176, 175, 178, 4262, 4257, 174, 177,
	87, 4258, 4259, 4243, 1071, 1071, 173, 172, 86, 29,
	4276, 10, 168, 4138, 1071, 3716, 80, 170, 169, 1187,
	4279, 167, 4280, 4281, 166, 165, 4141, 4275, 81, 78,
	164, 1187, 82, 163, 3893, 1913, 4313, 4286, 79, 4285,
	162, 4287, 27, 4288, 4317, 4278, 3893, 4295, 1919, 1071,
	1071, 6, 1071, 4296, 4300, 64, 7, 4012, 1191, 3432,
	2521, 2521, 102, 103, 1258, 38, 2517, 76, 2898, 75,
	1191, 4344, 74, 4340, 26, 4325, 4328, 4337, 63, 25,
	4316, 206, 4315, 1187, 205, 204, 1187, 203, 202, 201,
	196, 195, 4329, 4359, 1189, 4333, 200, 4363, 3893, 198,
	197, 3893, 1189, 1071, 1071, 1071, 4330, 4364, 2033, 4347,
	4334, 4362, 199, 194, 4351, 1189, 209, 208, 213, 212,
	211, 210, 1191, 4356, 4358, 1191, 4357, 207, 656, 215,
	193, 192, 1071, 190, 4392, 186, 4397, 185, 189, 4376,
	4377, 191, 4379, 4378, 188, 187, 184, 214, 160, 254,
	161, 254, 71, 159, 158, 254, 157, 4411, 156, 155,
	4418, 154, 153, 1189, 4420, 1189, 70, 24, 1451, 1253,
	254, 4393, 254, 2, 1, 4431, 0, 254, 1451, 672,
	4433, 4422, 4419, 1071, 254, 1451, 0, 0, 0, 0,
	4437, 4395, 4432, 0, 0, 0, 0, 0, 0, 1966,
	4427, 4426, 0, 0, 2521, 2521, 2521, 0, 0, 0,
	4457, 254, 4453, 4425, 4443, 4444, 0, 4449, 254, 0,
	4447, 4445, 4429, 4430, 4407, 0, 0, 4456, 4434, 0,
	4458, 0, 1193, 4344, 1193, 4475, 4472, 4460, 4325, 4471,
	4464, 4328, 4467, 2122, 0, 4481, 0, 0, 0, 4473,
	0, 0, 4480, 0, 4477, 3959, 0, 4474, 740, 4476,
	1922, 1188, 0, 1188, 2987, 2988, 3971, 0, 0, 4494,
	0, 0, 0, 0, 0, 0, 0, 0, 4493, 0,
	0, 4496, 0, 0, 0, 0, 4503, 0, 3991, 1189,
	0, 0, 0, 0, 0, 4502, 4505, 1071, 1071, 4507,
	0, 0, 4510, 4509, 4513, 0, 1071, 0, 1071, 1071,
	0, 0, 0, 0, 4522, 0, 4519, 0, 4527, 4525,
	4530, 0, 0, 4500, 4526, 4531, 0, 2855, 4528, 0,
	0, 1922, 0, 4532, 0, 4529, 0, 0, 4535, 1913,
	0, 0, 4542, 0, 4541, 0, 4543, 0, 4544, 4539,
	0, 4520, 4521, 4549, 4545, 4548, 4540, 1706, 1707, 1187,
	0, 1187, 1071, 4550, 0, 0, 0, 0, 0, 4556,
	4552, 4558, 0, 4553, 3893, 4555, 3893, 0, 4559, 0,
	0, 1737, 0, 1913, 1913, 72, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1191, 0,
	1191, 73, 0, 0, 1414, 4554, 0, 0, 3106, 3107,
	3108, 0, 254, 0, 0, 254, 0, 77, 0, 0,
	0, 0, 1708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1913, 1913, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 84, 0, 0,
	0, 0, 0, 0, 0, 1922, 0, 1913, 254, 0,
	0, 0, 254, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 3083, 3084, 0,
	3101, 3102, 3103, 0, 842, 0, 0, 0, 254, 2318,
	254, 0, 0, 0, 656, 0, 254, 0, 104, 0,
	3795, 0, 0, 90, 101, 0, 0, 0, 740, 0,
	1034, 0, 848, 1714, 0, 2948, 1414, 0, 0, 1189,
	1189, 0, 0, 0, 0, 3083, 3084, 0, 3101, 3102,
	3103, 0, 0, 0, 0, 0, 0, 254, 0, 1253,
	254, 0, 0, 0, 0, 0, 3083, 3084, 3473, 3101,
	3102, 3103, 3098, 0, 740, 0, 0, 1736, 1738, 91,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 254, 0, 254, 2423, 254, 0, 254,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2517, 2517, 0, 0, 1189,
	3098, 0, 2258, 0, 0, 2259, 0, 2260, 0, 0,
	0, 1189, 0, 0, 0, 0, 1729, 0, 0, 254,
	0, 3098, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3325, 0, 0,
	0, 0, 722, 3089, 0, 0, 740, 0, 0, 2521,
	2521, 1414, 0, 0, 0, 0, 4248, 0, 0, 0,
	0, 0, 0, 1189, 0, 0, 1189, 3356, 0, 0,
	0, 2591, 0, 0, 0, 0, 0, 4265, 3363, 0,
	0, 0, 2607, 0, 0, 0, 0, 0, 0, 1913,
	0, 3089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 1854, 3104, 0, 0, 0, 0, 0,
	0, 0, 3089, 0, 0, 0, 0, 0, 0, 3403,
	3404, 0, 0, 0, 0, 0, 0, 0, 0, 3083,
	3084, 0, 3101, 3102, 3103, 0, 0, 0, 0, 2517,
	2517, 2517, 0, 0, 0, 0, 3099, 0, 0, 0,
	0, 0, 3104, 179, 97, 0, 100, 0, 0, 1730,
	0, 2521, 2521, 2521, 2521, 2521, 2521, 2521, 2521, 2521,
	2521, 2521, 2521, 2521, 2521, 2521, 2521, 2521, 2521, 2521,
	222, 2521, 0, 0, 0, 0, 0, 0, 843, 0,
	0, 0, 0, 144, 3099, 4348, 0, 0, 4349, 0,
	0, 0, 0, 656, 3098, 0, 0, 0, 0, 0,
	0, 0, 1913, 2665, 0, 3099, 0, 0, 254, 0,
	0, 0, 0, 0, 224, 0, 0, 656, 0, 0,
	0, 0, 0, 0, 254, 0, 656, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	146, 0, 0, 3464, 3465, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 1263, 183, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 1020, 0, 3100,
	0, 0, 0, 217, 0, 3089, 1718, 1710, 1711, 1712,
	1713, 1715, 1716, 0, 0, 0, 0, 1414, 0, 0,
	254, 1263, 0, 672, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 2629, 0, 0, 0, 0, 0, 254,
	0, 0, 254, 3105, 0, 0, 254, 3100, 254, 1189,
	0, 1189, 0, 1253, 0, 254, 254, 0, 1263, 1263,
	2645, 0, 0, 0, 0, 254, 3104, 0, 3100, 0,
	0, 0, 0, 0, 0, 3527, 3528, 3529, 3530, 3531,
	3532, 3533, 3534, 3535, 3536, 3537, 3538, 3539, 3540, 3541,
	3542, 3543, 3544, 3545, 0, 3549, 0, 0, 0, 0,
	0, 0, 0, 0, 1414, 0, 0, 0, 3099, 2685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 3095, 3096, 3097,
	0, 0, 254, 0, 3094, 3092, 3093, 3085, 3086, 3087,
	3088, 3090, 3091, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 1414, 0, 3095, 3096, 3097, 0, 0,
	0, 0, 3094, 3092, 3093, 3085, 3086, 3087, 3088, 3090,
	3091, 254, 2798, 0, 0, 0, 3095, 3096, 3097, 1414,
	0, 0, 0, 3094, 3092, 3093, 3085, 3086, 3087, 3088,
	3090, 3091, 0, 0, 0, 0, 1451, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 3888, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 2838, 0, 0, 0,
	0, 0, 1706, 1707, 0, 0, 2685, 0, 656, 0,
	0, 3100, 0, 0, 0, 0, 0, 2867, 848, 3884,
	2685, 2685, 0, 3877, 0, 0, 1737, 0, 0, 0,
	0, 0, 0, 1709, 0, 254, 0, 0, 0, 0,
	3875, 0, 0, 0, 0, 0, 1913, 3687, 0, 3879,
	0, 0, 0, 0, 254, 1253, 254, 0, 0, 1451,
	0, 1451, 1263, 254, 2517, 2517, 1253, 1708, 1253, 0,
	1253, 3885, 0, 0, 0, 0, 0, 1728, 0, 0,
	0, 0, 0, 0, 0, 0, 1725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 254, 254, 254,
	1253, 1414, 1253, 254, 0, 254, 0, 0, 0, 0,
	0, 0, 3878, 0, 0, 0, 0, 1913, 0, 0,
	3753, 3754, 3755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 1267, 0, 3095,
	3096, 3097, 0, 0, 254, 0, 3094, 3092, 3093, 3085,
	3086, 3087, 3088, 3090, 3091, 0, 0, 0, 1731, 1732,
	1733, 1734, 0, 0, 0, 1414, 0, 0, 1714, 0,
	0, 0, 0, 0, 0, 0, 2517, 2517, 2517, 2517,
	2517, 2517, 2517, 2517, 2517, 2517, 2517, 2517, 2517, 2517,
	2517, 2517, 2517, 2517, 2517, 3136, 2517, 0, 1706, 1707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 1738, 0, 0, 0, 0, 0, 0,
	0, 0, 1737, 0, 0, 0, 0, 0, 3162, 1709,
	0, 0, 0, 1451, 0, 0, 0, 0, 1723, 1724,
	0, 0, 0, 3175, 0, 0, 0, 0, 0, 0,
	0, 1913, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1708, 3193, 0, 0, 3880, 0, 0,
	0, 1729, 3881, 1728, 0, 0, 0, 0, 0, 0,
	0, 0, 1725, 0, 0, 0, 1278, 72, 0, 0,
	0, 3083, 3084, 0, 3101, 3102, 3103, 0, 0, 0,
	0, 0, 0, 73, 0, 0, 0, 0, 0, 1020,
	0, 0, 0, 1020, 3472, 0, 0, 0, 0, 77,
	0, 0, 0, 3883, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3462, 0, 0, 0, 0, 0, 3886,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1731, 1732, 1733, 1734, 1453, 84,
	1459, 0, 1465, 0, 1714, 0, 3098, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 2521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 1735, 656, 842, 0, 0, 0,
	656, 0, 0, 656, 0, 0, 656, 656, 1736, 1738,
	104, 72, 656, 0, 1730, 90, 101, 0, 0, 0,
	254, 0, 0, 1267, 0, 0, 1552, 73, 1557, 0,
	0, 2521, 1451, 0, 1723, 1724, 0, 0, 1566, 0,
	1571, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	3175, 0, 0, 0, 1451, 0, 0, 3089, 0, 0,
	3882, 0, 0, 0, 0, 254, 0, 1729, 0, 254,
	254, 91, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 0, 0, 0,
	0, 4008, 0, 4010, 0, 0, 0, 3889, 2685, 2685,
	254, 0, 3229, 1630, 0, 0, 1636, 0, 0, 0,
	0, 2685, 0, 0, 3243, 0, 0, 0, 3104, 0,
	842, 0, 2685, 3243, 0, 2685, 3243, 0, 0, 3243,
	0, 0, 0, 0, 104, 0, 0, 0, 0, 90,
	101, 0, 254, 254, 3229, 254, 1726, 1722, 0, 1719,
	1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716, 0, 0,
	3099, 0, 0, 0, 0, 3229, 254, 0, 3295, 3295,
	0, 1253, 0, 0, 0, 4055, 0, 0, 0, 1427,
	4036, 0, 1329, 2521, 0, 2685, 0, 3313, 2685, 3229,
	1735, 0, 2685, 2685, 3229, 91, 0, 1759, 1760, 1761,
	1762, 1763, 1764, 1765, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 1414, 94, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 0, 1790, 4072, 0, 254, 3340, 0,
	0, 3342, 2685, 0, 0, 254, 1414, 0, 0, 254,
	0, 1263, 0, 0, 3484, 0, 0, 0, 0, 0,
	0, 1414, 4119, 0, 0, 179, 97, 0, 100, 0,
	2838, 3500, 72, 1253, 0, 254, 0, 0, 2685, 0,
	656, 0, 1414, 0, 0, 0, 0, 2685, 73, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	843, 0, 0, 3100, 77, 144, 0, 0, 254, 2838,
	0, 0, 2838, 0, 0, 0, 0, 0, 0, 1034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1034, 0, 0, 224, 0, 94, 1848,
	1848, 1848, 1726, 1722, 84, 1719, 1717, 1718, 1710, 1711,
	1712, 1713, 1715, 1716, 0, 0, 0, 3442, 0, 0,
	1253, 254, 146, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 842, 0, 0, 0, 223, 0, 4197, 0, 179,
	97, 0, 100, 0, 0, 104, 216, 254, 0, 0,
	90, 101, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 1414,
	0, 0, 0, 0, 843, 3591, 0, 182, 0, 144,
	0, 3095, 3096, 3097, 0, 0, 0, 0, 3094, 3092,
	3093, 3085, 3086, 3087, 3088, 3090, 3091, 0, 0, 0,
	0, 0, 0, 3505, 0, 0, 91, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 1414, 0,
	0, 1706, 1707, 1103, 0, 0, 0, 0, 0, 0,
	0, 0, 1267, 1267, 0, 1020, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 1737, 0, 0, 0, 1267,
	0, 183, 1709, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 2517, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 1708, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 254, 0, 0, 2517, 0, 0, 0,
	0, 0, 0, 0, 3083, 3084, 0, 3101, 3102, 3103,
	0, 0, 0, 0, 656, 656, 0, 1414, 0, 94,
	1414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1451, 1451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1451, 1451, 1451, 0, 0, 0, 0, 1714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 97, 0, 100, 0, 0, 0, 0, 0, 3098,
	0, 0, 0, 3295, 0, 0, 0, 0, 0, 0,
	0, 0, 1414, 0, 0, 0, 0, 222, 0, 0,
	0, 1736, 1738, 0, 0, 843, 0, 0, 0, 1414,
	144, 0, 0, 0, 0, 0, 0, 0, 1194, 0,
	0, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 2517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1729, 0, 254, 0, 0, 0, 0, 146, 0, 0,
	3089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3229, 254, 183, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 254, 0, 0, 0, 0, 0, 0, 0,
	217, 254, 0, 0, 0, 0, 254, 0, 0, 0,
	254, 0, 0, 0, 1183, 0, 0, 0, 0, 0,
	0, 3104, 1544, 0, 0, 0, 0, 0, 0, 2685,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 2867,
	2867, 3849, 0, 0, 0, 848, 848, 2685, 0, 0,
	0, 2838, 2838, 1414, 0, 848, 2685, 0, 0, 0,
	249, 249, 652, 3099, 0, 3859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 2293, 0,
	2297, 0, 0, 0, 0, 0, 0, 2311, 0, 0,
	0, 0, 0, 1730, 2320, 2321, 2322, 2323, 2324, 2325,
	2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335,
	2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345,
	2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 0,
	2360, 0, 2362, 2363, 2364, 2365, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3814, 0, 0, 0, 0,
	0, 0, 0, 0, 2389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 0, 2404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2434, 2437, 2440, 2443, 0,
	2447, 2448, 2449, 2450, 2451, 2452, 2453, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3100, 254, 0, 0,
	0, 0, 0, 1451, 0, 254, 0, 0, 2513, 0,
	2524, 2526, 2531, 0, 0, 0, 0, 0, 254, 1717,
	1718, 1710, 1711, 1712, 1713, 1715, 1716, 0, 0, 0,
	0, 0, 0, 1329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1706, 1707, 0, 0, 0, 2685, 2685,
	0, 3295, 0, 0, 0, 0, 0, 0, 0, 2685,
	0, 0, 0, 4028, 0, 0, 3895, 1737, 3895, 1451,
	0, 0, 0, 0, 1709, 0, 0, 2685, 0, 3243,
	0, 0, 1451, 1451, 254, 3229, 1706, 1707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3229, 254, 3229,
	254, 0, 0, 0, 4028, 1414, 0, 0, 1708, 0,
	1737, 0, 0, 2685, 0, 2685, 254, 1709, 1728, 0,
	0, 0, 0, 0, 3095, 3096, 3097, 1414, 2318, 0,
	0, 3094, 3092, 3093, 3085, 3086, 3087, 3088, 3090, 3091,
	2685, 0, 0, 0, 0, 3963, 0, 0, 0, 0,
	0, 1708, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 1728, 0, 254, 0, 0, 0, 0, 0, 0,
	1725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2318, 0, 0, 1194, 0, 0, 0, 0,
	0, 0, 3895, 0, 0, 1451, 0, 0, 0, 1731,
	1732, 1733, 1734, 0, 0, 0, 0, 0, 0, 1714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3461, 0, 0, 0, 0, 0, 0, 0, 1194,
	0, 0, 0, 1194, 0, 0, 0, 1194, 0, 0,
	0, 0, 1731, 1732, 1733, 1734, 0, 1414, 0, 1414,
	0, 0, 1714, 1736, 1738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1194, 0,
	0, 0, 0, 1414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1194, 0, 0, 1736, 1738, 0, 2801,
	2802, 0, 2804, 0, 2685, 0, 3243, 0, 0, 4065,
	0, 0, 1729, 1194, 0, 0, 0, 254, 1194, 0,
	0, 0, 1723, 1724, 4084, 0, 4084, 0, 0, 0,
	0, 0, 1194, 0, 1414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1414, 740, 0, 0, 0, 0,
	0, 0, 0, 0, 1253, 1729, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3229, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1194, 0, 0, 4065, 0,
	0, 0, 0, 0, 0, 0, 2685, 0, 0, 0,
	1414, 0, 0, 0, 0, 0, 0, 0, 4146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1451, 0, 2921, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3895, 3895, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	254, 1414, 0, 0, 0, 1730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3505, 1759, 1760, 0, 0, 1735, 0,
	0, 1414, 0, 0, 0, 0, 0, 0, 0, 3295,
	0, 3295, 0, 0, 0, 0, 0, 4065, 1730, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1239, 0,
	1239, 1239, 3895, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1414, 0, 3895, 0, 0, 0, 0, 2970,
	2971, 0, 0, 0, 0, 2977, 0, 0, 0, 1706,
	1707, 0, 0, 0, 0, 254, 1414, 0, 0, 0,
	0, 0, 0, 0, 2991, 2992, 0, 0, 0, 1326,
	2404, 0, 0, 1737, 3963, 1431, 0, 0, 0, 2999,
	1709, 0, 0, 0, 0, 0, 3895, 0, 254, 3895,
	0, 0, 0, 0, 1034, 3013, 0, 0, 0, 3243,
	1719, 1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716, 0,
	1414, 0, 3025, 0, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1728, 1451, 0, 1451, 0, 0,
	0, 0, 0, 1725, 0, 0, 0, 0, 0, 0,
	1726, 1722, 0, 1719, 1717, 1718, 1710, 1711, 1712, 1713,
	1715, 1716, 0, 0, 0, 0, 0, 0, 4309, 1414,
	1550, 1551, 1194, 0, 1194, 0, 0, 0, 0, 0,
	0, 4084, 0, 0, 254, 0, 0, 0, 0, 1194,
	0, 0, 0, 0, 2976, 0, 0, 0, 0, 0,
	0, 0, 0, 2685, 0, 0, 1926, 0, 0, 0,
	1194, 0, 0, 0, 0, 1731, 1732, 1733, 1734, 0,
	254, 2531, 2531, 2531, 0, 1714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 3140, 0, 0, 0, 0, 3505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1451, 1657, 0, 0, 1736,
	1738, 0, 0, 0, 0, 0, 1194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1194, 0, 0,
	0, 0, 254, 0, 0, 1723, 1724, 0, 0, 2492,
	2493, 2494, 2495, 2488, 2489, 2490, 2491, 1451, 0, 0,
	0, 1194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1034, 1034, 0, 0, 0, 1729, 0,
	0, 4065, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1020, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1020, 0,
	0, 0, 0, 0, 0, 2685, 0, 0, 0, 0,
	0, 0, 3895, 0, 3895, 0, 0, 0, 0, 2468,
	2469, 2470, 2471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3262, 0, 0, 0, 0, 0,
	0, 0, 2480, 2481, 2482, 2483, 2476, 2477, 2478, 2479,
	2484, 2485, 2486, 2487, 0, 0, 0, 1451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1034, 0,
	0, 0, 0, 0, 0, 0, 1194, 1194, 0, 0,
	0, 0, 0, 0, 0, 0, 1194, 0, 0, 0,
	2867, 1735, 0, 0, 0, 0, 0, 0, 0, 2685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1730, 0, 0, 2867, 2464, 2465, 2466, 2467, 2472,
	2473, 2474, 2475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1886,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1895, 0, 1431, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1194, 0,
	1194, 0, 1194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1194, 1194,
	0, 0, 0, 0, 0, 1239, 0, 0, 0, 1194,
	0, 0, 1431, 0, 0, 0, 0, 0, 0, 0,
	0, 1194, 0, 1194, 1194, 1194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1726, 1722, 0, 1719, 1717, 1718, 1710,
	1711, 1712, 1713, 1715, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2311, 0, 0, 0,
	0, 0, 3459, 3460, 0, 0, 3463, 0, 0, 0,
	3466, 0, 0, 0, 0, 0, 0, 0, 0, 3470,
	0, 0, 0, 0, 1706, 1707, 0, 0, 3477, 0,
	0, 3140, 0, 0, 0, 0, 0, 0, 0, 0,
	1926, 1926, 1194, 0, 0, 0, 3489, 0, 1737, 0,
	0, 0, 0, 1706, 1707, 1709, 1739, 1740, 1741, 1749,
	1750, 1751, 0, 0, 0, 0, 3512, 3513, 0, 3514,
	3515, 3516, 0, 0, 0, 0, 1742, 1737, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 0, 0, 1708,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 1728,
	0, 0, 0, 0, 0, 0, 0, 0, 1725, 0,
	0, 3522, 0, 0, 0, 3524, 0, 0, 1708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1728, 1194,
	0, 0, 0, 0, 0, 0, 0, 1725, 0, 0,
	0, 0, 0, 0, 0, 0, 3552, 3553, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2969,
	0, 0, 2142, 0, 3564, 0, 2149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2161, 0, 3573,
	1731, 1732, 1733, 1734, 0, 0, 0, 0, 0, 0,
	1714, 1194, 2172, 0, 2172, 0, 0, 0, 1194, 0,
	2179, 0, 0, 0, 0, 0, 0, 1194, 0, 1731,
	1732, 1733, 1734, 0, 0, 0, 0, 0, 0, 1714,
	0, 0, 0, 0, 1194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 1738, 0, 0, 0, 0,
	0, 2149, 0, 0, 2202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 3616, 0, 1756, 0, 0,
	1723, 1724, 0, 1736, 1738, 2222, 0, 0, 0, 0,
	0, 702, 0, 0, 0, 0, 0, 2234, 3634, 2236,
	1752, 2238, 1753, 2240, 0, 2241, 0, 0, 0, 1723,
	1724, 685, 0, 1729, 0, 0, 0, 686, 0, 0,
	0, 0, 0, 1067, 0, 0, 0, 1744, 3658, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1729, 2263, 1194, 1194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 688, 0, 0, 253,
	253, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 1194, 689, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 777, 0, 0,
	0, 0, 1743, 0, 0, 0, 0, 708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1926, 0,
	0, 777, 0, 0, 0, 0, 690, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 1735, 0, 0, 0,
	0, 0, 0, 0, 3748, 0, 0, 0, 0, 691,
	1194, 0, 0, 0, 0, 0, 1730, 0, 0, 0,
	0, 0, 0, 0, 1194, 1735, 0, 0, 0, 0,
	692, 0, 0, 693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1730, 0, 0, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1194, 0, 0, 0, 0,
	0, 1747, 707, 0, 0, 3792, 3793, 0, 0, 0,
	0, 3797, 3798, 0, 0, 0, 3801, 3802, 0, 0,
	0, 0, 0, 3806, 0, 1194, 0, 0, 0, 0,
	0, 0, 0, 0, 3810, 0, 0, 1194, 1190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3815, 0, 1194, 0, 0, 0, 0, 0, 0, 0,
	0, 704, 2588, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1726, 1722,
	0, 1719, 1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 1745, 0,
	0, 0, 0, 1720, 1721, 1727, 1748, 1726, 1722, 0,
	1719, 1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716, 0,
	0, 0, 0, 3034, 0, 0, 0, 3035, 714, 0,
	695, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2631, 0, 0, 1239, 0, 0, 0,
	1239, 0, 1239, 0, 0, 0, 0, 0, 715, 0,
	696, 0, 0, 0, 0, 0, 0, 0, 0, 2161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 716, 0, 0, 0,
	0, 0, 0, 697, 0, 0, 0, 712, 713, 710,
	0, 0, 0, 0, 0, 705, 0, 0, 698, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 699, 706, 0,
	0, 0, 0, 0, 0, 0, 0, 700, 0, 0,
	1431, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 701, 0, 0, 0, 0, 709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 703, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2149, 0, 0, 0, 0, 0, 0,
	0, 2161, 0, 0, 0, 0, 0, 0, 4023, 4024,
	4025, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2311, 0, 0, 4034, 4035, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2896,
	0, 0, 4043, 4046, 0, 0, 0, 1194, 1194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2906, 0,
	2909, 0, 0, 1194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1194, 0, 0, 1194, 0, 4085, 0,
	2933, 1431, 2935, 1431, 0, 0, 4091, 2939, 0, 0,
	0, 0, 0, 1926, 0, 0, 4098, 1194, 0, 1020,
	0, 0, 0, 0, 0, 0, 0, 0, 4106, 0,
	0, 1194, 1194, 0, 0, 0, 0, 0, 0, 0,
	1239, 0, 0, 0, 0, 0, 0, 0, 2967, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 253,
	253, 0, 0, 253, 0, 0, 1926, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	253, 253, 0, 0, 253, 253, 0, 0, 0, 0,
	1194, 0, 0, 0, 0, 0, 0, 777, 0, 0,
	0, 0, 0, 0, 1194, 0, 0, 0, 0, 0,
	0, 0, 0, 1194, 0, 0, 0, 0, 1194, 0,
	0, 0, 0, 0, 0, 4215, 0, 0, 4218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1194, 0, 0, 0, 253, 253, 1194, 0, 1194,
	0, 0, 0, 1194, 1706, 1707, 0, 1739, 1740, 1741,
	1749, 1750, 1751, 0, 0, 0, 0, 0, 0, 253,
	253, 1194, 0, 0, 0, 0, 0, 1742, 1737, 0,
	0, 0, 1194, 0, 0, 1709, 0, 0, 1020, 1020,
	0, 0, 0, 1755, 0, 0, 0, 0, 1194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1708,
	0, 0, 0, 1194, 1194, 0, 0, 0, 0, 1728,
	0, 0, 0, 0, 702, 0, 0, 0, 1725, 0,
	0, 0, 0, 0, 0, 1194, 0, 0, 2311, 0,
	0, 0, 0, 0, 685, 0, 0, 4046, 0, 0,
	686, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1194, 253, 0, 1194, 0, 0, 0, 0,
	0, 0, 0, 1020, 0, 0, 0, 0, 687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 688,
	1731, 1732, 1733, 1734, 0, 0, 0, 0, 0, 1239,
	1714, 0, 0, 1431, 1431, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1926, 0, 0, 0, 0, 0, 4375, 4375, 4375, 0,
	708, 0, 0, 0, 3227, 1746, 0, 1194, 1756, 0,
	0, 0, 0, 0, 1736, 1738, 0, 0, 0, 690,
	0, 0, 0, 0, 1194, 4396, 0, 0, 0, 0,
	0, 1752, 0, 1753, 1926, 1926, 0, 0, 0, 0,
	1723, 1724, 691, 0, 0, 0, 3277, 3279, 0, 2161,
	0, 0, 0, 0, 0, 0, 0, 0, 1744, 0,
	0, 0, 0, 692, 0, 0, 693, 0, 0, 0,
	0, 0, 0, 1729, 0, 0, 4375, 0, 0, 0,
	0, 717, 0, 0, 0, 0, 0, 1926, 1926, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 1926, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1194, 1194, 0, 0, 3353,
	0, 0, 1870, 3357, 1190, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 704, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 1870, 253, 0, 0, 1194, 0,
	777, 0, 0, 0, 0, 0, 0, 777, 0, 0,
	4375, 4514, 0, 0, 0, 0, 1735, 0, 0, 4518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1080,
	0, 0, 3408, 0, 253, 0, 1730, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 695, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 255, 255, 0, 0,
	0, 715, 0, 696, 0, 3445, 0, 1431, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 716,
	0, 3457, 0, 0, 0, 0, 697, 255, 0, 0,
	712, 713, 710, 0, 0, 0, 0, 0, 705, 0,
	0, 698, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1194, 0, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 0, 0, 1720, 1721, 1727, 1748, 1726, 1722,
	1926, 1719, 1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716,
	699, 706, 0, 0, 2400, 0, 0, 0, 2401, 0,
	700, 0, 795, 0, 0, 0, 0, 0, 0, 1194,
	0, 0, 0, 0, 701, 0, 0, 0, 0, 709,
	0, 0, 797, 1194, 0, 0, 0, 0, 798, 0,
	0, 0, 0, 718, 1194, 1194, 1194, 0, 0, 0,
	0, 0, 0, 0, 703, 253, 0, 0, 777, 0,
	0, 1194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 799, 0, 816, 0,
	1194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1194, 800, 0, 0, 0, 0, 801, 0,
	0, 253, 0, 1926, 0, 253, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 253, 0, 824, 0,
	0, 0, 0, 0, 802, 0, 0, 0, 0, 0,
	0, 253, 0, 253, 0, 0, 0, 822, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1056, 106, 0, 0,
	253, 803, 0, 253, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 826, 0, 0, 0, 717,
	1194, 0, 0, 0, 253, 0, 0, 0, 1194, 0,
	0, 0, 1194, 0, 1194, 777, 253, 0, 253, 0,
	253, 1194, 253, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 106, 0, 1194,
	0, 1194, 825, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 820, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2161, 0, 0, 0, 1194,
	0, 0, 0, 0, 0, 0, 2161, 0, 0, 1194,
	0, 0, 0, 0, 0, 0, 3715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2161, 0, 0, 0, 3730, 0, 0, 1194, 1194, 0,
	805, 0, 0, 0, 0, 0, 0, 0, 995, 0,
	0, 807, 0, 0, 1194, 0, 0, 0, 0, 1015,
	0, 0, 0, 0, 0, 1194, 0, 0, 0, 0,
	1194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1194, 0, 0, 0, 3777,
	0, 1177, 0, 0, 0, 1194, 1194, 1194, 0, 0,
	0, 0, 0, 0, 0, 0, 1194, 716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 794, 0,
	817, 0, 0, 0, 0, 0, 0, 0, 0, 809,
	0, 0, 0, 0, 0, 0, 1194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1190, 0, 815, 0, 0, 0, 1926, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1190, 810, 0,
	0, 811, 829, 0, 828, 0, 0, 1194, 812, 1194,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 813, 0, 0, 0, 253, 821, 0, 0,
	0, 1194, 0, 830, 0, 827, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1926, 0,
	0, 0, 0, 255, 0, 255, 255, 0, 0, 255,
	0, 1276, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1194, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 253, 1194, 1194, 0, 253,
	0, 253, 0, 0, 0, 0, 0, 0, 253, 253,
	0, 0, 0, 0, 255, 1276, 255, 255, 253, 1276,
	255, 255, 0, 1276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 1194, 0, 0, 1194, 3910, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2161, 0, 1276, 1194, 1194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 1276,
	0, 255, 255, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 1926, 0, 0, 0, 0, 0, 253, 1276,
	0, 0, 0, 0, 1276, 255, 255, 0, 2161, 0,
	0, 0, 0, 0, 0, 0, 0, 3979, 1276, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1194, 0, 0, 0, 0,
	0, 0, 0, 0, 777, 0, 0, 1194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1276, 253, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1194,
	0, 255, 1194, 0, 0, 0, 1194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1194, 1194, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 1194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 253,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	253, 253, 253, 0, 0, 0, 253, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2161, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 0, 106, 0, 106, 0, 1706, 1707,
	0, 1739, 1740, 1741, 1749, 1750, 1751, 0, 0, 0,
	0, 0, 0, 4187, 1431, 0, 0, 0, 0, 0,
	0, 1742, 1737, 0, 0, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 1015, 106, 106, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	106, 0, 106, 1708, 0, 1276, 0, 0, 0, 255,
	255, 255, 106, 1728, 106, 0, 255, 0, 0, 0,
	0, 0, 1725, 255, 0, 1194, 1276, 1194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 106, 0, 0, 0, 0,
	0, 0, 4267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1276, 0, 1731, 1732, 1733, 1734, 0, 0,
	0, 0, 0, 1276, 1714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1276, 0, 0,
	0, 0, 0, 1190, 0, 0, 0, 0, 0, 1746,
	0, 0, 1756, 0, 0, 0, 0, 0, 1736, 1738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 995, 1752, 0, 1753, 4319, 0,
	0, 0, 0, 0, 1723, 1724, 0, 0, 0, 0,
	0, 0, 0, 0, 1771, 0, 0, 0, 0, 0,
	0, 0, 1744, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 0, 0, 4353, 1782, 0, 1729, 253, 0,
	0, 0, 253, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 1754,
	0, 255, 1276, 1276, 255, 0, 0, 0, 0, 0,
	0, 0, 1276, 0, 0, 0, 0, 1743, 0, 0,
	0, 0, 0, 0, 0, 0, 4412, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 253, 0, 253, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 253,
	0, 255, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 255, 0, 0, 1868, 0, 1871, 0, 106,
	1735, 0, 0, 0, 0, 0, 0, 255, 0, 255,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	1730, 0, 0, 0, 1276, 0, 1276, 0, 1276, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 1276, 1276, 1747, 0, 0, 0,
	777, 0, 0, 0, 0, 1276, 255, 0, 253, 255,
	0, 0, 253, 0, 0, 0, 0, 1276, 0, 1276,
	1276, 1276, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 1190, 0,
	0, 255, 255, 0, 255, 0, 255, 0, 255, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 1720, 1721,
	1727, 1748, 1726, 1722, 0, 1719, 1717, 1718, 1710, 1711,
	1712, 1713, 1715, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 3820, 0, 253, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 1276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1706, 1707, 0, 1739, 1740, 1741, 1749,
	1750, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 1737, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 1276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1015, 0, 1015, 0, 0, 0, 255, 1708, 0,
	1276, 0, 0, 0, 0, 0, 0, 0, 1728, 0,
	0, 0, 255, 0, 0, 1190, 1190, 1725, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 255, 0, 0, 0, 255, 0, 255, 0, 1731,
	1732, 1733, 1734, 0, 255, 255, 0, 0, 0, 1714,
	1276, 1276, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 1756, 0, 0,
	0, 0, 1276, 1736, 1738, 995, 0, 0, 995, 995,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	1752, 0, 1753, 0, 0, 0, 0, 0, 0, 1723,
	1724, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 253, 0, 1744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1729, 2378, 253, 255, 1276, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 1015,
	1276, 0, 0, 0, 0, 253, 0, 0, 1776, 0,
	255, 0, 1776, 0, 253, 0, 0, 0, 0, 253,
	0, 0, 0, 253, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 1276, 1743, 1190, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1276, 1177, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 1276, 0,
	1871, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 255, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 1730, 0, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 0, 255, 255, 255, 255, 0,
	0, 0, 255, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1072, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1190, 0, 0, 0, 0, 0, 0, 0, 1190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 0, 0, 0, 0, 1745, 0,
	0, 0, 0, 1720, 1721, 1727, 1748, 1726, 1722, 0,
	1719, 1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716, 0,
	0, 0, 0, 0, 0, 0, 0, 3475, 0, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 1870, 0, 0, 1706, 1707, 0, 1739, 1740, 1741,
	1749, 1750, 1751, 0, 0, 0, 0, 253, 0, 1274,
	0, 0, 0, 0, 0, 0, 106, 1742, 1737, 0,
	0, 253, 0, 253, 0, 1709, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 106, 0, 1332, 106, 0, 106, 1332, 0, 1708,
	0, 1274, 0, 0, 0, 0, 0, 0, 0, 1728,
	0, 0, 0, 0, 0, 0, 0, 253, 1725, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 1274, 0, 0, 0, 0, 0, 106, 0,
	0, 106, 0, 0, 0, 0, 0, 106, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 1274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1276, 0, 0, 1274, 0, 0,
	0, 0, 1274, 0, 0, 0, 0, 0, 0, 0,
	1731, 1732, 1733, 1734, 0, 0, 1274, 0, 0, 0,
	1714, 0, 0, 0, 0, 0, 0, 1276, 0, 0,
	0, 0, 0, 0, 106, 0, 0, 0, 0, 0,
	0, 0, 1276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 1756, 0,
	0, 0, 0, 1276, 1736, 1738, 0, 0, 0, 1274,
	0, 0, 0, 0, 0, 0, 0, 1276, 1276, 0,
	0, 1752, 0, 1753, 255, 0, 0, 0, 255, 255,
	1723, 1724, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 1729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2378, 0, 0, 0,
	0, 1276, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 255, 0, 255, 1754, 0, 1776, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 0, 255, 1276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1276, 0, 0, 0, 0, 0, 0, 0, 0, 1276,
	0, 0, 0, 0, 1276, 1870, 1870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 253, 0, 0, 0, 1276, 0, 0,
	0, 0, 255, 1276, 0, 1276, 1735, 0, 0, 1276,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 1730, 1276, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 1870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1276,
	1276, 0, 0, 0, 0, 0, 0, 255, 253, 0,
	1177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1276, 0, 0, 0, 0, 1177, 0, 0, 0,
	0, 0, 0, 1332, 0, 0, 0, 0, 0, 1870,
	0, 253, 1870, 0, 769, 0, 0, 0, 0, 0,
	0, 769, 0, 0, 1274, 0, 0, 0, 1276, 0,
	255, 1276, 255, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 0, 0, 1720, 1721, 1727, 1748, 1726, 1722,
	0, 1719, 1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716,
	0, 0, 0, 0, 0, 0, 255, 0, 3037, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1274, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 1274, 0, 1276, 0, 0, 0, 0, 0, 0,
	0, 0, 1275, 0, 0, 0, 0, 0, 0, 0,
	1276, 0, 0, 0, 0, 1332, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 106, 106, 0, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1333, 0, 0, 0,
	1333, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 106, 106, 0, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 0, 0, 0, 0, 1275, 0, 0, 0, 0,
	1274, 1274, 0, 0, 0, 0, 0, 0, 0, 1275,
	1332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1276, 0, 0, 0, 0, 0,
	0, 1177, 0, 0, 1015, 1870, 0, 1870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1274, 0, 1274, 0, 1274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1274, 1274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1274, 1706, 1707, 0, 1739, 1740, 1741,
	1749, 1750, 1751, 0, 0, 1274, 0, 1274, 1274, 1274,
	0, 0, 0, 0, 0, 0, 0, 1742, 1737, 0,
	0, 255, 0, 0, 0, 1709, 0, 0, 0, 769,
	0, 0, 0, 1755, 0, 0, 0, 1276, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 1708,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 1728,
	255, 0, 0, 0, 0, 255, 0, 0, 1725, 255,
	0, 0, 0, 0, 0, 1276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1276, 1276, 1276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1332, 1276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 1276, 0, 0, 0,
	1731, 1732, 1733, 1734, 0, 0, 0, 0, 0, 0,
	1714, 0, 0, 0, 0, 0, 0, 0, 1276, 0,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1177, 1177,
	0, 0, 0, 0, 0, 1746, 0, 0, 1756, 0,
	0, 0, 0, 0, 1736, 1738, 1333, 0, 0, 0,
	0, 0, 0, 1332, 0, 0, 0, 0, 0, 0,
	0, 1752, 0, 1753, 0, 0, 0, 1275, 0, 0,
	1723, 1724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1332, 0, 0, 0, 0, 0, 1276, 0,
	1276, 0, 0, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 1754, 0, 0, 1332, 0,
	0, 0, 0, 0, 1276, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 0, 0, 0, 0, 1333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1276, 0, 255, 0, 255,
	0, 0, 0, 0, 0, 1276, 1735, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1730, 0, 1274, 1274,
	0, 106, 0, 1276, 1276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1276, 0, 1747, 255, 0, 0, 1177, 0, 0, 0,
	0, 1276, 255, 0, 0, 0, 1276, 0, 0, 0,
	1332, 0, 0, 1275, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 1333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 1276, 1276, 1276, 0, 0, 0, 0, 0, 0,
	0, 0, 1276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1332, 0, 0, 0, 0, 0,
	0, 0, 1276, 0, 0, 0, 0, 0, 1274, 1745,
	0, 0, 0, 0, 1720, 1721, 1727, 1748, 1726, 1722,
	0, 1719, 1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716,
	0, 0, 0, 0, 0, 1275, 0, 1275, 3036, 1275,
	0, 0, 0, 1276, 0, 1276, 0, 0, 0, 1274,
	0, 0, 0, 0, 0, 1275, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1275, 1276, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 1275, 1274,
	1275, 1275, 1275, 0, 0, 0, 0, 106, 0, 0,
	0, 1274, 0, 1177, 0, 0, 0, 0, 0, 0,
	0, 1177, 0, 0, 0, 0, 1274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1276, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 1276, 1276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	1276, 0, 0, 1276, 0, 0, 0, 0, 72, 0,
	46, 45, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 0, 147, 0, 1333,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 255,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 67, 0, 0, 0, 0, 0, 0, 48, 0,
	149, 0, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 47, 106,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 50, 68, 0, 0, 0, 0,
	0, 0, 51, 0, 0, 0, 1333, 57, 0, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 0, 49,
	0, 104, 0, 0, 255, 0, 90, 101, 1706, 1707,
	0, 1739, 1740, 1741, 1749, 1750, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1742, 1737, 0, 0, 0, 0, 255, 0, 1709,
	0, 0, 1276, 0, 52, 0, 0, 1755, 0, 0,
	0, 0, 1276, 1276, 0, 1333, 0, 0, 0, 0,
	0, 0, 91, 0, 0, 0, 0, 0, 0, 1276,
	0, 0, 0, 1708, 0, 0, 0, 0, 0, 0,
	0, 1333, 0, 1728, 0, 0, 0, 0, 0, 0,
	0, 0, 1725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 1731, 1732, 1733, 1734, 0, 0,
	0, 0, 0, 0, 1714, 1332, 0, 0, 0, 0,
	0, 1275, 1275, 0, 0, 0, 0, 0, 0, 0,
	1332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 1746,
	0, 1332, 1756, 0, 0, 0, 0, 0, 1736, 1738,
	2378, 0, 53, 1333, 0, 1274, 1274, 0, 0, 0,
	0, 255, 0, 0, 0, 1752, 56, 1753, 0, 0,
	0, 59, 0, 0, 1723, 1724, 0, 0, 0, 0,
	69, 0, 0, 0, 0, 58, 179, 97, 0, 100,
	0, 0, 1744, 54, 0, 0, 0, 151, 0, 0,
	0, 0, 0, 0, 55, 0, 0, 1729, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 1333, 0, 0,
	0, 62, 0, 0, 0, 0, 144, 0, 0, 1274,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	148, 0, 0, 0, 0, 0, 0, 0, 0, 1754,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 1274, 0, 0, 1743, 0, 0,
	0, 0, 1275, 0, 0, 0, 0, 0, 1332, 106,
	0, 0, 0, 146, 0, 0, 0, 1274, 0, 0,
	0, 0, 1274, 0, 0, 0, 0, 0, 183, 0,
	106, 0, 1275, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 1275, 1274, 0, 216, 0, 0,
	0, 1274, 0, 1274, 0, 0, 217, 1332, 0, 1275,
	1735, 0, 0, 0, 769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1274, 0, 0, 182, 0,
	1730, 3, 0, 0, 0, 0, 1274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1274, 1274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 1274,
	0, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1332, 0, 0, 1332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 1720, 1721,
	1727, 1748, 1726, 1722, 0, 1719, 1717, 1718, 1710, 1711,
	1712, 1713, 1715, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 3033, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1706, 1707, 0, 1739, 1740,
	1741, 1749, 1750, 1751, 0, 0, 0, 0, 0, 0,
	0, 1332, 0, 0, 0, 0, 0, 0, 1742, 1737,
	0, 0, 0, 0, 0, 0, 1709, 0, 1332, 0,
	0, 0, 0, 0, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1708, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1728, 0, 0, 0, 0, 0, 0, 0, 0, 1725,
	0, 0, 0, 0, 1706, 1707, 0, 1739, 1740, 1741,
	1749, 1750, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1742, 1737, 0,
	0, 0, 0, 0, 0, 1709, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 0, 0, 0, 1708,
	0, 1731, 1732, 1733, 1734, 0, 0, 0, 0, 1728,
	0, 1714, 0, 0, 0, 0, 0, 0, 1725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1333, 0,
	0, 0, 1332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1333, 0, 0, 1746, 0, 0, 1756,
	0, 0, 0, 0, 0, 1736, 1738, 0, 0, 0,
	0, 0, 0, 0, 1333, 0, 0, 0, 0, 0,
	0, 0, 1752, 0, 1753, 0, 0, 0, 1275, 1275,
	0, 1723, 1724, 0, 0, 0, 0, 0, 0, 0,
	1731, 1732, 1733, 1734, 0, 0, 0, 0, 0, 1744,
	1714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 1756, 0,
	0, 0, 0, 0, 1736, 1738, 0, 0, 0, 0,
	0, 0, 1275, 0, 0, 0, 1754, 0, 0, 0,
	0, 1752, 0, 1753, 0, 0, 0, 0, 0, 0,
	1723, 1724, 0, 0, 1743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1274, 0, 1275, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1333, 0, 1729, 0, 0, 0, 0, 0, 0,
	1275, 0, 0, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1274, 0, 0, 0, 1735, 1275, 0,
	0, 0, 0, 0, 1275, 1754, 1275, 0, 0, 0,
	1333, 0, 0, 0, 0, 0, 0, 1730, 1274, 1274,
	1274, 0, 0, 1743, 0, 0, 0, 0, 1275, 0,
	0, 0, 0, 0, 0, 1274, 0, 0, 0, 1275,
	0, 0, 0, 1747, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1332, 0, 0, 0,
	1275, 1275, 0, 0, 0, 0, 1735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1275, 0, 0, 0, 1730, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 0, 0, 0, 0, 1333,
	1745, 0, 1333, 0, 0, 1720, 1721, 1727, 1748, 1726,
	1722, 0, 1719, 1717, 1718, 1710, 1711, 1712, 1713, 1715,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 3032,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1332, 0, 1332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1333, 0, 0, 0, 0, 0,
	0, 0, 1332, 0, 0, 0, 0, 0, 0, 1745,
	0, 1333, 0, 0, 1720, 1721, 1727, 1748, 1726, 1722,
	0, 1719, 1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 3031, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1706, 1707, 1332, 1739, 1740, 1741, 1749, 1750, 1751,
	0, 0, 0, 1332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1742, 1737, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	1755, 1274, 1274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1274, 0,
	0, 0, 0, 0, 0, 0, 1708, 0, 0, 1332,
	0, 0, 0, 0, 1274, 0, 1728, 0, 0, 0,
	0, 0, 0, 0, 0, 1725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 0, 0, 0, 1274,
	1274, 1274, 0, 0, 0, 0, 0, 0, 0, 0,
	1332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1332, 0, 0, 0, 0, 0, 0, 1731, 1732, 1733,
	1734, 0, 0, 0, 0, 0, 0, 1714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1332, 0, 1274, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 1756, 0, 0, 0, 0,
	0, 1736, 1738, 0, 0, 1332, 0, 0, 1706, 1707,
	0, 1739, 1740, 1741, 1749, 1750, 1751, 0, 1752, 0,
	1753, 0, 0, 0, 0, 0, 0, 1723, 1724, 0,
	0, 1742, 1737, 0, 0, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 0, 1744, 0, 1755, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1332,
	1729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1274, 1274, 0, 1708, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1728, 0, 0, 0, 0, 0, 0,
	0, 0, 1725, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 1754, 0, 0, 0, 0, 0, 1332, 0,
	0, 1274, 0, 0, 0, 0, 0, 0, 0, 0,
	1743, 1275, 1275, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1333, 0, 0,
	0, 0, 0, 0, 1731, 1732, 1733, 1734, 0, 0,
	0, 0, 0, 0, 1714, 0, 0, 0, 0, 1333,
	0, 0, 0, 1735, 0, 0, 0, 0, 0, 0,
	0, 1706, 1707, 0, 1739, 1740, 1741, 1749, 1750, 1751,
	0, 0, 0, 1730, 0, 0, 0, 0, 0, 1746,
	0, 0, 1756, 0, 0, 1737, 0, 0, 1736, 1738,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 1747,
	1755, 0, 0, 0, 0, 1752, 0, 1753, 0, 0,
	0, 0, 0, 0, 1723, 1724, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1708, 0, 0, 0,
	0, 0, 1744, 0, 0, 0, 1728, 0, 0, 0,
	0, 0, 0, 0, 0, 1725, 0, 1729, 0, 0,
	1274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1274, 1274, 0, 0, 0, 0, 0, 0, 0, 1333,
	0, 1333, 0, 0, 0, 0, 0, 1274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1754,
	0, 0, 0, 0, 0, 1333, 1745, 0, 0, 0,
	0, 1720, 1721, 1727, 1748, 1726, 1722, 1743, 1719, 1717,
	1718, 1710, 1711, 1712, 1713, 1715, 1716, 1731, 1732, 1733,
	1734, 0, 0, 0, 0, 2401, 0, 1714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1333, 0, 0, 0,
	0, 0, 1746, 0, 0, 1756, 1333, 0, 0, 0,
	1735, 1736, 1738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 0, 1275, 1275, 0, 1723, 1724, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1275, 0, 0, 0, 1744, 1747, 0, 0, 0,
	0, 0, 1333, 0, 0, 0, 0, 1275, 0, 0,
	1729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1275, 1275, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 1333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 1720, 1721,
	1727, 1748, 1726, 1722, 0, 1719, 1717, 1718, 1710, 1711,
	1712, 1713, 1715, 1716, 0, 0, 0, 0, 4310, 0,
	0, 0, 0, 0, 1333, 0, 1275, 0, 0, 0,
	0, 0, 0, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1333, 0,
	0, 0, 0, 1730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1275, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1333, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 0, 0, 0,
	0, 1720, 1721, 1727, 1748, 1726, 1722, 0, 1719, 1717,
	1718, 1710, 1711, 1712, 1713, 1715, 1716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1330,
	0, 0, 0, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1275, 1275, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 1335, 271, 272, 1336, 1337, 1338,
	1275, 1339, 598, 1340, 1341, 1342, 1343, 273, 274, 1134,
	275, 276, 277, 278, 279, 599, 600, 0, 280, 601,
	281, 602, 1344, 603, 282, 283, 284, 285, 286, 287,
	1345, 1346, 0, 288, 604, 605, 606, 1347, 289, 290,
	607, 1348, 1277, 1349, 291, 292, 293, 294, 295, 296,
	297, 0, 1350, 299, 300, 301, 298, 302, 1351, 303,
	0, 304, 305, 306, 307, 308, 309, 1352, 310, 311,
	312, 1135, 313, 314, 1353, 1354, 1356, 1355, 1357, 1358,
	1359, 315, 316, 317, 318, 0, 319, 608, 609, 1360,
	323, 320, 321, 1361, 324, 322, 1362, 325, 326, 327,
	1363, 1364, 328, 329, 330, 1365, 331, 332, 1366, 333,
	334, 335, 1367, 336, 337, 610, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 611, 612, 349, 1368,
	260, 1369, 0, 0, 0, 0, 350, 351, 352, 613,
	0, 0, 0, 353, 1370, 354, 1371, 1372, 1136, 355,
	356, 614, 615, 357, 358, 359, 360, 361, 362, 363,
	364, 1373, 365, 616, 1374, 617, 366, 1375, 367, 368,
	369, 370, 371, 618, 619, 620, 448, 1138, 372, 373,
	1376, 374, 375, 376, 377, 0, 0, 0, 261, 378,
	379, 380, 382, 1377, 1137, 381, 621, 622, 1378, 623,
	1379, 383, 384, 1139, 624, 1140, 385, 386, 387, 1141,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	1380, 395, 397, 396, 1381, 398, 625, 1142, 399, 400,
	1143, 1382, 401, 0, 0, 0, 402, 403, 406, 1383,
	1384, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	1144, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 1145, 435, 1385, 262, 1146, 445, 446,
	1386, 626, 447, 627, 449, 450, 1387, 0, 451, 0,
	1388, 1389, 453, 454, 455, 1390, 1391, 456, 457, 628,
	1147, 458, 1148, 629, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 1392, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 632, 477, 633, 478,
	479, 1393, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 634, 489, 491, 490, 492, 1394, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 1395, 506, 507,
	508, 1149, 509, 510, 511, 512, 635, 513, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	1396, 529, 530, 528, 531, 532, 533, 1397, 534, 535,
	518, 519, 536, 537, 1150, 538, 539, 540, 541, 542,
	543, 636, 0, 544, 1398, 545, 546, 547, 548, 520,
	549, 554, 637, 550, 551, 552, 553, 638, 556, 1399,
	557, 558, 0, 555, 1400, 559, 560, 561, 562, 563,
	564, 565, 343, 566, 1401, 567, 639, 640, 641, 642,
	1402, 576, 1403, 568, 569, 570, 643, 571, 644, 1404,
	572, 573, 574, 575, 0, 577, 578, 1405, 1406, 579,
	580, 581, 583, 584, 582, 585, 1407, 586, 1408, 0,
	587, 588, 589, 645, 646, 647, 1409, 591, 590, 592,
	648, 1410, 1411, 1412, 1413, 593, 594, 649, 595, 596,
	597, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1330, 0, 0, 0, 0,
	0, 0, 0, 2566, 0, 0, 0, 0, 0, 0,
	0, 2567, 263, 265, 264, 266, 267, 268, 269, 270,
	1335, 271, 272, 1336, 1337, 1338, 0, 1339, 598, 1340,
	1341, 1342, 1343, 273, 274, 1134, 275, 276, 277, 278,
	279, 599, 600, 0, 280, 601, 281, 602, 1344, 603,
	282, 283, 284, 285, 286, 287, 1345, 1346, 0, 288,
	604, 605, 606, 1347, 289, 290, 607, 1348, 1277, 1349,
	291, 292, 293, 294, 295, 296, 297, 0, 1350, 299,
	300, 301, 298, 302, 1351, 303, 0, 304, 305, 306,
	307, 308, 309, 1352, 310, 311, 312, 1135, 313, 314,
	1353, 1354, 1356, 1355, 1357, 1358, 1359, 315, 316, 317,
	318, 0, 319, 608, 609, 1360, 323, 320, 321, 1361,
	324, 322, 1362, 325, 326, 327, 1363, 1364, 328, 329,
	330, 1365, 331, 332, 1366, 333, 334, 335, 1367, 336,
	337, 610, 338, 339, 340, 342, 344, 341, 345, 346,
	347, 348, 611, 612, 349, 1368, 260, 1369, 0, 0,
	0, 0, 350, 351, 352, 613, 0, 0, 0, 353,
	1370, 354, 1371, 1372, 1136, 355, 356, 614, 615, 357,
	358, 359, 360, 361, 362, 363, 364, 1373, 365, 616,
	1374, 617, 366, 1375, 367, 368, 369, 370, 371, 618,
	619, 620, 448, 1138, 372, 373, 1376, 374, 375, 376,
	377, 0, 0, 0, 261, 378, 379, 380, 382, 1377,
	1137, 381, 621, 622, 1378, 623, 1379, 383, 384, 1139,
	624, 1140, 385, 386, 387, 1141, 388, 0, 0, 0,
	389, 390, 391, 392, 393, 394, 1380, 395, 397, 396,
	1381, 398, 625, 1142, 399, 400, 1143, 1382, 401, 0,
	0, 0, 402, 403, 406, 1383, 1384, 404, 405, 407,
	408, 0, 409, 410, 412, 415, 411, 413, 414, 416,
	429, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 431, 0, 430, 1144, 432, 433, 434,
	439, 441, 442, 437, 438, 440, 443, 444, 436, 1145,
	435, 1385, 262, 1146, 445, 446, 1386, 626, 447, 627,
	449, 450, 1387, 0, 451, 0, 1388, 1389, 453, 454,
	455, 1390, 1391, 456, 457, 628, 1147, 458, 1148, 629,
	459, 460, 452, 461, 462, 463, 464, 465, 466, 467,
	468, 1392, 469, 470, 630, 471, 472, 473, 631, 474,
	475, 476, 632, 477, 633, 478, 479, 1393, 480, 481,
	0, 482, 483, 484, 485, 486, 487, 488, 634, 489,
	491, 490, 492, 1394, 493, 0, 494, 495, 496, 0,
	0, 0, 0, 497, 0, 499, 500, 501, 498, 502,
	503, 504, 505, 1395, 506, 507, 508, 1149, 509, 510,
	511, 512, 635, 513, 0, 514, 515, 521, 522, 516,
	517, 523, 524, 525, 526, 527, 1396, 529, 530, 528,
	531, 532, 533, 1397, 534, 535, 518, 519, 536, 537,
	1150, 538, 539, 540, 541, 542, 543, 636, 0, 544,
	1398, 545, 546, 547, 548, 520, 549, 554, 637, 550,
	551, 552, 553, 638, 556, 1399, 557, 558, 0, 555,
	1400, 559, 560, 561, 562, 563, 564, 565, 343, 566,
	1401, 567, 639, 640, 641, 642, 1402, 576, 1403, 568,
	569, 570, 643, 571, 644, 1404, 572, 573, 574, 575,
	0, 577, 578, 1405, 1406, 579, 580, 581, 583, 584,
	582, 585, 1407, 586, 1408, 0, 587, 588, 589, 645,
	646, 647, 1409, 591, 590, 592, 648, 1410, 1411, 1412,
	1413, 593, 594, 649, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1330,
	0, 0, 0, 0, 3483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3485, 263, 265, 264, 266,
	267, 268, 269, 270, 1335, 271, 272, 1336, 1337, 1338,
	0, 1339, 598, 1340, 1341, 1342, 1343, 273, 274, 1134,
	275, 276, 277, 278, 279, 599, 600, 0, 280, 601,
	281, 602, 1344, 603, 282, 283, 284, 285, 286, 287,
	1345, 1346, 0, 288, 604, 605, 606, 1347, 289, 290,
	607, 1348, 1277, 1349, 291, 292, 293, 294, 295, 296,
	297, 0, 1350, 299, 300, 301, 298, 302, 1351, 303,
	0, 304, 305, 306, 307, 308, 309, 1352, 310, 311,
	312, 1135, 313, 314, 1353, 1354, 1356, 1355, 1357, 1358,
	1359, 315, 316, 317, 318, 0, 319, 608, 609, 1360,
	323, 320, 321, 1361, 324, 322, 1362, 325, 326, 327,
	1363, 1364, 328, 329, 330, 1365, 331, 332, 1366, 333,
	334, 335, 1367, 336, 337, 610, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 611, 612, 349, 1368,
	260, 1369, 0, 0, 0, 0, 350, 351, 352, 613,
	0, 0, 0, 353, 1370, 354, 1371, 1372, 1136, 355,
	356, 614, 615, 357, 358, 359, 360, 361, 362, 363,
	364, 1373, 365, 616, 1374, 617, 366, 1375, 367, 368,
	369, 370, 371, 618, 619, 620, 448, 1138, 372, 373,
	1376, 374, 375, 376, 377, 0, 0, 0, 261, 378,
	379, 380, 382, 1377, 1137, 381, 621, 622, 1378, 623,
	1379, 383, 384, 1139, 624, 1140, 385, 386, 387, 1141,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	1380, 395, 397, 396, 1381, 398, 625, 1142, 399, 400,
	1143, 1382, 401, 0, 0, 0, 402, 403, 406, 1383,
	1384, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	1144, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 1145, 435, 1385, 262, 1146, 445, 446,
	1386, 626, 447, 627, 449, 450, 1387, 0, 451, 0,
	1388, 1389, 453, 454, 455, 1390, 1391, 456, 457, 628,
	1147, 458, 1148, 629, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 1392, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 632, 477, 633, 478,
	479, 1393, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 634, 489, 491, 490, 492, 1394, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 1395, 506, 507,
	508, 1149, 509, 510, 511, 512, 635, 513, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	1396, 529, 530, 528, 531, 532, 533, 1397, 534, 535,
	518, 519, 536, 537, 1150, 538, 539, 540, 541, 542,
	543, 636, 0, 544, 1398, 545, 546, 547, 548, 520,
	549, 554, 637, 550, 551, 552, 553, 638, 556, 1399,
	557, 558, 0, 555, 1400, 559, 560, 561, 562, 563,
	564, 565, 343, 566, 1401, 567, 639, 640, 641, 642,
	1402, 576, 1403, 568, 569, 570, 643, 571, 644, 1404,
	572, 573, 574, 575, 0, 577, 578, 1405, 1406, 579,
	580, 581, 583, 584, 582, 585, 1407, 586, 1408, 0,
	587, 588, 589, 645, 646, 647, 1409, 591, 590, 592,
	648, 1410, 1411, 1412, 1413, 593, 594, 649, 595, 596,
	597, 0, 0, 0, 0, 0, 0, 1330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3848, 263, 265, 264, 266, 267, 268,
	269, 270, 1335, 271, 272, 1336, 1337, 1338, 0, 1339,
	598, 1340, 1341, 1342, 1343, 273, 274, 1134, 275, 276,
	277, 278, 279, 599, 600, 0, 280, 601, 281, 602,
	1344, 603, 282, 283, 284, 285, 286, 287, 1345, 1346,
	0, 288, 604, 605, 606, 1347, 289, 290, 607, 1348,
	1277, 1349, 291, 292, 293, 294, 295, 296, 297, 0,
	1350, 299, 300, 301, 298, 302, 1351, 303, 0, 304,
	305, 306, 307, 308, 309, 1352, 310, 311, 312, 1135,
	313, 314, 1353, 1354, 1356, 1355, 1357, 1358, 1359, 315,
	316, 317, 318, 0, 319, 608, 609, 1360, 323, 320,
	321, 1361, 324, 322, 1362, 325, 326, 327, 1363, 1364,
	328, 329, 330, 1365, 331, 332, 1366, 333, 334, 335,
	1367, 336, 337, 610, 338, 339, 340, 342, 344, 341,
	345, 346, 347, 348, 611, 612, 349, 1368, 260, 1369,
	0, 0, 0, 0, 350, 351, 352, 613, 0, 0,
	0, 353, 1370, 354, 1371, 1372, 1136, 355, 356, 614,
	615, 357, 358, 359, 360, 361, 362, 363, 364, 1373,
	365, 616, 1374, 617, 366, 1375, 367, 368, 369, 370,
	371, 618, 619, 620, 448, 1138, 372, 373, 1376, 374,
	375, 376, 377, 0, 0, 0, 261, 378, 379, 380,
	382, 1377, 1137, 381, 621, 622, 1378, 623, 1379, 383,
	384, 1139, 624, 1140, 385, 386, 387, 1141, 388, 0,
	0, 0, 389, 390, 391, 392, 393, 394, 1380, 395,
	397, 396, 1381, 398, 625, 1142, 399, 400, 1143, 1382,
	401, 0, 0, 0, 402, 403, 406, 1383, 1384, 404,
	405, 407, 408, 0, 409, 410, 412, 415, 411, 413,
	414, 416, 429, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 431, 0, 430, 1144, 432,
	433, 434, 439, 441, 442, 437, 438, 440, 443, 444,
	436, 1145, 435, 1385, 262, 1146, 445, 446, 1386, 626,
	447, 627, 449, 450, 1387, 0, 451, 0, 1388, 1389,
	453, 454, 455, 1390, 1391, 456, 457, 628, 1147, 458,
	1148, 629, 459, 460, 452, 461, 462, 463, 464, 465,
	466, 467, 468, 1392, 469, 470, 630, 471, 472, 473,
	631, 474, 475, 476, 632, 477, 633, 478, 479, 1393,
	480, 481, 0, 482, 483, 484, 485, 486, 487, 488,
	634, 489, 491, 490, 492, 1394, 493, 0, 494, 495,
	496, 0, 0, 0, 0, 497, 0, 499, 500, 501,
	498, 502, 503, 504, 505, 1395, 506, 507, 508, 1149,
	509, 510, 511, 512, 635, 513, 0, 514, 515, 521,
	522, 516, 517, 523, 524, 525, 526, 527, 1396, 529,
	530, 528, 531, 532, 533, 1397, 534, 535, 518, 519,
	536, 537, 1150, 538, 539, 540, 541, 542, 543, 636,
	0, 544, 1398, 545, 546, 547, 548, 520, 549, 554,
	637, 550, 551, 552, 553, 638, 556, 1399, 557, 558,
	0, 555, 1400, 559, 560, 561, 562, 563, 564, 565,
	343, 566, 1401, 567, 639, 640, 641, 642, 1402, 576,
	1403, 568, 569, 570, 643, 571, 644, 1404, 572, 573,
	574, 575, 0, 577, 578, 1405, 1406, 579, 580, 581,
	583, 584, 582, 585, 1407, 586, 1408, 0, 587, 588,
	589, 645, 646, 647, 1409, 591, 590, 592, 648, 1410,
	1411, 1412, 1413, 593, 594, 649, 595, 596, 597, 0,
	1330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4029, 263, 265, 264,
	266, 267, 268, 269, 270, 1335, 271, 272, 1336, 1337,
	1338, 0, 1339, 598, 1340, 1341, 1342, 1343, 273, 274,
	1134, 275, 276, 277, 278, 279, 599, 600, 0, 280,
	601, 281, 602, 1344, 603, 282, 283, 284, 285, 286,
	287, 1345, 1346, 0, 288, 604, 605, 606, 1347, 289,
	290, 607, 1348, 1277, 1349, 291, 292, 293, 294, 295,
	296, 297, 0, 1350, 299, 300, 301, 298, 302, 1351,
	303, 0, 304, 305, 306, 307, 308, 309, 1352, 310,
	311, 312, 1135, 313, 314, 1353, 1354, 1356, 1355, 1357,
	1358, 1359, 315, 316, 317, 318, 0, 319, 608, 609,
	1360, 323, 320, 321, 1361, 324, 322, 1362, 325, 326,
	327, 1363, 1364, 328, 329, 330, 1365, 331, 332, 1366,
	333, 334, 335, 1367, 336, 337, 610, 338, 339, 340,
	342, 344, 341, 345, 346, 347, 348, 611, 612, 349,
	1368, 260, 1369, 0, 0, 0, 0, 350, 351, 352,
	613, 0, 0, 0, 353, 1370, 354, 1371, 1372, 1136,
	355, 356, 614, 615, 357, 358, 359, 360, 361, 362,
	363, 364, 1373, 365, 616, 1374, 617, 366, 1375, 367,
	368, 369, 370, 371, 618, 619, 620, 448, 1138, 372,
	373, 1376, 374, 375, 376, 377, 0, 0, 0, 261,
	378, 379, 380, 382, 1377, 1137, 381, 621, 622, 1378,
	623, 1379, 383, 384, 1139, 624, 1140, 385, 386, 387,
	1141, 388, 0, 0, 0, 389, 390, 391, 392, 393,
	394, 1380, 395, 397, 396, 1381, 398, 625, 1142, 399,
	400, 1143, 1382, 401, 0, 0, 0, 402, 403, 406,
	1383, 1384, 404, 405, 407, 408, 0, 409, 410, 412,
	415, 411, 413, 414, 416, 429, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 431, 0,
	430, 1144, 432, 433, 434, 439, 441, 442, 437, 438,
	440, 443, 444, 436, 1145, 435, 1385, 262, 1146, 445,
	446, 1386, 626, 447, 627, 449, 450, 1387, 0, 451,
	0, 1388, 1389, 453, 454, 455, 1390, 1391, 456, 457,
	628, 1147, 458, 1148, 629, 459, 460, 452, 461, 462,
	463, 464, 465, 466, 467, 468, 1392, 469, 470, 630,
	471, 472, 473, 631, 474, 475, 476, 632, 477, 633,
	478, 479, 1393, 480, 481, 0, 482, 483, 484, 485,
	486, 487, 488, 634, 489, 491, 490, 492, 1394, 493,
	0, 494, 495, 496, 0, 0, 0, 0, 497, 0,
	499, 500, 501, 498, 502, 503, 504, 505, 1395, 506,
	507, 508, 1149, 509, 510, 511, 512, 635, 513, 0,
	514, 515, 521, 522, 516, 517, 523, 524, 525, 526,
	527, 1396, 529, 530, 528, 531, 532, 533, 1397, 534,
	535, 518, 519, 536, 537, 1150, 538, 539, 540, 541,
	542, 543, 636, 0, 544, 1398, 545, 546, 547, 548,
	520, 549, 554, 637, 550, 551, 552, 553, 638, 556,
	1399, 557, 558, 0, 555, 1400, 559, 560, 561, 562,
	563, 564, 565, 343, 566, 1401, 567, 639, 640, 641,
	642, 1402, 576, 1403, 568, 569, 570, 643, 571, 644,
	1404, 572, 573, 574, 575, 0, 577, 578, 1405, 1406,
	579, 580, 581, 583, 584, 582, 585, 1407, 586, 1408,
	0, 587, 588, 589, 645, 646, 647, 1409, 591, 590,
	592, 648, 1410, 1411, 1412, 1413, 593, 594, 649, 595,
	596, 597, 0, 1330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3918,
	263, 265, 264, 266, 267, 268, 269, 270, 1335, 271,
	272, 1336, 1337, 1338, 0, 1339, 598, 1340, 1341, 1342,
	1343, 273, 274, 1134, 275, 276, 277, 278, 279, 599,
	600, 0, 280, 601, 281, 602, 1344, 603, 282, 283,
	284, 285, 286, 287, 1345, 1346, 0, 288, 604, 605,
	606, 1347, 289, 290, 607, 1348, 1277, 1349, 291, 292,
	293, 294, 295, 296, 297, 0, 1350, 299, 300, 301,
	298, 302, 1351, 303, 0, 304, 305, 306, 307, 308,
	309, 1352, 310, 311, 312, 1135, 313, 314, 1353, 1354,
	1356, 1355, 1357, 1358, 1359, 315, 316, 317, 318, 0,
	319, 608, 609, 1360, 323, 320, 321, 1361, 324, 322,
	1362, 325, 326, 327, 1363, 1364, 328, 329, 330, 1365,
	331, 332, 1366, 333, 334, 335, 1367, 336, 337, 610,
	338, 339, 340, 342, 344, 341, 345, 346, 347, 348,
	611, 612, 349, 1368, 260, 1369, 0, 0, 0, 0,
	350, 351, 352, 613, 0, 0, 0, 353, 1370, 354,
	1371, 1372, 1136, 355, 356, 614, 615, 357, 358, 359,
	360, 361, 362, 363, 364, 1373, 365, 616, 1374, 617,
	366, 1375, 367, 368, 369, 370, 371, 618, 619, 620,
	448, 1138, 372, 373, 1376, 374, 375, 376, 377, 0,
	0, 0, 261, 378, 379, 380, 382, 1377, 1137, 381,
	621, 622, 1378, 623, 1379, 383, 384, 1139, 624, 1140,
	385, 386, 387, 1141, 388, 0, 0, 0, 389, 390,
	391, 392, 393, 394, 1380, 395, 397, 396, 1381, 398,
	625, 1142, 399, 400, 1143, 1382, 401, 0, 0, 0,
	402, 403, 406, 1383, 1384, 404, 405, 407, 408, 0,
	409, 410, 412, 415, 411, 413, 414, 416, 429, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 431, 0, 430, 1144, 432, 433, 434, 439, 441,
	442, 437, 438, 440, 443, 444, 436, 1145, 435, 1385,
	262, 1146, 445, 446, 1386, 626, 447, 627, 449, 450,
	1387, 0, 451, 0, 1388, 1389, 453, 454, 455, 1390,
	1391, 456, 457, 628, 1147, 458, 1148, 629, 459, 460,
	452, 461, 462, 463, 464, 465, 466, 467, 468, 1392,
	469, 470, 630, 471, 472, 473, 631, 474, 475, 476,
	632, 477, 633, 478, 479, 1393, 480, 481, 0, 482,
	483, 484, 485, 486, 487, 488, 634, 489, 491, 490,
	492, 1394, 493, 0, 494, 495, 496, 0, 0, 0,
	0, 497, 0, 499, 500, 501, 498, 502, 503, 504,
	505, 1395, 506, 507, 508, 1149, 509, 510, 511, 512,
	635, 513, 0, 514, 515, 521, 522, 516, 517, 523,
	524, 525, 526, 527, 1396, 529, 530, 528, 531, 532,
	533, 1397, 534, 535, 518, 519, 536, 537, 1150, 538,
	539, 540, 541, 542, 543, 636, 0, 544, 1398, 545,
	546, 547, 548, 520, 549, 554, 637, 550, 551, 552,
	553, 638, 556, 1399, 557, 558, 0, 555, 1400, 559,
	560, 561, 562, 563, 564, 565, 343, 566, 1401, 567,
	639, 640, 641, 642, 1402, 576, 1403, 568, 569, 570,
	643, 571, 644, 1404, 572, 573, 574, 575, 0, 577,
	578, 1405, 1406, 579, 580, 581, 583, 584, 582, 585,
	1407, 586, 1408, 0, 587, 588, 589, 645, 646, 647,
	1409, 591, 590, 592, 648, 1410, 1411, 1412, 1413, 593,
	594, 649, 595, 596, 597, 0, 1330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3778, 263, 265, 264, 266, 267, 268, 269,
	270, 1335, 271, 272, 1336, 1337, 1338, 0, 1339, 598,
	1340, 1341, 1342, 1343, 273, 274, 1134, 275, 276, 277,
	278, 279, 599, 600, 0, 280, 601, 281, 602, 1344,
	603, 282, 283, 284, 285, 286, 287, 1345, 1346, 0,
	288, 604, 605, 606, 1347, 289, 290, 607, 1348, 1277,
	1349, 291, 292, 293, 294, 295, 296, 297, 0, 1350,
	299, 300, 301, 298, 302, 1351, 303, 0, 304, 305,
	306, 307, 308, 309, 1352, 310, 311, 312, 1135, 313,
	314, 1353, 1354, 1356, 1355, 1357, 1358, 1359, 315, 316,
	317, 318, 0, 319, 608, 609, 1360, 323, 320, 321,
	1361, 324, 322, 1362, 325, 326, 327, 1363, 1364, 328,
	329, 330, 1365, 331, 332, 1366, 333, 334, 335, 1367,
	336, 337, 610, 338, 339, 340, 342, 344, 341, 345,
	346, 347, 348, 611, 612, 349, 1368, 260, 1369, 0,
	0, 0, 0, 350, 351, 352, 613, 0, 0, 0,
	353, 1370, 354, 1371, 1372, 1136, 355, 356, 614, 615,
	357, 358, 359, 360, 361, 362, 363, 364, 1373, 365,
	616, 1374, 617, 366, 1375, 367, 368, 369, 370, 371,
	618, 619, 620, 448, 1138, 372, 373, 1376, 374, 375,
	376, 377, 0, 0, 0, 261, 378, 379, 380, 382,
	1377, 1137, 381, 621, 622, 1378, 623, 1379, 383, 384,
	1139, 624, 1140, 385, 386, 387, 1141, 388, 0, 0,
	0, 389, 390, 391, 392, 393, 394, 1380, 395, 397,
	396, 1381, 398, 625, 1142, 399, 400, 1143, 1382, 401,
	0, 0, 0, 402, 403, 406, 1383, 1384, 404, 405,
	407, 408, 0, 409, 410, 412, 415, 411, 413, 414,
	416, 429, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 431, 0, 430, 1144, 432, 433,
	434, 439, 441, 442, 437, 438, 440, 443, 444, 436,
	1145, 435, 1385, 262, 1146, 445, 446, 1386, 626, 447,
	627, 449, 450, 1387, 0, 451, 0, 1388, 1389, 453,
	454, 455, 1390, 1391, 456, 457, 628, 1147, 458, 1148,
	629, 459, 460, 452, 461, 462, 463, 464, 465, 466,
	467, 468, 1392, 469, 470, 630, 471, 472, 473, 631,
	474, 475, 476, 632, 477, 633, 478, 479, 1393, 480,
	481, 0, 482, 483, 484, 485, 486, 487, 488, 634,
	489, 491, 490, 492, 1394, 493, 0, 494, 495, 496,
	0, 0, 0, 0, 497, 0, 499, 500, 501, 498,
	502, 503, 504, 505, 1395, 506, 507, 508, 1149, 509,
	510, 511, 512, 635, 513, 0, 514, 515, 521, 522,
	516, 517, 523, 524, 525, 526, 527, 1396, 529, 530,
	528, 531, 532, 533, 1397, 534, 535, 518, 519, 536,
	537, 1150, 538, 539, 540, 541, 542, 543, 636, 0,
	544, 1398, 545, 546, 547, 548, 520, 549, 554, 637,
	550, 551, 552, 553, 638, 556, 1399, 557, 558, 0,
	555, 1400, 559, 560, 561, 562, 563, 564, 565, 343,
	566, 1401, 567, 639, 640, 641, 642, 1402, 576, 1403,
	568, 569, 570, 643, 571, 644, 1404, 572, 573, 574,
	575, 0, 577, 578, 1405, 1406, 579, 580, 581, 583,
	584, 582, 585, 1407, 586, 1408, 0, 587, 588, 589,
	645, 646, 647, 1409, 591, 590, 592, 648, 1410, 1411,
	1412, 1413, 593, 594, 649, 595, 596, 597, 0, 1330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3501, 263, 265, 264, 266,
	267, 268, 269, 270, 1335, 271, 272, 1336, 1337, 1338,
	0, 1339, 598, 1340, 1341, 1342, 1343, 273, 274, 1134,
	275, 276, 277, 278, 279, 599, 600, 0, 280, 601,
	281, 602, 1344, 603, 282, 283, 284, 285, 286, 287,
	1345, 1346, 0, 288, 604, 605, 606, 1347, 289, 290,
	607, 1348, 1277, 1349, 291, 292, 293, 294, 295, 296,
	297, 0, 1350, 299, 300, 301, 298, 302, 1351, 303,
	0, 304, 305, 306, 307, 308, 309, 1352, 310, 311,
	312, 1135, 313, 314, 1353, 1354, 1356, 1355, 1357, 1358,
	1359, 315, 316, 317, 318, 0, 319, 608, 609, 1360,
	323, 320, 321, 1361, 324, 322, 1362, 325, 326, 327,
	1363, 1364, 328, 329, 330, 1365, 331, 332, 1366, 333,
	334, 335, 1367, 336, 337, 610, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 611, 612, 349, 1368,
	260, 1369, 0, 0, 0, 0, 350, 351, 352, 613,
	0, 0, 0, 353, 1370, 354, 1371, 1372, 1136, 355,
	356, 614, 615, 357, 358, 359, 360, 361, 362, 363,
	364, 1373, 365, 616, 1374, 617, 366, 1375, 367, 368,
	369, 370, 371, 618, 619, 620, 448, 1138, 372, 373,
	1376, 374, 375, 376, 377, 0, 0, 0, 261, 378,
	379, 380, 382, 1377, 1137, 381, 621, 622, 1378, 623,
	1379, 383, 384, 1139, 624, 1140, 385, 386, 387, 1141,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	1380, 395, 397, 396, 1381, 398, 625, 1142, 399, 400,
	1143, 1382, 401, 0, 0, 0, 402, 403, 406, 1383,
	1384, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	1144, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 1145, 435, 1385, 262, 1146, 445, 446,
	1386, 626, 447, 627, 449, 450, 1387, 0, 451, 0,
	1388, 1389, 453, 454, 455, 1390, 1391, 456, 457, 628,
	1147, 458, 1148, 629, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 1392, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 632, 477, 633, 478,
	479, 1393, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 634, 489, 491, 490, 492, 1394, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 1395, 506, 507,
	508, 1149, 509, 510, 511, 512, 635, 513, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	1396, 529, 530, 528, 531, 532, 533, 1397, 534, 535,
	518, 519, 536, 537, 1150, 538, 539, 540, 541, 542,
	543, 636, 0, 544, 1398, 545, 546, 547, 548, 520,
	549, 554, 637, 550, 551, 552, 553, 638, 556, 1399,
	557, 558, 0, 555, 1400, 559, 560, 561, 562, 563,
	564, 565, 343, 566, 1401, 567, 639, 640, 641, 642,
	1402, 576, 1403, 568, 569, 570, 643, 571, 644, 1404,
	572, 573, 574, 575, 0, 577, 578, 1405, 1406, 579,
	580, 581, 583, 584, 582, 585, 1407, 586, 1408, 0,
	587, 588, 589, 645, 646, 647, 1409, 591, 590, 592,
	648, 1410, 1411, 1412, 1413, 593, 594, 649, 595, 596,
	597, 0, 1330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3338, 263,
	265, 264, 266, 267, 268, 269, 270, 1335, 271, 272,
	1336, 1337, 1338, 0, 1339, 598, 1340, 1341, 1342, 1343,
	273, 274, 1134, 275, 276, 277, 278, 279, 599, 600,
	0, 280, 601, 281, 602, 1344, 603, 282, 283, 284,
	285, 286, 287, 1345, 1346, 0, 288, 604, 605, 606,
	1347, 289, 290, 607, 1348, 1277, 1349, 291, 292, 293,
	294, 295, 296, 297, 0, 1350, 299, 300, 301, 298,
	302, 1351, 303, 0, 304, 305, 306, 307, 308, 309,
	1352, 310, 311, 312, 1135, 313, 314, 1353, 1354, 1356,
	1355, 1357, 1358, 1359, 315, 316, 317, 318, 0, 319,
	608, 609, 1360, 323, 320, 321, 1361, 324, 322, 1362,
	325, 326, 327, 1363, 1364, 328, 329, 330, 1365, 331,
	332, 1366, 333, 334, 335, 1367, 336, 337, 610, 338,
	339, 340, 342, 344, 341, 345, 346, 347, 348, 611,
	612, 349, 1368, 260, 1369, 0, 0, 0, 0, 350,
	351, 352, 613, 0, 0, 0, 353, 1370, 354, 1371,
	1372, 1136, 355, 356, 614, 615, 357, 358, 359, 360,
	361, 362, 363, 364, 1373, 365, 616, 1374, 617, 366,
	1375, 367, 368, 369, 370, 371, 618, 619, 620, 448,
	1138, 372, 373, 1376, 374, 375, 376, 377, 0, 0,
	0, 261, 378, 379, 380, 382, 1377, 1137, 381, 621,
	622, 1378, 623, 1379, 383, 384, 1139, 624, 1140, 385,
	386, 387, 1141, 388, 0, 0, 0, 389, 390, 391,
	392, 393, 394, 1380, 395, 397, 396, 1381, 398, 625,
	1142, 399, 400, 1143, 1382, 401, 0, 0, 0, 402,
	403, 406, 1383, 1384, 404, 405, 407, 408, 0, 409,
	410, 412, 415, 411, 413, 414, 416, 429, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	431, 0, 430, 1144, 432, 433, 434, 439, 441, 442,
	437, 438, 440, 443, 444, 436, 1145, 435, 1385, 262,
	1146, 445, 446, 1386, 626, 447, 627, 449, 450, 1387,
	0, 451, 0, 1388, 1389, 453, 454, 455, 1390, 1391,
	456, 457, 628, 1147, 458, 1148, 629, 459, 460, 452,
	461, 462, 463, 464, 465, 466, 467, 468, 1392, 469,
	470, 630, 471, 472, 473, 631, 474, 475, 476, 632,
	477, 633, 478, 479, 1393, 480, 481, 0, 482, 483,
	484, 485, 486, 487, 488, 634, 489, 491, 490, 492,
	1394, 493, 0, 494, 495, 496, 0, 0, 0, 0,
	497, 0, 499, 500, 501, 498, 502, 503, 504, 505,
	1395, 506, 507, 508, 1149, 509, 510, 511, 512, 635,
	513, 0, 514, 515, 521, 522, 516, 517, 523, 524,
	525, 526, 527, 1396, 529, 530, 528, 531, 532, 533,
	1397, 534, 535, 518, 519, 536, 537, 1150, 538, 539,
	540, 541, 542, 543, 636, 0, 544, 1398, 545, 546,
	547, 548, 520, 549, 554, 637, 550, 551, 552, 553,
	638, 556, 1399, 557, 558, 0, 555, 1400, 559, 560,
	561, 562, 563, 564, 565, 343, 566, 1401, 567, 639,
	640, 641, 642, 1402, 576, 1403, 568, 569, 570, 643,
	571, 644, 1404, 572, 573, 574, 575, 0, 577, 578,
	1405, 1406, 579, 580, 581, 583, 584, 582, 585, 1407,
	586, 1408, 0, 587, 588, 589, 645, 646, 647, 1409,
	591, 590, 592, 648, 1410, 1411, 1412, 1413, 593, 594,
	649, 595, 596, 597, 0, 1330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2424, 263, 265, 264, 266, 267, 268, 269, 270,
	1335, 271, 272, 1336, 1337, 1338, 0, 1339, 598, 1340,
	1341, 1342, 1343, 273, 274, 1134, 275, 276, 277, 278,
	279, 599, 600, 0, 280, 601, 281, 602, 1344, 603,
	282, 283, 284, 285, 286, 287, 1345, 1346, 0, 288,
	604, 605, 606, 1347, 289, 290, 607, 1348, 1277, 1349,
	291, 292, 293, 294, 295, 296, 297, 0, 1350, 299,
	300, 301, 298, 302, 1351, 303, 0, 304, 305, 306,
	307, 308, 309, 1352, 310, 311, 312, 1135, 313, 314,
	1353, 1354, 1356, 1355, 1357, 1358, 1359, 315, 316, 317,
	318, 0, 319, 608, 609, 1360, 323, 320, 321, 1361,
	324, 322, 1362, 325, 326, 327, 1363, 1364, 328, 329,
	330, 1365, 331, 332, 1366, 333, 334, 335, 1367, 336,
	337, 610, 338, 339, 340, 342, 344, 341, 345, 346,
	347, 348, 611, 612, 349, 1368, 260, 1369, 0, 0,
	0, 0, 350, 351, 352, 613, 0, 0, 0, 353,
	1370, 354, 1371, 1372, 1136, 355, 356, 614, 615, 357,
	358, 359, 360, 361, 362, 363, 364, 1373, 365, 616,
	1374, 617, 366, 1375, 367, 368, 369, 370, 371, 618,
	619, 620, 448, 1138, 372, 373, 1376, 374, 375, 376,
	377, 0, 0, 0, 261, 378, 379, 380, 382, 1377,
	1137, 381, 621, 622, 1378, 623, 1379, 383, 384, 1139,
	624, 1140, 385, 386, 387, 1141, 388, 0, 0, 0,
	389, 390, 391, 392, 393, 394, 1380, 395, 397, 396,
	1381, 398, 625, 1142, 399, 400, 1143, 1382, 401, 0,
	0, 0, 402, 403, 406, 1383, 1384, 404, 405, 407,
	408, 0, 409, 410, 412, 415, 411, 413, 414, 416,
	429, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 431, 0, 430, 1144, 432, 433, 434,
	439, 441, 442, 437, 438, 440, 443, 444, 436, 1145,
	435, 1385, 262, 1146, 445, 446, 1386, 626, 447, 627,
	449, 450, 1387, 0, 451, 0, 1388, 1389, 453, 454,
	455, 1390, 1391, 456, 457, 628, 1147, 458, 1148, 629,
	459, 460, 452, 461, 462, 463, 464, 465, 466, 467,
	468, 1392, 469, 470, 630, 471, 472, 473, 631, 474,
	475, 476, 632, 477, 633, 478, 479, 1393, 480, 481,
	0, 482, 483, 484, 485, 486, 487, 488, 634, 489,
	491, 490, 492, 1394, 493, 0, 494, 495, 496, 0,
	0, 0, 0, 497, 0, 499, 500, 501, 498, 502,
	503, 504, 505, 1395, 506, 507, 508, 1149, 509, 510,
	511, 512, 635, 513, 0, 514, 515, 521, 522, 516,
	517, 523, 524, 525, 526, 527, 1396, 529, 530, 528,
	531, 532, 533, 1397, 534, 535, 518, 519, 536, 537,
	1150, 538, 539, 540, 541, 542, 543, 636, 0, 544,
	1398, 545, 546, 547, 548, 520, 549, 554, 637, 550,
	551, 552, 553, 638, 556, 1399, 557, 558, 0, 555,
	1400, 559, 560, 561, 562, 563, 564, 565, 343, 566,
	1401, 567, 639, 640, 641, 642, 1402, 576, 1403, 568,
	569, 570, 643, 571, 644, 1404, 572, 573, 574, 575,
	0, 577, 578, 1405, 1406, 579, 580, 581, 583, 584,
	582, 585, 1407, 586, 1408, 0, 587, 588, 589, 645,
	646, 647, 1409, 591, 590, 592, 648, 1410, 1411, 1412,
	1413, 593, 594, 649, 595, 596, 597, 1425, 0, 1330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2123, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 1335, 271, 272, 1336, 1337, 1338,
	0, 1339, 598, 1340, 1341, 1342, 1343, 273, 274, 1134,
	275, 276, 277, 278, 279, 599, 600, 0, 280, 601,
	281, 602, 1344, 603, 282, 283, 284, 285, 286, 287,
	1345, 1346, 0, 288, 604, 605, 606, 1347, 289, 290,
	607, 1348, 1277, 1349, 291, 292, 293, 294, 295, 296,
	297, 0, 1350, 299, 300, 301, 298, 302, 1351, 303,
	0, 304, 305, 306, 307, 308, 309, 1352, 310, 311,
	312, 1135, 313, 314, 1353, 1354, 1356, 1355, 1357, 1358,
	1359, 315, 316, 317, 318, 0, 319, 608, 609, 1360,
	323, 320, 321, 1361, 324, 322, 1362, 325, 326, 327,
	1363, 1364, 328, 329, 330, 1365, 331, 332, 1366, 333,
	334, 335, 1367, 336, 337, 610, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 611, 612, 349, 1368,
	260, 1369, 0, 0, 0, 0, 350, 351, 352, 613,
	0, 0, 0, 353, 1370, 354, 1371, 1372, 1136, 355,
	356, 614, 615, 357, 358, 359, 360, 361, 362, 363,
	364, 1373, 365, 616, 1374, 617, 366, 1375, 367, 368,
	369, 370, 371, 618, 619, 620, 448, 1138, 372, 373,
	1376, 374, 375, 376, 377, 0, 0, 0, 261, 378,
	379, 380, 382, 1377, 1137, 381, 621, 622, 1378, 623,
	1379, 383, 384, 1139, 624, 1140, 385, 386, 387, 1141,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	1380, 395, 397, 396, 1381, 398, 625, 1142, 399, 400,
	1143, 1382, 401, 0, 0, 0, 402, 403, 406, 1383,
	1384, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	1144, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 1145, 435, 1385, 262, 1146, 445, 446,
	1386, 626, 447, 627, 449, 450, 1387, 0, 451, 0,
	1388, 1389, 453, 454, 455, 1390, 1391, 456, 457, 628,
	1147, 458, 1148, 629, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 1392, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 632, 477, 633, 478,
	479, 1393, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 634, 489, 491, 490, 492, 1394, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 1395, 506, 507,
	508, 1149, 509, 510, 511, 512, 635, 513, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	1396, 529, 530, 528, 531, 532, 533, 1397, 534, 535,
	518, 519, 536, 537, 1150, 538, 539, 540, 541, 542,
	543, 636, 0, 544, 1398, 545, 546, 547, 548, 520,
	549, 554, 637, 550, 551, 552, 553, 638, 556, 1399,
	557, 558, 0, 555, 1400, 559, 560, 561, 562, 563,
	564, 565, 343, 566, 1401, 567, 639, 640, 641, 642,
	1402, 576, 1403, 568, 569, 570, 643, 571, 644, 1404,
	572, 573, 574, 575, 0, 577, 578, 1405, 1406, 579,
	580, 581, 583, 584, 582, 585, 1407, 586, 1408, 0,
	587, 588, 589, 645, 646, 647, 1409, 591, 590, 592,
	648, 1410, 1411, 1412, 1413, 593, 594, 649, 595, 596,
	597, 1327, 0, 1330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 1335, 271,
	272, 1336, 1337, 1338, 0, 1339, 598, 1340, 1341, 1342,
	1343, 273, 274, 1134, 275, 276, 277, 278, 279, 599,
	600, 0, 280, 601, 281, 602, 1344, 603, 282, 283,
	284, 285, 286, 287, 1345, 1346, 0, 288, 604, 605,
	606, 1347, 289, 290, 607, 1348, 1277, 1349, 291, 292,
	293, 294, 295, 296, 297, 0, 1350, 299, 300, 301,
	298, 302, 1351, 303, 0, 304, 305, 306, 307, 308,
	309, 1352, 310, 311, 312, 1135, 313, 314, 1353, 1354,
	1356, 1355, 1357, 1358, 1359, 315, 316, 317, 318, 0,
	319, 608, 609, 1360, 323, 320, 321, 1361, 324, 322,
	1362, 325, 326, 327, 1363, 1364, 328, 329, 330, 1365,
	331, 332, 1366, 333, 334, 335, 1367, 336, 337, 610,
	338, 339, 340, 342, 344, 341, 345, 346, 347, 348,
	611, 612, 349, 1368, 260, 1369, 0, 0, 0, 0,
	350, 351, 352, 613, 0, 0, 0, 353, 1370, 354,
	1371, 1372, 1136, 355, 356, 614, 615, 357, 358, 359,
	360, 361, 362, 363, 364, 1373, 365, 616, 1374, 617,
	366, 1375, 367, 368, 369, 370, 371, 618, 619, 620,
	448, 1138, 372, 373, 1376, 374, 375, 376, 377, 0,
	0, 0, 261, 378, 379, 380, 382, 1377, 1137, 381,
	621, 622, 1378, 623, 1379, 383, 384, 1139, 624, 1140,
	385, 386, 387, 1141, 388, 0, 0, 0, 389, 390,
	391, 392, 393, 394, 1380, 395, 397, 396, 1381, 398,
	625, 1142, 399, 400, 1143, 1382, 401, 0, 0, 0,
	402, 403, 406, 1383, 1384, 404, 405, 407, 408, 0,
	409, 410, 412, 415, 411, 413, 414, 416, 429, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 431, 0, 430, 1144, 432, 433, 434, 439, 441,
	442, 437, 438, 440, 443, 444, 436, 1145, 435, 1385,
	262, 1146, 445, 446, 1386, 626, 447, 627, 449, 450,
	1387, 0, 451, 0, 1388, 1389, 453, 454, 455, 1390,
	1391, 456, 457, 628, 1147, 458, 1148, 629, 459, 460,
	452, 461, 462, 463, 464, 465, 466, 467, 468, 1392,
	469, 470, 630, 471, 472, 473, 631, 474, 475, 476,
	632, 477, 633, 478, 479, 1393, 480, 481, 0, 482,
	483, 484, 485, 486, 487, 488, 634, 489, 491, 490,
	492, 1394, 493, 0, 494, 495, 496, 0, 0, 0,
	0, 497, 0, 499, 500, 501, 498, 502, 503, 504,
	505, 1395, 506, 507, 508, 1149, 509, 510, 511, 512,
	635, 513, 0, 514, 515, 521, 522, 516, 517, 523,
	524, 525, 526, 527, 1396, 529, 530, 528, 531, 532,
	533, 1397, 534, 535, 518, 519, 536, 537, 1150, 538,
	539, 540, 541, 542, 543, 636, 0, 544, 1398, 545,
	546, 547, 548, 520, 549, 554, 637, 550, 551, 552,
	553, 638, 556, 1399, 557, 558, 0, 555, 1400, 559,
	560, 561, 562, 563, 564, 565, 343, 566, 1401, 567,
	639, 640, 641, 642, 1402, 576, 1403, 568, 569, 570,
	643, 571, 644, 1404, 572, 573, 574, 575, 0, 577,
	578, 1405, 1406, 579, 580, 581, 583, 584, 582, 585,
	1407, 586, 1408, 0, 587, 588, 589, 645, 646, 647,
	1409, 591, 590, 592, 648, 1410, 1411, 1412, 1413, 593,
	594, 649, 595, 596, 597, 1330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	1335, 271, 272, 1336, 1337, 1338, 0, 1339, 598, 1340,
	1341, 1342, 1343, 273, 274, 1134, 275, 276, 277, 278,
	279, 599, 600, 0, 280, 601, 281, 602, 1344, 603,
	282, 283, 284, 285, 286, 287, 1345, 1346, 0, 288,
	604, 605, 606, 1347, 289, 290, 607, 1348, 1277, 1349,
	291, 292, 293, 294, 295, 296, 297, 0, 1350, 299,
	300, 301, 298, 302, 1351, 303, 0, 304, 305, 306,
	307, 308, 309, 1352, 310, 311, 312, 1135, 313, 314,
	1353, 1354, 1356, 1355, 1357, 1358, 1359, 315, 316, 317,
	318, 0, 319, 608, 609, 1360, 323, 320, 321, 1361,
	324, 322, 1362, 325, 326, 327, 1363, 1364, 328, 329,
	330, 1365, 331, 332, 1366, 333, 334, 335, 1367, 336,
	337, 610, 338, 339, 340, 342, 344, 341, 345, 346,
	347, 348, 611, 612, 349, 1368, 260, 1369, 0, 0,
	0, 0, 350, 351, 352, 613, 0, 0, 0, 353,
	1370, 354, 1371, 1372, 1136, 355, 356, 614, 615, 357,
	358, 359, 360, 361, 362, 363, 364, 1373, 365, 616,
	1374, 617, 366, 1375, 367, 368, 369, 370, 371, 618,
	619, 620, 448, 1138, 372, 373, 1376, 374, 375, 376,
	377, 0, 0, 0, 261, 378, 379, 380, 382, 1377,
	1137, 381, 621, 622, 1378, 623, 1379, 383, 384, 1139,
	624, 1140, 385, 386, 387, 1141, 388, 0, 0, 0,
	389, 390, 391, 392, 393, 394, 1380, 395, 397, 396,
	1381, 398, 625, 1142, 399, 400, 1143, 1382, 401, 0,
	0, 0, 402, 403, 406, 1383, 1384, 404, 405, 407,
	408, 0, 409, 410, 412, 415, 411, 413, 414, 416,
	429, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 431, 0, 430, 1144, 432, 433, 434,
	439, 441, 442, 437, 438, 440, 443, 444, 436, 1145,
	435, 1385, 262, 1146, 445, 446, 1386, 626, 447, 627,
	449, 450, 1387, 0, 451, 0, 1388, 1389, 453, 454,
	455, 1390, 1391, 456, 457, 628, 1147, 458, 1148, 629,
	459, 460, 452, 461, 462, 463, 464, 465, 466, 467,
	468, 1392, 469, 470, 630, 471, 472, 473, 631, 474,
	475, 476, 632, 477, 633, 478, 479, 1393, 480, 481,
	0, 482, 483, 484, 485, 486, 487, 488, 634, 489,
	491, 490, 492, 1394, 493, 0, 494, 495, 496, 0,
	0, 0, 0, 497, 0, 499, 500, 501, 498, 502,
	503, 504, 505, 1395, 506, 507, 508, 1149, 509, 510,
	511, 512, 635, 513, 0, 514, 515, 521, 522, 516,
	517, 523, 524, 525, 526, 527, 1396, 529, 530, 528,
	531, 532, 533, 1397, 534, 535, 518, 519, 536, 537,
	1150, 538, 539, 540, 541, 542, 543, 636, 0, 544,
	1398, 545, 546, 547, 548, 520, 549, 554, 637, 550,
	551, 552, 553, 638, 556, 1399, 557, 558, 0, 555,
	1400, 559, 560, 561, 562, 563, 564, 565, 343, 566,
	1401, 567, 639, 640, 641, 642, 1402, 576, 1403, 568,
	569, 570, 643, 571, 644, 1404, 572, 573, 574, 575,
	0, 577, 578, 1405, 1406, 579, 580, 581, 583, 584,
	582, 585, 1407, 586, 1408, 0, 587, 588, 589, 645,
	646, 647, 1409, 591, 590, 592, 648, 1410, 1411, 1412,
	1413, 593, 594, 649, 595, 596, 597, 2399, 0, 1070,
	1042, 1043, 1044, 1040, 1041, 1053, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 2396, 271, 272, 0, 0, 0,
	0, 0, 1094, 1058, 0, 0, 0, 273, 274, 1134,
	275, 276, 277, 278, 279, 599, 1107, 0, 280, 1114,
	281, 1113, 0, 1124, 282, 283, 284, 285, 286, 287,
	1060, 1093, 1027, 288, 1154, 1155, 606, 0, 289, 290,
	1100, 0, 1081, 0, 291, 292, 293, 294, 295, 296,
	297, 0, 0, 299, 300, 301, 298, 302, 0, 303,
	0, 304, 305, 306, 307, 308, 309, 0, 310, 311,
	312, 1135, 313, 314, 1084, 1082, 1083, 1090, 1086, 1085,
	1089, 315, 316, 317, 318, 1117, 319, 1111, 1110, 1031,
	323, 320, 321, 0, 324, 322, 0, 325, 326, 327,
	2397, 0, 328, 1102, 330, 0, 331, 332, 0, 333,
	334, 335, 0, 336, 337, 1037, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 1125, 1126, 349, 1049,
	260, 0, 0, 0, 0, 0, 350, 351, 352, 1109,
	0, 0, 0, 353, 0, 354, 0, 0, 1136, 355,
	356, 1122, 1123, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 365, 1132, 0, 1059, 366, 0, 367, 368,
	369, 370, 371, 1095, 1096, 1099, 448, 1138, 372, 373,
	0, 374, 375, 376, 377, 0, 0, 0, 261, 378,
	379, 380, 382, 0, 1137, 381, 1104, 1105, 0, 1065,
	0, 383, 384, 1139, 1097, 1140, 385, 386, 387, 1141,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	0, 395, 397, 396, 0, 398, 1133, 1142, 399, 400,
	1143, 0, 401, 0, 0, 0, 402, 403, 406, 1088,
	1087, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	1144, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 1145, 435, 1028, 262, 1146, 445, 446,
	1050, 1098, 447, 1112, 449, 450, 0, 0, 451, 0,
	0, 0, 453, 454, 455, 0, 0, 456, 457, 628,
	1147, 458, 1148, 1127, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 0, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 1128, 477, 633, 478,
	479, 0, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 1108, 489, 491, 490, 492, 0, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 0, 506, 507,
	508, 1149, 509, 510, 511, 512, 1038, 513, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	0, 529, 530, 528, 531, 532, 533, 1091, 534, 535,
	518, 519, 536, 537, 1150, 538, 539, 540, 541, 542,
	543, 1106, 0, 544, 0, 545, 546, 547, 548, 520,
	549, 554, 1153, 550, 551, 552, 553, 1129, 556, 0,
	557, 558, 1026, 555, 0, 559, 560, 561, 562, 563,
	564, 565, 343, 566, 0, 567, 1118, 1119, 1120, 1121,
	0, 576, 0, 568, 569, 570, 1130, 571, 1131, 1048,
	572, 573, 574, 575, 0, 577, 578, 0, 1032, 579,
	580, 581, 583, 584, 582, 585, 1092, 586, 0, 0,
	587, 588, 589, 645, 1115, 1152, 2395, 591, 590, 592,
	648, 0, 0, 0, 0, 593, 594, 649, 595, 596,
	597, 1029, 0, 0, 0, 0, 0, 0, 0, 1025,
	0, 0, 0, 0, 0, 0, 1023, 1024, 2398, 0,
	0, 0, 0, 0, 0, 1054, 2394, 0, 1016, 1052,
	1070, 1042, 1043, 1044, 1040, 1041, 1053, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1094, 1058, 0, 0, 0, 273, 274,
	1134, 275, 276, 277, 278, 279, 599, 1107, 0, 280,
	1114, 281, 1113, 0, 1124, 282, 283, 284, 285, 286,
	287, 1060, 1093, 1027, 288, 1154, 1155, 606, 0, 289,
	290, 1100, 0, 1081, 0, 291, 292, 293, 294, 295,
	296, 297, 0, 0, 299, 300, 301, 298, 302, 0,
	303, 0, 304, 305, 306, 307, 308, 309, 0, 310,
	311, 312, 1135, 313, 314, 1084, 1082, 1083, 1090, 1086,
	1085, 1089, 315, 316, 317, 318, 1117, 319, 1111, 1110,
	1031, 323, 320, 321, 0, 324, 322, 0, 325, 326,
	327, 0, 0, 328, 1102, 330, 0, 331, 332, 0,
	333, 334, 335, 0, 336, 337, 1037, 338, 339, 340,
	342, 344, 341, 345, 346, 347, 348, 1125, 1126, 349,
	1049, 260, 0, 0, 0, 0, 0, 350, 351, 352,
	1109, 0, 0, 0, 353, 0, 354, 0, 0, 1136,
	355, 356, 1122, 1123, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 365, 1132, 0, 1059, 366, 0, 367,
	368, 369, 370, 371, 1095, 1096, 1099, 448, 1138, 372,
	373, 0, 374, 375, 376, 377, 0, 0, 0, 261,
	378, 379, 380, 382, 0, 1137, 381, 1104, 1105, 0,
	1065, 0, 383, 384, 1139, 1097, 1140, 385, 386, 387,
	1141, 388, 0, 0, 0, 389, 390, 391, 392, 393,
	394, 0, 395, 397, 396, 0, 398, 1133, 1142, 399,
	400, 1143, 0, 401, 0, 0, 0, 402, 403, 406,
	1088, 1087, 404, 405, 407, 408, 0, 409, 410, 412,
	415, 411, 413, 414, 416, 429, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 431, 0,
	430, 1144, 432, 433, 434, 439, 441, 442, 437, 438,
	440, 443, 444, 436, 1145, 435, 1028, 262, 1146, 445,
	446, 1050, 1098, 447, 1112, 449, 450, 0, 0, 451,
	0, 0, 0, 453, 454, 455, 0, 0, 456, 457,
	628, 1147, 458, 1148, 1127, 459, 460, 452, 461, 462,
	463, 464, 465, 466, 467, 468, 0, 469, 470, 630,
	471, 472, 473, 631, 474, 475, 476, 1128, 477, 633,
	478, 479, 0, 480, 481, 0, 482, 483, 484, 485,
	486, 487, 488, 1108, 489, 491, 490, 492, 0, 493,
	0, 494, 495, 496, 0, 0, 0, 0, 497, 0,
	499, 500, 501, 498, 502, 503, 504, 505, 0, 506,
	507, 508, 1149, 509, 510, 511, 512, 1038, 513, 0,
	514, 515, 521, 522, 516, 517, 523, 524, 525, 526,
	527, 222, 529, 530, 528, 531, 532, 533, 1091, 534,
	535, 518, 519, 536, 537, 1150, 538, 539, 540, 541,
	542, 543, 1106, 0, 544, 0, 545, 546, 547, 548,
	520, 549, 554, 1153, 550, 551, 552, 553, 1129, 556,
	0, 557, 558, 1026, 555, 224, 559, 560, 561, 562,
	563, 564, 565, 343, 566, 0, 567, 1118, 1119, 1120,
	1121, 0, 576, 0, 568, 569, 570, 1130, 571, 1131,
	1048, 572, 573, 574, 575, 0, 577, 578, 0, 1032,
	579, 580, 581, 583, 584, 582, 585, 1092, 586, 0,
	0, 587, 588, 589, 1542, 1115, 1152, 0, 591, 590,
	592, 648, 0, 0, 0, 216, 593, 594, 649, 595,
	596, 597, 1029, 0, 217, 0, 0, 0, 0, 0,
	1025, 0, 0, 0, 0, 0, 0, 1023, 1024, 1070,
	1042, 1043, 1044, 1040, 1041, 1053, 1781, 1779, 0, 0,
	1052, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1094, 1058, 0, 0, 0, 273, 274, 1134,
	275, 276, 277, 278, 279, 599, 1107, 0, 280, 1114,
	281, 1113, 0, 1124, 282, 283, 284, 285, 286, 287,
	1060, 1093, 1027, 288, 1154, 1155, 606, 0, 289, 290,
	1100, 0, 1081, 0, 291, 292, 293, 294, 295, 296,
	297, 0, 0, 299, 300, 301, 298, 302, 0, 303,
	0, 304, 305, 306, 307, 308, 309, 0, 310, 311,
	312, 1135, 313, 314, 1084, 1082, 1083, 1090, 1086, 1085,
	1089, 315, 316, 317, 318, 1117, 319, 1111, 1110, 1031,
	323, 320, 321, 0, 324, 322, 0, 325, 326, 327,
	0, 0, 328, 1102, 330, 0, 331, 332, 0, 333,
	334, 335, 0, 336, 337, 1037, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 1125, 1126, 349, 1049,
	260, 0, 0, 0, 0, 0, 350, 351, 352, 1109,
	0, 0, 0, 353, 0, 354, 0, 0, 1136, 355,
	356, 1122, 1123, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 365, 1132, 0, 1059, 366, 0, 367, 368,
	369, 370, 371, 1095, 1096, 1099, 448, 1138, 372, 373,
	0, 374, 375, 376, 377, 0, 0, 0, 261, 378,
	379, 380, 382, 0, 1137, 381, 1104, 1105, 0, 1065,
	0, 383, 384, 1139, 1097, 1140, 385, 386, 387, 1141,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	0, 395, 397, 396, 0, 398, 1133, 1142, 399, 400,
	1143, 0, 401, 0, 0, 0, 402, 403, 406, 1088,
	1087, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	1144, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 1145, 435, 1028, 262, 1146, 445, 446,
	1050, 1098, 447, 1112, 449, 450, 0, 0, 451, 0,
	0, 0, 453, 454, 455, 0, 0, 456, 457, 628,
	1147, 458, 1148, 1127, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 0, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 1128, 477, 633, 478,
	479, 0, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 1108, 489, 491, 490, 492, 0, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 0, 506, 507,
	508, 1149, 509, 510, 511, 512, 1038, 513, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	222, 529, 530, 528, 531, 532, 533, 1091, 534, 535,
	518, 519, 536, 537, 1150, 538, 539, 540, 541, 542,
	543, 1106, 0, 544, 0, 545, 546, 547, 548, 520,
	549, 554, 1153, 550, 551, 552, 553, 1129, 556, 0,
	557, 558, 1026, 555, 224, 559, 560, 561, 562, 563,
	564, 565, 343, 566, 0, 567, 1118, 1119, 1120, 1121,
	0, 576, 0, 568, 569, 570, 1130, 571, 1131, 1048,
	572, 573, 574, 575, 0, 577, 578, 0, 1032, 579,
	580, 581, 583, 584, 582, 585, 1092, 586, 0, 0,
	587, 588, 589, 1542, 1115, 1152, 0, 591, 590, 592,
	648, 0, 0, 0, 216, 593, 594, 649, 595, 596,
	597, 1029, 0, 217, 0, 0, 0, 0, 0, 1025,
	0, 0, 0, 0, 0, 0, 1023, 1024, 1070, 1042,
	1043, 1044, 1040, 1041, 1053, 1781, 2989, 0, 0, 1052,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 1094, 1058, 0, 0, 0, 273, 274, 1134, 275,
	276, 277, 278, 279, 599, 1107, 0, 280, 1114, 281,
	1113, 0, 1124, 282, 283, 284, 285, 286, 287, 1060,
	1093, 1027, 288, 1154, 1155, 606, 0, 289, 290, 1100,
	0, 1081, 0, 291, 292, 293, 294, 295, 296, 297,
	0, 0, 299, 300, 301, 298, 302, 0, 303, 0,
	304, 305, 306, 307, 308, 309, 0, 310, 311, 312,
	1135, 313, 314, 1084, 1082, 1083, 1090, 1086, 1085, 1089,
	315, 316, 317, 318, 1117, 319, 1111, 1110, 1031, 323,
	320, 321, 0, 324, 322, 0, 325, 326, 327, 0,
	0, 328, 1102, 330, 0, 331, 332, 0, 333, 334,
	335, 0, 336, 337, 1037, 338, 339, 340, 342, 344,
	341, 345, 346, 347, 348, 1125, 1126, 349, 1049, 260,
	0, 0, 0, 0, 0, 350, 351, 352, 1109, 0,
	0, 0, 353, 0, 354, 0, 0, 1136, 355, 356,
	1122, 1123, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 365, 1132, 0, 1059, 366, 0, 367, 368, 369,
	370, 371, 1095, 1096, 1099, 448, 1138, 372, 373, 0,
	374, 375, 376, 377, 0, 0, 0, 261, 378, 379,
	380, 382, 0, 1137, 381, 1104, 1105, 0, 1065, 0,
	383, 384, 1139, 1097, 1140, 385, 386, 387, 1141, 388,
	0, 0, 0, 389, 390, 391, 392, 393, 394, 0,
	395, 397, 396, 0, 398, 1133, 1142, 399, 400, 1143,
	0, 401, 0, 0, 0, 402, 403, 406, 1088, 1087,
	404, 405, 407, 408, 0, 409, 410, 412, 415, 411,
	413, 414, 416, 429, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 431, 0, 430, 1144,
	432, 433, 434, 439, 441, 442, 437, 438, 440, 443,
	444, 436, 1145, 435, 1028, 262, 1146, 445, 446, 1050,
	1098, 447, 1112, 449, 450, 0, 0, 451, 0, 0,
	0, 453, 454, 455, 0, 0, 456, 457, 628, 1147,
	458, 1148, 1127, 459, 460, 452, 461, 462, 463, 464,
	465, 466, 467, 468, 0, 469, 470, 630, 471, 472,
	473, 631, 474, 475, 476, 1128, 477, 633, 478, 479,
	0, 480, 481, 0, 482, 483, 484, 485, 486, 487,
	488, 1108, 489, 491, 490, 492, 0, 493, 0, 494,
	495, 496, 0, 0, 0, 0, 497, 0, 499, 500,
	501, 498, 502, 503, 504, 505, 0, 506, 507, 508,
	1149, 509, 510, 511, 512, 1038, 513, 0, 514, 515,
	521, 522, 516, 517, 523, 524, 525, 526, 527, 222,
	529, 530, 528, 531, 532, 533, 1091, 534, 535, 518,
	519, 536, 537, 1150, 538, 539, 540, 541, 542, 543,
	1106, 0, 544, 0, 545, 546, 547, 548, 520, 549,
	554, 1153, 550, 551, 552, 553, 1129, 556, 0, 557,
	558, 1026, 555, 224, 559, 560, 561, 562, 563, 564,
	565, 343, 566, 0, 567, 1118, 1119, 1120, 1121, 0,
	576, 0, 568, 569, 570, 1130, 571, 1131, 1048, 572,
	573, 574, 575, 0, 577, 578, 0, 1032, 579, 580,
	581, 583, 584, 582, 585, 1092, 586, 0, 0, 587,
	588, 589, 1542, 1115, 1152, 0, 591, 590, 592, 648,
	0, 0, 0, 216, 593, 594, 649, 595, 596, 597,
	1029, 0, 217, 0, 0, 0, 0, 0, 1025, 0,
	0, 0, 0, 0, 0, 1023, 1024, 1070, 1042, 1043,
	1044, 1040, 1041, 1053, 1781, 1779, 0, 0, 1052, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	1094, 1058, 0, 0, 0, 273, 274, 1134, 275, 276,
	277, 278, 279, 599, 1107, 0, 280, 1114, 281, 1113,
	2527, 1124, 282, 283, 284, 285, 286, 287, 1060, 1093,
	1027, 288, 1154, 1155, 606, 0, 289, 290, 1100, 0,
	1081, 0, 291, 292, 293, 294, 295, 296, 297, 0,
	0, 299, 300, 301, 298, 302, 0, 303, 0, 304,
	305, 306, 307, 308, 309, 0, 310, 311, 312, 1135,
	313, 314, 1084, 1082, 1083, 1090, 1086, 1085, 1089, 315,
	316, 317, 318, 1117, 319, 1111, 1110, 1031, 323, 320,
	321, 0, 324, 322, 0, 325, 326, 327, 0, 0,
	328, 1102, 330, 0, 331, 332, 0, 333, 334, 335,
	0, 336, 337, 1037, 338, 339, 340, 342, 344, 341,
	345, 346, 347, 348, 1125, 1126, 349, 1049, 260, 0,
	0, 0, 0, 0, 350, 351, 352, 1109, 0, 0,
	0, 353, 0, 354, 0, 2532, 1136, 355, 356, 1122,
	1123, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	365, 1132, 0, 1059, 366, 0, 367, 368, 369, 370,
	371, 1095, 1096, 1099, 448, 1138, 372, 373, 0, 374,
	375, 376, 377, 0, 0, 0, 261, 378, 379, 380,
	382, 0, 1137, 381, 1104, 1105, 0, 1065, 0, 383,
	384, 1139, 1097, 1140, 385, 386, 387, 1141, 388, 0,
	0, 0, 389, 390, 391, 392, 393, 394, 0, 395,
	397, 396, 2528, 398, 1133, 1142, 399, 400, 1143, 0,
	401, 0, 0, 0, 402, 403, 406, 1088, 1087, 404,
	405, 407, 408, 0, 409, 410, 412, 415, 411, 413,
	414, 416, 429, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 431, 0, 430, 1144, 432,
	433, 434, 439, 441, 442, 437, 438, 440, 443, 444,
	436, 1145, 435, 1028, 262, 1146, 445, 446, 1050, 1098,
	447, 1112, 449, 450, 0, 0, 451, 0, 0, 0,
	453, 454, 455, 0, 0, 456, 457, 628, 1147, 458,
	1148, 1127, 459, 460, 452, 461, 462, 463, 464, 465,
	466, 467, 468, 0, 469, 470, 630, 471, 472, 473,
	631, 474, 475, 476, 1128, 477, 633, 478, 479, 0,
	480, 481, 0, 482, 483, 484, 485, 486, 487, 488,
	1108, 489, 491, 490, 492, 0, 493, 0, 494, 495,
	496, 0, 0, 0, 0, 497, 0, 499, 500, 501,
	498, 502, 503, 504, 505, 0, 506, 507, 508, 1149,
	509, 510, 511, 512, 1038, 513, 0, 514, 515, 521,
	522, 516, 517, 523, 524, 525, 526, 527, 0, 529,
	530, 528, 531, 532, 533, 1091, 534, 535, 518, 519,
	536, 537, 1150, 538, 539, 540, 541, 542, 543, 1106,
	0, 544, 0, 545, 546, 547, 548, 520, 549, 554,
	1153, 550, 551, 552, 553, 1129, 556, 0, 557, 558,
	1026, 555, 0, 559, 560, 561, 562, 563, 564, 565,
	343, 566, 0, 567, 1118, 1119, 1120, 1121, 0, 576,
	2529, 568, 569, 570, 1130, 571, 1131, 1048, 572, 573,
	574, 575, 0, 577, 578, 0, 1032, 579, 580, 581,
	583, 584, 582, 585, 1092, 586, 0, 0, 587, 588,
	589, 645, 1115, 1152, 0, 591, 590, 592, 648, 0,
	0, 0, 0, 593, 594, 649, 595, 596, 597, 1029,
	0, 0, 0, 0, 0, 0, 0, 1025, 0, 0,
	0, 0, 0, 0, 1023, 1024, 0, 0, 0, 0,
	0, 0, 0, 1054, 0, 0, 2444, 1052, 1070, 1042,
	1043, 1044, 1040, 1041, 1053, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 1094, 1058, 0, 0, 0, 273, 274, 1134, 275,
	276, 277, 278, 279, 599, 1107, 0, 280, 1114, 281,
	1113, 0, 1124, 282, 283, 284, 285, 286, 287, 1060,
	1093, 1027, 288, 1154, 1155, 606, 0, 289, 290, 1100,
	0, 1081, 0, 291, 292, 293, 294, 295, 296, 297,
	0, 0, 299, 300, 301, 298, 302, 0, 303, 0,
	304, 305, 306, 307, 308, 309, 0, 310, 311, 312,
	1135, 313, 314, 1084, 1082, 1083, 1090, 1086, 1085, 1089,
	315, 316, 317, 318, 1117, 319, 1111, 1110, 1031, 323,
	320, 321, 0, 324, 322, 0, 325, 326, 327, 0,
	0, 328, 1102, 330, 0, 331, 332, 0, 333, 334,
	335, 0, 336, 337, 1037, 338, 339, 340, 342, 344,
	341, 345, 346, 347, 348, 1125, 1126, 349, 1049, 260,
	0, 0, 0, 0, 0, 350, 351, 352, 1109, 0,
	0, 0, 353, 0, 354, 0, 0, 1136, 355, 356,
	1122, 1123, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 365, 1132, 0, 1059, 366, 0, 367, 368, 369,
	370, 371, 1095, 1096, 1099, 448, 1138, 372, 373, 0,
	374, 375, 376, 377, 0, 0, 0, 261, 378, 379,
	380, 382, 0, 1137, 381, 1104, 1105, 0, 1065, 0,
	383, 384, 1139, 1097, 1140, 385, 386, 387, 1141, 388,
	0, 0, 0, 389, 390, 391, 392, 393, 394, 0,
	395, 397, 396, 0, 398, 1133, 1142, 399, 400, 1143,
	0, 401, 0, 0, 0, 402, 403, 406, 1088, 1087,
	404, 405, 407, 408, 0, 409, 410, 412, 415, 411,
	413, 414, 416, 429, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 431, 0, 430, 1144,
	432, 433, 434, 439, 441, 442, 437, 438, 440, 443,
	444, 436, 1145, 435, 1028, 262, 1146, 445, 446, 1050,
	1098, 447, 1112, 449, 450, 0, 0, 451, 0, 0,
	0, 453, 454, 455, 0, 0, 456, 457, 628, 1147,
	458, 1148, 1127, 459, 460, 452, 461, 462, 463, 464,
	465, 466, 467, 468, 0, 469, 470, 630, 471, 472,
	473, 631, 474, 475, 476, 1128, 477, 633, 478, 479,
	0, 480, 481, 0, 482, 483, 484, 485, 486, 487,
	488, 1108, 489, 491, 490, 492, 0, 493, 0, 494,
	495, 496, 0, 0, 0, 0, 497, 0, 499, 500,
	501, 498, 502, 503, 504, 505, 0, 506, 507, 508,
	1149, 509, 510, 511, 512, 1038, 513, 0, 514, 515,
	521, 522, 516, 517, 523, 524, 525, 526, 527, 0,
	529, 530, 528, 531, 532, 533, 1091, 534, 535, 518,
	519, 536, 537, 1150, 538, 539, 540, 541, 542, 543,
	1106, 0, 544, 0, 545, 546, 547, 548, 520, 549,
	554, 1153, 550, 551, 552, 553, 1129, 556, 0, 557,
	558, 1026, 555, 0, 559, 560, 561, 562, 563, 564,
	565, 343, 566, 0, 567, 1118, 1119, 1120, 1121, 0,
	576, 0, 568, 569, 570, 1130, 571, 1131, 1048, 572,
	573, 574, 575, 0, 577, 578, 0, 1032, 579, 580,
	581, 583, 584, 582, 585, 1092, 586, 0, 0, 587,
	588, 589, 645, 1115, 1152, 0, 591, 590, 592, 648,
	0, 0, 0, 0, 593, 594, 649, 595, 596, 597,
	1029, 0, 0, 0, 0, 0, 0, 0, 1025, 0,
	0, 0, 0, 0, 0, 1023, 1024, 0, 0, 0,
	0, 0, 0, 0, 1054, 2442, 0, 2441, 1052, 1070,
	1042, 1043, 1044, 1040, 1041, 1053, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1094, 1058, 0, 0, 0, 273, 274, 1134,
	275, 276, 277, 278, 279, 599, 1107, 0, 280, 1114,
	281, 1113, 0, 1124, 282, 283, 284, 285, 286, 287,
	1060, 1093, 1027, 288, 1154, 1155, 606, 0, 289, 290,
	1100, 0, 1081, 0, 291, 292, 293, 294, 295, 296,
	297, 0, 0, 299, 300, 301, 298, 302, 0, 303,
	0, 304, 305, 306, 307, 308, 309, 0, 310, 311,
	312, 1135, 313, 314, 1084, 1082, 1083, 1090, 1086, 1085,
	1089, 315, 316, 317, 318, 1117, 319, 1111, 1110, 1031,
	323, 320, 321, 0, 324, 322, 0, 325, 326, 327,
	0, 0, 328, 1102, 330, 0, 331, 332, 0, 333,
	334, 335, 0, 336, 337, 1037, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 1125, 1126, 349, 1049,
	260, 0, 0, 0, 0, 0, 350, 351, 352, 1109,
	0, 0, 0, 353, 0, 354, 0, 0, 1136, 355,
	356, 1122, 1123, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 365, 1132, 0, 1059, 366, 0, 367, 368,
	369, 370, 371, 1095, 1096, 1099, 448, 1138, 372, 373,
	0, 374, 375, 376, 377, 0, 0, 0, 261, 378,
	379, 380, 382, 0, 1137, 381, 1104, 1105, 0, 1065,
	0, 383, 384, 1139, 1097, 1140, 385, 386, 387, 1141,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	0, 395, 397, 396, 0, 398, 1133, 1142, 399, 400,
	1143, 0, 401, 0, 0, 0, 402, 403, 406, 1088,
	1087, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	1144, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 1145, 435, 1028, 262, 1146, 445, 446,
	1050, 1098, 447, 1112, 449, 450, 0, 0, 451, 0,
	0, 0, 453, 454, 455, 0, 0, 456, 457, 628,
	1147, 458, 1148, 1127, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 0, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 1128, 477, 633, 478,
	479, 0, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 1108, 489, 491, 490, 492, 0, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 0, 506, 507,
	508, 1149, 509, 510, 511, 512, 1038, 513, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	0, 529, 530, 528, 531, 532, 533, 1091, 534, 535,
	518, 519, 536, 537, 1150, 538, 539, 540, 541, 542,
	543, 1106, 0, 544, 0, 545, 546, 547, 548, 520,
	549, 554, 1153, 550, 551, 552, 553, 1129, 556, 0,
	557, 558, 1026, 555, 0, 559, 560, 561, 562, 563,
	564, 565, 343, 566, 0, 567, 1118, 1119, 1120, 1121,
	0, 576, 0, 568, 569, 570, 1130, 571, 1131, 1048,
	572, 573, 574, 575, 0, 577, 578, 0, 1032, 579,
	580, 581, 583, 584, 582, 585, 1092, 586, 0, 0,
	587, 588, 589, 645, 1115, 1152, 0, 591, 590, 592,
	648, 0, 0, 0, 0, 593, 594, 649, 595, 596,
	597, 1029, 0, 0, 0, 0, 0, 0, 0, 1025,
	0, 0, 0, 0, 0, 0, 1023, 1024, 0, 0,
	0, 0, 0, 0, 0, 1054, 2439, 0, 2438, 1052,
	1070, 1042, 1043, 1044, 1040, 1041, 1053, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1094, 1058, 0, 0, 0, 273, 274,
	1134, 275, 276, 277, 278, 279, 599, 1107, 0, 280,
	1114, 281, 1113, 0, 1124, 282, 283, 284, 285, 286,
	287, 1060, 1093, 1027, 288, 1154, 1155, 606, 0, 289,
	290, 1100, 0, 1081, 0, 291, 292, 293, 294, 295,
	296, 297, 0, 0, 299, 300, 301, 298, 302, 0,
	303, 0, 304, 305, 306, 307, 308, 309, 0, 310,
	311, 312, 1135, 313, 314, 1084, 1082, 1083, 1090, 1086,
	1085, 1089, 315, 316, 317, 318, 1117, 319, 1111, 1110,
	1031, 323, 320, 321, 0, 324, 322, 0, 325, 326,
	327, 0, 0, 328, 1102, 330, 0, 331, 332, 0,
	333, 334, 335, 0, 336, 337, 1037, 338, 339, 340,
	342, 344, 341, 345, 346, 347, 348, 1125, 1126, 349,
	1049, 260, 0, 0, 0, 0, 0, 350, 351, 352,
	1109, 0, 0, 0, 353, 0, 354, 0, 0, 1136,
	355, 356, 1122, 1123, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 365, 1132, 0, 1059, 366, 0, 367,
	368, 369, 370, 371, 1095, 1096, 1099, 448, 1138, 372,
	373, 0, 374, 375, 376, 377, 0, 0, 0, 261,
	378, 379, 380, 382, 0, 1137, 381, 1104, 1105, 0,
	1065, 0, 383, 384, 1139, 1097, 1140, 385, 386, 387,
	1141, 388, 0, 0, 0, 389, 390, 391, 392, 393,
	394, 0, 395, 397, 396, 0, 398, 1133, 1142, 399,
	400, 1143, 0, 401, 0, 0, 0, 402, 403, 406,
	1088, 1087, 404, 405, 407, 408, 0, 409, 410, 412,
	415, 411, 413, 414, 416, 429, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 431, 0,
	430, 1144, 432, 433, 434, 439, 441, 442, 437, 438,
	440, 443, 444, 436, 1145, 435, 1028, 262, 1146, 445,
	446, 1050, 1098, 447, 1112, 449, 450, 0, 0, 451,
	0, 0, 0, 453, 454, 455, 0, 0, 456, 457,
	628, 1147, 458, 1148, 1127, 459, 460, 452, 461, 462,
	463, 464, 465, 466, 467, 468, 0, 469, 470, 630,
	471, 472, 473, 631, 474, 475, 476, 1128, 477, 633,
	478, 479, 0, 480, 481, 0, 482, 483, 484, 485,
	486, 487, 488, 1108, 489, 491, 490, 492, 0, 493,
	0, 494, 495, 496, 0, 0, 0, 0, 497, 0,
	499, 500, 501, 498, 502, 503, 504, 505, 0, 506,
	507, 508, 1149, 509, 510, 511, 512, 1038, 513, 0,
	514, 515, 521, 522, 516, 517, 523, 524, 525, 526,
	527, 0, 529, 530, 528, 531, 532, 533, 1091, 534,
	535, 518, 519, 536, 537, 1150, 538, 539, 540, 541,
	542, 543, 1106, 0, 544, 0, 545, 546, 547, 548,
	520, 549, 554, 1153, 550, 551, 552, 553, 1129, 556,
	0, 557, 558, 1026, 555, 0, 559, 560, 561, 562,
	563, 564, 565, 343, 566, 0, 567, 1118, 1119, 1120,
	1121, 0, 576, 0, 568, 569, 570, 1130, 571, 1131,
	1048, 572, 573, 574, 575, 0, 577, 578, 0, 1032,
	579, 580, 581, 583, 584, 582, 585, 1092, 586, 0,
	0, 587, 588, 589, 645, 1115, 1152, 0, 591, 590,
	592, 648, 0, 0, 0, 0, 593, 594, 649, 595,
	596, 597, 1029, 0, 0, 0, 0, 0, 0, 0,
	1025, 0, 0, 0, 0, 0, 0, 1023, 1024, 0,
	0, 0, 0, 0, 0, 0, 1054, 2436, 0, 2435,
	1052, 1070, 1042, 1043, 1044, 1040, 1041, 1053, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 1094, 1058, 0, 0, 0, 273,
	274, 1134, 275, 276, 277, 278, 279, 599, 1107, 0,
	280, 1114, 281, 1113, 0, 1124, 282, 283, 284, 285,
	286, 287, 1060, 1093, 1027, 288, 1154, 1155, 606, 0,
	289, 290, 1100, 0, 1081, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 1135, 313, 314, 1084, 1082, 1083, 1090,
	1086, 1085, 1089, 315, 316, 317, 318, 1117, 319, 1111,
	1110, 1031, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 1102, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 1037, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 1125, 1126,
	349, 1049, 260, 0, 0, 0, 0, 0, 350, 351,
	352, 1109, 0, 0, 0, 353, 0, 354, 0, 0,
	1136, 355, 356, 1122, 1123, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 1132, 0, 1059, 366, 0,
	367, 368, 369, 370, 371, 1095, 1096, 1099, 448, 1138,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	261, 378, 379, 380, 382, 0, 1137, 381, 1104, 1105,
	0, 1065, 0, 383, 384, 1139, 1097, 1140, 385, 386,
	387, 1141, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 395, 397, 396, 0, 398, 1133, 1142,
	399, 400, 1143, 0, 401, 0, 0, 0, 402, 403,
	406, 1088, 1087, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 1144, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 1145, 435, 1028, 262, 1146,
	445, 446, 1050, 1098, 447, 1112, 449, 450, 0, 0,
	451, 0, 0, 0, 453, 454, 455, 0, 0, 456,
	457, 628, 1147, 458, 1148, 1127, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 1128, 477,
	633, 478, 479, 0, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 1108, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 1149, 509, 510, 511, 512, 1038, 513,
	0, 514, 515, 521, 522, 516, 517, 523, 524, 525,
	526, 527, 0, 529, 530, 528, 531, 532, 533, 1091,
	534, 535, 518, 519, 536, 537, 1150, 538, 539, 540,
	541, 542, 543, 1106, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 1153, 550, 551, 552, 553, 1129,
	556, 0, 557, 558, 1026, 555, 0, 559, 560, 561,
	562, 563, 564, 565, 343, 566, 0, 567, 1118, 1119,
	1120, 1121, 0, 576, 0, 568, 569, 570, 1130, 571,
	1131, 1048, 572, 573, 574, 575, 0, 577, 578, 0,
	1032, 579, 580, 581, 583, 584, 582, 585, 1092, 586,
	0, 0, 587, 588, 589, 645, 1115, 1152, 0, 591,
	590, 592, 648, 0, 0, 0, 0, 593, 594, 649,
	595, 596, 597, 1029, 0, 0, 0, 0, 0, 0,
	0, 1025, 0, 0, 0, 0, 0, 0, 1023, 1024,
	0, 0, 0, 0, 0, 0, 0, 1054, 2433, 0,
	1632, 1052, 1070, 1042, 1043, 1044, 1040, 1041, 1053, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 1094, 1058, 0, 0, 0,
	273, 274, 1134, 275, 276, 277, 278, 279, 599, 1107,
	0, 280, 1114, 281, 1113, 0, 1124, 282, 283, 284,
	285, 286, 287, 1060, 1093, 1027, 288, 1154, 1155, 606,
	0, 289, 290, 1100, 0, 1081, 0, 291, 292, 293,
	294, 295, 296, 297, 0, 0, 299, 300, 301, 298,
	302, 0, 303, 0, 304, 305, 306, 307, 308, 309,
	0, 310, 311, 312, 1135, 313, 314, 1084, 1082, 1083,
	1090, 1086, 1085, 1089, 315, 316, 317, 318, 1117, 319,
	1111, 1110, 1031, 323, 320, 321, 0, 324, 322, 0,
	325, 326, 327, 0, 0, 328, 1102, 330, 0, 331,
	332, 0, 333, 334, 335, 0, 336, 337, 1037, 338,
	339, 340, 342, 344, 341, 345, 346, 347, 348, 1125,
	1126, 349, 1049, 260, 0, 0, 0, 0, 0, 350,
	351, 352, 1109, 0, 0, 0, 353, 0, 354, 0,
	0, 1136, 355, 356, 1122, 1123, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 365, 1132, 0, 1059, 366,
	0, 367, 368, 369, 370, 371, 1095, 1096, 1099, 448,
	1138, 372, 373, 0, 374, 375, 376, 377, 0, 0,
	0, 261, 378, 379, 380, 382, 0, 1137, 381, 1104,
	1105, 0, 1065, 0, 383, 384, 1139, 1097, 1140, 385,
	386, 387, 1141, 388, 0, 0, 0, 389, 390, 391,
	392, 393, 394, 0, 395, 397, 396, 0, 398, 1133,
	1142, 399, 400, 1143, 0, 401, 0, 0, 0, 402,
	403, 406, 1088, 1087, 404, 405, 407, 408, 0, 409,
	410, 412, 415, 411, 413, 414, 416, 429, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	431, 0, 430, 1144, 432, 433, 434, 439, 441, 442,
	437, 438, 440, 443, 444, 436, 1145, 435, 1028, 262,
	1146, 445, 446, 1050, 1098, 447, 1112, 449, 450, 0,
	0, 451, 0, 0, 0, 453, 454, 455, 0, 0,
	456, 457, 628, 1147, 458, 1148, 1127, 459, 460, 452,
	461, 462, 463, 464, 465, 466, 467, 468, 0, 469,
	470, 630, 471, 472, 473, 631, 474, 475, 476, 1128,
	477, 633, 478, 479, 0, 480, 481, 0, 482, 483,
	484, 485, 486, 487, 488, 1108, 489, 491, 490, 492,
	0, 493, 0, 494, 495, 496, 0, 0, 0, 0,
	497, 0, 499, 500, 501, 498, 502, 503, 504, 505,
	0, 506, 507, 508, 1149, 509, 510, 511, 512, 1038,
	513, 0, 514, 515, 521, 522, 516, 517, 523, 524,
	525, 526, 527, 0, 529, 530, 528, 531, 532, 533,
	1091, 534, 535, 518, 519, 536, 537, 1150, 538, 539,
	540, 541, 542, 543, 1106, 0, 544, 0, 545, 546,
	547, 548, 520, 549, 554, 1153, 550, 551, 552, 553,
	1129, 556, 0, 557, 558, 1026, 555, 0, 559, 560,
	561, 562, 563, 564, 565, 343, 566, 0, 567, 1118,
	1119, 1120, 1121, 0, 576, 0, 568, 569, 570, 1130,
	571, 1131, 1048, 572, 573, 574, 575, 0, 577, 578,
	0, 1032, 579, 580, 581, 583, 584, 582, 585, 1092,
	586, 0, 0, 587, 588, 589, 645, 1115, 1152, 0,
	591, 590, 592, 648, 1631, 0, 0, 0, 593, 594,
	649, 595, 596, 597, 1029, 0, 0, 0, 0, 0,
	0, 0, 1025, 0, 0, 0, 0, 0, 0, 1023,
	1024, 0, 0, 0, 0, 0, 0, 0, 1054, 0,
	0, 1019, 1052, 1070, 1042, 1043, 1044, 1040, 1041, 1053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 1094, 1058, 0, 0,
	0, 273, 274, 1134, 275, 276, 277, 278, 279, 599,
	1107, 0, 280, 1114, 281, 1113, 0, 1124, 282, 283,
	284, 285, 286, 287, 1060, 1093, 1027, 288, 1154, 1155,
	606, 0, 289, 290, 1100, 0, 1081, 0, 291, 292,
	293, 294, 295, 296, 297, 0, 0, 299, 300, 301,
	298, 302, 0, 303, 0, 304, 305, 306, 307, 308,
	309, 0, 310, 311, 312, 1135, 313, 314, 1084, 1082,
	1083, 1090, 1086, 1085, 1089, 315, 316, 317, 318, 1117,
	319, 1111, 1110, 1031, 323, 320, 321, 0, 324, 322,
	0, 325, 326, 327, 0, 0, 328, 1102, 330, 0,
	331, 332, 0, 333, 334, 335, 0, 336, 337, 1037,
	338, 339, 340, 342, 344, 341, 345, 346, 347, 348,
	1125, 1126, 349, 1049, 260, 0, 0, 0, 0, 0,
	350, 351, 352, 1109, 0, 0, 0, 353, 0, 354,
	0, 0, 1136, 355, 356, 1122, 1123, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 365, 1132, 0, 1059,
	366, 0, 367, 368, 369, 370, 371, 1095, 1096, 1099,
	448, 1138, 372, 373, 0, 374, 375, 376, 377, 0,
	0, 0, 261, 378, 379, 380, 382, 0, 1137, 381,
	1104, 1105, 0, 1065, 0, 383, 384, 1139, 1097, 1140,
	385, 386, 387, 1141, 388, 0, 0, 0, 389, 390,
	391, 392, 393, 394, 0, 395, 397, 396, 0, 398,
	1133, 1142, 399, 400, 1143, 0, 401, 0, 0, 0,
	402, 403, 406, 1088, 1087, 404, 405, 407, 408, 0,
	409, 410, 412, 415, 411, 413, 414, 416, 429, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 431, 0, 430, 1144, 432, 433, 434, 439, 441,
	442, 437, 438, 440, 443, 444, 436, 1145, 435, 1028,
	262, 1146, 445, 446, 1050, 1098, 447, 1112, 449, 450,
	0, 0, 451, 0, 1033, 0, 453, 454, 455, 0,
	0, 456, 457, 628, 1147, 458, 1148, 1127, 459, 460,
	452, 461, 462, 463, 464, 465, 466, 467, 468, 0,
	469, 470, 630, 471, 472, 473, 631, 474, 475, 476,
	1128, 477, 633, 478, 479, 0, 480, 481, 0, 482,
	483, 484, 485, 486, 487, 488, 1108, 489, 491, 490,
	492, 0, 493, 0, 494, 495, 496, 0, 0, 0,
	0, 497, 0, 499, 500, 501, 498, 502, 503, 504,
	505, 0, 506, 507, 508, 1149, 509, 510, 511, 512,
	1038, 513, 0, 514, 515, 521, 522, 516, 517, 523,
	524, 525, 526, 527, 0, 529, 530, 528, 531, 532,
	533, 1091, 534, 535, 518, 519, 536, 537, 1150, 538,
	539, 540, 541, 542, 543, 1106, 0, 544, 0, 545,
	546, 547, 548, 520, 549, 554, 1153, 550, 551, 552,
	553, 1129, 556, 0, 557, 558, 1026, 555, 0, 559,
	560, 561, 562, 563, 564, 565, 343, 566, 0, 567,
	1118, 1119, 1120, 1121, 0, 576, 0, 568, 569, 570,
	1130, 571, 1131, 1048, 572, 573, 574, 575, 0, 577,
	578, 0, 1032, 579, 580, 581, 583, 584, 582, 585,
	1092, 586, 0, 0, 587, 588, 589, 645, 1115, 1152,
	0, 591, 590, 592, 648, 0, 0, 0, 0, 593,
	594, 649, 595, 596, 597, 1029, 0, 0, 0, 0,
	0, 0, 0, 1025, 0, 0, 0, 0, 0, 0,
	1023, 1024, 1070, 1042, 1043, 1044, 1040, 1041, 1053, 1054,
	0, 0, 0, 1052, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 1094, 1058, 0, 0, 0,
	273, 274, 1134, 275, 276, 277, 278, 279, 599, 1107,
	0, 280, 1114, 281, 1113, 0, 1124, 282, 283, 284,
	285, 286, 287, 1060, 1093, 1027, 288, 1154, 1155, 606,
	0, 289, 290, 1100, 0, 1081, 0, 291, 292, 293,
	294, 295, 296, 297, 0, 0, 299, 300, 301, 298,
	302, 0, 303, 0, 304, 305, 306, 307, 4331, 309,
	0, 310, 311, 312, 1135, 313, 314, 1084, 1082, 1083,
	1090, 1086, 1085, 1089, 315, 316, 317, 318, 1117, 319,
	1111, 1110, 1031, 323, 320, 321, 0, 324, 322, 0,
	325, 326, 327, 0, 0, 328, 1102, 330, 0, 331,
	332, 0, 333, 334, 335, 0, 336, 337, 1037, 338,
	339, 340, 342, 344, 341, 345, 346, 347, 348, 1125,
	1126, 349, 1049, 260, 0, 0, 0, 0, 0, 350,
	351, 352, 1109, 0, 0, 0, 353, 0, 354, 0,
	0, 1136, 355, 356, 1122, 1123, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 365, 1132, 0, 1059, 366,
	0, 367, 368, 369, 370, 371, 1095, 1096, 1099, 448,
	1138, 372, 373, 0, 374, 375, 376, 377, 0, 0,
	0, 261, 378, 379, 380, 382, 0, 1137, 381, 1104,
	1105, 0, 1065, 0, 383, 384, 1139, 1097, 1140, 385,
	386, 387, 1141, 388, 0, 0, 0, 389, 390, 391,
	392, 393, 394, 0, 395, 397, 396, 0, 398, 1133,
	1142, 399, 400, 1143, 0, 401, 0, 0, 0, 402,
	403, 406, 1088, 1087, 404, 405, 407, 408, 0, 409,
	410, 412, 415, 411, 413, 414, 416, 429, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	431, 0, 430, 1144, 432, 433, 434, 439, 441, 442,
	437, 438, 440, 443, 444, 436, 1145, 435, 1028, 262,
	1146, 445, 446, 1050, 1098, 447, 1112, 449, 450, 0,
	0, 451, 0, 1033, 0, 453, 454, 455, 0, 0,
	456, 457, 628, 1147, 458, 1148, 1127, 459, 460, 452,
	461, 462, 463, 464, 465, 466, 467, 468, 0, 469,
	470, 630, 471, 472, 473, 631, 474, 475, 476, 1128,
	477, 633, 478, 479, 0, 480, 481, 0, 482, 483,
	484, 485, 486, 487, 488, 1108, 489, 491, 490, 492,
	0, 493, 0, 494, 495, 496, 0, 0, 0, 0,
	497, 0, 499, 500, 501, 498, 502, 503, 504, 505,
	0, 506, 507, 508, 1149, 509, 510, 511, 512, 1038,
	513, 0, 514, 515, 521, 522, 516, 517, 523, 524,
	525, 526, 527, 0, 529, 530, 528, 531, 532, 533,
	1091, 534, 535, 518, 519, 536, 537, 1150, 538, 539,
	540, 541, 542, 543, 1106, 0, 544, 0, 545, 546,
	547, 548, 520, 549, 554, 1153, 550, 551, 552, 553,
	1129, 556, 0, 557, 558, 1026, 555, 0, 559, 560,
	561, 562, 563, 564, 565, 343, 566, 0, 567, 1118,
	1119, 1120, 1121, 0, 576, 0, 568, 569, 570, 1130,
	571, 1131, 1048, 572, 573, 574, 575, 0, 577, 578,
	0, 1032, 579, 580, 581, 583, 584, 582, 585, 1092,
	586, 0, 0, 587, 588, 589, 645, 1115, 1152, 0,
	591, 590, 592, 648, 0, 0, 0, 0, 593, 594,
	649, 595, 596, 597, 1029, 0, 0, 0, 0, 0,
	0, 0, 1025, 0, 0, 0, 0, 0, 0, 1023,
	1024, 1070, 1042, 1043, 1044, 1040, 1041, 1053, 1054, 0,
	0, 0, 1052, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 1094, 1058, 0, 0, 0, 273,
	274, 1134, 275, 276, 277, 278, 279, 599, 1107, 0,
	280, 1114, 281, 1113, 0, 1124, 282, 283, 284, 285,
	286, 287, 1060, 1093, 1027, 288, 1154, 1155, 606, 0,
	289, 290, 1100, 0, 1081, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 1135, 313, 314, 1084, 1082, 1083, 1090,
	1086, 1085, 1089, 315, 316, 317, 318, 1117, 319, 1111,
	1110, 1031, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 1102, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 1037, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 1125, 1126,
	349, 1049, 260, 0, 0, 0, 0, 0, 350, 351,
	352, 1109, 0, 0, 0, 353, 0, 354, 0, 0,
	1136, 355, 356, 1122, 1123, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 1132, 0, 1059, 366, 0,
	367, 368, 369, 370, 371, 1095, 1096, 1099, 448, 1138,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	2313, 378, 379, 380, 382, 0, 1137, 381, 1104, 1105,
	0, 1065, 0, 383, 384, 1139, 1097, 1140, 385, 386,
	387, 1141, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 395, 397, 396, 0, 398, 1133, 1142,
	399, 400, 1143, 0, 401, 0, 0, 0, 402, 403,
	406, 1088, 1087, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 1144, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 1145, 435, 1028, 262, 1146,
	445, 446, 1050, 1098, 447, 1112, 449, 450, 0, 0,
	451, 0, 0, 0, 453, 454, 455, 0, 0, 456,
	457, 628, 1147, 458, 1148, 1127, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 1128, 477,
	633, 478, 479, 2312, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 1108, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 1149, 509, 510, 511, 512, 1038, 513,
	0, 514, 515, 521, 522, 516, 517, 523, 524, 525,
	526, 527, 0, 529, 530, 528, 531, 532, 533, 1091,
	534, 535, 518, 519, 536, 537, 1150, 538, 539, 540,
	541, 542, 543, 1106, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 1153, 550, 551, 552, 553, 1129,
	556, 0, 557, 558, 1026, 555, 0, 559, 560, 561,
	562, 563, 564, 565, 343, 566, 0, 567, 1118, 1119,
	1120, 1121, 0, 576, 0, 568, 569, 570, 1130, 571,
	1131, 1048, 572, 573, 574, 575, 0, 577, 578, 0,
	1032, 579, 580, 581, 583, 584, 582, 585, 1092, 586,
	0, 0, 587, 588, 589, 645, 1115, 1152, 0, 591,
	590, 592, 648, 0, 0, 0, 0, 593, 594, 649,
	595, 596, 597, 1029, 0, 0, 0, 0, 0, 0,
	0, 1025, 0, 0, 0, 0, 0, 0, 1023, 1024,
	1070, 1042, 1043, 1044, 1040, 1041, 1053, 1054, 0, 0,
	0, 1052, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1094, 1058, 0, 0, 0, 273, 274,
	1134, 275, 276, 277, 278, 279, 599, 1107, 0, 280,
	1114, 281, 1113, 0, 1124, 282, 283, 284, 285, 286,
	287, 1060, 1093, 1027, 288, 1154, 1155, 606, 0, 289,
	290, 1100, 0, 1081, 0, 291, 292, 293, 294, 295,
	296, 297, 0, 0, 299, 300, 301, 298, 302, 0,
	303, 0, 304, 305, 306, 307, 308, 309, 0, 310,
	311, 312, 1135, 313, 314, 1084, 1082, 1083, 1090, 1086,
	1085, 1089, 315, 316, 317, 318, 1117, 319, 1111, 1110,
	1031, 323, 320, 321, 0, 324, 322, 0, 325, 326,
	327, 0, 0, 328, 1102, 330, 0, 331, 332, 0,
	333, 334, 335, 0, 336, 337, 1037, 338, 339, 340,
	342, 344, 341, 345, 346, 347, 348, 1125, 1126, 349,
	1049, 260, 0, 0, 0, 0, 0, 350, 351, 352,
	1109, 0, 0, 0, 353, 0, 354, 0, 0, 1136,
	355, 356, 1122, 1123, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 365, 1132, 0, 1059, 366, 0, 367,
	368, 369, 370, 371, 1095, 1096, 1099, 448, 1138, 372,
	373, 0, 374, 375, 376, 377, 0, 0, 0, 261,
	378, 379, 380, 382, 0, 1137, 381, 1104, 1105, 0,
	1065, 0, 383, 384, 1139, 1097, 1140, 385, 386, 387,
	1141, 388, 0, 0, 0, 389, 390, 391, 392, 393,
	394, 0, 395, 397, 396, 0, 398, 1133, 1142, 399,
	400, 1143, 0, 401, 0, 0, 0, 402, 403, 406,
	1088, 1087, 404, 405, 407, 408, 0, 409, 410, 412,
	415, 411, 413, 414, 416, 429, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 431, 0,
	430, 1144, 432, 433, 434, 439, 441, 442, 437, 438,
	440, 443, 444, 436, 1145, 435, 1028, 262, 1146, 445,
	446, 1050, 1098, 447, 1112, 449, 450, 0, 0, 451,
	0, 1033, 0, 453, 454, 455, 0, 0, 456, 457,
	628, 1147, 458, 1148, 1127, 459, 460, 452, 461, 462,
	463, 464, 465, 466, 467, 468, 0, 469, 470, 630,
	471, 472, 473, 631, 474, 475, 476, 1128, 477, 633,
	478, 479, 0, 480, 481, 0, 482, 483, 484, 485,
	486, 487, 488, 1108, 489, 491, 490, 492, 0, 493,
	0, 494, 495, 496, 0, 0, 0, 0, 497, 0,
	499, 500, 501, 498, 502, 503, 504, 505, 0, 506,
	507, 508, 1149, 509, 510, 511, 512, 1038, 513, 0,
	514, 515, 521, 522, 516, 517, 523, 524, 525, 526,
	527, 0, 529, 530, 528, 531, 532, 533, 1091, 534,
	535, 518, 519, 536, 537, 1150, 538, 539, 540, 541,
	542, 543, 1106, 0, 544, 0, 545, 546, 547, 548,
	520, 549, 554, 1153, 550, 551, 552, 553, 1129, 556,
	0, 557, 558, 1026, 555, 0, 559, 560, 561, 562,
	563, 564, 565, 343, 566, 0, 567, 1118, 1119, 1120,
	1121, 0, 576, 0, 568, 569, 570, 1130, 571, 1131,
	1048, 572, 573, 574, 575, 0, 577, 578, 0, 1032,
	579, 580, 581, 583, 584, 582, 585, 1092, 586, 0,
	0, 587, 588, 589, 645, 1115, 1152, 0, 591, 590,
	592, 648, 0, 0, 0, 0, 593, 594, 649, 595,
	596, 597, 1029, 0, 0, 0, 0, 0, 0, 0,
	1025, 0, 0, 0, 0, 0, 0, 1023, 1024, 1070,
	1042, 1043, 1044, 1040, 1041, 1053, 1054, 0, 0, 0,
	1052, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1094, 1058, 0, 0, 0, 273, 274, 1134,
	275, 276, 277, 278, 279, 599, 1107, 0, 280, 1114,
	281, 1113, 0, 1124, 282, 283, 284, 285, 286, 287,
	1060, 1093, 1027, 288, 1154, 1155, 606, 0, 289, 290,
	1100, 0, 1081, 0, 291, 292, 293, 294, 295, 296,
	297, 0, 0, 299, 300, 301, 298, 302, 0, 303,
	0, 304, 305, 306, 307, 4101, 309, 0, 310, 311,
	312, 1135, 313, 314, 1084, 1082, 1083, 1090, 1086, 1085,
	1089, 315, 316, 317, 318, 1117, 319, 1111, 1110, 1031,
	323, 320, 321, 0, 324, 322, 0, 325, 326, 327,
	0, 0, 328, 1102, 330, 0, 331, 332, 0, 333,
	334, 335, 0, 336, 337, 1037, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 1125, 1126, 349, 1049,
	260, 0, 0, 0, 0, 0, 350, 351, 352, 1109,
	0, 0, 0, 353, 0, 354, 0, 0, 1136, 355,
	356, 1122, 1123, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 365, 1132, 0, 1059, 366, 0, 367, 368,
	369, 370, 371, 1095, 1096, 1099, 448, 1138, 372, 373,
	0, 374, 375, 376, 377, 0, 0, 0, 261, 378,
	379, 380, 382, 0, 1137, 381, 1104, 1105, 0, 1065,
	0, 383, 384, 1139, 1097, 1140, 385, 386, 387, 1141,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	0, 395, 397, 396, 0, 398, 1133, 1142, 399, 400,
	1143, 0, 401, 0, 0, 0, 402, 403, 406, 1088,
	1087, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	1144, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 1145, 435, 1028, 262, 1146, 445, 446,
	1050, 1098, 447, 1112, 449, 450, 0, 0, 451, 0,
	1033, 0, 453, 454, 455, 0, 0, 456, 457, 628,
	1147, 458, 1148, 1127, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 0, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 1128, 477, 633, 478,
	479, 0, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 1108, 489, 491, 490, 492, 0, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 0, 506, 507,
	508, 1149, 509, 510, 511, 512, 1038, 513, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	0, 529, 530, 528, 531, 532, 533, 1091, 534, 535,
	518, 519, 536, 537, 1150, 538, 539, 540, 541, 542,
	543, 1106, 0, 544, 0, 545, 546, 547, 548, 520,
	549, 554, 1153, 550, 551, 552, 553, 1129, 556, 0,
	557, 558, 1026, 555, 0, 559, 560, 561, 562, 563,
	564, 565, 343, 566, 0, 567, 1118, 1119, 1120, 1121,
	0, 576, 0, 568, 569, 570, 1130, 571, 1131, 1048,
	572, 573, 574, 575, 0, 577, 578, 0, 1032, 579,
	580, 581, 583, 584, 582, 585, 1092, 586, 0, 0,
	587, 588, 589, 645, 1115, 1152, 0, 591, 590, 592,
	648, 0, 0, 0, 0, 593, 594, 649, 595, 596,
	597, 1029, 0, 0, 0, 0, 0, 0, 0, 1025,
	0, 0, 0, 0, 0, 0, 1023, 1024, 1070, 1042,
	1043, 1044, 1040, 1041, 1053, 1054, 0, 0, 0, 1052,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 1094, 1058, 0, 0, 0, 273, 274, 1134, 275,
	276, 277, 278, 279, 599, 1107, 0, 280, 1114, 281,
	1113, 0, 1124, 282, 283, 284, 285, 286, 287, 1060,
	1093, 1027, 288, 1154, 1155, 606, 0, 289, 290, 1100,
	0, 1081, 0, 291, 292, 293, 294, 295, 296, 297,
	0, 0, 299, 300, 301, 298, 302, 0, 303, 0,
	304, 305, 306, 307, 308, 309, 0, 310, 311, 312,
	1135, 313, 314, 1084, 1082, 1083, 1090, 1086, 1085, 1089,
	315, 316, 317, 318, 1117, 319, 1111, 1110, 1031, 323,
	320, 321, 0, 324, 322, 0, 325, 326, 327, 0,
	0, 328, 1102, 330, 0, 331, 332, 0, 333, 334,
	335, 0, 336, 337, 1037, 338, 339, 340, 342, 344,
	341, 345, 346, 347, 348, 1125, 1126, 349, 1049, 260,
	0, 0, 0, 0, 0, 350, 351, 352, 1109, 0,
	0, 0, 353, 0, 354, 0, 0, 1136, 355, 356,
	1122, 1123, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 365, 1132, 0, 1059, 366, 0, 367, 368, 369,
	370, 371, 1095, 1096, 1099, 448, 1138, 372, 373, 0,
	374, 375, 376, 377, 0, 0, 0, 261, 378, 379,
	380, 382, 0, 1137, 381, 1104, 1105, 0, 1065, 0,
	383, 384, 1139, 1097, 1140, 385, 386, 387, 1141, 388,
	0, 0, 0, 389, 390, 391, 392, 393, 394, 0,
	395, 397, 396, 0, 398, 1133, 1142, 399, 400, 1143,
	0, 401, 0, 0, 0, 402, 403, 406, 1088, 1087,
	404, 405, 407, 408, 0, 409, 410, 412, 415, 411,
	413, 414, 416, 429, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 431, 0, 430, 1144,
	432, 433, 434, 439, 441, 442, 437, 438, 440, 443,
	444, 436, 1145, 435, 1028, 3742, 1146, 445, 446, 1050,
	1098, 447, 1112, 449, 450, 0, 0, 451, 0, 0,
	0, 453, 454, 455, 0, 0, 456, 457, 628, 1147,
	458, 1148, 1127, 459, 460, 452, 461, 462, 463, 464,
	465, 466, 467, 468, 0, 469, 470, 630, 471, 472,
	473, 631, 474, 475, 476, 1128, 477, 633, 478, 479,
	0, 480, 481, 0, 482, 483, 484, 485, 486, 487,
	488, 1108, 489, 491, 490, 492, 0, 493, 0, 494,
	495, 496, 0, 0, 0, 0, 497, 0, 499, 500,
	501, 498, 502, 503, 504, 505, 0, 506, 507, 508,
	1149, 509, 510, 511, 512, 1038, 513, 0, 514, 515,
	521, 522, 516, 517, 523, 524, 525, 526, 527, 0,
	529, 530, 528, 531, 532, 533, 1091, 534, 535, 518,
	519, 536, 537, 1150, 538, 539, 540, 541, 542, 543,
	1106, 0, 544, 0, 545, 546, 547, 548, 520, 549,
	554, 1153, 550, 551, 552, 553, 1129, 556, 0, 557,
	558, 1026, 555, 0, 559, 560, 561, 562, 563, 564,
	565, 343, 566, 0, 567, 1118, 1119, 1120, 1121, 0,
	576, 0, 568, 569, 570, 1130, 571, 1131, 1048, 572,
	573, 574, 575, 0, 577, 578, 0, 1032, 579, 580,
	581, 583, 584, 582, 585, 1092, 586, 0, 0, 587,
	588, 589, 645, 1115, 1152, 0, 591, 590, 592, 648,
	0, 0, 0, 0, 593, 594, 649, 595, 596, 597,
	1029, 0, 0, 0, 0, 0, 0, 0, 1025, 0,
	0, 0, 0, 0, 0, 1023, 1024, 1849, 0, 0,
	0, 0, 0, 0, 1054, 0, 0, 0, 1052, 1070,
	1042, 1043, 1044, 1040, 1041, 1053, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1094, 1058, 0, 0, 0, 273, 274, 1134,
	275, 276, 277, 278, 279, 599, 1107, 0, 280, 1114,
	281, 1113, 0, 1124, 282, 283, 284, 285, 286, 287,
	1060, 1093, 1027, 288, 1154, 1155, 606, 0, 289, 290,
	1100, 0, 1081, 0, 291, 292, 293, 294, 295, 296,
	297, 0, 0, 299, 300, 301, 298, 302, 0, 303,
	0, 304, 305, 306, 307, 308, 309, 0, 310, 311,
	312, 1135, 313, 314, 1084, 1082, 1083, 1090, 1086, 1085,
	1089, 315, 316, 317, 318, 1117, 319, 1111, 1110, 1031,
	323, 320, 321, 0, 324, 322, 0, 325, 326, 327,
	0, 0, 328, 1102, 330, 0, 331, 332, 0, 333,
	334, 335, 0, 336, 337, 1037, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 1125, 1126, 349, 1049,
	260, 0, 0, 0, 0, 0, 350, 351, 352, 1109,
	0, 0, 0, 353, 0, 354, 0, 0, 1136, 355,
	356, 1122, 1123, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 365, 1132, 0, 1059, 366, 0, 367, 368,
	369, 370, 371, 1095, 1096, 1099, 448, 1138, 372, 373,
	0, 374, 375, 376, 377, 0, 0, 0, 261, 378,
	379, 380, 382, 0, 1137, 381, 1104, 1105, 0, 1065,
	0, 383, 384, 1139, 1097, 1140, 385, 386, 387, 1141,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	0, 395, 397, 396, 0, 398, 1133, 1142, 399, 400,
	1143, 0, 401, 0, 0, 0, 402, 403, 406, 1088,
	1087, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	1144, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 1145, 435, 1028, 262, 1146, 445, 446,
	1050, 1098, 447, 1112, 449, 450, 0, 0, 451, 0,
	0, 0, 453, 454, 455, 0, 0, 456, 457, 628,
	1147, 458, 1148, 1127, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 0, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 1128, 477, 633, 478,
	479, 0, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 1108, 489, 491, 490, 492, 0, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 0, 506, 507,
	508, 1149, 509, 510, 511, 512, 1038, 513, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	0, 529, 530, 528, 531, 532, 533, 1091, 534, 535,
	518, 519, 536, 537, 1150, 538, 539, 540, 541, 542,
	543, 1106, 0, 544, 0, 545, 546, 547, 548, 520,
	549, 554, 1153, 550, 551, 552, 553, 1129, 556, 0,
	557, 558, 1026, 555, 0, 559, 560, 561, 562, 563,
	564, 565, 343, 566, 0, 567, 1118, 1119, 1120, 1121,
	0, 576, 0, 568, 569, 570, 1130, 571, 1131, 1048,
	572, 573, 574, 575, 0, 577, 578, 0, 1032, 579,
	580, 581, 583, 584, 582, 585, 1092, 586, 0, 0,
	587, 588, 589, 645, 1115, 1152, 3479, 591, 590, 592,
	648, 0, 0, 0, 0, 593, 594, 649, 595, 596,
	597, 1029, 0, 0, 0, 0, 0, 0, 0, 1025,
	0, 0, 0, 0, 0, 0, 1023, 1024, 1070, 1042,
	1043, 1044, 1040, 1041, 1053, 1054, 0, 0, 0, 1052,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 1094, 1058, 0, 0, 0, 273, 274, 1134, 275,
	276, 277, 278, 279, 599, 1107, 0, 280, 1114, 281,
	1113, 0, 1124, 282, 283, 284, 285, 286, 287, 1060,
	1093, 1027, 288, 1154, 1155, 606, 0, 289, 290, 1100,
	0, 1081, 0, 291, 292, 293, 294, 295, 296, 297,
	0, 0, 299, 300, 301, 298, 302, 0, 303, 0,
	304, 305, 306, 307, 308, 309, 0, 310, 311, 312,
	1135, 313, 314, 1084, 1082, 1083, 1090, 1086, 1085, 1089,
	315, 316, 317, 318, 1117, 319, 1111, 1110, 1031, 323,
	320, 321, 0, 324, 322, 0, 325, 326, 327, 0,
	0, 328, 1102, 330, 0, 331, 332, 0, 333, 334,
	335, 0, 336, 337, 1037, 338, 339, 340, 342, 344,
	341, 345, 346, 347, 348, 1125, 1126, 349, 1049, 260,
	0, 0, 0, 0, 0, 350, 351, 352, 1109, 0,
	0, 0, 353, 0, 354, 0, 0, 1136, 355, 356,
	1122, 1123, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 365, 1132, 0, 1059, 366, 0, 367, 368, 369,
	370, 371, 1095, 1096, 1099, 448, 1138, 372, 373, 0,
	374, 375, 376, 377, 0, 0, 0, 261, 378, 379,
	380, 382, 0, 1137, 381, 1104, 1105, 0, 1065, 0,
	383, 384, 1139, 1097, 1140, 385, 386, 387, 1141, 388,
	0, 0, 0, 389, 390, 391, 392, 393, 394, 0,
	395, 397, 396, 0, 398, 1133, 1142, 399, 400, 1143,
	0, 401, 0, 0, 0, 402, 403, 406, 1088, 1087,
	404, 405, 407, 408, 0, 409, 410, 412, 415, 411,
	413, 414, 416, 429, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 431, 0, 430, 1144,
	432, 433, 434, 439, 441, 442, 437, 438, 440, 443,
	444, 436, 1145, 435, 1028, 262, 1146, 445, 446, 1050,
	1098, 447, 1112, 449, 450, 0, 0, 451, 0, 0,
	0, 453, 454, 455, 0, 0, 456, 457, 628, 1147,
	458, 1148, 1127, 459, 460, 452, 461, 462, 463, 464,
	465, 466, 467, 468, 0, 469, 470, 630, 471, 472,
	473, 631, 474, 475, 476, 1128, 477, 633, 478, 479,
	0, 480, 481, 0, 482, 483, 484, 485, 486, 487,
	488, 1108, 489, 491, 490, 492, 0, 493, 0, 494,
	495, 496, 0, 0, 0, 0, 497, 0, 499, 500,
	501, 498, 502, 503, 504, 505, 0, 506, 507, 508,
	1149, 509, 510, 511, 512, 1038, 513, 0, 514, 515,
	521, 522, 516, 517, 523, 524, 525, 526, 527, 0,
	529, 530, 528, 531, 532, 533, 1091, 534, 535, 518,
	519, 536, 537, 1150, 538, 539, 540, 541, 542, 543,
	1106, 0, 544, 0, 545, 546, 547, 548, 520, 549,
	554, 1153, 550, 551, 552, 553, 1129, 556, 0, 557,
	558, 1026, 555, 0, 559, 560, 561, 562, 563, 564,
	565, 343, 566, 0, 567, 1118, 1119, 1120, 1121, 0,
	576, 0, 568, 569, 570, 1130, 571, 1131, 1048, 572,
	573, 574, 575, 0, 577, 578, 0, 1032, 579, 580,
	581, 583, 584, 582, 585, 1092, 586, 0, 0, 587,
	588, 589, 645, 1115, 1152, 0, 591, 590, 592, 648,
	0, 0, 0, 0, 593, 594, 649, 595, 596, 597,
	1029, 0, 0, 0, 0, 0, 0, 0, 1025, 0,
	0, 0, 0, 0, 0, 1023, 1024, 1849, 0, 0,
	0, 0, 0, 0, 1054, 0, 0, 0, 1052, 1070,
	1042, 1043, 1044, 1040, 1041, 1053, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1094, 1058, 0, 0, 0, 273, 274, 1134,
	275, 276, 277, 278, 279, 599, 1107, 0, 280, 1114,
	281, 1113, 0, 1124, 282, 283, 284, 285, 286, 287,
	1060, 1093, 1027, 288, 1154, 1155, 606, 0, 289, 290,
	1100, 0, 1081, 0, 291, 292, 293, 294, 295, 296,
	297, 0, 0, 299, 300, 301, 298, 302, 0, 303,
	0, 304, 305, 306, 307, 308, 309, 0, 310, 311,
	312, 1135, 313, 314, 1084, 1082, 1083, 1090, 1086, 1085,
	1089, 315, 316, 317, 318, 1117, 319, 1111, 1110, 1031,
	323, 320, 321, 0, 324, 322, 0, 325, 326, 327,
	0, 0, 328, 1102, 330, 0, 331, 332, 0, 333,
	334, 335, 0, 336, 337, 1037, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 1125, 1126, 349, 1049,
	260, 0, 0, 0, 0, 0, 350, 351, 352, 1109,
	0, 0, 0, 353, 0, 354, 0, 2532, 1136, 355,
	356, 1122, 1123, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 365, 1132, 0, 1059, 366, 0, 367, 368,
	369, 370, 371, 1095, 1096, 1099, 448, 1138, 372, 373,
	0, 374, 375, 376, 377, 0, 0, 0, 261, 378,
	379, 380, 382, 0, 1137, 381, 1104, 1105, 0, 1065,
	0, 383, 384, 1139, 1097, 1140, 385, 386, 387, 1141,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	0, 395, 397, 396, 0, 398, 1133, 1142, 399, 400,
	1143, 0, 401, 0, 0, 0, 402, 403, 406, 1088,
	1087, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	1144, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 1145, 435, 1028, 262, 1146, 445, 446,
	1050, 1098, 447, 1112, 449, 450, 0, 0, 451, 0,
	0, 0, 453, 454, 455, 0, 0, 456, 457, 628,
	1147, 458, 1148, 1127, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 0, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 1128, 477, 633, 478,
	479, 0, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 1108, 489, 491, 490, 492, 0, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 0, 506, 507,
	508, 1149, 509, 510, 511, 512, 1038, 513, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	0, 529, 530, 528, 531, 532, 533, 1091, 534, 535,
	518, 519, 536, 537, 1150, 538, 539, 540, 541, 542,
	543, 1106, 0, 544, 0, 545, 546, 547, 548, 520,
	549, 554, 1153, 550, 551, 552, 553, 1129, 556, 0,
	557, 558, 1026, 555, 0, 559, 560, 561, 562, 563,
	564, 565, 343, 566, 0, 567, 1118, 1119, 1120, 1121,
	0, 576, 0, 568, 569, 570, 1130, 571, 1131, 1048,
	572, 573, 574, 575, 0, 577, 578, 0, 1032, 579,
	580, 581, 583, 584, 582, 585, 1092, 586, 0, 0,
	587, 588, 589, 645, 1115, 1152, 0, 591, 590, 592,
	648, 0, 0, 0, 0, 593, 594, 649, 595, 596,
	597, 1029, 0, 0, 0, 0, 0, 0, 0, 1025,
	0, 0, 0, 0, 0, 0, 1023, 1024, 1070, 1042,
	1043, 1044, 1040, 1041, 1053, 1054, 0, 0, 0, 1052,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 1094, 1058, 0, 0, 0, 273, 274, 1134, 275,
	276, 277, 278, 279, 599, 1107, 0, 280, 1114, 281,
	1113, 0, 1124, 282, 283, 284, 285, 286, 287, 1060,
	1093, 1027, 288, 1154, 1155, 606, 0, 289, 290, 1100,
	0, 1081, 0, 291, 292, 293, 294, 295, 296, 297,
	0, 0, 299, 300, 301, 298, 302, 0, 303, 0,
	304, 305, 306, 307, 308, 309, 0, 310, 311, 312,
	1135, 313, 314, 1084, 1082, 1083, 1090, 1086, 1085, 1089,
	315, 316, 317, 318, 1117, 319, 1111, 1110, 1031, 323,
	320, 321, 0, 324, 322, 0, 325, 326, 327, 0,
	0, 328, 1102, 330, 0, 331, 332, 0, 333, 334,
	335, 0, 336, 337, 1037, 338, 339, 340, 342, 344,
	341, 345, 346, 347, 348, 1125, 1126, 349, 1049, 260,
	0, 0, 0, 0, 0, 350, 351, 352, 1109, 0,
	0, 0, 353, 0, 354, 0, 0, 1136, 355, 356,
	1122, 1123, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 365, 1132, 0, 1059, 366, 0, 367, 368, 369,
	370, 371, 1095, 1096, 1099, 448, 1138, 372, 373, 0,
	374, 375, 376, 377, 0, 0, 0, 261, 378, 379,
	380, 382, 0, 1137, 381, 1104, 1105, 0, 1065, 0,
	383, 384, 1139, 1097, 1140, 385, 386, 387, 1141, 388,
	0, 0, 0, 389, 390, 391, 392, 393, 394, 0,
	395, 397, 396, 0, 398, 1133, 1142, 399, 400, 1143,
	0, 401, 0, 0, 0, 402, 403, 406, 1088, 1087,
	404, 405, 407, 408, 0, 409, 410, 412, 415, 411,
	413, 414, 416, 429, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 431, 0, 430, 1144,
	432, 433, 434, 439, 441, 442, 437, 438, 440, 443,
	444, 436, 1145, 435, 1028, 262, 1146, 445, 446, 1050,
	1098, 447, 1112, 449, 450, 0, 0, 451, 0, 0,
	0, 453, 454, 455, 0, 0, 456, 457, 628, 1147,
	458, 1148, 1127, 459, 460, 452, 461, 462, 463, 464,
	465, 466, 467, 468, 0, 469, 470, 630, 471, 472,
	473, 631, 474, 475, 476, 1128, 477, 633, 478, 479,
	0, 480, 481, 0, 482, 483, 484, 485, 486, 487,
	488, 1108, 489, 491, 490, 492, 0, 493, 0, 494,
	495, 496, 0, 0, 0, 0, 497, 0, 499, 500,
	501, 498, 502, 503, 504, 505, 0, 506, 507, 508,
	1149, 509, 510, 511, 512, 1038, 513, 0, 514, 515,
	521, 522, 516, 517, 523, 524, 525, 526, 527, 0,
	529, 530, 528, 531, 532, 533, 1091, 534, 535, 518,
	519, 536, 537, 1150, 538, 539, 540, 541, 542, 543,
	1106, 0, 544, 0, 545, 546, 547, 548, 520, 549,
	554, 1153, 550, 551, 552, 553, 1129, 556, 0, 557,
	558, 1026, 555, 0, 559, 560, 561, 562, 563, 564,
	565, 343, 566, 0, 567, 1118, 1119, 1120, 1121, 0,
	576, 0, 568, 569, 570, 1130, 571, 1131, 1048, 572,
	573, 574, 575, 0, 577, 578, 0, 1032, 579, 580,
	581, 583, 584, 582, 585, 1092, 586, 0, 0, 587,
	588, 589, 645, 1115, 1152, 0, 591, 590, 592, 648,
	0, 0, 0, 0, 593, 594, 649, 595, 596, 597,
	1029, 0, 0, 0, 0, 0, 0, 0, 1025, 0,
	0, 0, 0, 0, 0, 1023, 1024, 0, 0, 0,
	0, 0, 0, 0, 1054, 1779, 0, 2537, 1052, 1070,
	1042, 1043, 1044, 1040, 1041, 1053, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1094, 1058, 0, 0, 0, 273, 274, 1134,
	275, 276, 277, 278, 279, 599, 1107, 0, 280, 1114,
	281, 1113, 0, 1124, 282, 283, 284, 285, 286, 287,
	1060, 1093, 1027, 288, 1154, 1155, 606, 0, 289, 290,
	1100, 0, 1081, 0, 291, 292, 293, 294, 295, 296,
	297, 0, 0, 299, 300, 301, 298, 302, 0, 303,
	0, 304, 305, 306, 307, 308, 309, 0, 310, 311,
	312, 1135, 313, 314, 1084, 1082, 1083, 1090, 1086, 1085,
	1089, 315, 316, 317, 318, 1117, 319, 1111, 1110, 1031,
	323, 320, 321, 0, 324, 322, 0, 325, 326, 327,
	0, 0, 328, 1102, 330, 0, 331, 332, 0, 333,
	334, 335, 0, 336, 337, 1037, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 1125, 1126, 349, 1049,
	260, 0, 0, 0, 0, 0, 350, 351, 352, 1109,
	0, 0, 0, 353, 0, 354, 0, 0, 1136, 355,
	356, 1122, 1123, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 365, 1132, 0, 1059, 366, 0, 367, 368,
	369, 370, 371, 1095, 1096, 1099, 448, 1138, 372, 373,
	0, 374, 375, 376, 377, 0, 0, 0, 261, 378,
	379, 380, 382, 0, 1137, 381, 1104, 1105, 0, 1065,
	0, 383, 384, 1139, 1097, 1140, 385, 386, 387, 1141,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	0, 395, 397, 396, 0, 398, 1133, 1142, 399, 400,
	1143, 0, 401, 0, 0, 0, 402, 403, 406, 1088,
	1087, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	1144, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 1145, 435, 1028, 262, 1146, 445, 446,
	1050, 1098, 447, 1112, 449, 450, 0, 0, 451, 0,
	0, 0, 453, 454, 455, 0, 0, 456, 457, 628,
	1147, 458, 1148, 1127, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 0, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 1128, 477, 633, 478,
	479, 0, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 1108, 489, 491, 490, 492, 0, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 0, 506, 507,
	508, 1149, 509, 510, 511, 512, 1038, 513, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	0, 529, 530, 528, 531, 532, 533, 1091, 534, 535,
	518, 519, 536, 537, 1150, 538, 539, 540, 541, 542,
	543, 1106, 0, 544, 0, 545, 546, 547, 548, 520,
	549, 554, 1153, 550, 551, 552, 553, 1129, 556, 0,
	557, 558, 1026, 555, 0, 559, 560, 561, 562, 563,
	564, 565, 343, 566, 0, 567, 1118, 1119, 1120, 1121,
	0, 576, 0, 568, 569, 570, 1130, 571, 1131, 1048,
	572, 573, 574, 575, 0, 577, 578, 0, 1032, 579,
	580, 581, 583, 584, 582, 585, 1092, 586, 0, 0,
	587, 588, 589, 645, 1115, 1152, 0, 591, 590, 592,
	648, 0, 0, 0, 0, 593, 594, 649, 595, 596,
	597, 1029, 0, 0, 0, 0, 0, 0, 0, 1025,
	0, 0, 0, 0, 0, 0, 1023, 1024, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 0, 2535, 1052,
	1070, 1042, 1043, 1044, 1040, 1041, 1053, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1094, 1058, 0, 0, 0, 273, 274,
	1134, 275, 276, 277, 278, 279, 599, 1107, 0, 280,
	1114, 281, 1113, 0, 1124, 282, 283, 284, 285, 286,
	287, 1060, 1093, 1027, 288, 1154, 1155, 606, 0, 289,
	290, 1100, 0, 1081, 0, 291, 292, 293, 294, 295,
	296, 297, 0, 0, 299, 300, 301, 298, 302, 0,
	303, 0, 304, 305, 306, 307, 308, 309, 0, 310,
	311, 312, 1135, 313, 314, 1084, 1082, 1083, 1090, 1086,
	1085, 1089, 315, 316, 317, 318, 1117, 319, 1111, 1110,
	1031, 323, 320, 321, 0, 324, 322, 0, 325, 326,
	327, 0, 0, 328, 1102, 330, 0, 331, 332, 0,
	333, 334, 335, 0, 336, 337, 1037, 338, 339, 340,
	342, 344, 341, 345, 346, 347, 348, 1125, 1126, 349,
	1049, 260, 0, 0, 0, 0, 0, 350, 351, 352,
	1109, 0, 0, 0, 353, 0, 354, 0, 0, 1136,
	355, 356, 1122, 1123, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 365, 1132, 0, 1059, 366, 0, 367,
	368, 369, 370, 371, 1095, 1096, 1099, 448, 1138, 372,
	373, 0, 374, 375, 376, 377, 0, 0, 0, 261,
	378, 379, 380, 382, 0, 1137, 381, 1104, 1105, 0,
	1065, 0, 383, 384, 1139, 1097, 1140, 385, 386, 387,
	1141, 388, 0, 0, 0, 389, 390, 391, 392, 393,
	394, 0, 395, 397, 396, 0, 398, 1133, 1142, 399,
	400, 1143, 0, 401, 0, 0, 0, 402, 403, 406,
	1088, 1087, 404, 405, 407, 408, 0, 409, 410, 412,
	415, 411, 413, 414, 416, 429, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 431, 0,
	430, 1144, 432, 433, 434, 439, 441, 442, 437, 438,
	440, 443, 444, 436, 1145, 435, 1028, 262, 1146, 445,
	446, 1050, 1098, 447, 1112, 449, 450, 0, 0, 451,
	0, 0, 0, 453, 454, 455, 0, 0, 456, 457,
	628, 1147, 458, 1148, 1127, 459, 460, 452, 461, 462,
	463, 464, 465, 466, 467, 468, 0, 469, 470, 630,
	471, 472, 473, 631, 474, 475, 476, 1128, 477, 633,
	478, 479, 0, 480, 481, 0, 482, 483, 484, 485,
	486, 487, 488, 1108, 489, 491, 490, 492, 0, 493,
	0, 494, 495, 496, 0, 0, 0, 0, 497, 0,
	499, 500, 501, 498, 502, 503, 504, 505, 0, 506,
	507, 508, 1149, 509, 510, 511, 512, 1038, 513, 0,
	514, 515, 521, 522, 516, 517, 523, 524, 525, 526,
	527, 0, 529, 530, 528, 531, 532, 533, 1091, 534,
	535, 518, 519, 536, 537, 1150, 538, 539, 540, 541,
	542, 543, 1106, 0, 544, 0, 545, 546, 547, 548,
	520, 549, 554, 1153, 550, 551, 552, 553, 1129, 556,
	0, 557, 558, 1026, 555, 0, 559, 560, 561, 562,
	563, 564, 565, 343, 566, 0, 567, 1118, 1119, 1120,
	1121, 0, 576, 0, 568, 569, 570, 1130, 571, 1131,
	1048, 572, 573, 574, 575, 0, 577, 578, 0, 1032,
	579, 580, 581, 583, 584, 582, 585, 1092, 586, 0,
	0, 587, 588, 589, 645, 1115, 1152, 0, 591, 590,
	592, 648, 0, 0, 0, 0, 593, 594, 649, 595,
	596, 597, 1029, 0, 0, 0, 0, 0, 0, 0,
	1025, 0, 0, 0, 0, 0, 0, 1023, 1024, 0,
	0, 0, 0, 0, 0, 0, 1054, 0, 0, 2523,
	1052, 1070, 1042, 1043, 1044, 1040, 1041, 1053, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 1094, 1058, 0, 0, 0, 273,
	274, 1134, 275, 276, 277, 278, 279, 599, 1107, 0,
	280, 1114, 281, 1113, 0, 1124, 282, 283, 284, 285,
	286, 287, 1060, 1093, 1027, 288, 1154, 1155, 606, 0,
	289, 290, 1100, 0, 1081, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 1135, 313, 314, 1084, 1082, 1083, 1090,
	1086, 1085, 1089, 315, 316, 317, 318, 1117, 319, 1111,
	1110, 1031, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 1102, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 1037, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 1125, 1126,
	349, 1049, 260, 0, 0, 0, 0, 0, 350, 351,
	352, 1109, 0, 0, 0, 353, 0, 354, 0, 0,
	1136, 355, 356, 1122, 1123, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 1132, 0, 1059, 366, 0,
	367, 368, 369, 370, 371, 1095, 1096, 1099, 448, 1138,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	261, 378, 379, 380, 382, 0, 1137, 381, 1104, 1105,
	0, 1065, 0, 383, 384, 1139, 1097, 1140, 385, 386,
	387, 1141, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 395, 397, 396, 0, 398, 1133, 1142,
	399, 400, 1143, 0, 401, 0, 0, 0, 402, 403,
	406, 1088, 1087, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 1144, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 1145, 435, 1028, 262, 1146,
	445, 446, 1050, 1098, 447, 1112, 449, 450, 0, 0,
	451, 0, 0, 0, 453, 454, 455, 0, 0, 456,
	457, 628, 1147, 458, 1148, 1127, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 1128, 477,
	633, 478, 479, 0, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 1108, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 1149, 509, 510, 511, 512, 1038, 513,
	0, 514, 515, 521, 522, 516, 517, 523, 524, 525,
	526, 527, 0, 529, 530, 528, 531, 532, 533, 1091,
	534, 535, 518, 519, 536, 537, 1150, 538, 539, 540,
	541, 542, 543, 1106, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 1153, 550, 551, 552, 553, 1129,
	556, 0, 557, 558, 1026, 555, 0, 559, 560, 561,
	562, 563, 564, 565, 343, 566, 0, 567, 1118, 1119,
	1120, 1121, 0, 576, 0, 568, 569, 570, 1130, 571,
	1131, 1048, 572, 573, 574, 575, 0, 577, 578, 0,
	1032, 579, 580, 581, 583, 584, 582, 585, 1092, 586,
	0, 0, 587, 588, 589, 645, 1115, 1152, 0, 591,
	590, 592, 648, 0, 0, 0, 0, 593, 594, 649,
	595, 596, 597, 1029, 0, 0, 0, 0, 0, 0,
	0, 1025, 0, 0, 0, 0, 0, 0, 1023, 1024,
	0, 0, 0, 0, 0, 0, 0, 1054, 0, 0,
	2512, 1052, 1070, 1042, 1043, 1044, 1040, 1041, 1053, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 1094, 1058, 0, 0, 0,
	273, 274, 1134, 275, 276, 277, 278, 279, 599, 1107,
	0, 280, 1114, 281, 1113, 0, 1124, 282, 283, 284,
	285, 286, 287, 1060, 1093, 1027, 288, 1154, 1155, 606,
	0, 289, 290, 1100, 0, 1081, 0, 291, 292, 293,
	294, 295, 296, 297, 0, 0, 299, 300, 301, 298,
	302, 0, 303, 0, 304, 305, 306, 307, 308, 309,
	0, 310, 311, 312, 1135, 313, 314, 1084, 1082, 1083,
	1090, 1086, 1085, 1089, 315, 316, 317, 318, 1117, 319,
	1111, 1110, 1031, 323, 320, 321, 0, 324, 322, 0,
	325, 326, 327, 0, 0, 328, 1102, 330, 0, 331,
	332, 0, 333, 334, 335, 0, 336, 337, 1037, 338,
	339, 340, 342, 344, 341, 345, 346, 347, 348, 1125,
	1126, 349, 1049, 260, 0, 0, 0, 0, 0, 350,
	351, 352, 1109, 0, 0, 0, 353, 0, 354, 0,
	0, 1136, 355, 356, 1122, 1123, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 365, 1132, 0, 1059, 366,
	0, 367, 368, 369, 370, 371, 1095, 1096, 1099, 448,
	1138, 372, 373, 0, 374, 375, 376, 377, 0, 0,
	0, 261, 378, 379, 380, 382, 0, 1137, 381, 1104,
	1105, 0, 1065, 0, 383, 384, 1139, 1097, 1140, 385,
	386, 387, 1141, 388, 0, 0, 0, 389, 390, 391,
	392, 393, 394, 0, 395, 397, 396, 0, 398, 1133,
	1142, 399, 400, 1143, 0, 401, 0, 0, 0, 402,
	403, 406, 1088, 1087, 404, 405, 407, 408, 0, 409,
	410, 412, 415, 411, 413, 414, 416, 429, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	431, 0, 430, 1144, 432, 433, 434, 439, 441, 442,
	437, 438, 440, 443, 444, 436, 1145, 435, 1028, 262,
	1146, 445, 446, 1050, 1098, 447, 1112, 449, 450, 0,
	0, 451, 0, 0, 0, 453, 454, 455, 0, 0,
	456, 457, 628, 1147, 458, 1148, 1127, 459, 460, 452,
	461, 462, 463, 464, 465, 466, 467, 468, 0, 469,
	470, 630, 471, 472, 473, 631, 474, 475, 476, 1128,
	477, 633, 478, 479, 0, 480, 481, 0, 482, 483,
	484, 485, 486, 487, 488, 1108, 489, 491, 490, 492,
	0, 493, 0, 494, 495, 496, 0, 0, 0, 0,
	497, 0, 499, 500, 501, 498, 502, 503, 504, 505,
	0, 506, 507, 508, 1149, 509, 510, 511, 512, 1038,
	513, 0, 514, 515, 521, 522, 516, 517, 523, 524,
	525, 526, 527, 0, 529, 530, 528, 531, 532, 533,
	1091, 534, 535, 518, 519, 536, 537, 1150, 538, 539,
	540, 541, 542, 543, 1106, 0, 544, 0, 545, 546,
	547, 548, 520, 549, 554, 1153, 550, 551, 552, 553,
	1129, 556, 0, 557, 558, 1026, 555, 0, 559, 560,
	561, 562, 563, 564, 565, 343, 566, 0, 567, 1118,
	1119, 1120, 1121, 0, 576, 0, 568, 569, 570, 1130,
	571, 1131, 1048, 572, 573, 574, 575, 0, 577, 578,
	0, 1032, 579, 580, 581, 583, 584, 582, 585, 1092,
	586, 0, 0, 587, 588, 589, 645, 1115, 1152, 0,
	591, 590, 592, 648, 0, 0, 0, 0, 593, 594,
	649, 595, 596, 597, 1029, 0, 0, 0, 0, 0,
	0, 0, 1025, 0, 0, 0, 0, 0, 0, 1023,
	1024, 0, 0, 0, 0, 0, 0, 0, 1054, 0,
	0, 2510, 1052, 2501, 2508, 1043, 1044, 1040, 1041, 1053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 1094, 1058, 0, 0,
	0, 273, 274, 1134, 275, 276, 277, 278, 279, 599,
	1107, 0, 280, 1114, 281, 1113, 0, 1124, 282, 283,
	284, 285, 286, 287, 1060, 1093, 1027, 288, 1154, 1155,
	606, 0, 289, 290, 1100, 0, 1081, 0, 291, 292,
	293, 294, 295, 296, 297, 0, 0, 299, 300, 301,
	298, 302, 0, 303, 0, 304, 305, 306, 307, 308,
	309, 0, 310, 311, 312, 1135, 313, 314, 1084, 1082,
	1083, 1090, 1086, 1085, 1089, 315, 316, 317, 318, 1117,
	2504, 1111, 1110, 1031, 323, 320, 321, 0, 324, 322,
	0, 325, 326, 327, 0, 0, 328, 1102, 330, 0,
	331, 332, 0, 333, 334, 335, 0, 336, 337, 1037,
	338, 339, 340, 342, 344, 341, 345, 346, 347, 348,
	1125, 1126, 349, 1049, 260, 0, 0, 0, 0, 0,
	350, 351, 352, 1109, 0, 0, 0, 353, 0, 354,
	0, 0, 1136, 355, 356, 1122, 1123, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 365, 1132, 0, 1059,
	366, 0, 367, 368, 369, 2505, 371, 1095, 1096, 1099,
	448, 1138, 372, 373, 0, 374, 375, 376, 377, 0,
	0, 0, 261, 378, 379, 380, 382, 0, 1137, 381,
	1104, 1105, 0, 1065, 0, 383, 384, 1139, 1097, 1140,
	385, 386, 387, 1141, 388, 0, 0, 0, 389, 390,
	391, 392, 393, 394, 0, 395, 397, 396, 0, 398,
	1133, 1142, 399, 400, 1143, 0, 401, 0, 0, 0,
	402, 403, 406, 1088, 1087, 404, 405, 407, 408, 0,
	409, 410, 412, 415, 411, 413, 2506, 416, 2503, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 431, 0, 430, 1144, 432, 433, 434, 439, 441,
	442, 437, 438, 440, 443, 444, 436, 1145, 435, 1028,
	262, 1146, 445, 446, 1050, 1098, 447, 1112, 449, 450,
	0, 0, 451, 0, 0, 0, 453, 454, 455, 0,
	0, 456, 457, 628, 1147, 458, 1148, 1127, 459, 460,
	452, 461, 462, 463, 464, 465, 466, 467, 468, 0,
	469, 470, 630, 471, 472, 473, 631, 474, 475, 476,
	1128, 477, 633, 478, 479, 0, 480, 481, 0, 482,
	483, 484, 485, 486, 487, 488, 1108, 489, 491, 490,
	492, 0, 493, 0, 494, 495, 496, 0, 0, 0,
	0, 497, 0, 499, 500, 501, 498, 502, 503, 504,
	505, 0, 506, 507, 508, 1149, 509, 510, 511, 512,
	1038, 513, 0, 514, 515, 521, 522, 516, 517, 523,
	524, 525, 526, 2507, 0, 529, 530, 528, 531, 532,
	533, 1091, 534, 535, 518, 519, 536, 537, 1150, 538,
	539, 540, 541, 542, 543, 1106, 0, 544, 0, 545,
	546, 547, 548, 520, 549, 554, 1153, 550, 551, 552,
	553, 1129, 556, 0, 557, 558, 1026, 555, 0, 559,
	560, 561, 562, 563, 564, 565, 343, 566, 0, 567,
	1118, 1119, 1120, 1121, 0, 576, 0, 568, 569, 570,
	1130, 571, 1131, 1048, 572, 573, 574, 575, 0, 577,
	578, 0, 1032, 579, 580, 581, 583, 584, 582, 585,
	1092, 586, 0, 0, 587, 588, 589, 645, 1115, 1152,
	0, 591, 590, 592, 648, 0, 0, 0, 0, 593,
	594, 649, 595, 2502, 597, 1029, 0, 0, 0, 0,
	0, 0, 0, 1025, 0, 0, 0, 0, 0, 0,
	1023, 1024, 0, 0, 0, 0, 0, 0, 0, 1054,
	0, 0, 2498, 1052, 2501, 2508, 1043, 1044, 1040, 1041,
	1053, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 1094, 1058, 0,
	0, 0, 273, 274, 1134, 275, 276, 277, 278, 279,
	599, 1107, 0, 280, 1114, 281, 1113, 0, 1124, 282,
	283, 284, 285, 286, 287, 1060, 1093, 1027, 288, 1154,
	1155, 606, 0, 289, 290, 1100, 0, 1081, 0, 291,
	292, 293, 294, 295, 296, 297, 0, 0, 299, 300,
	301, 298, 302, 0, 303, 0, 304, 305, 306, 307,
	308, 309, 0, 310, 311, 312, 1135, 313, 314, 1084,
	1082, 1083, 1090, 1086, 1085, 1089, 315, 316, 317, 318,
	1117, 2504, 1111, 1110, 1031, 323, 320, 321, 0, 324,
	322, 0, 325, 326, 327, 0, 0, 328, 1102, 330,
	0, 331, 332, 0, 333, 334, 335, 0, 336, 337,
	1037, 338, 339, 340, 342, 344, 341, 345, 346, 347,
	348, 1125, 1126, 349, 1049, 260, 0, 0, 0, 0,
	0, 350, 351, 352, 1109, 0, 0, 0, 353, 0,
	354, 0, 0, 1136, 355, 356, 1122, 1123, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 365, 1132, 0,
	1059, 366, 0, 367, 368, 369, 2505, 371, 1095, 1096,
	1099, 448, 1138, 372, 373, 0, 374, 375, 376, 377,
	0, 0, 0, 261, 378, 379, 380, 382, 0, 1137,
	381, 1104, 1105, 0, 1065, 0, 383, 384, 1139, 1097,
	1140, 385, 386, 387, 1141, 388, 0, 0, 0, 389,
	390, 391, 392, 393, 394, 0, 395, 397, 396, 0,
	398, 1133, 1142, 399, 400, 1143, 0, 401, 0, 0,
	0, 402, 403, 406, 1088, 1087, 404, 405, 407, 408,
	0, 409, 410, 412, 415, 411, 413, 2506, 416, 2503,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 431, 0, 430, 1144, 432, 433, 434, 439,
	441, 442, 437, 438, 440, 443, 444, 436, 1145, 435,
	1028, 262, 1146, 445, 446, 1050, 1098, 447, 1112, 449,
	450, 0, 0, 451, 0, 0, 0, 453, 454, 455,
	0, 0, 456, 457, 628, 1147, 458, 1148, 1127, 459,
	460, 452, 461, 462, 463, 464, 465, 466, 467, 468,
	0, 469, 470, 630, 471, 472, 473, 631, 474, 475,
	476, 1128, 477, 633, 478, 479, 0, 480, 481, 0,
	482, 483, 484, 485, 486, 487, 488, 1108, 489, 491,
	490, 492, 0, 493, 0, 494, 495, 496, 0, 0,
	0, 0, 497, 0, 499, 500, 501, 498, 502, 503,
	504, 505, 0, 506, 507, 508, 1149, 509, 510, 511,
	512, 1038, 513, 0, 514, 515, 521, 522, 516, 517,
	523, 524, 525, 526, 2507, 0, 529, 530, 528, 531,
	532, 533, 1091, 534, 535, 518, 519, 536, 537, 1150,
	538, 539, 540, 541, 542, 543, 1106, 0, 544, 0,
	545, 546, 547, 548, 520, 549, 554, 1153, 550, 551,
	552, 553, 1129, 556, 0, 557, 558, 1026, 555, 0,
	559, 560, 561, 562, 563, 564, 565, 343, 566, 0,
	567, 1118, 1119, 1120, 1121, 0, 576, 0, 568, 569,
	570, 1130, 571, 1131, 1048, 572, 573, 574, 575, 0,
	577, 578, 0, 1032, 579, 580, 581, 583, 584, 582,
	585, 1092, 586, 0, 0, 587, 588, 589, 645, 1115,
	1152, 0, 591, 590, 592, 648, 0, 0, 0, 0,
	593, 594, 649, 595, 2502, 597, 1029, 0, 0, 0,
	0, 0, 0, 0, 1025, 0, 0, 0, 0, 0,
	0, 1023, 1024, 1070, 1042, 1043, 1044, 1040, 1041, 1053,
	1054, 0, 0, 0, 1052, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 1094, 1058, 0, 0,
	0, 273, 274, 1134, 275, 276, 277, 278, 279, 599,
	1107, 0, 280, 1114, 281, 1113, 0, 1124, 282, 283,
	284, 285, 286, 287, 1060, 1093, 1027, 288, 1154, 1155,
	606, 0, 289, 290, 1100, 0, 1081, 0, 291, 292,
	293, 294, 295, 296, 297, 0, 0, 299, 300, 301,
	298, 302, 0, 303, 0, 304, 305, 306, 307, 308,
	309, 0, 310, 311, 312, 1135, 313, 314, 1084, 1082,
	1083, 1090, 1086, 1085, 1089, 315, 316, 317, 318, 1117,
	319, 1111, 1110, 1031, 323, 320, 321, 0, 324, 322,
	0, 325, 326, 327, 0, 0, 328, 1102, 330, 0,
	331, 332, 0, 333, 334, 335, 0, 336, 337, 1037,
	338, 339, 340, 342, 344, 341, 345, 346, 347, 348,
	1125, 1126, 349, 1049, 260, 0, 0, 0, 0, 0,
	350, 351, 352, 1109, 0, 0, 0, 353, 0, 354,
	0, 0, 1136, 355, 356, 1122, 1123, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 365, 1132, 0, 1059,
	366, 0, 367, 368, 369, 370, 371, 1095, 1096, 1099,
	448, 1138, 372, 373, 0, 374, 375, 376, 377, 0,
	0, 0, 261, 378, 379, 380, 382, 0, 1137, 381,
	1104, 1105, 0, 1065, 0, 383, 384, 1139, 1097, 1140,
	385, 386, 387, 1141, 388, 0, 0, 0, 389, 390,
	391, 392, 393, 394, 0, 395, 397, 396, 0, 398,
	1133, 1142, 399, 400, 1143, 0, 401, 0, 0, 0,
	402, 403, 406, 1088, 1087, 404, 405, 407, 408, 0,
	409, 410, 412, 415, 411, 413, 414, 416, 429, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 431, 0, 430, 1144, 432, 433, 434, 439, 441,
	442, 437, 438, 440, 443, 444, 436, 1145, 435, 1028,
	262, 1146, 445, 446, 1050, 1098, 447, 1112, 449, 450,
	0, 0, 451, 0, 0, 0, 453, 454, 455, 0,
	0, 456, 457, 628, 1147, 458, 1148, 1127, 459, 460,
	452, 461, 462, 463, 464, 465, 466, 467, 468, 0,
	469, 470, 630, 471, 472, 473, 631, 474, 475, 476,
	1128, 477, 633, 478, 479, 0, 480, 481, 0, 482,
	483, 484, 485, 486, 487, 488, 1108, 489, 491, 490,
	492, 0, 493, 0, 494, 495, 496, 0, 0, 0,
	0, 497, 0, 499, 500, 501, 498, 502, 503, 504,
	505, 0, 506, 507, 508, 1149, 509, 510, 511, 512,
	1038, 513, 0, 514, 515, 521, 522, 516, 517, 523,
	524, 525, 526, 527, 0, 529, 530, 528, 531, 532,
	533, 1091, 534, 535, 518, 519, 536, 537, 1150, 538,
	539, 540, 541, 542, 543, 1106, 0, 544, 0, 545,
	546, 547, 548, 520, 549, 554, 1153, 550, 551, 552,
	553, 1129, 556, 0, 557, 558, 1026, 555, 0, 559,
	560, 561, 562, 563, 564, 565, 343, 566, 0, 567,
	1118, 1119, 1120, 1121, 0, 576, 0, 568, 569, 570,
	1130, 571, 1131, 1048, 572, 573, 574, 575, 0, 577,
	578, 0, 1032, 579, 580, 581, 583, 584, 582, 585,
	1092, 586, 0, 0, 587, 588, 589, 645, 1115, 1152,
	0, 591, 590, 592, 648, 0, 0, 0, 0, 593,
	594, 649, 595, 596, 597, 1029, 0, 0, 0, 0,
	0, 0, 0, 1025, 0, 0, 0, 0, 0, 0,
	1023, 1024, 0, 0, 0, 0, 0, 1787, 0, 1054,
	0, 0, 0, 1052, 1070, 1042, 1043, 1044, 1040, 1041,
	1053, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 2292,
	271, 272, 0, 0, 0, 0, 0, 1094, 1058, 0,
	0, 0, 273, 274, 1134, 275, 276, 277, 278, 279,
	599, 1107, 0, 280, 1114, 281, 1113, 0, 1124, 282,
	283, 284, 285, 286, 287, 1060, 1093, 1027, 288, 1154,
	1155, 606, 0, 289, 290, 1100, 0, 1081, 0, 291,
	292, 293, 294, 295, 296, 297, 0, 0, 299, 300,
	301, 298, 302, 0, 303, 0, 304, 305, 306, 307,
	308, 309, 0, 310, 311, 312, 1135, 313, 314, 1084,
	1082, 1083, 1090, 1086, 1085, 1089, 315, 316, 317, 318,
	1117, 319, 1111, 1110, 1031, 323, 320, 321, 0, 324,
	322, 0, 325, 326, 327, 0, 0, 328, 1102, 330,
	0, 331, 332, 0, 333, 334, 335, 0, 336, 337,
	1037, 338, 339, 340, 342, 344, 341, 345, 346, 347,
	348, 1125, 1126, 349, 1049, 260, 0, 0, 0, 0,
	0, 350, 351, 352, 1109, 0, 0, 0, 353, 0,
	354, 0, 0, 1136, 355, 356, 1122, 1123, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 365, 1132, 0,
	1059, 366, 0, 367, 368, 369, 370, 371, 1095, 1096,
	1099, 448, 1138, 372, 373, 0, 374, 375, 376, 377,
	0, 0, 0, 261, 378, 379, 380, 382, 0, 1137,
	381, 1104, 1105, 0, 1065, 0, 383, 384, 1139, 1097,
	1140, 385, 386, 387, 1141, 388, 0, 0, 0, 389,
	390, 391, 392, 393, 394, 0, 395, 397, 396, 0,
	398, 1133, 1142, 399, 400, 1143, 0, 401, 0, 0,
	0, 402, 403, 406, 1088, 1087, 404, 405, 407, 408,
	0, 409, 410, 412, 415, 411, 413, 414, 416, 429,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 431, 0, 430, 1144, 432, 433, 434, 439,
	441, 442, 437, 438, 440, 443, 444, 436, 1145, 435,
	1028, 262, 1146, 445, 446, 1050, 1098, 447, 1112, 449,
	450, 0, 0, 451, 0, 0, 0, 453, 454, 455,
	0, 0, 456, 457, 628, 1147, 458, 1148, 1127, 459,
	460, 452, 461, 462, 463, 464, 465, 466, 467, 468,
	0, 469, 470, 630, 471, 472, 473, 631, 474, 475,
	476, 1128, 477, 633, 478, 479, 0, 480, 481, 0,
	482, 483, 484, 485, 486, 487, 488, 1108, 489, 491,
	490, 492, 0, 493, 0, 494, 495, 496, 0, 0,
	0, 0, 497, 0, 499, 500, 501, 498, 502, 503,
	504, 505, 0, 506, 507, 508, 1149, 509, 510, 511,
	512, 1038, 513, 0, 514, 515, 521, 522, 516, 517,
	523, 524, 525, 526, 527, 0, 529, 530, 528, 531,
	532, 533, 1091, 534, 535, 518, 519, 536, 537, 1150,
	538, 539, 540, 541, 542, 543, 1106, 0, 544, 0,
	545, 546, 547, 548, 520, 549, 554, 1153, 550, 551,
	552, 553, 1129, 556, 0, 557, 558, 1026, 555, 0,
	559, 560, 561, 562, 563, 564, 565, 343, 566, 0,
	567, 1118, 1119, 1120, 1121, 0, 576, 0, 568, 569,
	570, 1130, 571, 1131, 1048, 572, 573, 574, 575, 0,
	577, 578, 0, 1032, 579, 580, 581, 583, 584, 582,
	585, 1092, 586, 0, 0, 587, 588, 589, 645, 1115,
	1152, 0, 591, 590, 592, 648, 0, 0, 0, 0,
	593, 594, 649, 595, 596, 597, 1029, 0, 0, 0,
	0, 0, 0, 0, 1025, 0, 0, 0, 0, 0,
	0, 1023, 1024, 0, 0, 0, 0, 0, 0, 0,
	1054, 0, 0, 1637, 1052, 1070, 1042, 1043, 1044, 1040,
	1041, 1053, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 1094, 1058,
	0, 0, 0, 273, 274, 1134, 275, 276, 277, 278,
	279, 599, 1107, 0, 280, 1114, 281, 1113, 0, 1124,
	282, 283, 284, 285, 286, 287, 1060, 1093, 1027, 288,
	1154, 1155, 606, 0, 289, 290, 1100, 0, 1081, 0,
	291, 292, 293, 294, 295, 296, 297, 0, 0, 299,
	300, 301, 298, 302, 0, 303, 0, 304, 305, 306,
	307, 308, 309, 0, 310, 311, 312, 1135, 313, 314,
	1084, 1082, 1083, 1090, 1086, 1085, 1089, 315, 316, 317,
	318, 1117, 319, 1111, 1110, 1031, 323, 320, 321, 0,
	324, 322, 0, 325, 326, 327, 0, 0, 328, 1102,
	330, 0, 331, 332, 0, 333, 334, 335, 0, 336,
	337, 1037, 338, 339, 340, 342, 344, 341, 345, 346,
	347, 348, 1125, 1126, 349, 1049, 260, 0, 0, 0,
	0, 0, 350, 351, 352, 1109, 0, 0, 0, 353,
	0, 354, 0, 0, 1136, 355, 356, 1122, 1123, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 365, 1132,
	0, 1059, 366, 0, 367, 368, 369, 370, 371, 1095,
	1096, 1099, 448, 1138, 372, 373, 0, 374, 375, 376,
	377, 0, 0, 0, 261, 378, 379, 380, 382, 0,
	1137, 381, 1104, 1105, 0, 1065, 0, 383, 384, 1139,
	1097, 1140, 385, 386, 387, 1141, 388, 0, 0, 0,
	389, 390, 391, 392, 393, 394, 0, 395, 397, 396,
	0, 398, 1133, 1142, 399, 400, 1143, 0, 401, 0,
	0, 0, 402, 403, 406, 1088, 1087, 404, 405, 407,
	408, 0, 409, 410, 412, 415, 411, 413, 414, 416,
	429, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 431, 0, 430, 1144, 432, 433, 434,
	439, 441, 442, 437, 438, 440, 443, 444, 436, 1145,
	435, 1028, 262, 1146, 445, 446, 1050, 1098, 447, 1112,
	449, 450, 0, 0, 451, 0, 0, 0, 453, 454,
	455, 0, 0, 456, 457, 628, 1147, 458, 1148, 1127,
	459, 460, 452, 461, 462, 463, 464, 465, 466, 467,
	468, 0, 469, 470, 630, 471, 472, 473, 631, 474,
	475, 476, 1128, 477, 633, 478, 479, 0, 480, 481,
	0, 482, 483, 484, 485, 486, 487, 488, 1108, 489,
	491, 490, 492, 0, 493, 0, 494, 495, 496, 0,
	0, 0, 0, 497, 0, 499, 500, 501, 498, 502,
	503, 504, 505, 0, 506, 507, 508, 1149, 509, 510,
	511, 512, 1038, 513, 0, 514, 515, 521, 522, 516,
	517, 523, 524, 525, 526, 527, 0, 529, 530, 528,
	531, 532, 533, 1091, 534, 535, 518, 519, 536, 537,
	1150, 538, 539, 540, 541, 542, 543, 1106, 0, 544,
	0, 545, 546, 547, 548, 520, 549, 554, 1153, 550,
	551, 552, 553, 1129, 556, 0, 557, 558, 1026, 555,
	0, 559, 560, 561, 562, 563, 564, 565, 343, 566,
	0, 567, 1118, 1119, 1120, 1121, 0, 576, 0, 568,
	569, 570, 1130, 571, 1131, 1048, 572, 573, 574, 575,
	0, 577, 578, 0, 1032, 579, 580, 581, 583, 584,
	582, 585, 1092, 586, 0, 0, 587, 588, 589, 645,
	1115, 1152, 0, 591, 590, 592, 648, 0, 0, 0,
	0, 593, 594, 649, 595, 596, 597, 1029, 0, 0,
	0, 0, 0, 0, 0, 1025, 0, 0, 0, 0,
	0, 0, 1023, 1024, 0, 0, 0, 0, 0, 0,
	0, 1054, 0, 0, 1572, 1052, 1070, 1042, 1043, 1044,
	1040, 1041, 1053, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 1094,
	1058, 0, 0, 0, 273, 274, 1134, 275, 276, 277,
	278, 279, 599, 1107, 0, 280, 1114, 281, 1113, 0,
	1124, 282, 283, 284, 285, 286, 287, 1060, 1093, 1027,
	288, 1154, 1155, 606, 0, 289, 290, 1100, 0, 1081,
	0, 291, 292, 293, 294, 295, 296, 297, 0, 0,
	299, 300, 301, 298, 302, 0, 303, 0, 304, 305,
	306, 307, 308, 309, 0, 310, 311, 312, 1135, 313,
	314, 1084, 1082, 1083, 1090, 1086, 1085, 1089, 315, 316,
	317, 318, 1117, 319, 1111, 1110, 1031, 323, 320, 321,
	0, 324, 322, 0, 325, 326, 327, 0, 0, 328,
	1102, 330, 0, 331, 332, 0, 333, 334, 335, 0,
	336, 337, 1037, 338, 339, 340, 342, 344, 341, 345,
	346, 347, 348, 1125, 1126, 349, 1049, 260, 0, 0,
	0, 0, 0, 350, 351, 352, 1109, 0, 0, 0,
	353, 0, 354, 0, 0, 1136, 355, 356, 1122, 1123,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 365,
	1132, 0, 1059, 366, 0, 367, 368, 369, 370, 371,
	1095, 1096, 1099, 448, 1138, 372, 373, 0, 374, 375,
	376, 377, 0, 0, 0, 261, 378, 379, 380, 382,
	0, 1137, 381, 1104, 1105, 0, 1065, 0, 383, 384,
	1139, 1097, 1140, 385, 386, 387, 1141, 388, 0, 0,
	0, 389, 390, 391, 392, 393, 394, 0, 395, 397,
	396, 0, 398, 1133, 1142, 399, 400, 1143, 0, 401,
	0, 0, 0, 402, 403, 406, 1088, 1087, 404, 405,
	407, 408, 0, 409, 410, 412, 415, 411, 413, 414,
	416, 429, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 431, 0, 430, 1144, 432, 433,
	434, 439, 441, 442, 437, 438, 440, 443, 444, 436,
	1145, 435, 1028, 262, 1146, 445, 446, 1050, 1098, 447,
	1112, 449, 450, 0, 0, 451, 0, 0, 0, 453,
	454, 455, 0, 0, 456, 457, 628, 1147, 458, 1148,
	1127, 459, 460, 452, 461, 462, 463, 464, 465, 466,
	467, 468, 0, 469, 470, 630, 471, 472, 473, 631,
	474, 475, 476, 1128, 477, 633, 478, 479, 0, 480,
	481, 0, 482, 483, 484, 485, 486, 487, 488, 1108,
	489, 491, 490, 492, 0, 493, 0, 494, 495, 496,
	0, 0, 0, 0, 497, 0, 499, 500, 501, 498,
	502, 503, 504, 505, 0, 506, 507, 508, 1149, 509,
	510, 511, 512, 1038, 513, 0, 514, 515, 521, 522,
	516, 517, 523, 524, 525, 526, 527, 0, 529, 530,
	528, 531, 532, 533, 1091, 534, 535, 518, 519, 536,
	537, 1150, 538, 539, 540, 541, 542, 543, 1106, 0,
	544, 0, 545, 546, 547, 548, 520, 549, 554, 1153,
	550, 551, 552, 553, 1129, 556, 0, 557, 558, 1026,
	555, 0, 559, 560, 561, 562, 563, 564, 565, 343,
	566, 0, 567, 1118, 1119, 1120, 1121, 0, 576, 0,
	568, 569, 570, 1130, 571, 1131, 1048, 572, 573, 574,
	575, 0, 577, 578, 0, 1032, 579, 580, 581, 583,
	584, 582, 585, 1092, 586, 0, 0, 587, 588, 589,
	645, 1115, 1152, 0, 591, 590, 592, 648, 0, 0,
	0, 0, 593, 594, 649, 595, 596, 597, 1029, 0,
	0, 0, 0, 0, 0, 0, 1025, 0, 0, 0,
	0, 0, 0, 1023, 1024, 0, 0, 0, 0, 0,
	0, 0, 1054, 0, 0, 1567, 1052, 1070, 1042, 1043,
	1044, 1040, 1041, 1053, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	1094, 1058, 0, 0, 0, 273, 274, 1134, 275, 276,
	277, 278, 279, 599, 1107, 0, 280, 1114, 281, 1113,
	0, 1124, 282, 283, 284, 285, 286, 287, 1060, 1093,
	1027, 288, 1154, 1155, 606, 0, 289, 290, 1100, 0,
	1081, 0, 291, 292, 293, 294, 295, 296, 297, 0,
	0, 299, 300, 301, 298, 302, 0, 303, 0, 304,
	305, 306, 307, 308, 309, 0, 310, 311, 312, 1135,
	313, 314, 1084, 1082, 1083, 1090, 1086, 1085, 1089, 315,
	316, 317, 318, 1117, 319, 1111, 1110, 1031, 323, 320,
	321, 0, 324, 322, 0, 325, 326, 327, 0, 0,
	328, 1102, 330, 0, 331, 332, 0, 333, 334, 335,
	0, 336, 337, 1037, 338, 339, 340, 342, 344, 341,
	345, 346, 347, 348, 1125, 1126, 349, 1049, 260, 0,
	0, 0, 0, 0, 350, 351, 352, 1109, 0, 0,
	0, 353, 0, 354, 0, 0, 1136, 355, 356, 1122,
	1123, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	365, 1132, 0, 1059, 366, 0, 367, 368, 369, 370,
	371, 1095, 1096, 1099, 448, 1138, 372, 373, 0, 374,
	375, 376, 377, 0, 0, 0, 261, 378, 379, 380,
	382, 0, 1137, 381, 1104, 1105, 0, 1065, 0, 383,
	384, 1139, 1097, 1140, 385, 386, 387, 1141, 388, 0,
	0, 0, 389, 390, 391, 392, 393, 394, 0, 395,
	397, 396, 0, 398, 1133, 1142, 399, 400, 1143, 0,
	401, 0, 0, 0, 402, 403, 406, 1088, 1087, 404,
	405, 407, 408, 0, 409, 410, 412, 415, 411, 413,
	414, 416, 429, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 431, 0, 430, 1144, 432,
	433, 434, 439, 441, 442, 437, 438, 440, 443, 444,
	436, 1145, 435, 1028, 262, 1146, 445, 446, 1050, 1098,
	447, 1112, 449, 450, 0, 0, 451, 0, 0, 0,
	453, 454, 455, 0, 0, 456, 457, 628, 1147, 458,
	1148, 1127, 459, 460, 452, 461, 462, 463, 464, 465,
	466, 467, 468, 0, 469, 470, 630, 471, 472, 473,
	631, 474, 475, 476, 1128, 477, 633, 478, 479, 0,
	480, 481, 0, 482, 483, 484, 485, 486, 487, 488,
	1108, 489, 491, 490, 492, 0, 493, 0, 494, 495,
	496, 0, 0, 0, 0, 497, 0, 499, 500, 501,
	498, 502, 503, 504, 505, 0, 506, 507, 508, 1149,
	509, 510, 511, 512, 1038, 513, 0, 514, 515, 521,
	522, 516, 517, 523, 524, 525, 526, 527, 0, 529,
	530, 528, 531, 532, 533, 1091, 534, 535, 518, 519,
	536, 537, 1150, 538, 539, 540, 541, 542, 543, 1106,
	0, 544, 0, 545, 546, 547, 548, 520, 549, 554,
	1153, 550, 551, 552, 553, 1129, 556, 0, 557, 558,
	1026, 555, 0, 559, 560, 561, 562, 563, 564, 565,
	343, 566, 0, 567, 1118, 1119, 1120, 1121, 0, 576,
	0, 568, 569, 570, 1130, 571, 1131, 1048, 572, 573,
	574, 575, 0, 577, 578, 0, 1032, 579, 580, 581,
	583, 584, 582, 585, 1092, 586, 0, 0, 587, 588,
	589, 645, 1115, 1152, 0, 591, 590, 592, 648, 0,
	0, 0, 0, 593, 594, 649, 595, 596, 597, 1029,
	0, 0, 0, 0, 0, 0, 0, 1025, 0, 0,
	0, 0, 0, 0, 1023, 1024, 0, 0, 0, 0,
	0, 0, 0, 1054, 0, 0, 1558, 1052, 1070, 1042,
	1043, 1044, 1040, 1041, 1053, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 1094, 1058, 0, 0, 0, 273, 274, 1134, 275,
	276, 277, 278, 279, 599, 1107, 0, 280, 1114, 281,
	1113, 0, 1124, 282, 283, 284, 285, 286, 287, 1060,
	1093, 1027, 288, 1154, 1155, 606, 0, 289, 290, 1100,
	0, 1081, 0, 291, 292, 293, 294, 295, 296, 297,
	0, 0, 299, 300, 301, 298, 302, 0, 303, 0,
	304, 305, 306, 307, 308, 309, 0, 310, 311, 312,
	1135, 313, 314, 1084, 1082, 1083, 1090, 1086, 1085, 1089,
	315, 316, 317, 318, 1117, 319, 1111, 1110, 1031, 323,
	320, 321, 0, 324, 322, 0, 325, 326, 327, 0,
	0, 328, 1102, 330, 0, 331, 332, 0, 333, 334,
	335, 0, 336, 337, 1037, 338, 339, 340, 342, 344,
	341, 345, 346, 347, 348, 1125, 1126, 349, 1049, 260,
	0, 0, 0, 0, 0, 350, 351, 352, 1109, 0,
	0, 0, 353, 0, 354, 0, 0, 1136, 355, 356,
	1122, 1123, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 365, 1132, 0, 1059, 366, 0, 367, 368, 369,
	370, 371, 1095, 1096, 1099, 448, 1138, 372, 373, 0,
	374, 375, 376, 377, 0, 0, 0, 261, 378, 379,
	380, 382, 0, 1137, 381, 1104, 1105, 0, 1065, 0,
	383, 384, 1139, 1097, 1140, 385, 386, 387, 1141, 388,
	0, 0, 0, 389, 390, 391, 392, 393, 394, 0,
	395, 397, 396, 0, 398, 1133, 1142, 399, 400, 1143,
	0, 401, 0, 0, 0, 402, 403, 406, 1088, 1087,
	404, 405, 407, 408, 0, 409, 410, 412, 415, 411,
	413, 414, 416, 429, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 431, 0, 430, 1144,
	432, 433, 434, 439, 441, 442, 437, 438, 440, 443,
	444, 436, 1145, 435, 1028, 262, 1146, 445, 446, 1050,
	1098, 447, 1112, 449, 450, 0, 0, 451, 0, 0,
	0, 453, 454, 455, 0, 0, 456, 457, 628, 1147,
	458, 1148, 1127, 459, 460, 452, 461, 462, 463, 464,
	465, 466, 467, 468, 0, 469, 470, 630, 471, 472,
	473, 631, 474, 475, 476, 1128, 477, 633, 478, 479,
	0, 480, 481, 0, 482, 483, 484, 485, 486, 487,
	488, 1108, 489, 491, 490, 492, 0, 493, 0, 494,
	495, 496, 0, 0, 0, 0, 497, 0, 499, 500,
	501, 498, 502, 503, 504, 505, 0, 506, 507, 508,
	1149, 509, 510, 511, 512, 1038, 513, 0, 514, 515,
	521, 522, 516, 517, 523, 524, 525, 526, 527, 0,
	529, 530, 528, 531, 532, 533, 1091, 534, 535, 518,
	519, 536, 537, 1150, 538, 539, 540, 541, 542, 543,
	1106, 0, 544, 0, 545, 546, 547, 548, 520, 549,
	554, 1153, 550, 551, 552, 553, 1129, 556, 0, 557,
	558, 1026, 555, 0, 559, 560, 561, 562, 563, 564,
	565, 343, 566, 0, 567, 1118, 1119, 1120, 1121, 0,
	576, 0, 568, 569, 570, 1130, 571, 1131, 1048, 572,
	573, 574, 575, 0, 577, 578, 0, 1032, 579, 580,
	581, 583, 584, 582, 585, 1092, 586, 0, 0, 587,
	588, 589, 645, 1115, 1152, 0, 591, 590, 592, 648,
	0, 0, 0, 0, 593, 594, 649, 595, 596, 597,
	1029, 0, 0, 0, 0, 0, 0, 0, 1025, 0,
	0, 0, 0, 0, 0, 1023, 1024, 0, 0, 0,
	0, 0, 0, 0, 1054, 0, 0, 1553, 1052, 1070,
	1042, 1043, 1044, 1040, 1041, 1053, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1094, 1058, 0, 0, 0, 273, 274, 1134,
	275, 276, 277, 278, 279, 599, 1107, 0, 280, 1114,
	281, 1113, 0, 1124, 282, 283, 284, 285, 286, 287,
	1060, 1093, 1027, 288, 1154, 1155, 606, 0, 289, 290,
	1100, 0, 1081, 0, 291, 292, 293, 294, 295, 296,
	297, 0, 0, 299, 300, 301, 298, 302, 0, 303,
	0, 304, 305, 306, 307, 308, 309, 0, 310, 311,
	312, 1135, 313, 314, 1084, 1082, 1083, 1090, 1086, 1085,
	1089, 315, 316, 317, 318, 1117, 319, 1111, 1110, 1031,
	323, 320, 321, 0, 324, 322, 0, 325, 326, 327,
	0, 0, 328, 1102, 330, 0, 331, 332, 0, 333,
	334, 335, 0, 336, 337, 1037, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 1125, 1126, 349, 1049,
	260, 0, 0, 0, 0, 0, 350, 351, 352, 1109,
	0, 0, 0, 353, 0, 354, 0, 0, 1136, 355,
	356, 1122, 1123, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 365, 1132, 0, 1059, 366, 0, 367, 368,
	369, 370, 371, 1095, 1096, 1099, 448, 1138, 372, 373,
	0, 374, 375, 376, 377, 0, 0, 0, 261, 378,
	379, 380, 382, 0, 1137, 381, 1104, 1105, 0, 1065,
	0, 383, 384, 1139, 1097, 1140, 385, 386, 387, 1141,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	0, 395, 397, 396, 0, 398, 1133, 1142, 399, 400,
	1143, 0, 401, 0, 0, 0, 402, 403, 406, 1088,
	1087, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	1144, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 1145, 435, 1028, 262, 1146, 445, 446,
	1050, 1098, 447, 1112, 449, 450, 0, 0, 451, 0,
	0, 0, 453, 454, 455, 0, 0, 456, 457, 628,
	1147, 458, 1148, 1127, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 0, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 1128, 477, 633, 478,
	479, 0, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 1108, 489, 491, 490, 492, 0, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 0, 506, 507,
	508, 1149, 509, 510, 511, 512, 1038, 513, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	0, 529, 530, 528, 531, 532, 533, 1091, 534, 535,
	518, 519, 536, 537, 1150, 538, 539, 540, 541, 542,
	543, 1106, 0, 544, 0, 545, 546, 547, 548, 520,
	549, 554, 1153, 550, 551, 552, 553, 1129, 556, 0,
	557, 558, 1026, 555, 0, 559, 560, 561, 562, 563,
	564, 565, 343, 566, 0, 567, 1118, 1119, 1120, 1121,
	0, 576, 0, 568, 569, 570, 1130, 571, 1131, 1048,
	572, 573, 574, 575, 0, 577, 578, 0, 1032, 579,
	580, 581, 583, 584, 582, 585, 1092, 586, 0, 0,
	587, 588, 589, 645, 1115, 1152, 0, 591, 590, 592,
	648, 0, 0, 0, 0, 593, 594, 649, 595, 596,
	597, 1029, 0, 0, 0, 0, 0, 0, 0, 1025,
	0, 0, 0, 0, 0, 0, 1023, 1024, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 0, 1467, 1052,
	1070, 1042, 1043, 1044, 1040, 1041, 1053, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1094, 1058, 0, 0, 0, 273, 274,
	1134, 275, 276, 277, 278, 279, 599, 1107, 0, 280,
	1114, 281, 1113, 0, 1124, 282, 283, 284, 285, 286,
	287, 1060, 1093, 1027, 288, 1154, 1155, 606, 0, 289,
	290, 1100, 0, 1081, 0, 291, 292, 293, 294, 295,
	296, 297, 0, 0, 299, 300, 301, 298, 302, 0,
	303, 0, 304, 305, 306, 307, 308, 309, 0, 310,
	311, 312, 1135, 313, 314, 1084, 1082, 1083, 1090, 1086,
	1085, 1089, 315, 316, 317, 318, 1117, 319, 1111, 1110,
	1031, 323, 320, 321, 0, 324, 322, 0, 325, 326,
	327, 0, 0, 328, 1102, 330, 0, 331, 332, 0,
	333, 334, 335, 0, 336, 337, 1037, 338, 339, 340,
	342, 344, 341, 345, 346, 347, 348, 1125, 1126, 349,
	1049, 260, 0, 0, 0, 0, 0, 350, 351, 352,
	1109, 0, 0, 0, 353, 0, 354, 0, 0, 1136,
	355, 356, 1122, 1123, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 365, 1132, 0, 1059, 366, 0, 367,
	368, 369, 370, 371, 1466, 1096, 1099, 448, 1138, 372,
	373, 0, 374, 375, 376, 377, 0, 0, 0, 261,
	378, 379, 380, 382, 0, 1137, 381, 1104, 1105, 0,
	1065, 0, 383, 384, 1139, 1097, 1140, 385, 386, 387,
	1141, 388, 0, 0, 0, 389, 390, 391, 392, 393,
	394, 0, 395, 397, 396, 0, 398, 1133, 1142, 399,
	400, 1143, 0, 401, 0, 0, 0, 402, 403, 406,
	1088, 1087, 404, 405, 407, 408, 0, 409, 410, 412,
	415, 411, 413, 414, 416, 429, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 431, 0,
	430, 1144, 432, 433, 434, 439, 441, 442, 437, 438,
	440, 443, 444, 436, 1145, 435, 1028, 262, 1146, 445,
	446, 1050, 1098, 447, 1112, 449, 450, 0, 0, 451,
	0, 0, 0, 453, 454, 455, 0, 0, 456, 457,
	628, 1147, 458, 1148, 1127, 459, 460, 452, 461, 462,
	463, 464, 465, 466, 467, 468, 0, 469, 470, 630,
	471, 472, 473, 631, 474, 475, 476, 1128, 477, 633,
	478, 479, 0, 480, 481, 0, 482, 483, 484, 485,
	486, 487, 488, 1108, 489, 491, 490, 492, 0, 493,
	0, 494, 495, 496, 0, 0, 0, 0, 497, 0,
	499, 500, 501, 498, 502, 503, 504, 505, 0, 506,
	507, 508, 1149, 509, 510, 511, 512, 1038, 513, 0,
	514, 515, 521, 522, 516, 517, 523, 524, 525, 526,
	527, 0, 529, 530, 528, 531, 532, 533, 1091, 534,
	535, 518, 519, 536, 537, 1150, 538, 539, 540, 541,
	542, 543, 1106, 0, 544, 0, 545, 546, 547, 548,
	520, 549, 554, 1153, 550, 551, 552, 553, 1129, 556,
	0, 557, 558, 1026, 555, 0, 559, 560, 561, 562,
	563, 564, 565, 343, 566, 0, 567, 1118, 1119, 1120,
	1121, 0, 576, 0, 568, 569, 570, 1130, 571, 1131,
	1048, 572, 573, 574, 575, 0, 577, 578, 0, 1032,
	579, 580, 581, 583, 584, 582, 585, 1092, 586, 0,
	0, 587, 588, 589, 645, 1115, 1152, 0, 591, 590,
	592, 648, 0, 0, 0, 0, 593, 594, 649, 595,
	596, 597, 1029, 0, 0, 0, 0, 0, 0, 0,
	1025, 0, 0, 0, 0, 0, 0, 1023, 1024, 0,
	0, 0, 0, 0, 0, 0, 1054, 0, 0, 1461,
	1052, 1070, 1042, 1043, 1044, 1040, 1041, 1053, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 1094, 1058, 0, 0, 0, 273,
	274, 1134, 275, 276, 277, 278, 279, 599, 1107, 0,
	280, 1114, 281, 1113, 0, 1124, 282, 283, 284, 285,
	286, 287, 1060, 1093, 1027, 288, 1154, 1155, 606, 0,
	289, 290, 1100, 0, 1081, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 1135, 313, 314, 1084, 1082, 1083, 1090,
	1086, 1085, 1089, 315, 316, 317, 318, 1117, 319, 1111,
	1110, 1031, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 1102, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 1037, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 1125, 1126,
	349, 1049, 260, 0, 0, 0, 0, 0, 350, 351,
	352, 1109, 0, 0, 0, 353, 0, 354, 0, 0,
	1136, 355, 356, 1122, 1123, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 1132, 0, 1059, 366, 0,
	367, 368, 369, 370, 371, 1460, 1096, 1099, 448, 1138,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	261, 378, 379, 380, 382, 0, 1137, 381, 1104, 1105,
	0, 1065, 0, 383, 384, 1139, 1097, 1140, 385, 386,
	387, 1141, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 395, 397, 396, 0, 398, 1133, 1142,
	399, 400, 1143, 0, 401, 0, 0, 0, 402, 403,
	406, 1088, 1087, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 1144, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 1145, 435, 1028, 262, 1146,
	445, 446, 1050, 1098, 447, 1112, 449, 450, 0, 0,
	451, 0, 0, 0, 453, 454, 455, 0, 0, 456,
	457, 628, 1147, 458, 1148, 1127, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 1128, 477,
	633, 478, 479, 0, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 1108, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 1149, 509, 510, 511, 512, 1038, 513,
	0, 514, 515, 521, 522, 516, 517, 523, 524, 525,
	526, 527, 0, 529, 530, 528, 531, 532, 533, 1091,
	534, 535, 518, 519, 536, 537, 1150, 538, 539, 540,
	541, 542, 543, 1106, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 1153, 550, 551, 552, 553, 1129,
	556, 0, 557, 558, 1026, 555, 0, 559, 560, 561,
	562, 563, 564, 565, 343, 566, 0, 567, 1118, 1119,
	1120, 1121, 0, 576, 0, 568, 569, 570, 1130, 571,
	1131, 1048, 572, 573, 574, 575, 0, 577, 578, 0,
	1032, 579, 580, 581, 583, 584, 582, 585, 1092, 586,
	0, 0, 587, 588, 589, 645, 1115, 1152, 0, 591,
	590, 592, 648, 0, 0, 0, 0, 593, 594, 649,
	595, 596, 597, 1029, 0, 0, 0, 0, 0, 0,
	0, 1025, 0, 0, 0, 0, 0, 0, 1023, 1024,
	0, 0, 0, 0, 0, 0, 0, 1054, 0, 0,
	1454, 1052, 1070, 1042, 1043, 1044, 1040, 1041, 1053, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 1094, 1058, 0, 0, 0,
	273, 274, 1134, 275, 276, 277, 278, 279, 599, 1107,
	0, 280, 1114, 281, 1113, 0, 1124, 282, 283, 284,
	285, 286, 287, 1060, 1093, 1027, 288, 1154, 1155, 606,
	0, 289, 290, 1100, 0, 1081, 0, 291, 292, 293,
	294, 295, 296, 297, 0, 0, 299, 300, 301, 298,
	302, 0, 303, 0, 304, 305, 306, 307, 308, 309,
	0, 310, 311, 312, 1135, 313, 314, 1084, 1082, 1083,
	1090, 1086, 1085, 1089, 315, 316, 317, 318, 1117, 319,
	1111, 1110, 1031, 323, 320, 321, 0, 324, 322, 0,
	325, 326, 327, 0, 0, 328, 1102, 330, 0, 331,
	332, 0, 333, 334, 335, 0, 336, 337, 1037, 338,
	339, 340, 342, 344, 341, 345, 346, 347, 348, 1125,
	1126, 349, 1049, 260, 0, 0, 0, 0, 0, 350,
	351, 352, 1109, 0, 0, 0, 353, 0, 354, 0,
	0, 1136, 355, 356, 1122, 1123, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 365, 1132, 0, 1059, 366,
	0, 367, 368, 369, 370, 371, 1095, 1096, 1099, 448,
	1138, 372, 373, 0, 374, 375, 376, 377, 0, 0,
	0, 261, 378, 379, 380, 382, 0, 1137, 381, 1104,
	1105, 0, 1065, 0, 383, 384, 1139, 1097, 1140, 385,
	386, 387, 1141, 388, 0, 0, 0, 389, 390, 391,
	392, 393, 394, 0, 395, 397, 396, 0, 398, 1133,
	1142, 399, 400, 1143, 0, 401, 0, 0, 0, 402,
	403, 406, 1088, 1087, 404, 405, 407, 408, 0, 409,
	410, 412, 415, 411, 413, 414, 416, 429, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	431, 0, 430, 1144, 432, 433, 434, 439, 441, 442,
	437, 438, 440, 443, 444, 436, 1145, 435, 1028, 262,
	1146, 445, 446, 1050, 1098, 447, 1112, 449, 450, 0,
	0, 451, 0, 0, 0, 453, 454, 455, 0, 0,
	456, 457, 628, 1147, 458, 1148, 1127, 459, 460, 452,
	461, 462, 463, 464, 465, 466, 467, 468, 0, 469,
	470, 630, 471, 472, 473, 631, 474, 475, 476, 1128,
	477, 633, 478, 479, 0, 480, 481, 0, 482, 483,
	484, 485, 486, 487, 488, 1108, 489, 491, 490, 492,
	0, 493, 0, 494, 495, 496, 0, 0, 0, 0,
	497, 0, 499, 500, 501, 498, 502, 503, 504, 505,
	0, 506, 507, 508, 1149, 509, 510, 511, 512, 1038,
	513, 0, 514, 515, 521, 522, 516, 517, 523, 524,
	525, 526, 527, 0, 529, 530, 528, 531, 532, 533,
	1091, 534, 535, 518, 519, 536, 537, 1150, 538, 539,
	540, 541, 542, 543, 1106, 0, 544, 0, 545, 546,
	547, 548, 520, 549, 554, 1153, 550, 551, 552, 553,
	1129, 556, 0, 557, 558, 1026, 555, 0, 559, 560,
	561, 562, 563, 564, 565, 343, 566, 0, 567, 1118,
	1119, 1120, 1121, 0, 576, 0, 568, 569, 570, 1130,
	571, 1131, 1048, 572, 573, 574, 575, 0, 577, 578,
	0, 1032, 579, 580, 581, 583, 584, 582, 585, 1092,
	586, 0, 0, 587, 588, 589, 645, 1115, 1152, 0,
	591, 590, 592, 648, 0, 0, 0, 0, 593, 594,
	649, 595, 596, 597, 1029, 0, 0, 0, 0, 0,
	0, 0, 1025, 0, 0, 0, 0, 0, 0, 1023,
	1024, 0, 0, 0, 0, 0, 0, 0, 1054, 0,
	0, 1279, 1052, 1070, 1042, 1043, 1044, 1040, 1041, 1053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 1094, 1058, 0, 0,
	0, 273, 274, 1134, 275, 276, 277, 278, 279, 599,
	1107, 0, 280, 1114, 281, 1113, 0, 1124, 282, 283,
	284, 285, 286, 287, 1060, 1093, 1027, 288, 1154, 1155,
	606, 0, 289, 290, 1100, 0, 1081, 0, 291, 292,
	293, 294, 295, 296, 297, 0, 0, 299, 300, 301,
	298, 302, 0, 303, 0, 304, 305, 306, 307, 308,
	309, 0, 310, 311, 312, 1135, 313, 314, 1084, 1082,
	1083, 1090, 1086, 1085, 1089, 315, 316, 317, 318, 1117,
	319, 1111, 1110, 1031, 323, 320, 321, 0, 324, 322,
	0, 325, 326, 327, 0, 0, 328, 1102, 330, 0,
	331, 332, 0, 333, 334, 335, 0, 336, 337, 1037,
	338, 339, 340, 342, 344, 341, 345, 346, 347, 348,
	1125, 1126, 349, 1049, 260, 0, 0, 0, 0, 0,
	350, 351, 352, 1109, 0, 0, 0, 353, 0, 354,
	0, 0, 1136, 355, 356, 1122, 1123, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 365, 1132, 0, 1059,
	366, 0, 367, 368, 369, 370, 371, 1095, 1096, 1099,
	448, 1138, 372, 373, 0, 374, 375, 376, 377, 0,
	0, 0, 261, 378, 379, 380, 382, 0, 1137, 381,
	1104, 1105, 0, 1065, 0, 383, 384, 1139, 1097, 1140,
	385, 386, 387, 1141, 388, 0, 0, 0, 389, 390,
	391, 392, 393, 394, 0, 395, 397, 396, 0, 398,
	1133, 1142, 399, 400, 1143, 0, 401, 0, 0, 0,
	402, 403, 406, 1088, 1087, 404, 405, 407, 408, 0,
	409, 410, 412, 415, 411, 413, 414, 416, 429, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 431, 0, 430, 1144, 432, 433, 434, 439, 441,
	442, 437, 438, 440, 443, 444, 436, 1145, 435, 1028,
	262, 1146, 445, 446, 1050, 1098, 447, 1112, 449, 450,
	0, 0, 451, 0, 0, 0, 453, 454, 455, 0,
	0, 456, 457, 628, 1147, 458, 1148, 1127, 459, 460,
	452, 461, 462, 463, 464, 465, 466, 467, 468, 0,
	469, 470, 630, 471, 472, 473, 631, 474, 475, 476,
	1128, 477, 633, 478, 479, 0, 480, 481, 0, 482,
	483, 484, 485, 486, 487, 488, 1108, 489, 491, 490,
	492, 0, 493, 0, 494, 495, 496, 0, 0, 0,
	0, 497, 0, 499, 500, 501, 498, 502, 503, 504,
	505, 0, 506, 507, 508, 1149, 509, 510, 511, 512,
	1038, 513, 0, 514, 515, 521, 522, 516, 517, 523,
	524, 525, 526, 527, 0, 529, 530, 528, 531, 532,
	533, 1091, 534, 535, 518, 519, 536, 537, 1150, 538,
	539, 540, 541, 542, 543, 1106, 0, 544, 0, 545,
	546, 547, 548, 520, 549, 554, 1153, 550, 551, 552,
	553, 1129, 556, 0, 557, 558, 1026, 555, 0, 559,
	560, 561, 562, 563, 564, 565, 343, 566, 0, 567,
	1118, 1119, 1120, 1121, 0, 576, 0, 568, 569, 570,
	1130, 571, 1131, 1048, 572, 573, 574, 575, 0, 577,
	578, 0, 1032, 579, 580, 581, 583, 584, 582, 585,
	1092, 586, 0, 0, 587, 588, 589, 645, 1115, 1152,
	0, 591, 590, 592, 648, 0, 0, 0, 0, 593,
	594, 649, 595, 596, 597, 1029, 0, 0, 0, 0,
	0, 0, 0, 1025, 0, 0, 0, 0, 0, 0,
	1023, 1024, 1070, 1042, 1043, 1044, 1040, 1041, 1053, 1054,
	0, 0, 0, 1052, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 1094, 1058, 0, 0, 0,
	273, 274, 1134, 275, 276, 277, 278, 279, 599, 1107,
	0, 280, 1114, 281, 1113, 0, 1124, 282, 283, 284,
	285, 286, 287, 1060, 1093, 1027, 288, 1154, 1155, 606,
	0, 289, 290, 1100, 0, 1081, 0, 291, 292, 293,
	294, 295, 296, 297, 0, 0, 299, 300, 301, 298,
	302, 0, 303, 0, 304, 305, 306, 307, 308, 309,
	0, 310, 311, 312, 1135, 313, 314, 1084, 1082, 1083,
	1090, 1086, 1085, 1089, 315, 316, 317, 318, 1117, 319,
	1111, 1110, 1031, 323, 320, 321, 0, 324, 322, 0,
	325, 326, 327, 0, 0, 328, 1102, 330, 0, 331,
	332, 0, 333, 334, 335, 0, 336, 337, 1037, 338,
	339, 340, 342, 344, 341, 345, 346, 347, 348, 1125,
	1126, 349, 1049, 260, 0, 0, 0, 0, 0, 350,
	351, 352, 1109, 0, 0, 0, 353, 0, 354, 0,
	0, 1136, 355, 356, 1122, 1123, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 365, 1132, 0, 1059, 366,
	0, 367, 368, 369, 370, 371, 1095, 1096, 1099, 448,
	1138, 372, 373, 0, 374, 375, 376, 377, 0, 0,
	0, 261, 378, 379, 380, 382, 0, 1137, 381, 1104,
	1105, 0, 1065, 0, 383, 384, 1139, 1097, 1140, 385,
	386, 387, 1141, 388, 0, 0, 0, 389, 390, 391,
	392, 393, 394, 0, 395, 397, 396, 0, 398, 1133,
	1142, 399, 400, 1143, 0, 401, 0, 0, 0, 402,
	403, 406, 1088, 1087, 404, 405, 407, 408, 0, 409,
	410, 412, 415, 411, 413, 414, 416, 429, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	431, 0, 430, 1144, 432, 433, 434, 439, 441, 442,
	437, 438, 440, 443, 444, 436, 1145, 435, 1028, 262,
	1146, 445, 446, 1050, 1098, 447, 1112, 449, 450, 0,
	0, 451, 0, 0, 0, 453, 454, 455, 0, 0,
	456, 457, 628, 1147, 458, 1148, 1127, 459, 460, 452,
	461, 462, 463, 464, 465, 466, 467, 468, 0, 469,
	470, 630, 471, 472, 473, 631, 474, 475, 476, 1128,
	477, 633, 478, 479, 0, 480, 481, 0, 482, 483,
	484, 485, 486, 487, 488, 1108, 489, 491, 490, 492,
	0, 493, 0, 494, 495, 496, 0, 0, 0, 0,
	497, 0, 499, 500, 501, 498, 502, 503, 504, 505,
	0, 506, 507, 508, 1149, 509, 510, 511, 512, 1038,
	513, 0, 514, 515, 521, 522, 516, 517, 523, 524,
	525, 526, 527, 0, 529, 530, 528, 531, 532, 533,
	1091, 534, 535, 518, 519, 536, 537, 1150, 538, 539,
	540, 541, 542, 543, 1106, 0, 544, 0, 545, 546,
	547, 548, 520, 549, 554, 1153, 550, 551, 552, 553,
	1129, 556, 0, 557, 558, 1026, 555, 0, 559, 560,
	561, 562, 563, 564, 565, 343, 566, 0, 567, 1118,
	1119, 1120, 1121, 0, 576, 0, 568, 569, 570, 1130,
	571, 1131, 1048, 572, 573, 574, 575, 0, 577, 578,
	0, 1032, 579, 580, 581, 583, 584, 582, 585, 1092,
	586, 0, 0, 587, 588, 589, 645, 1115, 1152, 0,
	591, 590, 592, 648, 0, 0, 0, 0, 593, 594,
	649, 595, 596, 597, 1029, 0, 0, 0, 0, 0,
	0, 0, 1025, 0, 0, 0, 0, 0, 0, 1023,
	1024, 1070, 1042, 1043, 1044, 1040, 1041, 1053, 1054, 0,
	0, 0, 1052, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 1094, 1058, 0, 0, 0, 273,
	274, 1134, 275, 276, 277, 278, 279, 599, 1107, 0,
	280, 1114, 281, 1113, 0, 1124, 282, 283, 284, 285,
	286, 287, 1060, 1093, 1027, 288, 1154, 1155, 606, 0,
	289, 290, 1100, 0, 1081, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 1135, 313, 4374, 1084, 1082, 1083, 1090,
	1086, 1085, 1089, 315, 316, 317, 318, 1117, 319, 1111,
	1110, 1031, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 1102, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 1037, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 1125, 1126,
	349, 1049, 260, 0, 0, 0, 0, 0, 350, 351,
	352, 1109, 0, 0, 0, 353, 0, 354, 0, 0,
	1136, 355, 356, 1122, 1123, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 1132, 0, 1059, 366, 0,
	367, 368, 369, 370, 371, 1095, 1096, 1099, 448, 1138,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	261, 378, 379, 380, 382, 0, 1137, 381, 1104, 1105,
	0, 1065, 0, 383, 384, 1139, 1097, 1140, 385, 386,
	387, 1141, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 395, 397, 396, 0, 398, 1133, 1142,
	399, 400, 1143, 0, 401, 0, 0, 0, 402, 403,
	406, 1088, 1087, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 1144, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 1145, 435, 1028, 262, 1146,
	445, 446, 1050, 1098, 447, 1112, 449, 450, 0, 0,
	451, 0, 0, 0, 453, 454, 455, 0, 0, 456,
	457, 628, 1147, 458, 1148, 1127, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 1128, 477,
	633, 478, 479, 0, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 1108, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 1149, 509, 510, 511, 512, 1038, 513,
	0, 514, 515, 521, 522, 516, 517, 523, 524, 525,
	526, 527, 0, 529, 530, 528, 531, 532, 533, 1091,
	534, 535, 518, 519, 536, 537, 1150, 538, 539, 540,
	541, 542, 543, 1106, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 1153, 550, 551, 552, 553, 1129,
	556, 0, 557, 558, 1026, 555, 0, 559, 560, 561,
	562, 563, 564, 565, 343, 566, 0, 567, 1118, 1119,
	1120, 1121, 0, 576, 0, 568, 569, 570, 1130, 571,
	1131, 1048, 572, 573, 574, 575, 0, 4373, 578, 0,
	1032, 579, 580, 581, 583, 584, 582, 585, 1092, 586,
	0, 0, 587, 588, 589, 645, 1115, 1152, 0, 591,
	590, 592, 648, 0, 0, 0, 0, 593, 594, 649,
	595, 596, 597, 1029, 0, 0, 0, 0, 0, 0,
	0, 1025, 0, 0, 0, 0, 0, 0, 1023, 1024,
	1070, 1042, 1043, 1044, 1040, 1041, 1053, 1054, 0, 0,
	0, 1052, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 1094, 1058, 0, 0, 0, 273, 274,
	1134, 275, 276, 277, 278, 279, 4372, 1107, 0, 280,
	1114, 281, 1113, 0, 1124, 282, 283, 284, 285, 286,
	287, 1060, 1093, 1027, 288, 1154, 1155, 606, 0, 289,
	290, 1100, 0, 1081, 0, 291, 292, 293, 294, 295,
	296, 297, 0, 0, 299, 300, 301, 298, 302, 0,
	303, 0, 304, 305, 306, 307, 308, 309, 0, 310,
	311, 312, 1135, 313, 4374, 1084, 1082, 1083, 1090, 1086,
	1085, 1089, 315, 316, 317, 318, 1117, 319, 1111, 1110,
	1031, 323, 320, 321, 0, 324, 322, 0, 325, 326,
	327, 0, 0, 328, 1102, 330, 0, 331, 332, 0,
	333, 334, 335, 0, 336, 337, 1037, 338, 339, 340,
	342, 344, 341, 345, 346, 347, 348, 1125, 1126, 349,
	1049, 260, 0, 0, 0, 0, 0, 350, 351, 352,
	1109, 0, 0, 0, 353, 0, 354, 0, 0, 1136,
	355, 356, 1122, 1123, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 365, 1132, 0, 1059, 366, 0, 367,
	368, 369, 370, 371, 1095, 1096, 1099, 448, 1138, 372,
	373, 0, 374, 375, 376, 377, 0, 0, 0, 261,
	378, 379, 380, 382, 0, 1137, 381, 1104, 1105, 0,
	1065, 0, 383, 384, 1139, 1097, 1140, 385, 386, 387,
	1141, 388, 0, 0, 0, 389, 390, 391, 392, 393,
	394, 0, 395, 397, 396, 0, 398, 1133, 1142, 399,
	400, 1143, 0, 401, 0, 0, 0, 402, 403, 406,
	1088, 1087, 404, 405, 407, 408, 0, 409, 410, 412,
	415, 411, 413, 414, 416, 429, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 431, 0,
	430, 1144, 432, 433, 434, 439, 441, 442, 437, 438,
	440, 443, 444, 436, 1145, 435, 1028, 262, 1146, 445,
	446, 1050, 1098, 447, 1112, 449, 450, 0, 0, 451,
	0, 0, 0, 453, 454, 455, 0, 0, 456, 457,
	628, 1147, 458, 1148, 1127, 459, 460, 452, 461, 462,
	463, 464, 465, 466, 467, 468, 0, 469, 470, 630,
	471, 472, 473, 631, 474, 475, 476, 1128, 477, 633,
	478, 479, 0, 480, 481, 0, 482, 483, 484, 485,
	486, 487, 488, 1108, 489, 491, 490, 492, 0, 493,
	0, 494, 495, 496, 0, 0, 0, 0, 497, 0,
	499, 500, 501, 498, 502, 503, 504, 505, 0, 506,
	507, 508, 1149, 509, 510, 511, 512, 1038, 513, 0,
	514, 515, 521, 522, 516, 517, 523, 524, 525, 526,
	527, 0, 529, 530, 528, 531, 532, 533, 1091, 534,
	535, 518, 519, 536, 537, 1150, 538, 539, 540, 541,
	542, 543, 1106, 0, 544, 0, 545, 546, 547, 548,
	520, 549, 554, 1153, 550, 551, 552, 553, 1129, 556,
	0, 557, 558, 1026, 555, 0, 559, 560, 561, 562,
	563, 564, 565, 343, 566, 0, 567, 1118, 1119, 1120,
	1121, 0, 576, 0, 568, 569, 570, 1130, 571, 1131,
	1048, 572, 573, 574, 575, 0, 4373, 578, 0, 1032,
	579, 580, 581, 583, 584, 582, 585, 1092, 586, 0,
	0, 587, 588, 589, 645, 1115, 1152, 0, 591, 590,
	592, 648, 0, 0, 0, 0, 593, 594, 649, 595,
	596, 597, 1029, 0, 0, 0, 0, 0, 0, 0,
	1025, 0, 0, 0, 0, 0, 0, 1023, 1024, 1070,
	1042, 1043, 1044, 1040, 1041, 1053, 1054, 0, 0, 0,
	1052, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1094, 1058, 0, 0, 0, 273, 274, 1134,
	275, 276, 277, 278, 279, 599, 1107, 0, 280, 1114,
	281, 1113, 0, 1124, 282, 283, 284, 285, 286, 287,
	1060, 1093, 1027, 288, 1154, 1155, 606, 0, 289, 290,
	1100, 0, 1081, 0, 291, 292, 293, 294, 295, 296,
	297, 0, 0, 299, 300, 301, 298, 302, 0, 303,
	0, 304, 305, 306, 307, 308, 309, 0, 310, 311,
	312, 1135, 4048, 314, 1084, 1082, 1083, 1090, 1086, 1085,
	1089, 315, 316, 317, 318, 1117, 319, 1111, 1110, 1031,
	323, 320, 321, 0, 324, 322, 0, 325, 326, 327,
	0, 0, 328, 1102, 330, 0, 331, 332, 0, 333,
	334, 335, 0, 336, 337, 1037, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 1125, 1126, 349, 1049,
	260, 0, 0, 0, 0, 0, 350, 351, 352, 1109,
	0, 0, 0, 353, 0, 354, 0, 0, 1136, 355,
	356, 1122, 1123, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 365, 1132, 0, 4049, 366, 0, 367, 368,
	369, 370, 371, 1095, 1096, 1099, 448, 1138, 372, 373,
	0, 374, 375, 376, 377, 0, 0, 0, 261, 378,
	379, 380, 382, 0, 1137, 381, 1104, 1105, 0, 1065,
	0, 383, 384, 1139, 1097, 1140, 385, 386, 387, 1141,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	0, 395, 397, 396, 0, 398, 1133, 1142, 399, 400,
	1143, 0, 401, 0, 0, 0, 402, 403, 406, 1088,
	1087, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	1144, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 1145, 435, 1028, 262, 1146, 445, 446,
	1050, 1098, 447, 1112, 449, 450, 0, 0, 451, 0,
	0, 0, 453, 454, 455, 0, 0, 456, 457, 628,
	1147, 458, 1148, 1127, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 0, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 1128, 477, 633, 478,
	479, 0, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 1108, 489, 491, 490, 492, 0, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 0, 506, 507,
	508, 1149, 509, 510, 511, 4047, 1038, 513, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	0, 529, 530, 528, 531, 532, 533, 1091, 534, 535,
	518, 519, 536, 537, 1150, 538, 539, 540, 541, 542,
	543, 1106, 0, 544, 0, 545, 546, 547, 548, 520,
	549, 554, 1153, 550, 551, 552, 553, 1129, 556, 0,
	557, 558, 1026, 555, 0, 559, 560, 561, 562, 563,
	564, 565, 343, 566, 0, 567, 1118, 1119, 1120, 1121,
	0, 576, 0, 568, 569, 570, 1130, 571, 1131, 1048,
	572, 573, 574, 575, 0, 577, 578, 0, 1032, 579,
	580, 581, 583, 584, 582, 585, 1092, 586, 0, 0,
	587, 588, 589, 645, 1115, 1152, 0, 591, 590, 592,
	648, 0, 0, 0, 0, 593, 594, 649, 595, 596,
	597, 1029, 0, 0, 0, 0, 0, 0, 0, 1025,
	0, 0, 0, 0, 0, 0, 1023, 1024, 1070, 1042,
	1043, 1044, 2956, 2957, 1053, 1054, 0, 0, 0, 1052,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 1094, 1058, 0, 0, 0, 273, 274, 1134, 275,
	276, 277, 278, 279, 599, 1107, 0, 280, 1114, 281,
	1113, 0, 1124, 282, 283, 284, 285, 286, 287, 1060,
	1093, 1027, 288, 1154, 1155, 606, 0, 289, 290, 1100,
	0, 1081, 0, 291, 292, 293, 294, 295, 296, 297,
	0, 0, 299, 300, 301, 298, 302, 0, 303, 0,
	304, 305, 306, 307, 308, 309, 0, 310, 311, 312,
	1135, 313, 314, 1084, 1082, 1083, 1090, 1086, 1085, 1089,
	315, 316, 317, 318, 1117, 319, 1111, 1110, 1031, 323,
	320, 321, 0, 324, 322, 0, 325, 326, 327, 0,
	0, 328, 1102, 330, 0, 331, 332, 0, 333, 334,
	335, 0, 336, 337, 1037, 338, 339, 340, 342, 344,
	341, 345, 346, 347, 348, 1125, 1126, 349, 1049, 260,
	0, 0, 0, 0, 0, 350, 351, 352, 1109, 0,
	0, 0, 353, 0, 354, 0, 0, 1136, 355, 356,
	1122, 1123, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 365, 1132, 0, 1059, 366, 0, 367, 368, 369,
	370, 371, 1095, 1096, 1099, 448, 1138, 372, 373, 0,
	374, 375, 376, 377, 0, 0, 0, 261, 378, 379,
	380, 382, 0, 1137, 381, 1104, 1105, 0, 1065, 0,
	383, 384, 1139, 1097, 1140, 385, 386, 387, 1141, 388,
	0, 0, 0, 389, 390, 391, 392, 393, 394, 0,
	395, 397, 396, 0, 398, 1133, 1142, 399, 400, 1143,
	0, 401, 0, 0, 0, 402, 403, 406, 1088, 1087,
	404, 405, 407, 408, 0, 409, 410, 412, 415, 411,
	413, 414, 416, 429, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 431, 0, 430, 1144,
	432, 433, 434, 439, 441, 442, 437, 438, 440, 443,
	444, 436, 1145, 435, 1028, 262, 1146, 445, 446, 1050,
	1098, 447, 1112, 449, 450, 0, 0, 451, 0, 0,
	0, 453, 454, 455, 0, 0, 456, 457, 628, 1147,
	458, 1148, 1127, 459, 460, 452, 461, 462, 463, 464,
	465, 466, 467, 468, 0, 469, 470, 630, 471, 472,
	473, 631, 474, 475, 476, 1128, 477, 633, 478, 479,
	0, 480, 481, 0, 482, 483, 484, 485, 486, 487,
	488, 1108, 489, 491, 490, 492, 0, 493, 0, 494,
	495, 496, 0, 0, 0, 0, 497, 0, 499, 500,
	501, 498, 502, 503, 504, 505, 0, 506, 507, 508,
	1149, 509, 510, 511, 512, 1038, 513, 0, 514, 515,
	521, 522, 516, 517, 523, 524, 525, 526, 527, 0,
	529, 530, 528, 531, 532, 533, 1091, 534, 535, 518,
	519, 536, 537, 1150, 538, 539, 540, 541, 542, 543,
	1106, 0, 544, 0, 545, 546, 547, 548, 520, 549,
	554, 1153, 550, 551, 552, 553, 1129, 556, 0, 557,
	558, 1026, 555, 0, 559, 560, 561, 562, 563, 564,
	565, 343, 566, 0, 567, 1118, 1119, 1120, 1121, 0,
	576, 0, 568, 569, 570, 1130, 571, 1131, 1048, 572,
	573, 574, 575, 0, 577, 578, 0, 1032, 579, 580,
	581, 583, 584, 582, 585, 1092, 586, 0, 0, 587,
	588, 589, 645, 1115, 1152, 0, 591, 590, 592, 648,
	0, 0, 0, 0, 593, 594, 649, 595, 596, 597,
	1029, 0, 0, 0, 0, 0, 0, 0, 1025, 0,
	0, 0, 0, 0, 0, 1023, 1024, 1070, 1042, 1043,
	1044, 2954, 2955, 1053, 1054, 0, 0, 0, 1052, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	1094, 1058, 0, 0, 0, 273, 274, 1134, 275, 276,
	277, 278, 279, 599, 1107, 0, 280, 1114, 281, 1113,
	0, 1124, 282, 283, 284, 285, 286, 287, 1060, 1093,
	1027, 288, 1154, 1155, 606, 0, 289, 290, 1100, 0,
	1081, 0, 291, 292, 293, 294, 295, 296, 297, 0,
	0, 299, 300, 301, 298, 302, 0, 303, 0, 304,
	305, 306, 307, 308, 309, 0, 310, 311, 312, 1135,
	313, 314, 1084, 1082, 1083, 1090, 1086, 1085, 1089, 315,
	316, 317, 318, 1117, 319, 1111, 1110, 1031, 323, 320,
	321, 0, 324, 322, 0, 325, 326, 327, 0, 0,
	328, 1102, 330, 0, 331, 332, 0, 333, 334, 335,
	0, 336, 337, 1037, 338, 339, 340, 342, 344, 341,
	345, 346, 347, 348, 1125, 1126, 349, 1049, 260, 0,
	0, 0, 0, 0, 350, 351, 352, 1109, 0, 0,
	0, 353, 0, 354, 0, 0, 1136, 355, 356, 1122,
	1123, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	365, 1132, 0, 1059, 366, 0, 367, 368, 369, 370,
	371, 1095, 1096, 1099, 448, 1138, 372, 373, 0, 374,
	375, 376, 377, 0, 0, 0, 261, 378, 379, 380,
	382, 0, 1137, 381, 1104, 1105, 0, 1065, 0, 383,
	384, 1139, 1097, 1140, 385, 386, 387, 1141, 388, 0,
	0, 0, 389, 390, 391, 392, 393, 394, 0, 395,
	397, 396, 0, 398, 1133, 1142, 399, 400, 1143, 0,
	401, 0, 0, 0, 402, 403, 406, 1088, 1087, 404,
	405, 407, 408, 0, 409, 410, 412, 415, 411, 413,
	414, 416, 429, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 431, 0, 430, 1144, 432,
	433, 434, 439, 441, 442, 437, 438, 440, 443, 444,
	436, 1145, 435, 1028, 262, 1146, 445, 446, 1050, 1098,
	447, 1112, 449, 450, 0, 0, 451, 0, 0, 0,
	453, 454, 455, 0, 0, 456, 457, 628, 1147, 458,
	1148, 1127, 459, 460, 452, 461, 462, 463, 464, 465,
	466, 467, 468, 0, 469, 470, 630, 471, 472, 473,
	631, 474, 475, 476, 1128, 477, 633, 478, 479, 0,
	480, 481, 0, 482, 483, 484, 485, 486, 487, 488,
	1108, 489, 491, 490, 492, 0, 493, 0, 494, 495,
	496, 0, 0, 0, 0, 497, 0, 499, 500, 501,
	498, 502, 503, 504, 505, 0, 506, 507, 508, 1149,
	509, 510, 511, 512, 1038, 513, 0, 514, 515, 521,
	522, 516, 517, 523, 524, 525, 526, 527, 0, 529,
	530, 528, 531, 532, 533, 1091, 534, 535, 518, 519,
	536, 537, 1150, 538, 539, 540, 541, 542, 543, 1106,
	0, 544, 0, 545, 546, 547, 548, 520, 549, 554,
	1153, 550, 551, 552, 553, 1129, 556, 0, 557, 558,
	1026, 555, 0, 559, 560, 561, 562, 563, 564, 565,
	343, 566, 0, 567, 1118, 1119, 1120, 1121, 0, 576,
	0, 568, 569, 570, 1130, 571, 1131, 1048, 572, 573,
	574, 575, 0, 577, 578, 0, 1032, 579, 580, 581,
	583, 584, 582, 585, 1092, 586, 0, 0, 587, 588,
	589, 645, 1115, 1152, 0, 591, 590, 592, 648, 0,
	0, 0, 0, 593, 594, 649, 595, 596, 597, 1029,
	0, 0, 0, 0, 0, 0, 0, 1025, 0, 0,
	0, 0, 0, 0, 1023, 1024, 1070, 1042, 1043, 1044,
	1040, 1041, 1053, 1054, 0, 0, 0, 1052, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 1094,
	1058, 0, 0, 0, 273, 274, 1134, 275, 276, 277,
	278, 279, 599, 1107, 0, 280, 1114, 281, 1113, 0,
	1124, 282, 283, 284, 285, 286, 287, 1060, 1093, 1027,
	288, 1154, 1155, 606, 0, 289, 290, 1100, 0, 1081,
	0, 291, 292, 293, 294, 295, 296, 297, 0, 0,
	299, 300, 301, 298, 302, 0, 303, 0, 304, 305,
	306, 307, 308, 309, 0, 310, 311, 312, 1135, 313,
	314, 1084, 1082, 1083, 1090, 1086, 1085, 1089, 315, 316,
	317, 318, 1117, 319, 1111, 1110, 1031, 323, 320, 321,
	0, 324, 322, 0, 325, 326, 327, 0, 0, 328,
	1102, 330, 0, 331, 332, 0, 333, 334, 335, 0,
	336, 337, 1037, 338, 339, 340, 342, 344, 341, 345,
	346, 347, 348, 1125, 1126, 349, 1049, 260, 0, 0,
	0, 0, 0, 350, 351, 352, 1109, 0, 0, 0,
	353, 0, 354, 0, 0, 1136, 355, 356, 1122, 1123,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 365,
	1132, 0, 1059, 366, 0, 367, 368, 369, 370, 371,
	1095, 1096, 1099, 448, 1138, 372, 373, 0, 374, 375,
	376, 377, 0, 0, 0, 261, 378, 379, 380, 382,
	0, 1137, 381, 1104, 1105, 0, 1065, 0, 383, 384,
	1139, 1097, 1140, 385, 386, 387, 1141, 388, 0, 0,
	0, 389, 390, 391, 392, 393, 394, 0, 395, 397,
	396, 0, 398, 1133, 1142, 399, 400, 1143, 0, 401,
	0, 0, 0, 402, 403, 406, 1088, 1087, 404, 405,
	407, 408, 0, 409, 410, 412, 415, 411, 413, 414,
	416, 429, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 431, 0, 430, 1144, 432, 433,
	434, 439, 441, 442, 437, 438, 440, 443, 444, 436,
	1145, 435, 1028, 262, 1146, 445, 446, 1050, 1098, 447,
	1112, 449, 450, 0, 0, 451, 0, 0, 0, 453,
	454, 455, 0, 0, 456, 457, 628, 1147, 458, 1148,
	1127, 459, 460, 452, 461, 462, 463, 464, 465, 466,
	467, 468, 0, 469, 470, 630, 471, 472, 473, 631,
	474, 475, 476, 1128, 477, 633, 478, 479, 0, 480,
	481, 0, 482, 483, 484, 485, 486, 487, 488, 1108,
	489, 491, 490, 492, 0, 493, 0, 494, 495, 496,
	0, 0, 0, 0, 497, 0, 499, 500, 501, 498,
	502, 503, 504, 505, 0, 506, 507, 508, 1149, 509,
	510, 511, 512, 1038, 513, 0, 514, 515, 521, 522,
	516, 517, 523, 524, 525, 526, 527, 0, 529, 530,
	528, 531, 532, 533, 1091, 534, 535, 518, 519, 536,
	537, 1150, 538, 539, 540, 541, 542, 543, 1106, 0,
	544, 0, 545, 546, 547, 548, 520, 549, 554, 1153,
	550, 551, 552, 553, 1129, 556, 0, 557, 558, 1026,
	555, 0, 559, 560, 561, 562, 563, 564, 565, 343,
	566, 0, 567, 1118, 1119, 1120, 1121, 0, 576, 0,
	568, 569, 570, 1130, 571, 1131, 1048, 572, 573, 574,
	575, 0, 577, 578, 0, 1032, 579, 580, 581, 583,
	584, 582, 585, 1092, 586, 0, 0, 587, 588, 589,
	645, 1115, 1152, 0, 591, 590, 592, 648, 0, 0,
	0, 0, 593, 594, 649, 595, 596, 597, 1029, 0,
	0, 0, 0, 0, 0, 0, 1025, 0, 0, 0,
	0, 0, 0, 2300, 2301, 1070, 1042, 1043, 1044, 1040,
	1041, 1053, 1054, 0, 0, 0, 1052, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 1094, 1058,
	0, 0, 0, 273, 274, 1134, 275, 276, 277, 278,
	279, 599, 1107, 0, 280, 1114, 281, 1113, 0, 1124,
	282, 283, 284, 285, 286, 287, 1060, 1093, 0, 288,
	1154, 1155, 606, 0, 289, 290, 1100, 0, 1081, 0,
	291, 292, 293, 294, 295, 296, 297, 0, 0, 299,
	300, 301, 298, 302, 0, 303, 0, 304, 305, 306,
	307, 308, 309, 0, 310, 311, 312, 1135, 313, 314,
	1084, 1082, 1083, 1090, 1086, 1085, 1089, 315, 316, 317,
	318, 1117, 319, 1111, 1110, 0, 323, 320, 321, 0,
	324, 322, 0, 325, 326, 327, 0, 0, 328, 1102,
	330, 0, 331, 332, 0, 333, 334, 335, 0, 336,
	337, 1037, 338, 339, 340, 342, 344, 341, 345, 346,
	347, 348, 1125, 1126, 349, 1049, 260, 0, 0, 0,
	0, 0, 350, 351, 352, 1109, 0, 0, 0, 353,
	0, 354, 0, 0, 1136, 355, 356, 1122, 1123, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 365, 1132,
	0, 1059, 366, 0, 367, 368, 369, 370, 371, 1095,
	1096, 1099, 448, 1138, 372, 373, 0, 374, 375, 376,
	377, 0, 0, 0, 261, 378, 379, 380, 382, 0,
	1137, 381, 1104, 1105, 0, 1065, 0, 383, 384, 1139,
	1097, 1140, 385, 386, 387, 1141, 388, 0, 0, 0,
	389, 390, 391, 392, 393, 394, 0, 395, 397, 396,
	0, 398, 1133, 1142, 399, 400, 1143, 0, 401, 0,
	0, 0, 402, 403, 406, 1088, 1087, 404, 405, 407,
	408, 0, 409, 410, 412, 415, 411, 413, 414, 416,
	429, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 431, 0, 430, 1144, 432, 433, 434,
	439, 441, 442, 437, 438, 440, 443, 444, 436, 1145,
	435, 0, 262, 1146, 445, 446, 1050, 1098, 447, 1112,
	449, 450, 0, 0, 451, 0, 0, 0, 453, 454,
	455, 0, 0, 456, 457, 628, 1147, 458, 1148, 1127,
	459, 460, 452, 461, 462, 463, 464, 465, 466, 467,
	468, 0, 469, 470, 630, 471, 472, 473, 631, 474,
	475, 476, 1128, 477, 633, 478, 479, 0, 480, 481,
	0, 482, 483, 484, 485, 486, 487, 488, 1108, 489,
	491, 490, 492, 0, 493, 0, 494, 495, 496, 0,
	0, 0, 0, 497, 0, 499, 500, 501, 498, 502,
	503, 504, 505, 0, 506, 507, 508, 1149, 509, 510,
	511, 512, 1038, 513, 0, 514, 515, 521, 522, 516,
	517, 523, 524, 525, 526, 527, 0, 529, 530, 528,
	531, 532, 533, 1091, 534, 535, 518, 519, 536, 537,
	1150, 538, 539, 540, 541, 542, 543, 1106, 0, 544,
	0, 545, 546, 547, 548, 520, 549, 554, 1153, 550,
	551, 552, 553, 1129, 556, 0, 557, 558, 0, 555,
	0, 559, 560, 561, 562, 563, 564, 565, 343, 566,
	0, 567, 1118, 1119, 1120, 1121, 0, 576, 0, 568,
	569, 570, 1130, 571, 1131, 1048, 572, 573, 574, 575,
	0, 577, 578, 0, 0, 579, 580, 581, 583, 584,
	582, 585, 1092, 586, 0, 0, 587, 588, 589, 645,
	1115, 1152, 0, 591, 590, 592, 648, 0, 0, 0,
	0, 593, 594, 649, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 0, 2520, 0, 0, 0, 0,
	0, 0, 2518, 2519, 1070, 1042, 1043, 1044, 1040, 1041,
	1053, 1054, 0, 0, 0, 1052, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 1094, 1058, 0,
	0, 0, 273, 274, 1134, 275, 276, 277, 278, 279,
	599, 1107, 0, 280, 1114, 281, 1113, 0, 1124, 282,
	283, 284, 285, 286, 287, 1060, 1093, 0, 288, 1154,
	1155, 606, 0, 289, 290, 1100, 0, 1081, 0, 291,
	292, 293, 294, 295, 296, 297, 0, 0, 299, 300,
	301, 298, 302, 0, 303, 0, 304, 305, 306, 307,
	308, 309, 0, 310, 311, 312, 1135, 313, 314, 1084,
	1082, 1083, 1090, 1086, 1085, 1089, 315, 316, 317, 318,
	1117, 319, 1111, 1110, 0, 323, 320, 321, 0, 324,
	322, 0, 325, 326, 327, 0, 0, 328, 1102, 330,
	0, 331, 332, 0, 333, 334, 335, 0, 336, 337,
	1037, 338, 339, 340, 342, 344, 341, 345, 346, 347,
	348, 1125, 1126, 349, 1049, 260, 0, 0, 0, 0,
	0, 350, 351, 352, 1109, 0, 0, 0, 353, 0,
	354, 0, 0, 1136, 355, 356, 1122, 1123, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 365, 1132, 0,
	1059, 366, 0, 367, 368, 369, 370, 371, 1095, 1096,
	1099, 448, 1138, 372, 373, 0, 374, 375, 376, 377,
	0, 0, 0, 261, 378, 379, 380, 382, 0, 1137,
	381, 1104, 1105, 0, 1065, 0, 383, 384, 1139, 1097,
	1140, 385, 386, 387, 1141, 388, 0, 0, 0, 389,
	390, 391, 392, 393, 394, 0, 395, 397, 396, 0,
	398, 1133, 1142, 399, 400, 1143, 0, 401, 0, 0,
	0, 402, 403, 406, 1088, 1087, 404, 405, 407, 408,
	0, 409, 410, 412, 415, 411, 413, 414, 416, 429,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 431, 0, 430, 1144, 432, 433, 434, 439,
	441, 442, 437, 438, 440, 443, 444, 436, 1145, 435,
	0, 262, 1146, 445, 446, 1050, 1098, 447, 1112, 449,
	450, 0, 0, 451, 0, 0, 0, 453, 454, 455,
	0, 0, 456, 457, 628, 1147, 458, 1148, 1127, 459,
	460, 452, 461, 462, 463, 464, 465, 466, 467, 468,
	0, 469, 470, 630, 471, 472, 473, 631, 474, 475,
	476, 1128, 477, 633, 478, 479, 0, 480, 481, 0,
	482, 483, 484, 485, 486, 487, 488, 1108, 489, 491,
	490, 492, 0, 493, 0, 494, 495, 496, 0, 0,
	0, 0, 497, 0, 499, 500, 501, 498, 502, 503,
	504, 505, 0, 506, 507, 508, 1149, 509, 510, 511,
	512, 2949, 2950, 0, 514, 515, 521, 522, 516, 517,
	523, 524, 525, 526, 527, 0, 529, 530, 528, 531,
	532, 533, 1091, 534, 535, 518, 519, 536, 537, 1150,
	538, 539, 540, 541, 542, 543, 1106, 0, 544, 0,
	545, 546, 547, 548, 520, 549, 554, 1153, 550, 551,
	552, 553, 1129, 556, 0, 557, 558, 0, 555, 0,
	559, 560, 561, 562, 563, 564, 565, 343, 566, 0,
	567, 1118, 1119, 1120, 1121, 0, 576, 0, 568, 569,
	570, 1130, 571, 1131, 1048, 572, 573, 574, 575, 0,
	577, 578, 0, 0, 579, 580, 581, 583, 584, 582,
	585, 1092, 586, 0, 0, 587, 588, 589, 645, 1115,
	1152, 0, 591, 590, 592, 648, 0, 0, 0, 0,
	593, 594, 649, 595, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2027, 2028, 1070, 1042, 1043, 1044, 1040, 1041, 1053,
	1054, 0, 0, 0, 1052, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 1094, 1058, 0, 0,
	0, 273, 274, 1134, 275, 276, 277, 278, 279, 0,
	1107, 0, 280, 1114, 281, 1113, 0, 1124, 282, 283,
	284, 285, 286, 287, 1060, 1093, 1027, 288, 1154, 1155,
	606, 0, 289, 290, 1100, 0, 1081, 0, 291, 292,
	293, 294, 295, 296, 297, 0, 0, 299, 300, 301,
	298, 302, 0, 303, 0, 304, 305, 306, 307, 308,
	309, 0, 310, 311, 312, 1135, 313, 4374, 1084, 1082,
	1083, 1090, 1086, 1085, 1089, 315, 316, 317, 318, 1117,
	319, 1111, 1110, 1031, 323, 320, 321, 0, 324, 322,
	0, 325, 326, 327, 0, 0, 328, 1102, 330, 0,
	331, 332, 0, 333, 334, 335, 0, 336, 337, 1037,
	338, 339, 340, 342, 344, 341, 345, 346, 347, 348,
	1125, 1126, 349, 1049, 260, 0, 0, 0, 0, 0,
	350, 351, 352, 1109, 0, 0, 0, 353, 0, 354,
	0, 0, 1136, 355, 356, 1122, 1123, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 365, 1132, 0, 1059,
	366, 0, 367, 368, 369, 370, 371, 1095, 1096, 1099,
	448, 0, 372, 373, 0, 374, 375, 376, 377, 0,
	0, 0, 261, 378, 379, 380, 382, 0, 1137, 381,
	1104, 1105, 0, 1065, 0, 383, 384, 0, 1097, 0,
	385, 386, 387, 1141, 388, 0, 0, 0, 389, 390,
	391, 392, 393, 394, 0, 395, 397, 396, 0, 398,
	1133, 1142, 399, 400, 0, 0, 401, 0, 0, 0,
	402, 403, 406, 1088, 1087, 404, 405, 407, 408, 0,
	409, 410, 412, 415, 411, 413, 414, 416, 429, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 431, 0, 430, 1144, 432, 433, 434, 439, 441,
	442, 437, 438, 440, 443, 444, 436, 1145, 435, 1028,
	262, 0, 445, 446, 1050, 1098, 447, 1112, 449, 450,
	0, 0, 451, 0, 0, 0, 453, 454, 455, 0,
	0, 456, 457, 628, 1147, 458, 1148, 1127, 459, 460,
	452, 461, 462, 463, 464, 465, 466, 467, 468, 0,
	469, 470, 630, 471, 472, 473, 631, 474, 475, 476,
	1128, 477, 633, 478, 479, 0, 480, 481, 0, 482,
	483, 484, 485, 486, 487, 488, 1108, 489, 491, 490,
	492, 0, 493, 0, 494, 495, 496, 0, 0, 0,
	0, 497, 0, 499, 500, 501, 498, 502, 503, 504,
	505, 0, 506, 507, 508, 1149, 509, 510, 511, 512,
	1038, 513, 0, 514, 515, 521, 522, 516, 517, 523,
	524, 525, 526, 527, 0, 529, 530, 528, 531, 532,
	533, 1091, 534, 535, 518, 519, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 1106, 0, 544, 0, 545,
	546, 547, 548, 520, 549, 554, 1153, 550, 551, 552,
	553, 1129, 556, 0, 557, 558, 1026, 555, 0, 559,
	560, 561, 562, 563, 564, 565, 343, 566, 0, 567,
	1118, 1119, 1120, 1121, 0, 576, 0, 568, 569, 570,
	1130, 571, 1131, 1048, 572, 573, 574, 575, 0, 4373,
	578, 0, 1032, 579, 580, 581, 583, 584, 582, 585,
	1092, 586, 0, 0, 587, 588, 589, 645, 1115, 1152,
	0, 591, 590, 592, 648, 0, 0, 0, 0, 593,
	594, 649, 595, 596, 597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1016, 0, 1192, 0, 0,
	1023, 1024, 0, 0, 0, 0, 0, 0, 0, 1054,
	0, 0, 0, 1052, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	1094, 0, 0, 0, 0, 273, 274, 1134, 275, 276,
	277, 278, 279, 599, 600, 0, 280, 601, 281, 602,
	0, 603, 282, 283, 284, 285, 286, 287, 0, 1093,
	0, 288, 604, 605, 606, 0, 289, 290, 1100, 0,
	1081, 0, 291, 292, 293, 294, 295, 296, 297, 0,
	0, 299, 300, 301, 298, 302, 0, 303, 0, 304,
	305, 306, 307, 308, 309, 0, 310, 311, 312, 1135,
	313, 314, 1084, 1082, 1083, 1090, 1086, 1085, 1089, 315,
	316, 317, 318, 0, 319, 608, 609, 0, 323, 320,
	321, 0, 324, 322, 0, 325, 326, 327, 0, 0,
	328, 329, 330, 0, 331, 332, 0, 333, 334, 335,
	0, 336, 337, 610, 338, 339, 340, 342, 344, 341,
	345, 346, 347, 348, 1125, 1126, 349, 0, 260, 0,
	0, 0, 0, 0, 350, 351, 352, 613, 0, 0,
	0, 353, 0, 354, 0, 0, 1136, 355, 356, 614,
	615, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	365, 1132, 0, 617, 366, 0, 367, 368, 369, 370,
	371, 1095, 1096, 1099, 448, 1138, 372, 373, 0, 374,
	375, 376, 377, 0, 0, 0, 261, 378, 379, 380,
	382, 0, 1137, 381, 621, 622, 0, 623, 0, 383,
	384, 1139, 1097, 1140, 385, 386, 387, 1141, 388, 0,
	0, 0, 389, 390, 391, 392, 393, 394, 1178, 395,
	397, 396, 0, 398, 1133, 1142, 399, 400, 1143, 0,
	401, 0, 0, 0, 402, 403, 406, 1088, 1087, 404,
	405, 407, 408, 0, 409, 410, 412, 415, 411, 413,
	414, 416, 429, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 431, 0, 430, 1144, 432,
	433, 434, 439, 441, 442, 437, 438, 440, 443, 444,
	436, 1145, 435, 0, 262, 1146, 445, 446, 0, 1098,
	447, 627, 449, 450, 0, 0, 451, 0, 0, 1184,
	453, 454, 455, 0, 0, 456, 457, 628, 1147, 458,
	1148, 1127, 459, 460, 452, 461, 462, 463, 464, 465,
	466, 467, 468, 0, 469, 470, 630, 471, 472, 473,
	631, 474, 475, 476, 1128, 477, 633, 478, 479, 0,
	480, 481, 0, 482, 483, 484, 485, 486, 487, 488,
	634, 489, 491, 490, 492, 0, 493, 0, 494, 495,
	496, 0, 0, 0, 0, 497, 0, 499, 500, 501,
	498, 502, 503, 504, 505, 0, 506, 507, 508, 1149,
	509, 510, 511, 512, 635, 1186, 0, 514, 515, 521,
	522, 516, 517, 523, 524, 525, 526, 527, 222, 529,
	530, 528, 531, 532, 533, 1091, 534, 535, 518, 519,
	536, 537, 1150, 538, 539, 540, 541, 542, 543, 636,
	0, 544, 0, 545, 546, 547, 548, 520, 549, 554,
	637, 550, 551, 552, 553, 1129, 556, 0, 557, 558,
	0, 555, 224, 559, 560, 561, 562, 563, 564, 565,
	343, 566, 0, 567, 639, 640, 641, 642, 0, 576,
	0, 568, 569, 570, 1130, 571, 1131, 0, 572, 573,
	574, 575, 0, 577, 578, 0, 0, 579, 580, 581,
	583, 584, 582, 585, 1092, 586, 0, 0, 587, 588,
	589, 1542, 646, 647, 0, 591, 590, 592, 648, 1192,
	0, 0, 216, 593, 594, 649, 595, 596, 597, 0,
	0, 217, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 1182, 1094, 1873, 0, 0, 0, 273, 274, 1134,
	275, 276, 277, 278, 279, 599, 600, 0, 280, 601,
	281, 602, 0, 603, 282, 283, 284, 285, 286, 287,
	0, 1093, 0, 288, 604, 605, 606, 0, 289, 290,
	1100, 0, 1081, 0, 291, 292, 293, 294, 295, 296,
	297, 0, 0, 299, 300, 301, 298, 302, 0, 303,
	0, 304, 305, 306, 307, 308, 309, 0, 310, 311,
	312, 1135, 313, 314, 1084, 1082, 1083, 1090, 1086, 1085,
	1089, 315, 316, 317, 318, 0, 319, 608, 609, 0,
	323, 320, 321, 0, 324, 322, 0, 325, 326, 327,
	0, 0, 328, 329, 330, 0, 331, 332, 0, 333,
	334, 335, 0, 336, 337, 610, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 1125, 1126, 349, 0,
	260, 0, 0, 0, 0, 0, 350, 351, 352, 613,
	0, 0, 0, 353, 0, 354, 0, 0, 1136, 355,
	356, 614, 615, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 365, 1132, 0, 617, 366, 0, 367, 368,
	369, 370, 371, 1095, 1096, 1099, 448, 1138, 372, 373,
	0, 374, 375, 376, 377, 0, 0, 0, 261, 378,
	379, 380, 382, 0, 1137, 381, 621, 622, 0, 623,
	0, 383, 384, 1139, 1097, 1140, 385, 386, 387, 1141,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	1178, 395, 397, 396, 0, 398, 1133, 1142, 399, 400,
	1143, 0, 401, 0, 0, 0, 402, 403, 406, 1088,
	1087, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	1144, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 1145, 435, 0, 262, 1146, 445, 446,
	0, 1098, 447, 627, 449, 450, 0, 0, 451, 0,
	0, 1184, 453, 454, 455, 0, 0, 456, 457, 628,
	1147, 458, 1148, 1127, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 0, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 1128, 477, 633, 478,
	479, 0, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 634, 489, 491, 490, 492, 0, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 0, 506, 507,
	508, 1149, 509, 510, 511, 512, 635, 1186, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	222, 529, 530, 528, 531, 532, 533, 1091, 534, 535,
	518, 519, 536, 537, 1150, 538, 539, 540, 541, 542,
	543, 636, 0, 544, 0, 545, 546, 547, 548, 520,
	549, 554, 637, 550, 551, 552, 553, 1129, 556, 0,
	557, 558, 0, 555, 224, 559, 560, 561, 562, 563,
	564, 565, 343, 566, 0, 567, 639, 640, 641, 642,
	0, 576, 0, 568, 569, 570, 1130, 571, 1131, 0,
	572, 573, 574, 575, 0, 577, 578, 0, 0, 579,
	580, 581, 583, 584, 582, 585, 1092, 586, 0, 0,
	587, 588, 589, 1542, 646, 647, 0, 591, 590, 592,
	648, 3133, 0, 1192, 216, 593, 594, 649, 595, 596,
	597, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 1182, 0, 1873, 1094, 0, 0, 0,
	0, 273, 274, 1134, 275, 276, 277, 278, 279, 599,
	600, 0, 280, 601, 281, 602, 0, 603, 282, 283,
	284, 285, 286, 287, 0, 1093, 0, 288, 604, 605,
	606, 0, 289, 290, 1100, 0, 1081, 0, 291, 292,
	293, 294, 295, 296, 297, 0, 0, 299, 300, 301,
	298, 302, 0, 303, 0, 304, 305, 306, 307, 308,
	309, 0, 310, 311, 312, 1135, 313, 314, 1084, 1082,
	1083, 1090, 1086, 1085, 1089, 315, 316, 317, 318, 0,
	319, 608, 609, 0, 323, 320, 321, 0, 324, 322,
	0, 325, 326, 327, 0, 0, 328, 329, 330, 0,
	331, 332, 0, 333, 334, 335, 0, 336, 337, 610,
	338, 339, 340, 342, 344, 341, 345, 346, 347, 348,
	1125, 1126, 349, 0, 260, 0, 0, 0, 0, 0,
	350, 351, 352, 613, 0, 0, 0, 353, 0, 354,
	0, 0, 1136, 355, 356, 614, 615, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 365, 1132, 0, 617,
	366, 0, 367, 368, 369, 370, 371, 1095, 1096, 1099,
	448, 1138, 372, 373, 0, 374, 375, 376, 377, 0,
	0, 0, 261, 378, 379, 380, 382, 0, 1137, 381,
	621, 622, 0, 623, 0, 383, 384, 1139, 1097, 1140,
	385, 386, 387, 1141, 388, 0, 0, 0, 389, 390,
	391, 392, 393, 394, 1178, 395, 397, 396, 0, 398,
	1133, 1142, 399, 400, 1143, 0, 401, 0, 0, 0,
	402, 403, 406, 1088, 1087, 404, 405, 407, 408, 0,
	409, 410, 412, 415, 411, 413, 414, 416, 429, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 431, 0, 430, 1144, 432, 433, 434, 439, 441,
	442, 437, 438, 440, 443, 444, 436, 1145, 435, 0,
	262, 1146, 445, 446, 0, 1098, 447, 627, 449, 450,
	0, 0, 451, 0, 0, 1184, 453, 454, 455, 0,
	0, 456, 457, 628, 1147, 458, 1148, 1127, 459, 460,
	452, 461, 462, 463, 464, 465, 466, 467, 468, 0,
	469, 470, 630, 471, 472, 473, 631, 474, 475, 476,
	1128, 477, 633, 478, 479, 0, 480, 481, 0, 482,
	483, 484, 485, 486, 487, 488, 634, 489, 491, 490,
	492, 0, 493, 0, 494, 495, 496, 0, 0, 0,
	0, 497, 0, 499, 500, 501, 498, 502, 503, 504,
	505, 0, 506, 507, 508, 1149, 509, 510, 511, 512,
	635, 1186, 0, 514, 515, 521, 522, 516, 517, 523,
	524, 525, 526, 527, 0, 529, 530, 528, 531, 532,
	533, 1091, 534, 535, 518, 519, 536, 537, 1150, 538,
	539, 540, 541, 542, 543, 636, 0, 544, 0, 545,
	546, 547, 548, 520, 549, 554, 637, 550, 551, 552,
	553, 1129, 556, 0, 557, 558, 0, 555, 0, 559,
	560, 561, 562, 563, 564, 565, 343, 566, 0, 567,
	639, 640, 641, 642, 0, 576, 0, 568, 569, 570,
	1130, 571, 1131, 0, 572, 573, 574, 575, 0, 577,
	578, 0, 0, 579, 580, 581, 583, 584, 582, 585,
	1092, 586, 0, 0, 587, 588, 589, 645, 646, 647,
	0, 591, 590, 592, 648, 1174, 0, 1192, 0, 593,
	594, 649, 595, 596, 597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 1182, 0, 1180,
	1094, 0, 0, 0, 0, 273, 274, 1134, 275, 276,
	277, 278, 279, 599, 600, 0, 280, 601, 281, 602,
	0, 603, 282, 283, 284, 285, 286, 287, 0, 1093,
	0, 288, 604, 605, 606, 0, 289, 290, 1100, 0,
	1081, 0, 291, 292, 293, 294, 295, 296, 297, 0,
	0, 299, 300, 301, 298, 302, 0, 303, 0, 304,
	305, 306, 307, 308, 309, 0, 310, 311, 312, 1135,
	313, 314, 1084, 1082, 1083, 1090, 1086, 1085, 1089, 315,
	316, 317, 318, 0, 319, 608, 609, 0, 323, 320,
	321, 0, 324, 322, 0, 325, 326, 327, 0, 0,
	328, 329, 330, 0, 331, 332, 0, 333, 334, 335,
	0, 336, 337, 610, 338, 339, 340, 342, 344, 341,
	345, 346, 347, 348, 1125, 1126, 349, 0, 260, 0,
	0, 0, 0, 0, 350, 351, 352, 613, 0, 0,
	0, 353, 0, 354, 0, 0, 1136, 355, 356, 614,
	615, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	365, 1132, 0, 617, 366, 0, 367, 368, 369, 370,
	371, 1095, 1096, 1099, 448, 1138, 372, 373, 0, 374,
	375, 376, 377, 0, 0, 0, 261, 378, 379, 380,
	382, 0, 1137, 381, 621, 622, 0, 623, 0, 383,
	384, 1139, 1097, 1140, 385, 386, 387, 1141, 388, 0,
	0, 0, 389, 390, 391, 392, 393, 394, 1178, 395,
	397, 396, 0, 398, 1133, 1142, 399, 400, 1143, 0,
	401, 0, 0, 0, 402, 403, 406, 1088, 1087, 404,
	405, 407, 408, 0, 409, 410, 412, 415, 411, 413,
	414, 416, 429, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 431, 0, 430, 1144, 432,
	433, 434, 439, 441, 442, 437, 438, 440, 443, 444,
	436, 1145, 435, 0, 262, 1146, 445, 446, 0, 1098,
	447, 627, 449, 450, 0, 0, 451, 0, 0, 1184,
	453, 454, 455, 0, 0, 456, 457, 628, 1147, 458,
	1148, 1127, 459, 460, 452, 461, 462, 463, 464, 465,
	466, 467, 468, 0, 469, 470, 630, 471, 472, 473,
	631, 474, 475, 476, 1128, 477, 633, 478, 479, 0,
	480, 481, 0, 482, 483, 484, 485, 486, 487, 488,
	634, 489, 491, 490, 492, 0, 493, 0, 494, 495,
	496, 0, 0, 0, 0, 497, 0, 499, 500, 501,
	498, 502, 503, 504, 505, 0, 506, 507, 508, 1149,
	509, 510, 511, 512, 635, 1186, 0, 514, 515, 521,
	522, 516, 517, 523, 524, 525, 526, 527, 0, 529,
	530, 528, 531, 532, 533, 1091, 534, 535, 518, 519,
	536, 537, 1150, 538, 539, 540, 541, 542, 543, 636,
	0, 544, 0, 545, 546, 547, 548, 520, 549, 554,
	637, 550, 551, 552, 553, 1129, 556, 0, 557, 558,
	0, 555, 0, 559, 560, 561, 562, 563, 564, 565,
	343, 566, 0, 567, 639, 640, 641, 642, 0, 576,
	0, 568, 569, 570, 1130, 571, 1131, 0, 572, 573,
	574, 575, 0, 577, 578, 0, 0, 579, 580, 581,
	583, 584, 582, 585, 1092, 586, 0, 0, 587, 588,
	589, 645, 646, 647, 0, 591, 590, 592, 648, 1192,
	0, 0, 0, 593, 594, 649, 595, 596, 597, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 1182, 1094, 1180, 0, 0, 0, 273, 274, 1134,
	275, 276, 277, 278, 279, 599, 600, 0, 280, 601,
	281, 602, 0, 603, 282, 283, 284, 285, 286, 287,
	0, 1093, 0, 288, 604, 605, 606, 0, 289, 290,
	1100, 0, 1081, 0, 291, 292, 293, 294, 295, 296,
	297, 0, 0, 299, 300, 301, 298, 302, 0, 303,
	0, 304, 305, 306, 307, 308, 309, 0, 310, 311,
	312, 1135, 313, 314, 1084, 1082, 1083, 1090, 1086, 1085,
	1089, 315, 316, 317, 318, 0, 319, 608, 609, 0,
	323, 320, 321, 0, 324, 322, 0, 325, 326, 327,
	0, 0, 328, 329, 330, 0, 331, 332, 0, 333,
	334, 335, 0, 336, 337, 610, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 1125, 1126, 349, 0,
	260, 0, 0, 0, 0, 0, 350, 351, 352, 613,
	0, 0, 0, 353, 0, 354, 0, 0, 1136, 355,
	356, 614, 615, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 365, 1132, 0, 617, 366, 0, 367, 368,
	369, 370, 371, 1095, 1096, 1099, 448, 1138, 372, 373,
	0, 374, 375, 376, 377, 0, 0, 0, 261, 378,
	379, 380, 382, 0, 1137, 381, 621, 622, 0, 623,
	0, 383, 384, 1139, 1097, 1140, 385, 386, 387, 1141,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	1178, 395, 397, 396, 0, 398, 1133, 1142, 399, 400,
	1143, 0, 401, 0, 0, 0, 402, 403, 406, 1088,
	1087, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	1144, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 1145, 435, 0, 262, 1146, 445, 446,
	0, 1098, 447, 627, 449, 450, 0, 0, 451, 0,
	0, 1184, 453, 454, 455, 0, 0, 456, 457, 628,
	1147, 458, 1148, 1127, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 0, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 1128, 477, 633, 478,
	479, 0, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 634, 489, 491, 490, 492, 0, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 0, 506, 507,
	508, 1149, 509, 510, 511, 512, 635, 1186, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	0, 529, 530, 528, 531, 532, 533, 1091, 534, 535,
	518, 519, 536, 537, 1150, 538, 539, 540, 541, 542,
	543, 636, 0, 544, 0, 545, 546, 547, 548, 520,
	549, 554, 637, 550, 551, 552, 553, 1129, 556, 0,
	557, 558, 0, 555, 0, 559, 560, 561, 562, 563,
	564, 565, 343, 566, 0, 567, 639, 640, 641, 642,
	0, 576, 0, 568, 569, 570, 1130, 571, 1131, 0,
	572, 573, 574, 575, 0, 577, 578, 0, 0, 579,
	580, 581, 583, 584, 582, 585, 1092, 586, 0, 0,
	587, 588, 589, 645, 646, 647, 0, 591, 590, 592,
	648, 1192, 0, 0, 0, 593, 594, 649, 595, 596,
	597, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 1182, 1094, 1180, 0, 0, 0, 273,
	274, 1134, 275, 276, 277, 278, 279, 599, 600, 0,
	280, 601, 281, 602, 0, 603, 282, 283, 284, 285,
	286, 287, 0, 1093, 0, 288, 604, 605, 606, 0,
	289, 290, 1100, 0, 1081, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 1135, 313, 314, 1084, 1082, 1083, 1090,
	1086, 1085, 1089, 315, 316, 317, 318, 0, 319, 608,
	609, 0, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 329, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 610, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 1125, 1126,
	349, 0, 260, 0, 0, 0, 0, 0, 350, 351,
	352, 613, 0, 0, 0, 353, 0, 354, 0, 0,
	1136, 355, 356, 614, 615, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 1132, 0, 617, 366, 0,
	367, 368, 369, 370, 371, 1095, 1096, 1099, 448, 1138,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	261, 378, 379, 380, 382, 0, 1137, 381, 621, 622,
	0, 623, 0, 383, 384, 1139, 1097, 1140, 385, 386,
	387, 1141, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 395, 397, 396, 0, 398, 1133, 1142,
	399, 400, 1143, 0, 401, 0, 0, 0, 402, 403,
	406, 1088, 1087, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 1144, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 1145, 435, 0, 262, 1146,
	445, 446, 0, 1098, 447, 627, 449, 450, 0, 0,
	451, 0, 0, 0, 453, 454, 455, 0, 0, 456,
	457, 628, 1147, 458, 1148, 1127, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 1128, 477,
	633, 478, 479, 0, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 634, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 1149, 509, 510, 511, 512, 635, 513,
	0, 514, 515, 521, 522, 516, 517, 523, 524, 525,
	526, 527, 0, 529, 530, 528, 531, 532, 533, 1091,
	534, 535, 518, 519, 536, 537, 1150, 538, 539, 540,
	541, 542, 543, 636, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 637, 550, 551, 552, 553, 1129,
	556, 0, 557, 558, 0, 555, 0, 559, 560, 561,
	562, 563, 564, 565, 343, 566, 0, 567, 639, 640,
	641, 642, 0, 576, 0, 568, 569, 570, 1130, 571,
	1131, 0, 572, 573, 574, 575, 0, 577, 578, 0,
	0, 579, 580, 581, 583, 584, 582, 585, 1092, 586,
	0, 0, 587, 588, 589, 645, 646, 647, 0, 591,
	590, 592, 648, 1192, 0, 0, 0, 593, 594, 649,
	595, 596, 597, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 1094, 3894, 0, 0,
	0, 273, 274, 1134, 275, 276, 277, 278, 279, 599,
	600, 0, 280, 601, 281, 602, 0, 603, 282, 283,
	284, 285, 286, 287, 0, 1093, 0, 288, 604, 605,
	606, 0, 289, 290, 1100, 0, 1081, 0, 291, 292,
	293, 294, 295, 296, 297, 0, 0, 299, 300, 301,
	298, 302, 0, 303, 0, 304, 305, 306, 307, 308,
	309, 0, 310, 311, 312, 1135, 313, 314, 1084, 1082,
	1083, 1090, 1086, 1085, 1089, 315, 316, 317, 318, 0,
	319, 608, 609, 0, 323, 320, 321, 0, 324, 322,
	0, 325, 326, 327, 0, 0, 328, 329, 330, 0,
	331, 332, 0, 333, 334, 335, 0, 336, 337, 610,
	338, 339, 340, 342, 344, 341, 345, 346, 347, 348,
	1125, 1126, 349, 0, 260, 0, 0, 0, 0, 0,
	350, 351, 352, 613, 0, 0, 0, 353, 0, 354,
	0, 0, 1136, 355, 356, 614, 615, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 365, 1132, 0, 617,
	366, 0, 367, 368, 369, 370, 371, 1095, 1096, 1099,
	448, 1138, 372, 373, 0, 374, 375, 376, 377, 0,
	0, 0, 261, 378, 379, 380, 382, 0, 1137, 381,
	621, 622, 0, 623, 0, 383, 384, 1139, 1097, 1140,
	385, 386, 387, 1141, 388, 0, 0, 0, 389, 390,
	391, 392, 393, 394, 0, 395, 397, 396, 0, 398,
	1133, 1142, 399, 400, 1143, 0, 401, 0, 0, 0,
	402, 403, 406, 1088, 1087, 404, 405, 407, 408, 0,
	409, 410, 412, 415, 411, 413, 414, 416, 429, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 431, 0, 430, 1144, 432, 433, 434, 439, 441,
	442, 437, 438, 440, 443, 444, 436, 1145, 435, 0,
	262, 1146, 445, 446, 0, 1098, 447, 627, 449, 450,
	0, 0, 451, 0, 0, 0, 453, 454, 455, 0,
	0, 456, 457, 628, 1147, 458, 1148, 1127, 459, 460,
	452, 461, 462, 463, 464, 465, 466, 467, 468, 0,
	469, 470, 630, 471, 472, 473, 631, 474, 475, 476,
	1128, 477, 633, 478, 479, 0, 480, 481, 0, 482,
	483, 484, 485, 486, 487, 488, 634, 489, 491, 490,
	492, 0, 493, 0, 494, 495, 496, 0, 0, 0,
	0, 497, 0, 499, 500, 501, 498, 502, 503, 504,
	505, 0, 506, 507, 508, 1149, 509, 510, 511, 512,
	635, 1186, 0, 514, 515, 521, 522, 516, 517, 523,
	524, 525, 526, 527, 0, 529, 530, 528, 531, 532,
	533, 1091, 534, 535, 518, 519, 536, 537, 1150, 538,
	539, 540, 541, 542, 543, 636, 0, 544, 0, 545,
	546, 547, 548, 520, 549, 554, 637, 550, 551, 552,
	553, 1129, 556, 0, 557, 558, 0, 555, 0, 559,
	560, 561, 562, 563, 564, 565, 343, 566, 0, 567,
	639, 640, 641, 642, 0, 576, 0, 568, 569, 570,
	1130, 571, 1131, 0, 572, 573, 574, 575, 0, 577,
	578, 0, 0, 579, 580, 581, 583, 584, 582, 585,
	1092, 586, 0, 0, 587, 588, 589, 645, 646, 647,
	0, 591, 590, 592, 648, 1016, 0, 1272, 0, 593,
	594, 649, 595, 596, 597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 1772,
	598, 0, 0, 0, 0, 273, 274, 1134, 275, 276,
	277, 278, 279, 599, 600, 0, 280, 601, 281, 602,
	0, 603, 282, 283, 284, 285, 286, 287, 0, 0,
	0, 288, 604, 605, 606, 0, 289, 290, 607, 0,
	1277, 0, 291, 292, 293, 294, 295, 296, 297, 0,
	0, 299, 300, 301, 298, 302, 0, 303, 0, 304,
	305, 306, 307, 308, 309, 0, 310, 311, 312, 1135,
	313, 314, 0, 0, 0, 0, 0, 0, 0, 315,
	316, 317, 318, 0, 319, 608, 609, 0, 323, 320,
	321, 0, 324, 322, 0, 325, 326, 327, 0, 0,
	328, 329, 330, 0, 331, 332, 0, 333, 334, 335,
	0, 336, 337, 610, 338, 339, 340, 342, 344, 341,
	345, 346, 347, 348, 611, 612, 349, 0, 260, 0,
	0, 0, 0, 0, 350, 351, 352, 613, 0, 0,
	0, 353, 0, 354, 0, 0, 1136, 355, 356, 614,
	615, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	365, 616, 0, 617, 366, 0, 367, 368, 369, 370,
	371, 618, 619, 620, 448, 1138, 372, 373, 0, 374,
	375, 376, 377, 0, 0, 0, 0, 378, 379, 380,
	382, 0, 1137, 381, 621, 622, 0, 623, 0, 383,
	384, 1139, 624, 1140, 385, 386, 387, 1141, 388, 0,
	0, 0, 389, 390, 391, 392, 393, 394, 0, 395,
	397, 396, 0, 398, 625, 1142, 399, 400, 1143, 0,
	401, 0, 0, 0, 402, 403, 406, 0, 0, 404,
	405, 407, 408, 0, 409, 410, 412, 415, 411, 413,
	414, 416, 429, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 431, 0, 430, 1144, 432,
	433, 434, 439, 441, 442, 437, 438, 440, 443, 444,
	436, 1145, 435, 0, 0, 1146, 445, 446, 0, 626,
	447, 627, 449, 450, 0, 0, 451, 0, 0, 0,
	453, 454, 455, 0, 0, 456, 457, 628, 1147, 458,
	1148, 629, 459, 460, 452, 461, 462, 463, 464, 465,
	466, 467, 468, 0, 469, 470, 630, 471, 472, 473,
	631, 474, 475, 476, 632, 477, 633, 478, 479, 0,
	480, 481, 0, 482, 483, 484, 485, 486, 487, 488,
	634, 489, 491, 490, 492, 0, 493, 0, 494, 495,
	496, 0, 0, 0, 0, 497, 0, 499, 500, 501,
	498, 502, 503, 504, 505, 0, 506, 507, 508, 1149,
	509, 510, 511, 512, 635, 513, 0, 514, 515, 521,
	522, 516, 517, 523, 524, 525, 526, 527, 222, 529,
	530, 528, 531, 532, 533, 0, 534, 535, 518, 519,
	536, 537, 1150, 538, 539, 540, 541, 542, 543, 636,
	0, 544, 0, 545, 546, 547, 548, 520, 549, 554,
	637, 550, 551, 552, 553, 638, 556, 0, 557, 558,
	0, 555, 224, 559, 560, 561, 562, 563, 564, 565,
	343, 566, 0, 567, 639, 640, 641, 642, 0, 576,
	0, 568, 569, 570, 643, 571, 644, 0, 572, 573,
	574, 575, 0, 577, 578, 0, 0, 579, 580, 581,
	583, 584, 582, 585, 0, 586, 0, 0, 587, 588,
	589, 1542, 646, 647, 0, 591, 590, 592, 648, 1539,
	0, 1272, 216, 593, 594, 649, 595, 596, 597, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 182, 598, 0, 0, 0, 0, 273,
	274, 1134, 275, 276, 277, 278, 279, 599, 600, 0,
	280, 601, 281, 602, 0, 603, 282, 283, 284, 285,
	286, 287, 0, 0, 0, 288, 604, 605, 606, 0,
	289, 290, 607, 0, 1277, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 1135, 313, 314, 0, 0, 0, 0,
	0, 0, 0, 315, 316, 317, 318, 0, 319, 608,
	609, 0, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 329, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 610, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 611, 612,
	349, 0, 260, 0, 0, 0, 0, 0, 350, 351,
	352, 613, 0, 0, 0, 353, 0, 354, 0, 0,
	1136, 355, 356, 614, 615, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 616, 0, 617, 366, 0,
	367, 368, 369, 370, 371, 618, 619, 620, 448, 1138,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	0, 378, 379, 380, 382, 0, 1137, 381, 621, 622,
	0, 623, 0, 383, 384, 1139, 624, 1140, 385, 386,
	387, 1141, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 395, 397, 396, 0, 398, 625, 1142,
	399, 400, 1143, 0, 401, 0, 0, 0, 402, 403,
	406, 0, 0, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 1144, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 1145, 435, 0, 0, 1146,
	445, 446, 0, 626, 447, 627, 449, 450, 0, 0,
	451, 0, 0, 0, 453, 454, 455, 0, 0, 456,
	457, 628, 1147, 458, 1148, 629, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 632, 477,
	633, 478, 479, 0, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 634, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 1149, 509, 510, 511, 512, 635, 513,
	0, 514, 515, 521, 522, 516, 517, 523, 524, 525,
	526, 527, 222, 529, 530, 528, 531, 532, 533, 0,
	534, 535, 518, 519, 536, 537, 1150, 538, 539, 540,
	541, 542, 543, 636, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 637, 550, 551, 552, 553, 638,
	556, 0, 557, 558, 0, 555, 224, 559, 560, 561,
	562, 563, 564, 565, 343, 566, 0, 567, 639, 640,
	641, 642, 0, 576, 0, 568, 569, 570, 643, 571,
	644, 0, 572, 573, 574, 575, 0, 577, 578, 0,
	0, 579, 580, 581, 583, 584, 582, 585, 0, 586,
	0, 0, 587, 588, 589, 1542, 646, 647, 0, 591,
	590, 592, 648, 0, 0, 0, 216, 593, 594, 649,
	595, 596, 597, 0, 0, 217, 0, 0, 0, 0,
	0, 1272, 1271, 0, 0, 0, 0, 1269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 598, 0, 0, 0, 0, 273,
	274, 1134, 275, 276, 277, 278, 279, 599, 600, 0,
	280, 601, 281, 602, 0, 603, 282, 283, 284, 285,
	286, 287, 0, 0, 0, 288, 604, 605, 606, 0,
	289, 290, 607, 0, 1277, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 1135, 313, 314, 0, 0, 0, 0,
	0, 0, 0, 315, 316, 317, 318, 0, 319, 608,
	609, 0, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 329, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 610, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 611, 612,
	349, 0, 260, 0, 0, 0, 0, 0, 350, 351,
	352, 613, 0, 0, 0, 353, 0, 354, 0, 0,
	1136, 355, 356, 614, 615, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 616, 0, 617, 366, 0,
	367, 368, 369, 370, 371, 618, 619, 620, 448, 1138,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	0, 378, 379, 380, 382, 0, 1137, 381, 621, 622,
	0, 623, 0, 383, 384, 1139, 624, 1140, 385, 386,
	387, 1141, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 395, 397, 396, 0, 398, 625, 1142,
	399, 400, 1143, 0, 401, 0, 0, 0, 402, 403,
	406, 0, 0, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 1144, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 1145, 435, 0, 0, 1146,
	445, 446, 0, 626, 447, 627, 449, 450, 0, 0,
	451, 0, 0, 0, 453, 454, 455, 0, 0, 456,
	457, 628, 1147, 458, 1148, 629, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 632, 477,
	633, 478, 479, 0, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 634, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 1149, 509, 510, 511, 512, 635, 513,
	0, 514, 515, 521, 522, 516, 517, 523, 524, 525,
	526, 527, 0, 529, 530, 528, 531, 532, 533, 0,
	534, 535, 518, 519, 536, 537, 1150, 538, 539, 540,
	541, 542, 543, 636, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 637, 550, 551, 552, 553, 638,
	556, 0, 557, 558, 0, 555, 0, 559, 560, 561,
	562, 563, 564, 565, 343, 566, 0, 567, 639, 640,
	641, 642, 0, 576, 0, 568, 569, 570, 643, 571,
	644, 0, 572, 573, 574, 575, 0, 577, 578, 0,
	0, 579, 580, 581, 583, 584, 582, 585, 0, 586,
	0, 0, 587, 588, 589, 645, 646, 647, 0, 591,
	590, 592, 648, 0, 0, 0, 0, 593, 594, 649,
	595, 596, 597, 0, 0, 0, 0, 0, 0, 0,
	0, 1272, 1271, 0, 0, 0, 0, 1269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1564, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 598, 0, 0, 0, 0, 273,
	274, 1134, 275, 276, 277, 278, 279, 599, 600, 0,
	280, 601, 281, 602, 0, 603, 282, 283, 284, 285,
	286, 287, 0, 0, 0, 288, 604, 605, 606, 0,
	289, 290, 607, 0, 1277, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 1135, 313, 314, 0, 0, 0, 0,
	0, 0, 0, 315, 316, 317, 318, 0, 319, 608,
	609, 0, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 329, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 610, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 611, 612,
	349, 0, 260, 0, 0, 0, 0, 0, 350, 351,
	352, 613, 0, 0, 0, 353, 0, 354, 0, 0,
	1136, 355, 356, 614, 615, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 616, 0, 617, 366, 0,
	367, 368, 369, 370, 371, 618, 619, 620, 448, 1138,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	0, 378, 379, 380, 382, 0, 1137, 381, 621, 622,
	0, 623, 0, 383, 384, 1139, 624, 1140, 385, 386,
	387, 1141, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 395, 397, 396, 0, 398, 625, 1142,
	399, 400, 1143, 0, 401, 0, 0, 0, 402, 403,
	406, 0, 0, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 1144, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 1145, 435, 0, 0, 1146,
	445, 446, 0, 626, 447, 627, 449, 450, 0, 0,
	451, 0, 0, 0, 453, 454, 455, 0, 0, 456,
	457, 628, 1147, 458, 1148, 629, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 632, 477,
	633, 478, 479, 0, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 634, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 1149, 509, 510, 511, 512, 635, 513,
	0, 514, 515, 521, 522, 516, 517, 523, 524, 525,
	526, 527, 0, 529, 530, 528, 531, 532, 533, 0,
	534, 535, 518, 519, 536, 537, 1150, 538, 539, 540,
	541, 542, 543, 636, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 637, 550, 551, 552, 553, 638,
	556, 0, 557, 558, 0, 555, 0, 559, 560, 561,
	562, 563, 564, 565, 343, 566, 0, 567, 639, 640,
	641, 642, 0, 576, 0, 568, 569, 570, 643, 571,
	644, 0, 572, 573, 574, 575, 0, 577, 578, 0,
	0, 579, 580, 581, 583, 584, 582, 585, 0, 586,
	0, 0, 587, 588, 589, 645, 646, 647, 0, 591,
	590, 592, 648, 0, 0, 0, 0, 593, 594, 649,
	595, 596, 597, 0, 0, 0, 0, 0, 0, 0,
	0, 1272, 2116, 0, 0, 0, 0, 2117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3402, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 598, 0, 0, 0, 0, 273,
	274, 1134, 275, 276, 277, 278, 279, 599, 600, 0,
	280, 601, 281, 602, 0, 603, 282, 283, 284, 285,
	286, 287, 0, 0, 0, 288, 604, 605, 606, 0,
	289, 290, 607, 0, 1277, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 1135, 313, 314, 0, 0, 0, 0,
	0, 0, 0, 315, 316, 317, 318, 0, 319, 608,
	609, 0, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 329, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 610, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 611, 612,
	349, 0, 260, 0, 0, 0, 0, 0, 350, 351,
	352, 613, 0, 0, 0, 353, 0, 354, 0, 0,
	1136, 355, 356, 614, 615, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 616, 0, 617, 366, 0,
	367, 368, 369, 370, 371, 618, 619, 620, 448, 1138,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	0, 378, 379, 380, 382, 0, 1137, 381, 621, 622,
	0, 623, 0, 383, 384, 1139, 624, 1140, 385, 386,
	387, 1141, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 2115, 397, 396, 0, 398, 625, 1142,
	399, 400, 1143, 0, 401, 0, 0, 0, 402, 403,
	406, 0, 0, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 1144, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 1145, 435, 0, 0, 1146,
	445, 446, 0, 626, 447, 627, 449, 450, 0, 0,
	451, 0, 0, 0, 453, 454, 455, 0, 0, 456,
	457, 628, 1147, 458, 1148, 629, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 632, 477,
	633, 478, 479, 0, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 634, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 1149, 509, 510, 511, 512, 635, 513,
	0, 514, 515, 521, 522, 516, 517, 523, 524, 525,
	526, 527, 0, 529, 530, 528, 531, 532, 533, 0,
	534, 535, 518, 519, 536, 537, 1150, 538, 539, 540,
	541, 542, 543, 636, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 637, 550, 551, 552, 553, 638,
	556, 0, 557, 558, 0, 555, 0, 559, 560, 561,
	562, 563, 564, 565, 343, 566, 0, 567, 639, 640,
	641, 642, 0, 576, 0, 568, 569, 570, 643, 571,
	644, 0, 572, 573, 574, 575, 0, 577, 578, 0,
	0, 579, 580, 581, 583, 584, 582, 585, 0, 586,
	0, 0, 587, 588, 589, 645, 646, 647, 0, 591,
	590, 592, 648, 0, 0, 0, 0, 593, 594, 649,
	595, 596, 597, 0, 0, 0, 0, 0, 0, 0,
	0, 1272, 1271, 0, 0, 0, 0, 1269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1564, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 598, 0, 0, 0, 0, 273,
	274, 1134, 275, 276, 277, 278, 279, 599, 600, 0,
	280, 601, 281, 602, 0, 603, 282, 283, 284, 285,
	286, 287, 0, 0, 0, 288, 604, 605, 606, 0,
	289, 290, 607, 0, 1277, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 1135, 313, 314, 0, 0, 0, 0,
	0, 0, 0, 315, 316, 317, 318, 0, 319, 608,
	609, 0, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 329, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 610, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 611, 612,
	349, 0, 260, 0, 0, 0, 0, 0, 350, 351,
	352, 613, 0, 0, 0, 353, 0, 354, 0, 0,
	1136, 355, 356, 614, 615, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 616, 0, 617, 366, 0,
	367, 368, 369, 370, 371, 618, 619, 620, 448, 1138,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	0, 378, 379, 380, 382, 0, 1137, 381, 621, 622,
	0, 623, 0, 383, 384, 1139, 624, 1140, 385, 386,
	387, 1141, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 395, 397, 396, 0, 398, 625, 1142,
	399, 400, 1143, 0, 401, 0, 0, 0, 402, 403,
	406, 0, 0, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 1144, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 1145, 435, 0, 0, 1146,
	445, 446, 0, 626, 447, 627, 449, 450, 0, 0,
	451, 0, 0, 0, 453, 454, 455, 0, 0, 456,
	457, 628, 1147, 458, 1148, 629, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 632, 477,
	633, 478, 479, 0, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 634, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 1149, 509, 510, 511, 512, 635, 513,
	0, 514, 515, 521, 522, 516, 517, 523, 524, 525,
	526, 527, 0, 529, 530, 528, 531, 532, 533, 0,
	534, 535, 518, 519, 536, 537, 1150, 538, 539, 540,
	541, 542, 543, 636, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 637, 550, 551, 552, 553, 638,
	556, 0, 557, 558, 0, 555, 0, 559, 560, 561,
	562, 563, 564, 565, 343, 566, 0, 567, 639, 640,
	641, 642, 0, 576, 0, 568, 569, 570, 643, 571,
	644, 0, 572, 573, 574, 575, 0, 577, 578, 0,
	0, 579, 580, 581, 583, 584, 582, 585, 0, 586,
	0, 0, 587, 588, 589, 645, 646, 647, 0, 591,
	590, 592, 648, 1192, 0, 0, 0, 593, 594, 649,
	595, 596, 597, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 1094, 1548, 0, 0,
	0, 273, 274, 1134, 275, 276, 277, 278, 279, 599,
	600, 0, 280, 601, 281, 602, 0, 603, 282, 283,
	284, 285, 286, 287, 0, 1093, 0, 288, 604, 605,
	606, 0, 289, 290, 1100, 0, 1081, 0, 291, 292,
	293, 294, 295, 296, 297, 0, 0, 299, 300, 301,
	298, 302, 0, 303, 0, 304, 305, 306, 307, 308,
	309, 0, 310, 311, 312, 1135, 313, 314, 1084, 1082,
	1083, 1090, 1086, 1085, 1089, 315, 316, 317, 318, 0,
	319, 608, 609, 0, 323, 320, 321, 0, 324, 322,
	0, 325, 326, 327, 0, 0, 328, 329, 330, 0,
	331, 332, 0, 333, 334, 335, 0, 336, 337, 610,
	338, 339, 340, 342, 344, 341, 345, 346, 347, 348,
	1125, 1126, 349, 0, 260, 0, 0, 0, 0, 0,
	350, 351, 352, 613, 0, 0, 0, 353, 0, 354,
	0, 0, 1136, 355, 356, 614, 615, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 365, 1132, 0, 617,
	366, 0, 367, 368, 369, 370, 371, 1095, 1096, 1099,
	448, 1138, 372, 373, 0, 374, 375, 376, 377, 0,
	0, 0, 261, 378, 379, 380, 382, 0, 1137, 381,
	621, 622, 0, 623, 0, 383, 384, 1139, 1097, 1140,
	385, 386, 387, 1141, 388, 0, 0, 0, 389, 390,
	391, 392, 393, 394, 0, 395, 397, 396, 0, 398,
	1133, 1142, 399, 400, 1143, 0, 401, 0, 0, 0,
	402, 403, 406, 1088, 1087, 404, 405, 407, 408, 0,
	409, 410, 412, 415, 411, 413, 414, 416, 429, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 431, 0, 430, 1144, 432, 433, 434, 439, 441,
	442, 437, 438, 440, 443, 444, 436, 1145, 435, 0,
	262, 1146, 445, 446, 0, 1098, 447, 627, 449, 450,
	0, 0, 451, 0, 0, 0, 453, 454, 455, 0,
	0, 456, 457, 628, 1147, 458, 1148, 1127, 459, 460,
	452, 461, 462, 463, 464, 465, 466, 467, 468, 0,
	469, 470, 630, 471, 472, 473, 631, 474, 475, 476,
	1128, 477, 633, 478, 479, 0, 480, 481, 0, 482,
	483, 484, 485, 486, 487, 488, 634, 489, 491, 490,
	492, 0, 493, 0, 494, 495, 496, 0, 0, 0,
	0, 497, 0, 499, 500, 501, 498, 502, 503, 504,
	505, 0, 506, 507, 508, 1149, 509, 510, 511, 512,
	635, 513, 0, 514, 515, 521, 522, 516, 517, 523,
	524, 525, 526, 527, 0, 529, 530, 528, 531, 532,
	533, 1091, 534, 535, 518, 519, 536, 537, 1150, 538,
	539, 540, 541, 542, 543, 636, 0, 544, 0, 545,
	546, 547, 548, 520, 549, 554, 637, 550, 551, 552,
	553, 1129, 556, 0, 557, 558, 0, 555, 0, 559,
	560, 561, 562, 563, 564, 565, 343, 566, 0, 567,
	639, 640, 641, 642, 0, 576, 0, 568, 569, 570,
	1130, 571, 1131, 0, 572, 573, 574, 575, 0, 577,
	578, 0, 0, 579, 580, 581, 583, 584, 582, 585,
	1092, 586, 0, 0, 587, 588, 589, 645, 646, 647,
	0, 591, 590, 592, 648, 1016, 0, 257, 0, 593,
	594, 649, 595, 596, 597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	598, 0, 0, 0, 0, 273, 274, 0, 275, 276,
	277, 278, 279, 599, 600, 0, 280, 601, 281, 602,
	0, 603, 282, 283, 284, 285, 286, 287, 0, 0,
	0, 288, 604, 605, 606, 0, 289, 290, 607, 0,
	0, 0, 291, 292, 293, 294, 295, 296, 297, 0,
	0, 299, 300, 301, 298, 302, 0, 303, 0, 304,
	305, 306, 307, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 0, 0, 0, 0, 0, 0, 0, 315,
	316, 317, 318, 0, 319, 608, 609, 0, 323, 320,
	321, 0, 324, 322, 0, 325, 326, 327, 0, 0,
	328, 329, 330, 0, 331, 332, 0, 333, 334, 335,
	0, 336, 337, 610, 338, 339, 340, 342, 344, 341,
	345, 346, 347, 348, 611, 612, 349, 0, 0, 0,
	0, 0, 0, 0, 350, 351, 352, 613, 0, 0,
	0, 353, 0, 354, 0, 0, 0, 355, 356, 614,
	615, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	365, 616, 0, 617, 366, 0, 367, 368, 369, 370,
	371, 618, 619, 620, 448, 0, 372, 373, 0, 374,
	375, 376, 377, 0, 0, 0, 0, 378, 379, 380,
	382, 0, 0, 381, 621, 622, 0, 623, 0, 383,
	384, 0, 624, 0, 385, 386, 387, 0, 388, 0,
	0, 0, 389, 390, 391, 392, 393, 394, 0, 395,
	397, 396, 0, 398, 625, 0, 399, 400, 0, 0,
	401, 0, 0, 0, 402, 403, 406, 0, 0, 404,
	405, 407, 408, 0, 409, 410, 412, 415, 411, 413,
	414, 416, 429, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 431, 0, 430, 0, 432,
	433, 434, 439, 441, 442, 437, 438, 440, 443, 444,
	436, 0, 435, 0, 0, 0, 445, 446, 0, 626,
	447, 627, 449, 450, 0, 0, 451, 0, 0, 0,
	453, 454, 455, 0, 0, 456, 457, 628, 0, 458,
	0, 629, 459, 460, 452, 461, 462, 463, 464, 465,
	466, 467, 468, 0, 469, 470, 630, 471, 472, 473,
	631, 474, 475, 476, 632, 477, 633, 478, 479, 0,
	480, 481, 0, 482, 483, 484, 485, 486, 487, 488,
	634, 489, 491, 490, 492, 0, 493, 0, 494, 495,
	496, 0, 0, 0, 0, 497, 0, 499, 500, 501,
	498, 502, 503, 504, 505, 0, 506, 507, 508, 0,
	509, 510, 511, 512, 635, 513, 0, 514, 515, 521,
	522, 516, 517, 523, 524, 525, 526, 527, 222, 529,
	530, 528, 531, 532, 533, 0, 534, 535, 518, 519,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 636,
	0, 544, 0, 545, 546, 547, 548, 520, 549, 554,
	637, 550, 551, 552, 553, 638, 556, 0, 557, 558,
	0, 555, 224, 559, 560, 561, 562, 563, 564, 565,
	343, 566, 0, 567, 639, 640, 641, 642, 0, 576,
	0, 568, 569, 570, 643, 571, 644, 0, 572, 573,
	574, 575, 0, 577, 578, 0, 0, 579, 580, 581,
	583, 584, 582, 585, 0, 586, 0, 0, 587, 588,
	589, 1542, 646, 647, 0, 591, 590, 592, 648, 257,
	0, 0, 216, 593, 594, 649, 595, 596, 597, 0,
	0, 217, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 598, 182, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 599, 600, 0, 280, 601,
	281, 602, 0, 603, 282, 283, 284, 285, 286, 287,
	0, 0, 0, 288, 604, 605, 606, 0, 289, 290,
	607, 0, 0, 0, 291, 292, 293, 294, 295, 296,
	297, 0, 0, 299, 300, 301, 298, 302, 0, 303,
	0, 304, 305, 306, 307, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 0, 0, 0, 0, 0, 0,
	0, 315, 316, 317, 318, 0, 319, 608, 609, 0,
	323, 320, 321, 0, 324, 322, 0, 325, 326, 327,
	0, 0, 328, 329, 330, 0, 331, 332, 0, 333,
	334, 335, 0, 336, 337, 610, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 611, 612, 349, 0,
	260, 0, 0, 0, 0, 0, 350, 351, 352, 613,
	0, 0, 0, 353, 0, 354, 0, 0, 0, 355,
	356, 614, 615, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 365, 616, 0, 617, 366, 0, 367, 368,
	369, 370, 371, 618, 619, 620, 448, 0, 372, 373,
	0, 374, 375, 376, 377, 0, 0, 0, 261, 378,
	379, 380, 382, 0, 0, 381, 621, 622, 0, 623,
	0, 383, 384, 0, 624, 0, 385, 386, 387, 0,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	0, 395, 397, 396, 0, 398, 625, 0, 399, 400,
	0, 0, 401, 0, 0, 0, 402, 403, 406, 0,
	0, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	0, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 0, 435, 0, 262, 0, 445, 446,
	0, 626, 447, 627, 449, 450, 0, 0, 451, 0,
	0, 0, 453, 454, 455, 0, 0, 456, 457, 628,
	0, 458, 0, 629, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 0, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 632, 477, 633, 478,
	479, 0, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 634, 489, 491, 490, 492, 0, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 0, 506, 507,
	508, 0, 509, 510, 511, 512, 635, 513, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	0, 529, 530, 528, 531, 532, 533, 0, 534, 535,
	518, 519, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 636, 0, 544, 0, 545, 546, 547, 548, 520,
	549, 554, 637, 550, 551, 552, 553, 638, 556, 0,
	557, 558, 0, 555, 0, 559, 560, 561, 562, 563,
	564, 565, 343, 566, 0, 567, 639, 640, 641, 642,
	0, 576, 0, 568, 569, 570, 643, 571, 644, 0,
	572, 573, 574, 575, 0, 577, 578, 0, 0, 579,
	580, 581, 583, 584, 582, 585, 0, 586, 0, 0,
	587, 588, 589, 645, 646, 647, 0, 591, 590, 592,
	648, 257, 2868, 0, 0, 593, 594, 649, 595, 596,
	597, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 598, 1887, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 599, 600, 0,
	280, 601, 281, 602, 0, 603, 282, 283, 284, 285,
	286, 287, 0, 0, 0, 288, 604, 605, 606, 0,
	289, 290, 607, 0, 0, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 0, 0, 0, 0,
	0, 0, 0, 315, 316, 317, 318, 0, 319, 608,
	609, 0, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 329, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 610, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 611, 612,
	349, 0, 0, 0, 0, 0, 0, 0, 350, 351,
	352, 613, 0, 0, 0, 353, 0, 354, 0, 0,
	0, 355, 356, 614, 615, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 616, 0, 617, 366, 0,
	367, 368, 369, 370, 371, 618, 619, 620, 448, 0,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	0, 378, 379, 380, 382, 0, 0, 381, 621, 622,
	0, 623, 0, 383, 384, 0, 624, 0, 385, 386,
	387, 0, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 395, 397, 396, 0, 398, 625, 0,
	399, 400, 0, 0, 401, 0, 0, 0, 402, 403,
	406, 0, 0, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 0, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 0, 435, 0, 0, 0,
	445, 446, 0, 626, 447, 627, 449, 450, 0, 0,
	451, 0, 0, 0, 453, 454, 455, 0, 0, 456,
	457, 628, 0, 458, 0, 629, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 632, 477,
	633, 478, 479, 0, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 634, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 0, 509, 510, 511, 512, 635, 513,
	0, 514, 515, 521, 522, 516, 517, 523, 524, 525,
	526, 527, 0, 529, 530, 528, 531, 532, 533, 0,
	534, 535, 518, 519, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 636, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 637, 550, 551, 552, 553, 638,
	556, 0, 557, 558, 0, 555, 0, 559, 560, 561,
	562, 563, 564, 565, 343, 566, 0, 567, 639, 640,
	641, 642, 0, 576, 0, 568, 569, 570, 643, 571,
	644, 0, 572, 573, 574, 575, 0, 577, 578, 0,
	0, 579, 580, 581, 583, 584, 582, 585, 0, 586,
	0, 0, 587, 588, 589, 645, 646, 647, 0, 591,
	590, 592, 648, 257, 0, 0, 0, 593, 594, 649,
	595, 596, 597, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 598, 4523, 0, 0,
	0, 273, 274, 0, 275, 276, 277, 278, 279, 599,
	600, 0, 280, 601, 281, 602, 0, 603, 282, 283,
	284, 285, 286, 287, 0, 0, 0, 288, 604, 605,
	606, 0, 289, 290, 607, 0, 0, 0, 291, 292,
	293, 294, 295, 296, 297, 0, 0, 299, 300, 301,
	298, 302, 0, 303, 0, 304, 305, 306, 307, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 0, 0,
	0, 0, 0, 0, 0, 315, 316, 317, 318, 0,
	319, 608, 609, 0, 323, 320, 321, 0, 324, 322,
	0, 325, 326, 327, 0, 0, 328, 329, 330, 0,
	331, 332, 0, 333, 334, 335, 0, 336, 337, 610,
	338, 339, 340, 342, 344, 341, 345, 346, 347, 348,
	611, 612, 349, 0, 260, 0, 0, 0, 0, 0,
	350, 351, 352, 613, 0, 0, 0, 353, 0, 354,
	0, 0, 0, 355, 356, 614, 615, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 365, 616, 0, 617,
	366, 0, 367, 368, 369, 370, 371, 618, 619, 620,
	448, 0, 372, 373, 0, 374, 375, 376, 377, 0,
	0, 0, 261, 378, 379, 380, 382, 0, 0, 381,
	621, 622, 0, 623, 0, 383, 384, 0, 624, 0,
	385, 386, 387, 0, 388, 0, 0, 0, 389, 390,
	391, 392, 393, 394, 0, 395, 397, 396, 0, 398,
	625, 0, 399, 400, 0, 0, 401, 0, 0, 0,
	402, 403, 406, 0, 0, 404, 405, 407, 408, 0,
	409, 410, 412, 415, 411, 413, 414, 416, 429, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 431, 0, 430, 0, 432, 433, 434, 439, 441,
	442, 437, 438, 440, 443, 444, 436, 0, 435, 0,
	262, 0, 445, 446, 0, 626, 447, 627, 449, 450,
	0, 0, 451, 0, 0, 0, 453, 454, 455, 0,
	0, 456, 457, 628, 0, 458, 0, 629, 459, 460,
	452, 461, 462, 463, 464, 465, 466, 467, 468, 0,
	469, 470, 630, 471, 472, 473, 631, 474, 475, 476,
	632, 477, 633, 478, 479, 0, 480, 481, 0, 482,
	483, 484, 485, 486, 487, 488, 634, 489, 491, 490,
	492, 0, 493, 0, 494, 495, 496, 0, 0, 0,
	0, 497, 0, 499, 500, 501, 498, 502, 503, 504,
	505, 0, 506, 507, 508, 0, 509, 510, 511, 512,
	635, 513, 0, 514, 515, 521, 522, 516, 517, 523,
	524, 525, 526, 527, 0, 529, 530, 528, 531, 532,
	533, 0, 534, 535, 518, 519, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 636, 0, 544, 0, 545,
	546, 547, 548, 520, 549, 554, 637, 550, 551, 552,
	553, 638, 556, 0, 557, 558, 0, 555, 0, 559,
	560, 561, 562, 563, 564, 565, 343, 566, 0, 567,
	639, 640, 641, 642, 0, 576, 0, 568, 569, 570,
	643, 571, 644, 0, 572, 573, 574, 575, 0, 577,
	578, 0, 0, 579, 580, 581, 583, 584, 582, 585,
	0, 586, 0, 0, 587, 588, 589, 645, 646, 647,
	257, 591, 590, 592, 648, 0, 0, 0, 0, 593,
	594, 649, 595, 596, 597, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 598, 0, 0, 0, 3354, 273, 274,
	0, 275, 276, 277, 278, 279, 599, 600, 0, 280,
	601, 281, 602, 0, 603, 282, 283, 284, 285, 286,
	287, 0, 0, 0, 288, 604, 605, 606, 0, 289,
	290, 607, 0, 0, 0, 291, 292, 293, 294, 295,
	296, 297, 0, 0, 299, 300, 301, 298, 302, 0,
	303, 0, 304, 305, 306, 307, 308, 309, 0, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	0, 0, 315, 316, 317, 318, 0, 319, 608, 609,
	0, 323, 320, 321, 0, 324, 322, 0, 325, 326,
	327, 0, 0, 328, 329, 330, 0, 331, 332, 0,
	333, 334, 335, 0, 336, 337, 610, 338, 339, 340,
	342, 344, 341, 345, 346, 347, 348, 611, 612, 349,
	0, 260, 0, 0, 0, 0, 0, 350, 351, 352,
	613, 0, 0, 0, 353, 0, 354, 0, 0, 0,
	355, 356, 614, 615, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 365, 616, 0, 617, 366, 0, 367,
	368, 369, 370, 371, 618, 619, 620, 448, 0, 372,
	373, 0, 374, 375, 376, 377, 0, 0, 0, 261,
	378, 379, 380, 382, 0, 0, 381, 621, 622, 0,
	623, 0, 383, 384, 0, 624, 0, 385, 386, 387,
	0, 388, 0, 0, 0, 389, 390, 391, 392, 393,
	394, 0, 395, 397, 396, 0, 398, 625, 0, 399,
	400, 0, 0, 401, 0, 0, 0, 402, 403, 406,
	0, 0, 404, 405, 407, 408, 0, 409, 410, 412,
	415, 411, 413, 414, 416, 429, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 431, 0,
	430, 0, 432, 433, 434, 439, 441, 442, 437, 438,
	440, 443, 444, 436, 0, 435, 0, 262, 0, 445,
	446, 0, 626, 447, 627, 449, 450, 0, 0, 451,
	0, 0, 0, 453, 454, 455, 0, 0, 456, 457,
	628, 0, 458, 0, 629, 459, 460, 452, 461, 462,
	463, 464, 465, 466, 467, 468, 0, 469, 470, 630,
	471, 472, 473, 631, 474, 475, 476, 632, 477, 633,
	478, 479, 0, 480, 481, 0, 482, 483, 484, 485,
	486, 487, 488, 634, 489, 491, 490, 492, 0, 493,
	0, 494, 495, 496, 0, 0, 0, 0, 497, 0,
	499, 500, 501, 498, 502, 503, 504, 505, 0, 506,
	507, 508, 0, 509, 510, 511, 512, 635, 513, 0,
	514, 515, 521, 522, 516, 517, 523, 524, 525, 526,
	527, 0, 529, 530, 528, 531, 532, 533, 0, 534,
	535, 518, 519, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 636, 0, 544, 0, 545, 546, 547, 548,
	520, 549, 554, 637, 550, 551, 552, 553, 638, 556,
	0, 557, 558, 0, 555, 0, 559, 560, 561, 562,
	563, 564, 565, 343, 566, 0, 567, 639, 640, 641,
	642, 0, 576, 0, 568, 569, 570, 643, 571, 644,
	0, 572, 573, 574, 575, 0, 577, 578, 0, 0,
	579, 580, 581, 583, 584, 582, 585, 0, 586, 0,
	0, 587, 588, 589, 645, 646, 647, 257, 591, 590,
	592, 648, 0, 0, 0, 0, 593, 594, 649, 595,
	596, 597, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	598, 0, 0, 0, 1536, 273, 274, 0, 275, 276,
	277, 278, 279, 599, 600, 0, 280, 601, 281, 602,
	0, 603, 282, 283, 284, 285, 286, 287, 0, 0,
	0, 288, 604, 605, 606, 0, 289, 290, 607, 0,
	0, 0, 291, 292, 293, 294, 295, 296, 297, 0,
	0, 299, 300, 301, 298, 302, 0, 303, 0, 304,
	305, 306, 307, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 0, 0, 0, 0, 0, 0, 0, 315,
	316, 317, 318, 0, 319, 608, 609, 0, 323, 320,
	321, 0, 324, 322, 0, 325, 326, 327, 0, 0,
	328, 329, 330, 0, 331, 332, 0, 333, 334, 335,
	0, 336, 337, 610, 338, 339, 340, 342, 344, 341,
	345, 346, 347, 348, 611, 612, 349, 0, 0, 0,
	0, 0, 0, 0, 350, 351, 352, 613, 0, 0,
	0, 353, 0, 354, 0, 0, 0, 355, 356, 614,
	615, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	365, 616, 0, 617, 366, 0, 367, 368, 369, 370,
	371, 618, 619, 620, 448, 0, 372, 373, 0, 374,
	375, 376, 377, 0, 0, 0, 0, 378, 379, 380,
	382, 0, 0, 381, 621, 622, 0, 623, 0, 383,
	384, 0, 624, 0, 385, 386, 387, 0, 388, 0,
	0, 0, 389, 390, 391, 392, 393, 394, 0, 395,
	397, 396, 0, 398, 625, 0, 399, 400, 0, 0,
	401, 0, 0, 0, 402, 403, 406, 0, 0, 404,
	405, 407, 408, 0, 409, 410, 412, 415, 411, 413,
	414, 416, 429, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 431, 0, 430, 0, 432,
	433, 434, 439, 441, 442, 437, 438, 440, 443, 444,
	436, 0, 435, 0, 0, 0, 445, 446, 0, 626,
	447, 627, 449, 450, 0, 0, 451, 0, 0, 0,
	453, 454, 455, 0, 0, 456, 457, 628, 0, 458,
	0, 629, 459, 460, 452, 461, 462, 463, 464, 465,
	466, 467, 468, 0, 469, 470, 630, 471, 472, 473,
	631, 474, 475, 476, 632, 477, 633, 478, 479, 0,
	480, 481, 0, 482, 483, 484, 485, 486, 487, 488,
	634, 489, 491, 490, 492, 0, 493, 0, 494, 495,
	496, 0, 0, 0, 0, 497, 0, 499, 500, 501,
	498, 502, 503, 504, 505, 0, 506, 507, 508, 0,
	509, 510, 511, 512, 635, 513, 0, 514, 515, 521,
	522, 516, 517, 523, 524, 525, 526, 527, 0, 529,
	530, 528, 531, 532, 533, 0, 534, 535, 518, 519,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 636,
	0, 544, 0, 545, 546, 547, 548, 520, 549, 554,
	637, 550, 551, 552, 553, 638, 556, 0, 557, 558,
	0, 555, 0, 559, 560, 561, 562, 563, 564, 565,
	343, 566, 0, 567, 639, 640, 641, 642, 0, 576,
	0, 568, 569, 570, 643, 571, 644, 0, 572, 573,
	574, 575, 0, 577, 578, 0, 0, 579, 580, 581,
	583, 584, 582, 585, 0, 586, 0, 0, 587, 588,
	589, 645, 646, 647, 0, 591, 590, 592, 648, 257,
	0, 0, 0, 593, 594, 649, 595, 596, 597, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 598, 2856, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 599, 600, 0, 280, 601,
	281, 602, 0, 603, 282, 283, 284, 285, 286, 287,
	0, 0, 0, 288, 604, 605, 606, 0, 289, 290,
	607, 0, 0, 0, 291, 292, 293, 294, 295, 296,
	297, 0, 0, 299, 300, 301, 298, 302, 0, 303,
	0, 304, 305, 306, 307, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 0, 0, 0, 0, 0, 0,
	0, 315, 316, 317, 318, 0, 319, 608, 609, 0,
	323, 320, 321, 0, 324, 322, 0, 325, 326, 327,
	0, 0, 328, 329, 330, 0, 331, 332, 0, 333,
	334, 335, 0, 336, 337, 610, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 611, 612, 349, 0,
	0, 0, 0, 0, 0, 0, 350, 351, 352, 613,
	0, 0, 0, 353, 0, 354, 0, 0, 0, 355,
	356, 614, 615, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 365, 616, 0, 617, 366, 0, 367, 368,
	369, 370, 371, 618, 619, 620, 448, 0, 372, 373,
	0, 374, 375, 376, 377, 0, 0, 0, 0, 378,
	379, 380, 382, 0, 0, 381, 621, 622, 0, 623,
	0, 383, 384, 0, 624, 0, 385, 386, 387, 0,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	0, 395, 397, 396, 0, 398, 625, 0, 399, 400,
	0, 0, 401, 0, 0, 0, 402, 403, 406, 0,
	0, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	0, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 0, 435, 0, 0, 0, 445, 446,
	0, 626, 447, 627, 449, 450, 0, 0, 451, 0,
	0, 0, 453, 454, 455, 0, 0, 456, 457, 628,
	0, 458, 0, 629, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 0, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 632, 477, 633, 478,
	479, 0, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 634, 489, 491, 490, 492, 0, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 0, 506, 507,
	508, 0, 509, 510, 511, 512, 635, 513, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	0, 529, 530, 528, 531, 532, 533, 0, 534, 535,
	518, 519, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 636, 0, 544, 0, 545, 546, 547, 548, 520,
	549, 554, 637, 550, 551, 552, 553, 638, 556, 0,
	557, 558, 0, 555, 0, 559, 560, 561, 562, 563,
	564, 565, 343, 566, 0, 567, 639, 640, 641, 642,
	0, 576, 0, 568, 569, 570, 643, 571, 644, 0,
	572, 573, 574, 575, 0, 577, 578, 0, 0, 579,
	580, 581, 583, 584, 582, 585, 0, 586, 0, 0,
	587, 588, 589, 645, 646, 647, 0, 591, 590, 592,
	648, 257, 0, 0, 0, 593, 594, 649, 595, 596,
	597, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 598, 3504, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 599, 600, 0,
	280, 601, 281, 602, 0, 603, 282, 283, 284, 285,
	286, 287, 0, 0, 0, 288, 604, 605, 606, 0,
	289, 290, 607, 0, 0, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 0, 0, 0, 0,
	0, 0, 0, 315, 316, 317, 318, 0, 319, 608,
	609, 0, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 329, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 610, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 611, 612,
	349, 0, 0, 0, 0, 0, 0, 0, 350, 351,
	352, 613, 0, 0, 0, 353, 0, 354, 0, 0,
	0, 355, 356, 614, 615, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 616, 0, 617, 366, 0,
	367, 368, 369, 370, 371, 618, 619, 620, 448, 0,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	0, 378, 379, 380, 382, 0, 0, 381, 621, 622,
	0, 623, 0, 383, 384, 0, 624, 0, 385, 386,
	387, 0, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 395, 397, 396, 0, 398, 625, 0,
	399, 400, 0, 0, 401, 0, 0, 0, 402, 403,
	406, 0, 0, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 0, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 0, 435, 0, 0, 0,
	445, 446, 0, 626, 447, 627, 449, 450, 0, 0,
	451, 0, 0, 0, 453, 454, 455, 0, 0, 456,
	457, 628, 0, 458, 0, 629, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 632, 477,
	633, 478, 479, 0, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 634, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 0, 509, 510, 511, 512, 635, 513,
	0, 514, 515, 521, 522, 516, 517, 523, 524, 525,
	526, 527, 0, 529, 530, 528, 531, 532, 533, 0,
	534, 535, 518, 519, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 636, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 637, 550, 551, 552, 553, 638,
	556, 0, 557, 558, 0, 555, 0, 559, 560, 561,
	562, 563, 564, 565, 343, 566, 0, 567, 639, 640,
	641, 642, 0, 576, 0, 568, 569, 570, 643, 571,
	644, 0, 572, 573, 574, 575, 0, 577, 578, 0,
	0, 579, 580, 581, 583, 584, 582, 585, 0, 586,
	0, 0, 587, 588, 589, 645, 646, 647, 0, 591,
	590, 592, 648, 860, 0, 768, 0, 593, 594, 649,
	595, 596, 597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 2190, 598, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 599, 600, 0, 280, 601, 281, 602, 0, 603,
	282, 283, 284, 285, 286, 287, 0, 0, 0, 288,
	604, 605, 606, 0, 289, 290, 607, 0, 0, 0,
	291, 292, 293, 294, 295, 296, 297, 0, 0, 299,
	300, 301, 298, 302, 0, 303, 0, 304, 305, 306,
	307, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	0, 0, 0, 0, 0, 0, 0, 315, 316, 775,
	318, 0, 319, 608, 609, 0, 323, 320, 321, 0,
	324, 322, 0, 325, 326, 327, 0, 0, 328, 329,
	330, 0, 331, 332, 0, 333, 334, 335, 0, 336,
	337, 610, 338, 339, 340, 342, 344, 341, 345, 346,
	347, 348, 611, 612, 349, 0, 260, 0, 0, 0,
	0, 0, 350, 351, 352, 613, 0, 0, 0, 353,
	0, 354, 0, 858, 0, 355, 356, 614, 615, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 365, 616,
	0, 617, 366, 0, 367, 368, 369, 370, 371, 618,
	619, 620, 448, 0, 372, 373, 0, 374, 375, 376,
	377, 0, 0, 0, 261, 378, 379, 380, 382, 0,
	0, 381, 621, 622, 0, 623, 0, 383, 384, 0,
	624, 0, 385, 386, 387, 0, 388, 0, 0, 0,
	389, 390, 391, 392, 393, 394, 0, 395, 397, 396,
	0, 398, 625, 0, 399, 400, 0, 0, 401, 0,
	0, 0, 402, 403, 406, 0, 0, 404, 405, 407,
	408, 0, 409, 410, 412, 415, 411, 413, 414, 416,
	429, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 431, 0, 430, 0, 432, 433, 434,
	439, 441, 442, 437, 438, 440, 443, 444, 436, 0,
	435, 0, 262, 0, 445, 446, 0, 626, 447, 627,
	449, 450, 0, 0, 451, 0, 0, 0, 453, 454,
	455, 0, 0, 456, 457, 628, 0, 458, 0, 629,
	459, 460, 452, 461, 462, 463, 464, 465, 466, 467,
	468, 0, 469, 470, 630, 471, 472, 473, 631, 474,
	475, 476, 632, 477, 633, 478, 479, 0, 480, 481,
	0, 482, 483, 484, 485, 486, 487, 488, 634, 489,
	491, 490, 492, 0, 493, 0, 494, 495, 496, 0,
	0, 0, 0, 497, 0, 499, 500, 501, 498, 502,
	503, 504, 505, 0, 506, 507, 508, 0, 509, 510,
	511, 512, 635, 513, 0, 514, 515, 521, 522, 516,
	517, 523, 524, 525, 526, 527, 0, 529, 530, 528,
	531, 532, 533, 0, 534, 535, 518, 519, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 636, 0, 544,
	0, 545, 546, 547, 548, 520, 549, 554, 637, 550,
	551, 552, 553, 638, 556, 0, 557, 558, 0, 555,
	773, 559, 560, 561, 562, 563, 774, 565, 343, 566,
	0, 567, 639, 640, 641, 642, 0, 576, 0, 568,
	569, 570, 643, 571, 644, 0, 572, 573, 574, 575,
	0, 577, 578, 0, 0, 579, 580, 581, 583, 584,
	582, 585, 0, 586, 0, 0, 587, 588, 589, 645,
	646, 647, 0, 591, 590, 592, 648, 766, 0, 768,
	0, 593, 594, 649, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 778, 271, 272, 0, 0, 0,
	0, 0, 598, 0, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 599, 600, 0, 280, 601,
	281, 602, 0, 603, 282, 283, 284, 285, 286, 287,
	0, 0, 0, 288, 604, 605, 606, 0, 289, 290,
	607, 0, 0, 0, 291, 292, 293, 294, 295, 296,
	297, 0, 0, 299, 300, 301, 298, 302, 0, 303,
	0, 304, 305, 306, 307, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 0, 0, 0, 0, 0, 0,
	0, 315, 316, 775, 318, 0, 319, 608, 609, 0,
	323, 320, 321, 0, 324, 322, 0, 325, 326, 327,
	0, 0, 328, 329, 330, 0, 331, 332, 0, 333,
	334, 335, 0, 336, 337, 610, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 611, 612, 349, 0,
	260, 0, 0, 0, 0, 0, 350, 351, 352, 613,
	0, 0, 0, 353, 0, 354, 0, 0, 0, 355,
	356, 614, 615, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 365, 616, 0, 617, 366, 0, 367, 368,
	369, 370, 371, 618, 619, 620, 448, 0, 372, 373,
	0, 374, 375, 376, 377, 0, 0, 0, 261, 378,
	379, 380, 382, 0, 0, 381, 621, 622, 0, 623,
	0, 383, 384, 0, 624, 0, 385, 386, 387, 0,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	0, 395, 397, 396, 0, 398, 625, 0, 399, 400,
	0, 0, 401, 0, 0, 0, 402, 403, 406, 0,
	0, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	0, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 0, 435, 0, 262, 0, 445, 446,
	0, 626, 447, 627, 449, 450, 0, 0, 451, 0,
	0, 0, 453, 454, 455, 0, 0, 456, 457, 628,
	0, 458, 0, 629, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 0, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 632, 477, 633, 478,
	479, 0, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 634, 489, 491, 490, 492, 0, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 0, 506, 507,
	508, 0, 509, 510, 511, 512, 635, 513, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	0, 529, 530, 528, 531, 532, 533, 0, 534, 535,
	518, 519, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 636, 0, 544, 0, 545, 546, 547, 548, 520,
	549, 554, 637, 550, 551, 552, 553, 638, 556, 0,
	557, 558, 0, 555, 773, 559, 560, 561, 562, 563,
	774, 565, 343, 566, 0, 567, 639, 640, 641, 642,
	0, 576, 0, 568, 569, 570, 643, 571, 644, 0,
	572, 573, 574, 575, 0, 577, 578, 0, 0, 579,
	580, 581, 583, 584, 582, 585, 0, 586, 0, 0,
	587, 588, 589, 645, 646, 647, 1924, 591, 590, 592,
	648, 0, 0, 0, 0, 593, 594, 649, 595, 596,
	597, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 778, 0,
	0, 0, 0, 0, 273, 274, 1134, 275, 276, 277,
	278, 279, 0, 1930, 0, 280, 1920, 281, 1936, 0,
	1943, 282, 283, 284, 285, 286, 287, 0, 0, 0,
	288, 1946, 1947, 0, 0, 289, 290, 0, 0, 1277,
	0, 291, 292, 293, 294, 295, 296, 297, 0, 0,
	299, 300, 301, 298, 302, 0, 303, 0, 304, 305,
	306, 307, 308, 309, 0, 310, 311, 312, 1135, 313,
	314, 0, 0, 0, 0, 0, 0, 0, 315, 316,
	317, 318, 1117, 319, 1934, 1933, 0, 323, 320, 321,
	0, 324, 322, 0, 325, 326, 327, 0, 0, 328,
	1102, 330, 0, 331, 332, 0, 333, 334, 335, 0,
	336, 337, 0, 338, 339, 340, 342, 344, 341, 345,
	346, 347, 348, 0, 0, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 1932, 0, 0, 0,
	353, 0, 354, 0, 0, 1136, 355, 356, 1941, 1942,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 365,
	0, 0, 0, 366, 0, 367, 368, 369, 370, 371,
	0, 0, 0, 448, 1138, 372, 373, 0, 374, 375,
	376, 377, 0, 0, 0, 0, 378, 379, 380, 382,
	0, 1137, 381, 1927, 1928, 0, 1923, 0, 383, 384,
	1139, 0, 1140, 385, 386, 387, 1141, 388, 0, 0,
	0, 389, 390, 391, 392, 393, 394, 0, 395, 397,
	396, 0, 398, 0, 1142, 399, 400, 1143, 0, 401,
	0, 0, 0, 402, 403, 406, 0, 0, 404, 405,
	407, 408, 0, 409, 410, 412, 415, 411, 413, 414,
	416, 429, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 431, 0, 430, 1144, 432, 433,
	434, 439, 441, 442, 437, 438, 440, 443, 444, 436,
	1145, 435, 0, 0, 1146, 445, 446, 0, 0, 447,
	1935, 449, 450, 0, 0, 451, 0, 0, 0, 453,
	454, 455, 0, 0, 456, 457, 0, 1147, 458, 1148,
	0, 459, 460, 452, 461, 462, 463, 464, 465, 466,
	467, 468, 0, 469, 470, 1917, 471, 472, 473, 1918,
	474, 475, 476, 0, 477, 0, 478, 479, 0, 480,
	481, 0, 482, 483, 484, 485, 486, 487, 488, 1931,
	489, 491, 490, 492, 0, 493, 0, 494, 495, 496,
	0, 0, 0, 0, 497, 0, 499, 500, 501, 498,
	502, 503, 504, 505, 0, 506, 507, 508, 1149, 509,
	510, 511, 512, 0, 513, 0, 514, 515, 521, 522,
	516, 517, 523, 524, 525, 526, 527, 0, 529, 530,
	528, 531, 532, 533, 0, 534, 535, 518, 519, 536,
	537, 1150, 538, 539, 540, 541, 542, 543, 1929, 0,
	544, 0, 545, 546, 547, 548, 520, 549, 554, 1945,
	550, 551, 552, 553, 0, 556, 0, 557, 558, 0,
	555, 0, 559, 560, 561, 562, 563, 564, 565, 343,
	566, 0, 567, 1937, 1938, 1939, 1940, 0, 576, 0,
	568, 569, 570, 0, 571, 0, 0, 572, 573, 574,
	575, 0, 577, 578, 0, 0, 579, 580, 581, 583,
	584, 582, 585, 0, 586, 0, 0, 587, 588, 589,
	0, 1921, 1944, 0, 591, 590, 592, 0, 0, 768,
	0, 0, 593, 594, 0, 595, 596, 597, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 598, 0, 0, 0, 1911, 273, 274, 0,
	275, 276, 277, 278, 279, 599, 600, 0, 280, 601,
	281, 602, 0, 603, 282, 283, 284, 285, 286, 287,
	0, 0, 0, 288, 604, 605, 606, 0, 289, 290,
	607, 0, 0, 0, 291, 292, 293, 294, 295, 296,
	297, 0, 0, 299, 300, 301, 298, 302, 0, 303,
	0, 304, 305, 306, 307, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 0, 0, 0, 0, 0, 0,
	0, 315, 316, 775, 318, 0, 319, 608, 609, 0,
	323, 320, 321, 0, 324, 322, 0, 325, 326, 327,
	0, 0, 328, 329, 330, 0, 331, 332, 0, 333,
	334, 335, 0, 336, 337, 610, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 611, 612, 349, 0,
	260, 0, 0, 0, 0, 0, 350, 351, 352, 613,
	0, 0, 0, 353, 0, 354, 0, 0, 0, 355,
	356, 614, 615, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 365, 616, 0, 617, 366, 0, 367, 368,
	369, 370, 371, 618, 619, 620, 448, 0, 372, 373,
	0, 374, 375, 376, 377, 0, 0, 0, 261, 378,
	379, 380, 382, 0, 0, 381, 621, 622, 0, 623,
	0, 383, 384, 0, 624, 0, 385, 386, 387, 0,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	0, 395, 397, 396, 0, 398, 625, 0, 399, 400,
	0, 0, 401, 0, 0, 0, 402, 403, 406, 0,
	0, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	0, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 0, 435, 0, 262, 0, 445, 446,
	0, 626, 447, 627, 449, 450, 0, 0, 451, 0,
	0, 0, 453, 454, 455, 0, 0, 456, 457, 628,
	0, 458, 0, 629, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 0, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 632, 477, 633, 478,
	479, 0, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 634, 489, 491, 490, 492, 0, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 0, 506, 507,
	508, 0, 509, 510, 511, 512, 635, 513, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	0, 529, 530, 528, 531, 532, 533, 0, 534, 535,
	518, 519, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 636, 0, 544, 0, 545, 546, 547, 548, 520,
	549, 554, 637, 550, 551, 552, 553, 638, 556, 0,
	557, 558, 0, 555, 773, 559, 560, 561, 562, 563,
	774, 565, 343, 566, 0, 567, 639, 640, 641, 642,
	0, 576, 0, 568, 569, 570, 643, 571, 644, 0,
	572, 573, 574, 575, 0, 577, 578, 0, 0, 579,
	580, 581, 583, 584, 582, 585, 0, 586, 0, 0,
	587, 588, 589, 645, 646, 647, 768, 591, 590, 592,
	648, 0, 0, 0, 0, 593, 594, 649, 595, 596,
	597, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 778, 598,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 599, 600, 0, 280, 601, 281, 602, 0,
	603, 282, 283, 284, 285, 286, 287, 0, 0, 0,
	288, 604, 605, 606, 0, 289, 290, 607, 0, 0,
	0, 291, 292, 293, 294, 295, 296, 297, 0, 0,
	299, 300, 301, 298, 302, 0, 303, 0, 304, 305,
	306, 307, 308, 309, 0, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 0, 0, 315, 316,
	775, 318, 0, 319, 608, 609, 0, 323, 320, 321,
	0, 324, 322, 0, 325, 326, 327, 0, 0, 328,
	329, 330, 0, 331, 332, 0, 333, 334, 335, 0,
	336, 337, 610, 338, 339, 340, 342, 344, 341, 345,
	346, 347, 348, 611, 612, 349, 0, 260, 0, 0,
	0, 0, 0, 350, 351, 352, 613, 0, 0, 0,
	353, 0, 354, 0, 0, 0, 355, 356, 614, 615,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 365,
	616, 0, 617, 366, 0, 367, 368, 369, 370, 371,
	618, 619, 620, 448, 0, 372, 373, 0, 374, 375,
	376, 377, 0, 0, 0, 261, 378, 379, 380, 382,
	0, 0, 381, 621, 622, 0, 623, 0, 383, 384,
	0, 624, 0, 385, 386, 387, 0, 388, 0, 0,
	0, 389, 390, 391, 392, 393, 394, 0, 395, 397,
	396, 0, 398, 625, 0, 399, 400, 0, 0, 401,
	0, 0, 0, 402, 403, 406, 0, 0, 404, 405,
	407, 408, 0, 409, 410, 412, 415, 411, 413, 414,
	416, 429, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 431, 0, 430, 0, 432, 433,
	434, 439, 441, 442, 437, 438, 440, 443, 444, 436,
	0, 435, 0, 262, 0, 445, 446, 0, 626, 447,
	627, 449, 450, 0, 0, 451, 0, 0, 0, 453,
	454, 455, 0, 0, 456, 457, 628, 0, 458, 0,
	629, 459, 460, 452, 461, 462, 463, 464, 465, 466,
	467, 468, 0, 469, 470, 630, 471, 472, 473, 631,
	474, 475, 476, 632, 477, 633, 478, 479, 0, 480,
	481, 0, 482, 483, 484, 485, 486, 487, 488, 634,
	489, 491, 490, 492, 0, 493, 0, 494, 495, 496,
	0, 0, 0, 0, 497, 0, 499, 500, 501, 498,
	502, 503, 504, 505, 0, 506, 507, 508, 0, 2230,
	510, 511, 512, 635, 513, 0, 514, 515, 521, 522,
	516, 517, 2231, 524, 525, 526, 527, 0, 529, 530,
	528, 531, 532, 533, 0, 534, 535, 518, 519, 536,
	537, 0, 538, 539, 540, 541, 542, 543, 636, 0,
	544, 0, 545, 546, 547, 548, 520, 549, 554, 637,
	550, 551, 552, 553, 638, 556, 0, 557, 558, 0,
	555, 773, 559, 560, 561, 562, 563, 774, 565, 343,
	566, 0, 567, 639, 640, 641, 642, 0, 576, 0,
	568, 569, 570, 643, 571, 644, 0, 572, 573, 2232,
	575, 0, 577, 578, 0, 0, 579, 580, 581, 583,
	584, 582, 585, 0, 586, 0, 0, 587, 588, 589,
	645, 646, 647, 0, 591, 590, 592, 648, 1993, 0,
	1272, 1960, 593, 594, 649, 595, 596, 597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 778, 271, 272, 0, 0,
	0, 0, 0, 598, 0, 0, 0, 0, 273, 274,
	1134, 275, 276, 277, 278, 279, 599, 600, 0, 280,
	601, 281, 602, 0, 603, 282, 283, 284, 285, 286,
	287, 0, 0, 0, 288, 604, 605, 606, 0, 289,
	290, 607, 0, 1277, 0, 291, 292, 293, 294, 295,
	296, 297, 0, 0, 299, 300, 301, 298, 302, 0,
	303, 0, 304, 305, 306, 307, 308, 309, 0, 310,
	311, 312, 1135, 313, 314, 0, 0, 0, 0, 0,
	0, 1957, 315, 316, 317, 318, 0, 319, 608, 609,
	0, 323, 320, 321, 0, 324, 322, 0, 325, 326,
	327, 0, 0, 328, 329, 330, 0, 331, 332, 0,
	333, 334, 335, 0, 336, 337, 610, 338, 339, 340,
	342, 344, 341, 345, 346, 347, 348, 611, 612, 349,
	0, 260, 0, 0, 0, 0, 0, 350, 351, 352,
	613, 0, 0, 0, 353, 0, 354, 0, 0, 1136,
	355, 356, 614, 615, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 365, 616, 0, 617, 366, 0, 367,
	368, 369, 370, 371, 618, 619, 620, 448, 1138, 372,
	373, 0, 374, 375, 376, 377, 0, 0, 0, 0,
	378, 379, 380, 382, 0, 1137, 381, 621, 622, 0,
	623, 0, 383, 384, 1139, 624, 1140, 385, 386, 387,
	1141, 388, 0, 0, 0, 389, 390, 391, 392, 393,
	394, 0, 395, 397, 396, 0, 398, 625, 1142, 399,
	400, 1143, 0, 401, 0, 0, 0, 402, 403, 406,
	0, 0, 404, 405, 407, 408, 0, 409, 410, 412,
	415, 411, 413, 414, 416, 429, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 431, 0,
	430, 1144, 432, 433, 434, 439, 441, 442, 437, 438,
	440, 443, 444, 436, 1145, 435, 0, 0, 1146, 445,
	446, 0, 626, 447, 627, 449, 450, 0, 0, 451,
	0, 0, 0, 453, 454, 455, 0, 0, 456, 457,
	628, 1147, 458, 1148, 629, 459, 460, 452, 461, 462,
	463, 464, 465, 466, 467, 468, 0, 469, 470, 630,
	471, 472, 473, 631, 474, 475, 476, 632, 477, 633,
	478, 479, 0, 480, 481, 0, 482, 483, 484, 485,
	486, 487, 488, 634, 489, 491, 490, 492, 0, 493,
	0, 494, 495, 496, 0, 0, 0, 0, 497, 0,
	499, 500, 501, 498, 502, 503, 504, 505, 0, 506,
	507, 508, 1149, 509, 510, 511, 512, 635, 513, 0,
	514, 515, 521, 522, 516, 517, 523, 524, 525, 526,
	527, 0, 529, 530, 528, 531, 532, 533, 1958, 534,
	535, 518, 519, 536, 537, 1150, 538, 539, 540, 541,
	542, 543, 636, 0, 544, 0, 545, 546, 547, 548,
	520, 549, 554, 637, 550, 551, 552, 553, 638, 556,
	0, 557, 558, 0, 555, 0, 559, 560, 561, 562,
	563, 564, 565, 343, 566, 0, 567, 639, 640, 641,
	642, 0, 576, 0, 568, 569, 570, 643, 571, 644,
	0, 572, 573, 574, 575, 0, 577, 578, 0, 0,
	579, 580, 581, 583, 584, 582, 585, 0, 586, 0,
	0, 587, 588, 589, 645, 646, 647, 0, 591, 590,
	592, 648, 1954, 0, 1272, 1960, 593, 594, 649, 595,
	596, 597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 598, 0, 0,
	0, 0, 273, 274, 1134, 275, 276, 277, 278, 279,
	599, 600, 0, 280, 601, 281, 602, 0, 603, 282,
	283, 284, 285, 286, 287, 0, 0, 0, 288, 604,
	605, 606, 0, 289, 290, 607, 0, 1277, 0, 291,
	292, 293, 294, 295, 296, 297, 0, 0, 299, 300,
	301, 298, 302, 0, 303, 0, 304, 305, 306, 307,
	308, 309, 0, 310, 311, 312, 1135, 313, 314, 0,
	0, 0, 0, 0, 0, 1957, 315, 316, 317, 318,
	0, 319, 608, 609, 0, 323, 320, 321, 0, 324,
	322, 0, 325, 326, 327, 0, 0, 328, 329, 330,
	0, 331, 332, 0, 333, 334, 335, 0, 336, 337,
	610, 338, 339, 340, 342, 344, 341, 345, 346, 347,
	348, 611, 612, 349, 0, 260, 0, 0, 0, 0,
	0, 350, 351, 352, 613, 0, 0, 0, 353, 0,
	354, 0, 0, 1136, 355, 356, 614, 615, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 365, 616, 0,
	617, 366, 0, 367, 368, 369, 370, 371, 618, 619,
	620, 448, 1138, 372, 373, 0, 374, 375, 376, 377,
	0, 0, 0, 0, 378, 379, 380, 382, 0, 1137,
	381, 621, 622, 0, 623, 0, 383, 384, 1139, 624,
	1140, 385, 386, 387, 1141, 388, 0, 0, 0, 389,
	390, 391, 392, 393, 394, 0, 395, 397, 396, 0,
	398, 625, 1142, 399, 400, 1143, 0, 401, 0, 0,
	0, 402, 403, 406, 0, 0, 404, 405, 407, 408,
	0, 409, 410, 412, 415, 411, 413, 414, 416, 429,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 431, 0, 430, 1144, 432, 433, 434, 439,
	441, 442, 437, 438, 440, 443, 444, 436, 1145, 435,
	0, 0, 1146, 445, 446, 0, 626, 447, 627, 449,
	450, 0, 0, 451, 0, 0, 0, 453, 454, 455,
	0, 0, 456, 457, 628, 1147, 458, 1148, 629, 459,
	460, 452, 461, 462, 463, 464, 465, 466, 467, 468,
	0, 469, 470, 630, 471, 472, 473, 631, 474, 475,
	476, 632, 477, 633, 478, 479, 0, 480, 481, 0,
	482, 483, 484, 485, 486, 487, 488, 634, 489, 491,
	490, 492, 0, 493, 0, 494, 495, 496, 0, 0,
	0, 0, 497, 0, 499, 500, 501, 498, 502, 503,
	504, 505, 0, 506, 507, 508, 1149, 509, 510, 511,
	512, 635, 513, 0, 514, 515, 521, 522, 516, 517,
	523, 524, 525, 526, 527, 0, 529, 530, 528, 531,
	532, 533, 1958, 534, 535, 518, 519, 536, 537, 1150,
	538, 539, 540, 541, 542, 543, 636, 0, 544, 0,
	545, 546, 547, 548, 520, 549, 554, 637, 550, 551,
	552, 553, 638, 556, 0, 557, 558, 0, 555, 0,
	559, 560, 561, 562, 563, 564, 565, 343, 566, 0,
	567, 639, 640, 641, 642, 0, 576, 0, 568, 569,
	570, 643, 571, 644, 0, 572, 573, 574, 575, 0,
	577, 578, 0, 0, 579, 580, 581, 583, 584, 582,
	585, 0, 586, 0, 0, 587, 588, 589, 645, 646,
	647, 768, 591, 590, 592, 648, 0, 0, 0, 0,
	593, 594, 649, 595, 596, 597, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 598, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 599, 600, 0,
	280, 601, 281, 602, 0, 603, 282, 283, 284, 285,
	286, 287, 0, 0, 0, 288, 604, 605, 606, 0,
	289, 290, 607, 0, 0, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 0, 0, 0, 0,
	0, 0, 0, 315, 316, 775, 318, 0, 319, 608,
	609, 0, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 329, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 610, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 611, 612,
	349, 0, 260, 0, 0, 0, 0, 0, 350, 351,
	352, 613, 0, 0, 0, 353, 0, 354, 0, 0,
	0, 355, 356, 614, 615, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 616, 0, 617, 366, 0,
	367, 368, 369, 370, 371, 618, 619, 620, 448, 0,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	261, 378, 379, 380, 382, 0, 0, 381, 621, 622,
	0, 623, 0, 383, 384, 0, 624, 0, 385, 386,
	387, 0, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 395, 397, 396, 0, 398, 625, 0,
	399, 400, 0, 0, 401, 0, 0, 0, 402, 403,
	406, 0, 0, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 0, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 0, 435, 0, 262, 0,
	445, 446, 0, 626, 447, 627, 449, 450, 0, 0,
	451, 0, 0, 0, 453, 454, 455, 0, 0, 456,
	457, 628, 0, 458, 0, 629, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 632, 477,
	633, 478, 479, 0, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 634, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 0, 509, 510, 511, 512, 635, 513,
	0, 514, 515, 521, 522, 516, 517, 1950, 524, 525,
	526, 527, 0, 529, 530, 528, 531, 532, 533, 0,
	534, 535, 518, 519, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 636, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 637, 550, 551, 552, 553, 638,
	556, 0, 557, 558, 0, 555, 773, 559, 560, 561,
	562, 563, 774, 565, 343, 566, 0, 567, 639, 640,
	641, 642, 0, 576, 0, 568, 569, 570, 643, 571,
	644, 0, 572, 573, 1949, 575, 0, 577, 578, 0,
	0, 579, 580, 581, 583, 584, 582, 585, 0, 586,
	0, 0, 587, 588, 589, 645, 646, 647, 768, 591,
	590, 592, 648, 0, 0, 0, 0, 593, 594, 649,
	595, 596, 597, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	778, 598, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 599, 600, 0, 280, 601, 281,
	602, 0, 603, 282, 283, 284, 285, 286, 287, 0,
	0, 0, 288, 604, 605, 606, 0, 289, 290, 607,
	0, 0, 0, 291, 292, 293, 294, 295, 296, 297,
	0, 0, 299, 300, 301, 298, 302, 0, 303, 0,
	304, 305, 306, 307, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 0, 0,
	315, 316, 775, 318, 0, 319, 608, 609, 0, 323,
	320, 321, 0, 324, 322, 0, 325, 326, 327, 0,
	0, 328, 329, 330, 0, 331, 332, 0, 333, 334,
	335, 0, 336, 337, 610, 338, 339, 340, 342, 344,
	341, 345, 346, 347, 348, 611, 612, 349, 0, 260,
	0, 0, 0, 0, 0, 350, 351, 352, 613, 0,
	0, 0, 353, 0, 354, 0, 0, 0, 355, 356,
	614, 615, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 365, 616, 0, 617, 366, 0, 367, 368, 369,
	370, 371, 618, 619, 620, 448, 0, 372, 373, 0,
	374, 375, 376, 377, 0, 0, 0, 261, 378, 379,
	380, 382, 0, 0, 381, 621, 622, 0, 623, 0,
	383, 384, 0, 624, 0, 385, 386, 387, 0, 388,
	0, 0, 0, 389, 390, 391, 392, 393, 394, 0,
	395, 397, 396, 0, 398, 625, 0, 399, 400, 0,
	0, 401, 0, 0, 0, 402, 403, 406, 0, 0,
	404, 405, 407, 408, 0, 409, 410, 412, 415, 411,
	413, 414, 416, 429, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 431, 0, 430, 0,
	432, 433, 434, 439, 441, 442, 437, 438, 440, 443,
	444, 436, 0, 435, 0, 262, 0, 445, 446, 0,
	626, 447, 627, 449, 450, 0, 0, 451, 0, 0,
	0, 453, 454, 455, 0, 0, 456, 457, 628, 0,
	458, 0, 629, 459, 460, 452, 461, 462, 463, 464,
	465, 466, 467, 468, 0, 469, 470, 630, 471, 472,
	473, 631, 474, 475, 476, 632, 477, 633, 478, 479,
	0, 480, 481, 0, 482, 483, 484, 485, 486, 487,
	488, 634, 489, 491, 490, 492, 0, 493, 0, 494,
	495, 496, 0, 0, 0, 0, 497, 0, 499, 500,
	501, 498, 502, 503, 504, 505, 0, 506, 507, 508,
	0, 509, 510, 511, 512, 635, 513, 0, 514, 515,
	521, 522, 516, 517, 1903, 524, 525, 526, 527, 0,
	529, 530, 528, 531, 532, 533, 0, 534, 535, 518,
	519, 536, 537, 0, 538, 539, 540, 541, 542, 543,
	636, 0, 544, 0, 545, 546, 547, 548, 520, 549,
	554, 637, 550, 551, 552, 553, 638, 556, 0, 557,
	558, 0, 555, 773, 559, 560, 561, 562, 563, 774,
	565, 343, 566, 0, 567, 639, 640, 641, 642, 0,
	576, 0, 568, 569, 570, 643, 571, 644, 0, 572,
	573, 1902, 575, 0, 577, 578, 0, 0, 579, 580,
	581, 583, 584, 582, 585, 0, 586, 0, 0, 587,
	588, 589, 645, 646, 647, 0, 591, 590, 592, 648,
	0, 0, 1272, 1960, 593, 594, 649, 595, 596, 597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 778, 271, 272,
	0, 0, 0, 0, 0, 598, 0, 0, 0, 0,
	273, 274, 1134, 275, 276, 277, 278, 279, 599, 600,
	0, 280, 601, 281, 602, 0, 603, 282, 283, 284,
	285, 286, 287, 0, 0, 0, 288, 604, 605, 606,
	0, 289, 290, 607, 0, 1277, 0, 291, 292, 293,
	294, 295, 296, 297, 0, 0, 299, 300, 301, 298,
	302, 0, 303, 0, 304, 305, 306, 307, 308, 309,
	0, 310, 311, 312, 1135, 313, 314, 0, 0, 0,
	0, 0, 0, 1957, 315, 316, 317, 318, 0, 319,
	608, 609, 0, 323, 320, 321, 0, 324, 322, 0,
	325, 326, 327, 0, 0, 328, 329, 330, 0, 331,
	332, 0, 333, 334, 335, 0, 336, 337, 610, 338,
	339, 340, 342, 344, 341, 345, 346, 347, 348, 611,
	612, 349, 0, 260, 0, 0, 0, 0, 0, 350,
	351, 352, 613, 0, 0, 0, 353, 0, 354, 0,
	0, 1136, 355, 356, 614, 615, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 365, 616, 0, 617, 366,
	0, 367, 368, 369, 370, 371, 618, 619, 620, 448,
	1138, 372, 373, 0, 374, 375, 376, 377, 0, 0,
	0, 0, 378, 379, 380, 382, 0, 1137, 381, 621,
	622, 0, 623, 0, 383, 384, 1139, 624, 1140, 385,
	386, 387, 1141, 388, 0, 0, 0, 389, 390, 391,
	392, 393, 394, 0, 395, 397, 396, 0, 398, 625,
	1142, 399, 400, 1143, 0, 401, 0, 0, 0, 402,
	403, 406, 0, 0, 404, 405, 407, 408, 0, 409,
	410, 412, 415, 411, 413, 414, 416, 429, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	431, 0, 430, 1144, 432, 433, 434, 439, 441, 442,
	437, 438, 440, 443, 444, 436, 1145, 435, 0, 0,
	1146, 445, 446, 0, 626, 447, 627, 449, 450, 0,
	0, 451, 0, 0, 0, 453, 454, 455, 0, 0,
	456, 457, 628, 1147, 458, 1148, 629, 459, 460, 452,
	461, 462, 463, 464, 465, 466, 467, 468, 0, 469,
	470, 630, 471, 472, 473, 631, 474, 475, 476, 632,
	477, 633, 478, 479, 0, 480, 481, 0, 482, 483,
	484, 485, 486, 487, 488, 634, 489, 491, 490, 492,
	0, 493, 0, 494, 495, 496, 0, 0, 0, 0,
	497, 0, 499, 500, 501, 498, 502, 503, 504, 505,
	0, 506, 507, 508, 1149, 509, 510, 511, 512, 635,
	513, 0, 514, 515, 521, 522, 516, 517, 523, 524,
	525, 526, 527, 0, 529, 530, 528, 531, 532, 533,
	1958, 534, 535, 518, 519, 536, 537, 1150, 538, 539,
	540, 541, 542, 543, 636, 0, 544, 0, 545, 546,
	547, 548, 520, 549, 554, 637, 550, 551, 552, 553,
	638, 556, 0, 557, 558, 0, 555, 0, 559, 560,
	561, 562, 563, 564, 565, 343, 566, 0, 567, 639,
	640, 641, 642, 0, 576, 0, 568, 569, 570, 643,
	571, 644, 0, 572, 573, 574, 575, 0, 577, 578,
	0, 0, 579, 580, 581, 583, 584, 582, 585, 0,
	586, 0, 0, 587, 588, 589, 645, 646, 647, 0,
	591, 590, 592, 648, 0, 0, 0, 0, 593, 594,
	649, 595, 596, 597, 1272, 1271, 0, 0, 0, 0,
	1269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 598, 0, 0,
	0, 0, 273, 274, 1134, 275, 276, 277, 278, 279,
	599, 600, 0, 280, 601, 281, 602, 0, 603, 282,
	283, 284, 285, 286, 287, 0, 0, 0, 288, 604,
	605, 606, 0, 289, 290, 607, 0, 1277, 0, 291,
	292, 293, 294, 295, 296, 297, 0, 0, 299, 300,
	301, 298, 302, 0, 303, 0, 304, 305, 306, 307,
	308, 309, 0, 310, 311, 312, 1135, 313, 314, 0,
	0, 0, 0, 0, 0, 0, 315, 316, 317, 318,
	0, 319, 608, 609, 0, 323, 320, 321, 0, 324,
	322, 0, 325, 326, 327, 0, 0, 328, 329, 330,
	0, 331, 332, 0, 333, 334, 335, 0, 336, 337,
	610, 338, 339, 340, 342, 344, 341, 345, 346, 347,
	348, 611, 612, 349, 0, 260, 0, 0, 0, 0,
	0, 350, 351, 352, 613, 0, 0, 0, 353, 0,
	354, 0, 0, 1136, 355, 356, 614, 615, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 365, 616, 0,
	617, 366, 0, 367, 368, 369, 370, 371, 618, 619,
	620, 448, 1138, 372, 373, 0, 374, 375, 376, 377,
	0, 0, 0, 0, 378, 379, 380, 382, 0, 1137,
	381, 621, 622, 0, 623, 0, 383, 384, 1139, 624,
	1140, 385, 386, 387, 1141, 388, 0, 0, 0, 389,
	390, 391, 392, 393, 394, 0, 395, 397, 396, 0,
	398, 625, 1142, 399, 400, 1143, 0, 401, 0, 0,
	0, 402, 403, 406, 0, 0, 404, 405, 407, 408,
	0, 409, 410, 412, 415, 411, 413, 414, 416, 429,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 431, 0, 430, 1144, 432, 433, 434, 439,
	441, 442, 437, 438, 440, 443, 444, 436, 1145, 435,
	0, 0, 1146, 445, 446, 3688, 626, 447, 627, 449,
	450, 0, 0, 451, 0, 0, 0, 453, 454, 455,
	0, 0, 456, 457, 628, 1147, 458, 1148, 629, 459,
	460, 452, 461, 462, 463, 464, 465, 466, 467, 468,
	0, 469, 470, 630, 471, 472, 473, 631, 474, 475,
	476, 632, 477, 633, 478, 479, 0, 480, 481, 0,
	482, 483, 484, 485, 486, 487, 488, 634, 489, 491,
	490, 492, 0, 493, 0, 494, 495, 496, 0, 0,
	0, 0, 497, 0, 499, 500, 501, 498, 502, 503,
	504, 505, 0, 506, 507, 508, 1149, 509, 510, 511,
	512, 635, 513, 0, 514, 515, 521, 522, 516, 517,
	523, 524, 525, 526, 527, 0, 529, 530, 528, 531,
	532, 533, 0, 534, 535, 518, 519, 536, 537, 1150,
	538, 539, 540, 541, 542, 543, 636, 0, 544, 0,
	545, 546, 547, 548, 520, 549, 554, 637, 550, 551,
	552, 553, 638, 556, 0, 557, 558, 0, 555, 0,
	559, 560, 561, 562, 563, 564, 565, 343, 566, 0,
	567, 639, 640, 641, 642, 0, 576, 0, 568, 569,
	570, 643, 571, 644, 0, 572, 573, 574, 575, 0,
	577, 578, 0, 0, 579, 580, 581, 583, 584, 582,
	585, 0, 586, 0, 0, 587, 588, 589, 645, 646,
	647, 0, 591, 590, 592, 648, 0, 0, 0, 0,
	593, 594, 649, 595, 596, 597, 1272, 1271, 0, 0,
	0, 0, 1269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 598,
	0, 0, 0, 0, 273, 274, 1134, 275, 276, 277,
	278, 279, 599, 600, 0, 280, 601, 281, 602, 0,
	603, 282, 283, 284, 285, 286, 287, 0, 0, 0,
	288, 604, 605, 606, 0, 289, 290, 607, 0, 1277,
	0, 291, 292, 293, 294, 295, 296, 297, 0, 0,
	299, 300, 301, 298, 302, 0, 303, 0, 304, 305,
	306, 307, 308, 309, 0, 310, 311, 312, 1135, 313,
	314, 0, 0, 0, 0, 0, 0, 0, 315, 316,
	317, 318, 0, 319, 608, 609, 0, 323, 320, 321,
	0, 324, 322, 0, 325, 326, 327, 0, 0, 328,
	329, 330, 0, 331, 332, 0, 333, 334, 335, 0,
	336, 337, 610, 338, 339, 340, 342, 344, 341, 345,
	346, 347, 348, 611, 612, 349, 0, 260, 0, 0,
	0, 0, 0, 350, 351, 352, 613, 0, 0, 0,
	353, 0, 354, 0, 0, 1136, 355, 356, 614, 615,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 365,
	616, 0, 617, 366, 0, 367, 368, 369, 370, 371,
	618, 619, 620, 448, 1138, 372, 373, 0, 374, 375,
	376, 377, 0, 0, 0, 0, 378, 379, 380, 382,
	0, 1137, 381, 621, 622, 0, 623, 0, 383, 384,
	1139, 624, 1140, 385, 386, 387, 1141, 388, 0, 0,
	0, 389, 390, 391, 392, 393, 394, 0, 395, 397,
	396, 0, 398, 625, 1142, 399, 400, 1143, 0, 401,
	0, 0, 0, 402, 403, 406, 0, 0, 404, 405,
	407, 408, 0, 409, 410, 412, 415, 411, 413, 414,
	416, 429, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 431, 0, 430, 1144, 432, 433,
	434, 439, 441, 442, 437, 438, 440, 443, 444, 436,
	1145, 435, 0, 0, 1146, 445, 446, 3326, 626, 447,
	627, 449, 450, 0, 0, 451, 0, 0, 0, 453,
	454, 455, 0, 0, 456, 457, 628, 1147, 458, 1148,
	629, 459, 460, 452, 461, 462, 463, 464, 465, 466,
	467, 468, 0, 469, 470, 630, 471, 472, 473, 631,
	474, 475, 476, 632, 477, 633, 478, 479, 0, 480,
	481, 0, 482, 483, 484, 485, 486, 487, 488, 634,
	489, 491, 490, 492, 0, 493, 0, 494, 495, 496,
	0, 0, 0, 0, 497, 0, 499, 500, 501, 498,
	502, 503, 504, 505, 0, 506, 507, 508, 1149, 509,
	510, 511, 512, 635, 513, 0, 514, 515, 521, 522,
	516, 517, 523, 524, 525, 526, 527, 0, 529, 530,
	528, 531, 532, 533, 0, 534, 535, 518, 519, 536,
	537, 1150, 538, 539, 540, 541, 542, 543, 636, 0,
	544, 0, 545, 546, 547, 548, 520, 549, 554, 637,
	550, 551, 552, 553, 638, 556, 0, 557, 558, 0,
	555, 0, 559, 560, 561, 562, 563, 564, 565, 343,
	566, 0, 567, 639, 640, 641, 642, 0, 576, 0,
	568, 569, 570, 643, 571, 644, 0, 572, 573, 574,
	575, 0, 577, 578, 0, 0, 579, 580, 581, 583,
	584, 582, 585, 0, 586, 0, 0, 587, 588, 589,
	645, 646, 647, 257, 591, 590, 592, 648, 0, 0,
	0, 0, 593, 594, 649, 595, 596, 597, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 598, 0, 0, 0,
	0, 273, 274, 0, 275, 276, 277, 278, 279, 599,
	600, 0, 280, 601, 281, 602, 0, 603, 282, 283,
	284, 285, 286, 287, 0, 0, 0, 288, 604, 605,
	606, 0, 289, 290, 607, 0, 0, 0, 291, 292,
	293, 294, 295, 296, 297, 0, 0, 299, 300, 301,
	298, 302, 0, 303, 0, 304, 305, 306, 307, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 0, 0,
	0, 0, 0, 0, 0, 315, 316, 317, 318, 0,
	319, 608, 609, 0, 323, 320, 321, 0, 324, 322,
	0, 325, 326, 327, 0, 0, 328, 329, 330, 0,
	331, 332, 0, 333, 334, 335, 0, 336, 337, 610,
	338, 339, 340, 342, 344, 341, 345, 346, 347, 348,
	611, 612, 349, 0, 260, 0, 0, 0, 0, 0,
	350, 351, 352, 613, 0, 0, 0, 353, 0, 354,
	0, 0, 0, 355, 356, 614, 615, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 365, 616, 0, 617,
	366, 0, 367, 368, 369, 370, 371, 618, 619, 620,
	448, 0, 372, 373, 0, 374, 375, 376, 377, 0,
	0, 0, 261, 378, 379, 380, 382, 0, 0, 381,
	621, 622, 0, 623, 0, 383, 384, 0, 624, 0,
	385, 386, 387, 0, 388, 0, 0, 0, 389, 390,
	391, 392, 393, 394, 0, 395, 397, 396, 0, 398,
	625, 0, 399, 400, 0, 0, 401, 0, 0, 0,
	402, 403, 406, 0, 0, 404, 405, 407, 408, 0,
	409, 410, 412, 415, 411, 413, 414, 416, 429, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 431, 0, 430, 0, 432, 433, 434, 439, 441,
	442, 437, 438, 440, 443, 444, 436, 0, 435, 0,
	262, 0, 445, 446, 0, 626, 447, 627, 449, 450,
	0, 0, 451, 0, 0, 0, 453, 454, 455, 0,
	0, 456, 457, 628, 0, 458, 0, 629, 459, 460,
	452, 461, 462, 463, 464, 465, 466, 467, 468, 0,
	469, 470, 630, 471, 472, 473, 631, 474, 475, 476,
	632, 477, 633, 478, 479, 0, 480, 481, 0, 482,
	483, 484, 485, 486, 487, 488, 634, 489, 491, 490,
	492, 0, 493, 0, 494, 495, 496, 0, 0, 0,
	0, 497, 0, 499, 500, 501, 498, 502, 503, 504,
	505, 0, 506, 507, 508, 0, 509, 510, 511, 512,
	635, 513, 0, 514, 515, 521, 522, 516, 517, 523,
	524, 525, 526, 527, 0, 529, 530, 528, 531, 532,
	533, 0, 534, 535, 518, 519, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 636, 0, 544, 0, 545,
	546, 547, 548, 520, 549, 554, 637, 550, 551, 552,
	553, 638, 556, 0, 557, 558, 0, 555, 0, 559,
	560, 561, 562, 563, 564, 565, 343, 566, 0, 567,
	639, 640, 641, 642, 0, 576, 0, 568, 569, 570,
	643, 571, 644, 0, 572, 573, 574, 575, 0, 577,
	578, 0, 0, 579, 580, 581, 583, 584, 582, 585,
	0, 586, 0, 0, 587, 588, 589, 645, 646, 647,
	0, 591, 590, 592, 648, 0, 0, 0, 0, 593,
	594, 649, 595, 596, 597, 1592, 0, 1272, 1271, 0,
	0, 0, 0, 1269, 0, 0, 0, 0, 0, 0,
	0, 0, 778, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	598, 0, 0, 0, 0, 273, 274, 1134, 275, 276,
	277, 278, 279, 599, 600, 0, 280, 601, 281, 602,
	0, 603, 282, 283, 284, 285, 286, 287, 0, 0,
	0, 288, 604, 605, 606, 0, 289, 290, 607, 0,
	1277, 0, 291, 292, 293, 294, 295, 296, 297, 0,
	0, 299, 300, 301, 298, 302, 0, 303, 0, 304,
	305, 306, 307, 308, 309, 0, 310, 311, 312, 1135,
	313, 314, 0, 0, 0, 0, 0, 0, 0, 315,
	316, 317, 318, 0, 319, 608, 609, 0, 323, 320,
	321, 0, 324, 322, 0, 325, 326, 327, 0, 0,
	328, 329, 330, 0, 331, 332, 0, 333, 334, 335,
	0, 336, 337, 610, 338, 339, 340, 342, 344, 341,
	345, 346, 347, 348, 611, 612, 349, 0, 260, 0,
	0, 0, 0, 0, 1591, 351, 352, 613, 0, 0,
	0, 353, 0, 354, 0, 0, 1136, 355, 356, 614,
	615, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	365, 616, 0, 617, 366, 0, 367, 368, 369, 370,
	371, 618, 619, 620, 448, 1138, 372, 373, 0, 374,
	375, 376, 377, 0, 0, 0, 0, 378, 379, 380,
	382, 0, 1137, 381, 621, 622, 0, 623, 0, 383,
	384, 1139, 624, 1140, 385, 386, 387, 1141, 388, 0,
	0, 0, 389, 390, 391, 392, 393, 394, 0, 395,
	397, 396, 0, 398, 625, 1142, 399, 400, 1143, 0,
	401, 0, 0, 0, 402, 403, 406, 0, 0, 404,
	405, 407, 408, 0, 409, 410, 412, 415, 411, 413,
	414, 416, 429, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 431, 0, 430, 1144, 432,
	433, 434, 439, 441, 442, 437, 438, 440, 443, 444,
	436, 1145, 435, 0, 0, 1146, 445, 446, 0, 626,
	447, 627, 449, 450, 0, 0, 451, 0, 0, 0,
	453, 454, 455, 0, 0, 456, 457, 628, 1147, 458,
	1148, 629, 459, 460, 452, 461, 462, 463, 464, 465,
	466, 467, 468, 0, 469, 470, 630, 471, 472, 473,
	631, 474, 475, 476, 632, 477, 633, 478, 479, 0,
	480, 481, 0, 482, 483, 484, 485, 486, 1590, 488,
	634, 489, 491, 490, 492, 0, 493, 0, 494, 495,
	496, 0, 0, 0, 0, 497, 0, 499, 500, 501,
	498, 502, 503, 504, 505, 0, 506, 507, 508, 1149,
	509, 510, 511, 512, 635, 513, 0, 514, 515, 521,
	522, 516, 517, 523, 1589, 525, 526, 527, 0, 529,
	530, 528, 531, 532, 533, 0, 534, 535, 518, 519,
	536, 537, 1150, 538, 539, 540, 541, 542, 543, 636,
	0, 544, 0, 545, 546, 547, 548, 520, 549, 554,
	637, 550, 551, 552, 553, 638, 556, 0, 557, 558,
	0, 555, 0, 559, 560, 561, 562, 563, 564, 565,
	343, 566, 0, 567, 639, 640, 641, 642, 0, 576,
	0, 568, 569, 570, 643, 571, 644, 0, 572, 573,
	574, 575, 0, 577, 578, 0, 0, 579, 580, 581,
	583, 584, 582, 585, 0, 586, 0, 0, 587, 588,
	589, 645, 646, 647, 0, 591, 590, 592, 648, 0,
	0, 0, 0, 593, 594, 649, 595, 596, 597, 1511,
	0, 1272, 1271, 0, 0, 0, 0, 1269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 598, 0, 0, 0, 0, 273,
	274, 1134, 275, 276, 277, 278, 279, 599, 600, 0,
	280, 601, 281, 602, 0, 603, 282, 283, 284, 285,
	286, 287, 0, 0, 0, 288, 604, 605, 606, 0,
	289, 290, 607, 0, 1277, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 1135, 313, 314, 0, 0, 0, 0,
	0, 0, 0, 315, 316, 317, 318, 0, 319, 608,
	609, 0, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 329, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 610, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 611, 612,
	349, 0, 260, 0, 0, 0, 0, 0, 350, 351,
	352, 613, 0, 0, 0, 353, 0, 354, 0, 0,
	1136, 355, 356, 614, 615, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 616, 0, 617, 366, 0,
	367, 368, 369, 370, 371, 1510, 619, 620, 448, 1138,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	0, 378, 379, 380, 382, 0, 1137, 381, 621, 622,
	0, 623, 0, 383, 384, 1139, 624, 1140, 385, 386,
	387, 1141, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 395, 397, 396, 0, 398, 625, 1142,
	399, 400, 1143, 0, 401, 0, 0, 0, 402, 403,
	406, 0, 0, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 1144, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 1145, 435, 0, 0, 1146,
	445, 446, 0, 626, 447, 627, 449, 450, 0, 0,
	451, 0, 0, 0, 453, 454, 455, 0, 0, 456,
	457, 628, 1147, 458, 1148, 629, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 632, 477,
	633, 478, 479, 0, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 634, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 1149, 509, 510, 511, 512, 635, 513,
	0, 514, 515, 521, 522, 516, 517, 523, 524, 525,
	526, 527, 0, 529, 530, 528, 531, 532, 533, 0,
	534, 535, 518, 519, 536, 537, 1150, 538, 539, 540,
	541, 542, 543, 636, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 637, 550, 551, 552, 553, 638,
	556, 0, 557, 558, 0, 555, 0, 559, 560, 561,
	562, 563, 564, 565, 343, 566, 0, 567, 639, 640,
	641, 642, 0, 576, 0, 568, 569, 570, 643, 571,
	644, 0, 572, 573, 574, 575, 0, 577, 578, 0,
	0, 579, 580, 581, 583, 584, 582, 585, 0, 586,
	0, 0, 587, 588, 589, 645, 646, 647, 0, 591,
	590, 592, 648, 0, 0, 0, 0, 593, 594, 649,
	595, 596, 597, 1472, 0, 1272, 1271, 0, 0, 0,
	0, 1269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 598, 0,
	0, 0, 0, 273, 274, 1134, 275, 276, 277, 278,
	279, 599, 600, 0, 280, 601, 281, 602, 0, 603,
	282, 283, 284, 285, 286, 287, 0, 0, 0, 288,
	604, 605, 606, 0, 289, 290, 607, 0, 1277, 0,
	291, 292, 293, 294, 295, 296, 297, 0, 0, 299,
	300, 301, 298, 302, 0, 303, 0, 304, 305, 306,
	307, 308, 309, 0, 310, 311, 312, 1135, 313, 314,
	0, 0, 0, 0, 0, 0, 0, 315, 316, 317,
	318, 0, 319, 608, 609, 0, 323, 320, 321, 0,
	324, 322, 0, 325, 326, 327, 0, 0, 328, 329,
	330, 0, 331, 332, 0, 333, 334, 335, 0, 336,
	337, 610, 338, 339, 340, 342, 344, 341, 345, 346,
	347, 348, 611, 612, 349, 0, 260, 0, 0, 0,
	0, 0, 350, 351, 352, 613, 0, 0, 0, 353,
	0, 354, 0, 0, 1136, 355, 356, 614, 615, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 365, 616,
	0, 617, 366, 0, 367, 368, 369, 370, 371, 618,
	619, 620, 448, 1138, 372, 373, 0, 374, 375, 376,
	377, 0, 0, 0, 0, 378, 379, 380, 382, 0,
	1137, 381, 621, 622, 0, 623, 0, 383, 384, 1139,
	624, 1140, 385, 386, 387, 1141, 388, 0, 0, 0,
	389, 390, 391, 392, 393, 394, 0, 395, 397, 396,
	0, 398, 625, 1142, 399, 400, 1143, 0, 401, 0,
	0, 0, 402, 403, 406, 0, 0, 404, 405, 407,
	408, 0, 409, 410, 412, 415, 411, 413, 414, 416,
	429, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 431, 0, 430, 1144, 432, 433, 434,
	439, 441, 442, 437, 438, 440, 443, 444, 436, 1145,
	435, 0, 0, 1146, 445, 446, 0, 626, 447, 627,
	449, 450, 0, 0, 451, 0, 0, 0, 453, 454,
	455, 0, 0, 456, 457, 628, 1147, 458, 1148, 629,
	459, 460, 452, 461, 462, 463, 464, 465, 466, 467,
	468, 0, 469, 470, 630, 471, 472, 473, 631, 474,
	475, 476, 632, 477, 633, 478, 479, 0, 480, 481,
	0, 482, 483, 484, 485, 486, 487, 488, 634, 489,
	491, 490, 492, 0, 493, 0, 494, 495, 496, 0,
	0, 0, 0, 497, 0, 499, 500, 501, 498, 502,
	503, 504, 505, 0, 506, 507, 508, 1149, 509, 510,
	511, 512, 635, 513, 0, 514, 515, 521, 522, 516,
	517, 523, 524, 525, 526, 527, 0, 529, 530, 528,
	531, 532, 533, 0, 534, 535, 518, 519, 536, 537,
	1150, 538, 539, 540, 541, 542, 543, 636, 0, 544,
	0, 545, 546, 547, 548, 520, 549, 554, 637, 550,
	551, 552, 553, 638, 556, 0, 557, 558, 0, 555,
	0, 559, 560, 561, 562, 563, 564, 565, 343, 566,
	0, 567, 639, 640, 641, 642, 0, 576, 0, 568,
	569, 570, 643, 571, 644, 0, 572, 573, 574, 575,
	0, 577, 578, 0, 0, 579, 580, 581, 583, 584,
	582, 585, 0, 586, 0, 0, 587, 588, 589, 645,
	646, 647, 0, 591, 590, 592, 648, 0, 0, 0,
	0, 593, 594, 649, 595, 596, 597, 1440, 0, 1272,
	1271, 0, 0, 0, 0, 1269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 598, 0, 0, 0, 0, 273, 274, 1134,
	275, 276, 277, 278, 279, 599, 600, 0, 280, 601,
	281, 602, 0, 603, 282, 283, 284, 285, 286, 287,
	0, 0, 0, 288, 604, 605, 606, 0, 289, 290,
	607, 0, 1277, 0, 291, 292, 293, 294, 295, 296,
	297, 0, 0, 299, 300, 301, 298, 302, 0, 303,
	0, 304, 305, 306, 307, 308, 309, 0, 310, 311,
	312, 1135, 313, 314, 0, 0, 0, 0, 0, 0,
	0, 315, 316, 317, 318, 0, 319, 608, 609, 0,
	323, 320, 321, 0, 324, 322, 0, 325, 326, 327,
	0, 0, 328, 329, 330, 0, 331, 332, 0, 333,
	334, 335, 0, 336, 337, 610, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 611, 612, 349, 0,
	260, 0, 0, 0, 0, 0, 350, 351, 352, 613,
	0, 0, 0, 353, 0, 354, 0, 0, 1136, 355,
	356, 614, 615, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 365, 616, 0, 617, 366, 0, 367, 368,
	369, 370, 371, 1439, 619, 620, 448, 1138, 372, 373,
	0, 374, 375, 376, 377, 0, 0, 0, 0, 378,
	379, 380, 382, 0, 1137, 381, 621, 622, 0, 623,
	0, 383, 384, 1139, 624, 1140, 385, 386, 387, 1141,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	0, 395, 397, 396, 0, 398, 625, 1142, 399, 400,
	1143, 0, 401, 0, 0, 0, 402, 403, 406, 0,
	0, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	1144, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 1145, 435, 0, 0, 1146, 445, 446,
	0, 626, 447, 627, 449, 450, 0, 0, 451, 0,
	0, 0, 453, 454, 455, 0, 0, 456, 457, 628,
	1147, 458, 1148, 629, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 0, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 632, 477, 633, 478,
	479, 0, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 634, 489, 491, 490, 492, 0, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 0, 506, 507,
	508, 1149, 509, 510, 511, 512, 635, 513, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	0, 529, 530, 528, 531, 532, 533, 0, 534, 535,
	518, 519, 536, 537, 1150, 538, 539, 540, 541, 542,
	543, 636, 0, 544, 0, 545, 546, 547, 548, 520,
	549, 554, 637, 550, 551, 552, 553, 638, 556, 0,
	557, 558, 0, 555, 0, 559, 560, 561, 562, 563,
	564, 565, 343, 566, 0, 567, 639, 640, 641, 642,
	0, 576, 0, 568, 569, 570, 643, 571, 644, 0,
	572, 573, 574, 575, 0, 577, 578, 0, 0, 579,
	580, 581, 583, 584, 582, 585, 0, 586, 0, 0,
	587, 588, 589, 645, 646, 647, 0, 591, 590, 592,
	648, 0, 0, 0, 0, 593, 594, 649, 595, 596,
	597, 1266, 0, 1272, 1271, 0, 0, 0, 0, 1269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 598, 0, 0, 0,
	0, 273, 274, 1134, 275, 276, 277, 278, 279, 599,
	600, 0, 280, 601, 281, 602, 0, 603, 282, 283,
	284, 285, 286, 287, 0, 0, 0, 288, 604, 605,
	606, 0, 289, 290, 607, 0, 1277, 0, 291, 292,
	293, 294, 295, 296, 297, 0, 0, 299, 300, 301,
	298, 302, 0, 303, 0, 304, 305, 306, 307, 308,
	309, 0, 310, 311, 312, 1135, 313, 314, 0, 0,
	0, 0, 0, 0, 0, 315, 316, 317, 318, 0,
	319, 608, 609, 0, 323, 320, 321, 0, 324, 322,
	0, 325, 326, 327, 0, 0, 328, 329, 330, 0,
	331, 332, 0, 333, 334, 335, 0, 336, 337, 610,
	338, 339, 340, 342, 344, 341, 345, 346, 347, 348,
	611, 612, 349, 0, 260, 0, 0, 0, 0, 0,
	350, 351, 352, 613, 0, 0, 0, 353, 0, 354,
	0, 0, 1136, 355, 356, 614, 615, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 365, 616, 0, 617,
	366, 0, 367, 368, 369, 370, 371, 1265, 619, 620,
	448, 1138, 372, 373, 0, 374, 375, 376, 377, 0,
	0, 0, 0, 378, 379, 380, 382, 0, 1137, 381,
	621, 622, 0, 623, 0, 383, 384, 1139, 624, 1140,
	385, 386, 387, 1141, 388, 0, 0, 0, 389, 390,
	391, 392, 393, 394, 0, 395, 397, 396, 0, 398,
	625, 1142, 399, 400, 1143, 0, 401, 0, 0, 0,
	402, 403, 406, 0, 0, 404, 405, 407, 408, 0,
	409, 410, 412, 415, 411, 413, 414, 416, 429, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 431, 0, 430, 1144, 432, 433, 434, 439, 441,
	442, 437, 438, 440, 443, 444, 436, 1145, 435, 0,
	0, 1146, 445, 446, 0, 626, 447, 627, 449, 450,
	0, 0, 451, 0, 0, 0, 453, 454, 455, 0,
	0, 456, 457, 628, 1147, 458, 1148, 629, 459, 460,
	452, 461, 462, 463, 464, 465, 466, 467, 468, 0,
	469, 470, 630, 471, 472, 473, 631, 474, 475, 476,
	632, 477, 633, 478, 479, 0, 480, 481, 0, 482,
	483, 484, 485, 486, 487, 488, 634, 489, 491, 490,
	492, 0, 493, 0, 494, 495, 496, 0, 0, 0,
	0, 497, 0, 499, 500, 501, 498, 502, 503, 504,
	505, 0, 506, 507, 508, 1149, 509, 510, 511, 512,
	635, 513, 0, 514, 515, 521, 522, 516, 517, 523,
	524, 525, 526, 527, 0, 529, 530, 528, 531, 532,
	533, 0, 534, 535, 518, 519, 536, 537, 1150, 538,
	539, 540, 541, 542, 543, 636, 0, 544, 0, 545,
	546, 547, 548, 520, 549, 554, 637, 550, 551, 552,
	553, 638, 556, 0, 557, 558, 0, 555, 0, 559,
	560, 561, 562, 563, 564, 565, 343, 566, 0, 567,
	639, 640, 641, 642, 0, 576, 0, 568, 569, 570,
	643, 571, 644, 0, 572, 573, 574, 575, 0, 577,
	578, 0, 0, 579, 580, 581, 583, 584, 582, 585,
	0, 586, 0, 0, 587, 588, 589, 645, 646, 647,
	0, 591, 590, 592, 648, 0, 0, 0, 0, 593,
	594, 649, 595, 596, 597, 1272, 1271, 0, 0, 0,
	0, 1269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 598, 0,
	0, 0, 0, 273, 274, 1134, 275, 276, 277, 278,
	279, 599, 600, 0, 280, 601, 281, 602, 0, 603,
	282, 283, 284, 285, 286, 287, 0, 0, 0, 288,
	604, 605, 606, 0, 289, 290, 607, 0, 1277, 0,
	291, 292, 293, 294, 295, 296, 297, 0, 0, 299,
	300, 301, 298, 302, 0, 303, 0, 304, 305, 306,
	307, 308, 309, 0, 310, 311, 312, 1135, 313, 314,
	0, 0, 0, 0, 0, 0, 0, 315, 316, 317,
	318, 0, 319, 608, 609, 0, 323, 320, 321, 0,
	324, 322, 0, 325, 326, 327, 0, 0, 328, 329,
	330, 0, 331, 332, 0, 333, 334, 335, 0, 336,
	337, 610, 338, 339, 340, 342, 344, 341, 345, 346,
	347, 348, 611, 612, 349, 0, 260, 0, 0, 0,
	0, 0, 350, 351, 352, 613, 0, 0, 0, 353,
	0, 354, 0, 0, 1136, 355, 356, 614, 615, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 365, 616,
	0, 617, 366, 0, 367, 368, 369, 370, 371, 618,
	619, 620, 448, 1138, 372, 373, 0, 374, 375, 376,
	377, 0, 0, 0, 0, 378, 379, 380, 382, 0,
	1137, 381, 621, 622, 0, 623, 0, 383, 384, 1139,
	624, 1140, 385, 386, 387, 1141, 388, 0, 0, 0,
	389, 390, 391, 392, 393, 394, 0, 395, 397, 396,
	0, 398, 625, 1142, 399, 400, 1143, 0, 401, 0,
	0, 0, 402, 403, 406, 0, 0, 404, 405, 407,
	408, 0, 409, 410, 412, 415, 411, 413, 414, 416,
	429, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 431, 0, 430, 1144, 432, 433, 434,
	439, 441, 442, 437, 438, 440, 443, 444, 436, 1145,
	435, 0, 0, 1146, 445, 446, 0, 626, 447, 627,
	449, 450, 0, 0, 451, 0, 0, 0, 453, 454,
	455, 0, 0, 456, 457, 628, 1147, 458, 1148, 629,
	459, 460, 452, 461, 462, 463, 464, 465, 466, 467,
	468, 0, 469, 470, 630, 471, 472, 473, 631, 474,
	475, 476, 632, 477, 633, 478, 479, 0, 480, 481,
	0, 482, 483, 484, 485, 486, 487, 488, 634, 489,
	491, 490, 492, 0, 493, 0, 494, 495, 496, 0,
	0, 0, 0, 497, 0, 499, 500, 501, 498, 502,
	503, 504, 505, 0, 506, 507, 508, 1149, 509, 510,
	511, 512, 635, 513, 0, 514, 515, 521, 522, 516,
	517, 523, 524, 525, 526, 527, 0, 529, 530, 528,
	531, 532, 533, 0, 534, 535, 518, 519, 536, 537,
	1150, 538, 539, 540, 541, 542, 543, 636, 0, 544,
	0, 545, 546, 547, 548, 520, 549, 554, 637, 550,
	551, 552, 553, 638, 556, 0, 557, 558, 0, 555,
	0, 559, 560, 561, 562, 563, 564, 565, 343, 566,
	0, 567, 639, 640, 641, 642, 0, 576, 0, 568,
	569, 570, 643, 571, 644, 0, 572, 573, 574, 575,
	0, 577, 578, 0, 0, 579, 580, 581, 583, 584,
	582, 585, 0, 586, 0, 0, 587, 588, 589, 645,
	646, 647, 0, 591, 590, 592, 648, 1272, 1960, 0,
	0, 593, 594, 649, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	598, 0, 0, 0, 0, 273, 274, 1134, 275, 276,
	277, 278, 279, 599, 600, 0, 280, 601, 281, 602,
	0, 603, 282, 283, 284, 285, 286, 287, 0, 0,
	0, 288, 604, 605, 606, 0, 289, 290, 607, 0,
	1277, 0, 291, 292, 293, 294, 295, 296, 297, 0,
	0, 299, 300, 301, 298, 302, 0, 303, 0, 304,
	305, 306, 307, 308, 309, 0, 310, 311, 312, 1135,
	313, 314, 0, 0, 0, 0, 0, 0, 0, 315,
	316, 317, 318, 0, 319, 608, 609, 2000, 323, 320,
	321, 0, 324, 322, 0, 325, 326, 327, 0, 0,
	328, 329, 330, 0, 331, 332, 0, 333, 334, 335,
	0, 336, 337, 610, 338, 339, 340, 342, 344, 341,
	345, 346, 347, 348, 611, 612, 349, 0, 260, 0,
	0, 0, 0, 0, 350, 351, 352, 613, 0, 0,
	0, 353, 0, 354, 0, 0, 1136, 355, 356, 614,
	615, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	365, 616, 0, 617, 366, 0, 367, 368, 369, 370,
	371, 618, 619, 620, 448, 1138, 372, 373, 0, 374,
	375, 376, 377, 0, 0, 0, 0, 378, 379, 380,
	382, 0, 1137, 381, 621, 622, 0, 623, 0, 383,
	384, 1139, 624, 1140, 385, 386, 387, 1141, 388, 0,
	0, 0, 389, 390, 391, 392, 393, 394, 0, 395,
	397, 396, 0, 398, 625, 1142, 399, 400, 1143, 0,
	401, 0, 0, 0, 402, 403, 406, 0, 0, 404,
	405, 407, 408, 0, 409, 410, 412, 415, 411, 413,
	414, 416, 429, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 431, 0, 430, 1144, 432,
	433, 434, 439, 441, 442, 437, 438, 440, 443, 444,
	436, 1145, 435, 0, 0, 1146, 445, 446, 0, 626,
	447, 627, 449, 450, 0, 0, 451, 0, 0, 0,
	453, 454, 455, 0, 0, 456, 457, 628, 1147, 458,
	1148, 629, 459, 460, 452, 461, 462, 463, 464, 465,
	466, 467, 468, 0, 469, 470, 630, 471, 472, 473,
	631, 474, 475, 476, 632, 477, 633, 478, 479, 0,
	480, 481, 0, 482, 483, 484, 485, 486, 487, 488,
	634, 489, 491, 490, 492, 0, 493, 0, 494, 495,
	496, 0, 0, 0, 0, 497, 0, 499, 500, 501,
	498, 502, 503, 504, 505, 0, 506, 507, 508, 1149,
	509, 510, 511, 512, 635, 513, 0, 514, 515, 521,
	522, 516, 517, 523, 524, 525, 526, 527, 0, 529,
	530, 528, 531, 532, 533, 0, 534, 535, 518, 519,
	536, 537, 1150, 538, 539, 540, 541, 542, 543, 636,
	0, 544, 0, 545, 546, 547, 548, 520, 549, 554,
	637, 550, 551, 552, 553, 638, 556, 0, 557, 558,
	0, 555, 0, 559, 560, 561, 562, 563, 564, 565,
	343, 566, 0, 567, 639, 640, 641, 642, 0, 576,
	0, 568, 569, 570, 643, 571, 644, 0, 572, 573,
	574, 575, 0, 577, 578, 0, 0, 579, 580, 581,
	583, 584, 582, 585, 0, 586, 0, 0, 587, 588,
	589, 645, 646, 647, 0, 591, 590, 592, 648, 1272,
	1271, 0, 0, 593, 594, 649, 595, 596, 597, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 598, 0, 0, 0, 0, 273, 274, 1134,
	275, 276, 277, 278, 279, 599, 600, 0, 280, 601,
	281, 602, 0, 603, 282, 283, 284, 285, 286, 287,
	0, 0, 0, 288, 604, 605, 606, 0, 289, 290,
	607, 0, 1277, 0, 291, 292, 293, 294, 295, 296,
	297, 0, 0, 299, 300, 301, 298, 302, 0, 303,
	0, 304, 305, 306, 307, 308, 309, 0, 310, 311,
	312, 1135, 313, 314, 0, 0, 0, 0, 0, 0,
	0, 315, 316, 317, 318, 0, 319, 608, 609, 0,
	323, 320, 321, 0, 324, 322, 0, 325, 326, 327,
	0, 0, 328, 329, 330, 0, 331, 332, 0, 333,
	334, 335, 0, 336, 337, 610, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 611, 612, 349, 0,
	260, 0, 0, 0, 0, 0, 350, 351, 352, 613,
	0, 0, 0, 353, 0, 354, 0, 0, 1136, 355,
	356, 614, 615, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 365, 616, 0, 617, 366, 0, 367, 368,
	369, 370, 371, 618, 619, 620, 448, 1138, 372, 373,
	0, 374, 375, 376, 377, 0, 0, 0, 0, 378,
	379, 380, 382, 0, 1137, 381, 621, 622, 0, 623,
	0, 383, 384, 1139, 624, 1140, 385, 386, 387, 1141,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	0, 395, 397, 396, 0, 398, 625, 1142, 399, 400,
	1143, 0, 401, 0, 0, 0, 402, 403, 406, 0,
	0, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	1144, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 1145, 435, 0, 0, 1146, 445, 446,
	0, 626, 447, 627, 449, 450, 0, 0, 451, 0,
	0, 0, 453, 454, 455, 0, 0, 456, 457, 628,
	1147, 458, 1148, 629, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 0, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 632, 477, 633, 478,
	479, 0, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 634, 489, 491, 490, 492, 0, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 0, 506, 507,
	508, 1149, 509, 510, 511, 512, 635, 513, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	0, 529, 530, 528, 531, 532, 533, 0, 534, 535,
	518, 519, 536, 537, 1150, 538, 539, 540, 541, 542,
	543, 636, 0, 544, 0, 545, 546, 547, 548, 520,
	549, 554, 637, 550, 551, 552, 553, 638, 556, 0,
	557, 558, 0, 555, 0, 559, 560, 561, 562, 563,
	564, 565, 343, 566, 0, 567, 639, 640, 641, 642,
	0, 576, 0, 568, 569, 570, 643, 571, 644, 0,
	572, 573, 574, 575, 0, 577, 578, 0, 0, 579,
	580, 581, 583, 584, 582, 585, 0, 586, 0, 0,
	587, 588, 589, 645, 646, 647, 1272, 591, 590, 592,
	648, 0, 0, 0, 0, 593, 594, 649, 595, 596,
	597, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 598,
	0, 0, 0, 0, 273, 274, 1134, 275, 276, 277,
	278, 279, 599, 600, 0, 280, 601, 281, 602, 0,
	603, 282, 283, 284, 285, 286, 287, 0, 0, 0,
	288, 604, 605, 606, 0, 289, 290, 607, 0, 1277,
	0, 291, 292, 293, 294, 295, 296, 297, 0, 0,
	299, 300, 301, 298, 302, 0, 303, 0, 304, 305,
	306, 307, 308, 309, 0, 310, 311, 312, 1135, 313,
	314, 0, 0, 0, 0, 0, 0, 0, 315, 316,
	317, 318, 0, 319, 608, 609, 0, 323, 320, 321,
	0, 324, 322, 0, 325, 326, 327, 0, 0, 328,
	329, 330, 0, 331, 332, 0, 333, 334, 335, 0,
	336, 337, 610, 338, 339, 340, 342, 344, 341, 345,
	346, 347, 348, 611, 612, 349, 0, 260, 0, 0,
	0, 0, 0, 350, 351, 352, 613, 0, 0, 0,
	353, 0, 354, 0, 0, 1136, 355, 356, 614, 615,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 365,
	616, 0, 617, 366, 0, 367, 368, 369, 370, 371,
	618, 619, 620, 448, 1138, 372, 373, 0, 374, 375,
	376, 377, 0, 0, 0, 0, 378, 379, 380, 382,
	0, 1137, 381, 621, 622, 0, 623, 0, 383, 384,
	1139, 624, 1140, 385, 386, 387, 1141, 388, 0, 0,
	0, 389, 390, 391, 392, 393, 394, 0, 395, 397,
	396, 0, 398, 625, 1142, 399, 400, 1143, 0, 401,
	0, 0, 0, 402, 403, 406, 0, 0, 404, 405,
	407, 408, 0, 409, 410, 412, 415, 411, 413, 414,
	416, 429, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 431, 0, 430, 1144, 432, 433,
	434, 439, 441, 442, 437, 438, 440, 443, 444, 436,
	1145, 435, 0, 0, 1146, 445, 446, 0, 626, 447,
	627, 449, 450, 0, 0, 451, 0, 0, 0, 453,
	454, 455, 0, 0, 456, 457, 628, 1147, 458, 1148,
	629, 459, 460, 452, 461, 462, 463, 464, 465, 466,
	467, 468, 0, 469, 470, 630, 471, 472, 473, 631,
	474, 475, 476, 632, 477, 633, 478, 479, 0, 480,
	481, 0, 482, 483, 484, 485, 486, 487, 488, 634,
	489, 491, 490, 492, 0, 493, 0, 494, 495, 496,
	0, 0, 0, 0, 497, 0, 499, 500, 501, 498,
	502, 503, 504, 505, 0, 506, 507, 508, 1149, 509,
	510, 511, 512, 635, 513, 0, 514, 515, 521, 522,
	516, 517, 523, 524, 525, 526, 527, 0, 529, 530,
	528, 531, 532, 533, 0, 534, 535, 518, 519, 536,
	537, 1150, 538, 539, 540, 541, 542, 543, 636, 0,
	544, 0, 545, 546, 547, 548, 520, 549, 554, 637,
	550, 551, 552, 553, 638, 556, 0, 557, 558, 0,
	555, 0, 559, 560, 561, 562, 563, 564, 565, 343,
	566, 0, 567, 639, 640, 641, 642, 0, 576, 0,
	568, 569, 570, 643, 571, 644, 0, 572, 573, 574,
	575, 0, 577, 578, 0, 0, 579, 580, 581, 583,
	584, 582, 585, 0, 586, 0, 0, 587, 588, 589,
	645, 646, 647, 257, 591, 590, 592, 648, 0, 0,
	0, 0, 593, 594, 649, 595, 596, 597, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 598, 0, 0, 0,
	0, 273, 274, 0, 275, 276, 277, 278, 279, 599,
	600, 0, 280, 601, 281, 602, 0, 603, 282, 283,
	284, 285, 286, 287, 0, 0, 0, 288, 604, 605,
	606, 2686, 289, 290, 607, 0, 0, 0, 291, 292,
	293, 294, 295, 296, 297, 0, 0, 299, 300, 301,
	298, 302, 2683, 303, 0, 304, 305, 306, 307, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 0, 0,
	0, 0, 0, 0, 0, 315, 316, 317, 318, 0,
	319, 608, 609, 0, 323, 320, 321, 0, 324, 322,
	0, 325, 326, 327, 0, 0, 328, 329, 330, 0,
	331, 332, 0, 333, 334, 335, 0, 2690, 337, 610,
	338, 339, 340, 342, 344, 341, 345, 346, 347, 348,
	611, 612, 349, 0, 2881, 0, 0, 0, 0, 0,
	350, 351, 352, 613, 0, 0, 0, 353, 0, 354,
	2689, 0, 0, 355, 356, 614, 615, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 365, 616, 0, 617,
	366, 0, 367, 368, 369, 370, 371, 618, 619, 620,
	448, 0, 372, 373, 0, 374, 375, 376, 377, 0,
	0, 0, 2878, 378, 379, 380, 382, 0, 0, 381,
	621, 622, 0, 623, 0, 383, 2880, 0, 624, 0,
	385, 386, 387, 0, 388, 0, 0, 0, 389, 390,
	391, 392, 393, 394, 0, 395, 397, 396, 0, 398,
	625, 0, 399, 400, 2877, 0, 401, 0, 0, 0,
	402, 403, 406, 0, 0, 404, 405, 407, 408, 0,
	409, 410, 412, 415, 411, 413, 414, 416, 429, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 431, 0, 430, 0, 432, 433, 434, 439, 441,
	442, 437, 438, 440, 443, 444, 436, 0, 435, 0,
	0, 0, 445, 446, 0, 626, 447, 627, 449, 450,
	0, 0, 451, 0, 0, 0, 453, 454, 455, 0,
	0, 456, 457, 628, 0, 458, 0, 629, 459, 460,
	452, 461, 462, 463, 464, 465, 466, 467, 468, 0,
	469, 470, 630, 471, 472, 473, 631, 474, 475, 476,
	632, 477, 633, 478, 479, 2688, 480, 481, 0, 482,
	483, 484, 485, 486, 487, 488, 634, 489, 491, 490,
	492, 0, 493, 0, 494, 495, 496, 0, 0, 0,
	0, 497, 0, 499, 500, 501, 498, 502, 503, 504,
	505, 0, 506, 507, 508, 0, 509, 510, 511, 512,
	635, 513, 0, 514, 515, 521, 522, 516, 517, 523,
	524, 525, 526, 527, 0, 529, 530, 528, 531, 532,
	533, 0, 534, 535, 518, 519, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 636, 0, 544, 0, 545,
	546, 547, 548, 520, 549, 554, 637, 550, 551, 552,
	553, 638, 556, 0, 557, 558, 0, 555, 0, 559,
	560, 561, 562, 563, 564, 565, 343, 566, 0, 567,
	639, 640, 641, 642, 0, 576, 0, 568, 569, 570,
	643, 571, 644, 0, 572, 573, 574, 575, 0, 577,
	578, 0, 2879, 579, 580, 581, 583, 584, 582, 585,
	0, 586, 0, 0, 587, 588, 589, 645, 646, 647,
	257, 591, 590, 592, 648, 0, 0, 0, 0, 593,
	594, 649, 595, 596, 597, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 598, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 599, 600, 0, 280,
	601, 281, 602, 0, 603, 282, 283, 284, 285, 286,
	287, 0, 0, 0, 288, 604, 605, 606, 2686, 289,
	290, 607, 0, 0, 2680, 291, 292, 293, 294, 295,
	296, 297, 0, 0, 299, 300, 301, 298, 302, 2683,
	303, 0, 304, 305, 306, 307, 308, 309, 0, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	0, 0, 315, 316, 317, 318, 0, 319, 608, 609,
	0, 323, 320, 321, 0, 324, 322, 0, 325, 326,
	327, 0, 0, 328, 329, 330, 0, 331, 332, 0,
	333, 334, 335, 0, 2690, 337, 610, 338, 339, 340,
	342, 344, 341, 345, 346, 347, 348, 611, 612, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	613, 0, 0, 0, 353, 0, 354, 2689, 0, 0,
	355, 356, 614, 615, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 365, 616, 0, 617, 366, 0, 367,
	368, 369, 370, 371, 2679, 619, 620, 448, 0, 372,
	373, 0, 374, 375, 376, 377, 0, 0, 0, 0,
	378, 379, 380, 382, 0, 0, 381, 621, 622, 0,
	623, 0, 383, 384, 0, 624, 0, 385, 386, 387,
	0, 388, 0, 0, 0, 389, 390, 391, 392, 393,
	394, 0, 395, 397, 396, 0, 398, 625, 0, 399,
	400, 0, 0, 401, 0, 0, 0, 402, 403, 406,
	0, 0, 404, 405, 407, 408, 0, 409, 410, 412,
	415, 411, 413, 414, 416, 429, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 431, 0,
	430, 0, 432, 433, 434, 439, 441, 442, 437, 438,
	440, 443, 444, 436, 0, 435, 0, 0, 0, 445,
	446, 0, 626, 447, 627, 449, 450, 0, 0, 451,
	0, 0, 0, 453, 454, 455, 0, 0, 456, 457,
	628, 0, 458, 0, 629, 459, 460, 452, 461, 462,
	463, 464, 465, 466, 467, 468, 0, 469, 470, 630,
	471, 472, 473, 631, 474, 475, 476, 632, 477, 633,
	478, 479, 2688, 480, 481, 0, 482, 483, 484, 485,
	486, 487, 488, 634, 489, 491, 490, 492, 0, 493,
	0, 494, 495, 496, 0, 0, 0, 0, 497, 0,
	499, 500, 501, 498, 502, 503, 504, 505, 0, 506,
	507, 508, 0, 509, 510, 511, 512, 635, 513, 0,
	514, 515, 521, 522, 516, 517, 523, 524, 525, 526,
	527, 0, 529, 530, 528, 531, 532, 533, 0, 534,
	535, 518, 519, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 636, 0, 544, 0, 545, 546, 547, 548,
	520, 549, 554, 637, 550, 551, 552, 553, 638, 556,
	0, 557, 558, 0, 555, 0, 559, 560, 561, 562,
	563, 564, 565, 343, 566, 0, 567, 639, 640, 641,
	642, 0, 576, 0, 568, 569, 570, 643, 571, 644,
	0, 572, 573, 574, 575, 0, 577, 578, 0, 2687,
	579, 580, 581, 583, 584, 582, 585, 0, 586, 0,
	0, 587, 588, 589, 645, 646, 647, 0, 591, 590,
	592, 648, 1659, 0, 257, 0, 593, 594, 649, 595,
	596, 597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 598, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	599, 600, 0, 280, 601, 281, 602, 0, 603, 282,
	283, 284, 285, 286, 287, 0, 0, 0, 288, 604,
	605, 606, 0, 289, 290, 607, 0, 0, 0, 291,
	292, 293, 294, 295, 296, 297, 0, 0, 299, 300,
	301, 298, 302, 0, 303, 0, 304, 305, 306, 307,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 0, 0, 315, 316, 317, 318,
	0, 319, 608, 609, 0, 323, 320, 321, 0, 324,
	322, 0, 325, 326, 327, 0, 0, 328, 329, 330,
	0, 331, 332, 0, 333, 334, 335, 0, 336, 337,
	610, 338, 339, 340, 342, 344, 341, 345, 346, 347,
	348, 611, 612, 349, 0, 260, 0, 0, 0, 0,
	0, 350, 351, 352, 613, 0, 0, 0, 353, 0,
	354, 0, 0, 0, 355, 356, 614, 615, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 365, 616, 0,
	617, 366, 0, 367, 368, 369, 370, 371, 618, 619,
	620, 448, 0, 372, 373, 0, 374, 375, 376, 377,
	0, 0, 0, 261, 378, 379, 380, 382, 0, 0,
	381, 621, 622, 0, 623, 0, 383, 384, 0, 624,
	0, 385, 386, 387, 0, 388, 0, 0, 0, 389,
	390, 391, 392, 393, 394, 0, 395, 397, 396, 0,
	398, 625, 0, 399, 400, 0, 0, 401, 0, 0,
	0, 402, 403, 406, 0, 0, 404, 405, 407, 408,
	0, 409, 410, 412, 415, 411, 413, 414, 416, 429,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 431, 0, 430, 0, 432, 433, 434, 439,
	441, 442, 437, 438, 440, 443, 444, 436, 0, 435,
	0, 262, 0, 445, 446, 0, 626, 447, 627, 449,
	450, 0, 0, 451, 0, 0, 0, 453, 454, 455,
	0, 0, 456, 457, 628, 0, 458, 0, 629, 459,
	460, 452, 461, 462, 463, 464, 465, 466, 467, 468,
	0, 469, 470, 630, 471, 472, 473, 631, 474, 475,
	476, 632, 477, 633, 478, 479, 0, 480, 481, 0,
	482, 483, 484, 485, 486, 487, 488, 634, 489, 491,
	490, 492, 0, 493, 0, 494, 495, 496, 0, 0,
	0, 0, 497, 0, 499, 500, 501, 498, 502, 503,
	504, 505, 0, 506, 507, 508, 0, 509, 510, 511,
	512, 635, 513, 0, 514, 515, 521, 522, 516, 517,
	523, 524, 525, 526, 527, 0, 1662, 530, 528, 531,
	532, 533, 0, 534, 535, 518, 519, 536, 537, 0,
	538, 539, 540, 541, 542, 543, 636, 0, 544, 0,
	545, 546, 547, 548, 520, 549, 554, 637, 550, 551,
	552, 553, 638, 556, 0, 557, 558, 0, 555, 1660,
	559, 560, 561, 562, 563, 564, 565, 343, 566, 0,
	567, 639, 640, 641, 642, 0, 576, 0, 568, 569,
	570, 643, 571, 644, 0, 572, 573, 574, 575, 0,
	577, 578, 0, 0, 579, 580, 581, 583, 584, 582,
	585, 0, 586, 0, 0, 587, 588, 589, 645, 646,
	647, 0, 1661, 590, 592, 648, 1418, 0, 257, 0,
	593, 594, 649, 595, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 598, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 599, 600, 0, 280, 601, 281,
	602, 0, 603, 282, 283, 284, 285, 286, 287, 0,
	0, 0, 288, 604, 605, 606, 0, 289, 290, 607,
	0, 0, 0, 291, 292, 293, 294, 295, 296, 297,
	0, 0, 299, 300, 301, 298, 302, 0, 303, 0,
	304, 305, 306, 307, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 0, 0,
	315, 316, 317, 318, 0, 319, 608, 609, 0, 323,
	320, 321, 0, 324, 322, 0, 325, 326, 327, 0,
	0, 328, 329, 330, 0, 331, 332, 0, 333, 334,
	335, 0, 336, 337, 610, 338, 339, 340, 342, 344,
	341, 345, 346, 347, 348, 611, 612, 349, 0, 260,
	0, 0, 0, 0, 0, 350, 351, 352, 613, 0,
	0, 0, 353, 0, 354, 0, 0, 0, 355, 356,
	614, 615, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 365, 616, 0, 617, 366, 0, 367, 368, 369,
	370, 371, 1420, 619, 620, 448, 0, 372, 373, 0,
	374, 375, 376, 377, 0, 0, 0, 261, 378, 379,
	380, 382, 0, 0, 381, 621, 622, 0, 623, 0,
	383, 384, 0, 624, 0, 385, 386, 387, 0, 388,
	0, 0, 0, 389, 390, 391, 392, 393, 394, 0,
	395, 397, 396, 0, 398, 625, 0, 399, 400, 0,
	0, 401, 0, 0, 0, 402, 403, 406, 0, 0,
	404, 405, 407, 408, 0, 409, 410, 412, 415, 411,
	413, 414, 416, 429, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 431, 0, 430, 0,
	432, 433, 434, 439, 441, 442, 437, 438, 440, 443,
	444, 436, 0, 435, 0, 262, 0, 445, 446, 0,
	626, 447, 627, 449, 450, 0, 0, 451, 0, 0,
	1184, 453, 454, 455, 0, 0, 456, 457, 628, 0,
	458, 0, 629, 459, 460, 452, 461, 462, 463, 464,
	465, 466, 467, 468, 0, 469, 470, 630, 471, 472,
	473, 631, 474, 475, 476, 632, 477, 633, 478, 479,
	0, 480, 481, 0, 482, 483, 484, 485, 486, 487,
	488, 634, 489, 491, 490, 492, 0, 493, 0, 494,
	495, 496, 0, 0, 0, 0, 497, 0, 499, 500,
	501, 498, 502, 503, 504, 505, 0, 506, 507, 508,
	0, 509, 510, 511, 512, 635, 513, 0, 514, 515,
	521, 522, 516, 517, 523, 524, 525, 526, 527, 0,
	529, 530, 528, 531, 532, 533, 0, 534, 535, 518,
	519, 536, 537, 0, 538, 539, 540, 541, 542, 543,
	636, 0, 544, 0, 545, 546, 547, 548, 520, 549,
	554, 637, 550, 551, 552, 553, 638, 556, 0, 557,
	558, 0, 555, 0, 559, 560, 561, 562, 563, 564,
	565, 343, 566, 0, 567, 639, 640, 641, 642, 0,
	576, 0, 568, 569, 570, 643, 571, 644, 0, 572,
	573, 574, 575, 0, 577, 578, 0, 0, 579, 580,
	581, 583, 584, 582, 585, 0, 586, 0, 0, 587,
	588, 589, 645, 646, 647, 0, 591, 590, 592, 648,
	1415, 0, 257, 0, 593, 594, 649, 595, 596, 597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 598, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 599, 600,
	0, 280, 601, 281, 602, 0, 603, 282, 283, 284,
	285, 286, 287, 0, 0, 0, 288, 604, 605, 606,
	0, 289, 290, 607, 0, 0, 0, 291, 292, 293,
	294, 295, 296, 297, 0, 0, 299, 300, 301, 298,
	302, 0, 303, 0, 304, 305, 306, 307, 308, 309,
	0, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 0, 0, 315, 316, 317, 318, 0, 319,
	608, 609, 0, 323, 320, 321, 0, 324, 322, 0,
	325, 326, 327, 0, 0, 328, 329, 330, 0, 331,
	332, 0, 333, 334, 335, 0, 336, 337, 610, 338,
	339, 340, 342, 344, 341, 345, 346, 347, 348, 611,
	612, 349, 0, 260, 0, 0, 0, 0, 0, 350,
	351, 352, 613, 0, 0, 0, 353, 0, 354, 0,
	0, 0, 355, 356, 614, 615, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 365, 616, 0, 617, 366,
	0, 367, 368, 369, 370, 371, 1417, 619, 620, 448,
	0, 372, 373, 0, 374, 375, 376, 377, 0, 0,
	0, 261, 378, 379, 380, 382, 0, 0, 381, 621,
	622, 0, 623, 0, 383, 384, 0, 624, 0, 385,
	386, 387, 0, 388, 0, 0, 0, 389, 390, 391,
	392, 393, 394, 0, 395, 397, 396, 0, 398, 625,
	0, 399, 400, 0, 0, 401, 0, 0, 0, 402,
	403, 406, 0, 0, 404, 405, 407, 408, 0, 409,
	410, 412, 415, 411, 413, 414, 416, 429, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	431, 0, 430, 0, 432, 433, 434, 439, 441, 442,
	437, 438, 440, 443, 444, 436, 0, 435, 0, 262,
	0, 445, 446, 0, 626, 447, 627, 449, 450, 0,
	0, 451, 0, 0, 1184, 453, 454, 455, 0, 0,
	456, 457, 628, 0, 458, 0, 629, 459, 460, 452,
	461, 462, 463, 464, 465, 466, 467, 468, 0, 469,
	470, 630, 471, 472, 473, 631, 474, 475, 476, 632,
	477, 633, 478, 479, 0, 480, 481, 0, 482, 483,
	484, 485, 486, 487, 488, 634, 489, 491, 490, 492,
	0, 493, 0, 494, 495, 496, 0, 0, 0, 0,
	497, 0, 499, 500, 501, 498, 502, 503, 504, 505,
	0, 506, 507, 508, 0, 509, 510, 511, 512, 635,
	513, 0, 514, 515, 521, 522, 516, 517, 523, 524,
	525, 526, 527, 0, 529, 530, 528, 531, 532, 533,
	0, 534, 535, 518, 519, 536, 537, 0, 538, 539,
	540, 541, 542, 543, 636, 0, 544, 0, 545, 546,
	547, 548, 520, 549, 554, 637, 550, 551, 552, 553,
	638, 556, 0, 557, 558, 0, 555, 0, 559, 560,
	561, 562, 563, 564, 565, 343, 566, 0, 567, 639,
	640, 641, 642, 0, 576, 0, 568, 569, 570, 643,
	571, 644, 0, 572, 573, 574, 575, 0, 577, 578,
	0, 0, 579, 580, 581, 583, 584, 582, 585, 0,
	586, 0, 0, 587, 588, 589, 645, 646, 647, 0,
	591, 590, 592, 648, 1323, 0, 257, 0, 593, 594,
	649, 595, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 598,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 599, 600, 0, 280, 601, 281, 602, 0,
	603, 282, 283, 284, 285, 286, 287, 0, 0, 0,
	288, 604, 605, 606, 0, 289, 290, 607, 0, 0,
	0, 291, 292, 293, 294, 295, 296, 297, 0, 0,
	299, 300, 301, 298, 302, 0, 303, 0, 304, 305,
	306, 307, 308, 309, 0, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 0, 0, 315, 316,
	317, 318, 0, 319, 608, 609, 0, 323, 320, 321,
	0, 324, 322, 0, 325, 326, 327, 0, 0, 328,
	329, 330, 0, 331, 332, 0, 333, 334, 335, 0,
	336, 337, 610, 338, 339, 340, 342, 344, 341, 345,
	346, 347, 348, 611, 612, 349, 0, 260, 0, 0,
	0, 0, 0, 350, 351, 352, 613, 0, 0, 0,
	353, 0, 354, 0, 0, 0, 355, 356, 614, 615,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 365,
	616, 0, 617, 366, 0, 367, 368, 369, 370, 371,
	1325, 619, 620, 448, 0, 372, 373, 0, 374, 375,
	376, 377, 0, 0, 0, 261, 378, 379, 380, 382,
	0, 0, 381, 621, 622, 0, 623, 0, 383, 384,
	0, 624, 0, 385, 386, 387, 0, 388, 0, 0,
	0, 389, 390, 391, 392, 393, 394, 0, 395, 397,
	396, 0, 398, 625, 0, 399, 400, 0, 0, 401,
	0, 0, 0, 402, 403, 406, 0, 0, 404, 405,
	407, 408, 0, 409, 410, 412, 415, 411, 413, 414,
	416, 429, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 431, 0, 430, 0, 432, 433,
	434, 439, 441, 442, 437, 438, 440, 443, 444, 436,
	0, 435, 0, 262, 0, 445, 446, 0, 626, 447,
	627, 449, 450, 0, 0, 451, 0, 0, 1184, 453,
	454, 455, 0, 0, 456, 457, 628, 0, 458, 0,
	629, 459, 460, 452, 461, 462, 463, 464, 465, 466,
	467, 468, 0, 469, 470, 630, 471, 472, 473, 631,
	474, 475, 476, 632, 477, 633, 478, 479, 0, 480,
	481, 0, 482, 483, 484, 485, 486, 487, 488, 634,
	489, 491, 490, 492, 0, 493, 0, 494, 495, 496,
	0, 0, 0, 0, 497, 0, 499, 500, 501, 498,
	502, 503, 504, 505, 0, 506, 507, 508, 0, 509,
	510, 511, 512, 635, 513, 0, 514, 515, 521, 522,
	516, 517, 523, 524, 525, 526, 527, 0, 529, 530,
	528, 531, 532, 533, 0, 534, 535, 518, 519, 536,
	537, 0, 538, 539, 540, 541, 542, 543, 636, 0,
	544, 0, 545, 546, 547, 548, 520, 549, 554, 637,
	550, 551, 552, 553, 638, 556, 0, 557, 558, 0,
	555, 0, 559, 560, 561, 562, 563, 564, 565, 343,
	566, 0, 567, 639, 640, 641, 642, 0, 576, 0,
	568, 569, 570, 643, 571, 644, 0, 572, 573, 574,
	575, 0, 577, 578, 0, 0, 579, 580, 581, 583,
	584, 582, 585, 0, 586, 0, 0, 587, 588, 589,
	645, 646, 647, 0, 591, 590, 592, 648, 681, 0,
	257, 0, 593, 594, 649, 595, 596, 597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 680, 268, 269, 270, 670, 271, 272, 0, 0,
	0, 0, 0, 598, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 599, 600, 0, 280,
	601, 281, 602, 0, 603, 282, 283, 284, 285, 286,
	287, 0, 0, 0, 288, 604, 605, 606, 0, 289,
	290, 607, 0, 0, 0, 291, 292, 293, 294, 295,
	296, 297, 0, 0, 299, 300, 301, 298, 302, 0,
	303, 0, 304, 305, 306, 307, 308, 309, 673, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	0, 0, 315, 316, 317, 318, 0, 319, 608, 609,
	0, 323, 320, 321, 0, 324, 322, 0, 325, 326,
	327, 0, 0, 328, 329, 330, 0, 331, 332, 0,
	333, 334, 335, 0, 336, 337, 610, 338, 339, 340,
	342, 344, 341, 345, 346, 347, 348, 611, 612, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	613, 0, 0, 0, 353, 0, 354, 0, 0, 0,
	355, 356, 614, 615, 357, 358, 359, 360, 361, 362,
	363, 364, 674, 365, 616, 0, 617, 366, 0, 367,
	368, 369, 370, 371, 618, 619, 620, 448, 0, 372,
	373, 0, 374, 375, 376, 377, 0, 0, 0, 0,
	378, 379, 380, 382, 0, 0, 381, 621, 622, 0,
	623, 0, 383, 384, 0, 624, 0, 385, 386, 387,
	0, 388, 0, 0, 0, 389, 390, 391, 392, 393,
	394, 0, 395, 397, 396, 0, 398, 625, 0, 399,
	400, 0, 0, 401, 0, 0, 0, 402, 403, 406,
	0, 0, 404, 405, 407, 408, 0, 409, 410, 412,
	415, 411, 413, 414, 416, 429, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 431, 0,
	430, 0, 432, 433, 434, 439, 441, 442, 437, 438,
	440, 443, 444, 436, 0, 435, 0, 0, 0, 445,
	446, 0, 626, 447, 627, 449, 450, 0, 0, 451,
	0, 0, 0, 453, 454, 455, 0, 0, 456, 457,
	628, 0, 458, 0, 629, 459, 460, 452, 461, 462,
	463, 464, 465, 466, 467, 468, 0, 469, 470, 630,
	471, 472, 473, 631, 474, 475, 476, 632, 477, 633,
	478, 479, 0, 480, 481, 0, 482, 483, 484, 485,
	486, 487, 488, 634, 489, 491, 490, 492, 0, 493,
	0, 494, 495, 496, 0, 0, 0, 0, 497, 0,
	499, 500, 501, 498, 502, 503, 504, 505, 0, 506,
	507, 508, 0, 509, 510, 511, 512, 635, 513, 0,
	514, 515, 521, 522, 516, 517, 523, 524, 525, 526,
	527, 675, 529, 530, 528, 531, 532, 533, 0, 534,
	535, 518, 519, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 636, 0, 544, 0, 545, 546, 547, 548,
	520, 549, 554, 637, 550, 551, 552, 553, 638, 556,
	0, 557, 558, 0, 555, 0, 559, 560, 561, 562,
	563, 564, 565, 343, 566, 0, 567, 639, 640, 641,
	642, 0, 576, 0, 568, 569, 570, 643, 571, 644,
	0, 572, 573, 574, 575, 0, 577, 578, 0, 0,
	579, 580, 581, 583, 584, 582, 585, 0, 586, 0,
	0, 587, 588, 589, 645, 646, 647, 0, 591, 590,
	592, 648, 669, 0, 257, 0, 593, 594, 649, 595,
	596, 597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 670,
	271, 272, 0, 0, 0, 0, 0, 598, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	599, 600, 0, 280, 601, 281, 602, 0, 603, 282,
	283, 284, 285, 286, 287, 0, 0, 0, 288, 604,
	605, 606, 0, 289, 290, 607, 0, 0, 0, 291,
	292, 293, 294, 295, 296, 297, 0, 0, 299, 300,
	301, 298, 302, 0, 303, 0, 304, 305, 306, 307,
	308, 309, 673, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 0, 0, 315, 316, 317, 318,
	0, 319, 608, 609, 0, 323, 320, 321, 0, 324,
	322, 0, 325, 326, 327, 0, 0, 328, 329, 330,
	0, 331, 332, 0, 333, 334, 335, 0, 336, 337,
	610, 338, 339, 340, 342, 344, 341, 345, 346, 347,
	348, 611, 612, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 613, 0, 0, 0, 353, 0,
	354, 0, 0, 0, 355, 356, 614, 615, 357, 358,
	359, 360, 361, 362, 363, 364, 674, 365, 616, 0,
	617, 366, 0, 367, 368, 369, 370, 371, 618, 619,
	620, 448, 0, 372, 373, 0, 374, 375, 376, 377,
	0, 0, 0, 0, 378, 379, 380, 382, 0, 0,
	381, 621, 622, 0, 623, 0, 383, 384, 0, 624,
	0, 385, 386, 387, 0, 388, 0, 0, 0, 389,
	390, 391, 392, 393, 394, 0, 395, 397, 396, 0,
	398, 625, 0, 399, 400, 0, 0, 401, 0, 0,
	0, 402, 403, 406, 0, 0, 404, 405, 407, 408,
	0, 409, 410, 412, 415, 411, 413, 414, 416, 429,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 431, 0, 430, 0, 432, 433, 434, 439,
	441, 442, 437, 438, 440, 443, 444, 436, 0, 435,
	0, 0, 0, 445, 446, 0, 626, 447, 627, 449,
	450, 0, 0, 451, 0, 0, 0, 453, 454, 455,
	0, 0, 456, 457, 628, 0, 458, 0, 629, 459,
	460, 452, 461, 462, 463, 464, 465, 466, 467, 468,
	0, 469, 470, 630, 471, 472, 473, 631, 474, 475,
	476, 632, 477, 633, 478, 479, 0, 480, 481, 0,
	482, 483, 484, 485, 486, 487, 488, 634, 489, 491,
	490, 492, 0, 493, 0, 494, 495, 496, 0, 0,
	0, 0, 497, 0, 499, 500, 501, 498, 502, 503,
	504, 505, 0, 506, 507, 508, 0, 509, 510, 511,
	512, 635, 513, 0, 514, 515, 521, 522, 516, 517,
	523, 524, 525, 526, 527, 675, 529, 530, 528, 531,
	532, 533, 0, 534, 535, 518, 519, 536, 537, 0,
	538, 539, 540, 541, 542, 543, 636, 0, 544, 0,
	545, 546, 547, 548, 520, 549, 554, 637, 550, 551,
	552, 553, 638, 556, 0, 557, 558, 0, 555, 0,
	559, 560, 561, 562, 563, 564, 565, 343, 566, 0,
	567, 639, 640, 641, 642, 0, 576, 0, 568, 569,
	570, 643, 571, 644, 0, 572, 573, 574, 575, 0,
	577, 578, 0, 0, 579, 580, 581, 583, 584, 582,
	585, 0, 586, 0, 0, 587, 588, 589, 645, 646,
	647, 257, 591, 590, 592, 648, 0, 0, 0, 0,
	593, 594, 649, 595, 596, 597, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 598, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 599, 600, 0,
	280, 601, 281, 602, 0, 603, 282, 283, 284, 285,
	286, 287, 0, 0, 0, 288, 604, 605, 606, 0,
	289, 290, 607, 0, 0, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 0, 0, 0, 0,
	0, 0, 0, 315, 316, 317, 318, 0, 319, 608,
	609, 0, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 329, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 610, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 611, 612,
	349, 0, 260, 0, 0, 0, 0, 0, 350, 351,
	352, 613, 0, 0, 0, 353, 0, 354, 0, 0,
	0, 355, 356, 614, 615, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 616, 0, 617, 366, 0,
	367, 368, 369, 370, 371, 618, 619, 620, 448, 0,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	261, 378, 379, 380, 382, 0, 0, 381, 621, 622,
	0, 623, 0, 383, 384, 0, 624, 0, 385, 386,
	387, 0, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 395, 397, 396, 0, 398, 625, 0,
	399, 400, 0, 0, 401, 0, 0, 0, 402, 403,
	406, 0, 0, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 0, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 0, 435, 0, 262, 0,
	445, 446, 0, 626, 447, 627, 449, 450, 0, 0,
	451, 0, 0, 1184, 453, 454, 455, 0, 0, 456,
	457, 628, 0, 458, 0, 629, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 632, 477,
	633, 478, 479, 0, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 634, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 0, 509, 510, 511, 512, 635, 513,
	0, 514, 515, 521, 522, 516, 517, 523, 524, 525,
	526, 527, 0, 529, 530, 528, 531, 532, 533, 0,
	534, 535, 518, 519, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 636, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 637, 550, 551, 552, 553, 638,
	556, 0, 557, 558, 0, 555, 0, 559, 560, 561,
	562, 563, 564, 565, 343, 566, 0, 567, 639, 640,
	641, 642, 0, 576, 0, 568, 569, 570, 643, 571,
	644, 0, 572, 573, 574, 575, 0, 577, 578, 0,
	0, 579, 580, 581, 583, 584, 582, 585, 0, 586,
	0, 0, 587, 588, 589, 645, 646, 647, 257, 591,
	590, 592, 648, 0, 0, 0, 0, 593, 594, 649,
	595, 596, 597, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 598, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 599, 600, 0, 280, 601, 281,
	602, 0, 603, 282, 283, 284, 285, 286, 287, 0,
	0, 0, 288, 604, 605, 606, 0, 289, 290, 607,
	0, 0, 0, 291, 292, 293, 294, 295, 296, 297,
	0, 0, 299, 300, 301, 298, 302, 0, 303, 0,
	304, 305, 306, 307, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 0, 0,
	315, 316, 317, 318, 0, 319, 608, 609, 0, 323,
	320, 321, 0, 324, 322, 0, 325, 326, 327, 0,
	0, 328, 329, 330, 0, 331, 332, 0, 333, 334,
	335, 0, 336, 337, 610, 338, 339, 340, 342, 344,
	341, 345, 346, 347, 348, 611, 612, 349, 0, 260,
	0, 0, 0, 0, 0, 350, 351, 352, 613, 0,
	0, 0, 353, 0, 354, 0, 0, 0, 355, 356,
	614, 615, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 365, 616, 0, 617, 366, 0, 367, 368, 369,
	370, 371, 618, 619, 620, 448, 0, 372, 373, 0,
	374, 375, 376, 377, 0, 0, 0, 261, 378, 379,
	380, 382, 0, 0, 381, 621, 622, 0, 623, 0,
	383, 384, 0, 624, 0, 385, 386, 387, 0, 388,
	0, 0, 0, 389, 390, 391, 392, 393, 394, 0,
	395, 397, 396, 0, 398, 625, 0, 399, 400, 0,
	0, 401, 0, 0, 0, 402, 403, 406, 0, 0,
	404, 405, 407, 408, 0, 409, 410, 412, 415, 411,
	413, 414, 416, 429, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 431, 0, 430, 0,
	432, 433, 434, 439, 441, 442, 437, 438, 440, 443,
	444, 436, 3284, 435, 0, 262, 0, 445, 446, 0,
	626, 447, 627, 449, 450, 0, 0, 451, 0, 0,
	0, 453, 454, 455, 0, 0, 456, 457, 628, 0,
	458, 0, 629, 459, 460, 452, 461, 462, 463, 464,
	465, 466, 467, 468, 0, 469, 470, 630, 471, 472,
	473, 631, 474, 475, 476, 632, 477, 633, 478, 479,
	0, 480, 481, 0, 482, 483, 484, 485, 486, 487,
	488, 634, 489, 491, 490, 492, 0, 493, 0, 494,
	495, 496, 0, 0, 0, 0, 497, 0, 499, 500,
	501, 498, 502, 503, 504, 505, 0, 506, 507, 508,
	0, 509, 510, 511, 512, 635, 513, 0, 514, 515,
	521, 522, 516, 517, 523, 524, 525, 526, 527, 0,
	529, 530, 528, 531, 532, 533, 0, 534, 535, 518,
	519, 536, 537, 0, 538, 539, 540, 541, 542, 543,
	636, 0, 544, 0, 545, 546, 547, 548, 520, 549,
	554, 637, 550, 551, 552, 553, 638, 556, 0, 557,
	558, 0, 555, 0, 559, 560, 561, 562, 563, 564,
	565, 343, 566, 0, 567, 639, 640, 641, 642, 0,
	576, 0, 568, 569, 570, 643, 571, 644, 0, 572,
	573, 574, 575, 0, 577, 578, 0, 0, 579, 580,
	581, 583, 584, 582, 585, 0, 586, 0, 0, 587,
	588, 589, 645, 646, 647, 0, 591, 590, 592, 648,
	2827, 0, 257, 0, 593, 594, 649, 595, 596, 597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 598, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 599, 600,
	0, 280, 601, 281, 602, 0, 603, 282, 283, 284,
	285, 286, 287, 0, 0, 0, 288, 604, 605, 606,
	0, 289, 290, 607, 0, 0, 0, 291, 292, 293,
	294, 295, 296, 297, 0, 0, 299, 300, 301, 298,
	302, 0, 303, 0, 304, 305, 306, 307, 308, 309,
	0, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 0, 0, 315, 316, 317, 318, 0, 319,
	608, 609, 0, 323, 320, 321, 0, 324, 322, 0,
	325, 326, 327, 0, 0, 328, 329, 330, 0, 331,
	332, 0, 333, 334, 335, 0, 336, 337, 610, 338,
	339, 340, 342, 344, 341, 345, 346, 347, 348, 611,
	612, 349, 0, 260, 0, 0, 0, 0, 0, 350,
	351, 352, 613, 0, 0, 0, 353, 0, 354, 0,
	0, 0, 355, 356, 614, 615, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 365, 616, 0, 617, 366,
	0, 367, 368, 369, 370, 371, 2826, 619, 620, 448,
	0, 372, 373, 0, 374, 375, 376, 377, 0, 0,
	0, 261, 378, 379, 380, 382, 0, 0, 381, 621,
	622, 0, 623, 0, 383, 384, 0, 624, 0, 385,
	386, 387, 0, 388, 0, 0, 0, 389, 390, 391,
	392, 393, 394, 0, 395, 397, 396, 0, 398, 625,
	0, 399, 400, 0, 0, 401, 0, 0, 0, 402,
	403, 406, 0, 0, 404, 405, 407, 408, 0, 409,
	410, 412, 415, 411, 413, 414, 416, 429, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	431, 0, 430, 0, 432, 433, 434, 439, 441, 442,
	437, 438, 440, 443, 444, 436, 0, 435, 0, 262,
	0, 445, 446, 0, 626, 447, 627, 449, 450, 0,
	0, 451, 0, 0, 0, 453, 454, 455, 0, 0,
	456, 457, 628, 0, 458, 0, 629, 459, 460, 452,
	461, 462, 463, 464, 465, 466, 467, 468, 0, 469,
	470, 630, 471, 472, 473, 631, 474, 475, 476, 632,
	477, 633, 478, 479, 0, 480, 481, 0, 482, 483,
	484, 485, 486, 487, 488, 634, 489, 491, 490, 492,
	0, 493, 0, 494, 495, 496, 0, 0, 0, 0,
	497, 0, 499, 500, 501, 498, 502, 503, 504, 505,
	0, 506, 507, 508, 0, 509, 510, 511, 512, 635,
	513, 0, 514, 515, 521, 522, 516, 517, 523, 524,
	525, 526, 527, 0, 529, 530, 528, 531, 532, 533,
	0, 534, 535, 518, 519, 536, 537, 0, 538, 539,
	540, 541, 542, 543, 636, 0, 544, 0, 545, 546,
	547, 548, 520, 549, 554, 637, 550, 551, 552, 553,
	638, 556, 0, 557, 558, 0, 555, 0, 559, 560,
	561, 562, 563, 564, 565, 343, 566, 0, 567, 639,
	640, 641, 642, 0, 576, 0, 568, 569, 570, 643,
	571, 644, 0, 572, 573, 574, 575, 0, 577, 578,
	0, 0, 579, 580, 581, 583, 584, 582, 585, 0,
	586, 0, 0, 587, 588, 589, 645, 646, 647, 0,
	591, 590, 592, 648, 2203, 0, 257, 0, 593, 594,
	649, 595, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 598,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 599, 600, 0, 280, 601, 281, 602, 0,
	603, 282, 283, 284, 285, 286, 287, 0, 0, 0,
	288, 604, 605, 606, 0, 289, 290, 607, 0, 0,
	0, 291, 292, 293, 294, 295, 296, 297, 0, 0,
	299, 300, 301, 298, 302, 0, 303, 0, 304, 305,
	306, 307, 308, 309, 0, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 0, 0, 315, 316,
	317, 318, 0, 319, 608, 609, 0, 323, 320, 321,
	0, 324, 322, 0, 325, 326, 327, 0, 0, 328,
	329, 330, 0, 331, 332, 0, 333, 334, 335, 0,
	336, 337, 610, 338, 339, 340, 342, 344, 341, 345,
	346, 347, 348, 611, 612, 349, 0, 260, 0, 0,
	0, 0, 0, 350, 351, 352, 613, 0, 0, 0,
	353, 0, 354, 0, 0, 0, 355, 356, 614, 615,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 365,
	616, 0, 617, 366, 0, 367, 368, 369, 370, 371,
	618, 619, 620, 448, 0, 372, 373, 0, 374, 375,
	376, 377, 0, 0, 0, 261, 378, 379, 380, 382,
	0, 0, 381, 621, 622, 0, 623, 0, 383, 384,
	0, 624, 0, 385, 386, 387, 0, 388, 0, 0,
	0, 389, 390, 391, 392, 393, 394, 0, 395, 397,
	396, 0, 398, 625, 0, 399, 400, 0, 0, 401,
	0, 0, 0, 402, 403, 406, 0, 0, 404, 405,
	407, 408, 0, 409, 410, 412, 415, 411, 413, 414,
	416, 429, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 431, 0, 430, 0, 432, 433,
	434, 439, 441, 442, 437, 438, 440, 443, 444, 436,
	0, 435, 0, 262, 0, 445, 446, 0, 626, 447,
	627, 449, 450, 0, 0, 451, 0, 0, 0, 453,
	454, 455, 0, 0, 456, 457, 628, 0, 458, 0,
	629, 459, 460, 452, 461, 462, 463, 464, 465, 466,
	467, 468, 0, 469, 470, 630, 471, 472, 473, 631,
	474, 475, 476, 632, 477, 633, 478, 479, 0, 480,
	481, 0, 482, 483, 484, 485, 486, 487, 488, 634,
	489, 491, 490, 492, 0, 493, 0, 494, 495, 496,
	0, 0, 0, 0, 497, 0, 499, 500, 501, 498,
	502, 503, 504, 505, 0, 506, 507, 508, 0, 509,
	510, 511, 512, 635, 513, 0, 514, 515, 521, 522,
	516, 517, 523, 524, 525, 526, 527, 0, 529, 530,
	528, 531, 532, 533, 0, 534, 535, 518, 519, 536,
	537, 0, 538, 539, 540, 541, 542, 543, 636, 0,
	544, 0, 545, 546, 547, 548, 520, 549, 554, 637,
	550, 551, 552, 553, 638, 556, 0, 557, 558, 0,
	555, 0, 559, 560, 561, 562, 563, 564, 565, 343,
	566, 0, 567, 639, 640, 641, 642, 0, 576, 0,
	568, 569, 570, 643, 571, 644, 0, 572, 573, 574,
	575, 0, 577, 578, 0, 0, 579, 580, 581, 583,
	584, 582, 585, 0, 586, 0, 0, 587, 588, 589,
	645, 646, 647, 257, 591, 590, 592, 648, 0, 0,
	0, 0, 593, 594, 649, 595, 596, 597, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 598, 0, 0, 0,
	0, 273, 274, 0, 275, 276, 277, 278, 279, 599,
	600, 0, 280, 601, 281, 602, 0, 603, 282, 283,
	284, 285, 286, 287, 0, 0, 0, 288, 604, 605,
	606, 0, 289, 290, 607, 0, 0, 0, 291, 292,
	293, 294, 295, 296, 297, 0, 0, 299, 300, 301,
	298, 302, 0, 303, 0, 304, 305, 306, 307, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 0, 0,
	0, 0, 0, 0, 0, 315, 316, 317, 318, 0,
	319, 608, 609, 0, 323, 320, 321, 0, 324, 322,
	0, 325, 326, 327, 0, 0, 328, 329, 330, 0,
	331, 332, 0, 333, 334, 335, 0, 336, 337, 610,
	338, 339, 340, 342, 344, 341, 345, 346, 347, 348,
	611, 612, 349, 0, 260, 0, 0, 0, 0, 0,
	350, 351, 352, 613, 0, 0, 0, 353, 0, 354,
	0, 0, 0, 355, 356, 614, 615, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 365, 616, 0, 617,
	366, 0, 367, 368, 369, 370, 371, 618, 619, 620,
	448, 0, 372, 373, 0, 374, 375, 376, 377, 0,
	0, 0, 261, 378, 379, 380, 382, 0, 0, 381,
	621, 622, 0, 623, 0, 383, 384, 0, 624, 0,
	385, 386, 387, 0, 388, 0, 0, 0, 389, 390,
	391, 392, 393, 394, 0, 395, 397, 396, 0, 398,
	625, 0, 399, 400, 0, 0, 401, 0, 0, 0,
	402, 403, 406, 0, 0, 404, 405, 407, 408, 0,
	409, 410, 412, 415, 411, 413, 414, 416, 429, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 431, 0, 430, 0, 432, 433, 434, 439, 441,
	442, 437, 438, 440, 443, 444, 436, 0, 435, 0,
	262, 0, 445, 446, 0, 626, 447, 627, 449, 450,
	0, 0, 451, 0, 0, 0, 453, 454, 455, 0,
	0, 456, 457, 628, 0, 458, 0, 629, 459, 460,
	452, 461, 462, 463, 464, 465, 466, 467, 468, 0,
	469, 470, 630, 471, 472, 473, 631, 474, 475, 476,
	632, 477, 633, 478, 479, 0, 480, 481, 0, 482,
	483, 484, 485, 486, 487, 488, 634, 489, 491, 490,
	492, 0, 493, 0, 494, 495, 496, 0, 0, 0,
	0, 497, 0, 499, 500, 501, 498, 502, 503, 504,
	505, 0, 506, 507, 508, 0, 509, 510, 511, 512,
	635, 513, 0, 514, 515, 521, 522, 516, 517, 523,
	524, 525, 526, 527, 0, 529, 530, 528, 531, 532,
	533, 0, 534, 535, 518, 519, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 636, 0, 544, 0, 545,
	546, 547, 548, 520, 549, 554, 637, 550, 551, 552,
	553, 638, 556, 0, 557, 558, 0, 555, 2148, 559,
	560, 561, 562, 563, 564, 565, 343, 566, 0, 567,
	639, 640, 641, 642, 0, 576, 0, 568, 569, 570,
	643, 571, 644, 0, 572, 573, 574, 575, 0, 577,
	578, 0, 0, 579, 580, 581, 583, 584, 582, 585,
	0, 586, 0, 0, 587, 588, 589, 645, 646, 647,
	0, 591, 590, 592, 648, 2154, 0, 257, 0, 593,
	594, 649, 595, 596, 597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	598, 0, 0, 0, 0, 273, 274, 0, 275, 276,
	277, 278, 279, 599, 600, 0, 280, 601, 281, 602,
	0, 603, 282, 283, 284, 285, 286, 287, 0, 0,
	0, 288, 604, 605, 606, 0, 289, 290, 607, 0,
	0, 0, 291, 292, 293, 294, 295, 296, 297, 0,
	0, 299, 300, 301, 298, 302, 0, 303, 0, 304,
	305, 306, 307, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 0, 0, 0, 0, 0, 0, 0, 315,
	316, 317, 318, 0, 319, 608, 609, 0, 323, 320,
	321, 0, 324, 322, 0, 325, 326, 327, 0, 0,
	328, 329, 330, 0, 331, 332, 0, 333, 334, 335,
	0, 336, 337, 610, 338, 339, 340, 342, 344, 341,
	345, 346, 347, 348, 611, 612, 349, 0, 260, 0,
	0, 0, 0, 0, 350, 351, 352, 613, 0, 0,
	0, 353, 0, 354, 0, 0, 0, 355, 356, 614,
	615, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	365, 616, 0, 617, 366, 0, 367, 368, 369, 370,
	371, 2153, 619, 620, 448, 0, 372, 373, 0, 374,
	375, 376, 377, 0, 0, 0, 261, 378, 379, 380,
	382, 0, 0, 381, 621, 622, 0, 623, 0, 383,
	384, 0, 624, 0, 385, 386, 387, 0, 388, 0,
	0, 0, 389, 390, 391, 392, 393, 394, 0, 395,
	397, 396, 0, 398, 625, 0, 399, 400, 0, 0,
	401, 0, 0, 0, 402, 403, 406, 0, 0, 404,
	405, 407, 408, 0, 409, 410, 412, 415, 411, 413,
	414, 416, 429, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 431, 0, 430, 0, 432,
	433, 434, 439, 441, 442, 437, 438, 440, 443, 444,
	436, 0, 435, 0, 262, 0, 445, 446, 0, 626,
	447, 627, 449, 450, 0, 0, 451, 0, 0, 0,
	453, 454, 455, 0, 0, 456, 457, 628, 0, 458,
	0, 629, 459, 460, 452, 461, 462, 463, 464, 465,
	466, 467, 468, 0, 469, 470, 630, 471, 472, 473,
	631, 474, 475, 476, 632, 477, 633, 478, 479, 0,
	480, 481, 0, 482, 483, 484, 485, 486, 487, 488,
	634, 489, 491, 490, 492, 0, 493, 0, 494, 495,
	496, 0, 0, 0, 0, 497, 0, 499, 500, 501,
	498, 502, 503, 504, 505, 0, 506, 507, 508, 0,
	509, 510, 511, 512, 635, 513, 0, 514, 515, 521,
	522, 516, 517, 523, 524, 525, 526, 527, 0, 529,
	530, 528, 531, 532, 533, 0, 534, 535, 518, 519,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 636,
	0, 544, 0, 545, 546, 547, 548, 520, 549, 554,
	637, 550, 551, 552, 553, 638, 556, 0, 557, 558,
	0, 555, 0, 559, 560, 561, 562, 563, 564, 565,
	343, 566, 0, 567, 639, 640, 641, 642, 0, 576,
	0, 568, 569, 570, 643, 571, 644, 0, 572, 573,
	574, 575, 0, 577, 578, 0, 0, 579, 580, 581,
	583, 584, 582, 585, 0, 586, 0, 0, 587, 588,
	589, 645, 646, 647, 0, 591, 590, 592, 648, 2141,
	0, 257, 0, 593, 594, 649, 595, 596, 597, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 598, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 599, 600, 0,
	280, 601, 281, 602, 0, 603, 282, 283, 284, 285,
	286, 287, 0, 0, 0, 288, 604, 605, 606, 0,
	289, 290, 607, 0, 0, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 0, 0, 0, 0,
	0, 0, 0, 315, 316, 317, 318, 0, 319, 608,
	609, 0, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 329, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 610, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 611, 612,
	349, 0, 260, 0, 0, 0, 0, 0, 350, 351,
	352, 613, 0, 0, 0, 353, 0, 354, 0, 0,
	0, 355, 356, 614, 615, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 616, 0, 617, 366, 0,
	367, 368, 369, 370, 371, 2143, 619, 620, 448, 0,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	261, 378, 379, 380, 382, 0, 0, 381, 621, 622,
	0, 623, 0, 383, 384, 0, 624, 0, 385, 386,
	387, 0, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 395, 397, 396, 0, 398, 625, 0,
	399, 400, 0, 0, 401, 0, 0, 0, 402, 403,
	406, 0, 0, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 0, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 0, 435, 0, 262, 0,
	445, 446, 0, 626, 447, 627, 449, 450, 0, 0,
	451, 0, 0, 0, 453, 454, 455, 0, 0, 456,
	457, 628, 0, 458, 0, 629, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 632, 477,
	633, 478, 479, 0, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 634, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 0, 509, 510, 511, 512, 635, 513,
	0, 514, 515, 521, 522, 516, 517, 523, 524, 525,
	526, 527, 0, 529, 530, 528, 531, 532, 533, 0,
	534, 535, 518, 519, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 636, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 637, 550, 551, 552, 553, 638,
	556, 0, 557, 558, 0, 555, 0, 559, 560, 561,
	562, 563, 564, 565, 343, 566, 0, 567, 639, 640,
	641, 642, 0, 576, 0, 568, 569, 570, 643, 571,
	644, 0, 572, 573, 574, 575, 0, 577, 578, 0,
	0, 579, 580, 581, 583, 584, 582, 585, 0, 586,
	0, 0, 587, 588, 589, 645, 646, 647, 257, 591,
	590, 592, 648, 0, 0, 0, 0, 593, 594, 649,
	595, 596, 597, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 598, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 599, 600, 0, 280, 601, 281,
	602, 0, 603, 282, 283, 284, 285, 286, 287, 0,
	0, 0, 288, 604, 605, 606, 0, 289, 290, 607,
	0, 0, 0, 291, 292, 293, 294, 295, 296, 297,
	0, 0, 299, 300, 301, 298, 302, 0, 303, 0,
	304, 305, 306, 307, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 0, 0,
	315, 316, 317, 318, 0, 319, 608, 609, 0, 323,
	320, 321, 0, 324, 322, 0, 325, 326, 327, 0,
	0, 328, 329, 330, 0, 331, 332, 0, 333, 334,
	335, 0, 336, 337, 610, 338, 339, 340, 342, 344,
	341, 345, 346, 347, 348, 611, 612, 349, 0, 260,
	0, 0, 0, 0, 0, 350, 351, 352, 613, 0,
	0, 0, 353, 0, 354, 0, 0, 0, 355, 356,
	614, 615, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 365, 616, 0, 617, 366, 0, 367, 368, 369,
	370, 371, 2112, 619, 620, 448, 0, 372, 373, 0,
	374, 375, 376, 377, 0, 0, 0, 261, 378, 379,
	380, 382, 0, 0, 381, 621, 622, 0, 623, 0,
	383, 384, 0, 624, 0, 385, 386, 387, 0, 388,
	0, 0, 0, 389, 390, 391, 392, 393, 394, 0,
	395, 397, 396, 0, 398, 625, 0, 399, 400, 0,
	0, 401, 0, 0, 0, 402, 403, 406, 0, 0,
	404, 405, 407, 408, 0, 409, 410, 412, 415, 411,
	413, 414, 416, 429, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 431, 0, 430, 0,
	432, 433, 434, 439, 441, 442, 437, 438, 440, 443,
	444, 436, 0, 435, 0, 262, 0, 445, 446, 0,
	626, 447, 627, 449, 450, 0, 0, 451, 0, 0,
	1184, 453, 454, 455, 0, 0, 456, 457, 628, 0,
	458, 0, 629, 459, 460, 452, 461, 462, 463, 464,
	465, 466, 467, 468, 0, 469, 470, 630, 471, 472,
	473, 631, 474, 475, 476, 632, 477, 633, 478, 479,
	0, 480, 481, 0, 482, 483, 484, 485, 486, 487,
	488, 634, 489, 491, 490, 492, 0, 493, 0, 494,
	495, 496, 0, 0, 0, 0, 497, 0, 499, 500,
	501, 498, 502, 503, 504, 505, 0, 506, 507, 508,
	0, 509, 510, 511, 512, 635, 513, 0, 514, 515,
	521, 522, 516, 517, 523, 524, 525, 526, 527, 0,
	529, 530, 528, 531, 532, 533, 0, 534, 535, 518,
	519, 536, 537, 0, 538, 539, 540, 541, 542, 543,
	636, 0, 544, 0, 545, 546, 547, 548, 520, 549,
	554, 637, 550, 551, 552, 553, 638, 556, 0, 557,
	558, 0, 555, 0, 559, 560, 561, 562, 563, 564,
	565, 343, 566, 0, 567, 639, 640, 641, 642, 0,
	576, 0, 568, 569, 570, 643, 571, 644, 0, 572,
	573, 574, 575, 0, 577, 578, 0, 0, 579, 580,
	581, 583, 584, 582, 585, 0, 586, 0, 0, 587,
	588, 589, 645, 646, 647, 0, 591, 590, 592, 648,
	1514, 0, 257, 0, 593, 594, 649, 595, 596, 597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 598, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 599, 600,
	0, 280, 601, 281, 602, 0, 603, 282, 283, 284,
	285, 286, 287, 0, 0, 0, 288, 604, 605, 606,
	0, 289, 290, 607, 0, 0, 0, 291, 292, 293,
	294, 295, 296, 297, 0, 0, 299, 300, 301, 298,
	302, 0, 303, 0, 304, 305, 306, 307, 308, 309,
	0, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 0, 0, 315, 316, 317, 318, 0, 319,
	608, 609, 0, 323, 320, 321, 0, 324, 322, 0,
	325, 326, 327, 0, 0, 328, 329, 330, 0, 331,
	332, 0, 333, 334, 335, 0, 336, 337, 610, 338,
	339, 340, 342, 344, 341, 345, 346, 347, 348, 611,
	612, 349, 0, 260, 0, 0, 0, 0, 0, 350,
	351, 352, 613, 0, 0, 0, 353, 0, 354, 0,
	0, 0, 355, 356, 614, 615, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 365, 616, 0, 617, 366,
	0, 367, 368, 369, 370, 371, 618, 619, 620, 448,
	0, 372, 373, 0, 374, 375, 376, 377, 0, 0,
	0, 261, 378, 379, 380, 382, 0, 0, 381, 621,
	622, 0, 623, 0, 383, 384, 0, 624, 0, 385,
	386, 387, 0, 388, 0, 0, 0, 389, 390, 391,
	392, 393, 394, 0, 395, 397, 396, 0, 398, 625,
	0, 399, 400, 0, 0, 401, 0, 0, 0, 402,
	403, 406, 0, 0, 404, 405, 407, 408, 0, 409,
	410, 412, 415, 411, 413, 414, 416, 429, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	431, 0, 430, 0, 432, 433, 434, 439, 441, 442,
	437, 438, 440, 443, 444, 436, 0, 435, 0, 262,
	0, 445, 446, 0, 626, 447, 627, 449, 450, 0,
	0, 451, 0, 0, 0, 453, 454, 455, 0, 0,
	456, 457, 628, 0, 458, 0, 629, 459, 460, 452,
	461, 462, 463, 464, 465, 466, 467, 468, 0, 469,
	470, 630, 471, 472, 473, 631, 474, 475, 476, 632,
	477, 633, 478, 479, 0, 480, 481, 0, 482, 483,
	484, 485, 486, 487, 488, 634, 489, 491, 490, 492,
	0, 493, 0, 494, 495, 496, 0, 0, 0, 0,
	497, 0, 499, 500, 501, 498, 502, 503, 504, 505,
	0, 506, 507, 508, 0, 509, 510, 511, 512, 635,
	513, 0, 514, 515, 521, 522, 516, 517, 523, 524,
	525, 526, 527, 0, 529, 530, 528, 531, 532, 533,
	0, 534, 535, 518, 519, 536, 537, 0, 538, 539,
	540, 541, 542, 543, 636, 0, 544, 0, 545, 546,
	547, 548, 520, 549, 554, 637, 550, 551, 552, 553,
	638, 556, 0, 557, 558, 0, 555, 0, 559, 560,
	561, 562, 563, 564, 565, 343, 566, 0, 567, 639,
	640, 641, 642, 0, 576, 0, 568, 569, 570, 643,
	571, 644, 0, 572, 573, 574, 575, 0, 577, 578,
	0, 0, 579, 580, 581, 583, 584, 582, 585, 0,
	586, 0, 0, 587, 588, 589, 645, 646, 647, 0,
	591, 590, 592, 648, 1435, 0, 257, 0, 593, 594,
	649, 595, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 598,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 599, 600, 0, 280, 601, 281, 602, 0,
	603, 282, 283, 284, 285, 286, 287, 0, 0, 0,
	288, 604, 605, 606, 0, 289, 290, 607, 0, 0,
	0, 291, 292, 293, 294, 295, 296, 297, 0, 0,
	299, 300, 301, 298, 302, 0, 303, 0, 304, 305,
	306, 307, 308, 309, 0, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 0, 0, 315, 316,
	317, 318, 0, 319, 608, 609, 0, 323, 320, 321,
	0, 324, 322, 0, 325, 326, 327, 0, 0, 328,
	329, 330, 0, 331, 332, 0, 333, 334, 335, 0,
	336, 337, 610, 338, 339, 340, 342, 344, 341, 345,
	346, 347, 348, 611, 612, 349, 0, 260, 0, 0,
	0, 0, 0, 350, 351, 352, 613, 0, 0, 0,
	353, 0, 354, 0, 0, 0, 355, 356, 614, 615,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 365,
	616, 0, 617, 366, 0, 367, 368, 369, 370, 371,
	618, 619, 620, 448, 0, 372, 373, 0, 374, 375,
	376, 377, 0, 0, 0, 261, 378, 379, 380, 382,
	0, 0, 381, 621, 622, 0, 623, 0, 383, 384,
	0, 624, 0, 385, 386, 387, 0, 388, 0, 0,
	0, 389, 390, 391, 392, 393, 394, 0, 395, 397,
	396, 0, 398, 625, 0, 399, 400, 0, 0, 401,
	0, 0, 0, 402, 403, 406, 0, 0, 404, 405,
	407, 408, 0, 409, 410, 412, 415, 411, 413, 414,
	416, 429, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 431, 0, 430, 0, 432, 433,
	434, 439, 441, 442, 437, 438, 440, 443, 444, 436,
	0, 435, 0, 262, 0, 445, 446, 0, 626, 447,
	627, 449, 450, 0, 0, 451, 0, 0, 0, 453,
	454, 455, 0, 0, 456, 457, 628, 0, 458, 0,
	629, 459, 460, 452, 461, 462, 463, 464, 465, 466,
	467, 468, 0, 469, 470, 630, 471, 472, 473, 631,
	474, 475, 476, 632, 477, 633, 478, 479, 0, 480,
	481, 0, 482, 483, 484, 485, 486, 487, 488, 634,
	489, 491, 490, 492, 0, 493, 0, 494, 495, 496,
	0, 0, 0, 0, 497, 0, 499, 500, 501, 498,
	502, 503, 504, 505, 0, 506, 507, 508, 0, 509,
	510, 511, 512, 635, 513, 0, 514, 515, 521, 522,
	516, 517, 523, 524, 525, 526, 527, 0, 529, 530,
	528, 531, 532, 533, 0, 534, 535, 518, 519, 536,
	537, 0, 538, 539, 540, 541, 542, 543, 636, 0,
	544, 0, 545, 546, 547, 548, 520, 549, 554, 637,
	550, 551, 552, 553, 638, 556, 0, 557, 558, 0,
	555, 0, 559, 560, 561, 562, 563, 564, 565, 343,
	566, 0, 567, 639, 640, 641, 642, 0, 576, 0,
	568, 569, 570, 643, 571, 644, 0, 572, 573, 574,
	575, 0, 577, 578, 0, 0, 579, 580, 581, 583,
	584, 582, 585, 0, 586, 0, 0, 587, 588, 589,
	645, 646, 647, 0, 591, 590, 592, 648, 1428, 0,
	257, 0, 593, 594, 649, 595, 596, 597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 598, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 599, 600, 0, 280,
	601, 281, 602, 0, 603, 282, 283, 284, 285, 286,
	287, 0, 0, 0, 288, 604, 605, 606, 0, 289,
	290, 607, 0, 0, 0, 291, 292, 293, 294, 295,
	296, 297, 0, 0, 299, 300, 301, 298, 302, 0,
	303, 0, 304, 305, 306, 307, 308, 309, 0, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	0, 0, 315, 316, 317, 318, 0, 319, 608, 609,
	0, 323, 320, 321, 0, 324, 322, 0, 325, 326,
	327, 0, 0, 328, 329, 330, 0, 331, 332, 0,
	333, 334, 335, 0, 336, 337, 610, 338, 339, 340,
	342, 344, 341, 345, 346, 347, 348, 611, 612, 349,
	0, 260, 0, 0, 0, 0, 0, 350, 351, 352,
	613, 0, 0, 0, 353, 0, 354, 0, 0, 0,
	355, 356, 614, 615, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 365, 616, 0, 617, 366, 0, 367,
	368, 369, 370, 371, 1430, 619, 620, 448, 0, 372,
	373, 0, 374, 375, 376, 377, 0, 0, 0, 261,
	378, 379, 380, 382, 0, 0, 381, 621, 622, 0,
	623, 0, 383, 384, 0, 624, 0, 385, 386, 387,
	0, 388, 0, 0, 0, 389, 390, 391, 392, 393,
	394, 0, 395, 397, 396, 0, 398, 625, 0, 399,
	400, 0, 0, 401, 0, 0, 0, 402, 403, 406,
	0, 0, 404, 405, 407, 408, 0, 409, 410, 412,
	415, 411, 413, 414, 416, 429, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 431, 0,
	430, 0, 432, 433, 434, 439, 441, 442, 437, 438,
	440, 443, 444, 436, 0, 435, 0, 262, 0, 445,
	446, 0, 626, 447, 627, 449, 450, 0, 0, 451,
	0, 0, 0, 453, 454, 455, 0, 0, 456, 457,
	628, 0, 458, 0, 629, 459, 460, 452, 461, 462,
	463, 464, 465, 466, 467, 468, 0, 469, 470, 630,
	471, 472, 473, 631, 474, 475, 476, 632, 477, 633,
	478, 479, 0, 480, 481, 0, 482, 483, 484, 485,
	486, 487, 488, 634, 489, 491, 490, 492, 0, 493,
	0, 494, 495, 496, 0, 0, 0, 0, 497, 0,
	499, 500, 501, 498, 502, 503, 504, 505, 0, 506,
	507, 508, 0, 509, 510, 511, 512, 635, 513, 0,
	514, 515, 521, 522, 516, 517, 523, 524, 525, 526,
	527, 0, 529, 530, 528, 531, 532, 533, 0, 534,
	535, 518, 519, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 636, 0, 544, 0, 545, 546, 547, 548,
	520, 549, 554, 637, 550, 551, 552, 553, 638, 556,
	0, 557, 558, 0, 555, 0, 559, 560, 561, 562,
	563, 564, 565, 343, 566, 0, 567, 639, 640, 641,
	642, 0, 576, 0, 568, 569, 570, 643, 571, 644,
	0, 572, 573, 574, 575, 0, 577, 578, 0, 0,
	579, 580, 581, 583, 584, 582, 585, 0, 586, 0,
	0, 587, 588, 589, 645, 646, 647, 0, 591, 590,
	592, 648, 1256, 0, 257, 0, 593, 594, 649, 595,
	596, 597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 598, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	599, 600, 0, 280, 601, 281, 602, 0, 603, 282,
	283, 284, 285, 286, 287, 0, 0, 0, 288, 604,
	605, 606, 0, 289, 290, 607, 0, 0, 0, 291,
	292, 293, 294, 295, 296, 297, 0, 0, 299, 300,
	301, 298, 302, 0, 303, 0, 304, 305, 306, 307,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 0, 0, 315, 316, 317, 318,
	0, 319, 608, 609, 0, 323, 320, 321, 0, 324,
	322, 0, 325, 326, 327, 0, 0, 328, 329, 330,
	0, 331, 332, 0, 333, 334, 335, 0, 336, 337,
	610, 338, 339, 340, 342, 344, 341, 345, 346, 347,
	348, 611, 612, 349, 0, 260, 0, 0, 0, 0,
	0, 350, 351, 352, 613, 0, 0, 0, 353, 0,
	354, 0, 0, 0, 355, 356, 614, 615, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 365, 616, 0,
	617, 366, 0, 367, 368, 369, 370, 371, 1255, 619,
	620, 448, 0, 372, 373, 0, 374, 375, 376, 377,
	0, 0, 0, 261, 378, 379, 380, 382, 0, 0,
	381, 621, 622, 0, 623, 0, 383, 384, 0, 624,
	0, 385, 386, 387, 0, 388, 0, 0, 0, 389,
	390, 391, 392, 393, 394, 0, 395, 397, 396, 0,
	398, 625, 0, 399, 400, 0, 0, 401, 0, 0,
	0, 402, 403, 406, 0, 0, 404, 405, 407, 408,
	0, 409, 410, 412, 415, 411, 413, 414, 416, 429,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 431, 0, 430, 0, 432, 433, 434, 439,
	441, 442, 437, 438, 440, 443, 444, 436, 0, 435,
	0, 262, 0, 445, 446, 0, 626, 447, 627, 449,
	450, 0, 0, 451, 0, 0, 0, 453, 454, 455,
	0, 0, 456, 457, 628, 0, 458, 0, 629, 459,
	460, 452, 461, 462, 463, 464, 465, 466, 467, 468,
	0, 469, 470, 630, 471, 472, 473, 631, 474, 475,
	476, 632, 477, 633, 478, 479, 0, 480, 481, 0,
	482, 483, 484, 485, 486, 487, 488, 634, 489, 491,
	490, 492, 0, 493, 0, 494, 495, 496, 0, 0,
	0, 0, 497, 0, 499, 500, 501, 498, 502, 503,
	504, 505, 0, 506, 507, 508, 0, 509, 510, 511,
	512, 635, 513, 0, 514, 515, 521, 522, 516, 517,
	523, 524, 525, 526, 527, 0, 529, 530, 528, 531,
	532, 533, 0, 534, 535, 518, 519, 536, 537, 0,
	538, 539, 540, 541, 542, 543, 636, 0, 544, 0,
	545, 546, 547, 548, 520, 549, 554, 637, 550, 551,
	552, 553, 638, 556, 0, 557, 558, 0, 555, 0,
	559, 560, 561, 562, 563, 564, 565, 343, 566, 0,
	567, 639, 640, 641, 642, 0, 576, 0, 568, 569,
	570, 643, 571, 644, 0, 572, 573, 574, 575, 0,
	577, 578, 0, 0, 579, 580, 581, 583, 584, 582,
	585, 0, 586, 0, 0, 587, 588, 589, 645, 646,
	647, 0, 591, 590, 592, 648, 1246, 0, 257, 0,
	593, 594, 649, 595, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 598, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 599, 600, 0, 280, 601, 281,
	602, 0, 603, 282, 283, 284, 285, 286, 287, 0,
	0, 0, 288, 604, 605, 606, 0, 289, 290, 607,
	0, 0, 0, 291, 292, 293, 294, 295, 296, 297,
	0, 0, 299, 300, 301, 298, 302, 0, 303, 0,
	304, 305, 306, 307, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 0, 0,
	315, 316, 317, 318, 0, 319, 608, 609, 0, 323,
	320, 321, 0, 324, 322, 0, 325, 326, 327, 0,
	0, 328, 329, 330, 0, 331, 332, 0, 333, 334,
	335, 0, 336, 337, 610, 338, 339, 340, 342, 344,
	341, 345, 346, 347, 348, 611, 612, 349, 0, 260,
	0, 0, 0, 0, 0, 350, 351, 352, 613, 0,
	0, 0, 353, 0, 354, 0, 0, 0, 355, 356,
	614, 615, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 365, 616, 0, 617, 366, 0, 367, 368, 369,
	370, 371, 1245, 619, 620, 448, 0, 372, 373, 0,
	374, 375, 376, 377, 0, 0, 0, 261, 378, 379,
	380, 382, 0, 0, 381, 621, 622, 0, 623, 0,
	383, 384, 0, 624, 0, 385, 386, 387, 0, 388,
	0, 0, 0, 389, 390, 391, 392, 393, 394, 0,
	395, 397, 396, 0, 398, 625, 0, 399, 400, 0,
	0, 401, 0, 0, 0, 402, 403, 406, 0, 0,
	404, 405, 407, 408, 0, 409, 410, 412, 415, 411,
	413, 414, 416, 429, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 431, 0, 430, 0,
	432, 433, 434, 439, 441, 442, 437, 438, 440, 443,
	444, 436, 0, 435, 0, 262, 0, 445, 446, 0,
	626, 447, 627, 449, 450, 0, 0, 451, 0, 0,
	0, 453, 454, 455, 0, 0, 456, 457, 628, 0,
	458, 0, 629, 459, 460, 452, 461, 462, 463, 464,
	465, 466, 467, 468, 0, 469, 470, 630, 471, 472,
	473, 631, 474, 475, 476, 632, 477, 633, 478, 479,
	0, 480, 481, 0, 482, 483, 484, 485, 486, 487,
	488, 634, 489, 491, 490, 492, 0, 493, 0, 494,
	495, 496, 0, 0, 0, 0, 497, 0, 499, 500,
	501, 498, 502, 503, 504, 505, 0, 506, 507, 508,
	0, 509, 510, 511, 512, 635, 513, 0, 514, 515,
	521, 522, 516, 517, 523, 524, 525, 526, 527, 0,
	529, 530, 528, 531, 532, 533, 0, 534, 535, 518,
	519, 536, 537, 0, 538, 539, 540, 541, 542, 543,
	636, 0, 544, 0, 545, 546, 547, 548, 520, 549,
	554, 637, 550, 551, 552, 553, 638, 556, 0, 557,
	558, 0, 555, 0, 559, 560, 561, 562, 563, 564,
	565, 343, 566, 0, 567, 639, 640, 641, 642, 0,
	576, 0, 568, 569, 570, 643, 571, 644, 0, 572,
	573, 574, 575, 0, 577, 578, 0, 0, 579, 580,
	581, 583, 584, 582, 585, 0, 586, 0, 0, 587,
	588, 589, 645, 646, 647, 0, 591, 590, 592, 648,
	1243, 0, 257, 0, 593, 594, 649, 595, 596, 597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 598, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 599, 600,
	0, 280, 601, 281, 602, 0, 603, 282, 283, 284,
	285, 286, 287, 0, 0, 0, 288, 604, 605, 606,
	0, 289, 290, 607, 0, 0, 0, 291, 292, 293,
	294, 295, 296, 297, 0, 0, 299, 300, 301, 298,
	302, 0, 303, 0, 304, 305, 306, 307, 308, 309,
	0, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 0, 0, 315, 316, 317, 318, 0, 319,
	608, 609, 0, 323, 320, 321, 0, 324, 322, 0,
	325, 326, 327, 0, 0, 328, 329, 330, 0, 331,
	332, 0, 333, 334, 335, 0, 336, 337, 610, 338,
	339, 340, 342, 344, 341, 345, 346, 347, 348, 611,
	612, 349, 0, 260, 0, 0, 0, 0, 0, 350,
	351, 352, 613, 0, 0, 0, 353, 0, 354, 0,
	0, 0, 355, 356, 614, 615, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 365, 616, 0, 617, 366,
	0, 367, 368, 369, 370, 371, 1242, 619, 620, 448,
	0, 372, 373, 0, 374, 375, 376, 377, 0, 0,
	0, 261, 378, 379, 380, 382, 0, 0, 381, 621,
	622, 0, 623, 0, 383, 384, 0, 624, 0, 385,
	386, 387, 0, 388, 0, 0, 0, 389, 390, 391,
	392, 393, 394, 0, 395, 397, 396, 0, 398, 625,
	0, 399, 400, 0, 0, 401, 0, 0, 0, 402,
	403, 406, 0, 0, 404, 405, 407, 408, 0, 409,
	410, 412, 415, 411, 413, 414, 416, 429, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	431, 0, 430, 0, 432, 433, 434, 439, 441, 442,
	437, 438, 440, 443, 444, 436, 0, 435, 0, 262,
	0, 445, 446, 0, 626, 447, 627, 449, 450, 0,
	0, 451, 0, 0, 0, 453, 454, 455, 0, 0,
	456, 457, 628, 0, 458, 0, 629, 459, 460, 452,
	461, 462, 463, 464, 465, 466, 467, 468, 0, 469,
	470, 630, 471, 472, 473, 631, 474, 475, 476, 632,
	477, 633, 478, 479, 0, 480, 481, 0, 482, 483,
	484, 485, 486, 487, 488, 634, 489, 491, 490, 492,
	0, 493, 0, 494, 495, 496, 0, 0, 0, 0,
	497, 0, 499, 500, 501, 498, 502, 503, 504, 505,
	0, 506, 507, 508, 0, 509, 510, 511, 512, 635,
	513, 0, 514, 515, 521, 522, 516, 517, 523, 524,
	525, 526, 527, 0, 529, 530, 528, 531, 532, 533,
	0, 534, 535, 518, 519, 536, 537, 0, 538, 539,
	540, 541, 542, 543, 636, 0, 544, 0, 545, 546,
	547, 548, 520, 549, 554, 637, 550, 551, 552, 553,
	638, 556, 0, 557, 558, 0, 555, 0, 559, 560,
	561, 562, 563, 564, 565, 343, 566, 0, 567, 639,
	640, 641, 642, 0, 576, 0, 568, 569, 570, 643,
	571, 644, 0, 572, 573, 574, 575, 0, 577, 578,
	0, 0, 579, 580, 581, 583, 584, 582, 585, 0,
	586, 0, 0, 587, 588, 589, 645, 646, 647, 0,
	591, 590, 592, 648, 1238, 0, 257, 0, 593, 594,
	649, 595, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 598,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 599, 600, 0, 280, 601, 281, 602, 0,
	603, 282, 283, 284, 285, 286, 287, 0, 0, 0,
	288, 604, 605, 606, 0, 289, 290, 607, 0, 0,
	0, 291, 292, 293, 294, 295, 296, 297, 0, 0,
	299, 300, 301, 298, 302, 0, 303, 0, 304, 305,
	306, 307, 308, 309, 0, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 0, 0, 315, 316,
	317, 318, 0, 319, 608, 609, 0, 323, 320, 321,
	0, 324, 322, 0, 325, 326, 327, 0, 0, 328,
	329, 330, 0, 331, 332, 0, 333, 334, 335, 0,
	336, 337, 610, 338, 339, 340, 342, 344, 341, 345,
	346, 347, 348, 611, 612, 349, 0, 260, 0, 0,
	0, 0, 0, 350, 351, 352, 613, 0, 0, 0,
	353, 0, 354, 0, 0, 0, 355, 356, 614, 615,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 365,
	616, 0, 617, 366, 0, 367, 368, 369, 370, 371,
	1237, 619, 620, 448, 0, 372, 373, 0, 374, 375,
	376, 377, 0, 0, 0, 261, 378, 379, 380, 382,
	0, 0, 381, 621, 622, 0, 623, 0, 383, 384,
	0, 624, 0, 385, 386, 387, 0, 388, 0, 0,
	0, 389, 390, 391, 392, 393, 394, 0, 395, 397,
	396, 0, 398, 625, 0, 399, 400, 0, 0, 401,
	0, 0, 0, 402, 403, 406, 0, 0, 404, 405,
	407, 408, 0, 409, 410, 412, 415, 411, 413, 414,
	416, 429, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 431, 0, 430, 0, 432, 433,
	434, 439, 441, 442, 437, 438, 440, 443, 444, 436,
	0, 435, 0, 262, 0, 445, 446, 0, 626, 447,
	627, 449, 450, 0, 0, 451, 0, 0, 0, 453,
	454, 455, 0, 0, 456, 457, 628, 0, 458, 0,
	629, 459, 460, 452, 461, 462, 463, 464, 465, 466,
	467, 468, 0, 469, 470, 630, 471, 472, 473, 631,
	474, 475, 476, 632, 477, 633, 478, 479, 0, 480,
	481, 0, 482, 483, 484, 485, 486, 487, 488, 634,
	489, 491, 490, 492, 0, 493, 0, 494, 495, 496,
	0, 0, 0, 0, 497, 0, 499, 500, 501, 498,
	502, 503, 504, 505, 0, 506, 507, 508, 0, 509,
	510, 511, 512, 635, 513, 0, 514, 515, 521, 522,
	516, 517, 523, 524, 525, 526, 527, 0, 529, 530,
	528, 531, 532, 533, 0, 534, 535, 518, 519, 536,
	537, 0, 538, 539, 540, 541, 542, 543, 636, 0,
	544, 0, 545, 546, 547, 548, 520, 549, 554, 637,
	550, 551, 552, 553, 638, 556, 0, 557, 558, 0,
	555, 0, 559, 560, 561, 562, 563, 564, 565, 343,
	566, 0, 567, 639, 640, 641, 642, 0, 576, 0,
	568, 569, 570, 643, 571, 644, 0, 572, 573, 574,
	575, 0, 577, 578, 0, 0, 579, 580, 581, 583,
	584, 582, 585, 0, 586, 0, 0, 587, 588, 589,
	645, 646, 647, 0, 591, 590, 592, 648, 651, 0,
	257, 0, 593, 594, 649, 595, 596, 597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 598, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 599, 600, 0, 280,
	601, 281, 602, 0, 603, 282, 283, 284, 285, 286,
	287, 0, 0, 0, 288, 604, 605, 606, 0, 289,
	290, 607, 0, 0, 0, 291, 292, 293, 294, 295,
	296, 297, 0, 0, 299, 300, 301, 298, 302, 0,
	303, 0, 304, 305, 306, 307, 308, 309, 0, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	0, 0, 315, 316, 317, 318, 0, 319, 608, 609,
	0, 323, 320, 321, 0, 324, 322, 0, 325, 326,
	327, 0, 0, 328, 329, 330, 0, 331, 332, 0,
	333, 334, 335, 0, 336, 337, 610, 338, 339, 340,
	342, 344, 341, 345, 346, 347, 348, 611, 612, 349,
	0, 260, 0, 0, 0, 0, 0, 350, 351, 352,
	613, 0, 0, 0, 353, 0, 354, 0, 0, 0,
	355, 356, 614, 615, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 365, 616, 0, 617, 366, 0, 367,
	368, 369, 370, 371, 618, 619, 620, 448, 0, 372,
	373, 0, 374, 375, 376, 377, 0, 0, 0, 261,
	378, 379, 380, 382, 0, 0, 381, 621, 622, 0,
	623, 0, 383, 384, 0, 624, 0, 385, 386, 387,
	0, 388, 0, 0, 0, 389, 390, 391, 392, 393,
	394, 0, 395, 397, 396, 0, 398, 625, 0, 399,
	400, 0, 0, 401, 0, 0, 0, 402, 403, 406,
	0, 0, 404, 405, 407, 408, 0, 409, 410, 412,
	415, 411, 413, 414, 416, 429, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 431, 0,
	430, 0, 432, 433, 434, 439, 441, 442, 437, 438,
	440, 443, 444, 436, 0, 435, 0, 262, 0, 445,
	446, 0, 626, 447, 627, 449, 450, 0, 0, 451,
	0, 0, 0, 453, 454, 455, 0, 0, 456, 457,
	628, 0, 458, 0, 629, 459, 460, 452, 461, 462,
	463, 464, 465, 466, 467, 468, 0, 469, 470, 630,
	471, 472, 473, 631, 474, 475, 476, 632, 477, 633,
	478, 479, 0, 480, 481, 0, 482, 483, 484, 485,
	486, 487, 488, 634, 489, 491, 490, 492, 0, 493,
	0, 494, 495, 496, 0, 0, 0, 0, 497, 0,
	499, 500, 501, 498, 502, 503, 504, 505, 0, 506,
	507, 508, 0, 509, 510, 511, 512, 635, 513, 0,
	514, 515, 521, 522, 516, 517, 523, 524, 525, 526,
	527, 0, 529, 530, 528, 531, 532, 533, 0, 534,
	535, 518, 519, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 636, 0, 544, 0, 545, 546, 547, 548,
	520, 549, 554, 637, 550, 551, 552, 553, 638, 556,
	0, 557, 558, 0, 555, 0, 559, 560, 561, 562,
	563, 564, 565, 343, 566, 0, 567, 639, 640, 641,
	642, 0, 576, 0, 568, 569, 570, 643, 571, 644,
	0, 572, 573, 574, 575, 0, 577, 578, 0, 0,
	579, 580, 581, 583, 584, 582, 585, 0, 586, 0,
	0, 587, 588, 589, 645, 646, 647, 0, 591, 590,
	592, 648, 248, 0, 257, 0, 593, 594, 649, 595,
	596, 597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 598, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	599, 600, 0, 280, 601, 281, 602, 0, 603, 282,
	283, 284, 285, 286, 287, 0, 0, 0, 288, 604,
	605, 606, 0, 289, 290, 607, 0, 0, 0, 291,
	292, 293, 294, 295, 296, 297, 0, 0, 299, 300,
	301, 298, 302, 0, 303, 0, 304, 305, 306, 307,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 0, 0, 315, 316, 317, 318,
	0, 319, 608, 609, 0, 323, 320, 321, 0, 324,
	322, 0, 325, 326, 327, 0, 0, 328, 329, 330,
	0, 331, 332, 0, 333, 334, 335, 0, 336, 337,
	610, 338, 339, 340, 342, 344, 341, 345, 346, 347,
	348, 611, 612, 349, 0, 260, 0, 0, 0, 0,
	0, 350, 351, 352, 613, 0, 0, 0, 353, 0,
	354, 0, 0, 0, 355, 356, 614, 615, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 365, 616, 0,
	617, 366, 0, 367, 368, 369, 370, 371, 618, 619,
	620, 448, 0, 372, 373, 0, 374, 375, 376, 377,
	0, 0, 0, 261, 378, 379, 380, 382, 0, 0,
	381, 621, 622, 0, 623, 0, 383, 384, 0, 624,
	0, 385, 386, 387, 0, 388, 0, 0, 0, 389,
	390, 391, 392, 393, 394, 0, 395, 397, 396, 0,
	398, 625, 0, 399, 400, 0, 0, 401, 0, 0,
	0, 402, 403, 406, 0, 0, 404, 405, 407, 408,
	0, 409, 410, 412, 415, 411, 413, 414, 416, 429,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 431, 0, 430, 0, 432, 433, 434, 439,
	441, 442, 437, 438, 440, 443, 444, 436, 0, 435,
	0, 262, 0, 445, 446, 0, 626, 447, 627, 449,
	450, 0, 0, 451, 0, 0, 0, 453, 454, 455,
	0, 0, 456, 457, 628, 0, 458, 0, 629, 459,
	460, 452, 461, 462, 463, 464, 465, 466, 467, 468,
	0, 469, 470, 630, 471, 472, 473, 631, 474, 475,
	476, 632, 477, 633, 478, 479, 0, 480, 481, 0,
	482, 483, 484, 485, 486, 487, 488, 634, 489, 491,
	490, 492, 0, 493, 0, 494, 495, 496, 0, 0,
	0, 0, 497, 0, 499, 500, 501, 498, 502, 503,
	504, 505, 0, 506, 507, 508, 0, 509, 510, 511,
	512, 635, 513, 0, 514, 515, 521, 522, 516, 517,
	523, 524, 525, 526, 527, 0, 529, 530, 528, 531,
	532, 533, 0, 534, 535, 518, 519, 536, 537, 0,
	538, 539, 540, 541, 542, 543, 636, 0, 544, 0,
	545, 546, 547, 548, 520, 549, 554, 637, 550, 551,
	552, 553, 638, 556, 0, 557, 558, 0, 555, 0,
	559, 560, 561, 562, 563, 564, 565, 343, 566, 0,
	567, 639, 640, 641, 642, 0, 576, 0, 568, 569,
	570, 643, 571, 644, 0, 572, 573, 574, 575, 0,
	577, 578, 0, 0, 579, 580, 581, 583, 584, 582,
	585, 0, 586, 0, 0, 587, 588, 589, 645, 646,
	647, 257, 591, 590, 592, 648, 0, 0, 0, 0,
	593, 594, 649, 595, 596, 597, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 598, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 599, 600, 0,
	280, 601, 281, 602, 0, 603, 282, 283, 284, 285,
	286, 287, 0, 0, 0, 288, 604, 605, 606, 0,
	289, 290, 607, 0, 0, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 0, 0, 0, 0,
	0, 0, 0, 315, 316, 317, 318, 0, 319, 608,
	609, 0, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 329, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 610, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 611, 612,
	349, 0, 260, 0, 0, 0, 0, 0, 350, 351,
	352, 613, 0, 0, 0, 353, 0, 354, 0, 0,
	0, 355, 356, 614, 615, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 616, 0, 617, 366, 0,
	367, 368, 369, 370, 371, 618, 619, 620, 448, 0,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	261, 378, 379, 380, 382, 0, 0, 381, 621, 622,
	0, 623, 0, 383, 384, 0, 624, 0, 385, 386,
	387, 0, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 395, 397, 396, 0, 398, 625, 0,
	399, 400, 0, 0, 401, 0, 0, 0, 402, 403,
	406, 0, 0, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 0, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 0, 435, 0, 262, 0,
	445, 446, 0, 626, 447, 627, 449, 450, 0, 0,
	451, 0, 0, 0, 453, 454, 455, 0, 0, 456,
	457, 628, 0, 458, 0, 629, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 632, 477,
	633, 478, 479, 0, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 634, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 0, 509, 510, 511, 512, 635, 513,
	0, 514, 515, 521, 522, 516, 517, 523, 524, 525,
	526, 527, 0, 529, 530, 528, 531, 532, 533, 0,
	534, 535, 518, 519, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 636, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 637, 550, 551, 552, 553, 638,
	556, 0, 557, 558, 0, 555, 0, 559, 560, 561,
	562, 563, 564, 565, 343, 566, 0, 567, 639, 640,
	641, 642, 0, 576, 0, 568, 569, 570, 643, 571,
	644, 0, 572, 573, 574, 575, 0, 577, 578, 0,
	0, 579, 580, 581, 583, 584, 582, 585, 0, 586,
	0, 0, 587, 588, 589, 645, 646, 647, 257, 591,
	590, 592, 648, 0, 0, 0, 0, 593, 594, 649,
	595, 596, 597, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 598, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 599, 600, 0, 280, 601, 281,
	602, 0, 603, 282, 283, 284, 285, 286, 287, 0,
	0, 0, 288, 604, 605, 606, 0, 289, 290, 607,
	0, 0, 0, 291, 292, 293, 294, 295, 296, 297,
	0, 0, 299, 300, 301, 298, 302, 0, 303, 0,
	304, 305, 306, 307, 308, 309, 673, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 0, 0,
	315, 316, 317, 318, 0, 319, 608, 609, 0, 323,
	320, 321, 0, 324, 322, 0, 325, 326, 327, 0,
	0, 328, 329, 330, 0, 331, 332, 0, 333, 334,
	335, 0, 336, 337, 610, 338, 339, 340, 342, 344,
	341, 345, 346, 347, 348, 611, 612, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 613, 0,
	0, 0, 353, 0, 354, 0, 0, 0, 355, 356,
	614, 615, 357, 358, 359, 360, 361, 362, 363, 364,
	674, 365, 616, 0, 617, 366, 0, 367, 368, 369,
	370, 371, 618, 619, 620, 448, 0, 372, 373, 0,
	374, 375, 376, 377, 0, 0, 0, 0, 378, 379,
	380, 382, 0, 0, 381, 621, 622, 0, 623, 0,
	383, 384, 0, 624, 0, 385, 386, 387, 0, 388,
	0, 0, 0, 389, 390, 391, 392, 393, 394, 0,
	395, 397, 396, 0, 398, 625, 0, 399, 400, 0,
	0, 401, 0, 0, 0, 402, 403, 406, 0, 0,
	404, 405, 407, 408, 0, 409, 410, 412, 415, 411,
	413, 414, 416, 429, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 431, 0, 430, 0,
	432, 433, 434, 439, 441, 442, 437, 438, 440, 443,
	444, 436, 0, 435, 0, 0, 0, 445, 446, 0,
	626, 447, 627, 449, 450, 0, 0, 451, 0, 0,
	0, 453, 454, 455, 0, 0, 456, 457, 628, 0,
	458, 0, 629, 459, 460, 452, 461, 462, 463, 464,
	465, 466, 467, 468, 0, 469, 470, 630, 471, 472,
	473, 631, 474, 475, 476, 632, 477, 633, 478, 479,
	0, 480, 481, 0, 482, 483, 484, 485, 486, 487,
	488, 634, 489, 491, 490, 492, 0, 493, 0, 494,
	495, 496, 0, 0, 0, 0, 497, 0, 499, 500,
	501, 498, 502, 503, 504, 505, 0, 506, 507, 508,
	0, 509, 510, 511, 512, 635, 513, 0, 514, 515,
	521, 522, 516, 517, 523, 524, 525, 526, 527, 675,
	529, 530, 528, 531, 532, 533, 0, 534, 535, 518,
	519, 536, 537, 0, 538, 539, 540, 541, 542, 543,
	636, 0, 544, 0, 545, 546, 547, 548, 520, 549,
	554, 637, 550, 551, 552, 553, 638, 556, 0, 557,
	558, 0, 555, 0, 559, 560, 561, 562, 563, 564,
	565, 343, 566, 0, 567, 639, 640, 641, 642, 0,
	576, 0, 568, 569, 570, 643, 571, 644, 0, 572,
	573, 574, 575, 0, 577, 578, 0, 0, 579, 580,
	581, 583, 584, 582, 585, 0, 586, 0, 0, 587,
	588, 589, 645, 646, 647, 257, 591, 590, 592, 648,
	0, 0, 0, 0, 593, 594, 649, 595, 596, 597,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 598, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 599, 600, 0, 280, 601, 281, 602, 0, 603,
	282, 283, 284, 285, 286, 287, 0, 0, 0, 288,
	604, 605, 606, 0, 289, 290, 607, 0, 0, 0,
	291, 292, 293, 294, 295, 296, 297, 0, 0, 299,
	300, 301, 298, 302, 0, 303, 0, 304, 305, 306,
	307, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	0, 0, 0, 0, 0, 0, 0, 315, 316, 2239,
	318, 0, 319, 608, 609, 0, 323, 320, 321, 0,
	324, 322, 0, 325, 326, 327, 0, 0, 328, 329,
	330, 0, 331, 332, 0, 333, 334, 335, 0, 336,
	337, 610, 338, 339, 340, 342, 344, 341, 345, 346,
	347, 348, 611, 612, 349, 0, 260, 0, 0, 0,
	0, 0, 350, 351, 352, 613, 0, 0, 0, 353,
	0, 354, 0, 0, 0, 355, 356, 614, 615, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 365, 616,
	0, 617, 366, 0, 367, 368, 369, 370, 371, 618,
	619, 620, 448, 0, 372, 373, 0, 374, 375, 376,
	377, 0, 0, 0, 261, 378, 379, 380, 382, 0,
	0, 381, 621, 622, 0, 623, 0, 383, 384, 0,
	624, 0, 385, 386, 387, 0, 388, 0, 0, 0,
	389, 390, 391, 392, 393, 394, 0, 395, 397, 396,
	0, 398, 625, 0, 399, 400, 0, 0, 401, 0,
	0, 0, 402, 403, 406, 0, 0, 404, 405, 407,
	408, 0, 409, 410, 412, 415, 411, 413, 414, 416,
	429, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 431, 0, 430, 0, 432, 433, 434,
	439, 441, 442, 437, 438, 440, 443, 444, 436, 0,
	435, 0, 262, 0, 445, 446, 0, 626, 447, 627,
	449, 450, 0, 0, 451, 0, 0, 0, 453, 454,
	455, 0, 0, 456, 457, 628, 0, 458, 0, 629,
	459, 460, 452, 461, 462, 463, 464, 465, 466, 467,
	468, 0, 469, 470, 630, 471, 472, 473, 631, 474,
	475, 476, 632, 477, 633, 478, 479, 0, 480, 481,
	0, 482, 483, 484, 485, 486, 487, 488, 634, 489,
	491, 490, 492, 0, 493, 0, 494, 495, 496, 0,
	0, 0, 0, 497, 0, 499, 500, 501, 498, 502,
	503, 504, 505, 0, 506, 507, 508, 0, 509, 510,
	511, 512, 635, 513, 0, 514, 515, 521, 522, 516,
	517, 523, 524, 525, 526, 527, 0, 529, 530, 528,
	531, 532, 533, 0, 534, 535, 518, 519, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 636, 0, 544,
	0, 545, 546, 547, 548, 520, 549, 554, 637, 550,
	551, 552, 553, 638, 556, 0, 557, 558, 0, 555,
	0, 559, 560, 561, 562, 563, 564, 565, 343, 566,
	0, 567, 639, 640, 641, 642, 0, 576, 0, 568,
	569, 570, 643, 571, 644, 0, 572, 573, 574, 575,
	0, 577, 578, 0, 0, 579, 580, 581, 583, 584,
	582, 585, 0, 586, 0, 0, 587, 588, 589, 645,
	646, 647, 257, 591, 590, 592, 648, 0, 0, 0,
	0, 593, 594, 649, 595, 596, 597, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 598, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 599, 600,
	0, 280, 601, 281, 602, 0, 603, 282, 283, 284,
	285, 286, 287, 0, 0, 0, 288, 604, 605, 606,
	0, 289, 290, 607, 0, 0, 0, 291, 292, 293,
	294, 295, 296, 297, 0, 0, 299, 300, 301, 298,
	302, 0, 303, 0, 304, 305, 306, 307, 308, 309,
	0, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 0, 0, 315, 316, 2237, 318, 0, 319,
	608, 609, 0, 323, 320, 321, 0, 324, 322, 0,
	325, 326, 327, 0, 0, 328, 329, 330, 0, 331,
	332, 0, 333, 334, 335, 0, 336, 337, 610, 338,
	339, 340, 342, 344, 341, 345, 346, 347, 348, 611,
	612, 349, 0, 260, 0, 0, 0, 0, 0, 350,
	351, 352, 613, 0, 0, 0, 353, 0, 354, 0,
	0, 0, 355, 356, 614, 615, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 365, 616, 0, 617, 366,
	0, 367, 368, 369, 370, 371, 618, 619, 620, 448,
	0, 372, 373, 0, 374, 375, 376, 377, 0, 0,
	0, 261, 378, 379, 380, 382, 0, 0, 381, 621,
	622, 0, 623, 0, 383, 384, 0, 624, 0, 385,
	386, 387, 0, 388, 0, 0, 0, 389, 390, 391,
	392, 393, 394, 0, 395, 397, 396, 0, 398, 625,
	0, 399, 400, 0, 0, 401, 0, 0, 0, 402,
	403, 406, 0, 0, 404, 405, 407, 408, 0, 409,
	410, 412, 415, 411, 413, 414, 416, 429, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	431, 0, 430, 0, 432, 433, 434, 439, 441, 442,
	437, 438, 440, 443, 444, 436, 0, 435, 0, 262,
	0, 445, 446, 0, 626, 447, 627, 449, 450, 0,
	0, 451, 0, 0, 0, 453, 454, 455, 0, 0,
	456, 457, 628, 0, 458, 0, 629, 459, 460, 452,
	461, 462, 463, 464, 465, 466, 467, 468, 0, 469,
	470, 630, 471, 472, 473, 631, 474, 475, 476, 632,
	477, 633, 478, 479, 0, 480, 481, 0, 482, 483,
	484, 485, 486, 487, 488, 634, 489, 491, 490, 492,
	0, 493, 0, 494, 495, 496, 0, 0, 0, 0,
	497, 0, 499, 500, 501, 498, 502, 503, 504, 505,
	0, 506, 507, 508, 0, 509, 510, 511, 512, 635,
	513, 0, 514, 515, 521, 522, 516, 517, 523, 524,
	525, 526, 527, 0, 529, 530, 528, 531, 532, 533,
	0, 534, 535, 518, 519, 536, 537, 0, 538, 539,
	540, 541, 542, 543, 636, 0, 544, 0, 545, 546,
	547, 548, 520, 549, 554, 637, 550, 551, 552, 553,
	638, 556, 0, 557, 558, 0, 555, 0, 559, 560,
	561, 562, 563, 564, 565, 343, 566, 0, 567, 639,
	640, 641, 642, 0, 576, 0, 568, 569, 570, 643,
	571, 644, 0, 572, 573, 574, 575, 0, 577, 578,
	0, 0, 579, 580, 581, 583, 584, 582, 585, 0,
	586, 0, 0, 587, 588, 589, 645, 646, 647, 257,
	591, 590, 592, 648, 0, 0, 0, 0, 593, 594,
	649, 595, 596, 597, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 598, 0, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 599, 600, 0, 280, 601,
	281, 602, 0, 603, 282, 283, 284, 285, 286, 287,
	0, 0, 0, 288, 604, 605, 606, 0, 289, 290,
	607, 0, 0, 0, 291, 292, 293, 294, 295, 296,
	297, 0, 0, 299, 300, 301, 298, 302, 0, 303,
	0, 304, 305, 306, 307, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 0, 0, 0, 0, 0, 0,
	0, 315, 316, 2235, 318, 0, 319, 608, 609, 0,
	323, 320, 321, 0, 324, 322, 0, 325, 326, 327,
	0, 0, 328, 329, 330, 0, 331, 332, 0, 333,
	334, 335, 0, 336, 337, 610, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 611, 612, 349, 0,
	260, 0, 0, 0, 0, 0, 350, 351, 352, 613,
	0, 0, 0, 353, 0, 354, 0, 0, 0, 355,
	356, 614, 615, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 365, 616, 0, 617, 366, 0, 367, 368,
	369, 370, 371, 618, 619, 620, 448, 0, 372, 373,
	0, 374, 375, 376, 377, 0, 0, 0, 261, 378,
	379, 380, 382, 0, 0, 381, 621, 622, 0, 623,
	0, 383, 384, 0, 624, 0, 385, 386, 387, 0,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	0, 395, 397, 396, 0, 398, 625, 0, 399, 400,
	0, 0, 401, 0, 0, 0, 402, 403, 406, 0,
	0, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	0, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 0, 435, 0, 262, 0, 445, 446,
	0, 626, 447, 627, 449, 450, 0, 0, 451, 0,
	0, 0, 453, 454, 455, 0, 0, 456, 457, 628,
	0, 458, 0, 629, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 0, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 632, 477, 633, 478,
	479, 0, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 634, 489, 491, 490, 492, 0, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 0, 506, 507,
	508, 0, 509, 510, 511, 512, 635, 513, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	0, 529, 530, 528, 531, 532, 533, 0, 534, 535,
	518, 519, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 636, 0, 544, 0, 545, 546, 547, 548, 520,
	549, 554, 637, 550, 551, 552, 553, 638, 556, 0,
	557, 558, 0, 555, 0, 559, 560, 561, 562, 563,
	564, 565, 343, 566, 0, 567, 639, 640, 641, 642,
	0, 576, 0, 568, 569, 570, 643, 571, 644, 0,
	572, 573, 574, 575, 0, 577, 578, 0, 0, 579,
	580, 581, 583, 584, 582, 585, 0, 586, 0, 0,
	587, 588, 589, 645, 646, 647, 257, 591, 590, 592,
	648, 0, 0, 0, 0, 593, 594, 649, 595, 596,
	597, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 598,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 599, 600, 0, 280, 601, 281, 602, 0,
	603, 282, 283, 284, 285, 286, 287, 0, 0, 0,
	288, 604, 605, 606, 0, 289, 290, 607, 0, 0,
	0, 291, 292, 293, 294, 295, 296, 297, 0, 0,
	299, 300, 301, 298, 302, 0, 303, 0, 304, 305,
	306, 307, 308, 309, 0, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 0, 0, 315, 316,
	317, 318, 0, 319, 608, 609, 0, 323, 320, 321,
	0, 324, 322, 0, 325, 326, 327, 0, 0, 328,
	329, 330, 0, 331, 332, 0, 333, 334, 335, 0,
	336, 337, 610, 338, 339, 340, 342, 344, 341, 345,
	346, 347, 348, 611, 612, 349, 0, 260, 0, 0,
	0, 0, 0, 350, 351, 352, 613, 0, 0, 0,
	353, 0, 354, 0, 0, 0, 355, 356, 614, 615,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 365,
	616, 0, 617, 366, 0, 367, 368, 369, 370, 371,
	2160, 619, 620, 448, 0, 372, 373, 0, 374, 375,
	376, 377, 0, 0, 0, 261, 378, 379, 380, 382,
	0, 0, 381, 621, 622, 0, 623, 0, 383, 384,
	0, 624, 0, 385, 386, 387, 0, 388, 0, 0,
	0, 389, 390, 391, 392, 393, 394, 0, 395, 397,
	396, 0, 398, 625, 0, 399, 400, 0, 0, 401,
	0, 0, 0, 402, 403, 406, 0, 0, 404, 405,
	407, 408, 0, 409, 410, 412, 415, 411, 413, 414,
	416, 429, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 431, 0, 430, 0, 432, 433,
	434, 439, 441, 442, 437, 438, 440, 443, 444, 436,
	0, 435, 0, 262, 0, 445, 446, 0, 626, 447,
	627, 449, 450, 0, 0, 451, 0, 0, 0, 453,
	454, 455, 0, 0, 456, 457, 628, 0, 458, 0,
	629, 459, 460, 452, 461, 462, 463, 464, 465, 466,
	467, 468, 0, 469, 470, 630, 471, 472, 473, 631,
	474, 475, 476, 632, 477, 633, 478, 479, 0, 480,
	481, 0, 482, 483, 484, 485, 486, 487, 488, 634,
	489, 491, 490, 492, 0, 493, 0, 494, 495, 496,
	0, 0, 0, 0, 497, 0, 499, 500, 501, 498,
	502, 503, 504, 505, 0, 506, 507, 508, 0, 509,
	510, 511, 512, 635, 513, 0, 514, 515, 521, 522,
	516, 517, 523, 524, 525, 526, 527, 0, 529, 530,
	528, 531, 532, 533, 0, 534, 535, 518, 519, 536,
	537, 0, 538, 539, 540, 541, 542, 543, 636, 0,
	544, 0, 545, 546, 547, 548, 520, 549, 554, 637,
	550, 551, 552, 553, 638, 556, 0, 557, 558, 0,
	555, 0, 559, 560, 561, 562, 563, 564, 565, 343,
	566, 0, 567, 639, 640, 641, 642, 0, 576, 0,
	568, 569, 570, 643, 571, 644, 0, 572, 573, 574,
	575, 0, 577, 578, 0, 0, 579, 580, 581, 583,
	584, 582, 585, 0, 586, 0, 0, 587, 588, 589,
	645, 646, 647, 257, 591, 590, 592, 648, 0, 0,
	0, 0, 593, 594, 649, 595, 596, 597, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 598, 0, 0, 0,
	0, 273, 274, 0, 275, 276, 277, 278, 279, 599,
	600, 0, 280, 601, 281, 602, 0, 603, 282, 283,
	284, 285, 286, 287, 0, 0, 0, 288, 604, 605,
	606, 0, 289, 290, 607, 0, 0, 0, 291, 292,
	293, 294, 295, 296, 297, 0, 0, 299, 300, 301,
	298, 302, 0, 303, 0, 304, 305, 306, 307, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 0, 0,
	0, 0, 0, 0, 0, 315, 316, 317, 318, 0,
	319, 608, 609, 0, 323, 320, 321, 0, 324, 322,
	0, 325, 326, 327, 0, 0, 328, 329, 330, 0,
	331, 332, 0, 333, 334, 335, 0, 336, 337, 610,
	338, 339, 340, 342, 344, 341, 345, 346, 347, 348,
	611, 612, 349, 0, 260, 0, 0, 0, 0, 0,
	350, 351, 352, 613, 0, 0, 0, 353, 0, 354,
	0, 0, 0, 355, 356, 614, 615, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 365, 616, 0, 617,
	366, 0, 367, 368, 369, 370, 371, 1979, 619, 620,
	448, 0, 372, 373, 0, 374, 375, 376, 377, 0,
	0, 0, 261, 378, 379, 380, 382, 0, 0, 381,
	621, 622, 0, 623, 0, 383, 384, 0, 624, 0,
	385, 386, 387, 0, 388, 0, 0, 0, 389, 390,
	391, 392, 393, 394, 0, 395, 397, 396, 0, 398,
	625, 0, 399, 400, 0, 0, 401, 0, 0, 0,
	402, 403, 406, 0, 0, 404, 405, 407, 408, 0,
	409, 410, 412, 415, 411, 413, 414, 416, 429, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 431, 0, 430, 0, 432, 433, 434, 439, 441,
	442, 437, 438, 440, 443, 444, 436, 0, 435, 0,
	262, 0, 445, 446, 0, 626, 447, 627, 449, 450,
	0, 0, 451, 0, 0, 0, 453, 454, 455, 0,
	0, 456, 457, 628, 0, 458, 0, 629, 459, 460,
	452, 461, 462, 463, 464, 465, 466, 467, 468, 0,
	469, 470, 630, 471, 472, 473, 631, 474, 475, 476,
	632, 477, 633, 478, 479, 0, 480, 481, 0, 482,
	483, 484, 485, 486, 487, 488, 634, 489, 491, 490,
	492, 0, 493, 0, 494, 495, 496, 0, 0, 0,
	0, 497, 0, 499, 500, 501, 498, 502, 503, 504,
	505, 0, 506, 507, 508, 0, 509, 510, 511, 512,
	635, 513, 0, 514, 515, 521, 522, 516, 517, 523,
	524, 525, 526, 527, 0, 529, 530, 528, 531, 532,
	533, 0, 534, 535, 518, 519, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 636, 0, 544, 0, 545,
	546, 547, 548, 520, 549, 554, 637, 550, 551, 552,
	553, 638, 556, 0, 557, 558, 0, 555, 0, 559,
	560, 561, 562, 563, 564, 565, 343, 566, 0, 567,
	639, 640, 641, 642, 0, 576, 0, 568, 569, 570,
	643, 571, 644, 0, 572, 573, 574, 575, 0, 577,
	578, 0, 0, 579, 580, 581, 583, 584, 582, 585,
	0, 586, 0, 0, 587, 588, 589, 645, 646, 647,
	257, 591, 590, 592, 648, 0, 0, 0, 0, 593,
	594, 649, 595, 596, 597, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 598, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 599, 600, 0, 280,
	601, 281, 602, 0, 603, 282, 283, 284, 285, 286,
	287, 0, 0, 0, 288, 604, 605, 606, 0, 289,
	290, 607, 0, 0, 0, 291, 292, 293, 294, 295,
	296, 297, 0, 0, 299, 300, 301, 298, 302, 0,
	303, 0, 304, 305, 306, 307, 308, 309, 0, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	0, 0, 315, 316, 317, 318, 0, 319, 608, 609,
	0, 323, 320, 321, 0, 324, 322, 0, 325, 326,
	327, 0, 0, 328, 329, 330, 0, 331, 332, 0,
	333, 334, 335, 0, 336, 337, 610, 338, 339, 340,
	342, 344, 341, 345, 346, 347, 348, 611, 612, 349,
	0, 260, 0, 0, 0, 0, 0, 350, 351, 352,
	613, 0, 0, 0, 353, 0, 354, 0, 0, 0,
	355, 356, 614, 615, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 365, 616, 0, 617, 366, 0, 367,
	368, 369, 370, 371, 1973, 619, 620, 448, 0, 372,
	373, 0, 374, 375, 376, 377, 0, 0, 0, 261,
	378, 379, 380, 382, 0, 0, 381, 621, 622, 0,
	623, 0, 383, 384, 0, 624, 0, 385, 386, 387,
	0, 388, 0, 0, 0, 389, 390, 391, 392, 393,
	394, 0, 395, 397, 396, 0, 398, 625, 0, 399,
	400, 0, 0, 401, 0, 0, 0, 402, 403, 406,
	0, 0, 404, 405, 407, 408, 0, 409, 410, 412,
	415, 411, 413, 414, 416, 429, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 431, 0,
	430, 0, 432, 433, 434, 439, 441, 442, 437, 438,
	440, 443, 444, 436, 0, 435, 0, 262, 0, 445,
	446, 0, 626, 447, 627, 449, 450, 0, 0, 451,
	0, 0, 0, 453, 454, 455, 0, 0, 456, 457,
	628, 0, 458, 0, 629, 459, 460, 452, 461, 462,
	463, 464, 465, 466, 467, 468, 0, 469, 470, 630,
	471, 472, 473, 631, 474, 475, 476, 632, 477, 633,
	478, 479, 0, 480, 481, 0, 482, 483, 484, 485,
	486, 487, 488, 634, 489, 491, 490, 492, 0, 493,
	0, 494, 495, 496, 0, 0, 0, 0, 497, 0,
	499, 500, 501, 498, 502, 503, 504, 505, 0, 506,
	507, 508, 0, 509, 510, 511, 512, 635, 513, 0,
	514, 515, 521, 522, 516, 517, 523, 524, 525, 526,
	527, 0, 529, 530, 528, 531, 532, 533, 0, 534,
	535, 518, 519, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 636, 0, 544, 0, 545, 546, 547, 548,
	520, 549, 554, 637, 550, 551, 552, 553, 638, 556,
	0, 557, 558, 0, 555, 0, 559, 560, 561, 562,
	563, 564, 565, 343, 566, 0, 567, 639, 640, 641,
	642, 0, 576, 0, 568, 569, 570, 643, 571, 644,
	0, 572, 573, 574, 575, 0, 577, 578, 0, 0,
	579, 580, 581, 583, 584, 582, 585, 0, 586, 0,
	0, 587, 588, 589, 645, 646, 647, 0, 591, 590,
	592, 648, 847, 0, 257, 0, 593, 594, 649, 595,
	596, 597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 598, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	599, 600, 0, 280, 601, 281, 602, 0, 603, 282,
	283, 284, 285, 286, 287, 0, 0, 0, 288, 604,
	605, 606, 0, 289, 290, 607, 0, 0, 0, 291,
	292, 293, 294, 295, 296, 297, 0, 0, 299, 300,
	301, 298, 302, 0, 303, 0, 304, 305, 306, 307,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 0, 0, 315, 316, 317, 318,
	0, 319, 608, 609, 0, 323, 320, 321, 0, 324,
	322, 0, 325, 326, 327, 0, 0, 328, 329, 330,
	0, 331, 332, 0, 333, 334, 335, 0, 336, 337,
	610, 338, 339, 340, 342, 344, 341, 345, 346, 347,
	348, 611, 612, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 613, 0, 0, 0, 353, 0,
	354, 0, 0, 0, 355, 356, 614, 615, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 365, 616, 0,
	617, 366, 0, 367, 368, 369, 370, 371, 618, 619,
	620, 448, 0, 372, 373, 0, 374, 375, 376, 377,
	0, 0, 0, 0, 378, 379, 380, 382, 0, 0,
	381, 621, 622, 0, 623, 846, 383, 384, 0, 624,
	0, 385, 386, 387, 0, 388, 0, 0, 0, 389,
	390, 391, 392, 393, 394, 0, 395, 397, 396, 0,
	398, 625, 0, 399, 400, 0, 0, 401, 0, 0,
	0, 402, 403, 406, 0, 0, 404, 405, 407, 408,
	0, 409, 410, 412, 415, 411, 413, 414, 416, 429,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 431, 0, 430, 0, 432, 433, 434, 439,
	441, 442, 437, 438, 440, 443, 444, 436, 0, 435,
	0, 0, 0, 445, 446, 0, 626, 447, 627, 449,
	450, 0, 0, 451, 0, 0, 0, 453, 454, 455,
	0, 0, 456, 457, 628, 0, 458, 0, 629, 459,
	460, 452, 461, 462, 463, 464, 465, 466, 467, 468,
	0, 469, 470, 630, 471, 472, 473, 631, 474, 475,
	476, 632, 477, 633, 478, 479, 0, 480, 481, 0,
	482, 483, 484, 485, 486, 487, 488, 634, 489, 491,
	490, 492, 0, 493, 0, 494, 495, 496, 0, 0,
	0, 0, 497, 0, 499, 500, 501, 498, 502, 503,
	504, 505, 0, 506, 507, 508, 0, 509, 510, 511,
	512, 635, 513, 0, 514, 515, 521, 522, 516, 517,
	523, 524, 525, 526, 527, 0, 529, 530, 528, 531,
	532, 533, 0, 534, 535, 518, 519, 536, 537, 0,
	538, 539, 540, 541, 542, 543, 636, 0, 544, 0,
	545, 546, 547, 548, 520, 549, 554, 637, 550, 551,
	552, 553, 638, 556, 0, 557, 558, 0, 555, 845,
	559, 560, 561, 562, 563, 564, 565, 343, 566, 0,
	567, 639, 640, 641, 642, 0, 576, 0, 568, 569,
	570, 643, 571, 644, 0, 572, 573, 574, 575, 0,
	577, 578, 0, 0, 579, 580, 581, 583, 584, 582,
	585, 0, 586, 0, 0, 587, 588, 589, 645, 646,
	647, 257, 591, 590, 592, 648, 0, 0, 0, 0,
	593, 594, 649, 595, 596, 597, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 598, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 599, 600, 0,
	280, 601, 281, 602, 0, 603, 282, 283, 284, 285,
	286, 287, 0, 0, 0, 288, 604, 605, 606, 0,
	289, 290, 607, 0, 0, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 0, 0, 0, 0,
	0, 0, 0, 315, 316, 317, 318, 0, 319, 608,
	609, 0, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 329, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 610, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 611, 612,
	349, 0, 2881, 0, 0, 0, 0, 0, 350, 351,
	352, 613, 0, 0, 0, 353, 0, 354, 0, 0,
	0, 355, 356, 614, 615, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 616, 0, 617, 366, 0,
	367, 368, 369, 370, 371, 618, 619, 620, 448, 0,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	0, 378, 379, 380, 382, 0, 0, 381, 621, 622,
	0, 623, 0, 383, 384, 0, 624, 0, 385, 386,
	387, 0, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 395, 397, 396, 0, 398, 625, 0,
	399, 400, 0, 0, 401, 0, 0, 0, 402, 403,
	406, 0, 0, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 0, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 0, 435, 0, 0, 0,
	445, 446, 0, 626, 447, 627, 449, 450, 0, 0,
	451, 0, 0, 0, 453, 454, 455, 0, 0, 456,
	457, 628, 0, 458, 0, 629, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 632, 477,
	633, 478, 479, 3954, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 634, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 0, 509, 510, 511, 512, 635, 513,
	0, 514, 515, 521, 522, 516, 517, 523, 524, 525,
	526, 527, 0, 529, 530, 528, 531, 532, 533, 0,
	534, 535, 518, 519, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 636, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 637, 550, 551, 552, 553, 638,
	556, 0, 557, 558, 0, 555, 0, 559, 560, 561,
	562, 563, 564, 565, 343, 566, 0, 567, 639, 640,
	641, 642, 0, 576, 0, 568, 569, 570, 643, 571,
	644, 0, 572, 573, 574, 575, 0, 577, 578, 0,
	0, 579, 580, 581, 583, 584, 582, 585, 0, 586,
	0, 0, 587, 588, 589, 645, 646, 647, 257, 591,
	590, 592, 648, 0, 0, 0, 0, 593, 594, 649,
	595, 596, 597, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 598, 0, 0, 0, 0, 3621, 274, 0, 275,
	276, 277, 278, 279, 599, 600, 0, 280, 601, 281,
	602, 0, 603, 282, 283, 284, 285, 286, 287, 0,
	0, 0, 288, 604, 605, 606, 0, 289, 290, 607,
	0, 0, 0, 291, 292, 293, 294, 295, 296, 297,
	0, 0, 299, 300, 301, 298, 302, 0, 303, 0,
	304, 305, 306, 307, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 0, 0,
	315, 316, 317, 318, 0, 319, 608, 609, 0, 323,
	320, 321, 0, 324, 322, 0, 325, 326, 327, 0,
	0, 328, 329, 330, 0, 331, 332, 0, 333, 334,
	335, 0, 336, 337, 610, 338, 339, 340, 342, 344,
	341, 345, 346, 347, 348, 611, 612, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 613, 0,
	0, 0, 353, 0, 354, 0, 0, 0, 355, 356,
	614, 615, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 365, 616, 0, 617, 366, 0, 367, 368, 369,
	370, 371, 618, 619, 620, 448, 0, 372, 373, 0,
	374, 375, 376, 377, 0, 0, 0, 0, 378, 379,
	380, 382, 0, 0, 381, 621, 622, 0, 623, 0,
	383, 384, 0, 624, 0, 385, 386, 387, 0, 388,
	0, 0, 0, 389, 390, 391, 392, 393, 394, 0,
	395, 397, 396, 0, 398, 625, 0, 399, 400, 0,
	0, 401, 0, 0, 0, 402, 403, 406, 0, 0,
	404, 405, 407, 408, 0, 409, 410, 412, 415, 411,
	413, 414, 416, 429, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 431, 0, 430, 0,
	432, 433, 434, 439, 441, 442, 437, 438, 440, 443,
	444, 436, 3622, 435, 0, 0, 0, 445, 446, 0,
	626, 447, 627, 449, 450, 0, 0, 451, 0, 0,
	0, 453, 454, 455, 0, 0, 456, 457, 628, 0,
	458, 0, 629, 459, 460, 452, 461, 462, 463, 464,
	465, 466, 467, 468, 0, 469, 470, 630, 471, 472,
	473, 631, 474, 475, 476, 632, 477, 633, 478, 479,
	0, 480, 481, 0, 482, 483, 484, 485, 486, 487,
	488, 634, 489, 491, 490, 492, 0, 493, 0, 494,
	495, 496, 0, 0, 0, 0, 497, 0, 499, 500,
	501, 498, 502, 503, 504, 505, 0, 506, 507, 508,
	0, 509, 510, 511, 512, 3624, 513, 0, 514, 515,
	521, 522, 516, 517, 523, 524, 525, 526, 527, 0,
	529, 530, 528, 531, 532, 533, 0, 534, 535, 518,
	519, 536, 537, 0, 538, 539, 540, 541, 542, 543,
	636, 0, 544, 0, 545, 546, 547, 548, 520, 549,
	554, 637, 550, 551, 552, 553, 638, 556, 0, 557,
	558, 0, 555, 0, 559, 560, 561, 562, 563, 564,
	565, 343, 566, 0, 567, 639, 640, 641, 642, 3620,
	576, 0, 568, 569, 570, 643, 571, 644, 0, 572,
	573, 574, 575, 0, 577, 578, 0, 0, 579, 580,
	581, 583, 584, 582, 585, 0, 586, 0, 0, 587,
	588, 589, 645, 646, 647, 0, 591, 590, 592, 648,
	738, 0, 257, 0, 593, 594, 649, 595, 596, 597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 598, 0, 0, 0, 0,
	273, 274, 1293, 275, 276, 277, 278, 279, 599, 600,
	0, 280, 601, 281, 602, 0, 603, 282, 283, 284,
	285, 286, 287, 0, 0, 0, 288, 604, 605, 1291,
	0, 289, 290, 607, 0, 0, 0, 291, 292, 293,
	294, 295, 296, 297, 0, 0, 299, 300, 301, 298,
	302, 0, 303, 0, 304, 305, 306, 307, 308, 309,
	0, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 0, 0, 315, 316, 317, 318, 0, 319,
	608, 609, 0, 323, 320, 321, 0, 324, 322, 0,
	325, 326, 327, 0, 0, 328, 329, 330, 0, 331,
	332, 0, 333, 334, 335, 0, 336, 337, 610, 338,
	339, 340, 342, 344, 341, 345, 346, 347, 348, 611,
	612, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 613, 0, 0, 0, 353, 0, 354, 0,
	0, 0, 355, 356, 614, 615, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 365, 616, 0, 617, 366,
	0, 367, 368, 369, 370, 371, 618, 619, 620, 448,
	0, 372, 373, 0, 374, 375, 376, 377, 0, 0,
	0, 0, 378, 379, 380, 382, 0, 0, 381, 621,
	622, 0, 623, 0, 383, 384, 0, 624, 0, 385,
	386, 387, 0, 388, 0, 0, 0, 389, 390, 391,
	392, 393, 394, 0, 395, 397, 396, 0, 398, 625,
	0, 399, 400, 0, 0, 401, 0, 0, 0, 402,
	403, 406, 0, 0, 404, 405, 407, 408, 0, 409,
	410, 412, 415, 411, 413, 414, 416, 429, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	431, 0, 739, 0, 432, 433, 434, 439, 441, 442,
	437, 438, 440, 443, 444, 436, 0, 435, 0, 0,
	0, 445, 446, 0, 626, 447, 627, 449, 450, 0,
	0, 451, 0, 0, 0, 453, 454, 455, 0, 0,
	456, 457, 628, 0, 458, 0, 629, 459, 460, 452,
	461, 462, 463, 464, 465, 466, 467, 468, 0, 469,
	470, 630, 471, 472, 473, 631, 474, 475, 476, 632,
	477, 633, 478, 479, 0, 480, 481, 0, 482, 483,
	484, 485, 486, 487, 488, 634, 489, 491, 490, 492,
	0, 493, 0, 494, 495, 496, 0, 0, 0, 0,
	497, 0, 499, 500, 501, 498, 502, 503, 504, 505,
	0, 506, 507, 508, 0, 509, 510, 511, 512, 635,
	513, 0, 514, 515, 521, 522, 516, 517, 735, 524,
	525, 526, 527, 0, 529, 530, 528, 531, 1294, 533,
	0, 534, 535, 518, 519, 536, 537, 0, 538, 539,
	540, 541, 542, 543, 636, 0, 544, 0, 545, 546,
	547, 548, 520, 549, 554, 637, 550, 551, 552, 553,
	638, 556, 0, 557, 558, 0, 555, 0, 559, 560,
	561, 562, 563, 564, 565, 343, 566, 0, 567, 734,
	640, 641, 642, 0, 576, 0, 568, 569, 570, 643,
	571, 644, 0, 572, 573, 574, 575, 0, 577, 578,
	0, 0, 579, 580, 581, 583, 584, 582, 585, 0,
	586, 0, 0, 587, 588, 589, 645, 646, 647, 0,
	591, 590, 592, 648, 738, 0, 257, 0, 593, 594,
	649, 595, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 598,
	0, 0, 0, 0, 273, 274, 1293, 275, 276, 277,
	278, 279, 599, 600, 0, 280, 601, 281, 602, 0,
	603, 282, 283, 284, 285, 286, 287, 0, 0, 0,
	288, 604, 605, 1291, 0, 289, 290, 607, 0, 0,
	0, 291, 292, 293, 294, 295, 296, 297, 0, 0,
	299, 300, 301, 298, 302, 0, 303, 0, 304, 305,
	306, 307, 308, 309, 0, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 0, 0, 315, 316,
	317, 318, 0, 319, 608, 609, 0, 323, 320, 321,
	0, 324, 322, 0, 325, 326, 327, 0, 0, 328,
	329, 330, 0, 331, 332, 0, 333, 334, 335, 0,
	336, 337, 610, 338, 339, 340, 342, 344, 341, 345,
	346, 347, 348, 611, 612, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 613, 0, 0, 0,
	353, 0, 354, 0, 0, 0, 355, 356, 614, 615,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 365,
	616, 0, 617, 366, 0, 367, 368, 369, 370, 371,
	618, 619, 620, 448, 0, 372, 373, 0, 374, 375,
	376, 377, 0, 0, 0, 0, 378, 379, 380, 382,
	0, 0, 381, 621, 622, 0, 623, 0, 383, 384,
	0, 624, 0, 385, 386, 387, 0, 388, 0, 0,
	0, 389, 390, 391, 392, 393, 394, 0, 395, 397,
	396, 0, 398, 625, 0, 399, 400, 0, 0, 401,
	0, 0, 0, 402, 403, 406, 0, 0, 404, 405,
	407, 408, 0, 409, 410, 412, 415, 411, 413, 414,
	416, 429, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 431, 0, 739, 0, 432, 433,
	434, 439, 441, 442, 437, 438, 440, 443, 444, 436,
	0, 435, 0, 0, 0, 445, 446, 0, 626, 447,
	627, 449, 450, 0, 0, 451, 0, 0, 0, 453,
	454, 455, 0, 0, 456, 457, 628, 0, 458, 0,
	629, 459, 460, 452, 461, 462, 463, 464, 465, 466,
	467, 468, 0, 469, 470, 630, 471, 472, 473, 631,
	474, 475, 476, 632, 477, 633, 478, 479, 0, 480,
	481, 0, 482, 483, 484, 485, 486, 487, 488, 634,
	489, 491, 490, 492, 0, 493, 0, 494, 495, 496,
	0, 0, 0, 0, 497, 0, 499, 500, 501, 498,
	502, 503, 504, 505, 0, 506, 507, 508, 0, 509,
	510, 511, 512, 635, 513, 0, 514, 515, 521, 522,
	516, 517, 735, 524, 525, 526, 527, 0, 529, 530,
	528, 531, 1294, 533, 0, 534, 535, 518, 519, 536,
	537, 0, 538, 539, 540, 541, 542, 543, 636, 0,
	544, 0, 545, 546, 547, 548, 520, 549, 554, 637,
	550, 551, 552, 553, 638, 556, 0, 557, 558, 0,
	555, 0, 559, 560, 561, 562, 563, 564, 565, 343,
	566, 0, 567, 734, 640, 641, 642, 0, 576, 0,
	568, 1292, 570, 643, 571, 644, 0, 572, 573, 574,
	575, 0, 577, 578, 0, 0, 579, 580, 581, 583,
	584, 582, 585, 0, 586, 0, 0, 587, 588, 589,
	645, 646, 647, 0, 591, 590, 592, 648, 660, 0,
	257, 0, 593, 594, 649, 595, 596, 597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 659, 271, 272, 0, 0,
	0, 0, 0, 598, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 599, 600, 0, 280,
	601, 281, 602, 0, 603, 282, 283, 284, 285, 286,
	287, 0, 0, 0, 288, 604, 605, 606, 0, 289,
	290, 607, 0, 0, 0, 291, 292, 293, 294, 295,
	296, 297, 0, 0, 299, 300, 301, 298, 302, 0,
	303, 0, 304, 305, 306, 307, 308, 309, 0, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	0, 0, 315, 316, 317, 318, 0, 319, 608, 609,
	0, 323, 320, 321, 0, 324, 322, 0, 325, 326,
	327, 0, 0, 328, 329, 330, 0, 331, 332, 0,
	333, 334, 335, 0, 336, 337, 610, 338, 339, 340,
	342, 344, 341, 345, 346, 347, 348, 611, 612, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	613, 0, 0, 0, 353, 0, 354, 0, 0, 0,
	355, 356, 614, 615, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 365, 616, 0, 617, 366, 0, 367,
	368, 369, 370, 371, 618, 619, 620, 448, 0, 372,
	373, 0, 374, 375, 376, 377, 0, 0, 0, 0,
	378, 379, 380, 382, 0, 0, 381, 621, 622, 0,
	623, 0, 383, 384, 0, 624, 0, 385, 386, 387,
	0, 388, 0, 0, 0, 389, 390, 391, 392, 393,
	394, 0, 395, 397, 396, 0, 398, 625, 0, 399,
	400, 0, 0, 401, 0, 0, 0, 402, 403, 406,
	0, 0, 404, 405, 407, 408, 0, 409, 410, 412,
	415, 411, 413, 414, 416, 429, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 431, 0,
	430, 0, 432, 433, 434, 439, 441, 442, 437, 438,
	440, 443, 444, 436, 0, 435, 0, 0, 0, 445,
	446, 0, 626, 447, 627, 449, 450, 0, 0, 451,
	0, 0, 0, 453, 454, 455, 0, 0, 456, 457,
	628, 0, 458, 0, 629, 459, 460, 452, 461, 462,
	463, 464, 465, 466, 467, 468, 0, 469, 470, 630,
	471, 472, 473, 631, 474, 475, 476, 632, 477, 633,
	658, 479, 0, 480, 481, 0, 482, 483, 484, 485,
	486, 487, 488, 634, 489, 491, 490, 492, 0, 493,
	0, 494, 495, 496, 0, 0, 0, 0, 497, 0,
	499, 500, 501, 498, 502, 503, 504, 505, 0, 506,
	507, 508, 0, 509, 510, 511, 512, 635, 513, 0,
	514, 515, 521, 522, 516, 517, 523, 524, 525, 526,
	527, 0, 529, 530, 528, 531, 532, 533, 0, 534,
	535, 518, 519, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 636, 0, 544, 0, 545, 546, 547, 548,
	520, 549, 554, 637, 550, 551, 552, 553, 638, 556,
	0, 557, 558, 0, 555, 0, 559, 560, 561, 562,
	563, 564, 565, 343, 566, 0, 567, 639, 640, 641,
	642, 0, 576, 0, 568, 569, 570, 643, 571, 644,
	0, 572, 573, 574, 575, 0, 577, 578, 0, 0,
	579, 580, 581, 583, 584, 582, 585, 0, 586, 0,
	0, 587, 588, 589, 645, 646, 647, 0, 591, 590,
	592, 648, 257, 2868, 0, 0, 593, 594, 649, 595,
	596, 597, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 598, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 599, 600,
	0, 280, 601, 281, 602, 0, 603, 282, 283, 284,
	285, 286, 287, 0, 0, 0, 288, 604, 605, 606,
	0, 289, 290, 607, 0, 0, 0, 291, 292, 293,
	294, 295, 296, 297, 0, 0, 299, 300, 301, 298,
	302, 0, 303, 0, 304, 305, 306, 307, 308, 309,
	0, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 0, 0, 315, 316, 317, 318, 0, 319,
	608, 609, 0, 323, 320, 321, 0, 324, 322, 0,
	325, 326, 327, 0, 0, 328, 329, 330, 0, 331,
	332, 0, 333, 334, 335, 0, 336, 337, 610, 338,
	339, 340, 342, 344, 341, 345, 346, 347, 348, 611,
	612, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 613, 0, 0, 0, 353, 0, 354, 0,
	0, 0, 355, 356, 614, 615, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 365, 616, 0, 617, 366,
	0, 367, 368, 369, 370, 371, 618, 619, 620, 448,
	0, 372, 373, 0, 374, 375, 376, 377, 0, 0,
	0, 0, 378, 379, 380, 382, 0, 0, 381, 621,
	622, 0, 623, 0, 383, 384, 0, 624, 0, 385,
	386, 387, 0, 388, 0, 0, 0, 389, 390, 391,
	392, 393, 394, 0, 395, 397, 396, 0, 398, 625,
	0, 399, 400, 0, 0, 401, 0, 0, 0, 402,
	403, 406, 0, 0, 404, 405, 407, 408, 0, 409,
	410, 412, 415, 411, 413, 414, 416, 429, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	431, 0, 430, 0, 432, 433, 434, 439, 441, 442,
	437, 438, 440, 443, 444, 436, 0, 435, 0, 0,
	0, 445, 446, 0, 626, 447, 627, 449, 450, 0,
	0, 451, 0, 0, 0, 453, 454, 455, 0, 0,
	456, 457, 628, 0, 458, 0, 629, 459, 460, 452,
	461, 462, 463, 464, 465, 466, 467, 468, 0, 469,
	470, 630, 471, 472, 473, 631, 474, 475, 476, 632,
	477, 633, 478, 479, 0, 480, 481, 0, 482, 483,
	484, 485, 486, 487, 488, 634, 489, 491, 490, 492,
	0, 493, 0, 494, 495, 496, 0, 0, 0, 0,
	497, 0, 499, 500, 501, 498, 502, 503, 504, 505,
	0, 506, 507, 508, 0, 509, 510, 511, 512, 635,
	513, 0, 514, 515, 521, 522, 516, 517, 523, 524,
	525, 526, 527, 0, 529, 530, 528, 531, 532, 533,
	0, 534, 535, 518, 519, 536, 537, 0, 538, 539,
	540, 541, 542, 543, 636, 0, 544, 0, 545, 546,
	547, 548, 520, 549, 554, 637, 550, 551, 552, 553,
	638, 556, 0, 557, 558, 0, 555, 0, 559, 560,
	561, 562, 563, 564, 565, 343, 566, 0, 567, 639,
	640, 641, 642, 0, 576, 0, 568, 569, 570, 643,
	571, 644, 0, 572, 573, 574, 575, 0, 577, 578,
	0, 0, 579, 580, 581, 583, 584, 582, 585, 0,
	586, 0, 0, 587, 588, 589, 645, 646, 647, 0,
	591, 590, 592, 648, 257, 3964, 0, 0, 593, 594,
	649, 595, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 598, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	599, 600, 0, 280, 601, 281, 602, 0, 603, 282,
	283, 284, 285, 286, 287, 0, 0, 0, 288, 604,
	605, 606, 0, 289, 290, 607, 0, 0, 0, 291,
	292, 293, 294, 295, 296, 297, 0, 0, 299, 300,
	301, 298, 302, 0, 303, 0, 304, 305, 306, 307,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 0, 0, 315, 316, 317, 318,
	0, 319, 608, 609, 0, 323, 320, 321, 0, 324,
	322, 0, 325, 326, 327, 0, 0, 328, 329, 330,
	0, 331, 332, 0, 333, 334, 335, 0, 336, 337,
	610, 338, 339, 340, 342, 344, 341, 345, 346, 347,
	348, 611, 612, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 613, 0, 0, 0, 353, 0,
	354, 0, 0, 0, 355, 356, 614, 615, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 365, 616, 0,
	617, 366, 0, 367, 368, 369, 370, 371, 618, 619,
	620, 448, 0, 372, 373, 0, 374, 375, 376, 377,
	0, 0, 0, 0, 378, 379, 380, 382, 0, 0,
	381, 621, 622, 0, 623, 0, 383, 384, 0, 624,
	0, 385, 386, 387, 0, 388, 0, 0, 0, 389,
	390, 391, 392, 393, 394, 0, 395, 397, 396, 0,
	398, 625, 0, 399, 400, 0, 0, 401, 0, 0,
	0, 402, 403, 406, 0, 0, 404, 405, 407, 408,
	0, 409, 410, 412, 415, 411, 413, 414, 416, 429,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 431, 0, 430, 0, 432, 433, 434, 439,
	441, 442, 437, 438, 440, 443, 444, 436, 0, 435,
	0, 0, 0, 445, 446, 0, 626, 447, 627, 449,
	450, 0, 0, 451, 0, 0, 0, 453, 454, 455,
	0, 0, 456, 457, 628, 0, 458, 0, 629, 459,
	460, 452, 461, 462, 463, 464, 465, 466, 467, 468,
	0, 469, 470, 630, 471, 472, 473, 631, 474, 475,
	476, 632, 477, 633, 478, 479, 0, 480, 481, 0,
	482, 483, 484, 485, 486, 487, 488, 634, 489, 491,
	490, 492, 0, 493, 0, 494, 495, 496, 0, 0,
	0, 0, 497, 0, 499, 500, 501, 498, 502, 503,
	504, 505, 0, 506, 507, 508, 0, 509, 510, 511,
	512, 635, 513, 0, 514, 515, 521, 522, 516, 517,
	523, 524, 525, 526, 527, 0, 529, 530, 528, 531,
	532, 533, 0, 534, 535, 518, 519, 536, 537, 0,
	538, 539, 540, 541, 542, 543, 636, 0, 544, 0,
	545, 546, 547, 548, 520, 549, 554, 637, 550, 551,
	552, 553, 638, 556, 0, 557, 558, 0, 555, 0,
	559, 560, 561, 562, 563, 564, 565, 343, 566, 0,
	567, 639, 640, 641, 642, 0, 576, 0, 568, 569,
	570, 643, 571, 644, 0, 572, 573, 574, 575, 0,
	577, 578, 0, 0, 579, 580, 581, 583, 584, 582,
	585, 0, 586, 0, 0, 587, 588, 589, 645, 646,
	647, 257, 591, 590, 592, 648, 0, 0, 0, 0,
	593, 594, 649, 595, 596, 597, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 598, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 599, 600, 0,
	280, 601, 281, 602, 0, 603, 282, 283, 284, 285,
	286, 287, 0, 0, 0, 288, 604, 605, 606, 0,
	289, 290, 607, 0, 0, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 0, 0, 0, 0,
	0, 0, 0, 315, 316, 317, 318, 0, 319, 608,
	609, 0, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 329, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 610, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 611, 612,
	349, 0, 0, 0, 0, 0, 0, 0, 350, 351,
	352, 613, 0, 0, 0, 353, 0, 354, 0, 0,
	0, 355, 356, 614, 615, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 616, 0, 617, 366, 0,
	367, 368, 369, 370, 371, 618, 619, 620, 448, 0,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	0, 378, 379, 380, 382, 0, 0, 381, 621, 622,
	0, 623, 0, 383, 384, 0, 624, 0, 385, 386,
	387, 0, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 395, 397, 396, 0, 398, 625, 0,
	399, 400, 0, 0, 401, 0, 0, 0, 402, 403,
	406, 0, 0, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 0, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 3866, 435, 0, 0, 0,
	445, 446, 0, 626, 447, 627, 449, 450, 0, 0,
	451, 0, 0, 0, 453, 454, 455, 0, 0, 456,
	457, 628, 0, 458, 0, 629, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 632, 477,
	633, 478, 479, 0, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 634, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 0, 509, 510, 511, 512, 635, 513,
	0, 514, 515, 521, 522, 516, 517, 523, 524, 525,
	526, 527, 0, 529, 530, 528, 531, 532, 533, 0,
	534, 535, 518, 519, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 636, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 637, 550, 551, 552, 553, 638,
	556, 0, 557, 558, 0, 555, 0, 559, 560, 561,
	562, 563, 564, 565, 343, 566, 0, 567, 639, 640,
	641, 642, 0, 576, 0, 568, 569, 570, 643, 571,
	644, 0, 572, 573, 574, 575, 0, 577, 578, 0,
	0, 579, 580, 581, 583, 584, 582, 585, 0, 586,
	0, 0, 587, 588, 589, 645, 646, 647, 257, 591,
	590, 592, 648, 0, 0, 0, 0, 593, 594, 649,
	595, 596, 597, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 598, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 599, 600, 0, 280, 601, 281,
	602, 0, 603, 282, 283, 284, 285, 286, 287, 0,
	0, 0, 288, 604, 605, 606, 0, 289, 290, 607,
	0, 0, 0, 291, 292, 293, 294, 295, 296, 297,
	0, 0, 299, 300, 301, 298, 302, 0, 303, 0,
	304, 305, 306, 307, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 0, 0,
	315, 316, 317, 318, 0, 319, 608, 609, 3660, 323,
	320, 321, 0, 324, 322, 0, 325, 326, 327, 0,
	0, 328, 329, 330, 0, 331, 332, 0, 333, 334,
	335, 0, 336, 337, 610, 338, 339, 340, 342, 344,
	341, 345, 346, 347, 348, 611, 612, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 613, 0,
	0, 0, 353, 0, 354, 0, 0, 0, 355, 356,
	614, 615, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 365, 616, 0, 617, 366, 0, 367, 368, 369,
	370, 371, 618, 619, 620, 448, 0, 372, 373, 0,
	374, 375, 376, 377, 0, 0, 0, 0, 378, 379,
	380, 382, 0, 0, 381, 621, 622, 0, 623, 0,
	383, 384, 0, 624, 0, 385, 386, 387, 0, 388,
	0, 0, 0, 389, 390, 391, 392, 393, 394, 0,
	395, 397, 396, 0, 398, 625, 0, 399, 400, 0,
	0, 401, 0, 0, 0, 402, 403, 406, 0, 0,
	404, 405, 407, 408, 0, 409, 410, 412, 415, 411,
	413, 414, 416, 429, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 431, 0, 430, 0,
	432, 433, 434, 439, 441, 442, 437, 438, 440, 443,
	444, 436, 0, 435, 0, 0, 0, 445, 446, 0,
	626, 447, 627, 449, 450, 0, 0, 451, 0, 0,
	0, 453, 454, 455, 0, 0, 456, 457, 628, 0,
	458, 0, 629, 459, 460, 452, 461, 462, 463, 464,
	465, 466, 467, 468, 0, 469, 470, 630, 471, 472,
	473, 631, 474, 475, 476, 632, 477, 633, 478, 479,
	0, 480, 481, 0, 482, 483, 484, 485, 486, 487,
	488, 634, 489, 491, 490, 492, 0, 493, 0, 494,
	495, 496, 0, 0, 0, 0, 497, 0, 499, 500,
	501, 498, 502, 503, 504, 505, 0, 506, 507, 508,
	0, 509, 510, 511, 512, 635, 513, 0, 514, 515,
	521, 522, 516, 517, 523, 524, 525, 526, 527, 0,
	529, 530, 528, 531, 532, 533, 0, 534, 535, 518,
	519, 536, 537, 0, 538, 539, 540, 541, 542, 543,
	636, 0, 544, 0, 545, 546, 547, 548, 520, 549,
	554, 637, 550, 551, 552, 553, 638, 556, 0, 557,
	558, 0, 555, 0, 559, 560, 561, 562, 563, 564,
	565, 343, 566, 0, 567, 639, 640, 641, 642, 0,
	576, 0, 568, 569, 570, 643, 571, 644, 0, 572,
	573, 574, 575, 0, 577, 578, 0, 0, 579, 580,
	581, 583, 584, 582, 585, 0, 586, 0, 0, 587,
	588, 589, 645, 646, 647, 257, 591, 590, 592, 648,
	0, 0, 0, 0, 593, 594, 649, 595, 596, 597,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 598, 0,
	2572, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 599, 600, 0, 280, 601, 281, 602, 0, 603,
	282, 283, 284, 285, 286, 287, 0, 0, 0, 288,
	604, 605, 606, 0, 289, 290, 607, 0, 0, 0,
	291, 292, 293, 294, 295, 296, 297, 0, 0, 299,
	300, 301, 298, 302, 0, 303, 0, 304, 305, 306,
	307, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	0, 0, 0, 0, 0, 0, 0, 315, 316, 317,
	318, 0, 319, 608, 609, 0, 323, 320, 321, 0,
	324, 322, 0, 325, 326, 327, 0, 0, 328, 329,
	330, 0, 331, 332, 0, 333, 334, 335, 0, 336,
	337, 610, 338, 339, 340, 342, 344, 341, 345, 346,
	347, 348, 611, 612, 349, 0, 0, 0, 0, 0,
	0, 0, 350, 351, 352, 613, 0, 0, 0, 353,
	0, 354, 0, 0, 0, 355, 356, 614, 615, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 365, 616,
	0, 617, 366, 0, 367, 368, 369, 370, 371, 618,
	619, 620, 448, 0, 372, 373, 0, 374, 375, 376,
	377, 0, 0, 0, 0, 378, 379, 380, 382, 0,
	0, 381, 621, 622, 0, 623, 0, 383, 384, 0,
	624, 0, 385, 386, 387, 0, 388, 0, 0, 0,
	389, 390, 391, 392, 393, 394, 0, 395, 397, 396,
	0, 398, 625, 0, 399, 400, 0, 0, 401, 0,
	0, 0, 402, 403, 406, 0, 0, 404, 405, 407,
	408, 0, 409, 410, 412, 415, 411, 413, 414, 416,
	429, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 431, 0, 430, 0, 432, 433, 434,
	439, 441, 442, 437, 438, 440, 443, 444, 436, 0,
	435, 0, 0, 0, 445, 446, 0, 626, 447, 627,
	449, 450, 0, 0, 451, 0, 0, 0, 453, 454,
	455, 0, 0, 456, 457, 628, 0, 458, 0, 629,
	459, 460, 452, 461, 462, 463, 464, 465, 466, 467,
	468, 0, 469, 470, 630, 471, 472, 473, 631, 474,
	475, 476, 632, 477, 633, 478, 479, 0, 480, 481,
	0, 482, 483, 484, 485, 486, 487, 488, 634, 489,
	491, 490, 492, 0, 493, 0, 494, 495, 496, 0,
	0, 0, 0, 497, 0, 499, 500, 501, 498, 502,
	503, 504, 505, 0, 506, 507, 508, 0, 509, 510,
	511, 512, 635, 513, 0, 514, 515, 521, 522, 516,
	517, 523, 524, 525, 526, 527, 0, 529, 530, 528,
	531, 532, 533, 0, 534, 535, 518, 519, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 636, 0, 544,
	0, 545, 546, 547, 548, 520, 549, 554, 637, 550,
	551, 552, 553, 638, 556, 0, 557, 558, 0, 555,
	0, 559, 560, 561, 562, 563, 564, 565, 343, 566,
	0, 567, 639, 640, 641, 642, 0, 576, 0, 568,
	569, 570, 643, 571, 644, 0, 572, 573, 574, 575,
	0, 577, 578, 0, 0, 579, 580, 581, 583, 584,
	582, 585, 0, 586, 0, 0, 587, 588, 589, 645,
	646, 647, 0, 591, 590, 592, 648, 257, 2868, 0,
	0, 593, 594, 649, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	598, 0, 0, 0, 0, 273, 274, 0, 275, 276,
	277, 278, 279, 599, 600, 0, 280, 601, 281, 602,
	0, 603, 282, 283, 284, 285, 286, 287, 0, 0,
	0, 288, 604, 605, 606, 0, 289, 290, 607, 0,
	0, 0, 291, 292, 293, 294, 295, 296, 297, 0,
	0, 299, 300, 301, 298, 302, 0, 303, 0, 304,
	305, 306, 307, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 0, 0, 0, 0, 0, 0, 0, 315,
	316, 317, 318, 0, 319, 608, 609, 0, 323, 320,
	321, 0, 324, 322, 0, 325, 326, 327, 0, 0,
	328, 329, 330, 0, 331, 332, 0, 333, 334, 335,
	0, 336, 337, 610, 338, 339, 340, 342, 344, 341,
	345, 346, 347, 348, 611, 612, 349, 0, 0, 0,
	0, 0, 0, 0, 350, 351, 352, 613, 0, 0,
	0, 353, 0, 354, 0, 0, 0, 355, 356, 614,
	615, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	365, 616, 0, 617, 366, 0, 367, 368, 369, 370,
	371, 618, 619, 620, 448, 0, 372, 373, 0, 374,
	375, 376, 377, 0, 0, 0, 0, 378, 379, 380,
	382, 0, 0, 381, 621, 622, 0, 623, 0, 383,
	384, 0, 624, 0, 385, 386, 387, 0, 388, 0,
	0, 0, 389, 390, 391, 392, 393, 394, 0, 395,
	397, 396, 0, 398, 625, 0, 399, 400, 0, 0,
	401, 0, 0, 0, 402, 403, 406, 0, 0, 404,
	405, 407, 408, 0, 409, 410, 412, 415, 411, 413,
	414, 416, 429, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 431, 0, 430, 0, 432,
	433, 434, 439, 441, 442, 437, 438, 440, 443, 444,
	436, 0, 435, 0, 0, 0, 445, 446, 0, 626,
	447, 627, 449, 450, 0, 0, 451, 0, 0, 0,
	453, 454, 2865, 0, 0, 456, 457, 628, 0, 458,
	0, 629, 459, 460, 452, 461, 462, 463, 464, 465,
	466, 467, 468, 0, 469, 470, 630, 471, 472, 473,
	631, 474, 475, 476, 632, 477, 633, 478, 479, 0,
	480, 481, 0, 482, 483, 484, 485, 486, 487, 488,
	634, 489, 491, 490, 492, 0, 493, 0, 494, 495,
	496, 0, 0, 0, 0, 497, 0, 499, 500, 501,
	498, 502, 503, 504, 505, 0, 506, 507, 508, 0,
	509, 510, 511, 512, 635, 513, 0, 514, 515, 521,
	522, 516, 517, 523, 524, 525, 526, 527, 0, 529,
	530, 528, 531, 532, 533, 0, 534, 535, 518, 519,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 636,
	0, 544, 0, 545, 546, 547, 548, 520, 549, 554,
	637, 550, 551, 552, 553, 638, 556, 0, 557, 558,
	0, 555, 0, 559, 560, 561, 562, 563, 564, 565,
	343, 566, 0, 567, 639, 640, 641, 642, 0, 576,
	0, 568, 569, 570, 643, 571, 644, 0, 572, 573,
	574, 575, 0, 577, 578, 0, 0, 579, 580, 581,
	583, 584, 582, 585, 0, 586, 0, 0, 587, 588,
	589, 645, 646, 647, 257, 591, 590, 592, 648, 0,
	0, 0, 0, 593, 594, 649, 595, 596, 597, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 2213,
	271, 272, 0, 0, 0, 0, 0, 598, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	599, 600, 0, 280, 601, 281, 602, 0, 603, 282,
	283, 284, 285, 286, 287, 0, 0, 0, 288, 604,
	605, 606, 0, 289, 290, 607, 0, 0, 0, 291,
	292, 293, 294, 295, 296, 297, 0, 0, 299, 300,
	301, 298, 302, 0, 303, 0, 304, 305, 306, 307,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 0, 0, 315, 316, 317, 318,
	0, 319, 608, 609, 0, 323, 320, 321, 0, 324,
	322, 0, 325, 326, 327, 0, 0, 328, 329, 330,
	0, 331, 332, 0, 333, 334, 335, 0, 336, 337,
	610, 338, 339, 340, 342, 344, 341, 345, 346, 347,
	348, 611, 612, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 613, 0, 0, 0, 353, 0,
	354, 0, 0, 0, 355, 356, 614, 615, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 365, 616, 0,
	617, 366, 0, 367, 368, 369, 370, 371, 618, 619,
	620, 448, 0, 372, 373, 0, 374, 375, 376, 377,
	0, 0, 0, 0, 378, 379, 380, 382, 0, 0,
	381, 621, 622, 0, 623, 0, 383, 384, 0, 624,
	0, 385, 386, 387, 0, 388, 0, 0, 0, 389,
	390, 391, 392, 393, 394, 0, 395, 397, 396, 0,
	398, 625, 0, 399, 400, 0, 0, 401, 0, 0,
	0, 402, 403, 406, 0, 0, 404, 405, 407, 408,
	0, 409, 410, 412, 415, 411, 413, 414, 416, 429,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 431, 0, 430, 0, 432, 433, 434, 439,
	441, 442, 437, 438, 440, 443, 444, 436, 0, 435,
	0, 0, 0, 445, 446, 0, 626, 447, 627, 449,
	450, 0, 0, 451, 0, 0, 0, 453, 454, 455,
	0, 0, 456, 457, 628, 0, 458, 0, 629, 459,
	460, 452, 461, 462, 463, 464, 465, 466, 467, 468,
	0, 469, 470, 630, 471, 472, 473, 631, 474, 475,
	476, 632, 477, 633, 478, 479, 0, 480, 481, 0,
	482, 483, 484, 485, 486, 487, 488, 634, 489, 491,
	490, 492, 0, 493, 0, 494, 495, 496, 0, 0,
	0, 0, 497, 0, 499, 500, 501, 498, 502, 503,
	504, 505, 0, 506, 507, 508, 0, 509, 510, 511,
	512, 635, 513, 0, 514, 515, 521, 522, 516, 517,
	523, 524, 525, 526, 527, 0, 529, 530, 528, 531,
	532, 533, 0, 534, 535, 518, 519, 536, 537, 0,
	538, 539, 540, 541, 542, 543, 636, 0, 544, 0,
	545, 546, 547, 548, 520, 549, 554, 637, 550, 551,
	552, 553, 638, 556, 0, 557, 558, 0, 555, 0,
	559, 560, 561, 562, 563, 564, 565, 343, 566, 0,
	567, 639, 640, 641, 642, 0, 576, 0, 568, 569,
	570, 643, 571, 644, 0, 572, 573, 574, 575, 0,
	577, 578, 0, 0, 579, 580, 581, 583, 584, 582,
	585, 0, 586, 0, 0, 587, 588, 589, 645, 646,
	647, 0, 591, 590, 592, 648, 2201, 0, 257, 0,
	593, 594, 649, 595, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 598, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 599, 600, 0, 280, 601, 281,
	602, 0, 603, 282, 283, 284, 285, 286, 287, 0,
	0, 0, 288, 604, 605, 606, 0, 289, 290, 607,
	0, 0, 0, 291, 292, 293, 294, 295, 296, 297,
	0, 0, 299, 300, 301, 298, 302, 0, 303, 0,
	304, 305, 306, 307, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 0, 0,
	315, 316, 317, 318, 0, 319, 608, 609, 0, 323,
	320, 321, 0, 324, 322, 0, 325, 326, 327, 0,
	0, 328, 329, 330, 0, 331, 332, 0, 333, 334,
	335, 0, 336, 337, 610, 338, 339, 340, 342, 344,
	341, 345, 346, 347, 348, 611, 612, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 613, 0,
	0, 0, 353, 0, 354, 0, 0, 0, 355, 356,
	614, 615, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 365, 616, 0, 617, 366, 0, 367, 368, 369,
	370, 371, 618, 619, 620, 448, 0, 372, 373, 0,
	374, 375, 376, 377, 0, 0, 0, 0, 378, 379,
	380, 382, 0, 0, 381, 621, 622, 0, 623, 0,
	383, 384, 0, 624, 0, 385, 386, 387, 0, 388,
	0, 0, 0, 389, 390, 391, 392, 393, 394, 0,
	395, 397, 396, 0, 398, 625, 0, 399, 400, 0,
	0, 401, 0, 0, 0, 402, 403, 406, 0, 0,
	404, 405, 407, 408, 0, 409, 410, 412, 415, 411,
	413, 414, 416, 429, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 431, 0, 430, 0,
	432, 433, 434, 439, 441, 442, 437, 438, 440, 443,
	444, 436, 0, 435, 0, 0, 0, 445, 446, 0,
	626, 447, 627, 449, 450, 0, 0, 451, 0, 0,
	0, 453, 454, 455, 0, 0, 456, 457, 628, 0,
	458, 0, 629, 459, 460, 452, 461, 462, 463, 464,
	465, 466, 467, 468, 0, 469, 470, 630, 471, 472,
	473, 631, 474, 475, 476, 632, 477, 633, 478, 479,
	0, 480, 481, 0, 482, 483, 484, 485, 486, 487,
	488, 634, 489, 491, 490, 492, 0, 493, 0, 494,
	495, 496, 0, 0, 0, 0, 497, 0, 499, 500,
	501, 498, 502, 503, 504, 505, 0, 506, 507, 508,
	0, 509, 510, 511, 512, 635, 513, 0, 514, 515,
	521, 522, 516, 517, 523, 524, 525, 526, 527, 0,
	529, 530, 528, 531, 532, 533, 0, 534, 535, 518,
	519, 536, 537, 0, 538, 539, 540, 541, 542, 543,
	636, 0, 544, 0, 545, 546, 547, 548, 520, 549,
	554, 637, 550, 551, 552, 553, 638, 556, 0, 557,
	558, 0, 555, 0, 559, 560, 561, 562, 563, 564,
	565, 343, 566, 0, 567, 639, 640, 641, 642, 0,
	576, 0, 568, 569, 570, 643, 571, 644, 0, 572,
	573, 574, 575, 0, 577, 578, 0, 0, 579, 580,
	581, 583, 584, 582, 585, 0, 586, 0, 0, 587,
	588, 589, 645, 646, 647, 0, 591, 590, 592, 648,
	738, 0, 257, 0, 593, 594, 649, 595, 596, 597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 598, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 599, 600,
	0, 280, 601, 281, 602, 0, 603, 282, 283, 284,
	285, 286, 287, 0, 0, 0, 288, 604, 605, 606,
	0, 289, 728, 607, 0, 0, 0, 291, 292, 293,
	294, 295, 296, 297, 0, 0, 299, 300, 301, 298,
	302, 0, 303, 0, 304, 305, 306, 307, 308, 309,
	0, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 0, 0, 315, 316, 317, 318, 0, 319,
	608, 609, 0, 323, 320, 321, 0, 324, 322, 0,
	325, 326, 327, 0, 0, 328, 329, 330, 0, 331,
	332, 0, 333, 334, 335, 0, 336, 337, 610, 338,
	339, 340, 342, 344, 341, 345, 346, 347, 348, 611,
	612, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 613, 0, 0, 0, 353, 0, 354, 0,
	0, 0, 355, 356, 614, 615, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 365, 616, 0, 617, 366,
	0, 367, 368, 369, 370, 371, 618, 619, 620, 448,
	0, 372, 373, 0, 374, 375, 376, 377, 0, 0,
	0, 0, 378, 379, 380, 382, 0, 0, 381, 621,
	622, 0, 623, 0, 383, 384, 0, 624, 0, 385,
	386, 387, 0, 388, 0, 0, 0, 389, 390, 391,
	392, 393, 394, 0, 395, 397, 396, 0, 398, 625,
	0, 399, 400, 0, 0, 401, 0, 0, 0, 402,
	403, 406, 0, 0, 404, 405, 407, 408, 0, 409,
	410, 412, 415, 411, 413, 414, 416, 429, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	431, 0, 739, 0, 432, 433, 434, 439, 441, 442,
	437, 438, 440, 443, 444, 436, 0, 435, 0, 0,
	0, 445, 446, 0, 626, 447, 627, 449, 450, 0,
	0, 451, 0, 0, 0, 453, 454, 455, 0, 0,
	456, 457, 628, 0, 458, 0, 629, 459, 460, 452,
	461, 462, 463, 464, 465, 466, 467, 468, 0, 469,
	470, 630, 471, 472, 473, 631, 474, 475, 476, 632,
	477, 633, 478, 479, 0, 480, 481, 0, 482, 483,
	484, 485, 486, 487, 488, 634, 489, 491, 490, 492,
	0, 493, 0, 494, 495, 496, 0, 0, 0, 0,
	497, 0, 499, 500, 501, 498, 502, 503, 504, 505,
	0, 506, 507, 508, 0, 509, 510, 511, 512, 635,
	513, 0, 514, 515, 521, 522, 516, 517, 735, 524,
	525, 526, 527, 0, 529, 530, 528, 531, 1547, 533,
	0, 534, 535, 518, 519, 536, 537, 0, 538, 539,
	540, 541, 542, 543, 636, 0, 544, 0, 545, 546,
	547, 548, 520, 549, 554, 637, 550, 551, 552, 553,
	638, 556, 0, 557, 558, 0, 555, 0, 559, 560,
	561, 562, 563, 564, 565, 343, 566, 0, 567, 734,
	640, 641, 642, 0, 576, 0, 568, 569, 570, 643,
	571, 644, 0, 572, 573, 574, 575, 0, 577, 578,
	0, 0, 579, 580, 581, 583, 584, 582, 585, 0,
	586, 0, 0, 587, 588, 589, 645, 646, 647, 0,
	591, 590, 592, 648, 1520, 0, 257, 0, 593, 594,
	649, 595, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 598,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 599, 600, 0, 280, 601, 281, 602, 0,
	603, 282, 283, 284, 285, 286, 287, 0, 0, 0,
	288, 604, 605, 606, 0, 289, 290, 607, 0, 0,
	0, 291, 292, 293, 294, 295, 296, 297, 0, 0,
	299, 300, 301, 298, 302, 0, 303, 0, 304, 305,
	306, 307, 308, 309, 0, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 0, 0, 315, 316,
	317, 318, 0, 319, 608, 609, 0, 323, 320, 321,
	0, 324, 322, 0, 325, 326, 327, 0, 0, 328,
	329, 330, 0, 331, 332, 0, 333, 334, 335, 0,
	336, 337, 610, 338, 339, 340, 342, 344, 341, 345,
	346, 347, 348, 611, 612, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 613, 0, 0, 0,
	353, 0, 354, 0, 0, 0, 355, 356, 614, 615,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 365,
	616, 0, 617, 366, 0, 367, 368, 369, 370, 371,
	1519, 619, 620, 448, 0, 372, 373, 0, 374, 375,
	376, 377, 0, 0, 0, 0, 378, 379, 380, 382,
	0, 0, 381, 621, 622, 0, 623, 0, 383, 384,
	0, 624, 0, 385, 386, 387, 0, 388, 0, 0,
	0, 389, 390, 391, 392, 393, 394, 0, 395, 397,
	396, 0, 398, 625, 0, 399, 400, 0, 0, 401,
	0, 0, 0, 402, 403, 406, 0, 0, 404, 405,
	407, 408, 0, 409, 410, 412, 415, 411, 413, 414,
	416, 429, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 431, 0, 430, 0, 432, 433,
	434, 439, 441, 442, 437, 438, 440, 443, 444, 436,
	0, 435, 0, 0, 0, 445, 446, 0, 626, 447,
	627, 449, 450, 0, 0, 451, 0, 0, 0, 453,
	454, 455, 0, 0, 456, 457, 628, 0, 458, 0,
	629, 459, 460, 452, 461, 462, 463, 464, 465, 466,
	467, 468, 0, 469, 470, 630, 471, 472, 473, 631,
	474, 475, 476, 632, 477, 633, 478, 479, 0, 480,
	481, 0, 482, 483, 484, 485, 486, 487, 488, 634,
	489, 491, 490, 492, 0, 493, 0, 494, 495, 496,
	0, 0, 0, 0, 497, 0, 499, 500, 501, 498,
	502, 503, 504, 505, 0, 506, 507, 508, 0, 509,
	510, 511, 512, 635, 513, 0, 514, 515, 521, 522,
	516, 517, 523, 524, 525, 526, 527, 0, 529, 530,
	528, 531, 532, 533, 0, 534, 535, 518, 519, 536,
	537, 0, 538, 539, 540, 541, 542, 543, 636, 0,
	544, 0, 545, 546, 547, 548, 520, 549, 554, 637,
	550, 551, 552, 553, 638, 556, 0, 557, 558, 0,
	555, 0, 559, 560, 561, 562, 563, 564, 565, 343,
	566, 0, 567, 639, 640, 641, 642, 0, 576, 0,
	568, 569, 570, 643, 571, 644, 0, 572, 573, 574,
	575, 0, 577, 578, 0, 0, 579, 580, 581, 583,
	584, 582, 585, 0, 586, 0, 0, 587, 588, 589,
	645, 646, 647, 0, 591, 590, 592, 648, 1505, 0,
	257, 0, 593, 594, 649, 595, 596, 597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 598, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 599, 600, 0, 280,
	601, 281, 602, 0, 603, 282, 283, 284, 285, 286,
	287, 0, 0, 0, 288, 604, 605, 606, 0, 289,
	290, 607, 0, 0, 0, 291, 292, 293, 294, 295,
	296, 297, 0, 0, 299, 300, 301, 298, 302, 0,
	303, 0, 304, 305, 306, 307, 308, 309, 0, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	0, 0, 315, 316, 317, 318, 0, 319, 608, 609,
	0, 323, 320, 321, 0, 324, 322, 0, 325, 326,
	327, 0, 0, 328, 329, 330, 0, 331, 332, 0,
	333, 334, 335, 0, 336, 337, 610, 338, 339, 340,
	342, 344, 341, 345, 346, 347, 348, 611, 612, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	613, 0, 0, 0, 353, 0, 354, 0, 0, 0,
	355, 356, 614, 615, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 365, 616, 0, 617, 366, 0, 367,
	368, 369, 370, 371, 1503, 619, 620, 448, 0, 372,
	373, 0, 374, 375, 376, 377, 0, 0, 0, 0,
	378, 379, 380, 382, 0, 0, 381, 621, 622, 0,
	623, 0, 383, 384, 0, 624, 0, 385, 386, 387,
	0, 388, 0, 0, 0, 389, 390, 391, 392, 393,
	394, 0, 395, 397, 396, 0, 398, 625, 0, 399,
	400, 0, 0, 401, 0, 0, 0, 402, 403, 406,
	0, 0, 404, 405, 407, 408, 0, 409, 410, 412,
	415, 411, 413, 414, 416, 429, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 431, 0,
	430, 0, 432, 433, 434, 439, 441, 442, 437, 438,
	440, 443, 444, 436, 0, 435, 0, 0, 0, 445,
	446, 0, 626, 447, 627, 449, 450, 0, 0, 451,
	0, 0, 0, 453, 454, 455, 0, 0, 456, 457,
	628, 0, 458, 0, 629, 459, 460, 452, 461, 462,
	463, 464, 465, 466, 467, 468, 0, 469, 470, 630,
	471, 472, 473, 631, 474, 475, 476, 632, 477, 633,
	478, 479, 0, 480, 481, 0, 482, 483, 484, 485,
	486, 487, 488, 634, 489, 491, 490, 492, 0, 493,
	0, 494, 495, 496, 0, 0, 0, 0, 497, 0,
	499, 500, 501, 498, 502, 503, 504, 505, 0, 506,
	507, 508, 0, 509, 510, 511, 512, 635, 513, 0,
	514, 515, 521, 522, 516, 517, 523, 524, 525, 526,
	527, 0, 529, 530, 528, 531, 532, 533, 0, 534,
	535, 518, 519, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 636, 0, 544, 0, 545, 546, 547, 548,
	520, 549, 554, 637, 550, 551, 552, 553, 638, 556,
	0, 557, 558, 0, 555, 0, 559, 560, 561, 562,
	563, 564, 565, 343, 566, 0, 567, 639, 640, 641,
	642, 0, 576, 0, 568, 569, 570, 643, 571, 644,
	0, 572, 573, 574, 575, 0, 577, 578, 0, 0,
	579, 580, 581, 583, 584, 582, 585, 0, 586, 0,
	0, 587, 588, 589, 645, 646, 647, 0, 591, 590,
	592, 648, 1499, 0, 257, 0, 593, 594, 649, 595,
	596, 597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 598, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	599, 600, 0, 280, 601, 281, 602, 0, 603, 282,
	283, 284, 285, 286, 287, 0, 0, 0, 288, 604,
	605, 606, 0, 289, 290, 607, 0, 0, 0, 291,
	292, 293, 294, 295, 296, 297, 0, 0, 299, 300,
	301, 298, 302, 0, 303, 0, 304, 305, 306, 307,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 0, 0, 315, 316, 317, 318,
	0, 319, 608, 609, 0, 323, 320, 321, 0, 324,
	322, 0, 325, 326, 327, 0, 0, 328, 329, 330,
	0, 331, 332, 0, 333, 334, 335, 0, 336, 337,
	610, 338, 339, 340, 342, 344, 341, 345, 346, 347,
	348, 611, 612, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 613, 0, 0, 0, 353, 0,
	354, 0, 0, 0, 355, 356, 614, 615, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 365, 616, 0,
	617, 366, 0, 367, 368, 369, 370, 371, 618, 619,
	620, 448, 0, 372, 373, 0, 374, 375, 376, 377,
	0, 0, 0, 0, 378, 379, 380, 382, 0, 0,
	381, 621, 622, 0, 623, 0, 383, 384, 0, 624,
	0, 385, 386, 387, 0, 388, 0, 0, 0, 389,
	390, 391, 392, 393, 394, 0, 395, 397, 396, 0,
	398, 625, 0, 399, 400, 0, 0, 401, 0, 0,
	0, 402, 403, 406, 0, 0, 404, 405, 407, 408,
	0, 409, 410, 412, 415, 411, 413, 414, 416, 429,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 431, 0, 430, 0, 432, 433, 434, 439,
	441, 442, 437, 438, 440, 443, 444, 436, 0, 435,
	0, 0, 0, 445, 446, 0, 626, 447, 627, 449,
	450, 0, 0, 451, 0, 0, 0, 453, 454, 455,
	0, 0, 456, 457, 628, 0, 458, 0, 629, 459,
	460, 452, 461, 462, 463, 464, 465, 466, 467, 468,
	0, 469, 470, 630, 471, 472, 473, 631, 474, 475,
	476, 632, 477, 633, 478, 479, 0, 480, 481, 0,
	482, 483, 484, 485, 486, 487, 488, 634, 489, 491,
	490, 492, 0, 493, 0, 494, 495, 496, 0, 0,
	0, 0, 497, 0, 499, 500, 501, 498, 502, 503,
	504, 505, 0, 506, 507, 508, 0, 509, 510, 511,
	512, 635, 513, 0, 514, 515, 521, 522, 516, 517,
	523, 524, 525, 526, 527, 0, 529, 530, 528, 531,
	532, 533, 0, 534, 535, 518, 519, 536, 537, 0,
	538, 539, 540, 541, 542, 543, 636, 0, 544, 0,
	545, 546, 547, 548, 520, 549, 554, 637, 550, 551,
	552, 553, 638, 556, 0, 557, 558, 0, 555, 0,
	559, 560, 561, 562, 563, 564, 565, 343, 566, 0,
	567, 639, 640, 641, 642, 0, 576, 0, 568, 569,
	570, 643, 571, 644, 0, 572, 573, 574, 575, 0,
	577, 578, 0, 0, 579, 580, 581, 583, 584, 582,
	585, 0, 586, 0, 0, 587, 588, 589, 645, 646,
	647, 0, 591, 590, 592, 648, 1476, 0, 257, 0,
	593, 594, 649, 595, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 598, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 599, 600, 0, 280, 601, 281,
	602, 0, 603, 282, 283, 284, 285, 286, 287, 0,
	0, 0, 288, 604, 605, 606, 0, 289, 290, 607,
	0, 0, 0, 291, 292, 293, 294, 295, 296, 297,
	0, 0, 299, 300, 301, 298, 302, 0, 303, 0,
	304, 305, 306, 307, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 0, 0,
	315, 316, 317, 318, 0, 319, 608, 609, 0, 323,
	320, 321, 0, 324, 322, 0, 325, 326, 327, 0,
	0, 328, 329, 330, 0, 331, 332, 0, 333, 334,
	335, 0, 336, 337, 610, 338, 339, 340, 342, 344,
	341, 345, 346, 347, 348, 611, 612, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 613, 0,
	0, 0, 353, 0, 354, 0, 0, 0, 355, 356,
	614, 615, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 365, 616, 0, 617, 366, 0, 367, 368, 369,
	370, 371, 1474, 619, 620, 448, 0, 372, 373, 0,
	374, 375, 376, 377, 0, 0, 0, 0, 378, 379,
	380, 382, 0, 0, 381, 621, 622, 0, 623, 0,
	383, 384, 0, 624, 0, 385, 386, 387, 0, 388,
	0, 0, 0, 389, 390, 391, 392, 393, 394, 0,
	395, 397, 396, 0, 398, 625, 0, 399, 400, 0,
	0, 401, 0, 0, 0, 402, 403, 406, 0, 0,
	404, 405, 407, 408, 0, 409, 410, 412, 415, 411,
	413, 414, 416, 429, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 431, 0, 430, 0,
	432, 433, 434, 439, 441, 442, 437, 438, 440, 443,
	444, 436, 0, 435, 0, 0, 0, 445, 446, 0,
	626, 447, 627, 449, 450, 0, 0, 451, 0, 0,
	0, 453, 454, 455, 0, 0, 456, 457, 628, 0,
	458, 0, 629, 459, 460, 452, 461, 462, 463, 464,
	465, 466, 467, 468, 0, 469, 470, 630, 471, 472,
	473, 631, 474, 475, 476, 632, 477, 633, 478, 479,
	0, 480, 481, 0, 482, 483, 484, 485, 486, 487,
	488, 634, 489, 491, 490, 492, 0, 493, 0, 494,
	495, 496, 0, 0, 0, 0, 497, 0, 499, 500,
	501, 498, 502, 503, 504, 505, 0, 506, 507, 508,
	0, 509, 510, 511, 512, 635, 513, 0, 514, 515,
	521, 522, 516, 517, 523, 524, 525, 526, 527, 0,
	529, 530, 528, 531, 532, 533, 0, 534, 535, 518,
	519, 536, 537, 0, 538, 539, 540, 541, 542, 543,
	636, 0, 544, 0, 545, 546, 547, 548, 520, 549,
	554, 637, 550, 551, 552, 553, 638, 556, 0, 557,
	558, 0, 555, 0, 559, 560, 561, 562, 563, 564,
	565, 343, 566, 0, 567, 639, 640, 641, 642, 0,
	576, 0, 568, 569, 570, 643, 571, 644, 0, 572,
	573, 574, 575, 0, 577, 578, 0, 0, 579, 580,
	581, 583, 584, 582, 585, 0, 586, 0, 0, 587,
	588, 589, 645, 646, 647, 0, 591, 590, 592, 648,
	1437, 0, 257, 0, 593, 594, 649, 595, 596, 597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 598, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 599, 600,
	0, 280, 601, 281, 602, 0, 603, 282, 283, 284,
	285, 286, 287, 0, 0, 0, 288, 604, 605, 606,
	0, 289, 290, 607, 0, 0, 0, 291, 292, 293,
	294, 295, 296, 297, 0, 0, 299, 300, 301, 298,
	302, 0, 303, 0, 304, 305, 306, 307, 308, 309,
	0, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 0, 0, 315, 316, 317, 318, 0, 319,
	608, 609, 0, 323, 320, 321, 0, 324, 322, 0,
	325, 326, 327, 0, 0, 328, 329, 330, 0, 331,
	332, 0, 333, 334, 335, 0, 336, 337, 610, 338,
	339, 340, 342, 344, 341, 345, 346, 347, 348, 611,
	612, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 613, 0, 0, 0, 353, 0, 354, 0,
	0, 0, 355, 356, 614, 615, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 365, 616, 0, 617, 366,
	0, 367, 368, 369, 370, 371, 618, 619, 620, 448,
	0, 372, 373, 0, 374, 375, 376, 377, 0, 0,
	0, 0, 378, 379, 380, 382, 0, 0, 381, 621,
	622, 0, 623, 0, 383, 384, 0, 624, 0, 385,
	386, 387, 0, 388, 0, 0, 0, 389, 390, 391,
	392, 393, 394, 0, 395, 397, 396, 0, 398, 625,
	0, 399, 400, 0, 0, 401, 0, 0, 0, 402,
	403, 406, 0, 0, 404, 405, 407, 408, 0, 409,
	410, 412, 415, 411, 413, 414, 416, 429, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	431, 0, 430, 0, 432, 433, 434, 439, 441, 442,
	437, 438, 440, 443, 444, 436, 0, 435, 0, 0,
	0, 445, 446, 0, 626, 447, 627, 449, 450, 0,
	0, 451, 0, 0, 0, 453, 454, 455, 0, 0,
	456, 457, 628, 0, 458, 0, 629, 459, 460, 452,
	461, 462, 463, 464, 465, 466, 467, 468, 0, 469,
	470, 630, 471, 472, 473, 631, 474, 475, 476, 632,
	477, 633, 478, 479, 0, 480, 481, 0, 482, 483,
	484, 485, 486, 487, 488, 634, 489, 491, 490, 492,
	0, 493, 0, 494, 495, 496, 0, 0, 0, 0,
	497, 0, 499, 500, 501, 498, 502, 503, 504, 505,
	0, 506, 507, 508, 0, 509, 510, 511, 512, 635,
	513, 0, 514, 515, 521, 522, 516, 517, 523, 524,
	525, 526, 527, 0, 529, 530, 528, 531, 532, 533,
	0, 534, 535, 518, 519, 536, 537, 0, 538, 539,
	540, 541, 542, 543, 636, 0, 544, 0, 545, 546,
	547, 548, 520, 549, 554, 637, 550, 551, 552, 553,
	638, 556, 0, 557, 558, 0, 555, 0, 559, 560,
	561, 562, 563, 564, 565, 343, 566, 0, 567, 639,
	640, 641, 642, 0, 576, 0, 568, 569, 570, 643,
	571, 644, 0, 572, 573, 574, 575, 0, 577, 578,
	0, 0, 579, 580, 581, 583, 584, 582, 585, 0,
	586, 0, 0, 587, 588, 589, 645, 646, 647, 0,
	591, 590, 592, 648, 1423, 0, 257, 0, 593, 594,
	649, 595, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 598,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 599, 600, 0, 280, 601, 281, 602, 0,
	603, 282, 283, 284, 285, 286, 287, 0, 0, 0,
	288, 604, 605, 606, 0, 289, 290, 607, 0, 0,
	0, 291, 292, 293, 294, 295, 296, 297, 0, 0,
	299, 300, 301, 298, 302, 0, 303, 0, 304, 305,
	306, 307, 308, 309, 0, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 0, 0, 315, 316,
	317, 318, 0, 319, 608, 609, 0, 323, 320, 321,
	0, 324, 322, 0, 325, 326, 327, 0, 0, 328,
	329, 330, 0, 331, 332, 0, 333, 334, 335, 0,
	336, 337, 610, 338, 339, 340, 342, 344, 341, 345,
	346, 347, 348, 611, 612, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 613, 0, 0, 0,
	353, 0, 354, 0, 0, 0, 355, 356, 614, 615,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 365,
	616, 0, 617, 366, 0, 367, 368, 369, 370, 371,
	618, 619, 620, 448, 0, 372, 373, 0, 374, 375,
	376, 377, 0, 0, 0, 0, 378, 379, 380, 382,
	0, 0, 381, 621, 622, 0, 623, 0, 383, 384,
	0, 624, 0, 385, 386, 387, 0, 388, 0, 0,
	0, 389, 390, 391, 392, 393, 394, 0, 395, 397,
	396, 0, 398, 625, 0, 399, 400, 0, 0, 401,
	0, 0, 0, 402, 403, 406, 0, 0, 404, 405,
	407, 408, 0, 409, 410, 412, 415, 411, 413, 414,
	416, 429, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 431, 0, 430, 0, 432, 433,
	434, 439, 441, 442, 437, 438, 440, 443, 444, 436,
	0, 435, 0, 0, 0, 445, 446, 0, 626, 447,
	627, 449, 450, 0, 0, 451, 0, 0, 0, 453,
	454, 455, 0, 0, 456, 457, 628, 0, 458, 0,
	629, 459, 460, 452, 461, 462, 463, 464, 465, 466,
	467, 468, 0, 469, 470, 630, 471, 472, 473, 631,
	474, 475, 476, 632, 477, 633, 478, 479, 0, 480,
	481, 0, 482, 483, 484, 485, 486, 487, 488, 634,
	489, 491, 490, 492, 0, 493, 0, 494, 495, 496,
	0, 0, 0, 0, 497, 0, 499, 500, 501, 498,
	502, 503, 504, 505, 0, 506, 507, 508, 0, 509,
	510, 511, 512, 635, 513, 0, 514, 515, 521, 522,
	516, 517, 523, 524, 525, 526, 527, 0, 529, 530,
	528, 531, 532, 533, 0, 534, 535, 518, 519, 536,
	537, 0, 538, 539, 540, 541, 542, 543, 636, 0,
	544, 0, 545, 546, 547, 548, 520, 549, 554, 637,
	550, 551, 552, 553, 638, 556, 0, 557, 558, 0,
	555, 0, 559, 560, 561, 562, 563, 564, 565, 343,
	566, 0, 567, 639, 640, 641, 642, 0, 576, 0,
	568, 569, 570, 643, 571, 644, 0, 572, 573, 574,
	575, 0, 577, 578, 0, 0, 579, 580, 581, 583,
	584, 582, 585, 0, 586, 0, 0, 587, 588, 589,
	645, 646, 647, 0, 591, 590, 592, 648, 1261, 0,
	257, 0, 593, 594, 649, 595, 596, 597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 598, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 599, 600, 0, 280,
	601, 281, 602, 0, 603, 282, 283, 284, 285, 286,
	287, 0, 0, 0, 288, 604, 605, 606, 0, 289,
	290, 607, 0, 0, 0, 291, 292, 293, 294, 295,
	296, 297, 0, 0, 299, 300, 301, 298, 302, 0,
	303, 0, 304, 305, 306, 307, 308, 309, 0, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	0, 0, 315, 316, 317, 318, 0, 319, 608, 609,
	0, 323, 320, 321, 0, 324, 322, 0, 325, 326,
	327, 0, 0, 328, 329, 330, 0, 331, 332, 0,
	333, 334, 335, 0, 336, 337, 610, 338, 339, 340,
	342, 344, 341, 345, 346, 347, 348, 611, 612, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	613, 0, 0, 0, 353, 0, 354, 0, 0, 0,
	355, 356, 614, 615, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 365, 616, 0, 617, 366, 0, 367,
	368, 369, 370, 371, 1260, 619, 620, 448, 0, 372,
	373, 0, 374, 375, 376, 377, 0, 0, 0, 0,
	378, 379, 380, 382, 0, 0, 381, 621, 622, 0,
	623, 0, 383, 384, 0, 624, 0, 385, 386, 387,
	0, 388, 0, 0, 0, 389, 390, 391, 392, 393,
	394, 0, 395, 397, 396, 0, 398, 625, 0, 399,
	400, 0, 0, 401, 0, 0, 0, 402, 403, 406,
	0, 0, 404, 405, 407, 408, 0, 409, 410, 412,
	415, 411, 413, 414, 416, 429, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 431, 0,
	430, 0, 432, 433, 434, 439, 441, 442, 437, 438,
	440, 443, 444, 436, 0, 435, 0, 0, 0, 445,
	446, 0, 626, 447, 627, 449, 450, 0, 0, 451,
	0, 0, 0, 453, 454, 455, 0, 0, 456, 457,
	628, 0, 458, 0, 629, 459, 460, 452, 461, 462,
	463, 464, 465, 466, 467, 468, 0, 469, 470, 630,
	471, 472, 473, 631, 474, 475, 476, 632, 477, 633,
	478, 479, 0, 480, 481, 0, 482, 483, 484, 485,
	486, 487, 488, 634, 489, 491, 490, 492, 0, 493,
	0, 494, 495, 496, 0, 0, 0, 0, 497, 0,
	499, 500, 501, 498, 502, 503, 504, 505, 0, 506,
	507, 508, 0, 509, 510, 511, 512, 635, 513, 0,
	514, 515, 521, 522, 516, 517, 523, 524, 525, 526,
	527, 0, 529, 530, 528, 531, 532, 533, 0, 534,
	535, 518, 519, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 636, 0, 544, 0, 545, 546, 547, 548,
	520, 549, 554, 637, 550, 551, 552, 553, 638, 556,
	0, 557, 558, 0, 555, 0, 559, 560, 561, 562,
	563, 564, 565, 343, 566, 0, 567, 639, 640, 641,
	642, 0, 576, 0, 568, 569, 570, 643, 571, 644,
	0, 572, 573, 574, 575, 0, 577, 578, 0, 0,
	579, 580, 581, 583, 584, 582, 585, 0, 586, 0,
	0, 587, 588, 589, 645, 646, 647, 0, 591, 590,
	592, 648, 1252, 0, 257, 0, 593, 594, 649, 595,
	596, 597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 598, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	599, 600, 0, 280, 601, 281, 602, 0, 603, 282,
	283, 284, 285, 286, 287, 0, 0, 0, 288, 604,
	605, 606, 0, 289, 290, 607, 0, 0, 0, 291,
	292, 293, 294, 295, 296, 297, 0, 0, 299, 300,
	301, 298, 302, 0, 303, 0, 304, 305, 306, 307,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 0, 0, 315, 316, 317, 318,
	0, 319, 608, 609, 0, 323, 320, 321, 0, 324,
	322, 0, 325, 326, 327, 0, 0, 328, 329, 330,
	0, 331, 332, 0, 333, 334, 335, 0, 336, 337,
	610, 338, 339, 340, 342, 344, 341, 345, 346, 347,
	348, 611, 612, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 613, 0, 0, 0, 353, 0,
	354, 0, 0, 0, 355, 356, 614, 615, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 365, 616, 0,
	617, 366, 0, 367, 368, 369, 370, 371, 1251, 619,
	620, 448, 0, 372, 373, 0, 374, 375, 376, 377,
	0, 0, 0, 0, 378, 379, 380, 382, 0, 0,
	381, 621, 622, 0, 623, 0, 383, 384, 0, 624,
	0, 385, 386, 387, 0, 388, 0, 0, 0, 389,
	390, 391, 392, 393, 394, 0, 395, 397, 396, 0,
	398, 625, 0, 399, 400, 0, 0, 401, 0, 0,
	0, 402, 403, 406, 0, 0, 404, 405, 407, 408,
	0, 409, 410, 412, 415, 411, 413, 414, 416, 429,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 431, 0, 430, 0, 432, 433, 434, 439,
	441, 442, 437, 438, 440, 443, 444, 436, 0, 435,
	0, 0, 0, 445, 446, 0, 626, 447, 627, 449,
	450, 0, 0, 451, 0, 0, 0, 453, 454, 455,
	0, 0, 456, 457, 628, 0, 458, 0, 629, 459,
	460, 452, 461, 462, 463, 464, 465, 466, 467, 468,
	0, 469, 470, 630, 471, 472, 473, 631, 474, 475,
	476, 632, 477, 633, 478, 479, 0, 480, 481, 0,
	482, 483, 484, 485, 486, 487, 488, 634, 489, 491,
	490, 492, 0, 493, 0, 494, 495, 496, 0, 0,
	0, 0, 497, 0, 499, 500, 501, 498, 502, 503,
	504, 505, 0, 506, 507, 508, 0, 509, 510, 511,
	512, 635, 513, 0, 514, 515, 521, 522, 516, 517,
	523, 524, 525, 526, 527, 0, 529, 530, 528, 531,
	532, 533, 0, 534, 535, 518, 519, 536, 537, 0,
	538, 539, 540, 541, 542, 543, 636, 0, 544, 0,
	545, 546, 547, 548, 520, 549, 554, 637, 550, 551,
	552, 553, 638, 556, 0, 557, 558, 0, 555, 0,
	559, 560, 561, 562, 563, 564, 565, 343, 566, 0,
	567, 639, 640, 641, 642, 0, 576, 0, 568, 569,
	570, 643, 571, 644, 0, 572, 573, 574, 575, 0,
	577, 578, 0, 0, 579, 580, 581, 583, 584, 582,
	585, 0, 586, 0, 0, 587, 588, 589, 645, 646,
	647, 257, 591, 590, 592, 648, 0, 0, 0, 0,
	593, 594, 649, 595, 596, 597, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 1205, 271, 272, 0,
	0, 0, 0, 0, 598, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 599, 600, 0,
	280, 601, 281, 602, 0, 603, 282, 283, 284, 285,
	286, 287, 0, 0, 0, 288, 604, 605, 606, 0,
	289, 290, 607, 0, 0, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 0, 0, 0, 0,
	0, 0, 0, 315, 316, 317, 318, 0, 319, 608,
	609, 0, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 329, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 610, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 611, 612,
	349, 0, 0, 0, 0, 0, 0, 0, 350, 351,
	352, 613, 0, 0, 0, 353, 0, 354, 0, 0,
	0, 355, 356, 614, 615, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 616, 0, 617, 366, 0,
	367, 368, 369, 370, 371, 618, 619, 620, 448, 0,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	0, 378, 379, 380, 382, 0, 0, 381, 621, 622,
	0, 623, 0, 383, 384, 0, 624, 0, 385, 386,
	387, 0, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 395, 397, 396, 0, 398, 625, 0,
	399, 400, 0, 0, 401, 0, 0, 0, 402, 403,
	406, 0, 0, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 0, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 0, 435, 0, 0, 0,
	445, 446, 0, 626, 447, 627, 449, 450, 0, 0,
	451, 0, 0, 0, 453, 454, 455, 0, 0, 456,
	457, 628, 0, 458, 0, 629, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 632, 477,
	633, 478, 479, 0, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 634, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 0, 509, 510, 511, 512, 635, 513,
	0, 514, 515, 521, 522, 516, 517, 523, 524, 525,
	526, 527, 0, 529, 530, 528, 531, 532, 533, 0,
	534, 535, 518, 519, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 636, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 637, 550, 551, 552, 553, 638,
	556, 0, 557, 558, 0, 555, 0, 559, 560, 561,
	562, 563, 564, 565, 343, 566, 0, 567, 639, 640,
	641, 642, 0, 576, 0, 568, 569, 570, 643, 571,
	644, 0, 572, 573, 574, 575, 0, 577, 578, 0,
	0, 579, 580, 581, 583, 584, 582, 585, 0, 586,
	0, 0, 587, 588, 589, 645, 646, 647, 257, 591,
	590, 592, 648, 0, 0, 0, 0, 593, 594, 649,
	595, 596, 597, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 744, 271, 272, 0, 0, 0, 0,
	0, 598, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 599, 600, 0, 280, 601, 281,
	602, 0, 603, 282, 283, 284, 285, 286, 287, 0,
	0, 0, 288, 604, 605, 606, 0, 289, 290, 607,
	0, 0, 0, 291, 292, 293, 294, 295, 296, 297,
	0, 0, 299, 300, 301, 298, 302, 0, 303, 0,
	304, 305, 306, 307, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 0, 0,
	315, 316, 317, 318, 0, 319, 608, 609, 0, 323,
	320, 321, 0, 324, 322, 0, 325, 326, 327, 0,
	0, 328, 329, 330, 0, 331, 332, 0, 333, 334,
	335, 0, 336, 337, 610, 338, 339, 340, 342, 344,
	341, 345, 346, 347, 348, 611, 612, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 613, 0,
	0, 0, 353, 0, 354, 0, 0, 0, 355, 356,
	614, 615, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 365, 616, 0, 617, 366, 0, 367, 368, 369,
	370, 371, 618, 619, 620, 448, 0, 372, 373, 0,
	374, 375, 376, 377, 0, 0, 0, 0, 378, 379,
	380, 382, 0, 0, 381, 621, 622, 0, 623, 0,
	383, 384, 0, 624, 0, 385, 386, 387, 0, 388,
	0, 0, 0, 389, 390, 391, 392, 393, 394, 0,
	395, 397, 396, 0, 398, 625, 0, 399, 400, 0,
	0, 401, 0, 0, 0, 402, 403, 406, 0, 0,
	404, 405, 407, 408, 0, 409, 410, 412, 415, 411,
	413, 414, 416, 429, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 431, 0, 430, 0,
	432, 433, 434, 439, 441, 442, 437, 438, 440, 443,
	444, 436, 0, 435, 0, 0, 0, 445, 446, 0,
	626, 447, 627, 449, 450, 0, 0, 451, 0, 0,
	0, 453, 454, 455, 0, 0, 456, 457, 628, 0,
	458, 0, 629, 459, 460, 452, 461, 462, 463, 464,
	465, 466, 467, 468, 0, 469, 470, 630, 471, 472,
	473, 631, 474, 475, 476, 632, 477, 633, 478, 479,
	0, 480, 481, 0, 482, 483, 484, 485, 486, 487,
	488, 634, 489, 491, 490, 492, 0, 493, 0, 494,
	495, 496, 0, 0, 0, 0, 497, 0, 499, 500,
	501, 498, 502, 503, 504, 505, 0, 506, 507, 508,
	0, 509, 510, 511, 512, 635, 513, 0, 514, 515,
	521, 522, 516, 517, 523, 524, 525, 526, 527, 0,
	529, 530, 528, 531, 532, 533, 0, 534, 535, 518,
	519, 536, 537, 0, 538, 539, 540, 541, 542, 543,
	636, 0, 544, 0, 545, 546, 547, 548, 520, 549,
	554, 637, 550, 551, 552, 553, 638, 556, 0, 557,
	558, 0, 555, 0, 559, 560, 561, 562, 563, 564,
	565, 343, 566, 0, 567, 639, 640, 641, 642, 0,
	576, 0, 568, 569, 570, 643, 571, 644, 0, 572,
	573, 574, 575, 0, 577, 578, 0, 0, 579, 580,
	581, 583, 584, 582, 585, 0, 586, 0, 0, 587,
	588, 589, 645, 646, 647, 0, 591, 590, 592, 648,
	738, 0, 257, 0, 593, 594, 649, 595, 596, 597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 598, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 599, 600,
	0, 280, 601, 281, 602, 0, 603, 282, 283, 284,
	285, 286, 287, 0, 0, 0, 288, 604, 605, 606,
	0, 289, 728, 607, 0, 0, 0, 291, 292, 293,
	294, 295, 296, 297, 0, 0, 299, 300, 301, 298,
	302, 0, 726, 0, 304, 305, 306, 307, 308, 309,
	0, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 0, 0, 315, 316, 317, 318, 0, 319,
	608, 609, 0, 323, 320, 321, 0, 324, 322, 0,
	325, 326, 327, 0, 0, 328, 329, 330, 0, 331,
	332, 0, 333, 334, 335, 0, 336, 337, 610, 338,
	339, 340, 342, 344, 341, 345, 346, 347, 348, 611,
	612, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 613, 0, 0, 0, 353, 0, 354, 0,
	0, 0, 355, 356, 614, 615, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 365, 616, 0, 617, 366,
	0, 367, 368, 369, 370, 371, 618, 619, 620, 448,
	0, 372, 373, 0, 374, 375, 376, 377, 0, 0,
	0, 0, 378, 379, 380, 382, 0, 0, 381, 621,
	622, 0, 623, 0, 383, 384, 0, 624, 0, 385,
	386, 387, 0, 388, 0, 0, 0, 389, 390, 391,
	392, 393, 394, 0, 395, 397, 396, 0, 398, 625,
	0, 399, 400, 0, 0, 401, 0, 0, 0, 402,
	727, 406, 0, 0, 404, 405, 407, 408, 0, 409,
	410, 412, 415, 411, 413, 414, 416, 429, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	431, 0, 739, 0, 432, 433, 434, 439, 441, 442,
	437, 438, 440, 443, 444, 436, 0, 435, 0, 0,
	0, 445, 446, 0, 626, 447, 627, 449, 450, 0,
	0, 451, 0, 0, 0, 453, 454, 455, 0, 0,
	456, 457, 628, 0, 458, 0, 629, 459, 460, 452,
	461, 462, 463, 464, 465, 466, 467, 468, 0, 469,
	470, 630, 471, 472, 473, 631, 474, 475, 476, 632,
	477, 633, 478, 479, 0, 480, 481, 0, 482, 483,
	484, 485, 486, 487, 488, 634, 489, 491, 490, 492,
	0, 493, 0, 494, 495, 496, 0, 0, 0, 0,
	497, 0, 499, 500, 501, 498, 502, 503, 504, 505,
	0, 506, 507, 508, 0, 509, 510, 511, 512, 729,
	513, 0, 514, 515, 521, 522, 516, 517, 735, 524,
	525, 526, 527, 0, 529, 530, 528, 531, 730, 533,
	0, 534, 535, 518, 519, 536, 537, 0, 538, 539,
	540, 541, 542, 543, 636, 0, 544, 0, 545, 546,
	547, 548, 520, 549, 554, 637, 550, 551, 552, 553,
	638, 556, 0, 557, 558, 0, 555, 0, 559, 560,
	561, 562, 563, 564, 565, 343, 566, 0, 567, 734,
	640, 641, 642, 0, 576, 0, 568, 732, 570, 643,
	571, 644, 0, 572, 573, 574, 575, 0, 577, 578,
	0, 0, 579, 580, 581, 583, 584, 582, 585, 0,
	586, 0, 0, 587, 588, 589, 645, 646, 647, 0,
	591, 590, 592, 648, 720, 0, 257, 0, 593, 594,
	649, 595, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 598,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 599, 600, 0, 280, 601, 281, 602, 0,
	603, 282, 283, 284, 285, 286, 287, 0, 0, 0,
	288, 604, 605, 606, 0, 289, 290, 607, 0, 0,
	0, 291, 292, 293, 294, 295, 296, 297, 0, 0,
	299, 300, 301, 298, 302, 0, 303, 0, 304, 305,
	306, 307, 308, 309, 0, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 0, 0, 315, 316,
	317, 318, 0, 319, 608, 609, 0, 323, 320, 321,
	0, 324, 322, 0, 325, 326, 327, 0, 0, 328,
	329, 330, 0, 331, 332, 0, 333, 334, 335, 0,
	336, 337, 610, 338, 339, 340, 342, 344, 341, 345,
	346, 347, 348, 611, 612, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 613, 0, 0, 0,
	353, 0, 354, 0, 0, 0, 355, 356, 614, 615,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 365,
	616, 0, 617, 366, 0, 367, 368, 369, 370, 371,
	618, 619, 620, 448, 0, 372, 373, 0, 374, 375,
	376, 377, 0, 0, 0, 0, 378, 379, 380, 382,
	0, 0, 381, 621, 622, 0, 623, 0, 383, 384,
	0, 624, 0, 385, 386, 387, 0, 388, 0, 0,
	0, 389, 390, 391, 392, 393, 394, 0, 395, 397,
	396, 0, 398, 625, 0, 399, 400, 0, 0, 401,
	0, 0, 0, 402, 403, 406, 0, 0, 404, 405,
	407, 408, 0, 409, 410, 412, 415, 411, 413, 414,
	416, 429, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 431, 0, 430, 0, 432, 433,
	434, 439, 441, 442, 437, 438, 440, 443, 444, 436,
	0, 435, 0, 0, 0, 445, 446, 0, 626, 447,
	627, 449, 450, 0, 0, 451, 0, 0, 0, 453,
	454, 455, 0, 0, 456, 457, 628, 0, 458, 0,
	629, 459, 460, 452, 461, 462, 463, 464, 465, 466,
	467, 468, 0, 469, 470, 630, 471, 472, 473, 631,
	474, 475, 476, 632, 477, 633, 478, 479, 0, 480,
	481, 0, 482, 483, 484, 485, 486, 487, 488, 634,
	489, 491, 490, 492, 0, 493, 0, 494, 495, 496,
	0, 0, 0, 0, 497, 0, 499, 500, 501, 498,
	502, 503, 504, 505, 0, 506, 507, 508, 0, 509,
	510, 511, 512, 635, 513, 0, 514, 515, 721, 522,
	516, 517, 523, 524, 525, 526, 527, 0, 529, 530,
	528, 531, 532, 533, 0, 534, 535, 518, 519, 536,
	537, 0, 538, 539, 540, 541, 542, 543, 636, 0,
	544, 0, 545, 546, 547, 548, 520, 549, 554, 637,
	550, 551, 552, 553, 638, 556, 0, 557, 558, 0,
	555, 0, 559, 560, 561, 562, 563, 564, 565, 343,
	566, 0, 567, 639, 640, 641, 642, 0, 576, 0,
	568, 569, 570, 643, 571, 644, 0, 572, 573, 574,
	575, 0, 577, 578, 0, 0, 579, 580, 581, 583,
	584, 582, 585, 0, 586, 0, 0, 587, 588, 589,
	645, 646, 647, 0, 591, 590, 592, 648, 683, 0,
	257, 0, 593, 594, 649, 595, 596, 597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 598, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 599, 600, 0, 280,
	601, 281, 602, 0, 603, 282, 283, 284, 285, 286,
	287, 0, 0, 0, 288, 604, 605, 606, 0, 289,
	290, 607, 0, 0, 0, 291, 292, 293, 294, 295,
	296, 297, 0, 0, 299, 300, 301, 298, 302, 0,
	303, 0, 304, 305, 306, 307, 308, 309, 0, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	0, 0, 315, 316, 317, 318, 0, 319, 608, 609,
	0, 323, 320, 321, 0, 324, 322, 0, 325, 326,
	327, 0, 0, 328, 329, 330, 0, 331, 332, 0,
	333, 334, 335, 0, 336, 337, 610, 338, 339, 340,
	342, 344, 341, 345, 346, 347, 348, 611, 612, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	613, 0, 0, 0, 353, 0, 354, 0, 0, 0,
	355, 356, 614, 615, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 365, 616, 0, 617, 366, 0, 367,
	368, 369, 370, 371, 618, 619, 620, 448, 0, 372,
	373, 0, 374, 375, 376, 377, 0, 0, 0, 0,
	378, 379, 380, 382, 0, 0, 381, 621, 622, 0,
	623, 0, 383, 384, 0, 624, 0, 385, 386, 387,
	0, 388, 0, 0, 0, 389, 390, 391, 392, 393,
	394, 0, 395, 397, 396, 0, 398, 625, 0, 399,
	400, 0, 0, 401, 0, 0, 0, 402, 403, 406,
	0, 0, 404, 405, 407, 408, 0, 409, 410, 412,
	415, 411, 413, 414, 416, 429, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 431, 0,
	430, 0, 432, 433, 434, 439, 441, 442, 437, 438,
	440, 443, 444, 436, 0, 435, 0, 0, 0, 445,
	446, 0, 626, 447, 627, 449, 450, 0, 0, 451,
	0, 0, 0, 453, 454, 455, 0, 0, 456, 457,
	628, 0, 458, 0, 629, 459, 460, 452, 461, 462,
	463, 464, 465, 466, 467, 468, 0, 469, 470, 630,
	471, 472, 473, 631, 474, 475, 476, 632, 477, 633,
	478, 479, 0, 480, 481, 0, 482, 483, 484, 485,
	486, 487, 488, 634, 489, 491, 490, 492, 0, 493,
	0, 494, 495, 496, 0, 0, 0, 0, 497, 0,
	499, 500, 501, 498, 502, 503, 504, 505, 0, 506,
	507, 508, 0, 509, 510, 511, 512, 635, 513, 0,
	514, 515, 521, 522, 516, 517, 523, 524, 525, 526,
	527, 0, 529, 530, 528, 531, 532, 533, 0, 534,
	535, 518, 519, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 636, 0, 544, 0, 545, 546, 547, 548,
	520, 549, 554, 637, 550, 551, 552, 553, 638, 556,
	0, 557, 558, 0, 555, 0, 559, 560, 561, 562,
	563, 564, 565, 343, 566, 0, 567, 639, 640, 641,
	642, 0, 576, 0, 568, 569, 570, 643, 571, 644,
	0, 572, 573, 574, 575, 0, 577, 578, 0, 0,
	579, 580, 581, 583, 584, 582, 585, 0, 586, 0,
	0, 587, 588, 589, 645, 646, 647, 0, 591, 590,
	592, 648, 677, 0, 257, 0, 593, 594, 649, 595,
	596, 597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 598, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	599, 600, 0, 280, 601, 281, 602, 0, 603, 282,
	283, 284, 285, 286, 287, 0, 0, 0, 288, 604,
	605, 606, 0, 289, 290, 607, 0, 0, 0, 291,
	292, 293, 294, 295, 296, 297, 0, 0, 299, 300,
	301, 298, 302, 0, 303, 0, 304, 305, 306, 307,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 0, 0, 315, 316, 317, 318,
	0, 319, 608, 609, 0, 323, 320, 321, 0, 324,
	322, 0, 325, 326, 327, 0, 0, 328, 329, 330,
	0, 331, 332, 0, 333, 334, 335, 0, 336, 337,
	610, 338, 339, 340, 342, 344, 341, 345, 346, 347,
	348, 611, 612, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 613, 0, 0, 0, 353, 0,
	354, 0, 0, 0, 355, 356, 614, 615, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 365, 616, 0,
	617, 366, 0, 367, 368, 369, 370, 371, 618, 619,
	620, 448, 0, 372, 373, 0, 374, 375, 376, 377,
	0, 0, 0, 0, 378, 379, 380, 382, 0, 0,
	381, 621, 622, 0, 623, 0, 383, 384, 0, 624,
	0, 385, 386, 387, 0, 388, 0, 0, 0, 389,
	390, 391, 392, 393, 394, 0, 395, 397, 396, 0,
	398, 625, 0, 399, 400, 0, 0, 401, 0, 0,
	0, 402, 403, 406, 0, 0, 404, 405, 407, 408,
	0, 409, 410, 412, 415, 411, 413, 414, 416, 429,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 431, 0, 430, 0, 432, 433, 434, 439,
	441, 442, 437, 438, 440, 443, 444, 436, 0, 435,
	0, 0, 0, 445, 446, 0, 626, 447, 627, 449,
	450, 0, 0, 451, 0, 0, 0, 453, 454, 455,
	0, 0, 456, 457, 628, 0, 458, 0, 629, 459,
	460, 452, 461, 462, 463, 464, 465, 466, 467, 468,
	0, 469, 470, 630, 471, 472, 473, 631, 474, 475,
	476, 632, 477, 633, 478, 479, 0, 480, 481, 0,
	482, 483, 484, 485, 486, 487, 488, 634, 489, 491,
	490, 492, 0, 493, 0, 494, 495, 496, 0, 0,
	0, 0, 497, 0, 499, 500, 501, 498, 502, 503,
	504, 505, 0, 506, 507, 508, 0, 509, 510, 511,
	512, 635, 513, 0, 514, 515, 521, 522, 516, 517,
	523, 524, 525, 526, 527, 0, 529, 530, 528, 531,
	532, 533, 0, 534, 535, 518, 519, 536, 537, 0,
	538, 539, 540, 541, 542, 543, 636, 0, 544, 0,
	545, 546, 547, 548, 520, 549, 554, 637, 550, 551,
	552, 553, 638, 556, 0, 557, 558, 0, 555, 0,
	559, 560, 561, 562, 563, 564, 565, 343, 566, 0,
	567, 639, 640, 641, 642, 0, 576, 0, 568, 569,
	570, 643, 571, 644, 0, 572, 573, 574, 575, 0,
	577, 578, 0, 0, 579, 580, 581, 583, 584, 582,
	585, 0, 586, 0, 0, 587, 588, 589, 645, 646,
	647, 0, 591, 590, 592, 648, 655, 0, 257, 0,
	593, 594, 649, 595, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 598, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 599, 600, 0, 280, 601, 281,
	602, 0, 603, 282, 283, 284, 285, 286, 287, 0,
	0, 0, 288, 604, 605, 606, 0, 289, 290, 607,
	0, 0, 0, 291, 292, 293, 294, 295, 296, 297,
	0, 0, 299, 300, 301, 298, 302, 0, 303, 0,
	304, 305, 306, 307, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 0, 0,
	315, 316, 317, 318, 0, 319, 608, 609, 0, 323,
	320, 321, 0, 324, 322, 0, 325, 326, 327, 0,
	0, 328, 329, 330, 0, 331, 332, 0, 333, 334,
	335, 0, 336, 337, 610, 338, 339, 340, 342, 344,
	341, 345, 346, 347, 348, 611, 612, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 613, 0,
	0, 0, 353, 0, 354, 0, 0, 0, 355, 356,
	614, 615, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 365, 616, 0, 617, 366, 0, 367, 368, 369,
	370, 371, 618, 619, 620, 448, 0, 372, 373, 0,
	374, 375, 376, 377, 0, 0, 0, 0, 378, 379,
	380, 382, 0, 0, 381, 621, 622, 0, 623, 0,
	383, 384, 0, 624, 0, 385, 386, 387, 0, 388,
	0, 0, 0, 389, 390, 391, 392, 393, 394, 0,
	395, 397, 396, 0, 398, 625, 0, 399, 400, 0,
	0, 401, 0, 0, 0, 402, 403, 406, 0, 0,
	404, 405, 407, 408, 0, 409, 410, 412, 415, 411,
	413, 414, 416, 429, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 431, 0, 430, 0,
	432, 433, 434, 439, 441, 442, 437, 438, 440, 443,
	444, 436, 0, 435, 0, 0, 0, 445, 446, 0,
	626, 447, 627, 449, 450, 0, 0, 451, 0, 0,
	0, 453, 454, 455, 0, 0, 456, 457, 628, 0,
	458, 0, 629, 459, 460, 452, 461, 462, 463, 464,
	465, 466, 467, 468, 0, 469, 470, 630, 471, 472,
	473, 631, 474, 475, 476, 632, 477, 633, 478, 479,
	0, 480, 481, 0, 482, 483, 484, 485, 486, 487,
	488, 634, 489, 491, 490, 492, 0, 493, 0, 494,
	495, 496, 0, 0, 0, 0, 497, 0, 499, 500,
	501, 498, 502, 503, 504, 505, 0, 506, 507, 508,
	0, 509, 510, 511, 512, 635, 513, 0, 514, 515,
	521, 522, 516, 517, 523, 524, 525, 526, 527, 0,
	529, 530, 528, 531, 532, 533, 0, 534, 535, 518,
	519, 536, 537, 0, 538, 539, 540, 541, 542, 543,
	636, 0, 544, 0, 545, 546, 547, 548, 520, 549,
	554, 637, 550, 551, 552, 553, 638, 556, 0, 557,
	558, 0, 555, 0, 559, 560, 561, 562, 563, 564,
	565, 343, 566, 0, 567, 639, 640, 641, 642, 0,
	576, 0, 568, 569, 570, 643, 571, 644, 0, 572,
	573, 574, 575, 0, 577, 578, 0, 0, 579, 580,
	581, 583, 584, 582, 585, 0, 586, 0, 0, 587,
	588, 589, 645, 646, 647, 257, 591, 590, 592, 648,
	0, 0, 0, 0, 593, 594, 649, 595, 596, 597,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 598, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 599, 600, 0, 280, 601, 281, 602, 0, 603,
	282, 283, 284, 285, 286, 287, 0, 0, 0, 288,
	604, 605, 606, 0, 289, 290, 607, 0, 0, 0,
	291, 292, 293, 294, 295, 296, 297, 0, 0, 299,
	300, 301, 298, 302, 0, 303, 0, 304, 305, 306,
	307, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	0, 0, 0, 0, 0, 0, 0, 315, 316, 317,
	318, 0, 319, 608, 609, 0, 323, 320, 321, 0,
	324, 322, 0, 325, 326, 327, 0, 0, 328, 329,
	330, 0, 331, 332, 0, 333, 334, 335, 0, 336,
	337, 610, 338, 339, 340, 342, 344, 341, 345, 346,
	347, 348, 611, 612, 349, 0, 0, 0, 0, 0,
	0, 0, 350, 351, 352, 613, 0, 0, 0, 353,
	0, 354, 0, 0, 0, 355, 356, 614, 615, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 365, 616,
	0, 617, 366, 0, 367, 368, 369, 370, 371, 618,
	619, 620, 448, 0, 372, 373, 0, 374, 375, 376,
	377, 0, 0, 0, 0, 378, 379, 380, 382, 0,
	0, 381, 621, 622, 0, 623, 0, 383, 384, 0,
	624, 0, 385, 386, 387, 0, 388, 0, 0, 0,
	389, 390, 391, 392, 393, 394, 0, 395, 397, 396,
	0, 398, 625, 0, 399, 400, 0, 0, 401, 0,
	0, 0, 402, 403, 406, 0, 0, 404, 405, 407,
	408, 0, 409, 410, 412, 415, 411, 413, 414, 416,
	429, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 431, 0, 430, 0, 432, 433, 434,
	439, 441, 442, 437, 438, 440, 443, 444, 436, 0,
	435, 0, 0, 0, 445, 446, 0, 626, 447, 627,
	449, 450, 0, 0, 451, 0, 0, 0, 453, 454,
	455, 0, 0, 456, 457, 628, 0, 458, 0, 629,
	459, 460, 452, 461, 462, 463, 464, 465, 466, 467,
	468, 0, 469, 470, 630, 471, 472, 473, 631, 474,
	475, 476, 632, 477, 633, 478, 479, 0, 480, 481,
	0, 482, 483, 484, 485, 486, 487, 488, 634, 489,
	491, 490, 492, 0, 493, 0, 494, 495, 496, 0,
	0, 0, 0, 497, 0, 499, 500, 501, 498, 502,
	503, 504, 505, 0, 506, 507, 508, 0, 509, 510,
	511, 512, 635, 513, 0, 514, 515, 521, 522, 516,
	517, 523, 524, 525, 526, 527, 0, 529, 530, 528,
	531, 532, 533, 0, 534, 535, 518, 519, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 636, 0, 544,
	0, 545, 546, 547, 548, 520, 549, 554, 637, 550,
	551, 552, 553, 638, 556, 0, 557, 558, 0, 555,
	0, 559, 560, 561, 562, 563, 564, 565, 343, 566,
	0, 567, 639, 640, 641, 642, 0, 576, 0, 568,
	569, 570, 643, 571, 644, 0, 572, 573, 574, 575,
	0, 577, 578, 0, 0, 579, 580, 581, 583, 584,
	582, 585, 0, 586, 0, 0, 587, 588, 589, 645,
	646, 647, 257, 591, 590, 592, 648, 0, 0, 0,
	0, 593, 594, 649, 595, 596, 597, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 598, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 599, 600,
	0, 280, 601, 281, 602, 0, 603, 282, 283, 284,
	285, 286, 287, 0, 0, 0, 288, 604, 605, 606,
	0, 289, 290, 607, 0, 0, 0, 291, 292, 293,
	294, 295, 296, 297, 0, 0, 299, 300, 301, 298,
	302, 0, 303, 0, 304, 305, 306, 307, 308, 309,
	0, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 0, 0, 315, 316, 317, 318, 0, 319,
	608, 609, 0, 323, 320, 321, 0, 324, 322, 0,
	325, 326, 327, 0, 0, 328, 329, 330, 0, 331,
	332, 0, 333, 334, 335, 0, 336, 337, 610, 338,
	339, 340, 342, 344, 341, 345, 346, 347, 348, 611,
	612, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 613, 0, 0, 0, 353, 0, 354, 0,
	0, 0, 355, 356, 614, 615, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 365, 616, 0, 617, 366,
	0, 367, 368, 369, 370, 371, 3372, 619, 620, 448,
	0, 372, 373, 0, 374, 375, 376, 377, 0, 0,
	0, 0, 378, 379, 380, 382, 0, 0, 381, 621,
	622, 0, 623, 0, 383, 384, 0, 624, 0, 385,
	386, 387, 0, 388, 0, 0, 0, 389, 390, 391,
	392, 393, 394, 0, 395, 397, 396, 0, 398, 625,
	0, 399, 400, 0, 0, 401, 0, 0, 0, 402,
	403, 406, 0, 0, 404, 405, 407, 408, 0, 409,
	410, 412, 415, 411, 413, 414, 416, 429, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	431, 0, 430, 0, 432, 433, 434, 439, 441, 442,
	437, 438, 440, 443, 444, 436, 0, 435, 0, 0,
	0, 445, 446, 0, 626, 447, 627, 449, 450, 0,
	0, 451, 0, 0, 0, 453, 454, 455, 0, 0,
	456, 457, 628, 0, 458, 0, 629, 459, 460, 452,
	461, 462, 463, 464, 465, 466, 467, 468, 0, 469,
	470, 630, 471, 472, 473, 631, 474, 475, 476, 632,
	477, 633, 478, 479, 0, 480, 481, 0, 482, 483,
	484, 485, 486, 487, 488, 634, 489, 491, 490, 492,
	0, 493, 0, 494, 495, 496, 0, 0, 0, 0,
	497, 0, 499, 500, 501, 498, 502, 503, 504, 505,
	0, 506, 507, 508, 0, 509, 510, 511, 512, 635,
	513, 0, 514, 515, 521, 522, 516, 517, 523, 524,
	525, 526, 527, 0, 529, 530, 528, 531, 532, 533,
	0, 534, 535, 518, 519, 536, 537, 0, 538, 539,
	540, 541, 542, 543, 636, 0, 544, 0, 545, 546,
	547, 548, 520, 549, 554, 637, 550, 551, 552, 553,
	638, 556, 0, 557, 558, 0, 555, 0, 559, 560,
	561, 562, 563, 564, 565, 343, 566, 0, 567, 639,
	640, 641, 642, 0, 576, 0, 568, 569, 570, 643,
	571, 644, 0, 572, 573, 574, 575, 0, 577, 578,
	0, 0, 579, 580, 581, 583, 584, 582, 585, 0,
	586, 0, 0, 587, 588, 589, 645, 646, 647, 257,
	591, 590, 592, 648, 0, 0, 0, 0, 593, 594,
	649, 595, 596, 597, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 598, 0, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 599, 600, 0, 280, 601,
	281, 602, 0, 603, 282, 283, 284, 285, 286, 287,
	0, 0, 0, 288, 604, 605, 606, 0, 289, 290,
	607, 0, 0, 0, 291, 292, 293, 294, 295, 296,
	297, 0, 0, 299, 300, 301, 298, 302, 0, 303,
	0, 304, 305, 306, 307, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 0, 0, 0, 0, 0, 0,
	0, 315, 316, 317, 318, 0, 319, 608, 609, 0,
	323, 320, 321, 0, 324, 322, 0, 325, 326, 327,
	0, 0, 328, 329, 330, 0, 331, 332, 0, 333,
	334, 335, 0, 336, 337, 610, 338, 339, 340, 342,
	344, 341, 345, 346, 347, 348, 611, 612, 349, 0,
	0, 0, 0, 0, 0, 0, 350, 351, 352, 613,
	0, 0, 0, 353, 0, 354, 0, 0, 0, 355,
	356, 614, 615, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 365, 616, 0, 617, 366, 0, 367, 368,
	369, 370, 371, 3320, 619, 620, 448, 0, 372, 373,
	0, 374, 375, 376, 377, 0, 0, 0, 0, 378,
	379, 380, 382, 0, 0, 381, 621, 622, 0, 623,
	0, 383, 384, 0, 624, 0, 385, 386, 387, 0,
	388, 0, 0, 0, 389, 390, 391, 392, 393, 394,
	0, 395, 397, 396, 0, 398, 625, 0, 399, 400,
	0, 0, 401, 0, 0, 0, 402, 403, 406, 0,
	0, 404, 405, 407, 408, 0, 409, 410, 412, 415,
	411, 413, 414, 416, 429, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 431, 0, 430,
	0, 432, 433, 434, 439, 441, 442, 437, 438, 440,
	443, 444, 436, 0, 435, 0, 0, 0, 445, 446,
	0, 626, 447, 627, 449, 450, 0, 0, 451, 0,
	0, 0, 453, 454, 455, 0, 0, 456, 457, 628,
	0, 458, 0, 629, 459, 460, 452, 461, 462, 463,
	464, 465, 466, 467, 468, 0, 469, 470, 630, 471,
	472, 473, 631, 474, 475, 476, 632, 477, 633, 478,
	479, 0, 480, 481, 0, 482, 483, 484, 485, 486,
	487, 488, 634, 489, 491, 490, 492, 0, 493, 0,
	494, 495, 496, 0, 0, 0, 0, 497, 0, 499,
	500, 501, 498, 502, 503, 504, 505, 0, 506, 507,
	508, 0, 509, 510, 511, 512, 635, 513, 0, 514,
	515, 521, 522, 516, 517, 523, 524, 525, 526, 527,
	0, 529, 530, 528, 531, 532, 533, 0, 534, 535,
	518, 519, 536, 537, 0, 538, 539, 540, 541, 542,
	543, 636, 0, 544, 0, 545, 546, 547, 548, 520,
	549, 554, 637, 550, 551, 552, 553, 638, 556, 0,
	557, 558, 0, 555, 0, 559, 560, 561, 562, 563,
	564, 565, 343, 566, 0, 567, 639, 640, 641, 642,
	0, 576, 0, 568, 569, 570, 643, 571, 644, 0,
	572, 573, 574, 575, 0, 577, 578, 0, 0, 579,
	580, 581, 583, 584, 582, 585, 0, 586, 0, 0,
	587, 588, 589, 645, 646, 647, 257, 591, 590, 592,
	648, 0, 0, 0, 0, 593, 594, 649, 595, 596,
	597, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 598,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 599, 600, 0, 280, 601, 281, 602, 0,
	603, 282, 283, 284, 285, 286, 287, 0, 0, 0,
	288, 604, 605, 606, 0, 289, 290, 607, 0, 0,
	0, 291, 292, 293, 294, 295, 296, 297, 0, 0,
	299, 300, 301, 298, 302, 0, 303, 0, 304, 305,
	306, 307, 308, 309, 0, 310, 311, 312, 0, 313,
	314, 0, 0, 0, 0, 0, 0, 0, 315, 316,
	317, 318, 0, 319, 608, 609, 0, 323, 320, 321,
	0, 324, 322, 0, 325, 326, 327, 0, 0, 328,
	329, 330, 0, 331, 332, 0, 333, 334, 335, 0,
	336, 337, 610, 338, 339, 340, 342, 344, 341, 345,
	346, 347, 348, 611, 612, 349, 0, 0, 0, 0,
	0, 0, 0, 350, 351, 352, 613, 0, 0, 0,
	353, 0, 354, 0, 0, 0, 355, 356, 614, 615,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 365,
	616, 0, 617, 366, 0, 367, 368, 369, 370, 371,
	3255, 619, 620, 448, 0, 372, 373, 0, 374, 375,
	376, 377, 0, 0, 0, 0, 378, 379, 380, 382,
	0, 0, 381, 621, 622, 0, 623, 0, 383, 384,
	0, 624, 0, 385, 386, 387, 0, 388, 0, 0,
	0, 389, 390, 391, 392, 393, 394, 0, 395, 397,
	396, 0, 398, 625, 0, 399, 400, 0, 0, 401,
	0, 0, 0, 402, 403, 406, 0, 0, 404, 405,
	407, 408, 0, 409, 410, 412, 415, 411, 413, 414,
	416, 429, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 431, 0, 430, 0, 432, 433,
	434, 439, 441, 442, 437, 438, 440, 443, 444, 436,
	0, 435, 0, 0, 0, 445, 446, 0, 626, 447,
	627, 449, 450, 0, 0, 451, 0, 0, 0, 453,
	454, 455, 0, 0, 456, 457, 628, 0, 458, 0,
	629, 459, 460, 452, 461, 462, 463, 464, 465, 466,
	467, 468, 0, 469, 470, 630, 471, 472, 473, 631,
	474, 475, 476, 632, 477, 633, 478, 479, 0, 480,
	481, 0, 482, 483, 484, 485, 486, 487, 488, 634,
	489, 491, 490, 492, 0, 493, 0, 494, 495, 496,
	0, 0, 0, 0, 497, 0, 499, 500, 501, 498,
	502, 503, 504, 505, 0, 506, 507, 508, 0, 509,
	510, 511, 512, 635, 513, 0, 514, 515, 521, 522,
	516, 517, 523, 524, 525, 526, 527, 0, 529, 530,
	528, 531, 532, 533, 0, 534, 535, 518, 519, 536,
	537, 0, 538, 539, 540, 541, 542, 543, 636, 0,
	544, 0, 545, 546, 547, 548, 520, 549, 554, 637,
	550, 551, 552, 553, 638, 556, 0, 557, 558, 0,
	555, 0, 559, 560, 561, 562, 563, 564, 565, 343,
	566, 0, 567, 639, 640, 641, 642, 0, 576, 0,
	568, 569, 570, 643, 571, 644, 0, 572, 573, 574,
	575, 0, 577, 578, 0, 0, 579, 580, 581, 583,
	584, 582, 585, 0, 586, 0, 0, 587, 588, 589,
	645, 646, 647, 257, 591, 590, 592, 648, 0, 0,
	0, 0, 593, 594, 649, 595, 596, 597, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 598, 0, 0, 0,
	0, 273, 274, 0, 275, 276, 277, 278, 279, 599,
	600, 0, 280, 601, 281, 602, 0, 603, 282, 283,
	284, 285, 286, 287, 0, 0, 0, 288, 604, 605,
	606, 0, 289, 290, 607, 0, 0, 0, 291, 292,
	293, 294, 295, 296, 297, 0, 0, 299, 300, 301,
	298, 302, 0, 303, 0, 304, 305, 306, 307, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 0, 0,
	0, 0, 0, 0, 0, 315, 316, 317, 318, 0,
	319, 608, 609, 0, 323, 320, 321, 0, 324, 322,
	0, 325, 326, 327, 0, 0, 328, 329, 330, 0,
	331, 332, 0, 333, 334, 335, 0, 336, 337, 610,
	338, 339, 340, 342, 344, 341, 345, 346, 347, 348,
	611, 612, 349, 0, 0, 0, 0, 0, 0, 0,
	350, 351, 352, 613, 0, 0, 0, 353, 0, 354,
	0, 0, 0, 355, 356, 614, 615, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 365, 616, 0, 617,
	366, 0, 367, 368, 369, 370, 371, 3253, 619, 620,
	448, 0, 372, 373, 0, 374, 375, 376, 377, 0,
	0, 0, 0, 378, 379, 380, 382, 0, 0, 381,
	621, 622, 0, 623, 0, 383, 384, 0, 624, 0,
	385, 386, 387, 0, 388, 0, 0, 0, 389, 390,
	391, 392, 393, 394, 0, 395, 397, 396, 0, 398,
	625, 0, 399, 400, 0, 0, 401, 0, 0, 0,
	402, 403, 406, 0, 0, 404, 405, 407, 408, 0,
	409, 410, 412, 415, 411, 413, 414, 416, 429, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 431, 0, 430, 0, 432, 433, 434, 439, 441,
	442, 437, 438, 440, 443, 444, 436, 0, 435, 0,
	0, 0, 445, 446, 0, 626, 447, 627, 449, 450,
	0, 0, 451, 0, 0, 0, 453, 454, 455, 0,
	0, 456, 457, 628, 0, 458, 0, 629, 459, 460,
	452, 461, 462, 463, 464, 465, 466, 467, 468, 0,
	469, 470, 630, 471, 472, 473, 631, 474, 475, 476,
	632, 477, 633, 478, 479, 0, 480, 481, 0, 482,
	483, 484, 485, 486, 487, 488, 634, 489, 491, 490,
	492, 0, 493, 0, 494, 495, 496, 0, 0, 0,
	0, 497, 0, 499, 500, 501, 498, 502, 503, 504,
	505, 0, 506, 507, 508, 0, 509, 510, 511, 512,
	635, 513, 0, 514, 515, 521, 522, 516, 517, 523,
	524, 525, 526, 527, 0, 529, 530, 528, 531, 532,
	533, 0, 534, 535, 518, 519, 536, 537, 0, 538,
	539, 540, 541, 542, 543, 636, 0, 544, 0, 545,
	546, 547, 548, 520, 549, 554, 637, 550, 551, 552,
	553, 638, 556, 0, 557, 558, 0, 555, 0, 559,
	560, 561, 562, 563, 564, 565, 343, 566, 0, 567,
	639, 640, 641, 642, 0, 576, 0, 568, 569, 570,
	643, 571, 644, 0, 572, 573, 574, 575, 0, 577,
	578, 0, 0, 579, 580, 581, 583, 584, 582, 585,
	0, 586, 0, 0, 587, 588, 589, 645, 646, 647,
	257, 591, 590, 592, 648, 0, 0, 0, 0, 593,
	594, 649, 595, 596, 597, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 598, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 599, 600, 0, 280,
	601, 281, 602, 0, 603, 282, 283, 284, 285, 286,
	287, 0, 0, 0, 288, 604, 605, 606, 0, 289,
	290, 607, 0, 0, 0, 291, 292, 293, 294, 295,
	296, 297, 0, 0, 299, 300, 301, 298, 302, 0,
	303, 0, 304, 305, 306, 307, 308, 309, 0, 310,
	311, 312, 0, 313, 314, 0, 0, 0, 0, 0,
	0, 0, 315, 316, 317, 318, 0, 319, 608, 609,
	0, 323, 320, 321, 0, 324, 322, 0, 325, 326,
	327, 0, 0, 328, 329, 330, 0, 331, 332, 0,
	333, 334, 335, 0, 336, 337, 610, 338, 339, 340,
	342, 344, 341, 345, 346, 347, 348, 611, 612, 349,
	0, 0, 0, 0, 0, 0, 0, 350, 351, 352,
	613, 0, 0, 0, 353, 0, 354, 0, 0, 0,
	355, 356, 614, 615, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 365, 616, 0, 617, 366, 0, 367,
	368, 369, 370, 371, 3238, 619, 620, 448, 0, 372,
	373, 0, 374, 375, 376, 377, 0, 0, 0, 0,
	378, 379, 380, 382, 0, 0, 381, 621, 622, 0,
	623, 0, 383, 384, 0, 624, 0, 385, 386, 387,
	0, 388, 0, 0, 0, 389, 390, 391, 392, 393,
	394, 0, 395, 397, 396, 0, 398, 625, 0, 399,
	400, 0, 0, 401, 0, 0, 0, 402, 403, 406,
	0, 0, 404, 405, 407, 408, 0, 409, 410, 412,
	415, 411, 413, 414, 416, 429, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 431, 0,
	430, 0, 432, 433, 434, 439, 441, 442, 437, 438,
	440, 443, 444, 436, 0, 435, 0, 0, 0, 445,
	446, 0, 626, 447, 627, 449, 450, 0, 0, 451,
	0, 0, 0, 453, 454, 455, 0, 0, 456, 457,
	628, 0, 458, 0, 629, 459, 460, 452, 461, 462,
	463, 464, 465, 466, 467, 468, 0, 469, 470, 630,
	471, 472, 473, 631, 474, 475, 476, 632, 477, 633,
	478, 479, 0, 480, 481, 0, 482, 483, 484, 485,
	486, 487, 488, 634, 489, 491, 490, 492, 0, 493,
	0, 494, 495, 496, 0, 0, 0, 0, 497, 0,
	499, 500, 501, 498, 502, 503, 504, 505, 0, 506,
	507, 508, 0, 509, 510, 511, 512, 635, 513, 0,
	514, 515, 521, 522, 516, 517, 523, 524, 525, 526,
	527, 0, 529, 530, 528, 531, 532, 533, 0, 534,
	535, 518, 519, 536, 537, 0, 538, 539, 540, 541,
	542, 543, 636, 0, 544, 0, 545, 546, 547, 548,
	520, 549, 554, 637, 550, 551, 552, 553, 638, 556,
	0, 557, 558, 0, 555, 0, 559, 560, 561, 562,
	563, 564, 565, 343, 566, 0, 567, 639, 640, 641,
	642, 0, 576, 0, 568, 569, 570, 643, 571, 644,
	0, 572, 573, 574, 575, 0, 577, 578, 0, 0,
	579, 580, 581, 583, 584, 582, 585, 0, 586, 0,
	0, 587, 588, 589, 645, 646, 647, 257, 591, 590,
	592, 648, 0, 0, 0, 0, 593, 594, 649, 595,
	596, 597, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	598, 0, 0, 0, 0, 273, 274, 0, 275, 276,
	277, 278, 279, 599, 600, 0, 280, 601, 281, 602,
	0, 603, 282, 283, 284, 285, 286, 287, 0, 0,
	0, 288, 604, 605, 606, 0, 289, 290, 607, 0,
	0, 0, 291, 292, 293, 294, 295, 296, 297, 0,
	0, 299, 300, 301, 298, 302, 0, 303, 0, 304,
	305, 306, 307, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 0, 0, 0, 0, 0, 0, 0, 315,
	316, 317, 318, 0, 319, 608, 609, 0, 323, 320,
	321, 0, 324, 322, 0, 325, 326, 327, 0, 0,
	328, 329, 330, 0, 331, 332, 0, 333, 334, 335,
	0, 336, 337, 610, 338, 339, 340, 342, 344, 341,
	345, 346, 347, 348, 611, 612, 349, 0, 0, 0,
	0, 0, 0, 0, 350, 351, 352, 613, 0, 0,
	0, 353, 0, 354, 0, 0, 0, 355, 356, 614,
	615, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	365, 616, 0, 617, 366, 0, 367, 368, 369, 370,
	371, 2836, 619, 620, 448, 0, 372, 373, 0, 374,
	375, 376, 377, 0, 0, 0, 0, 378, 379, 380,
	382, 0, 0, 381, 621, 622, 0, 623, 0, 383,
	384, 0, 624, 0, 385, 386, 387, 0, 388, 0,
	0, 0, 389, 390, 391, 392, 393, 394, 0, 395,
	397, 396, 0, 398, 625, 0, 399, 400, 0, 0,
	401, 0, 0, 0, 402, 403, 406, 0, 0, 404,
	405, 407, 408, 0, 409, 410, 412, 415, 411, 413,
	414, 416, 429, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 431, 0, 430, 0, 432,
	433, 434, 439, 441, 442, 437, 438, 440, 443, 444,
	436, 0, 435, 0, 0, 0, 445, 446, 0, 626,
	447, 627, 449, 450, 0, 0, 451, 0, 0, 0,
	453, 454, 455, 0, 0, 456, 457, 628, 0, 458,
	0, 629, 459, 460, 452, 461, 462, 463, 464, 465,
	466, 467, 468, 0, 469, 470, 630, 471, 472, 473,
	631, 474, 475, 476, 632, 477, 633, 478, 479, 0,
	480, 481, 0, 482, 483, 484, 485, 486, 487, 488,
	634, 489, 491, 490, 492, 0, 493, 0, 494, 495,
	496, 0, 0, 0, 0, 497, 0, 499, 500, 501,
	498, 502, 503, 504, 505, 0, 506, 507, 508, 0,
	509, 510, 511, 512, 635, 513, 0, 514, 515, 521,
	522, 516, 517, 523, 524, 525, 526, 527, 0, 529,
	530, 528, 531, 532, 533, 0, 534, 535, 518, 519,
	536, 537, 0, 538, 539, 540, 541, 542, 543, 636,
	0, 544, 0, 545, 546, 547, 548, 520, 549, 554,
	637, 550, 551, 552, 553, 638, 556, 0, 557, 558,
	0, 555, 0, 559, 560, 561, 562, 563, 564, 565,
	343, 566, 0, 567, 639, 640, 641, 642, 0, 576,
	0, 568, 569, 570, 643, 571, 644, 0, 572, 573,
	574, 575, 0, 577, 578, 0, 0, 579, 580, 581,
	583, 584, 582, 585, 0, 586, 0, 0, 587, 588,
	589, 645, 646, 647, 257, 591, 590, 592, 648, 0,
	0, 0, 0, 593, 594, 649, 595, 596, 597, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 598, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	599, 600, 0, 280, 601, 281, 602, 0, 603, 282,
	283, 284, 285, 286, 287, 0, 0, 0, 288, 604,
	605, 606, 0, 289, 290, 607, 0, 0, 0, 291,
	292, 293, 294, 295, 296, 297, 0, 0, 299, 300,
	301, 298, 302, 0, 303, 0, 304, 305, 306, 307,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 0,
	0, 0, 0, 0, 0, 0, 315, 316, 317, 318,
	0, 319, 608, 609, 0, 323, 320, 321, 0, 324,
	322, 0, 325, 326, 327, 0, 0, 328, 329, 330,
	0, 331, 332, 0, 333, 334, 335, 0, 336, 337,
	610, 338, 339, 340, 342, 344, 341, 345, 346, 347,
	348, 611, 612, 349, 0, 0, 0, 0, 0, 0,
	0, 350, 351, 352, 613, 0, 0, 0, 353, 0,
	354, 0, 0, 0, 355, 356, 614, 615, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 365, 616, 0,
	617, 366, 0, 367, 368, 369, 370, 371, 618, 619,
	620, 448, 0, 372, 373, 0, 374, 375, 376, 377,
	0, 0, 0, 0, 378, 379, 380, 382, 0, 0,
	381, 621, 622, 0, 623, 0, 383, 384, 0, 624,
	0, 385, 386, 387, 0, 388, 0, 0, 0, 389,
	390, 391, 392, 393, 394, 0, 395, 397, 396, 0,
	398, 625, 0, 399, 400, 0, 0, 401, 0, 0,
	0, 402, 403, 406, 0, 0, 404, 405, 407, 408,
	0, 409, 410, 412, 415, 411, 413, 414, 416, 429,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 431, 0, 430, 0, 432, 433, 434, 439,
	441, 442, 437, 438, 440, 443, 444, 436, 0, 435,
	0, 0, 0, 445, 446, 0, 626, 447, 627, 449,
	450, 0, 0, 451, 0, 0, 0, 453, 454, 455,
	0, 0, 456, 457, 628, 0, 458, 0, 629, 459,
	460, 452, 461, 462, 463, 464, 465, 466, 467, 468,
	0, 469, 470, 630, 471, 472, 473, 631, 474, 475,
	476, 632, 477, 633, 478, 479, 0, 480, 481, 0,
	482, 483, 484, 485, 486, 487, 488, 634, 489, 491,
	490, 492, 0, 493, 0, 494, 495, 496, 0, 0,
	0, 0, 497, 0, 499, 500, 501, 498, 502, 503,
	504, 505, 0, 506, 507, 508, 0, 509, 510, 511,
	512, 635, 513, 0, 514, 515, 721, 522, 516, 517,
	523, 524, 525, 526, 527, 0, 529, 530, 528, 531,
	532, 533, 0, 534, 535, 518, 519, 536, 537, 0,
	538, 539, 540, 541, 542, 543, 636, 0, 544, 0,
	545, 546, 547, 548, 520, 549, 554, 637, 550, 551,
	552, 553, 638, 556, 0, 557, 558, 0, 555, 0,
	559, 560, 561, 562, 563, 564, 565, 343, 566, 0,
	567, 639, 640, 641, 642, 0, 576, 0, 568, 569,
	570, 643, 571, 644, 0, 572, 573, 574, 575, 0,
	577, 578, 0, 0, 579, 580, 581, 583, 584, 582,
	585, 0, 586, 0, 0, 587, 588, 589, 645, 646,
	647, 257, 591, 590, 592, 648, 0, 0, 0, 0,
	593, 594, 649, 595, 596, 597, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 598, 0, 2177, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 599, 600, 0,
	280, 601, 281, 602, 0, 603, 282, 283, 284, 285,
	286, 287, 0, 0, 0, 288, 604, 605, 606, 0,
	289, 290, 607, 0, 0, 0, 291, 292, 293, 294,
	295, 296, 297, 0, 0, 299, 300, 301, 298, 302,
	0, 303, 0, 304, 305, 306, 307, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 0, 0, 0, 0,
	0, 0, 0, 315, 316, 317, 318, 0, 319, 608,
	609, 0, 323, 320, 321, 0, 324, 322, 0, 325,
	326, 327, 0, 0, 328, 329, 330, 0, 331, 332,
	0, 333, 334, 335, 0, 336, 337, 610, 338, 339,
	340, 342, 344, 341, 345, 346, 347, 348, 611, 612,
	349, 0, 0, 0, 0, 0, 0, 0, 350, 351,
	352, 613, 0, 0, 0, 353, 0, 354, 0, 0,
	0, 355, 356, 614, 615, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 365, 616, 0, 617, 366, 0,
	367, 368, 369, 370, 371, 618, 619, 620, 448, 0,
	372, 373, 0, 374, 375, 376, 377, 0, 0, 0,
	0, 378, 379, 380, 382, 0, 0, 381, 621, 622,
	0, 623, 0, 383, 384, 0, 624, 0, 385, 386,
	387, 0, 388, 0, 0, 0, 389, 390, 391, 392,
	393, 394, 0, 395, 397, 396, 0, 398, 625, 0,
	399, 400, 0, 0, 401, 0, 0, 0, 402, 403,
	406, 0, 0, 404, 405, 407, 408, 0, 409, 410,
	412, 415, 411, 413, 414, 416, 429, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 431,
	0, 430, 0, 432, 433, 434, 439, 441, 442, 437,
	438, 440, 443, 444, 436, 0, 435, 0, 0, 0,
	445, 446, 0, 626, 447, 627, 449, 450, 0, 0,
	451, 0, 0, 0, 453, 454, 455, 0, 0, 456,
	457, 628, 0, 458, 0, 629, 459, 460, 452, 461,
	462, 463, 464, 465, 466, 467, 468, 0, 469, 470,
	630, 471, 472, 473, 631, 474, 475, 476, 632, 477,
	633, 478, 479, 0, 480, 481, 0, 482, 483, 484,
	485, 486, 487, 488, 634, 489, 491, 490, 492, 0,
	493, 0, 494, 495, 496, 0, 0, 0, 0, 497,
	0, 499, 500, 501, 498, 502, 503, 504, 505, 0,
	506, 507, 508, 0, 509, 510, 511, 512, 635, 513,
	0, 514, 515, 521, 522, 516, 517, 523, 524, 525,
	526, 527, 0, 529, 530, 528, 531, 532, 533, 0,
	0, 535, 518, 519, 536, 537, 0, 538, 539, 540,
	541, 542, 543, 636, 0, 544, 0, 545, 546, 547,
	548, 520, 549, 554, 637, 550, 551, 552, 553, 638,
	556, 0, 557, 558, 0, 555, 0, 559, 560, 561,
	562, 563, 564, 565, 343, 566, 0, 567, 639, 640,
	641, 642, 0, 576, 0, 568, 569, 570, 643, 571,
	644, 0, 572, 573, 574, 575, 0, 577, 578, 0,
	0, 579, 580, 581, 583, 584, 582, 585, 0, 586,
	0, 0, 587, 588, 589, 645, 646, 647, 257, 591,
	590, 592, 648, 0, 0, 0, 0, 593, 594, 649,
	595, 596, 597, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 598, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 599, 600, 0, 280, 601, 281,
	602, 0, 603, 282, 283, 284, 285, 286, 287, 0,
	0, 0, 288, 604, 605, 606, 0, 289, 290, 607,
	0, 0, 0, 291, 292, 293, 294, 295, 296, 297,
	0, 0, 299, 300, 301, 298, 302, 0, 303, 0,
	304, 305, 306, 307, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 0, 0, 0, 0, 0, 0, 0,
	315, 316, 317, 318, 0, 319, 608, 609, 0, 323,
	320, 321, 0, 324, 322, 0, 325, 326, 327, 0,
	0, 328, 329, 330, 0, 331, 332, 0, 333, 334,
	335, 0, 336, 337, 610, 338, 339, 340, 342, 344,
	341, 345, 346, 347, 348, 611, 612, 349, 0, 0,
	0, 0, 0, 0, 0, 350, 351, 352, 613, 0,
	0, 0, 353, 0, 354, 0, 0, 0, 355, 356,
	614, 615, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 365, 616, 0, 617, 366, 0, 367, 368, 369,
	370, 371, 1223, 619, 620, 448, 0, 372, 373, 0,
	374, 375, 376, 377, 0, 0, 0, 0, 378, 379,
	380, 382, 0, 0, 381, 621, 622, 0, 623, 0,
	383, 384, 0, 624, 0, 385, 386, 387, 0, 388,
	0, 0, 0, 389, 390, 391, 392, 393, 394, 0,
	395, 397, 396, 0, 398, 625, 0, 399, 400, 0,
	0, 401, 0, 0, 0, 402, 403, 406, 0, 0,
	404, 405, 407, 408, 0, 409, 410, 412, 415, 411,
	413, 414, 416, 429, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 431, 0, 430, 0,
	432, 433, 434, 439, 441, 442, 437, 438, 440, 443,
	444, 436, 0, 435, 0, 0, 0, 445, 446, 0,
	626, 447, 627, 449, 450, 0, 0, 451, 0, 0,
	0, 453, 454, 455, 0, 0, 456, 457, 628, 0,
	458, 0, 629, 459, 460, 452, 461, 462, 463, 464,
	465, 466, 467, 468, 0, 469, 470, 630, 471, 472,
	473, 631, 474, 475, 476, 632, 477, 633, 478, 479,
	0, 480, 481, 0, 482, 483, 484, 485, 486, 487,
	488, 634, 489, 491, 490, 492, 0, 493, 0, 494,
	495, 496, 0, 0, 0, 0, 497, 0, 499, 500,
	501, 498, 502, 503, 504, 505, 0, 506, 507, 508,
	0, 509, 510, 511, 512, 635, 513, 0, 514, 515,
	521, 522, 516, 517, 523, 524, 525, 526, 527, 0,
	529, 530, 528, 531, 532, 533, 0, 534, 535, 518,
	519, 536, 537, 0, 538, 539, 540, 541, 542, 543,
	636, 0, 544, 0, 545, 546, 547, 548, 520, 549,
	554, 637, 550, 551, 552, 553, 638, 556, 0, 557,
	558, 0, 555, 0, 559, 560, 561, 562, 563, 564,
	565, 343, 566, 0, 567, 639, 640, 641, 642, 0,
	576, 0, 568, 569, 570, 643, 571, 644, 0, 572,
	573, 574, 575, 0, 577, 578, 0, 0, 579, 580,
	581, 583, 584, 582, 585, 0, 586, 0, 0, 587,
	588, 589, 645, 646, 647, 257, 591, 590, 592, 648,
	0, 0, 0, 0, 593, 594, 649, 595, 596, 597,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 598, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 599, 600, 0, 280, 601, 281, 602, 0, 603,
	282, 283, 284, 285, 286, 287, 0, 0, 0, 288,
	604, 605, 606, 0, 289, 290, 607, 0, 0, 0,
	291, 292, 293, 294, 295, 296, 297, 0, 0, 299,
	300, 301, 298, 302, 0, 303, 0, 304, 305, 306,
	307, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	0, 0, 0, 0, 0, 0, 0, 315, 316, 317,
	318, 0, 319, 608, 609, 0, 323, 320, 321, 0,
	324, 322, 0, 325, 326, 327, 0, 0, 328, 329,
	330, 0, 331, 332, 0, 333, 334, 335, 0, 336,
	337, 610, 338, 339, 340, 342, 344, 341, 345, 346,
	347, 348, 611, 612, 349, 0, 0, 0, 0, 0,
	0, 0, 350, 351, 352, 613, 0, 0, 0, 353,
	0, 354, 0, 0, 0, 355, 356, 614, 615, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 365, 616,
	0, 617, 366, 0, 367, 368, 369, 370, 371, 618,
	619, 620, 448, 0, 372, 373, 0, 374, 375, 376,
	377, 0, 0, 0, 0, 378, 379, 380, 382, 0,
	0, 381, 621, 622, 0, 623, 0, 383, 384, 0,
	624, 0, 385, 386, 387, 0, 388, 0, 0, 0,
	389, 390, 391, 392, 393, 394, 0, 395, 397, 396,
	0, 398, 625, 0, 399, 400, 0, 0, 401, 0,
	0, 0, 402, 403, 406, 0, 0, 404, 405, 407,
	408, 0, 409, 410, 412, 415, 411, 413, 414, 416,
	429, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 431, 0, 430, 0, 432, 433, 434,
	439, 441, 442, 437, 438, 440, 443, 444, 436, 0,
	435, 0, 0, 0, 445, 446, 0, 626, 447, 627,
	449, 450, 0, 0, 451, 0, 0, 0, 453, 454,
	455, 0, 0, 456, 457, 628, 0, 458, 0, 629,
	459, 460, 452, 461, 462, 463, 464, 465, 466, 467,
	468, 0, 469, 470, 630, 471, 472, 473, 631, 474,
	475, 476, 632, 477, 633, 478, 479, 0, 480, 481,
	0, 482, 483, 484, 485, 486, 487, 488, 634, 489,
	1157, 490, 492, 0, 493, 0, 494, 495, 496, 0,
	0, 0, 0, 497, 0, 499, 500, 501, 498, 502,
	503, 504, 505, 0, 506, 507, 508, 0, 509, 510,
	511, 512, 635, 513, 0, 514, 515, 521, 522, 516,
	517, 523, 524, 525, 526, 527, 0, 529, 530, 528,
	531, 532, 533, 0, 534, 535, 518, 519, 536, 537,
	0, 538, 539, 540, 541, 542, 543, 636, 0, 544,
	0, 545, 546, 547, 548, 520, 549, 554, 637, 550,
	551, 552, 553, 638, 556, 0, 557, 558, 0, 555,
	0, 559, 560, 561, 562, 563, 564, 565, 343, 566,
	0, 567, 639, 640, 641, 642, 0, 576, 0, 568,
	569, 570, 643, 571, 644, 0, 572, 573, 574, 575,
	0, 577, 578, 0, 0, 579, 580, 581, 583, 584,
	582, 585, 0, 586, 0, 0, 587, 588, 589, 645,
	646, 647, 257, 591, 590, 592, 648, 0, 0, 0,
	0, 593, 594, 649, 595, 596, 597, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 598, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 599, 600,
	0, 280, 601, 281, 602, 0, 603, 282, 283, 284,
	285, 286, 287, 0, 0, 0, 288, 604, 605, 606,
	0, 289, 290, 607, 0, 0, 0, 291, 292, 293,
	294, 295, 296, 297, 0, 0, 299, 300, 301, 298,
	302, 0, 303, 0, 304, 305, 306, 307, 308, 309,
	0, 310, 311, 312, 0, 313, 314, 0, 0, 0,
	0, 0, 0, 0, 315, 316, 317, 318, 0, 319,
	608, 609, 0, 323, 320, 321, 0, 324, 322, 0,
	325, 326, 327, 0, 0, 328, 329, 330, 0, 331,
	332, 0, 333, 334, 335, 0, 336, 337, 610, 338,
	339, 340, 342, 344, 341, 345, 346, 347, 348, 611,
	612, 349, 0, 0, 0, 0, 0, 0, 0, 350,
	351, 352, 613, 0, 0, 0, 353, 0, 354, 0,
	0, 0, 355, 356, 614, 615, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 365, 616, 0, 617, 0,
	0, 367, 368, 369, 370, 371, 618, 619, 620, 448,
	0, 372, 373, 0, 374, 375, 376, 377, 0, 0,
	0, 0, 378, 379, 380, 382, 0, 0, 381, 621,
	622, 0, 623, 0, 383, 384, 0, 624, 0, 385,
	386, 387, 0, 388, 0, 0, 0, 389, 390, 391,
	392, 393, 394, 0, 395, 397, 396, 0, 398, 625,
	0, 399, 400, 0, 0, 401, 0, 0, 0, 402,
	403, 406, 0, 0, 404, 405, 407, 408, 0, 409,
	410, 412, 415, 411, 413, 414, 416, 429, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	431, 0, 430, 0, 432, 433, 434, 439, 441, 442,
	437, 438, 440, 443, 444, 436, 0, 435, 0, 0,
	0, 445, 446, 0, 626, 447, 627, 449, 450, 0,
	0, 451, 0, 0, 0, 453, 454, 455, 0, 0,
	456, 457, 628, 0, 458, 0, 629, 459, 460, 452,
	461, 462, 0, 464, 465, 466, 467, 468, 0, 469,
	470, 630, 471, 472, 473, 631, 474, 475, 476, 632,
	477, 633, 478, 479, 0, 480, 481, 0, 482, 483,
	484, 485, 0, 487, 488, 634, 489, 491, 490, 492,
	0, 493, 0, 494, 495, 496, 0, 0, 0, 0,
	497, 0, 499, 500, 501, 498, 502, 503, 504, 505,
	0, 506, 507, 508, 0, 509, 510, 511, 512, 635,
	0, 0, 514, 515, 521, 522, 516, 517, 523, 524,
	525, 526, 527, 0, 529, 530, 528, 531, 532, 533,
	0, 534, 535, 518, 519, 536, 537, 0, 538, 539,
	540, 541, 542, 543, 636, 0, 544, 0, 545, 546,
	547, 548, 520, 549, 554, 637, 550, 551, 552, 553,
	638, 556, 0, 557, 558, 0, 555, 0, 559, 560,
	561, 562, 563, 564, 565, 343, 566, 0, 567, 639,
	640, 641, 642, 0, 576, 0, 568, 569, 570, 643,
	571, 644, 0, 572, 573, 574, 575, 0, 577, 578,
	0, 0, 579, 580, 581, 583, 584, 582, 585, 0,
	586, 0, 0, 587, 588, 589, 645, 646, 647, 0,
	591, 590, 592, 648, 0, 0, 0, 0, 593, 594,
	649, 595, 596, 597, 1706, 1707, 0, 1739, 1740, 1741,
	1749, 1750, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1742, 1737, 0,
	0, 0, 0, 1706, 1707, 1709, 1739, 1740, 1741, 1749,
	1750, 1751, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 1737, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 0, 0, 1708,
	1706, 1707, 1755, 1739, 1740, 1741, 1749, 1750, 1751, 1728,
	0, 0, 0, 0, 0, 0, 0, 0, 1725, 0,
	0, 0, 0, 1742, 1737, 0, 0, 0, 1708, 0,
	0, 1709, 0, 0, 0, 0, 0, 0, 1728, 1755,
	0, 0, 0, 0, 0, 0, 0, 1725, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1708, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1728, 0, 0, 0, 0,
	0, 0, 0, 0, 1725, 0, 0, 0, 0, 0,
	1731, 1732, 1733, 1734, 0, 0, 0, 0, 0, 0,
	1714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1731,
	1732, 1733, 1734, 0, 0, 0, 0, 0, 0, 1714,
	0, 0, 0, 0, 0, 1746, 0, 0, 1756, 0,
	0, 0, 0, 0, 1736, 1738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1731, 1732, 1733, 1734,
	0, 1752, 0, 1753, 1746, 0, 1714, 1756, 0, 0,
	1723, 1724, 0, 1736, 1738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1744, 0,
	1752, 0, 1753, 0, 0, 0, 0, 0, 0, 1723,
	1724, 1746, 0, 1729, 1756, 0, 0, 0, 0, 0,
	1736, 1738, 0, 0, 0, 0, 0, 1744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1752, 0, 1753,
	0, 0, 1729, 0, 0, 0, 1723, 1724, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 1744, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 0, 0, 0, 0, 0, 1729,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1743, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1735, 0, 0, 1743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1730, 0, 0, 0,
	0, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 1730, 0, 0, 0, 0,
	1706, 1707, 0, 1739, 1740, 1741, 1749, 1750, 1751, 0,
	0, 0, 1735, 0, 0, 0, 0, 0, 0, 0,
	0, 1747, 0, 1742, 1737, 0, 0, 0, 0, 0,
	0, 1709, 1730, 0, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1747, 0,
	0, 0, 0, 0, 0, 1708, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1728, 0, 0, 0, 0,
	0, 0, 0, 0, 1725, 0, 0, 0, 0, 1745,
	0, 0, 0, 0, 1720, 1721, 1727, 1748, 1726, 1722,
	0, 1719, 1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716,
	0, 0, 0, 0, 4306, 0, 0, 0, 1745, 0,
	0, 0, 0, 1720, 1721, 1727, 1748, 1726, 1722, 0,
	1719, 1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716, 0,
	0, 0, 0, 4230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 1731, 1732, 1733, 1734,
	1720, 1721, 1727, 1748, 1726, 1722, 1714, 1719, 1717, 1718,
	1710, 1711, 1712, 1713, 1715, 1716, 0, 0, 0, 0,
	4196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1706, 1707, 0, 1739, 1740, 1741, 1749, 1750,
	1751, 1746, 0, 0, 1756, 0, 0, 0, 0, 0,
	1736, 1738, 0, 0, 0, 1742, 1737, 0, 0, 0,
	0, 0, 0, 1709, 0, 0, 0, 1752, 0, 1753,
	0, 1755, 0, 0, 0, 0, 1723, 1724, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1744, 0, 0, 1708, 1706, 1707,
	0, 1739, 1740, 1741, 1749, 1750, 1751, 1728, 0, 1729,
	0, 0, 0, 0, 0, 0, 1725, 0, 0, 0,
	0, 1742, 1737, 0, 0, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1708, 0, 0, 0, 0, 0, 1743,
	0, 0, 0, 1728, 0, 0, 0, 0, 0, 0,
	0, 0, 1725, 0, 0, 0, 0, 0, 1731, 1732,
	1733, 1734, 0, 0, 0, 0, 0, 0, 1714, 0,
	0, 0, 0, 0, 0, 0, 1706, 1707, 0, 1739,
	1740, 1741, 1749, 1750, 1751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1742,
	1737, 0, 1735, 1746, 0, 0, 1756, 1709, 0, 0,
	0, 0, 1736, 1738, 0, 1755, 0, 0, 0, 0,
	0, 0, 1730, 0, 1731, 1732, 1733, 1734, 0, 1752,
	0, 1753, 0, 0, 1714, 0, 0, 0, 1723, 1724,
	0, 1708, 0, 0, 0, 0, 0, 0, 1747, 0,
	0, 1728, 0, 0, 0, 0, 1744, 0, 0, 0,
	1725, 0, 0, 0, 0, 0, 0, 0, 0, 1746,
	0, 1729, 1756, 0, 0, 0, 0, 0, 1736, 1738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1752, 0, 1753, 0, 0,
	0, 0, 0, 0, 1723, 1724, 0, 0, 0, 0,
	0, 0, 0, 1754, 0, 0, 0, 0, 0, 0,
	0, 0, 1744, 0, 0, 0, 0, 0, 0, 0,
	0, 1743, 1731, 1732, 1733, 1734, 0, 1729, 0, 0,
	0, 0, 1714, 0, 0, 1745, 0, 0, 0, 0,
	1720, 1721, 1727, 1748, 1726, 1722, 0, 1719, 1717, 1718,
	1710, 1711, 1712, 1713, 1715, 1716, 0, 0, 0, 0,
	4195, 0, 0, 0, 0, 0, 0, 1746, 0, 1754,
	1756, 0, 0, 0, 0, 0, 1736, 1738, 0, 0,
	0, 0, 0, 0, 1735, 0, 0, 1743, 0, 0,
	0, 0, 0, 1752, 0, 1753, 0, 0, 0, 0,
	0, 0, 1723, 1724, 1730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1706, 1707,
	1744, 1739, 1740, 1741, 1749, 1750, 1751, 0, 0, 0,
	1747, 0, 0, 0, 0, 1729, 0, 0, 0, 0,
	0, 1742, 1737, 0, 0, 0, 0, 0, 0, 1709,
	1735, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	0, 0, 0, 1708, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1728, 0, 1743, 1747, 0, 0, 0,
	0, 0, 1725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1745, 0, 0,
	0, 0, 1720, 1721, 1727, 1748, 1726, 1722, 0, 1719,
	1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716, 0, 0,
	0, 0, 4032, 0, 0, 0, 0, 0, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1731, 1732, 1733, 1734, 1730, 0,
	0, 0, 0, 0, 1714, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 1720, 1721,
	1727, 1748, 1726, 1722, 1747, 1719, 1717, 1718, 1710, 1711,
	1712, 1713, 1715, 1716, 0, 0, 0, 0, 3890, 1746,
	0, 0, 1756, 0, 0, 0, 0, 0, 1736, 1738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1752, 0, 1753, 0, 0,
	0, 0, 0, 0, 1723, 1724, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1729, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1745, 0, 0, 0, 0, 1720, 1721, 1727, 1748,
	1726, 1722, 0, 1719, 1717, 1718, 1710, 1711, 1712, 1713,
	1715, 1716, 0, 0, 0, 0, 3825, 0, 0, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1706, 1707, 0, 1739, 1740, 1741, 1749,
	1750, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 1737, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 0, 0, 0,
	1735, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 0, 0, 0, 0, 0, 1708, 1706,
	1707, 0, 1739, 1740, 1741, 1749, 1750, 1751, 1728, 0,
	0, 0, 0, 0, 0, 0, 1747, 1725, 0, 0,
	0, 0, 1742, 1737, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1728, 0, 0, 0, 0, 0,
	0, 0, 0, 1725, 0, 0, 0, 0, 0, 1731,
	1732, 1733, 1734, 0, 0, 0, 0, 0, 0, 1714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 1720, 1721,
	1727, 1748, 1726, 1722, 0, 1719, 1717, 1718, 1710, 1711,
	1712, 1713, 1715, 1716, 1746, 0, 0, 1756, 3824, 0,
	0, 0, 0, 1736, 1738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1731, 1732, 1733, 1734, 0,
	1752, 0, 1753, 0, 0, 1714, 0, 0, 0, 1723,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1744, 0, 0,
	0, 1706, 1707, 0, 1739, 1740, 1741, 1749, 1750, 1751,
	1746, 0, 1729, 1756, 0, 0, 0, 0, 0, 1736,
	1738, 0, 0, 0, 1742, 1737, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 1752, 0, 1753, 0,
	1755, 0, 0, 0, 0, 1723, 1724, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 1744, 0, 0, 1708, 0, 0, 0,
	0, 0, 1743, 0, 0, 0, 1728, 0, 1729, 0,
	0, 0, 0, 0, 0, 1725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1735, 0, 0, 1743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1730, 0, 1731, 1732, 1733,
	1734, 0, 0, 0, 0, 0, 0, 1714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1735, 1746, 0, 0, 1756, 0, 0, 0, 0,
	0, 1736, 1738, 0, 0, 0, 0, 0, 0, 0,
	0, 1730, 0, 0, 0, 0, 0, 0, 1752, 0,
	1753, 0, 0, 0, 0, 0, 0, 1723, 1724, 0,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 0,
	0, 0, 0, 0, 0, 1744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1729, 0, 0, 0, 0, 0, 0, 0, 1745, 0,
	0, 0, 0, 1720, 1721, 1727, 1748, 1726, 1722, 0,
	1719, 1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716, 0,
	0, 0, 0, 3823, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1745, 0, 0, 0, 0, 1720,
	1721, 1727, 1748, 1726, 1722, 0, 1719, 1717, 1718, 1710,
	1711, 1712, 1713, 1715, 1716, 0, 0, 1706, 1707, 3509,
	1739, 1740, 1741, 1749, 1750, 1751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 1737, 0, 1735, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 1755, 0, 0, 0,
	0, 0, 0, 1730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1706, 1707, 0, 1739, 1740, 1741, 1749,
	1750, 1751, 1708, 0, 0, 0, 0, 0, 0, 1747,
	0, 0, 1728, 0, 0, 0, 1742, 1737, 0, 0,
	0, 1725, 0, 0, 1709, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1728, 0,
	0, 0, 0, 0, 0, 0, 0, 1725, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1731, 1732, 1733, 1734, 0, 0, 0,
	0, 0, 0, 1714, 0, 0, 1745, 0, 0, 0,
	0, 1720, 1721, 1727, 1748, 1726, 1722, 0, 1719, 1717,
	1718, 1710, 1711, 1712, 1713, 1715, 1716, 0, 0, 0,
	0, 3029, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 1756, 0, 0, 0, 0, 0, 1736, 1738, 1731,
	1732, 1733, 1734, 0, 0, 0, 0, 0, 0, 1714,
	0, 0, 0, 0, 1752, 0, 1753, 0, 0, 0,
	0, 0, 0, 1723, 1724, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 1746, 0, 0, 1756, 0, 0,
	0, 0, 0, 1736, 1738, 0, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1752, 0, 1753, 0, 0, 0, 0, 0, 0, 1723,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1744, 1754, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1729, 0, 0, 0, 1743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1706, 1707, 0, 1739, 1740,
	1741, 1749, 1750, 1751, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1742, 1737,
	0, 0, 1743, 0, 0, 0, 1709, 0, 0, 1735,
	0, 0, 0, 0, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1708, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1728, 0, 0, 0, 0, 1747, 0, 0, 0, 1725,
	0, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1731, 1732, 1733, 1734, 0, 0, 0, 0, 0,
	0, 1714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1745, 0, 0, 0, 0, 1720, 1721, 1727,
	1748, 1726, 1722, 0, 1719, 1717, 1718, 1710, 1711, 1712,
	1713, 1715, 1716, 0, 0, 0, 1746, 3028, 0, 1756,
	0, 0, 0, 0, 0, 1736, 1738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1752, 0, 1753, 0, 0, 0, 1745, 0,
	0, 1723, 1724, 1720, 1721, 1727, 1748, 1726, 1722, 0,
	1719, 1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716, 1744,
	0, 0, 0, 3027, 1706, 1707, 0, 1739, 1740, 1741,
	1749, 1750, 1751, 0, 1729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1742, 1737, 0,
	0, 0, 0, 0, 0, 1709, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1708,
	0, 0, 0, 0, 1743, 0, 0, 0, 0, 1728,
	0, 0, 0, 0, 0, 0, 0, 0, 1725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1706, 1707, 0, 1739, 1740, 1741, 1749,
	1750, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 1737, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 1735, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1730, 0, 0,
	1731, 1732, 1733, 1734, 0, 0, 0, 0, 1708, 0,
	1714, 0, 0, 0, 0, 0, 0, 0, 1728, 0,
	0, 0, 0, 1747, 0, 0, 0, 1725, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 1756, 0,
	0, 0, 0, 0, 1736, 1738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1752, 0, 1753, 0, 0, 0, 0, 0, 0,
	1723, 1724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1744, 1731,
	1732, 1733, 1734, 0, 0, 0, 0, 0, 0, 1714,
	4442, 0, 0, 1729, 0, 0, 0, 0, 0, 0,
	1745, 0, 0, 0, 0, 1720, 1721, 1727, 1748, 1726,
	1722, 0, 1719, 1717, 1718, 1710, 1711, 1712, 1713, 1715,
	1716, 0, 0, 0, 1746, 3026, 0, 1756, 0, 0,
	0, 0, 0, 1736, 1738, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1752, 0, 1753, 1743, 0, 0, 0, 0, 0, 1723,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1744, 0, 0,
	1706, 1707, 0, 1739, 1740, 1741, 1749, 1750, 1751, 0,
	0, 0, 1729, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1742, 1737, 0, 0, 0, 0, 0,
	0, 1709, 0, 0, 0, 0, 1735, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 1730, 0, 0, 0,
	0, 0, 0, 0, 0, 1708, 0, 0, 0, 0,
	0, 0, 1743, 0, 0, 1728, 0, 0, 0, 0,
	0, 0, 1747, 0, 1725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1730, 1731, 1732, 1733, 1734,
	0, 0, 0, 0, 0, 0, 1714, 0, 3113, 0,
	0, 3112, 0, 0, 0, 0, 0, 0, 0, 1745,
	0, 1747, 0, 0, 1720, 1721, 1727, 1748, 1726, 1722,
	0, 1719, 1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716,
	0, 1746, 2993, 0, 1756, 0, 0, 0, 0, 0,
	1736, 1738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1752, 0, 1753,
	0, 0, 0, 0, 0, 0, 1723, 1724, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1729,
	0, 0, 0, 0, 0, 0, 0, 0, 1745, 0,
	0, 0, 0, 1720, 1721, 1727, 1748, 1726, 1722, 0,
	1719, 1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716, 0,
	0, 0, 1706, 1707, 0, 1739, 1740, 1741, 1749, 1750,
	1751, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 1737, 0, 0, 1743,
	0, 2964, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1728, 0, 0,
	0, 0, 0, 0, 0, 0, 1725, 0, 0, 0,
	0, 0, 1735, 0, 2545, 0, 0, 0, 0, 0,
	0, 1706, 1707, 0, 1739, 1740, 1741, 1749, 1750, 1751,
	0, 0, 1730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2965, 0, 1742, 1737, 0, 0, 0, 2544,
	0, 0, 1709, 0, 0, 0, 0, 0, 1747, 0,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1731, 1732,
	1733, 1734, 0, 0, 0, 0, 1708, 0, 1714, 0,
	0, 0, 0, 0, 0, 0, 1728, 0, 0, 0,
	0, 0, 0, 0, 0, 1725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 1756, 0, 0, 0,
	0, 0, 1736, 1738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1752,
	0, 1753, 0, 0, 0, 1745, 0, 0, 1723, 1724,
	1720, 1721, 1727, 1748, 1726, 1722, 0, 1719, 1717, 1718,
	1710, 1711, 1712, 1713, 1715, 1716, 1744, 1731, 1732, 1733,
	1734, 0, 0, 0, 0, 0, 0, 1714, 0, 1706,
	1707, 1729, 1739, 1740, 1741, 1749, 1750, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1742, 1737, 0, 0, 0, 0, 0, 0,
	1709, 0, 1746, 0, 0, 1756, 0, 0, 1755, 0,
	0, 1736, 1738, 1754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1752, 0,
	1753, 1743, 0, 0, 1708, 0, 0, 1723, 1724, 0,
	0, 0, 0, 0, 1728, 0, 0, 0, 0, 0,
	0, 0, 0, 1725, 0, 1744, 0, 0, 1706, 1707,
	0, 1739, 1740, 1741, 1749, 1750, 1751, 0, 0, 0,
	1729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1742, 1737, 0, 0, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 1735, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 1730, 0, 0, 0, 0, 0,
	0, 0, 0, 1708, 0, 1731, 1732, 1733, 1734, 0,
	1743, 0, 0, 1728, 0, 1714, 0, 0, 0, 0,
	1747, 0, 1725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 1756, 0, 0, 0, 0, 0, 1736,
	1738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1735, 0, 0, 1752, 0, 1753, 0,
	0, 0, 0, 0, 0, 1723, 1724, 0, 0, 0,
	0, 0, 0, 1730, 1731, 1732, 1733, 1734, 0, 0,
	0, 0, 0, 1744, 1714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1745, 1729, 1747,
	0, 0, 1720, 1721, 1727, 1748, 1726, 1722, 0, 1719,
	1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716, 0, 1746,
	0, 0, 1756, 0, 0, 0, 0, 0, 1736, 1738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 1752, 0, 1753, 0, 0,
	0, 0, 0, 0, 1723, 1724, 0, 0, 1743, 1013,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1729, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 0, 0, 0,
	0, 1720, 1721, 1727, 1748, 1726, 1722, 0, 1719, 1717,
	1718, 1710, 1711, 1712, 1713, 1715, 1716, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1730, 0, 0, 0, 0, 0, 1743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 0,
	0, 0, 0, 1706, 1707, 0, 1739, 1740, 1741, 1749,
	1750, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 1737, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 0, 0, 0,
	1735, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 0, 0, 0, 0, 0, 1708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1728, 0,
	0, 0, 0, 0, 0, 0, 1747, 1725, 0, 0,
	0, 0, 0, 0, 1745, 0, 0, 0, 0, 1720,
	1721, 1727, 1748, 1726, 1722, 0, 1719, 1717, 1718, 1710,
	1711, 1712, 1713, 1715, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1706, 1707, 0,
	1739, 1740, 1741, 1749, 1750, 1751, 0, 0, 0, 1731,
	1732, 1733, 1734, 0, 0, 0, 0, 0, 0, 1714,
	1742, 1737, 0, 0, 3119, 3114, 0, 0, 1709, 0,
	0, 0, 0, 1745, 0, 0, 1755, 0, 1720, 1721,
	1727, 1748, 1726, 1722, 0, 1719, 1717, 1718, 1710, 1711,
	1712, 1713, 1715, 1716, 1746, 0, 0, 1756, 0, 0,
	0, 0, 1708, 1736, 1738, 0, 0, 0, 0, 0,
	0, 0, 1728, 0, 0, 0, 0, 0, 0, 0,
	1752, 1725, 1753, 0, 0, 0, 0, 0, 0, 1723,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1706, 1707, 1744, 1739, 1740,
	1741, 1749, 1750, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 1729, 0, 0, 0, 0, 0, 1742, 1737,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 1731, 1732, 1733, 1734, 0, 0, 0,
	0, 0, 0, 1714, 1754, 0, 0, 0, 0, 0,
	1708, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1728, 0, 1743, 0, 0, 0, 0, 0, 0, 1725,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 1756, 0, 0, 0, 0, 0, 1736, 1738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1752, 0, 1753, 0, 0, 0,
	0, 0, 0, 1723, 1724, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1731, 1732, 1733, 1734, 1730, 1729, 0, 0, 0,
	0, 1714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 1754, 1756,
	0, 0, 0, 0, 0, 1736, 1738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1743, 0, 0, 0,
	0, 0, 1752, 0, 1753, 0, 0, 0, 0, 0,
	0, 1723, 1724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1745, 1735,
	0, 0, 0, 1720, 1721, 1727, 1748, 1726, 1722, 0,
	1719, 1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716, 1730,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1743, 1747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3081, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1745, 0, 0, 0, 0, 1720, 1721, 1727,
	1748, 1726, 1722, 1747, 1719, 1717, 1718, 1710, 1711, 1712,
	1713, 1715, 1716, 1706, 1707, 0, 1739, 1740, 1741, 1749,
	1750, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 1737, 0, 0,
	0, 3030, 0, 0, 1709, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1706, 1707, 0, 1739, 1740, 1741, 1749, 1750,
	1751, 0, 0, 0, 0, 0, 0, 0, 1708, 0,
	0, 0, 0, 0, 0, 1742, 1737, 0, 1728, 0,
	0, 0, 0, 1709, 0, 0, 0, 1725, 0, 0,
	1745, 1755, 0, 0, 0, 1720, 1721, 1727, 1748, 1726,
	1722, 0, 1719, 1717, 1718, 1710, 1711, 1712, 1713, 1715,
	1716, 0, 0, 0, 0, 0, 0, 1708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1728, 0, 0,
	0, 0, 0, 0, 0, 0, 1725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1731,
	1732, 1733, 1734, 0, 0, 0, 0, 0, 0, 1714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 1756, 1731, 1732,
	1733, 1734, 0, 1736, 1738, 0, 0, 0, 1714, 1706,
	1707, 0, 1739, 1740, 1741, 1749, 1750, 1751, 0, 0,
	1752, 0, 1753, 0, 0, 0, 0, 0, 0, 1723,
	1724, 0, 1742, 1737, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 1746, 0, 0, 1756, 1744, 1755, 0,
	0, 0, 1736, 1738, 0, 0, 0, 0, 0, 0,
	0, 0, 1729, 0, 0, 0, 0, 0, 0, 1752,
	0, 1753, 0, 0, 1708, 0, 0, 0, 1723, 1724,
	0, 0, 0, 0, 1728, 0, 0, 0, 0, 0,
	0, 0, 0, 1725, 0, 0, 1744, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 1729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1743, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1731, 1732, 1733, 1734, 0,
	0, 1743, 0, 0, 0, 1714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1730, 0, 0, 0, 0,
	1746, 0, 0, 1756, 0, 0, 0, 0, 0, 1736,
	1738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 1735, 0, 1752, 0, 1753, 0,
	0, 0, 0, 0, 0, 1723, 1724, 0, 0, 0,
	0, 0, 0, 0, 1730, 0, 0, 0, 0, 0,
	0, 0, 0, 1744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1729, 0,
	1747, 0, 0, 0, 0, 0, 1706, 1707, 0, 1739,
	1740, 1741, 1749, 1750, 1751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1737, 0, 0, 0, 0, 0, 0, 1709, 0, 0,
	1754, 0, 0, 0, 0, 1755, 0, 0, 1745, 0,
	0, 0, 0, 1720, 1721, 1727, 1748, 1726, 1722, 0,
	1719, 1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716, 0,
	0, 1708, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1728, 0, 0, 0, 0, 0, 0, 0, 0,
	1725, 0, 0, 0, 0, 0, 0, 1745, 0, 0,
	0, 0, 1720, 1721, 1727, 1748, 1726, 1722, 0, 1719,
	1717, 1718, 1710, 1711, 1712, 1713, 1715, 1716, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1730, 0, 0, 0, 0, 0, 0, 0, 905,
	0, 950, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1731, 1732, 1733, 1734, 0, 1747, 0, 0,
	0, 0, 1714, 0, 0, 0, 913, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 927, 911, 910, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	1756, 0, 0, 0, 0, 0, 1736, 1738, 0, 0,
	0, 912, 0, 0, 0, 0, 915, 0, 0, 0,
	0, 958, 0, 1752, 0, 1753, 0, 0, 0, 0,
	924, 925, 1723, 1724, 0, 0, 0, 0, 0, 941,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 1745, 951, 917, 0, 0, 1720,
	1721, 1727, 1748, 1726, 1722, 1729, 1719, 1717, 1718, 1710,
	1711, 1712, 1713, 1715, 1716, 0, 0, 0, 0, 0,
	0, 0, 918, 0, 0, 0, 0, 0, 0, 0,
	0, 949, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 920, 0, 0, 0, 0, 0,
	0, 0, 909, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	921, 922, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 929,
	928, 0, 0, 0, 0, 0, 0, 923, 1735, 0,
	0, 938, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1730, 955,
	948, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 0, 0, 0,
	0, 952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 916, 0, 0, 957, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 914, 0, 0,
	0, 945, 946, 0, 0, 0, 0, 0, 0, 0,
	0, 1745, 0, 0, 947, 0, 1720, 1721, 1727, 1748,
	1726, 1722, 0, 1719, 1717, 1718, 1710, 1711, 1712, 1713,
	1715, 1716, 0, 0, 0, 943, 0, 0, 0, 0,
	0, 0, 956, 939, 0, 932, 930, 0, 935, 0,
	0, 0, 0, 0, 936, 0, 0, 907, 0, 953,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	908, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 937, 0, 0, 0, 0, 934, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 954, 0,
	0, 0, 0, 0, 0, 0, 940, 0, 0, 0,
	0, 0, 0, 0, 0, 919, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 942,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 944,
}
var sqlPact = [...]int{

	13368, -1000, -1000, -1000, -1000, 213, -1000, -1000, 201, 199,
	198, 197, 195, 192, 190, 189, 188, 186, 175, -1000,
	-1000, -1000, -1000, -1000, -1000, 174, -1000, -1000, 173, -1000,
	170, 169, 166, -1000, -1000, 165, -1000, 164, -1000, -1000,
	-1000, -1000, 158, 157, 156, 85840, 85306, 86367, 2142, 106014,
	93246, 1977, 76790, 105480, 76256, 104946, 1943, 8139, 104412, 2611,
	155, -1000, 103878, 154, 153, 152, -1000, 103344, -1000, 1731,
	-1000, 150, 3182, 61825, 149, 142, 141, 2238, 136, -1000,
	134, 131, 130, -1000, 9570, 1549, -1000, 127, 119, -1000,
	273, 90590, 118, 114, 2594, 113, 110, 61291, 106, 105,
	2005, 2783, -1000, -1000, 1884, -1000, -1000, 101, 95, 94,
	93, 91, 90, 86, 85, 84, 83, 81, -1000, 80,
	79, 78, 76, 75, -1000, 74, 72, 71, -1000, 70,
	69, 67, 66, 65, 63, 61, 56, 55, 54, 50,
	49, 48, 47, -1000, 118247, -1000, 1779, 1617, 1616, 1613,
	1608, 1606, 969, 40, 39, 36, 35, 31, 30, 26,
	25, 23, -1000, 22, 21, 20, 19, 15, 14, 12,
	9, 132, 8, 5, 4, 3, 1, 0, -1, 3047,
	-1000, 1460, 924, 28619, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 111811, 106541, -4, -75,
	-5, -1000, 3176, 1052, 51113, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 289, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 507, 1863, 767, -1000, -1000, -1000, 102817, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2141, -72, -1000,
	1842, -1000, -1000, -1000, -1000, -1000, 766, -1000, 2139, 248,
	2062, -1000, -1000, -1000, 3253, 2297, 3690, 3684, 3682, 3681,
	3680, 111284, 1744, 3679, 2374, 3672, 3669, 3668, 3666, 3662,
	3660, 3658, -1000, 84772, 1024, 84238, 83704, 3255, 102290, 83170,
	101756, 70399, 43369, 923, 3245, -1000, -1000, -1000, -1000, -1000,
	-1000, 106541, -1000, 1022, -1000, -1000, 3657, 3656, 1886, 762,
	92712, -1000, 1867, -1000, 937, 30296, -1000, 1295, -1000, 30296,
	288, -1000, -1000, -1000, -1000, -1000, -1000, 3654, 3651, 3650,
	3649, 3648, -1000, -1000, 75722, 21859, 75188, 74654, 101222, 21315,
	82636, 82102, 100688, 69855, 1021, 1397, -1000, -1000, -1000, -1000,
	-1000, -1000, -43, 67679, 3425, 106541, -1000, 286, -1000, -1000,
	-1000, -1000, -1000, -1000, 42798, 887, 42227, 803, 41656, 573,
	-1000, -1000, -1000, -1000, 69311, -1000, 100154, 2283, 3647, 3644,
	1095, 3643, 3103, 1711, 3642, 1729, 1181, 3641, 3633, 3632,
	3631, 3630, 3628, 3627, 1312, 99620, 2861, 99086, 1586, 68767,
	1020, 81568, 86367, 2550, 98552, 1313, 1210, -1000, -1000, -1000,
	-1000, 2954, 2781, 2762, 1346, -1000, -1000, -1000, -1000, 53777,
	5972, 5711, 9082, 98018, 55977, 86367, 86367, -1000, -1000, -1000,
	-1000, -1000, 41085, 683, 40514, 837, -1000, -1000, 54327, 2803,
	-1000, -1000, -1000, -1000, 39943, 578, 39372, 824, 106541, -1000,
	2860, 1824, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2444, 1594, 3415,
	2632, 68223, 1981, 1375, 3211, 2952, 2951, 1490, 3626, 3622,
	2441, 2946, 2945, 2944, 2942, 2941, 1386, 2468, 756, 28048,
	2841, 1621, 38801, 1661, 1487, 2929, 2926, 3443, 1841, 1857,
	1974, 74120, 3621, 3620, 3152, 2898, 2895, 2877, -1000, 2802,
	-1000, -1000, -1000, -1000, 1468, -1000, -1000, -1000, -1000, 77317,
	-1000, -1000, 1314, -1000, -1000, 1314, -1000, -1000, -1000, -1000,
	-1000, 1182, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1460, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2166, -1000, 1877, -1000, -1000, 2368,
	3154, 3154, 3154, 3244, 489, 480, -1000, 132, -1000, -1000,
	117651, -1000, -1000, 43928, 43928, 43928, 43928, 43928, 43928, 43928,
	1968, -1000, 758, -1000, -1000, 816, -1000, 755, 622, -1000,
	-1000, -1000, -1000, -1000, -1000, 753, -1000, -1000, -1000, -1000,
	-1000, -1000, 3425, -1000, 24634, -1000, -1000, -1000, 477, 749,
	43928, -1000, -1000, 3472, 3467, 586, -1000, 284, 947, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2856, 747, 745, -1000, 741, 740, 739, 737, 735,
	-1000, -1000, -1000, 732, 731, 730, 729, 726, 721, 718,
	715, -1000, 1870, -1000, -1000, -1000, -1000, -1000, -1000, 678,
	676, 676, 676, -1000, 1011, -1000, -1000, -1000, 300, 675,
	277, 669, 666, 660, -1000, 711, 710, 709, 707, 706,
	705, 704, 703, 701, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1010, -1000, -1000, -1000, -1000, -46, 106541, -1000, 507,
	-46, -1000, -1000, 698, -1000, 32544, 32544, 32544, -1000, -1000,
	2133, 43928, -1000, 2548, -1000, -37, -37, 876, 52709, -1000,
	50045, 876, 276, 826, 57575, -1000, 2801, -1000, -1000, 697,
	272, -1000, -1000, -1000, -1000, 22401, 2800, 106541, 106541, 86367,
	86367, 86367, 3046, 43928, -1000, -1000, 65534, 106541, 86894, -1000,
	-1000, 3345, 62352, 65007, 106541, 2851, 64480, 3619, -1000, -1000,
	-1000, -1000, -1000, 3011, 3618, 3614, 3611, -1000, 106541, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 204, 3009, -1000, -1000,
	90056, 204, 3008, -1000, 204, 3006, -1000, 89529, -1000, -1000,
	2108, 3004, -1000, -1000, 209, 2999, -1000, -1000, -1000, 208,
	2998, -1000, -1000, 270, -68, 2997, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 117651, -1000,
	-1000, -1000, 63946, -1000, 3172, -1000, -1000, 106541, -1000, 43928,
	-1000, 3344, 1465, 71473, 3286, -55, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2345, 2333, 1133, 2183, -1000, 3062, 1676,
	-1000, 30296, 3091, -1000, -1000, -1000, 266, 22401, -1000, -1000,
	-1000, -1000, -1000, -1000, 2400, 2991, 1435, -1000, 2170, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1589, 2990, -1000, 2101,
	2989, 1585, -1000, -1000, 2517, -1000, 3149, -1000, -1000, 2492,
	2988, -36, -1000, -1000, 2249, -1000, 1794, -1000, 967, 2985,
	-1000, 81034, 55427, 54327, 67679, -49, -1000, -1000, -1000, -1000,
	-167, -1000, 20771, 117651, -1000, -1000, -1000, -1000, 1640, 117651,
	909, -1000, -1000, 2980, -1000, 117651, 906, -1000, -1000, 2979,
	-1000, 2849, -1000, -1000, 2261, -1000, -1000, 3609, -1000, -1000,
	3608, -1000, 3607, 3606, 3604, -1000, 1506, 1860, 3600, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 80507, 2132, -1000,
	-1000, 79439, -1000, 2260, 3285, -1000, 79973, 1019, -1000, 967,
	2254, -1000, 89002, 1030, -1000, 3599, 3236, 2593, 967, 2252,
	-1000, -1000, -1000, -1000, -1000, 1026, -1000, 59166, -1000, 59166,
	-1000, 1458, -1000, 110757, -37, 86367, 3425, -1000, -78, -1000,
	-1000, -1000, 1052, -1000, 53243, -1000, 53243, 92178, 70941, 956,
	791, 60757, 117651, -1000, -1000, -1000, -1000, 117651, -1000, -1000,
	-1000, -157, -1000, -1000, 70941, 54327, 117651, -1000, -1000, -1000,
	-1000, 117651, -1000, -1000, -1000, 70941, 79439, -1000, 97484, 78912,
	-1000, -1000, 1286, 2428, -1000, -1000, -1000, 70941, 1276, 70941,
	70941, 70941, -1000, 96950, -1000, -1000, 1907, 1323, 3153, 1903,
	86367, -1000, 1707, -1000, -1000, -1000, 3192, -1000, -1000, 2847,
	-1000, 63412, 88475, -1000, 87948, -1000, 87421, -1000, 86367, -1000,
	86367, -1000, 3598, 3595, 3593, 3587, -1000, 3585, 3183, -1000,
	117651, 3177, -1000, 3584, 3279, 2841, 117651, -1000, 2987, 1625,
	1622, 106541, -1000, -1000, 106541, -1000, 106541, -1000, -1000, -1000,
	1407, -1000, -1000, 2342, -1000, -1000, -1000, -1000, 86367, -1000,
	-1000, -1000, -1000, -1000, -1000, 2833, -1000, 1627, -1000, 1704,
	-1000, 3117, -1000, 1223, -1000, -1000, 216, -1000, -1000, -55,
	-1000, 110230, -1000, 2368, -1000, 106541, -1000, 2318, 2824, 2831,
	1624, 2152, 2501, -1000, 38230, 2354, 47282, 2160, 132, -1000,
	-1000, 132, 132, 29737, -1000, -1000, 62352, 62352, 22401, 1197,
	43928, 43928, 43928, 43928, 43928, 43928, 43928, 43928, 43928, 43928,
	43928, 43928, 43928, 43928, 43928, 43928, 43928, 43928, 43928, 43928,
	43928, 43928, 43928, 43928, 43928, 43928, 43928, 43928, 43928, 43928,
	43928, 43928, 43928, 43928, 43928, 2220, 43928, 1179, 43928, 43928,
	43928, 43928, 1940, -1000, -1000, 1814, 549, 1935, -1000, 3401,
	3401, 3401, 473, 473, 118095, 118095, 632, 3583, 816, -1000,
	43928, -1000, 107, 43928, 22945, -1000, 480, 8993, 2335, -1000,
	479, 23516, -1000, -1000, -1000, 24634, 622, 37659, 43928, 1003,
	117651, -1000, -1000, 1577, 3427, 20228, 2793, 2667, 694, 827,
	820, 27477, 26906, 26335, 25764, 811, 43928, 43928, 43928, 43928,
	43928, 43928, 43928, 43928, -1000, -1000, 3436, -1000, 3427, -1000,
	-1000, -1000, -1000, 3427, 1195, 1192, 3427, -1000, 3427, 3427,
	7322, 7322, 37100, 36529, 35958, 47841, 35387, 43928, 25193, 34816,
	34245, -1000, 106541, -46, 3341, 43928, 232, -1000, 116290, -1000,
	232, 232, 692, -80, 117651, 2506, 2506, 51645, 2207, 1985,
	1985, 1985, -1000, 876, 15855, 876, 95891, 2029, 876, 876,
	239, 279, 478, 49513, 2548, 95891, 785, 688, -7, -12,
	-13, -1000, -1000, -17, -23, -1000, -1000, 86367, 687, 22945,
	22401, 234, 1391, -83, 2503, 2502, 2500, -1000, 2491, 1655,
	-85, 1178, 86367, 106541, -61, -1000, 4545, -92, -1000, 1121,
	231, 3427, -1000, -1000, -1000, -1000, -1000, 3582, 3581, -1000,
	1008, 685, 679, 383, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 678, 676, 676, 676, -1000, 300, 675, 277,
	669, 666, 660, -1000, -1000, -1000, -1000, -1000, 2794, 86367,
	106541, -167, 86894, -94, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 106541, -1000, -1000, -1000, 3578, -1000, 86367, -1000,
	-1000, 86367, 204, 2975, -1000, 86367, -1000, 86367, 200, 2969,
	-1000, -1000, 106541, -1000, 86367, 86367, -1000, 106541, 106541, 106541,
	70941, 70941, 215, -1000, 86367, 897, -98, 1112, -55, -1000,
	-1000, -1000, 1314, -1000, 1984, -1000, -1000, -1000, -1000, -1000,
	-1000, 1369, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	586, -1000, -1000, -1000, -1000, -1000, -1000, 3420, 3418, -47,
	-1000, -1000, 22401, -1000, -56, 1560, 1924, -1000, 73586, 2188,
	3143, 3576, 2586, 3136, 1451, -1000, 1405, 1177, 3243, 77317,
	3299, 3310, 750, -1000, 2786, -1000, -1000, 936, 1597, 1579,
	1175, 77317, 2101, -1000, 62352, -1000, 2547, 3242, 1398, 1396,
	1398, 1398, 1385, -1000, 77317, 1573, 1172, 1171, 1808, 1801,
	-1000, -1000, 1170, 1169, 846, -1000, -57, 3295, 3306, 162,
	-1000, 2784, 1168, -1000, -1000, 86367, 22401, 1518, 1526, 1572,
	1166, -48, -1000, 3290, 3289, 1164, 1163, -1000, 2194, -1000,
	70941, 1576, 2962, 2627, 841, 2626, -1000, -1000, 841, -49,
	67679, 106541, 228, -1000, 107, 43928, 43928, 107, 43928, 107,
	3278, 2960, -1000, -1000, -1000, -1000, -1000, 3575, 1815, 2369,
	-1000, -1000, 656, 2251, 2778, 106541, 2510, -51, 86367, -1000,
	2957, 66068, 2101, 2250, -1000, -1000, 78378, -1000, 2931, 507,
	2247, -1000, 658, 3574, -1000, 109703, -1000, 3172, 1213, 2925,
	1055, 630, 3340, -1000, 630, 59693, -1000, 106541, -1000, -37,
	5587, 72532, -99, -101, 475, -1000, 96423, 106541, 1054, 73059,
	106541, 3081, 964, 54327, -1000, -107, -157, 2625, 956, 956,
	841, -1000, 841, -1000, 86367, 2830, -1000, -1000, 70941, 956,
	956, 956, -1000, -1000, -1000, -1000, 3572, 3567, 3566, -1000,
	-1000, -1000, 965, 86367, 106541, 86367, -1000, -1000, 106541, -1000,
	106541, 106541, 86367, -1000, 965, 106541, 965, 106541, 965, 106541,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 107, 43928, -1000,
	-1000, 3563, 1488, -1000, 2828, -1000, 2827, -1000, 18, -1000,
	-1000, -1000, -1000, -1000, 1905, 86367, 86367, 86367, 86367, 106541,
	-1000, 106541, 86367, -1000, 77317, -1000, 2318, 2824, -1000, -1000,
	-1000, -1000, -1000, -1000, 1337, 2087, -1000, 2440, -1000, 1424,
	-1000, -1000, -1000, 117651, 48400, -1000, -1000, 117651, 1734, -1000,
	46723, 46164, -1000, -1000, 1536, 86367, 2529, -1000, 2529, -136,
	-1000, 116191, 2439, 86367, -1000, -1000, -1000, -1000, -1000, 935,
	677, 677, 1221, 1221, 1221, 1221, 3270, 4536, 454, 6190,
	972, 972, 6762, 6762, 6762, 6762, 6762, 972, 440, 473,
	473, 440, 440, 440, 440, 440, 473, 473, 473, 972,
	972, 972, 118095, 117818, 7883, 43928, 43928, 1161, 1806, 549,
	7258, 43928, 5321, 5321, 5321, 5321, -1000, 2090, -1000, -1000,
	-1000, -1000, 2776, 648, 47841, 47841, -1000, -1000, -1000, -1000,
	24075, 43928, -1000, -1000, -1000, -1000, 33674, -1000, -1000, 115533,
	-318, 470, -128, -10, -1000, 43928, 43928, 43928, 462, -1000,
	227, 43928, 106541, -1000, 14770, 784, -204, -1000, -108, 1400,
	-1000, 43928, -1000, -1000, 1160, -1000, 1159, 1157, 1156, -1000,
	646, 461, -1000, 226, -1000, 2004, 642, 636, 43928, -1000,
	-1000, -1000, -1000, -1000, 115274, -1000, -1000, 114972, -1000, -1000,
	114916, -1000, -1000, 114550, -1000, -1000, -1000, 117602, 14183, 14094,
	13517, 7912, 12683, 11803, -113, 460, -115, 452, 933, 929,
	450, 441, 425, -116, -1000, 3562, 3561, 3559, -1000, 3558,
	3557, 3556, -1000, 3555, 3553, 3552, -1000, 3549, 3548, 3546,
	-1000, 3545, 3543, 3541, -1000, 3540, 3539, 3538, -1000, 3537,
	3535, 3533, -1000, 3531, 3530, 3527, -121, 421, -1000, 2769,
	-128, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 417,
	-1000, 416, -1000, 117154, -128, 415, 4918, -1000, 47841, 47841,
	47841, -1000, 411, -1000, 115889, -1000, 117046, 33115, 33115, 33115,
	410, 116902, 43928, -128, -122, -1000, -129, -1000, -1000, 537,
	-130, 971, 32544, 50579, 22401, -1000, 971, 971, 43928, -1000,
	43928, 2452, -1000, -1000, -1000, -1000, 2447, 2418, 2506, 51645,
	-1000, -1000, -1000, -1000, 95891, -1000, 3425, 2486, -1000, 95891,
	-1000, -1000, 106541, 507, -1000, 95891, 95891, 22401, 876, -1000,
	876, 95891, 551, -1000, -1000, -1000, -1000, -1000, 409, 56509,
	-10, 225, 22401, 967, -1000, 2508, 2508, 2508, 2508, -1000,
	-1000, 106541, 1154, -53, -131, 3383, -1000, 1885, -1000, 62352,
	-1000, 815, 1201, 22401, -1000, -1000, -1000, 635, -1000, 3427,
	3427, -1000, 3427, 106541, 2758, 143, 120, 66068, 66068, 3526,
	-1000, -1000, 204, -1000, 86367, 204, 204, -1000, 86367, 86367,
	2108, -1000, 209, -1000, 208, -1000, -1000, -68, -1000, 976,
	30296, -1000, 1314, -1000, -1000, 1520, -1000, 1827, -1000, 1187,
	-1000, -1000, -1000, -1000, 30296, -1000, 3018, 106541, 106541, 86367,
	-1000, 106541, -1000, 1982, 3370, 1792, 2341, 2339, -1000, 2245,
	109176, 2228, 62352, 106541, -1000, -1000, 633, 944, 2437, 2435,
	1049, 106541, 106541, 2419, 108649, 108122, -1000, 3525, 106541, 1881,
	43928, 66068, 2037, 1975, 107, 107, -1000, -1000, 107, 631,
	1271, 86367, 86367, 106541, 86367, 1574, -1000, -1000, -1000, -1000,
	-1000, 77844, -1000, -1000, 3435, 3433, -1000, 1398, -1000, -1000,
	-1000, 1398, 2101, 1534, 106541, 86367, 66068, 106541, 106541, 1570,
	106541, 1059, -1000, 1914, 107, 107, -1000, -1000, 107, 629,
	22401, 1837, -1000, 2846, 106541, 3466, 106541, 106541, 106541, 66068,
	3155, 107595, 106541, 106541, 66068, 2194, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 67152, 1056, 967,
	1566, 1149, 77317, 54327, 963, 54327, 2600, -1000, -1000, 19685,
	-1000, 117651, 117651, -1000, 117651, -1000, 62885, 106541, -1000, 1016,
	106541, 73059, 945, 2923, 58639, -167, 956, 70941, 86367, -51,
	106541, -1000, -1000, 2101, 2921, 507, 2241, -1000, 70941, 3332,
	2918, 628, 3516, 3513, -1000, 2131, 2239, -1000, -1000, 107068,
	2996, 846, 106541, 971, 51645, 1807, -1000, 57043, 1032, 106541,
	1706, 96, -1000, -1000, -1000, -14, 106541, -1000, 823, -1000,
	-1000, 5587, 5587, 956, -175, 627, -1000, 886, 884, 54877,
	70941, -135, -1000, -1000, -1000, -1000, 2228, 86367, 106541, 1265,
	2592, 106541, -138, -1000, 210, 625, -1000, 3118, -1000, -1000,
	964, 54327, 2755, -1000, -1000, 975, -1000, 1222, 956, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -38,
	-167, -167, -52, -53, -1000, 965, -1000, 965, -1000, 965,
	-1000, 117651, -1000, -1000, 1485, 1477, 106541, -1000, 22401, 106541,
	86367, 22401, 86367, 2823, 2820, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1064, -1000, 1734, 2081, -1000, 622,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2319,
	-1000, -54, 29737, 893, -1000, -1000, 86367, -39, 43928, 43928,
	6805, 5517, 43928, 47841, 47841, -1000, 43928, 1932, -1000, -1000,
	-1000, -1000, -1000, 2754, 620, 43928, 62352, 5610, 4714, -1000,
	408, 11222, 440, -1000, 43928, -1000, 406, 31985, -1000, 116458,
	-74, -146, -1000, 16411, -128, -147, -1000, -1000, 809, -1000,
	2936, -1000, 43928, 116547, 2269, 1733, 1662, 1497, 3427, 3460,
	19142, -1000, 60225, 980, 2032, 114358, -1000, -1000, -1000, -1000,
	62352, 62352, 43928, 43928, -1000, 43928, 43928, 43928, -1000, -1000,
	-1000, 3427, 925, -1000, -1000, -1000, 925, -1000, -1000, 1398,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1398, -1000, 43928, -1000, -1000,
	2751, 43928, -1000, 62352, 62352, 47841, 47841, 47841, 47841, 47841,
	47841, 47841, 47841, 47841, 47841, 47841, 47841, 47841, 47841, 47841,
	47841, 47841, 47841, 47841, 2365, 47841, 3399, 3399, 3399, -1000,
	2728, 2751, 43928, 43928, 62352, 405, 404, 403, -1000, 43928,
	-128, -1000, -1000, 5587, 619, -1000, 2303, -1000, 2663, -1000,
	43928, -1000, -156, -1000, 2548, -1000, -1000, 2663, 2663, -154,
	117651, 51645, 51645, -1000, 618, 43928, 2446, -1000, -1000, 781,
	-314, -1000, 883, -1000, -1000, -1000, -1000, -1000, 507, -1000,
	-1000, -1000, 163, 95891, 95891, 780, -1000, -160, -1000, -1000,
	-162, -1000, 3331, 401, 22401, -1000, 971, 3134, -1000, -1000,
	-1000, -1000, -1000, -1000, -167, 106541, 106541, 2057, 3456, -1000,
	3428, 806, 777, 133, 3427, 398, 397, 396, -167, 106541,
	106541, 106541, -1000, -1000, -1000, -1000, 204, -1000, -1000, -1000,
	200, -1000, -1000, -1000, -1000, 2498, -1000, -55, -1000, -1000,
	-1000, 43928, -1000, -1000, 3131, 1148, 1147, -1000, -1000, -1000,
	-1000, 3241, 91644, 3368, 1780, 1775, 2917, -1000, 2222, -1000,
	1033, -1000, 1962, -1000, 43928, 613, 2591, 612, 610, 3511,
	1742, 3510, 1051, 2916, 2108, 2914, 2108, -1000, -1000, -1000,
	940, -1000, 117651, -1000, 607, 606, -1000, -56, 1535, 1743,
	974, -1000, -1000, 43928, 43928, 95364, -1000, 435, 3149, -41,
	-1000, -1000, 1554, 1146, -1000, -1000, -1000, -1000, 2101, 1552,
	1140, -1000, -1000, -1000, -1000, -1000, -1000, 973, -1000, 2883,
	2880, -1000, 970, -1000, -1000, 43928, -1000, -57, 1135, 3292,
	2216, 86367, 1134, -1000, 1131, -1000, -1000, -1000, 3288, 2108,
	2913, 1141, -1000, -1000, -1000, -1000, -1000, 66610, -1000, 106541,
	86367, 1525, 841, -1000, 2413, 841, 963, 2743, -1000, 2509,
	-1000, 86367, 3509, 392, -165, -58, 62352, 3326, -1000, 2145,
	595, 86367, 926, -1000, 3425, -1000, -1000, -1000, -1000, 3283,
	86367, 3324, 2912, 967, 107, 86367, 3453, -1000, -1000, 86367,
	2911, 2129, 2212, 2360, 846, 72005, 967, 1986, -67, -1000,
	1706, 31414, 3146, -168, -1000, -1000, -1000, 971, 59693, 51645,
	43928, 3508, -173, -1000, -1000, -1000, -1000, -1000, 93778, 93778,
	70941, 70941, 70941, 956, 106541, 106541, 73059, -1000, -1000, 605,
	106541, 106541, 604, -1000, 106541, 106541, 3506, 70941, -62, 601,
	-1000, 881, 879, 870, -1000, -1000, -1000, -1000, -1000, -1000,
	-157, 107, -1000, 2054, 86367, -1000, 18599, -1000, -1000, -1000,
	-1000, -1000, 965, -1000, -1000, 1922, 2157, 1922, 1682, 1677,
	-1000, 2071, -1000, -1000, -1000, -1000, 2563, 3148, 22401, 3280,
	5321, 43928, 43928, 385, 4666, 2079, 5321, 43928, 43928, 62352,
	15170, -176, 43928, 43928, -1000, 43928, 775, 117651, 3451, 43928,
	368, 366, -1000, -1000, -1000, 3426, -1000, -1000, -1000, 117651,
	43928, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 365, -1000,
	108, -1000, -1000, -1000, 112338, -1000, 43928, 363, 3238, -1000,
	360, 358, 10527, 529, 114292, 113937, 113685, 339, -1000, -1000,
	337, 334, 117651, 2728, 117651, -1000, -1000, 895, 895, 1368,
	1368, 1368, 1368, 3399, 271, 393, 322, 357, 357, 357,
	572, 589, 589, 357, 357, 357, 2741, 2396, 600, 6303,
	-1000, -1000, 117651, 117651, 332, -1000, -1000, -1000, -128, 331,
	5587, -1000, 2658, 3237, 117651, -1000, 51645, 2658, 2658, -1000,
	-1000, 2418, 106541, 117651, 51645, -1000, 2486, -1000, 16965, -1000,
	22401, -1000, -1000, -1000, -1000, 3425, -1000, 56509, -1000, 594,
	-1000, 97, -1000, 3134, -1000, 869, -1000, -167, -167, -1000,
	-1000, 771, 3501, 792, 22401, 328, -1000, -1000, -1000, -167,
	-167, -167, -1000, -1000, -1000, 3080, 117651, 106541, 106541, 1351,
	94837, 1671, -1000, -1000, 2338, -1000, 3362, 3361, 106541, 2910,
	-1000, 5277, -1000, 1049, 113577, 52177, -1000, 52177, 106541, -1000,
	-1000, 1802, 2462, 1076, -1000, 3194, 106541, -1000, 106541, -1000,
	-1000, 106541, 106541, 86367, 106541, -1000, 2899, -181, 117651, -63,
	-1000, 867, -1000, 1399, -1000, 18056, 106541, 86367, 106541, 86367,
	1954, -1000, -1000, 2893, -186, 22401, -1000, 3449, 3448, 2908,
	3202, 3447, 106541, -1000, 106541, 86367, 3079, -1000, -1000, -1000,
	-1000, 1539, 1130, 963, -64, 591, -1000, 865, -1000, -1000,
	863, 963, -1000, 70941, 54327, 507, -1000, 2576, -1000, 91117,
	2135, 107, -1000, 3500, 94310, 590, -1000, 2044, -1000, 769,
	66068, 2101, 107, 86367, -1000, -1000, 507, 324, -65, -1000,
	1040, 22401, 86367, 2907, 2367, 846, 72005, -1000, 1213, 2501,
	-1000, -66, -1000, 557, 107, 1986, -1000, -67, 117651, -1000,
	860, -1000, -191, -1000, -1000, 323, -1000, 3078, 3077, -1000,
	2673, 52177, 587, 577, 106541, 3076, -1000, -1000, -192, 3138,
	3138, 70941, 54327, 70941, 964, -1000, 2181, -1000, -1000, -1000,
	-1000, -1000, 22401, 1393, -1000, 576, 575, -1000, -1000, -1000,
	-1000, 3148, 5321, 5321, 43928, 43928, 43928, 5321, 15170, -193,
	-1000, 5321, 5321, -128, -1000, -1000, 116458, -1000, -1000, -1000,
	117651, -1000, 17513, 1933, -1000, 113511, -1000, 29737, -1000, -1000,
	43928, 43928, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	47841, 2735, 559, 62352, -1000, -1000, 320, 978, 43928, 45605,
	2548, 978, 978, -1000, -198, -1000, -1000, -1000, 3425, 97,
	-1000, -1000, 3496, 22401, -1000, 70941, 787, -1000, 3493, -1000,
	-1000, -1000, -1000, -1000, 2615, -1000, -1000, -1000, 2336, -1000,
	1128, -1000, -1000, 106541, -1000, 106541, -1000, 22401, 106541, 2683,
	2197, -1000, 944, 2410, 558, 47841, 86367, 871, -1000, 3355,
	2653, -199, -1000, 106541, 43928, 106541, -201, -208, 2191, -1000,
	-1000, 2189, 43928, -1000, 62352, 555, 2108, 2108, -209, -214,
	-1000, -1000, 43928, 1126, 106541, 30855, -1000, 3492, 3149, -1000,
	-1000, -1000, -1000, 106541, 43928, 1125, -1000, -1000, -1000, 3445,
	2108, 22401, -1000, 2108, 2108, 3202, 1075, 106541, 86367, -1000,
	2424, 2424, 70941, 54327, -1000, -68, 963, 3322, 2571, 3491,
	-1000, -1000, -1000, -1000, 2401, -1000, -1000, 106541, 2384, 957,
	-1000, -215, -1000, 858, 857, 73059, 945, 950, -1000, -1000,
	-1000, -1000, 507, 3321, -1000, 3444, 554, 106541, 2127, 550,
	22401, 3135, 846, 72005, -1000, 2996, 1706, -1000, 2202, 106541,
	3119, -1000, 2501, 549, -1000, 956, 545, 543, 3281, 3281,
	-216, 52177, 52177, -217, 540, 956, -1000, -222, -1000, -1000,
	-1000, -1000, -69, -1000, 849, 847, -1000, -1000, 86367, 86367,
	43928, 43928, -1000, 5321, 5321, 5321, -1000, 301, -1000, -1000,
	1986, 3228, -1000, -70, 113319, 112939, 4735, 47841, 62352, -224,
	-1000, -1000, 106541, 117651, -73, -1000, 117651, 538, 535, 427,
	-1000, -1000, -1000, 530, -1000, -1000, 3490, -1000, 106541, -1000,
	106541, -1000, 1813, -1000, -1000, -1000, 106541, 2205, -1000, -1000,
	1047, 43928, 6303, 533, 43928, -1000, 3316, -1000, 2567, 2726,
	1781, 52177, -1000, 3148, -1000, 112902, -1000, 1039, 1783, -1000,
	-1000, 117651, 3202, 52177, -1000, -1000, 532, 528, 117651, 527,
	855, 2730, -1000, -1000, -1000, -1000, 117651, 526, 3292, -1000,
	-1000, -1000, -1000, 2108, 86367, -1000, -1000, -1000, -225, -1000,
	-1000, 1812, 107, 1914, 2613, -1000, 2135, 516, -1000, -1000,
	2093, 2494, -1000, 94310, 30296, 30296, 297, 3314, 950, -1000,
	3405, -1000, 3305, 107, -1000, 52177, -1000, 86367, 52177, 2125,
	1763, 2331, 72005, -1000, 2360, -1000, -1000, -227, 106541, 1706,
	-1000, -1000, 70941, 70941, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1039, -230, -232, -1000, 70941,
	-1000, -1000, 2181, -1000, 106541, -1000, 106541, -1000, -1000, -233,
	-235, -1000, 2015, 43928, 29737, -1000, -1000, 4735, -243, -1000,
	-81, -1000, 3304, 45605, 3488, 3484, 3482, -1000, -1000, -1000,
	-1000, -1000, -1000, 2905, 2654, 112873, 2307, 106541, 14987, -1000,
	2725, -1000, -1000, 2571, 509, -1000, -1000, -1000, -1000, 893,
	106541, 2571, 2647, 86367, 1041, -245, 1922, 1922, 43928, 29178,
	1953, 43928, -1000, -1000, 3202, -1000, 2690, 3410, -1000, 945,
	-1000, 1942, 106541, -1000, 3185, -1000, 3075, -1000, -1000, -1000,
	2576, 107, -1000, -1000, 107, -1000, -248, 1040, -251, 86367,
	1326, 846, -1000, -1000, 846, -1000, 2367, 971, -1000, -1000,
	-253, -254, 1781, 1039, 951, -259, -1000, -261, -262, -1000,
	-1000, 293, 45046, 45046, 45046, -128, -136, -1000, 106541, 508,
	-1000, -1000, -1000, -1000, 2876, 962, -1000, 2112, 1902, 202,
	1050, -1000, -1000, 1914, 106541, -1000, -1000, -1000, 961, 507,
	-1000, 43928, 1039, -264, -1000, 1031, -267, -1000, 1029, -274,
	-1000, 2724, -1000, -275, 2108, 959, 3276, -1000, -1000, -1000,
	2093, 86367, -276, -1000, -1000, 2271, -1000, 2571, 957, -1000,
	1039, 506, 1781, 504, -1000, -1000, 106541, 1398, 3135, 3031,
	956, 956, 2571, 1781, 971, 503, 956, -1000, -1000, -1000,
	3014, -1000, 48959, 2067, 1660, 115632, 3014, 3014, -1000, -1000,
	106541, 3261, -1000, 2120, 2118, 1449, -1000, -1000, -1000, -1000,
	-1000, -1000, 2653, -277, 3260, 2307, 117651, 2571, -1000, 1922,
	2610, -1000, 1922, 2720, -1000, 1934, -1000, -1000, -1000, 1537,
	3390, -1000, 501, -1000, 106541, 1651, 1593, 3481, 1914, 2093,
	1781, 52177, 2571, 52177, -1000, -167, -1000, 1763, 1252, -1000,
	-1000, 1914, 2571, -1000, -1000, -1000, 1736, 3311, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 844, -1000, 3059, -1000,
	1063, 2144, 2144, 971, -1000, 843, 2112, -1000, -1000, 500,
	-1000, 498, -1000, 2041, -1000, -1000, 106541, -1000, -1000, 3479,
	-1000, 945, -1000, 2571, -282, 1914, -283, 1326, -1000, 1450,
	951, 1914, 1614, -1000, -1000, 2026, 44487, 43928, -1000, 3386,
	-1000, -1000, 2414, -1000, -1000, 43928, 2653, 43928, 43928, 58107,
	-284, -1000, 2093, 1914, 1039, 951, 1781, -1000, 59693, 971,
	951, -1000, -1000, -1000, 117651, -1000, -1000, -1000, 117651, -1000,
	-285, -290, -175, 93778, 2105, -1000, 951, 1781, 971, 2571,
	-260, -1000, 971, 1914, 1122, -305, -1000, -1000, -1000, 971,
	2571, -1000, 1914, -1000, -1000, -1000, 494, -1000, -1000, 1914,
	951, 43928, 951, 971, -306, 971, -1000, 1914, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4364, 4363, 4357, 4356, 4352, 4351, 4349, 4348, 4346,
	4344, 4343, 4342, 4340, 4338, 4337, 4336, 4335, 4334, 4331,
	4328, 4327, 4325, 4323, 4321, 4320, 4319, 4317, 4311, 4310,
	4309, 4308, 4307, 4306, 4303, 4302, 4290, 4289, 4286, 4281,
	4280, 4279, 4278, 4277, 4275, 4274, 4271, 4269, 4268, 4264,
	4262, 4259, 4257, 4255, 4253, 4252, 4249, 4247, 44, 4246,
	4245, 4241, 4232, 4230, 4228, 4223, 4222, 4220, 4219, 4218,
	4215, 4214, 4211, 4208, 4207, 4206, 4205, 4203, 47, 4202,
	250, 4201, 4199, 4198, 4197, 4196, 4190, 4189, 4188, 4185,
	4184, 4183, 4182, 247, 4181, 129, 4177, 4173, 4172, 4162,
	4161, 246, 4157, 4156, 4155, 4151, 257, 4150, 4147, 4143,
	4140, 4139, 4133, 4132, 4131, 4128, 4127, 4126, 124, 182,
	4124, 4121, 733, 4118, 4116, 4114, 4112, 4110, 4109, 4108,
	4106, 4105, 4103, 229, 4101, 245, 4096, 4095, 4093, 4092,
	4091, 4090, 4089, 4088, 4085, 4084, 4081, 4080, 4079, 4078,
	4077, 4076, 4074, 4073, 4071, 4070, 4069, 4067, 4062, 4060,
	4058, 4055, 4054, 4053, 4051, 4050, 4049, 4046, 4043, 4042,
	4030, 255, 160, 4026, 4020, 244, 242, 4019, 4018, 4017,
	4016, 4011, 110, 4, 51, 4009, 4008, 88, 84, 70,
	97, 95, 86, 4005, 102, 4001, 116, 53, 4000, 13,
	12, 274, 216, 9746, 209, 3998, 3997, 3994, 215, 178,
	3993, 212, 3992, 3989, 3979, 3977, 58, 42, 154, 174,
	159, 143, 79, 3975, 140, 89, 66, 45, 37, 16,
	54, 3973, 232, 11, 122, 31, 3971, 3970, 3969, 3968,
	3160, 111, 3966, 239, 222, 147, 3964, 3962, 3960, 717,
	3959, 3958, 55, 3956, 71, 75, 115, 8, 108, 3955,
	132, 30, 3954, 169, 76, 3953, 136, 92, 83, 8173,
	6534, 3951, 99, 52, 183, 139, 164, 150, 180, 145,
	146, 141, 179, 192, 191, 155, 166, 3950, 228, 3949,
	3320, 67, 165, 3948, 3947, 3946, 78, 187, 101, 3945,
	3942, 63, 6, 2, 10, 172, 28, 105, 38, 20,
	3941, 24, 3939, 3938, 3937, 3933, 3931, 61, 148, 3927,
	256, 3926, 69, 48, 25, 3924, 46, 194, 3920, 210,
	114, 3914, 3912, 226, 188, 173, 3911, 43, 206, 3910,
	3909, 3906, 3902, 3901, 119, 1, 117, 3900, 3899, 125,
	3898, 40, 213, 181, 3896, 50, 3893, 3892, 151, 94,
	118, 253, 109, 202, 106, 198, 168, 214, 3890, 3888,
	3887, 205, 3885, 3884, 195, 134, 3881, 3880, 237, 259,
	82, 36, 68, 208, 73, 177, 158, 3879, 186, 3877,
	3874, 258, 171, 190, 3, 18, 93, 113, 3873, 5,
	204, 137, 211, 103, 3868, 4903, 2079, 2420, 3863, 3862,
	144, 107, 65, 104, 135, 240, 60, 3861, 3858, 1875,
	3855, 3853, 3849, 3848, 167, 3847, 3846, 3845, 131, 128,
	218, 3844, 90, 59, 39, 17, 112, 227, 252, 100,
	200, 156, 234, 3843, 3842, 3841, 175, 3838, 77, 163,
	3837, 185, 233, 3836, 3835, 85, 3833, 133, 1542, 57,
	130, 3832, 201, 3830, 3827, 3826, 3824, 3823, 3820, 3810,
	616, 207, 3805, 3803, 3799, 33, 170, 3798, 236, 126,
	157, 91, 56, 3794, 81, 2980, 3793, 199, 416, 64,
	235, 162, 241, 3792, 2049, 49, 3789, 0, 11710, 6203,
	9409, 11117, 3786, 3398, 3785, 3784, 3781, 197, 123, 3779,
	3776, 3775, 96, 3771, 72, 3770, 3768, 62, 3766, 21,
	14, 15, 26, 22, 127, 29, 3764, 3761, 142, 120,
	152, 3760, 251, 203, 3759, 3758, 3757, 3756, 87, 3755,
	34, 3752, 32, 3750, 3748, 35, 7, 27, 3747, 3746,
	231, 3745, 196, 221, 3743, 138, 3742, 3318, 121, 3739,
	3735, 230, 80, 3734, 276, 3729, 3265, 3728, 3727, 19,
	3726, 3724, 217, 161, 193, 3723, 3720, 149, 3719, 3717,
	3716, 271, 3712, 3710, 23, 3709, 9, 3708, 3707, 189,
	3052, 3706, 3697, 41, 3695, 176,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 11,
	11, 7, 7, 7, 8, 8, 8, 8, 45, 45,
	9, 9, 9, 9, 9, 9, 9, 9, 33, 29,
	30, 31, 10, 10, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 16, 16, 34, 34, 17, 17, 36,
	36, 18, 18, 37, 37, 561, 561, 21, 39, 22,
	40, 15, 562, 562, 562, 562, 32, 23, 41, 26,
	26, 26, 26, 26, 185, 185, 185, 185, 20, 20,
	35, 35, 219, 219, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 560,
	560, 221, 221, 220, 215, 215, 563, 563, 222, 222,
	222, 224, 224, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 459, 459, 459, 492, 492, 491, 491, 491,
	490, 490, 576, 576, 577, 577, 577, 577, 577, 121,
	121, 357, 357, 357, 47, 47, 47, 47, 47, 555,
	555, 187, 187, 187, 189, 189, 188, 188, 188, 188,
	69, 69, 568, 568, 569, 569, 567, 570, 570, 570,
	186, 186, 186, 117, 117, 117, 117, 118, 118, 119,
	119, 190, 190, 190, 192, 192, 191, 191, 191, 191,
	191, 191, 191, 191, 196, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 97, 97, 494, 494, 495, 495,
	181, 181, 182, 182, 182, 182, 183, 183, 184, 184,
	184, 61, 193, 193, 195, 195, 194, 194, 49, 49,
	49, 49, 49, 49, 49, 50, 50, 50, 50, 50,
	51, 51, 51, 51, 51, 51, 52, 52, 52, 52,
	52, 52, 59, 59, 59, 59, 172, 172, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 66,
	66, 66, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 579, 579, 580, 580, 581, 581, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 75, 75, 319, 319, 289, 289,
	76, 76, 76, 77, 77, 78, 78, 63, 63, 553,
	553, 334, 334, 450, 450, 80, 80, 356, 356, 81,
	81, 81, 81, 81, 81, 82, 82, 82, 82, 82,
	82, 82, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 90, 90, 90, 90,
	90, 91, 91, 91, 88, 88, 88, 85, 85, 85,
	84, 84, 84, 89, 89, 89, 552, 278, 278, 87,
	87, 87, 86, 86, 86, 335, 335, 92, 92, 92,
	92, 290, 93, 93, 93, 93, 93, 93, 93, 93,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 452, 452, 94, 94, 94, 417, 417,
	98, 98, 98, 372, 372, 99, 99, 99, 99, 99,
	100, 100, 100, 100, 100, 100, 120, 120, 120, 120,
	120, 120, 557, 557, 327, 327, 243, 243, 243, 243,
	110, 110, 110, 110, 111, 111, 111, 112, 112, 177,
	177, 127, 127, 127, 127, 127, 126, 126, 126, 126,
	126, 126, 53, 53, 53, 54, 54, 55, 55, 56,
	56, 57, 57, 58, 58, 58, 58, 58, 129, 129,
	573, 573, 131, 128, 128, 128, 130, 130, 130, 130,
	132, 133, 133, 133, 133, 133, 133, 133, 133, 134,
	134, 484, 484, 343, 343, 482, 482, 504, 504, 483,
	483, 294, 294, 294, 294, 294, 295, 295, 295, 493,
	493, 493, 493, 493, 493, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 178, 178, 179, 180, 180, 180, 180, 180, 157,
	157, 157, 171, 171, 171, 171, 171, 171, 171, 160,
	160, 160, 145, 145, 136, 136, 136, 136, 136, 136,
	136, 140, 140, 140, 140, 140, 140, 140, 140, 137,
	137, 147, 147, 147, 147, 147, 141, 141, 142, 142,
	167, 167, 144, 144, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 138, 138, 138, 138, 149, 149, 149,
	149, 379, 379, 379, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 170, 170, 170, 170, 170,
	170, 571, 571, 572, 572, 164, 164, 164, 164, 164,
	164, 431, 431, 158, 158, 158, 158, 163, 163, 163,
	163, 166, 166, 166, 166, 362, 362, 155, 155, 155,
	156, 156, 156, 161, 161, 162, 159, 159, 165, 165,
	165, 165, 139, 139, 139, 583, 583, 583, 168, 168,
	154, 154, 169, 169, 169, 169, 169, 169, 169, 169,
	151, 151, 151, 150, 150, 150, 150, 153, 153, 153,
	152, 143, 554, 554, 550, 550, 550, 550, 550, 550,
	550, 550, 551, 551, 551, 551, 556, 556, 103, 103,
	103, 103, 103, 113, 113, 113, 113, 113, 104, 104,
	104, 104, 104, 106, 106, 105, 105, 105, 105, 70,
	70, 70, 70, 70, 14, 14, 14, 71, 71, 199,
	199, 199, 308, 308, 200, 200, 302, 302, 302, 302,
	197, 197, 198, 198, 72, 72, 584, 584, 584, 564,
	564, 564, 565, 565, 565, 565, 565, 565, 296, 296,
	297, 297, 397, 397, 397, 397, 397, 300, 300, 300,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 303,
	303, 223, 223, 223, 306, 307, 307, 304, 304, 305,
	305, 305, 310, 310, 309, 312, 312, 311, 396, 513,
	513, 515, 515, 515, 515, 515, 515, 515, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 380,
	380, 585, 585, 511, 511, 511, 512, 507, 507, 508,
	508, 508, 508, 508, 298, 298, 299, 299, 299, 299,
	509, 510, 325, 325, 435, 514, 514, 516, 516, 518,
	586, 586, 586, 586, 586, 586, 587, 587, 587, 395,
	395, 394, 394, 317, 317, 519, 519, 519, 519, 520,
	520, 520, 520, 520, 523, 522, 521, 521, 521, 521,
	521, 74, 74, 74, 359, 359, 358, 358, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 174, 174, 246, 246, 68, 68, 68,
	12, 12, 12, 566, 566, 566, 73, 73, 73, 73,
	73, 73, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 559, 559, 558, 558, 247, 247, 589, 589,
	79, 79, 79, 79, 79, 79, 79, 453, 453, 454,
	454, 67, 67, 67, 67, 67, 381, 381, 378, 378,
	377, 377, 324, 324, 433, 433, 433, 434, 251, 251,
	252, 252, 216, 216, 216, 28, 27, 19, 19, 24,
	24, 25, 25, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 43, 43, 43, 43, 46,
	46, 42, 42, 42, 42, 44, 44, 38, 38, 574,
	574, 575, 575, 109, 109, 114, 114, 114, 114, 114,
	115, 115, 115, 115, 116, 116, 116, 116, 125, 125,
	173, 173, 173, 173, 173, 173, 173, 48, 48, 48,
	48, 60, 60, 60, 60, 123, 591, 591, 591, 124,
	124, 124, 590, 590, 244, 244, 391, 391, 392, 392,
	592, 592, 393, 393, 393, 393, 393, 237, 236, 238,
	238, 239, 239, 65, 65, 65, 229, 229, 496, 496,
	232, 232, 233, 233, 225, 225, 226, 226, 227, 227,
	228, 228, 235, 235, 593, 593, 101, 101, 101, 176,
	176, 288, 288, 288, 388, 388, 388, 318, 318, 258,
	258, 390, 390, 390, 390, 355, 355, 355, 175, 175,
	332, 332, 345, 345, 346, 346, 447, 447, 347, 107,
	107, 108, 108, 122, 122, 203, 203, 201, 201, 201,
	201, 201, 201, 201, 201, 208, 208, 209, 209, 210,
	210, 211, 212, 212, 212, 212, 336, 336, 213, 213,
	213, 202, 202, 202, 204, 204, 204, 204, 204, 204,
	204, 207, 207, 207, 207, 214, 214, 214, 206, 206,
	530, 530, 530, 532, 532, 534, 534, 533, 533, 529,
	529, 531, 531, 588, 588, 361, 361, 361, 315, 316,
	313, 313, 314, 314, 322, 322, 320, 321, 321, 323,
	323, 432, 432, 432, 217, 217, 217, 352, 352, 352,
	352, 353, 353, 384, 384, 382, 382, 382, 382, 383,
	383, 385, 385, 385, 386, 386, 387, 387, 349, 349,
	350, 350, 351, 351, 351, 351, 413, 413, 205, 205,
	205, 329, 329, 329, 330, 330, 403, 403, 403, 403,
	403, 403, 404, 404, 402, 402, 402, 402, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 437, 438, 438,
	331, 331, 439, 389, 389, 548, 548, 548, 549, 549,
	430, 430, 440, 440, 440, 440, 440, 440, 428, 428,
	429, 429, 448, 449, 449, 365, 365, 365, 365, 363,
	363, 366, 366, 366, 366, 366, 364, 364, 441, 441,
	441, 441, 354, 354, 442, 442, 442, 442, 443, 444,
	444, 445, 445, 398, 399, 399, 455, 455, 455, 455,
	457, 328, 328, 328, 328, 328, 506, 505, 505, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	472, 472, 472, 472, 472, 472, 472, 458, 458, 458,
	458, 458, 462, 462, 462, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 463, 463, 468, 468,
	469, 469, 469, 464, 465, 470, 470, 470, 470, 594,
	594, 474, 474, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 460, 460, 460, 467, 467, 467, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 373, 373, 375, 375, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 407, 407, 407, 407, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 524, 524, 524, 524, 524, 524, 524, 524, 409,
	409, 527, 527, 528, 528, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 535, 535, 536, 536, 538, 538,
	539, 539, 540, 541, 541, 541, 542, 543, 543, 537,
	537, 544, 544, 544, 544, 545, 545, 546, 546, 546,
	546, 546, 547, 547, 547, 547, 547, 419, 419, 420,
	420, 426, 426, 426, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	248, 248, 248, 248, 248, 341, 341, 339, 339, 339,
	342, 342, 340, 340, 338, 338, 337, 337, 416, 416,
	414, 414, 418, 418, 367, 367, 473, 473, 473, 473,
	473, 473, 473, 473, 368, 368, 368, 376, 369, 369,
	370, 370, 370, 370, 370, 410, 411, 371, 371, 371,
	412, 412, 421, 425, 425, 424, 423, 423, 422, 422,
	400, 400, 401, 401, 348, 348, 595, 595, 344, 344,
	446, 446, 446, 446, 292, 292, 333, 333, 291, 291,
	283, 283, 284, 284, 284, 284, 326, 326, 427, 427,
	475, 475, 476, 476, 477, 477, 478, 478, 479, 480,
	481, 415, 415, 268, 267, 255, 256, 266, 265, 264,
	254, 257, 261, 262, 263, 259, 260, 274, 273, 272,
	230, 231, 279, 280, 280, 282, 282, 281, 281, 270,
	271, 451, 253, 285, 285, 286, 286, 286, 287, 287,
	287, 287, 249, 249, 250, 250, 275, 275, 276, 277,
	277, 269, 269, 269, 240, 240, 240, 241, 241, 242,
	242, 489, 489, 486, 486, 486, 487, 487, 487, 488,
	488, 488, 488, 485, 485, 485, 485, 485, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 498, 498, 499, 499, 499,
	499, 499, 499, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 499, 500, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 503, 503,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 1, 3, 1, 1, 1, 3, 4, 6,
	1, 1, 1, 1, 1, 1, 1, 3, 6, 6,
	6, 4, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 6, 4, 6, 6, 9, 6,
	9, 6, 5, 6, 5, 1, 1, 5, 5, 6,
	6, 4, 4, 4, 4, 3, 4, 4, 4, 7,
	7, 9, 8, 9, 5, 3, 5, 7, 4, 12,
	4, 12, 1, 3, 5, 5, 2, 5, 3, 6,
	4, 6, 5, 6, 6, 4, 8, 3, 4, 2,
	3, 10, 3, 6, 4, 3, 1, 3, 3, 2,
	1, 1, 3, 1, 3, 2, 2, 0, 1, 1,
	0, 2, 0, 7, 10, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 3, 1, 1, 1,
	1, 1, 1, 3, 6, 4, 6, 7, 9, 6,
	2, 2, 3, 0, 8, 6, 8, 7, 2, 0,
	1, 2, 5, 0, 1, 3, 3, 1, 1, 3,
	12, 3, 1, 0, 1, 1, 2, 3, 3, 0,
	4, 6, 0, 5, 6, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 7, 2, 0, 1, 2, 3, 1, 1, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 6, 6, 6, 6, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 6,
	3, 3, 4, 3, 3, 4, 3, 4, 4, 4,
	3, 5, 7, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 4, 3, 3,
	3, 3, 3, 6, 4, 4, 4, 3, 5, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 1, 2,
	1, 2, 1, 2, 7, 3, 2, 0, 1, 3,
	3, 1, 0, 1, 2, 2, 1, 6, 5, 1,
	2, 1, 3, 2, 0, 9, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 6, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 1, 1, 3, 4,
	6, 3, 3, 5, 3, 1, 3, 2, 2, 2,
	2, 1, 2, 2, 5, 3, 3, 6, 6, 3,
	1, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 3, 5, 7, 2, 3, 0,
	3, 5, 2, 3, 0, 2, 3, 2, 3, 2,
	6, 4, 7, 7, 7, 2, 6, 4, 7, 7,
	7, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 1, 5, 3, 2, 6, 3, 3, 4, 4,
	3, 1, 3, 2, 3, 3, 1, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 2, 1, 3, 3, 3, 3, 3, 2,
	3, 3, 1, 1, 1, 1, 1, 2, 2, 5,
	7, 3, 3, 3, 4, 4, 6, 5, 5, 5,
	3, 4, 4, 3, 4, 4, 3, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 2, 3,
	2, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 4, 3, 4, 3, 3, 4, 4,
	5, 0, 1, 1, 3, 2, 4, 3, 3, 5,
	3, 4, 3, 5, 3, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 3, 4, 4, 5, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 3, 4, 3, 1, 1, 1, 2, 3,
	2, 3, 6, 6, 7, 9, 7, 9, 3, 4,
	10, 10, 3, 5, 5, 5, 3, 4, 5, 3,
	2, 5, 2, 0, 1, 1, 1, 1, 3, 2,
	2, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 12, 15, 1,
	2, 3, 0, 2, 0, 4, 0, 4, 5, 4,
	3, 3, 1, 3, 10, 13, 0, 2, 3, 1,
	1, 0, 1, 2, 2, 2, 2, 1, 1, 0,
	1, 3, 1, 1, 1, 2, 3, 3, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 8,
	0, 1, 1, 0, 2, 1, 0, 1, 0, 9,
	9, 3, 1, 3, 7, 1, 3, 11, 3, 2,
	0, 3, 1, 2, 2, 3, 2, 6, 2, 1,
	2, 2, 8, 4, 2, 5, 5, 5, 2, 2,
	0, 1, 3, 11, 12, 8, 5, 3, 1, 5,
	10, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 6, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 2, 2, 4, 7, 3,
	4, 6, 3, 1, 1, 1, 8, 10, 11, 7,
	10, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 3, 0, 1,
	8, 3, 6, 6, 5, 3, 4, 1, 0, 1,
	3, 17, 20, 16, 19, 4, 2, 0, 1, 0,
	1, 0, 1, 3, 2, 4, 2, 3, 1, 0,
	2, 0, 1, 1, 0, 9, 6, 6, 8, 6,
	8, 5, 7, 2, 6, 4, 4, 4, 5, 3,
	3, 4, 3, 6, 4, 6, 7, 8, 9, 6,
	8, 6, 7, 8, 9, 6, 8, 6, 8, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 0, 2,
	4, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 2, 3, 2,
	2, 1, 2, 11, 14, 3, 3, 0, 1, 1,
	4, 4, 1, 0, 3, 0, 3, 0, 3, 0,
	3, 0, 4, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 4, 8, 11, 5, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 6,
	4, 5, 4, 1, 1, 3, 3, 1, 2, 4,
	4, 2, 3, 5, 5, 1, 3, 1, 0, 1,
	2, 3, 2, 4, 2, 3, 0, 2, 0, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 8, 8, 8, 2, 4, 4, 4, 2, 2,
	2, 2, 3, 1, 3, 1, 2, 6, 7, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 1, 0, 3, 3, 5, 1,
	3, 3, 4, 5, 2, 2, 0, 2, 2, 1,
	1, 1, 0, 1, 0, 2, 2, 5, 4, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 3, 1, 3, 3, 3, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 4, 1,
	0, 1, 0, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 1, 1, 4, 4, 6, 6, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 3, 5, 4, 6, 3, 5, 4, 6, 4,
	6, 5, 7, 3, 3, 3, 3, 3, 4, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 1, 3, 1, 3, 3, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 1, 2, 3,
	2, 3, 2, 3, 1, 0, 1, 3, 1, 3,
	3, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 2, 3, 0,
	3, 3, 2, 2, 1, 2, 2, 3, 2, 1,
	1, 1, 5, 1, 2, 4, 2, 0, 1, 0,
	3, 5, 1, 0, 1, 2, 1, 0, 1, 3,
	3, 2, 1, 1, 1, 3, 1, 3, 3, 1,
	1, 1, 1, 5, 3, 1, 1, 3, 1, 1,
	1, 1, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 573, -95, -92, -61, -59, -98, -99,
	-81, -100, -94, -120, -125, -107, -108, -109, -121, -127,
	-173, -178, -179, -180, -3, -47, -49, -62, -80, -82,
	-93, -102, -101, -103, -110, -117, -113, -97, -53, -122,
	-126, -135, -174, -175, -176, 33, 32, 100, 80, 151,
	126, 134, 196, 374, 415, 426, 388, 139, 407, 393,
	-130, -131, 443, -48, -60, -124, -123, 73, 127, 402,
	-4, -12, 30, 46, -50, -51, -52, 62, -68, -64,
	-75, -69, -66, -578, 102, -531, -83, -86, -116, -582,
	158, 214, -104, -105, 357, -111, -112, 409, -114, -115,
	411, 159, -55, -54, 153, -201, -203, -128, -129, -177,
	-136, -137, -138, -139, -140, -141, -142, -167, -143, -144,
	-145, -146, -147, -148, -152, -170, -149, -150, -151, -153,
	-154, -159, -155, -156, -157, -158, -160, -161, -163, -164,
	-165, -166, -168, -169, 448, -162, 505, 49, 462, 82,
	143, 419, 21, -5, -6, -7, -8, -9, -10, -11,
	-14, -13, -63, -65, -67, -70, -71, -72, -79, -73,
	-74, -530, -84, -85, -88, -90, -91, -87, -89, 408,
	-204, -202, 570, 520, -16, -21, -22, -17, -18, -20,
	-23, -19, -24, -25, -34, -39, -40, -36, -37, -35,
	-38, -41, -42, -43, -44, -45, -46, -27, -32, -33,
	-28, -29, -30, -31, -15, -26, 539, 548, -207, -205,
	-206, -214, 435, 528, 479, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 573, 573, -290, 2, -270,
	-275, -276, -277, -269, -240, -500, -503, 4, -497, -501,
	165, 223, 321, 21, 23, 22, 24, 25, 26, 27,
	28, 30, 31, 42, 43, 45, 46, 47, 48, 49,
	53, 55, 59, 60, 61, 62, 63, 64, 68, 73,
	74, 79, 80, 81, 82, 83, 84, 85, 91, 88,
	89, 90, 92, 94, 96, 97, 98, 99, 100, 101,
	103, 104, 105, 107, 108, 116, 117, 118, 119, 121,
	126, 127, 130, 125, 129, 132, 133, 134, 137, 138,
	139, 141, 142, 144, 145, 146, 148, 149, 151, 152,
	153, 156, 154, 487, 155, 157, 158, 159, 160, 163,
	171, 172, 173, 178, 180, 184, 185, 188, 189, 190,
	191, 192, 193, 194, 195, 197, 201, 203, 204, 205,
	206, 207, 213, 214, 216, 217, 218, 219, 224, 225,
	226, 230, 227, 236, 237, 241, 242, 243, 245, 249,
	250, 251, 252, 253, 254, 256, 258, 257, 260, 263,
	264, 267, 271, 272, 276, 277, 273, 278, 279, 281,
	282, 285, 283, 286, 287, 284, 288, 290, 291, 292,
	293, 294, 295, 296, 297, 298, 299, 300, 301, 289,
	304, 302, 306, 307, 308, 319, 317, 312, 313, 309,
	314, 310, 311, 315, 316, 323, 324, 327, 211, 329,
	330, 333, 351, 337, 338, 339, 342, 343, 346, 349,
	350, 352, 353, 354, 355, 356, 357, 358, 359, 361,
	362, 364, 365, 366, 368, 369, 370, 372, 374, 375,
	377, 378, 380, 381, 382, 383, 384, 385, 386, 388,
	390, 389, 391, 393, 395, 396, 397, 402, 407, 404,
	405, 406, 408, 409, 410, 411, 413, 414, 415, 417,
	418, 419, 420, 422, 424, 425, 428, 429, 445, 446,
	464, 426, 427, 430, 431, 432, 433, 434, 438, 436,
	437, 439, 440, 441, 443, 444, 447, 448, 450, 451,
	452, 453, 454, 455, 458, 460, 461, 462, 463, 465,
	468, 469, 470, 471, 466, 478, 473, 475, 476, 480,
	481, 482, 483, 484, 485, 486, 488, 490, 498, 499,
	500, 502, 505, 506, 507, 508, 496, 510, 511, 514,
	515, 516, 519, 517, 518, 520, 522, 525, 526, 527,
	533, 532, 534, 540, 541, 543, 544, 545, 37, 50,
	51, 54, 56, 58, 69, 70, 71, 75, 122, 123,
	150, 161, 162, 174, 186, 187, 198, 200, 208, 209,
	210, 231, 232, 234, 239, 261, 326, 328, 344, 348,
	363, 367, 371, 373, 387, 421, 456, 467, 472, 491,
	492, 493, 494, 501, 503, 528, 529, 530, 535, 542,
	-290, 2, -270, 335, -263, 2, -240, -240, 374, 29,
	2, 29, 362, 437, 482, 484, 2, -557, -327, 2,
	29, -243, -240, 102, 196, 435, -263, 2, -557, -327,
	25, 2, -240, 2, 349, 22, 28, 66, 77, 98,
	137, 160, 181, 184, -581, 351, 381, 424, 439, 478,
	488, 502, 2, 532, 282, 436, 479, 223, 118, 507,
	430, -566, 428, 429, 349, 379, 417, 199, 521, -244,
	2, 426, -240, 282, 2, 573, 94, 272, 74, 421,
	440, -133, 499, -132, 491, 430, -134, -484, 2, 304,
	-240, 573, 573, 573, 29, -253, -240, 479, 223, 430,
	118, 476, 573, 2, 479, 354, 532, 436, 118, 384,
	223, 507, 430, -566, 282, -555, 2, -550, 4, -501,
	-497, -284, -283, 479, 485, 118, -277, -269, 563, -276,
	573, 573, 573, 2, 242, 243, 383, 382, 440, 441,
	573, 573, 573, 573, 428, 2, 160, 22, 28, 66,
	93, 98, 124, 181, 184, 340, -579, 351, 381, 439,
	478, 481, 488, 502, -565, 463, 68, 430, -564, -566,
	282, 507, 137, -377, 118, 272, 195, 515, 484, 482,
	513, 130, 230, 518, 517, 573, 573, -95, 2, 570,
	33, 32, 139, 443, -196, 479, 235, 2, -240, 573,
	573, 2, 242, 243, 428, 429, 573, 573, 182, -550,
	2, 573, 573, 2, 242, 243, 428, 429, 235, 2,
	68, 432, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 2, -171, 440, 463, 205,
	47, 46, 74, 29, 380, 79, 355, 119, 145, 508,
	197, 223, 224, 250, 93, 94, -379, 45, 243, 242,
	429, -571, 428, -431, 480, 431, 437, 475, 254, 426,
	499, 102, 522, 418, 545, 384, 385, 397, 273, 154,
	4, 118, 304, 442, 491, 272, 425, 358, 84, -588,
	2, 479, -590, 2, 499, 499, 2, -590, 2, -590,
	2, -590, 2, -591, 499, 542, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, -202, -204, -203, 573, 573, 573, 573,
	573, 573, 573, -171, 440, 2, 74, 29, -320, -322,
	512, 233, 147, 341, -201, -203, 2, -530, -482, 2,
	-405, -504, -407, 561, 562, 554, 477, 67, 320, 546,
	-419, 124, 513, 335, -503, -408, -421, 150, 421, -342,
	8, 9, 5, 6, 7, -249, -409, -415, 504, 164,
	325, -287, 574, 10, 570, -527, -203, -420, 38, 200,
	65, -486, -286, -250, -458, 234, -285, -269, -524, -525,
	4, -497, -498, -487, -461, -469, -465, -466, -472, -240,
	-500, 77, 110, 111, 109, 114, 113, 275, 274, 115,
	112, 442, 521, 66, 37, 208, 209, 239, 326, 210,
	75, -526, 138, -499, 231, 232, 456, 51, 387, 174,
	123, 122, 328, 56, 54, 529, -470, 120, 491, 492,
	493, 494, 186, 187, 58, 161, 162, 348, 371, 472,
	501, 503, 198, 261, 44, 106, 183, 229, 212, 238,
	240, 244, 262, 265, 305, 318, 322, 345, 347, 416,
	449, -594, 530, 467, 69, 70, -532, 389, -533, -263,
	-532, 573, 573, 575, 573, -313, -315, -316, 2, 29,
	135, 570, 2, -436, 2, -437, -441, -203, 255, -440,
	570, -438, 568, -270, 336, -528, 422, -524, -525, -249,
	-269, -286, 4, -497, -499, 572, -317, 570, 118, 479,
	78, 223, -372, 570, -240, 29, 335, 495, 575, -314,
	378, -417, 570, 335, 182, 338, 60, 286, 2, 2,
	2, 2, 2, 208, -240, 479, 117, 2, 253, 2,
	2, 2, 2, 2, 2, 2, -335, 208, 2, -270,
	532, -335, 208, 2, -335, 208, 2, -378, 2, 87,
	-254, 208, 2, -240, -278, 208, 2, -273, -275, -282,
	208, 2, -280, -240, -495, 208, 2, -494, -489, 10,
	-488, 5, 4, -497, -501, -498, -500, 77, -405, 2,
	-122, 2, 60, -240, 532, 2, 2, 445, 2, 570,
	-133, 71, 499, 44, 440, -392, 2, -393, -236, -237,
	-238, -448, -239, 241, 377, 386, 549, 128, 320, 545,
	-482, -573, 182, 553, 495, -482, -343, 572, 2, 2,
	2, 2, 2, 2, -441, 208, -270, 2, -267, -485,
	4, -497, -501, -498, -502, 29, 32, 33, 34, 36,
	38, 39, 40, 41, 57, 65, 66, 72, 76, 78,
	87, 93, 102, 109, 110, 112, 111, 113, 114, 115,
	124, 128, 131, 135, 136, 140, 143, 147, 164, 166,
	179, 181, 182, 196, 199, 202, 215, 228, 233, 235,
	255, 259, 266, 274, 275, 320, 325, 331, 335, 336,
	340, 341, 360, 376, 392, 412, 435, 442, 459, 474,
	479, 489, 495, 497, 504, 512, 513, 521, 523, 531,
	536, 537, 538, 539, -503, 2, -441, 208, 2, -272,
	208, -441, -275, 2, -254, 2, -266, -485, 2, -291,
	208, -270, -271, -275, -273, 2, -280, 2, -494, 208,
	2, 532, 235, 495, 575, -333, -283, -284, -481, 8,
	-326, -240, 572, -405, 2, -122, -106, 2, 179, -405,
	208, 2, -122, 208, 2, -405, 208, 2, -122, 208,
	2, -568, 2, -494, 208, -240, 2, 286, 2, 2,
	502, 2, 98, 479, 117, 2, 406, -580, 424, 506,
	2, 2, 2, 2, 2, 2, 2, 479, -259, 2,
	-240, 179, -280, 208, -281, 2, 436, -589, 389, -494,
	208, 2, 532, -273, 2, -273, 223, 237, -254, 208,
	2, 484, 482, 484, 482, 182, 2, 235, 2, 235,
	2, -442, 2, -443, -437, -444, 568, 336, -452, 2,
	-451, -488, 528, -95, 570, -95, 570, 440, 570, -494,
	-270, -270, -405, 2, -122, -106, 2, -405, 2, -122,
	2, -119, -118, -494, 570, 182, -405, 2, -122, -106,
	2, -405, 2, -122, 2, -196, 179, 2, 118, 479,
	-171, 2, 179, 523, 2, 8, 2, 215, -494, 431,
	385, 171, 2, 445, 2, 446, 74, -379, 545, 74,
	182, 2, 182, 2, -362, 2, 539, 2, 2, -554,
	2, 335, 182, 2, 182, 2, 182, 2, 182, 2,
	182, 2, 382, 441, 500, 243, 2, -122, 536, -106,
	-405, 536, 2, -572, 179, 429, -405, 2, 498, 252,
	155, 182, -362, 2, 182, 2, 182, 2, 5, 2,
	383, 464, 2, 241, 377, 464, 2, -270, -583, 2,
	479, 532, 436, 2, 2, 88, 89, 182, 2, 182,
	2, 182, 2, 182, 545, 2, -354, -441, -391, -392,
	-391, 495, -320, -322, -171, 445, 2, -208, -352, -210,
	179, -382, -383, -211, 266, 166, 331, -212, -361, 29,
	135, -361, -361, 60, 571, 571, 11, 12, 76, 42,
	561, 562, 563, 564, 177, 565, 566, 559, 560, 558,
	551, 552, 556, 247, 248, 95, 555, 553, 86, 280,
	423, 167, 168, 169, 170, 403, 221, 35, 222, 14,
	15, 16, 34, 340, 265, 546, 212, 449, 554, 17,
	18, 19, 238, 240, 322, 50, 215, -248, -293, -405,
	-405, -405, -405, -405, -405, -405, 347, 570, -348, -400,
	568, -203, 570, 570, 570, -481, -203, -405, -419, 571,
	-340, 570, -203, -419, -414, 570, 421, 568, 570, -422,
	-405, 5, 5, 5, 570, 572, -535, 540, 179, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 373, -463, 570, -462, 570, -462,
	-462, 533, -460, 570, 548, 541, 570, -460, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 533, 575, -532, -317, 570, -344, -446, -405, 563,
	-344, -344, 335, -337, -405, 106, -365, 244, 305, 183,
	262, 416, 229, -402, 574, -402, -430, 548, -203, -438,
	-269, -203, -440, 570, -436, -430, -96, -481, -80, -93,
	-101, -122, -135, -175, -176, 563, -270, 570, 182, 570,
	572, -485, 182, -326, -254, -270, -285, -286, -291, 134,
	-337, -550, 507, 430, -326, -243, 39, -416, -455, -456,
	-506, 574, -505, -458, -468, -464, -467, 363, 367, -487,
	54, 529, -470, 234, 4, -497, -499, 231, 232, 456,
	51, 387, 174, 123, 122, 328, 56, 491, 492, 493,
	494, 186, 187, 58, 530, 467, 69, 70, -550, 507,
	430, -326, 179, -492, 2, -491, -490, 115, 442, -488,
	5, 2, 150, 2, 2, 2, -240, -222, 575, 64,
	410, 150, -335, 208, -222, 150, -222, 150, -292, 208,
	-291, -222, 150, -222, 575, 150, -222, 575, 150, 572,
	575, 150, -492, 2, -378, -484, -337, 39, -392, 2,
	124, -490, -592, 575, 264, -295, 279, 319, 204, 336,
	543, 329, 128, -493, 5, 4, -415, -427, 124, 272,
	234, -475, -477, 8, -476, 9, -478, 561, 562, -483,
	-482, 108, 572, -485, -219, 404, 443, -218, 24, 30,
	139, 225, 308, 526, 156, -305, 226, 350, 354, 150,
	460, 516, -561, -562, 427, 486, 487, 90, 329, 443,
	404, 150, -358, -360, 39, 116, 308, 349, 61, 218,
	284, 285, 462, 535, 150, 443, 404, 350, 24, 139,
	-232, -562, 99, 404, 473, -562, -221, 460, 516, -561,
	-562, 427, 404, -220, -305, 150, 574, 24, 404, 443,
	350, -576, -577, 139, 30, 404, 350, -558, -529, 539,
	150, -441, 208, -569, -118, 256, 5, 10, -118, -333,
	575, 575, -485, 563, 429, 428, 150, 150, 150, 150,
	179, 320, 2, 2, 2, 2, 2, 184, -564, -581,
	2, 2, -270, 208, -319, 335, -553, -334, 479, -270,
	320, 44, -272, 208, 2, -275, 532, -558, 320, -274,
	208, -270, 39, 570, 2, -378, 2, 223, -529, 320,
	-442, -288, -270, -437, -288, 443, -263, 39, -402, -270,
	571, 575, -452, -452, -494, -184, 539, 182, 102, 570,
	570, -196, -449, 575, -448, -495, -119, -494, -494, -553,
	-254, 2, -270, 2, 479, 245, -494, -184, 215, -494,
	-494, -494, -484, 29, 446, 2, 382, 441, 500, 89,
	446, 2, -270, 479, 118, 223, 80, -556, 179, -551,
	417, 430, 507, -550, -270, 118, -270, 118, -270, 118,
	-270, -270, 2, 2, 2, 2, 2, 85, 85, 2,
	46, -572, 179, 2, 498, 2, 498, 2, -240, -240,
	-240, 463, 264, -270, 179, 479, 223, 479, 223, 118,
	74, 118, 479, -222, 575, -244, -208, -352, -484, -353,
	-352, -209, -208, -211, 179, 386, 517, 308, 447, 249,
	-383, -382, 29, -405, -387, 173, 307, -405, -385, -407,
	561, 562, -476, -478, -336, 329, -202, -202, -202, -323,
	-432, -405, 376, 223, -457, -455, -455, -268, -485, 491,
	-405, -405, -405, -405, -405, -405, -405, -405, -405, -405,
	-405, -405, -405, -405, -405, -405, -405, -405, -405, -405,
	-405, -405, -405, -405, -405, -405, -405, -405, -405, -405,
	-405, -405, -405, -405, -405, 265, 212, 449, 50, 215,
	-405, 495, -405, -405, -405, -405, 302, 320, 325, 504,
	164, 514, 135, 329, -595, 474, 41, -412, -203, -341,
	570, -426, 36, 459, 29, -419, 570, 2, -400, -405,
	-401, -338, -337, -337, 571, 531, 29, 135, 563, 2,
	571, 575, 39, 571, -405, -338, -418, -414, -337, -425,
	-424, 536, -373, -374, 544, 289, 121, 206, 287, -375,
	434, -479, 8, -485, 563, -536, 172, 199, 570, 571,
	2, 571, 2, 571, -405, 2, 571, -405, 2, 571,
	-405, 2, 571, -405, 2, 571, 2, -405, -405, -405,
	-405, -405, -405, -405, -337, 8, -479, -479, 491, 491,
	-479, -479, -479, -471, 363, 364, 365, 366, 267, 268,
	269, 270, 367, 368, 369, 370, 294, 295, 296, 297,
	290, 291, 292, 293, 298, 299, 300, 301, 191, 192,
	193, 194, 187, 188, 189, 190, -471, -367, 2, -473,
	-337, 4, 544, 289, 121, 206, 287, 434, 5, -367,
	2, -368, 2, -405, -337, -369, -406, -407, 561, 562,
	554, -419, -370, 2, -405, -338, -405, 57, 259, 497,
	-371, -405, 182, -337, -337, 2, -337, 2, -533, 39,
	-337, -329, 575, 182, 39, 4, -329, -329, 570, 571,
	575, -366, 203, 283, 278, 237, -366, -436, -365, 244,
	-363, 345, -363, -363, -430, -255, 568, 576, -485, -430,
	-429, -428, 39, -263, 342, -430, -430, 572, 571, -429,
	569, -548, 570, 573, 573, 573, 573, 573, -270, 570,
	-337, -485, 572, 465, 571, 238, 238, 238, 238, 422,
	571, 495, -552, -278, -282, 539, -95, 337, 571, 575,
	-328, 38, 568, 572, -479, 2, 2, -474, 533, 570,
	570, -374, 570, 182, -552, -282, -327, 575, 495, -240,
	2, -270, -335, -222, 150, -335, -335, -222, 575, 150,
	-254, -273, -278, -280, -282, -240, -494, -495, -222, -274,
	-573, 571, 499, -393, -294, 386, 458, 405, 438, 476,
	8, 9, 8, 9, 575, -485, 575, -574, 93, 495,
	78, 430, -234, 273, 396, 308, 479, 421, -396, 208,
	78, -507, -257, 93, -508, -240, 72, 513, 376, 181,
	148, -574, 93, 376, -574, 93, 2, 225, 93, 443,
	463, 495, 60, -441, 42, 42, 29, -122, 260, 182,
	545, 479, 223, 430, 495, -441, -360, -455, 116, 284,
	285, 60, -480, -475, 561, 562, -480, 60, -480, -480,
	-480, 539, -272, -441, 430, 495, 495, 395, 395, 495,
	495, -593, 553, 575, 42, 42, 29, -122, 260, 182,
	495, -291, -255, 527, 43, 527, 495, 43, 430, 495,
	575, 43, 43, 495, 495, -559, -245, 105, 314, 277,
	315, 97, 311, 96, 310, 103, 312, 104, 313, 534,
	323, 63, 309, 288, 316, -246, -247, 356, 525, -494,
	443, 404, 150, 215, -449, 215, -449, -283, -240, 572,
	-122, -405, -405, -122, -405, -122, 46, 150, 2, -589,
	253, 570, -298, 320, 182, -326, -450, 235, 575, -334,
	150, -491, -359, -358, 320, -274, 208, 2, 150, -317,
	320, 144, 570, 384, 2, -256, 208, -241, -240, -378,
	-225, 483, 150, -356, 523, -388, -122, 570, 124, 39,
	-388, -345, -346, -447, -347, -257, 570, -263, -402, -95,
	-451, 571, 571, 571, -183, 339, -182, -240, 5, -196,
	523, -297, -397, -396, -511, -512, -507, 265, 223, 513,
	237, 165, -318, -258, -257, 117, -190, 539, -118, 571,
	-449, 215, -184, -184, -449, -449, -270, 179, -494, -184,
	-184, -184, 2, 2, 2, -362, -270, -254, -291, -270,
	-326, -326, -282, -278, -362, -254, -362, -254, -362, -254,
	-122, -405, 2, 440, 179, 179, 572, -362, 384, 118,
	479, 354, 223, -270, -291, -270, -291, -254, -254, -270,
	-441, -353, -209, 336, 249, 447, -385, -386, -407, 421,
	422, -386, 421, 422, 8, 9, 8, 9, -213, 451,
	324, -335, 575, -216, 40, 131, 249, -270, 545, 146,
	-405, -405, 495, -595, 474, -412, 146, -405, 302, 325,
	504, 164, 514, 135, 329, 182, 570, -406, -406, 571,
	-339, -405, -405, 569, 578, 571, -322, 575, -320, -405,
	-337, -337, 571, 572, -337, -326, 569, 569, 575, 571,
	-423, -424, 140, -405, 495, 495, 495, 495, 570, 571,
	572, -541, 346, 570, 570, -405, 571, 571, 571, 571,
	39, 575, 575, 575, 571, 575, 575, 575, 571, 571,
	571, 575, 571, 545, 545, 571, 571, 571, 571, 575,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 571, 575, 571, 182, 571, 571,
	-376, 360, 571, 11, 12, 561, 562, 563, 564, 177,
	565, 566, 559, 560, 558, 551, 552, 553, 86, 280,
	423, 14, 15, 16, 238, 215, -406, -406, -406, 571,
	-410, -411, 182, 179, 39, -371, -371, -371, 571, 182,
	-337, 571, 571, 570, -534, 282, 320, 571, -399, -398,
	537, -446, -330, 2, -436, -265, -485, -399, -399, -337,
	-405, 244, 244, -364, 523, 335, -366, -436, -429, -481,
	-404, -403, 180, 40, 131, 317, 211, -429, -263, -317,
	-429, -429, -485, -430, -430, -428, 571, -549, -481, 571,
	-331, -439, -528, -322, 572, -485, -193, -529, -172, 5,
	325, -172, -172, -172, -326, 495, 495, 25, 361, -455,
	568, 569, 8, -485, 570, -479, -479, -479, -326, 182,
	182, 182, -491, -491, 2, -222, -335, -222, -222, -291,
	-292, -222, -222, -222, -357, 539, -482, -392, 511, 83,
	386, 491, -482, -218, 404, -257, -257, -270, -279, -240,
	195, 396, 26, 396, 264, 264, 320, -396, 208, -224,
	320, -455, -264, -240, 570, -380, 541, 249, 249, 523,
	-257, -264, 249, 208, -257, 208, -264, 2, -264, -560,
	386, 330, -405, -491, 271, 384, 321, -219, 404, 443,
	-122, -122, -122, 570, -573, 523, 134, -270, -291, -270,
	-279, -274, 443, 404, 318, -285, -480, -480, -358, 443,
	404, -279, -272, -491, -230, -240, -230, 430, -254, 395,
	545, -220, -122, -122, -122, 570, -255, -221, 404, 5,
	208, -257, 5, -240, -257, -279, -491, -577, 24, -257,
	208, -257, -279, -491, -245, -494, 325, 519, -558, 430,
	495, -441, -118, -187, 539, -118, -181, 219, 563, -555,
	-240, 532, -240, -296, -299, -297, -257, -199, -200, 541,
	539, 150, -289, -270, 568, -184, -494, -270, -280, -281,
	150, -317, 320, -494, 39, 150, 570, 2, 2, 335,
	320, -256, 208, -226, 141, -593, -254, -399, -330, -355,
	-390, 412, 335, -318, 528, -263, -355, -332, 575, 182,
	553, 572, -318, -445, 563, -95, -95, -184, 575, 570,
	553, 553, 570, -494, -494, 571, 575, -224, -270, -256,
	223, 223, -262, -241, 571, 575, 572, 570, -192, 339,
	-191, 142, 251, 236, 452, 453, 454, 455, 133, -190,
	-119, 182, -56, 539, 479, -184, 574, -362, -362, -362,
	440, 440, -240, -266, -254, -270, -267, -291, 179, 179,
	517, -386, 336, 276, -432, -217, 547, -270, 574, -405,
	-405, 146, 146, -405, -406, -406, -405, 146, 182, 570,
	-405, -416, 34, 34, 571, 575, -401, -405, 571, 531,
	-322, -322, 571, 563, -485, 574, 571, -414, 143, -405,
	489, 289, 206, 287, -375, 287, -375, -375, -479, 5,
	-485, 563, -542, -260, 570, -240, 537, -321, 341, 571,
	-457, -455, -405, -405, -405, -405, -405, -479, -460, -460,
	-475, -475, -405, -410, -405, -457, -455, -406, -406, -406,
	-406, -406, -406, -406, -406, -406, -406, -406, -406, -406,
	-406, -406, -406, -406, -406, -406, 135, 320, 329, -406,
	-411, -410, -405, -405, -455, 571, 571, 571, -337, -95,
	570, 282, -349, 199, -405, -449, 575, -349, -349, 571,
	-436, -436, 570, -405, 244, 569, 575, 577, 553, -317,
	572, -428, -429, 569, 571, 575, 571, 575, -389, 39,
	571, -485, -399, -195, -194, 132, 53, -326, -326, 338,
	5, 8, 568, 569, 572, -479, 571, 571, 571, -326,
	-326, -326, -222, -222, 117, 308, -405, 495, 495, 60,
	495, 42, 318, -230, 421, 26, 396, 396, 150, 320,
	525, -513, -508, 148, -405, 570, 223, 570, 570, 2,
	-215, 139, 443, -575, 2, 523, 150, -222, 150, -222,
	543, 570, 570, 495, 430, -234, 539, -337, -405, -185,
	124, -484, -562, 574, -562, 574, 430, 495, 430, 495,
	539, 163, 163, 539, -337, 495, -459, 48, 27, 320,
	-273, 495, 495, -222, 150, 507, 443, -494, 325, -279,
	-274, 443, 404, -449, -189, 339, -188, 142, 414, 133,
	251, -449, -187, 182, 235, -274, 2, 571, 571, 575,
	-514, 39, 333, 333, 570, -270, -76, 539, -448, -481,
	44, -272, 39, 150, -558, -122, -274, -453, -454, 5,
	-270, 150, 335, 320, -227, 258, -593, -489, -529, -322,
	-355, -344, 321, 91, 571, -399, -346, -330, -405, 2,
	571, -182, -183, -494, -494, -494, -184, -196, -196, -397,
	-300, 570, -256, -241, 570, -196, -258, 2, -495, 575,
	570, 553, 553, 553, -449, -122, 339, -270, 563, -362,
	-307, -306, 354, 329, -307, 421, 421, 336, 173, 254,
	-216, -255, -405, -405, 146, 34, 34, -405, -405, -416,
	571, -405, -405, -337, 569, 5, -405, 571, 571, 8,
	-405, 571, 572, -543, -240, -405, 571, 60, 571, 571,
	575, 575, 571, 571, 571, 571, 571, 571, 571, -411,
	182, 135, 329, 570, 571, 571, -95, -413, 202, 60,
	-436, -413, -413, -364, -326, -436, -403, -255, 568, -485,
	-481, -439, 570, 572, -194, 553, 569, 2, 568, -485,
	571, 117, -257, -257, 479, 421, 318, -230, 421, 264,
	26, 26, -396, 150, -515, 93, -517, 76, 165, 102,
	320, 325, 513, 376, 72, 124, 392, -585, 39, 550,
	571, -324, -433, -528, 570, -240, -324, -326, 320, 470,
	124, 320, 124, 117, 507, 79, -257, -264, -326, -326,
	-270, -279, 157, 571, 575, 553, 2, 563, 563, -279,
	-274, -279, -272, 352, 157, 571, -255, 5, 5, 150,
	-252, 76, 5, -257, -257, -273, 117, 430, 495, -187,
	575, 570, 553, 553, -187, -495, -118, -317, -308, 225,
	-257, -512, -509, -510, 376, -516, -518, 165, 376, -122,
	2, -198, -197, -240, 5, 570, -298, 339, 569, -491,
	-359, -122, -274, -317, 571, 575, -381, 523, -255, -270,
	150, -228, 257, -593, -489, -225, -384, -382, 136, 570,
	335, -122, -322, 553, 571, 571, 117, 117, 217, 149,
	-324, 570, 570, -326, 117, 571, -191, -192, -494, -118,
	-494, -190, -57, -58, 223, 93, 359, -267, 479, 223,
	570, 570, -216, -405, -405, -405, 571, -322, -485, 563,
	-537, 354, 571, -432, -405, -405, -406, 182, 570, -416,
	571, -538, 538, -405, -350, -351, -405, 420, 107, 200,
	-538, -538, 571, -481, 2, -494, 568, 2, 215, 264,
	495, -396, -264, -268, -261, -240, 165, 208, 325, -380,
	249, 570, -406, -270, 570, 2, 31, -586, 128, 228,
	571, 575, -434, -251, -240, -405, -434, 571, 571, 325,
	325, -405, -455, 570, -222, -222, 571, 571, -405, 495,
	-484, 100, -482, 2, -562, -254, -405, 495, 5, -222,
	-268, -222, -222, -252, 507, -279, -274, -188, -189, -494,
	-118, -187, 39, -303, 227, 2, -514, 249, -261, 249,
	-584, 539, 571, 575, 553, 553, -296, -199, -77, -78,
	496, -448, -317, 39, 5, 570, -240, 335, 570, -255,
	-235, 92, -593, -489, -226, -355, 321, -326, 93, -384,
	-412, -184, 570, 570, -301, 81, 94, 125, 207, 185,
	224, 463, 468, 29, -301, 571, -324, -324, 571, 570,
	-184, 571, 575, 29, 570, 29, 570, -270, -291, -337,
	-337, 571, -322, 60, 575, 571, 571, -406, -416, 571,
	-539, -540, -260, 575, 570, 570, 444, 569, 2, -230,
	-230, -517, -261, 320, 523, -405, -242, 570, -405, 39,
	228, 129, 213, -395, -587, 101, 471, 216, -433, -216,
	571, -394, 523, 392, -252, -324, 570, 570, 570, 553,
	182, 570, -459, -222, -273, 571, -567, 390, -122, -304,
	-305, 215, 570, -302, 335, 117, 308, -197, -482, -482,
	571, 39, -78, 9, 39, -122, -324, -270, -324, 335,
	-229, -496, 395, 397, 266, -489, -227, 571, -264, -355,
	-495, -495, -394, 571, 571, -495, -58, -326, -326, 571,
	571, -544, 384, 422, 201, -337, -323, 571, 575, 39,
	-351, 2, 2, 2, 150, 203, 571, -519, 281, -240,
	571, 129, 213, -303, 570, -217, -434, -303, 203, -270,
	-563, 523, 571, -310, -309, -306, -312, -311, -306, -337,
	-482, 100, 352, -337, -252, -570, 183, -569, 5, 10,
	-199, 352, -325, -435, -257, 82, 117, -308, -122, -122,
	571, -381, 571, -270, -233, -232, -593, -593, -228, -399,
	571, 571, -395, -394, -200, 539, 571, 571, 571, 571,
	-545, -546, 50, 510, 108, -405, -545, -545, -540, -542,
	165, 539, -520, -523, -522, 335, 450, 183, 353, 571,
	470, 535, -304, -326, 539, -317, -405, -394, 571, 575,
	528, 571, 575, 528, 571, 182, 571, -222, -186, 539,
	46, -302, -270, 571, 575, 375, 130, 139, -303, -584,
	-394, 570, -395, 570, -231, -326, -475, -235, 136, -184,
	-184, -303, -395, -399, -184, -547, 148, -546, 372, 178,
	421, 372, 178, -547, -547, -261, 55, -522, 335, -523,
	335, 517, 130, -586, 571, 55, -519, -303, -309, 215,
	-311, 182, 352, 428, -569, 31, 570, -435, 422, 422,
	2, -304, -302, -395, -324, -303, -324, -229, 321, 517,
	-304, -303, 108, 199, 490, 308, 34, 553, -521, 308,
	410, 64, 443, -521, -399, 553, -520, 570, 570, 339,
	-326, 2, -199, -303, 571, -304, 571, -233, 443, -200,
	-304, 421, 343, -546, -405, 23, 325, 124, -405, -586,
	-337, -337, -183, 570, 571, -302, -304, -394, -200, -395,
	-345, -399, -200, 571, 571, -183, -223, 64, 410, -200,
	-395, -399, -303, -399, -399, -304, 495, 571, -399, -303,
	-304, 570, -304, -200, -337, -200, -399, 571, -399, -304,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 500, 501, 503, 504, 505, 507,
	508, 510, 512, 514, 515, 516, 518, 519, 521, 522,
	523, 524, 525, 527, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	591, 593, 0, 1250, 1252, 1254, 1256, 0, 733, 0,
	36, 37, 0, -2, 298, 300, 302, 0, 328, 330,
	331, 333, 335, 337, -2, 0, 435, 436, 438, 440,
	-2, 0, 908, 910, 0, 580, 582, 0, 913, 915,
	0, 0, 602, 603, 0, 1353, -2, 596, 598, 600,
	665, 667, 669, 671, 673, 675, 677, 679, 681, 682,
	684, 686, 688, 690, 692, 693, 695, 697, 699, 700,
	702, 704, 706, 708, 710, 712, 714, 716, 718, 720,
	722, 724, 726, 728, -2, 730, -2, -2, 0, -2,
	-2, -2, 1268, 40, 42, 44, 46, 48, 50, 52,
	54, 56, 386, 387, 389, 391, 393, 395, 398, 400,
	402, 1411, 442, 444, 446, 448, 450, 452, 454, 0,
	-2, 1425, 0, 0, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 94, 95, 96, 97, 98, 99,
	100, 101, 71, 72, 74, 75, 76, 80, 81, 82,
	83, 84, 85, 86, 92, 69, 0, 0, 1384, 1386,
	1388, 1390, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 25, 27, 29, 502, 506, 509,
	511, 513, 517, 520, 526, 528, 530, 487, 488, 491,
	2089, 2106, 2107, 2108, 2111, 2112, 2113, 2114, 2115, 2116,
	2545, 2626, 2627, 2138, 2139, 2140, 2141, 2142, 2143, 2144,
	2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154,
	2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164,
	2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174,
	2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184,
	2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194,
	2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204,
	2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234,
	2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244,
	2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254,
	2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264,
	2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274,
	2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284,
	2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294,
	2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304,
	2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314,
	2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324,
	2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334,
	2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344,
	2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354,
	2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364,
	2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374,
	2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384,
	2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394,
	2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404,
	2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414,
	2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424,
	2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434,
	2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444,
	2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454,
	2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464,
	2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474,
	2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484,
	2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494,
	2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504,
	2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514,
	2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524,
	489, 490, 1074, 0, 554, 552, 2074, 555, 2353, 557,
	559, 429, 430, 431, 432, 433, 434, 0, 573, 565,
	1423, 574, 576, 577, 578, 579, 549, 547, 0, 573,
	2142, 571, 1248, 1249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 441, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 365, 1123, 1124, 1125, 1233,
	1234, 2396, 1275, 0, 210, 592, -2, -2, -2, 2510,
	-2, 624, -2, 631, 2514, 2398, 636, 0, 638, -2,
	641, 1251, 1253, 1255, 731, 732, 2092, 0, 0, 0,
	0, 0, 38, 39, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 220, -2, -2,
	-2, -2, 0, 0, 2439, 2192, 2042, 2108, 2045, 2040,
	299, 301, 303, 304, 0, 0, 0, 0, 0, 0,
	329, 332, 334, 336, -2, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 364, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 967, 959, 960,
	1180, 0, 0, 0, -2, 437, 439, 492, 493, 0,
	1412, 1412, -2, 0, 0, 0, 0, 273, 264, 909,
	911, 912, 0, 0, 0, 0, 581, 583, 0, 0,
	246, 914, 916, 917, 0, 0, 0, 0, 0, 275,
	0, 0, 597, 599, 601, 666, 668, 670, 672, 674,
	676, 678, 680, 683, 685, 687, 689, 691, 694, 696,
	698, 701, 703, 705, 707, 709, 711, 713, 715, 717,
	719, 721, 723, 725, 727, 729, 739, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	823, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 890, 0,
	742, 744, 745, 746, 0, 803, 821, 822, 831, 0,
	1114, 1413, 1277, 1258, 1272, 1277, 1260, 1261, 1262, 1263,
	1264, 1269, 1271, 1265, 1266, 1267, 41, 43, 45, 47,
	49, 51, 53, 55, 57, 388, 390, 392, 394, 396,
	399, 401, 403, -2, 1382, 1383, 443, 445, 447, 449,
	451, 453, 455, 584, 0, 586, 0, 743, -2, 0,
	1417, 1417, 1417, 0, 0, 1383, 1381, 0, 589, 590,
	645, 646, 1685, 0, 0, 0, 0, 0, 0, 0,
	1939, 1771, 0, 647, -2, 1802, 1804, 2485, 2510, 1938,
	1806, 1807, 1808, 1809, 1810, 0, 1812, 1813, 1814, 1815,
	1816, 1817, 0, 1819, 0, 1824, 1825, 1826, 0, 2492,
	2019, 2102, -2, 0, 0, 2498, 2098, 0, 1905, 1842,
	-2, -2, 2125, 2104, 1617, 1618, 1619, 1620, 1621, -2,
	-2, 2528, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 0, 2473, 2493, 2494, 2499, 2501, 2495,
	2482, 1867, 2204, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1644, 1653, -2, -2,
	-2, -2, -2, -2, -2, 2486, 2487, 2504, 2507, 2513,
	2518, 2519, 2491, 2500, 2527, 2529, 2530, 2531, 2532, 2533,
	2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543,
	2544, 1645, -2, -2, -2, -2, 1400, 2366, 1403, 1074,
	1401, 1385, 1387, 0, 1389, 0, 0, 0, 1394, 1420,
	1418, 0, 1469, 1398, 1399, 1487, 1487, 1511, 0, 1492,
	0, 1511, 1412, 1538, 0, 1498, 2388, 1843, 1844, 0,
	2108, 2103, -2, -2, 2525, 0, 0, 0, 0, 0,
	0, 0, 550, 0, 556, 558, 0, 0, 0, 572,
	1422, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 2493, 0, 0, 0, 377, 0, 379,
	380, 381, 382, 383, 384, 385, 180, 2493, 460, 485,
	0, 180, 2493, 463, 180, 2493, 466, 0, 469, 1178,
	180, 2493, 472, 2070, 180, 2493, 475, 477, 2078, 180,
	2493, 481, 2085, 2083, 482, 2493, 484, 278, 276, 277,
	2121, 2122, 2129, 2130, 2131, 2132, 2526, 2528, 1244, 1245,
	1246, 1247, 0, 1274, 1179, 594, 595, 0, 619, 0,
	623, 2481, -2, 0, 2407, -2, 627, 1278, 1282, 1283,
	1284, 1285, 1286, 0, 0, 0, 0, 1291, 0, 0,
	633, 0, 0, 620, 621, 639, 642, 0, 734, 735,
	736, 737, 738, 68, 0, 2493, 1538, 70, 0, 2064,
	2133, 2134, 2135, 2136, 2137, 2546, 2547, 2548, 2549, 2550,
	2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560,
	2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570,
	2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580,
	2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590,
	2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600,
	2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610,
	2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620,
	2621, 2622, 2623, 2624, 2625, 73, 0, 2493, 77, 0,
	2493, 0, -2, 87, 0, 93, 0, 2067, 102, 0,
	2493, 0, 2039, -2, 0, 191, 0, 936, -2, 2493,
	1122, 0, 0, 0, 0, 899, 2036, 2041, 900, 2060,
	901, 2046, 0, 305, 306, 307, 308, 309, 0, 310,
	2493, 312, 313, 0, 315, 316, 2493, 318, 319, 0,
	321, 0, 231, 232, 2493, 340, 341, 0, 343, 344,
	0, 346, 0, 0, 0, 350, -2, 366, 0, 363,
	353, 354, 356, 357, 358, 359, 360, 0, 407, 405,
	2075, 0, -2, 2493, 0, 933, 0, 0, 1159, -2,
	2493, 1119, 0, 1165, 1161, 0, -2, 0, 1410, 2493,
	1295, 963, 964, 965, 966, 1550, 426, 0, 1318, 0,
	1320, 0, 1339, 1544, 1487, 0, 0, 1549, 0, -2,
	543, 2091, -2, 495, 0, 496, 0, -2, 0, 290,
	0, 0, 918, 919, 920, 921, 922, 925, 926, 927,
	928, 1524, 249, 247, 0, 0, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 0, 0, 604, 0, 0,
	740, 741, 0, 0, 751, 752, 753, 0, 290, 2399,
	2362, 2225, 760, 0, 763, 766, -2, 0, 0, 0,
	0, 770, 0, 775, 776, 777, 0, 779, 781, 907,
	783, 0, 0, 785, 0, 789, 0, 792, 0, 794,
	0, 796, -2, -2, -2, -2, 807, -2, 0, 810,
	812, 0, 814, -2, 0, 823, 819, 820, 0, 0,
	0, 0, 839, 840, 0, 849, 0, 852, 853, 854,
	0, 856, 857, 0, 859, 860, 861, 862, 0, 864,
	865, -2, -2, 869, 871, 0, 878, 0, 882, 0,
	886, 0, 889, 0, 747, 748, 180, 1542, 1257, -2,
	1259, 0, -2, 0, 585, 0, 588, 1442, 1368, 1365,
	0, 1439, 1440, 1369, 0, 0, 0, 1376, 0, 1415,
	1416, 0, 0, 0, 1355, 1356, 0, 0, 0, 0,
	1944, 1945, 1946, 1947, 1948, 1949, 1952, 1953, 1950, 1951,
	1954, 1955, 0, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1957,
	1958, 1959, 0, 0, 1961, 0, 1963, 0, 0, 0,
	0, 0, 0, 1750, 1752, 2027, 0, 0, 1960, 1690,
	1691, 1692, 1693, 1694, 1729, 1730, 0, 0, 1803, 2024,
	2023, 1805, 0, 1975, 0, 1818, -2, 0, 1939, 1970,
	0, 0, 1827, 1828, 1829, 0, 0, 1975, 0, 0,
	2018, 1839, 1840, 1682, 0, 0, 1907, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1631, 1630, 0, 1632, 0, 1633,
	1634, 1641, 1654, 0, 0, 0, 0, 1658, 0, 0,
	0, 0, 0, 0, 0, 1999, -2, 0, 0, 0,
	0, 1646, 0, 1402, 0, 0, 1473, 2028, 2032, 2033,
	1473, 1473, 0, 0, 1976, 1535, 1535, 0, 0, 1530,
	1530, 1530, 1528, 1511, 0, 1511, 1521, 0, 1511, 1511,
	0, -2, 1492, 0, 0, 1521, 0, 1505, 531, 533,
	535, 537, 538, 539, 541, 1539, 1540, 0, 0, 0,
	0, 2109, 0, 0, 0, 0, 0, 2094, 0, 0,
	0, 0, 2449, 2398, 561, 575, 1412, 0, 1978, 1565,
	1569, 0, 1571, 1572, 1573, 1574, 1575, 0, 0, 1566,
	-2, 1642, 1644, 1665, 2126, 2127, 2128, 1625, 1626, 1627,
	1628, 1629, 1637, 1624, 1624, 1624, 1635, 1664, 1656, 1664,
	1660, 1610, 1611, 1612, 1647, 1648, 1649, 1650, 0, 2449,
	2398, 567, 0, 0, 1350, 195, 197, 198, 199, 200,
	201, 367, 0, 374, 375, 376, 0, 456, 0, 178,
	179, 0, 180, 2493, 461, 0, 464, 0, 180, 2493,
	2034, 470, 0, 473, 0, 0, 479, 0, 0, 0,
	0, 0, 180, 1352, 0, 0, 0, 0, -2, 629,
	634, 635, 0, 1280, 0, 1287, 656, 657, 658, 1289,
	1290, 0, 1292, 632, 659, 660, 661, 662, 663, 664,
	0, 2048, 2049, 2050, 2051, 2054, 2055, 0, 0, 630,
	649, 637, 0, 643, 103, 1230, 0, 142, 0, 1230,
	1230, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 127, 138, 115, 116, 0, 0, 0,
	0, 0, 78, 1096, 0, 1099, 0, 0, 0, 0,
	0, 0, 0, 1112, 0, 0, 0, 0, 0, 0,
	91, 126, 0, 0, 1315, 121, 105, 0, 0, 0,
	128, 140, 0, 171, 173, 0, 0, 0, 0, 0,
	0, 190, 202, 0, 0, 0, 0, 1120, 0, 1409,
	0, 0, 2493, 0, 1524, 2270, -2, -2, 1524, 898,
	0, 0, 2109, 2044, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 345, 347, 348, 349, 0, 1158, 0,
	355, 397, 1045, 2493, 0, 0, 424, 419, 0, 421,
	0, 0, 1095, 2493, 1093, 2079, 0, 1117, 0, 1074,
	2493, 2077, 0, 0, 1166, 2118, 1175, 1179, 1305, 0,
	428, 0, 1321, 1323, 0, 0, 1545, 0, 1547, 1487,
	1412, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 253, 0, 1523, 0, 1524, 247, 290, 290,
	1524, 606, 1524, 608, 0, 0, 754, 755, 0, 290,
	290, 290, 761, 762, 764, 765, -2, -2, -2, 879,
	767, 768, 846, 0, 0, 0, 845, 782, 0, 892,
	2384, 2398, 2449, 905, 846, 2192, 846, 2192, 846, 2192,
	793, 795, 798, 834, 842, 806, 811, 0, 0, 816,
	824, -2, 0, 826, 0, 828, 0, 830, 846, 847,
	850, 855, 858, 863, 0, 0, 0, 0, 0, 0,
	887, 0, 0, 1113, 0, 1270, 1442, 1368, 587, 1359,
	1441, 1360, 1367, 1370, 0, 0, 1372, 0, 1374, 0,
	1437, 1438, 1445, 1446, 0, 1456, 1457, 1449, 0, -2,
	0, 0, 1452, 1453, 1378, 0, 1395, 1396, 1397, 1426,
	1429, 1194, 0, 2626, 1686, 1560, 1687, 1688, 2063, 0,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	-2, -2, -2, -2, -2, -2, -2, -2, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, -2,
	-2, -2, 1727, 1728, -2, 1962, 1964, 0, 2027, 0,
	-2, 0, -2, -2, -2, -2, 1747, 0, 1749, 1754,
	1756, 1758, 0, 0, 0, 0, 2026, 1768, 2010, 2011,
	0, 0, 1941, 1942, 1943, 1753, 0, 1772, 2025, 2022,
	0, 0, 1974, 1425, 1831, 0, 0, 0, 0, 1838,
	1823, 1972, 0, 1971, 0, 0, 0, 1982, 0, 2017,
	2013, 0, 2061, 1681, 1668, 1669, 1670, 1671, 1672, 1673,
	1683, 0, 2058, 2095, 2101, 1915, 0, 0, 0, 1868,
	1869, 1870, 1871, 1872, 0, 1874, 1875, 0, 1877, 1878,
	0, 1880, 1881, 0, 1883, 1884, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1578, 0, 0, 0, 1582, 0,
	0, 0, 1586, 0, 0, 0, 1590, 0, 0, 0,
	1594, 0, 0, 0, 1598, 0, 0, 0, 1602, 0,
	0, 0, 1606, 0, 0, 0, 0, 0, 1887, 0,
	1985, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	1889, 0, 1891, 1976, 1996, 0, 0, 1773, 0, 0,
	0, 1939, 0, 1894, 1976, 2004, 0, 0, 0, 0,
	0, 1976, 0, 2009, 0, 1901, 0, 1903, 1404, 0,
	0, 1555, 0, 0, 0, 2031, 1555, 1555, 0, 1468,
	0, 0, 1531, 1532, 1533, 1534, 0, 0, 1535, 0,
	1525, 1529, 1526, 1527, 1521, 1484, 0, 0, 2065, 1521,
	1490, 1520, 0, 1074, 1510, 1521, 1521, 0, -2, 1494,
	1511, 0, 0, 532, 534, 536, 540, 542, 0, 0,
	1425, -2, 0, -2, 1073, 0, 0, 0, 0, 551,
	553, 0, 0, 476, 0, 0, 545, 0, 548, 0,
	1556, 1559, 0, 0, 1570, 1576, 1577, 0, -2, 0,
	0, 1666, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 486, 180, 458, 0, 180, 180, 467, 0, 0,
	180, 478, 180, 2086, 180, 2084, 279, 483, 1351, 213,
	0, 622, 0, 1279, 1288, 0, 653, 0, 655, 0,
	2052, 2056, 2053, 2057, 0, 644, 0, 0, 0, 0,
	1229, 0, 1201, 0, 0, 0, 0, 0, 146, 2493,
	0, 182, 0, 0, 1038, 2071, 0, 1030, 0, 0,
	2211, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 117, 0, 0,
	0, 0, 0, 0, 0, 0, 1097, 1098, 1100, 1107,
	1109, 0, 1103, 2059, 0, 0, 1104, 0, 1106, 1108,
	1110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1314, 0, 0, 0, 114, 118, 0, 0,
	0, 0, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1154, 1152, 1132, 1133, 1134,
	1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144,
	1145, 1146, 1147, 1148, 1149, 1150, 1151, 0, 0, -2,
	0, 0, 0, 0, 223, 0, 281, 2037, 2047, 0,
	923, 924, 311, 314, 317, 320, 219, 0, 351, 0,
	0, 969, 944, 0, 0, 406, 290, 0, 0, 420,
	2088, 931, 1091, 1094, 0, 1074, 2493, 1131, 0, 0,
	0, 0, 0, 0, 1164, 0, 2493, 2066, 2117, 2118,
	1307, 1315, 0, 1555, 0, 1337, 1324, 0, 0, 0,
	1337, 1341, 1342, 1344, 1345, 0, 0, 1546, 1552, 494,
	544, 1412, 1412, 290, 288, 2330, 286, 283, 285, 0,
	0, 0, 970, 972, 973, 974, 182, 0, 2118, 1030,
	2259, 2118, 0, 1327, 1329, 0, 243, 0, 250, 248,
	253, 0, 0, 418, 605, 610, 749, 0, 290, 757,
	758, 759, 800, 836, 844, 769, 771, 772, 773, 0,
	906, 902, 903, 904, 784, 846, 787, 846, 790, 846,
	809, 813, 818, 825, 0, 0, 0, 838, 0, 0,
	0, 0, 0, 0, 0, 883, 884, 885, 888, 891,
	1543, 1363, 1364, 1366, 0, 1375, 0, 0, 1451, -2,
	-2, 1450, 1454, 1455, -2, -2, -2, -2, 1371, 0,
	1380, 1377, 0, 1436, 1192, 1193, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 1769, 0, -2, 1748, 1751,
	1755, 1757, 1759, 0, 0, 0, 0, 0, 0, 1965,
	0, 1967, 1770, 2020, 2023, 1937, 0, 0, 1424, 1425,
	1425, 0, 1837, 0, 1973, 0, 1980, 1981, 0, 1830,
	0, 2014, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1841, 0, 0, 0, 0, 1873, 1876, 1879, 1882,
	0, 0, 0, 0, 1862, 0, 0, 0, 1866, 1636,
	1622, 0, 1664, 1662, 1663, 1657, 1664, 1661, 1614, 0,
	1579, 1580, 1581, 1583, 1584, 1585, 1587, 1588, 1589, 1591,
	1592, 1593, 1595, 1596, 1597, 1599, 1600, 1601, 1603, 1604,
	1605, 1607, 1608, 1609, 1613, 0, 1886, 0, 1888, 1890,
	0, 0, 1892, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 1777, 1778, 1893,
	2002, 2003, 0, 0, 0, 0, 0, 0, 1899, 0,
	2008, 1900, 1902, 1412, 0, 1405, 0, 1470, 1459, 1554,
	0, 2029, 1524, 1472, 1474, 2030, 2068, 1459, 1459, 0,
	1977, 0, 0, 1515, 0, 0, 0, 1517, 1488, 0,
	0, 1482, 0, 1478, 1479, 1480, 1481, 1489, 1074, 1519,
	1491, 1495, 2095, 0, 1521, 0, 1506, 0, 1508, 1541,
	0, 1500, 1503, 0, 0, 2110, 1555, 0, 322, 326,
	327, 323, 324, 325, 560, 0, 0, 0, 0, 1979,
	0, 1561, 0, 1567, 0, 0, 0, 0, 566, 0,
	0, 0, 196, 1349, 373, 457, 180, 462, 465, 2035,
	180, 471, 474, 480, 209, 0, 618, -2, 651, 652,
	654, 0, 650, 143, 1230, 0, 0, 1197, 1199, 2082,
	1203, 0, 0, 0, 0, 0, 0, 148, 2493, 157,
	0, 1010, 0, 2069, 0, 0, 0, 0, 0, 0,
	1232, 0, 0, 2493, 180, 2493, 180, 160, 162, 165,
	0, 170, 167, 168, 0, 0, 1001, 104, 1230, 0,
	107, 111, 119, 0, 0, 0, 125, 0, 0, 0,
	1215, 1221, 0, 0, 1101, 1102, 1105, 1111, 79, 0,
	0, 1219, 1225, 88, 89, 2080, 90, 0, 1196, 0,
	0, 172, 109, 113, 120, 0, 1227, 106, 0, 194,
	0, 0, 0, 186, 0, 187, 188, 203, 0, 180,
	2493, 0, 934, 935, 1153, 1115, 1116, 0, 1121, 0,
	0, 0, 1524, 215, 0, 1524, 223, 0, 2043, 0,
	339, 0, 0, 0, 0, 968, 1056, 0, 939, 0,
	0, 0, 412, 408, 0, 417, 423, 422, -2, 0,
	0, 0, 0, -2, 0, 0, 1168, 1162, 1163, 0,
	0, 0, 2493, 1309, 1315, 0, 1410, 1425, 427, 1316,
	1337, 0, 0, 0, 1326, 1322, 1319, 1555, 0, 0,
	0, 0, 0, 1548, 1551, 497, 498, 265, 0, 0,
	0, 0, 0, 290, 0, 0, 0, 975, 979, 0,
	2118, 2118, 0, 2073, 0, 0, 0, 0, 251, 0,
	254, 0, 0, 0, 259, 260, 261, 262, 263, 244,
	1524, 0, 607, 0, 0, 756, 0, 786, 788, 791,
	827, 829, 846, 872, 873, 996, 0, 996, 0, 0,
	1373, 0, 1448, 1379, 1430, 1431, 0, 1194, 0, 1689,
	1732, 0, 0, -2, 0, 0, 1736, 0, 0, 0,
	-2, 0, 0, 0, 1966, 1968, 0, 2022, 1832, 0,
	0, 0, 1836, 1820, 1821, 0, 1940, 1983, 2012, 2016,
	0, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 0, 2062,
	2096, 2100, 1913, 1914, 1918, 2076, 0, 0, 0, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 1655, 1659,
	0, 0, 1984, 1995, 1997, 1774, 1775, 1779, 1780, 1781,
	1782, 1783, 1784, 1785, 1786, 1787, 1788, -2, -2, -2,
	1792, 1793, 1794, -2, -2, -2, 0, 0, 0, 1998,
	2000, 2001, 2005, 2006, 0, 1896, 1897, 1898, 2007, 0,
	1412, 1406, 1467, 0, 1553, 1471, 0, 1467, 1467, 1419,
	1513, 0, 0, 1537, 0, 1485, 0, 1486, 0, 1518,
	0, 1493, 1496, 1497, 1507, 0, 1499, 0, 1502, 0,
	1832, -2, 291, 292, 294, 0, 297, 563, 564, 562,
	546, 0, 0, 1563, 0, 0, 1639, 1643, 1667, 569,
	570, 568, 459, 468, 211, 0, 1522, 0, 0, 0,
	0, 2148, 1209, 1210, 2510, 1212, 0, 0, 0, 0,
	181, 1008, 1037, 0, 0, 0, 1029, 0, 0, 1043,
	150, 0, 0, 0, 158, 0, 0, 155, 0, 164,
	169, 0, 0, 0, 0, 1202, 0, 0, 122, 123,
	124, 0, 129, 0, 130, 0, 0, 0, 0, 0,
	0, 1300, 1301, 0, 0, 0, 183, 0, 0, 0,
	1191, 0, 0, 205, 0, 0, 0, 1156, 1157, 1216,
	1222, 0, 0, 223, 221, 0, 224, 0, 227, 228,
	0, 223, 217, 0, 0, 1074, 352, 942, 1044, 0,
	1046, 0, 940, 0, 0, 1045, 404, 0, 411, 0,
	0, 1095, 0, 0, 1118, 1129, 1074, 0, 1167, 1169,
	1177, 0, 0, 0, 1311, 1315, 0, 1304, 1305, 1444,
	1317, 1335, -2, 0, 0, 1425, 1343, 1340, 1346, 1347,
	0, 287, 0, 282, 284, 0, 268, 0, 0, 971,
	976, 0, 0, 0, 0, 0, 1328, 1330, 0, 0,
	0, 0, 0, 0, 253, 274, 0, 750, 774, 837,
	874, 995, 0, 0, 876, 0, 0, 1447, 1434, 1435,
	1432, 1194, 1734, 1738, 0, 0, 0, 1740, -2, 0,
	1762, -2, -2, 1969, 2021, 1811, 1425, 1833, 1835, 1822,
	2015, 1684, 0, 1920, 1917, 0, 1904, 0, 1857, 1858,
	0, 0, 1861, 1863, 1864, 1865, 1623, 1616, 1615, 1994,
	0, 0, 0, 0, 1895, 1407, 0, 1909, 0, 0,
	1475, 1909, 1909, 1514, 0, 1516, 1483, 1476, 0, 2096,
	1509, 1501, 0, 0, 295, 0, 1557, 1562, 0, 1568,
	1638, 212, 144, 145, 0, 1205, 1206, 1207, 0, 1211,
	0, 1214, 147, 0, 1009, 0, 1012, 0, 0, 0,
	0, 1019, 1030, 0, 0, 0, 0, 0, 1031, 0,
	1060, 0, 1182, 1189, 0, -2, 0, 0, 0, 152,
	175, 0, 0, 1231, 0, 0, 180, 180, 0, 0,
	1198, 1200, 0, 0, 0, 0, 132, 0, 0, 1217,
	1223, 1220, 1226, 0, 0, 0, 1228, 192, 193, 0,
	180, 0, 185, 180, 180, 1191, 0, 0, 0, 214,
	0, 0, 0, 0, 216, 280, 223, 0, 990, 0,
	1056, 1048, 1049, 1050, 0, 1055, 1057, 0, 0, 956,
	941, 0, 952, 0, 0, 969, 944, 0, 409, 932,
	1092, 1126, 1074, 0, 1160, 0, 0, 0, 0, 0,
	0, 1313, 1315, 0, 1306, 1307, 1337, 1443, 0, 0,
	0, 1325, 1444, 0, 289, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 255, 0, 256, 257,
	258, 245, 609, 611, 0, 0, 617, 994, 0, 0,
	0, 0, 1433, 1742, -2, -2, 1763, 0, 2097, 2099,
	1425, 0, 1906, 1427, 0, 0, -2, 0, 0, 0,
	1408, 1391, 0, 1466, 1458, 1460, 1462, 2387, 2188, 2492,
	1392, 1393, 1536, 0, 1504, 296, 0, 1564, 0, 1208,
	0, 149, 0, 1013, 1014, 2072, 1016, 0, 1018, 1020,
	1021, 0, 1024, 2120, 0, 1028, 0, 1039, 1061, 0,
	1070, 0, 1184, 1194, 1188, 0, 1186, 1072, 0, 151,
	153, 174, 1191, 0, 154, 163, 0, 0, 108, 0,
	0, 2183, 135, 133, 131, 1195, 110, 0, 194, 204,
	1190, 189, 206, 180, 0, 1218, 1224, 225, 0, 226,
	229, 0, 0, 998, 0, 943, 1047, 0, 1058, 1059,
	946, 0, 945, 0, 0, 0, 0, 0, 410, 413,
	0, 416, 0, 0, 1170, 0, 1176, 0, 0, 0,
	1297, 0, 0, 1308, 1309, 425, 1331, 0, 0, 1337,
	1348, 267, 0, 0, 977, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 978, 1072, 0, 0, 1036, 0,
	272, 252, 0, 613, 0, 615, 0, 875, 877, 0,
	0, 1834, 1924, 0, 0, 1859, 1860, -2, 0, 1800,
	1908, 1910, 0, 0, 0, 0, 0, 1477, 1558, 1204,
	1213, 1011, 1015, 0, 0, 0, 1078, 0, 0, 1032,
	0, 1064, 1065, 990, 0, 1066, 1067, 1068, 1183, 1436,
	1189, 990, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 184, 207, 1191, 222, 239, 0, 1127, 944,
	997, 0, 0, 954, 0, 957, 0, 953, 950, 951,
	942, 0, 414, 415, 0, 1130, 0, 1177, 0, 0,
	1303, 1315, 1298, 1299, 1315, 1310, 1311, 1555, 1334, 1338,
	0, 0, 1070, 1072, 944, 0, 612, 0, 0, 880,
	881, 0, 0, 0, 0, 1919, 1428, 1801, 0, 0,
	1461, 1463, 1464, 1465, 0, 0, 1023, 1083, 0, 0,
	0, 1062, 1063, 998, 0, 1187, 1185, 1041, 0, 1074,
	156, 0, 1072, 0, 1002, 0, 0, 1005, 0, 0,
	136, 2183, 134, 0, 180, 242, 0, 236, 234, 235,
	946, 0, 0, 1052, 1054, 0, 958, 990, 956, 1128,
	1072, 0, 1070, 0, 1293, 1302, 0, 0, 1313, 0,
	290, 290, 990, 1070, 1555, 0, 290, 614, 616, 1916,
	1936, 1925, -2, 2452, 2189, 0, 1936, 1936, 1911, 1912,
	0, 0, 1025, 1079, 1080, 0, 1075, 1076, 1077, 2119,
	1026, 1027, 1060, 0, 0, 1078, 176, 990, 999, 0,
	0, 1000, 0, 0, 139, 0, 141, 208, 230, 0,
	0, 937, 0, 1051, 0, 0, 0, 0, 998, 946,
	1070, 0, 990, 0, 1296, 2081, 1312, 1297, 0, 269,
	270, 998, 990, 1035, 271, 1921, 0, 0, 1927, 1928,
	1929, 1930, 1931, 1922, 1923, 1017, 0, 1081, 0, 1082,
	0, 0, 0, 1555, 1069, 0, 1083, 161, 1003, 0,
	1006, 0, 137, 0, 237, 238, 0, 1053, 947, 0,
	949, 944, 955, 990, 0, 998, 0, 1303, 1332, 0,
	944, 998, 0, 1933, 1934, 0, 0, 0, 1084, 0,
	1087, 1088, 0, 1085, 1040, 0, 1060, 0, 0, 0,
	0, 948, 946, 998, 1072, 944, 1070, 1294, 0, 1555,
	944, 1932, 1935, 1926, 1022, 1086, 1089, 1090, 1071, 1042,
	0, 0, 240, 0, 993, 938, 944, 1070, 1555, 990,
	1555, 1033, 1555, 998, 0, 0, 989, 991, 992, 1555,
	990, 1173, 998, 1333, 1034, 1004, 0, 241, 1171, 998,
	944, 0, 944, 1555, 0, 1555, 1174, 998, 1172, 1007,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 559, 3, 565, 560, 3,
	570, 571, 563, 561, 575, 562, 572, 564, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 578, 3,
	551, 553, 552, 556, 574, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 568, 3, 569, 566, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 576, 558, 577, 554,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 555, 57894, 557,
	57895, 567, 57896, 573, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1279
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1284
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1286
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1289
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1290
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1291
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1292
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1293
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1294
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1295
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1296
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1297
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1298
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1299
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1306
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "ALTER")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1323
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1324
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1325
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1326
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1327
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1385
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1411
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1424
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1441
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1445
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1449
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1473
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1477
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1483
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1492
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1501
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1557
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1561
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1565
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1571
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1575
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1581
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1590
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1601
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1605
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1611
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1619
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1629
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1633
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1643
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1654
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1661
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1673
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1680
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1688
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1693
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1697
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1702
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1708
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1716
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1727
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1737
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 130:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1747
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 131:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1756
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 132:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1767
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 133:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1773
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1781
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1785
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 137:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1793
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1799
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1804
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1815
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1819
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1825
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1829
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1886
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1924
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1927
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1933
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 161:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1940
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1948
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1955
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1964
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1973
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1985
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].union.user(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2000
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2009
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2015
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = nil
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2033
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = nil
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2044
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2058
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 183:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2087
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2098
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2109
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2119
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2128
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2146
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2150
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2153
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2164
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2188
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2193
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2200
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2208
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 209:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2232
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2239
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2247
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2251
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 214:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2280
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2302
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2313
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2322
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2326
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2330
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2338
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2346
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2353
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2357
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2468
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2473
		{
			sqlVAL.union.val = nil
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2485
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2517
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 241:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2525
		{
			sqlVAL.union.val = nil
		}
	case 243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2565
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2574
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2583
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2601
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2608
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 252:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2612
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2627
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2640
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2652
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2670
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2707
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2716
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2722
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2727
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2732
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2737
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2742
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2746
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2762
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2765
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2773
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2805
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2813
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = nil
		}
	case 291:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2849
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2879
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2887
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2899
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2900
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2901
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2902
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2912
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2920
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2922
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2926
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2929
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2958
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2962
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2965
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2992
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3001
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3013
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3026
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3032
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3037
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3049
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3051
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3052
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3053
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3054
		{
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3055
		{
			return helpWith(sqllex, "CREATE")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3062
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3068
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3071
		{
			return unimplemented(sqllex, "create access method")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3072
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3073
		{
			return unimplemented(sqllex, "create cast")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3074
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3075
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3076
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3077
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3078
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3079
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3080
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3081
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3082
		{
			return unimplemented(sqllex, "create operator")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3083
		{
			return unimplemented(sqllex, "create publication")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3084
		{
			return unimplemented(sqllex, "create rule")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3085
		{
			return unimplemented(sqllex, "create server")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3086
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3087
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3088
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3089
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3092
		{
		}
	case 362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3093
		{
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3096
		{
		}
	case 364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3097
		{
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3100
		{
		}
	case 366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3101
		{
		}
	case 367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3104
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3105
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3106
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3107
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3108
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3109
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3110
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3111
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3112
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3113
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3114
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3115
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3116
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3117
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3118
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3119
		{
			return unimplemented(sqllex, "drop server")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3120
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3121
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3122
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3126
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3127
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3128
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3129
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3130
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3132
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3133
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3134
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3135
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3153
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3171
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3180
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3187
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3203
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3214
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3226
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3242
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3252
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3256
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3273
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3277
		{

			sqlVAL.union.val = nil
		}
	case 425:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3291
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3301
		{
			return helpWith(sqllex, "DELETE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3304
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3305
		{
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3316
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3317
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3318
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3319
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3320
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3329
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3330
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3331
		{
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3332
		{
			return helpWith(sqllex, "DROP")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3335
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3336
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3337
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3338
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3339
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3340
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3341
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3353
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3374
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3386
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3404
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3412
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3429
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3437
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3445
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3452
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3459
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3467
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3478
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3484
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3488
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3527
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3531
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3536
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3561
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3588
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3595
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3597
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3605
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3613
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3621
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3629
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3640
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3644
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3647
		{
			return helpWith(sqllex, "DELETE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3649
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3650
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3651
		{
			return helpWith(sqllex, "INSERT")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3654
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3656
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3664
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3665
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3666
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3671
		{
			return helpWith(sqllex, "DELETE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3672
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3673
		{
			return helpWith(sqllex, "INSERT")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3679
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3680
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3698
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3706
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3714
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3718
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3722
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3732
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3739
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3747
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3751
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3765
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3773
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3777
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3780
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3802
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3806
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3810
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3818
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3827
		{
			return helpWith(sqllex, "GRANT")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3861
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3865
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3874
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3879
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3883
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3893
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3911
		{
			return helpWith(sqllex, "RESET")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3912
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3927
		{
			return helpWith(sqllex, "RESET")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3935
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3938
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3949
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3952
		{
			return helpWith(sqllex, "USE")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3956
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3957
		{
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3958
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3959
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3963
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3964
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3965
		{
			return helpWith(sqllex, "USE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3981
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3999
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4017
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4025
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4039
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4043
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4049
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4053
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4061
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4079
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4105
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 625:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4114
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4133
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4138
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4145
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4164
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4171
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4176
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4181
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4186
		{
			return unimplemented(sqllex, "set from current")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4187
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4195
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4200
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4207
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4221
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4249
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4253
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4281
		{
			sqlVAL.union.val = tree.Low
		}
	case 657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4285
		{
			sqlVAL.union.val = tree.Normal
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4289
		{
			sqlVAL.union.val = tree.High
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4313
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4332
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4333
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4334
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4335
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4336
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4337
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4338
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4339
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4341
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4342
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4343
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4344
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4345
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4347
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4348
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4349
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4351
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4352
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4353
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4354
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4355
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4358
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4359
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4360
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4361
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4362
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4363
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4364
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4366
		{
			return helpWith(sqllex, "SHOW")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4372
		{
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4373
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4376
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4380
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4385
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4390
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4395
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4400
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4410
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4412
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.str = "client_encoding"
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.str = "timezone"
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4427
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4441
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4445
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4449
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4460
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4468
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4508
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4517
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4525
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4535
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4542
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4544
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4547
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4556
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4567
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4598
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4601
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4608
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4611
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4621
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4634
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4642
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4650
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4653
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4666
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4668
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4672
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4675
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4686
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4688
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4691
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4702
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4707
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = true
		}
	case 802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4713
		{
			sqlVAL.union.val = true
		}
	case 803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = false
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4730
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4733
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4734
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4736
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4747
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4765
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4775
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4781
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4783
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4789
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4797
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 823:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4811
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4826
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4829
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4834
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4836
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4840
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4843
		{
			sqlVAL.union.val = true
		}
	case 832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4844
		{
			sqlVAL.union.val = false
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4852
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4855
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4857
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4860
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4868
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4898
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4903
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4906
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.union.val = true
		}
	case 846:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = false
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4917
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4931
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4938
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4945
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4949
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4953
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4966
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4974
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4979
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4984
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4988
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4996
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5000
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5004
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5017
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5020
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5028
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5031
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5035
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5039
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5043
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5051
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5059
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5066
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5073
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5088
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5096
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5102
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5111
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5120
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5123
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5132
		{
			sqlVAL.union.val = &tree.ShowRegions{}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5136
		{
			sqlVAL.union.val = &tree.ShowRegions{
				Database: tree.Name(sqlDollar[5].str),
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5141
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5145
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5151
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5158
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 893:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5163
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5291
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5334
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5343
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5360
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5364
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5368
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5375
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5379
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5392
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5393
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5394
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5404
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5405
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5406
		{
			return helpWith(sqllex, "RESUME")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5424
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5430
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5433
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5457
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5465
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5467
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5473
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5508
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5519
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5528
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5536
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5575
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[9].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[10].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[11].union.storageParams(),
				OnCommit:      sqlDollar[12].union.createTableOnCommitSetting(),
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5590
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[12].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[13].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[14].union.storageParams(),
				OnCommit:      sqlDollar[15].union.createTableOnCommitSetting(),
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5608
		{

			sqlVAL.union.val = nil
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5614
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5620
		{
			sqlVAL.str = ""
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5624
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5630
		{
			sqlVAL.union.val = nil
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5643
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5647
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5651
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5661
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5671
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 954:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5677
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5691
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5706
		{
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5707
		{
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5708
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5732
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5734
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5736
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 969:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5757
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5763
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5776
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5785
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5789
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5795
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5800
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5803
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5804
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5806
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5807
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5808
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5813
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5829
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5834
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5839
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 996:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5852
		{
			sqlVAL.str = ""
		}
	case 998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5859
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 999:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5865
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5895
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5905
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5909
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5929
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5940
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5944
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5954
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5974
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5992
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6021
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6025
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6039
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = true
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = false
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6060
		{
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6061
		{
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6106
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6118
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6129
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6136
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[4].union.idxElems(),
					Storing:     sqlDollar[6].union.nameList(),
					Interleave:  sqlDollar[7].union.interleave(),
					PartitionBy: sqlDollar[8].union.partitionBy(),
					Predicate:   sqlDollar[10].union.expr(),
				},
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6161
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6172
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6183
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6189
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6199
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6214
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6238
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6258
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6268
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6274
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6279
		{
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6280
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6281
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6282
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6283
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6284
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6302
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6306
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6318
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6356
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6369
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6377
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6381
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6391
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6397
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6405
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6440
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6449
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6457
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6464
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6468
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6472
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6473
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6483
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6486
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6488
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6490
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6492
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6493
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6496
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6498
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6500
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6511
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6536
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6551
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = true
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6561
		{

			sqlVAL.union.val = true
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = false
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6576
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6590
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6602
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6614
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6624
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6634
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6642
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6650
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6666
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6686
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6694
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6698
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = nil
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6744
		{
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6745
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6761
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6763
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6765
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6767
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6769
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6771
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6809
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6827
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6846
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6863
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6880
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6884
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = false
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = true
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = false
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = true
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6919
		{
			sqlVAL.union.val = false
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6925
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6938
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6944
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6950
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6958
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6983
		{
			sqlVAL.str = ""
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6987
		{
			sqlVAL.str = ""
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7011
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7017
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7023
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = &tree.AlterTableRegionalAffinity{
				Name:             sqlDollar[3].union.unresolvedObjectName(),
				RegionalAffinity: sqlDollar[5].union.regionAffinity(),
				IfExists:         false,
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = &tree.AlterTableRegionalAffinity{
				Name:             sqlDollar[5].union.unresolvedObjectName(),
				RegionalAffinity: sqlDollar[7].union.regionAffinity(),
				IfExists:         true,
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelGlobal,
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				TableRegion:           tree.Name(sqlDollar[6].str),
				RegionalAffinityLevel: tree.RegionalAffinityLevelTable,
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelRowLevel,
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelGlobal,
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				TableRegion:           tree.Name(sqlDollar[4].str),
				RegionalAffinityLevel: tree.RegionalAffinityLevelTable,
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7095
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelRowLevel,
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelGlobal,
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				TableRegion:           tree.Name(sqlDollar[3].str),
				RegionalAffinityLevel: tree.RegionalAffinityLevelTable,
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelRowLevel,
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelGlobal,
			}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				TableRegion:           tree.Name(sqlDollar[6].str),
				RegionalAffinityLevel: tree.RegionalAffinityLevelTable,
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelRowLevel,
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7147
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7157
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7163
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7175
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7189
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7195
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7207
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7213
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7227
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7233
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7250
		{
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7251
		{
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7254
		{
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7255
		{
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7266
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7284
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7293
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7314
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7322
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7343
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7351
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7362
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7366
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7367
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7368
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7387
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7392
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7405
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7410
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7419
		{
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7420
		{
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7421
		{
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7438
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7441
		{
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7442
		{
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7470
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7483
		{
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7485
		{
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7489
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				Regions:         sqlDollar[10].union.nameList(),
				SurvivalGoal:    sqlDollar[11].union.survivalGoal(),
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				Regions:         sqlDollar[13].union.nameList(),
				SurvivalGoal:    sqlDollar[14].union.survivalGoal(),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7574
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7578
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.str = ""
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.str = ""
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7629
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.str = ""
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.str = ""
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7649
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7662
		{
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7663
		{
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7678
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7692
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7710
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7714
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7723
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7772
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7799
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7803
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7829
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7841
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7844
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7853
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7870
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7873
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7877
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7894
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7909
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7991
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8027
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8053
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8088
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8089
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8090
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8151
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8195
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8211
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8216
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = true
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = false
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8264
		{
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8265
		{
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = nil
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8278
		{
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8279
		{
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = true
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = false
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8291
		{
			sqlVAL.union.val = false
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.union.val = true
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8308
		{
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8309
		{
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8312
		{
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8313
		{
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8354
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8375
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8380
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8409
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8442
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8497
		{
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8498
		{
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8501
		{
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8502
		{
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8528
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8536
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8537
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8538
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8568
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8570
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8585
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8607
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8612
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8617
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8628
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8635
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8640
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8651
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8659
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8667
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8698
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8708
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8726
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8735
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8743
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8754
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8784
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8795
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8817
		{
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8819
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8822
		{
			sqlVAL.union.val = nil
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = true
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8842
		{
			sqlVAL.union.val = false
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8878
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.str = tree.AstFull
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.str = tree.AstRight
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.str = tree.AstInner
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8936
		{
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8937
		{
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.str = tree.AstHash
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8973
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.str = ""
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9006
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9011
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9029
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9035
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9041
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9051
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = true
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = false
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9071
		{
			sqlVAL.union.val = true
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = false
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9100
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9113
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9121
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9122
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9140
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9142
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9150
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9163
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9170
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9179
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9219
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9231
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9232
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9236
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9237
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9238
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9240
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9241
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9242
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9244
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9245
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9246
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9248
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9249
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9250
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9252
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9253
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9254
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9256
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9257
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9258
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9260
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9261
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9262
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9264
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9265
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9266
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = types.Geography
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9281
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9289
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9315
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9323
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = nil
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = types.Int2
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = types.Int
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = types.Float4
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = types.Float
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9366
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9374
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9382
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = types.Bool
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9396
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = types.Float
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9415
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9421
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9429
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9443
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = types.String
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = true
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = false
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = types.Date
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9492
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9500
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9514
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9523
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9531
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9548
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = true
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = false
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = false
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = types.Interval
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9572
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9599
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9647
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9656
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9671
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = nil
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9701
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9761
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9786
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9842
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9882
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9890
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9894
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9898
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9994
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9998
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10013
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10079
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10101
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10165
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10295
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10300
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10326
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10335
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10350
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10380
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10391
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10392
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10407
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10416
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10482
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10549
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10553
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10557
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10581
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10589
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10607
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10609
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10612
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10621
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10630
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10639
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10648
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10653
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10655
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10658
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10663
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10668
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10677
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10678
		{
			return unimplemented(sqllex, "treat")
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10680
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10684
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10688
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10696
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10699
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10704
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10710
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10720
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10724
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10751
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.str = ""
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10810
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10818
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10840
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10853
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10909
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10921
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10939
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10950
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = tree.Any
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = tree.Some
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = tree.All
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = tree.Div
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = tree.LT
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = tree.GT
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = tree.LE
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = tree.GE
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = tree.NE
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = tree.Like
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11168
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11201
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11223
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11227
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11279
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11296
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11311
		{
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11312
		{
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11361
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11365
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11384
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11392
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11415
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11461
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11465
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11477
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11481
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11490
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11501
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11510
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11518
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11530
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11611
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11619
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11666
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11673
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11677
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11681
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11695
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11699
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11725
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11743
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11756
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11763
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.str = ""
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
