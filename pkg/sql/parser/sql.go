// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:866
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13490

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1553,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	260, 402,
	-2, 0,
	-1, 74,
	242, 240,
	513, 240,
	-2, 0,
	-1, 87,
	230, 1289,
	244, 1289,
	260, 398,
	389, 398,
	399, 1050,
	437, 398,
	450, 1050,
	497, 1050,
	524, 398,
	550, 1050,
	-2, 0,
	-1, 93,
	132, 1553,
	237, 1553,
	535, 1553,
	536, 1553,
	-2, 0,
	-1, 109,
	150, 1524,
	169, 1524,
	182, 1524,
	240, 1524,
	273, 1524,
	340, 1524,
	350, 1524,
	530, 1524,
	-2, 1495,
	-1, 149,
	158, 901,
	259, 901,
	392, 863,
	455, 863,
	496, 863,
	516, 901,
	518, 863,
	-2, 0,
	-1, 153,
	4, 1555,
	21, 1555,
	22, 1555,
	23, 1555,
	24, 1555,
	25, 1555,
	26, 1555,
	27, 1555,
	29, 1555,
	30, 1555,
	36, 1555,
	41, 1555,
	42, 1555,
	44, 1555,
	45, 1555,
	46, 1555,
	47, 1555,
	48, 1555,
	49, 1555,
	50, 1555,
	51, 1555,
	53, 1555,
	54, 1555,
	55, 1555,
	56, 1555,
	58, 1555,
	59, 1555,
	60, 1555,
	61, 1555,
	62, 1555,
	63, 1555,
	64, 1555,
	68, 1555,
	69, 1555,
	70, 1555,
	71, 1555,
	73, 1555,
	74, 1555,
	75, 1555,
	79, 1555,
	80, 1555,
	81, 1555,
	82, 1555,
	83, 1555,
	84, 1555,
	85, 1555,
	88, 1555,
	89, 1555,
	90, 1555,
	91, 1555,
	92, 1555,
	94, 1555,
	96, 1555,
	97, 1555,
	98, 1555,
	99, 1555,
	100, 1555,
	101, 1555,
	103, 1555,
	104, 1555,
	105, 1555,
	107, 1555,
	108, 1555,
	109, 1555,
	117, 1555,
	118, 1555,
	119, 1555,
	120, 1555,
	121, 1555,
	123, 1555,
	124, 1555,
	125, 1555,
	127, 1555,
	128, 1555,
	129, 1555,
	131, 1555,
	132, 1555,
	133, 1555,
	135, 1555,
	136, 1555,
	137, 1555,
	140, 1555,
	141, 1555,
	142, 1555,
	144, 1555,
	145, 1555,
	147, 1555,
	148, 1555,
	149, 1555,
	151, 1555,
	152, 1555,
	153, 1555,
	154, 1555,
	155, 1555,
	156, 1555,
	157, 1555,
	158, 1555,
	159, 1555,
	160, 1555,
	161, 1555,
	162, 1555,
	163, 1555,
	164, 1555,
	165, 1555,
	166, 1555,
	168, 1555,
	174, 1555,
	175, 1555,
	176, 1555,
	177, 1555,
	181, 1555,
	183, 1555,
	184, 1555,
	188, 1555,
	189, 1555,
	190, 1555,
	191, 1555,
	192, 1555,
	193, 1555,
	194, 1555,
	195, 1555,
	196, 1555,
	197, 1555,
	198, 1555,
	199, 1555,
	200, 1555,
	201, 1555,
	203, 1555,
	204, 1555,
	206, 1555,
	207, 1555,
	209, 1555,
	210, 1555,
	211, 1555,
	212, 1555,
	213, 1555,
	214, 1555,
	215, 1555,
	216, 1555,
	217, 1555,
	219, 1555,
	220, 1555,
	222, 1555,
	223, 1555,
	224, 1555,
	225, 1555,
	226, 1555,
	230, 1555,
	231, 1555,
	232, 1555,
	233, 1555,
	234, 1555,
	237, 1555,
	238, 1555,
	239, 1555,
	241, 1555,
	243, 1555,
	244, 1555,
	246, 1555,
	248, 1555,
	249, 1555,
	250, 1555,
	252, 1555,
	256, 1555,
	257, 1555,
	258, 1555,
	259, 1555,
	260, 1555,
	261, 1555,
	263, 1555,
	264, 1555,
	265, 1555,
	267, 1555,
	268, 1555,
	270, 1555,
	271, 1555,
	274, 1555,
	278, 1555,
	279, 1555,
	280, 1555,
	283, 1555,
	284, 1555,
	285, 1555,
	286, 1555,
	288, 1555,
	289, 1555,
	290, 1555,
	291, 1555,
	292, 1555,
	293, 1555,
	294, 1555,
	295, 1555,
	296, 1555,
	297, 1555,
	298, 1555,
	299, 1555,
	300, 1555,
	301, 1555,
	302, 1555,
	303, 1555,
	304, 1555,
	305, 1555,
	306, 1555,
	307, 1555,
	308, 1555,
	309, 1555,
	311, 1555,
	313, 1555,
	314, 1555,
	315, 1555,
	316, 1555,
	317, 1555,
	318, 1555,
	319, 1555,
	320, 1555,
	321, 1555,
	322, 1555,
	323, 1555,
	324, 1555,
	325, 1555,
	327, 1555,
	328, 1555,
	330, 1555,
	332, 1555,
	333, 1555,
	335, 1555,
	336, 1555,
	337, 1555,
	338, 1555,
	339, 1555,
	342, 1555,
	345, 1555,
	346, 1555,
	347, 1555,
	348, 1555,
	351, 1555,
	352, 1555,
	353, 1555,
	355, 1555,
	357, 1555,
	358, 1555,
	359, 1555,
	360, 1555,
	361, 1555,
	362, 1555,
	363, 1555,
	364, 1555,
	365, 1555,
	366, 1555,
	367, 1555,
	368, 1555,
	369, 1555,
	371, 1555,
	372, 1555,
	373, 1555,
	374, 1555,
	375, 1555,
	376, 1555,
	377, 1555,
	378, 1555,
	379, 1555,
	380, 1555,
	381, 1555,
	382, 1555,
	383, 1555,
	384, 1555,
	385, 1555,
	387, 1555,
	388, 1555,
	390, 1555,
	391, 1555,
	392, 1555,
	393, 1555,
	394, 1555,
	395, 1555,
	396, 1555,
	397, 1555,
	398, 1555,
	399, 1555,
	400, 1555,
	401, 1555,
	403, 1555,
	405, 1555,
	406, 1555,
	407, 1555,
	412, 1555,
	414, 1555,
	415, 1555,
	416, 1555,
	417, 1555,
	418, 1555,
	419, 1555,
	420, 1555,
	421, 1555,
	422, 1555,
	423, 1555,
	425, 1555,
	426, 1555,
	427, 1555,
	429, 1555,
	430, 1555,
	431, 1555,
	432, 1555,
	433, 1555,
	434, 1555,
	435, 1555,
	437, 1555,
	438, 1555,
	439, 1555,
	440, 1555,
	441, 1555,
	442, 1555,
	443, 1555,
	444, 1555,
	445, 1555,
	446, 1555,
	447, 1555,
	448, 1555,
	450, 1555,
	451, 1555,
	452, 1555,
	453, 1555,
	454, 1555,
	455, 1555,
	457, 1555,
	458, 1555,
	459, 1555,
	460, 1555,
	461, 1555,
	462, 1555,
	464, 1555,
	465, 1555,
	466, 1555,
	467, 1555,
	468, 1555,
	469, 1555,
	470, 1555,
	471, 1555,
	473, 1555,
	475, 1555,
	476, 1555,
	477, 1555,
	478, 1555,
	479, 1555,
	480, 1555,
	481, 1555,
	482, 1555,
	483, 1555,
	484, 1555,
	485, 1555,
	486, 1555,
	487, 1555,
	488, 1555,
	489, 1555,
	490, 1555,
	492, 1555,
	493, 1555,
	495, 1555,
	496, 1555,
	498, 1555,
	499, 1555,
	500, 1555,
	501, 1555,
	502, 1555,
	503, 1555,
	504, 1555,
	505, 1555,
	506, 1555,
	508, 1555,
	509, 1555,
	510, 1555,
	511, 1555,
	512, 1555,
	514, 1555,
	516, 1555,
	517, 1555,
	518, 1555,
	519, 1555,
	520, 1555,
	521, 1555,
	523, 1555,
	524, 1555,
	525, 1555,
	526, 1555,
	528, 1555,
	529, 1555,
	532, 1555,
	533, 1555,
	534, 1555,
	535, 1555,
	536, 1555,
	537, 1555,
	538, 1555,
	540, 1555,
	543, 1555,
	544, 1555,
	545, 1555,
	546, 1555,
	547, 1555,
	548, 1555,
	550, 1555,
	551, 1555,
	552, 1555,
	553, 1555,
	555, 1555,
	560, 1555,
	561, 1555,
	562, 1555,
	563, 1555,
	564, 1555,
	565, 1555,
	-2, 0,
	-1, 154,
	1, 1406,
	130, 1406,
	248, 1406,
	329, 1406,
	387, 1406,
	396, 1406,
	569, 1406,
	596, 1406,
	-2, 0,
	-1, 156,
	1, 1406,
	596, 1406,
	-2, 0,
	-1, 157,
	1, 1406,
	596, 1406,
	-2, 0,
	-1, 158,
	1, 1406,
	513, 1406,
	596, 1406,
	-2, 0,
	-1, 187,
	150, 1523,
	169, 1523,
	182, 1523,
	240, 1523,
	273, 1523,
	340, 1523,
	350, 1523,
	530, 1523,
	-2, 1498,
	-1, 234,
	4, 1562,
	5, 1562,
	6, 1562,
	7, 1562,
	8, 1562,
	9, 1562,
	10, 1562,
	21, 1562,
	22, 1562,
	23, 1562,
	24, 1562,
	25, 1562,
	26, 1562,
	27, 1562,
	29, 1562,
	30, 1562,
	36, 1562,
	37, 1562,
	41, 1562,
	42, 1562,
	43, 1562,
	44, 1562,
	45, 1562,
	46, 1562,
	47, 1562,
	48, 1562,
	49, 1562,
	50, 1562,
	51, 1562,
	53, 1562,
	54, 1562,
	55, 1562,
	56, 1562,
	58, 1562,
	59, 1562,
	60, 1562,
	61, 1562,
	62, 1562,
	63, 1562,
	64, 1562,
	65, 1562,
	66, 1562,
	67, 1562,
	68, 1562,
	69, 1562,
	70, 1562,
	71, 1562,
	73, 1562,
	74, 1562,
	75, 1562,
	77, 1562,
	79, 1562,
	80, 1562,
	81, 1562,
	82, 1562,
	83, 1562,
	84, 1562,
	85, 1562,
	88, 1562,
	89, 1562,
	90, 1562,
	91, 1562,
	92, 1562,
	94, 1562,
	96, 1562,
	97, 1562,
	98, 1562,
	99, 1562,
	100, 1562,
	101, 1562,
	103, 1562,
	104, 1562,
	105, 1562,
	106, 1562,
	107, 1562,
	108, 1562,
	109, 1562,
	110, 1562,
	111, 1562,
	112, 1562,
	113, 1562,
	114, 1562,
	115, 1562,
	116, 1562,
	117, 1562,
	118, 1562,
	119, 1562,
	120, 1562,
	121, 1562,
	122, 1562,
	123, 1562,
	124, 1562,
	125, 1562,
	126, 1562,
	127, 1562,
	128, 1562,
	129, 1562,
	131, 1562,
	132, 1562,
	133, 1562,
	135, 1562,
	136, 1562,
	137, 1562,
	140, 1562,
	141, 1562,
	142, 1562,
	144, 1562,
	145, 1562,
	147, 1562,
	148, 1562,
	149, 1562,
	151, 1562,
	152, 1562,
	153, 1562,
	154, 1562,
	155, 1562,
	156, 1562,
	157, 1562,
	158, 1562,
	159, 1562,
	160, 1562,
	161, 1562,
	162, 1562,
	163, 1562,
	164, 1562,
	165, 1562,
	166, 1562,
	167, 1562,
	168, 1562,
	174, 1562,
	175, 1562,
	176, 1562,
	177, 1562,
	181, 1562,
	183, 1562,
	184, 1562,
	187, 1562,
	188, 1562,
	189, 1562,
	190, 1562,
	191, 1562,
	192, 1562,
	193, 1562,
	194, 1562,
	195, 1562,
	196, 1562,
	197, 1562,
	198, 1562,
	199, 1562,
	200, 1562,
	201, 1562,
	203, 1562,
	204, 1562,
	206, 1562,
	207, 1562,
	209, 1562,
	210, 1562,
	211, 1562,
	212, 1562,
	213, 1562,
	214, 1562,
	215, 1562,
	216, 1562,
	217, 1562,
	218, 1562,
	219, 1562,
	220, 1562,
	222, 1562,
	223, 1562,
	224, 1562,
	225, 1562,
	226, 1562,
	230, 1562,
	231, 1562,
	232, 1562,
	233, 1562,
	234, 1562,
	236, 1562,
	237, 1562,
	238, 1562,
	239, 1562,
	241, 1562,
	243, 1562,
	244, 1562,
	245, 1562,
	246, 1562,
	247, 1562,
	248, 1562,
	249, 1562,
	250, 1562,
	251, 1562,
	252, 1562,
	256, 1562,
	257, 1562,
	258, 1562,
	259, 1562,
	260, 1562,
	261, 1562,
	263, 1562,
	264, 1562,
	265, 1562,
	267, 1562,
	268, 1562,
	269, 1562,
	270, 1562,
	271, 1562,
	272, 1562,
	274, 1562,
	278, 1562,
	279, 1562,
	280, 1562,
	281, 1562,
	282, 1562,
	283, 1562,
	284, 1562,
	285, 1562,
	286, 1562,
	288, 1562,
	289, 1562,
	290, 1562,
	291, 1562,
	292, 1562,
	293, 1562,
	294, 1562,
	295, 1562,
	296, 1562,
	297, 1562,
	298, 1562,
	299, 1562,
	300, 1562,
	301, 1562,
	302, 1562,
	303, 1562,
	304, 1562,
	305, 1562,
	306, 1562,
	307, 1562,
	308, 1562,
	309, 1562,
	311, 1562,
	312, 1562,
	313, 1562,
	314, 1562,
	315, 1562,
	316, 1562,
	317, 1562,
	318, 1562,
	319, 1562,
	320, 1562,
	321, 1562,
	322, 1562,
	323, 1562,
	324, 1562,
	325, 1562,
	326, 1562,
	327, 1562,
	328, 1562,
	329, 1562,
	330, 1562,
	331, 1562,
	332, 1562,
	333, 1562,
	334, 1562,
	335, 1562,
	336, 1562,
	337, 1562,
	338, 1562,
	339, 1562,
	342, 1562,
	346, 1562,
	347, 1562,
	348, 1562,
	351, 1562,
	352, 1562,
	353, 1562,
	354, 1562,
	355, 1562,
	356, 1562,
	357, 1562,
	358, 1562,
	359, 1562,
	360, 1562,
	361, 1562,
	362, 1562,
	363, 1562,
	364, 1562,
	365, 1562,
	366, 1562,
	367, 1562,
	368, 1562,
	369, 1562,
	371, 1562,
	372, 1562,
	373, 1562,
	374, 1562,
	375, 1562,
	376, 1562,
	377, 1562,
	378, 1562,
	379, 1562,
	380, 1562,
	381, 1562,
	382, 1562,
	383, 1562,
	384, 1562,
	385, 1562,
	387, 1562,
	388, 1562,
	390, 1562,
	391, 1562,
	392, 1562,
	393, 1562,
	394, 1562,
	395, 1562,
	396, 1562,
	397, 1562,
	398, 1562,
	399, 1562,
	400, 1562,
	401, 1562,
	403, 1562,
	405, 1562,
	406, 1562,
	407, 1562,
	412, 1562,
	414, 1562,
	415, 1562,
	416, 1562,
	417, 1562,
	418, 1562,
	419, 1562,
	420, 1562,
	421, 1562,
	422, 1562,
	423, 1562,
	425, 1562,
	426, 1562,
	427, 1562,
	428, 1562,
	429, 1562,
	430, 1562,
	431, 1562,
	432, 1562,
	433, 1562,
	434, 1562,
	435, 1562,
	437, 1562,
	438, 1562,
	439, 1562,
	440, 1562,
	441, 1562,
	442, 1562,
	443, 1562,
	444, 1562,
	445, 1562,
	446, 1562,
	447, 1562,
	448, 1562,
	450, 1562,
	451, 1562,
	452, 1562,
	453, 1562,
	454, 1562,
	455, 1562,
	456, 1562,
	457, 1562,
	458, 1562,
	459, 1562,
	460, 1562,
	461, 1562,
	462, 1562,
	463, 1562,
	464, 1562,
	465, 1562,
	466, 1562,
	467, 1562,
	468, 1562,
	469, 1562,
	470, 1562,
	471, 1562,
	473, 1562,
	475, 1562,
	476, 1562,
	477, 1562,
	478, 1562,
	479, 1562,
	480, 1562,
	481, 1562,
	482, 1562,
	483, 1562,
	484, 1562,
	485, 1562,
	486, 1562,
	487, 1562,
	488, 1562,
	489, 1562,
	490, 1562,
	492, 1562,
	493, 1562,
	494, 1562,
	495, 1562,
	496, 1562,
	498, 1562,
	499, 1562,
	500, 1562,
	501, 1562,
	502, 1562,
	503, 1562,
	504, 1562,
	505, 1562,
	506, 1562,
	508, 1562,
	509, 1562,
	510, 1562,
	511, 1562,
	512, 1562,
	514, 1562,
	516, 1562,
	517, 1562,
	518, 1562,
	519, 1562,
	520, 1562,
	521, 1562,
	522, 1562,
	523, 1562,
	524, 1562,
	525, 1562,
	526, 1562,
	528, 1562,
	529, 1562,
	531, 1562,
	532, 1562,
	533, 1562,
	534, 1562,
	535, 1562,
	536, 1562,
	537, 1562,
	538, 1562,
	539, 1562,
	540, 1562,
	543, 1562,
	544, 1562,
	545, 1562,
	546, 1562,
	547, 1562,
	548, 1562,
	550, 1562,
	551, 1562,
	552, 1562,
	553, 1562,
	555, 1562,
	560, 1562,
	561, 1562,
	562, 1562,
	563, 1562,
	564, 1562,
	565, 1562,
	566, 1562,
	577, 1562,
	584, 1562,
	585, 1562,
	586, 1562,
	593, 1562,
	597, 1562,
	-2, 0,
	-1, 738,
	4, 1287,
	21, 1287,
	22, 1287,
	23, 1287,
	24, 1287,
	25, 1287,
	26, 1287,
	27, 1287,
	29, 1287,
	30, 1287,
	36, 1287,
	41, 1287,
	42, 1287,
	44, 1287,
	45, 1287,
	46, 1287,
	47, 1287,
	48, 1287,
	49, 1287,
	50, 1287,
	51, 1287,
	53, 1287,
	54, 1287,
	55, 1287,
	56, 1287,
	58, 1287,
	59, 1287,
	60, 1287,
	61, 1287,
	62, 1287,
	63, 1287,
	64, 1287,
	68, 1287,
	69, 1287,
	70, 1287,
	71, 1287,
	73, 1287,
	74, 1287,
	75, 1287,
	79, 1287,
	80, 1287,
	81, 1287,
	82, 1287,
	83, 1287,
	84, 1287,
	85, 1287,
	88, 1287,
	89, 1287,
	90, 1287,
	91, 1287,
	92, 1287,
	94, 1287,
	96, 1287,
	97, 1287,
	98, 1287,
	99, 1287,
	100, 1287,
	101, 1287,
	103, 1287,
	104, 1287,
	105, 1287,
	107, 1287,
	108, 1287,
	109, 1287,
	117, 1287,
	118, 1287,
	119, 1287,
	120, 1287,
	121, 1287,
	123, 1287,
	124, 1287,
	125, 1287,
	127, 1287,
	128, 1287,
	129, 1287,
	131, 1287,
	132, 1287,
	133, 1287,
	135, 1287,
	136, 1287,
	137, 1287,
	140, 1287,
	141, 1287,
	142, 1287,
	144, 1287,
	145, 1287,
	147, 1287,
	148, 1287,
	149, 1287,
	151, 1287,
	152, 1287,
	153, 1287,
	154, 1287,
	155, 1287,
	156, 1287,
	157, 1287,
	158, 1287,
	159, 1287,
	160, 1287,
	161, 1287,
	162, 1287,
	163, 1287,
	164, 1287,
	165, 1287,
	166, 1287,
	168, 1287,
	174, 1287,
	175, 1287,
	176, 1287,
	177, 1287,
	181, 1287,
	183, 1287,
	184, 1287,
	188, 1287,
	189, 1287,
	190, 1287,
	191, 1287,
	192, 1287,
	193, 1287,
	194, 1287,
	195, 1287,
	196, 1287,
	197, 1287,
	198, 1287,
	199, 1287,
	200, 1287,
	201, 1287,
	203, 1287,
	204, 1287,
	206, 1287,
	207, 1287,
	209, 1287,
	210, 1287,
	211, 1287,
	212, 1287,
	213, 1287,
	214, 1287,
	215, 1287,
	216, 1287,
	217, 1287,
	219, 1287,
	220, 1287,
	222, 1287,
	223, 1287,
	224, 1287,
	225, 1287,
	226, 1287,
	230, 1287,
	231, 1287,
	232, 1287,
	233, 1287,
	234, 1287,
	237, 1287,
	238, 1287,
	239, 1287,
	241, 1287,
	243, 1287,
	244, 1287,
	246, 1287,
	248, 1287,
	249, 1287,
	250, 1287,
	252, 1287,
	256, 1287,
	257, 1287,
	258, 1287,
	259, 1287,
	260, 1287,
	261, 1287,
	263, 1287,
	264, 1287,
	265, 1287,
	267, 1287,
	268, 1287,
	270, 1287,
	271, 1287,
	274, 1287,
	278, 1287,
	279, 1287,
	280, 1287,
	283, 1287,
	284, 1287,
	285, 1287,
	286, 1287,
	288, 1287,
	289, 1287,
	290, 1287,
	291, 1287,
	292, 1287,
	293, 1287,
	294, 1287,
	295, 1287,
	296, 1287,
	297, 1287,
	298, 1287,
	299, 1287,
	300, 1287,
	301, 1287,
	302, 1287,
	303, 1287,
	304, 1287,
	305, 1287,
	306, 1287,
	307, 1287,
	308, 1287,
	309, 1287,
	311, 1287,
	313, 1287,
	314, 1287,
	315, 1287,
	316, 1287,
	317, 1287,
	318, 1287,
	319, 1287,
	320, 1287,
	321, 1287,
	322, 1287,
	323, 1287,
	324, 1287,
	325, 1287,
	327, 1287,
	328, 1287,
	330, 1287,
	332, 1287,
	333, 1287,
	335, 1287,
	336, 1287,
	337, 1287,
	338, 1287,
	339, 1287,
	342, 1287,
	346, 1287,
	347, 1287,
	348, 1287,
	351, 1287,
	352, 1287,
	353, 1287,
	355, 1287,
	357, 1287,
	358, 1287,
	359, 1287,
	360, 1287,
	361, 1287,
	362, 1287,
	363, 1287,
	364, 1287,
	365, 1287,
	366, 1287,
	367, 1287,
	368, 1287,
	369, 1287,
	371, 1287,
	372, 1287,
	373, 1287,
	374, 1287,
	375, 1287,
	376, 1287,
	377, 1287,
	378, 1287,
	379, 1287,
	380, 1287,
	381, 1287,
	382, 1287,
	383, 1287,
	384, 1287,
	385, 1287,
	387, 1287,
	388, 1287,
	390, 1287,
	391, 1287,
	392, 1287,
	393, 1287,
	394, 1287,
	395, 1287,
	396, 1287,
	397, 1287,
	398, 1287,
	399, 1287,
	400, 1287,
	401, 1287,
	403, 1287,
	405, 1287,
	406, 1287,
	407, 1287,
	412, 1287,
	414, 1287,
	415, 1287,
	416, 1287,
	417, 1287,
	418, 1287,
	419, 1287,
	420, 1287,
	421, 1287,
	422, 1287,
	423, 1287,
	425, 1287,
	426, 1287,
	427, 1287,
	429, 1287,
	430, 1287,
	431, 1287,
	432, 1287,
	433, 1287,
	434, 1287,
	435, 1287,
	437, 1287,
	438, 1287,
	439, 1287,
	440, 1287,
	441, 1287,
	442, 1287,
	443, 1287,
	444, 1287,
	445, 1287,
	446, 1287,
	447, 1287,
	448, 1287,
	450, 1287,
	451, 1287,
	452, 1287,
	453, 1287,
	454, 1287,
	455, 1287,
	457, 1287,
	458, 1287,
	459, 1287,
	460, 1287,
	461, 1287,
	462, 1287,
	464, 1287,
	465, 1287,
	466, 1287,
	467, 1287,
	468, 1287,
	469, 1287,
	470, 1287,
	471, 1287,
	473, 1287,
	475, 1287,
	476, 1287,
	477, 1287,
	478, 1287,
	479, 1287,
	480, 1287,
	481, 1287,
	482, 1287,
	483, 1287,
	484, 1287,
	485, 1287,
	486, 1287,
	487, 1287,
	488, 1287,
	489, 1287,
	490, 1287,
	492, 1287,
	493, 1287,
	495, 1287,
	496, 1287,
	498, 1287,
	499, 1287,
	500, 1287,
	501, 1287,
	502, 1287,
	503, 1287,
	504, 1287,
	505, 1287,
	506, 1287,
	508, 1287,
	509, 1287,
	510, 1287,
	511, 1287,
	512, 1287,
	514, 1287,
	516, 1287,
	517, 1287,
	518, 1287,
	519, 1287,
	520, 1287,
	521, 1287,
	523, 1287,
	524, 1287,
	525, 1287,
	526, 1287,
	528, 1287,
	529, 1287,
	532, 1287,
	533, 1287,
	534, 1287,
	535, 1287,
	536, 1287,
	537, 1287,
	538, 1287,
	540, 1287,
	543, 1287,
	544, 1287,
	545, 1287,
	546, 1287,
	547, 1287,
	548, 1287,
	550, 1287,
	551, 1287,
	552, 1287,
	553, 1287,
	555, 1287,
	560, 1287,
	561, 1287,
	562, 1287,
	563, 1287,
	564, 1287,
	565, 1287,
	-2, 0,
	-1, 757,
	186, 2348,
	513, 2348,
	576, 2348,
	595, 2348,
	-2, 0,
	-1, 758,
	186, 2455,
	513, 2455,
	576, 2455,
	595, 2455,
	-2, 0,
	-1, 759,
	186, 2335,
	513, 2335,
	576, 2335,
	595, 2335,
	-2, 0,
	-1, 761,
	186, 2591,
	513, 2591,
	576, 2591,
	595, 2591,
	-2, 0,
	-1, 763,
	186, 2632,
	513, 2632,
	576, 2632,
	595, 2632,
	-2, 0,
	-1, 771,
	186, 2482,
	513, 2482,
	576, 2482,
	595, 2482,
	-2, 691,
	-1, 806,
	595, 2284,
	598, 2284,
	-2, 981,
	-1, 807,
	595, 2286,
	598, 2286,
	-2, 982,
	-1, 808,
	595, 2285,
	598, 2285,
	-2, 983,
	-1, 809,
	598, 2210,
	-2, 984,
	-1, 832,
	182, 255,
	-2, 0,
	-1, 856,
	43, 2257,
	-2, 0,
	-1, 857,
	550, 1265,
	-2, 1051,
	-1, 873,
	4, 1692,
	21, 1692,
	22, 1692,
	23, 1692,
	24, 1692,
	25, 1692,
	26, 1692,
	27, 1692,
	29, 1692,
	30, 1692,
	36, 1692,
	41, 1692,
	42, 1692,
	44, 1692,
	45, 1692,
	46, 1692,
	47, 1692,
	48, 1692,
	49, 1692,
	50, 1692,
	51, 1692,
	53, 1692,
	54, 1692,
	55, 1692,
	56, 1692,
	58, 1692,
	59, 1692,
	60, 1692,
	61, 1692,
	62, 1692,
	63, 1692,
	64, 1692,
	68, 1692,
	69, 1692,
	70, 1692,
	71, 1692,
	73, 1692,
	74, 1692,
	75, 1692,
	79, 1692,
	80, 1692,
	81, 1692,
	82, 1692,
	83, 1692,
	84, 1692,
	85, 1692,
	88, 1692,
	89, 1692,
	90, 1692,
	91, 1692,
	92, 1692,
	94, 1692,
	96, 1692,
	97, 1692,
	98, 1692,
	99, 1692,
	100, 1692,
	101, 1692,
	103, 1692,
	104, 1692,
	105, 1692,
	107, 1692,
	108, 1692,
	109, 1692,
	117, 1692,
	118, 1692,
	119, 1692,
	120, 1692,
	121, 1692,
	123, 1692,
	124, 1692,
	125, 1692,
	127, 1692,
	128, 1692,
	129, 1692,
	131, 1692,
	132, 1692,
	133, 1692,
	135, 1692,
	136, 1692,
	137, 1692,
	140, 1692,
	141, 1692,
	142, 1692,
	144, 1692,
	145, 1692,
	147, 1692,
	148, 1692,
	149, 1692,
	151, 1692,
	152, 1692,
	153, 1692,
	154, 1692,
	155, 1692,
	156, 1692,
	157, 1692,
	158, 1692,
	159, 1692,
	160, 1692,
	161, 1692,
	162, 1692,
	163, 1692,
	164, 1692,
	165, 1692,
	166, 1692,
	168, 1692,
	174, 1692,
	175, 1692,
	176, 1692,
	177, 1692,
	181, 1692,
	183, 1692,
	184, 1692,
	188, 1692,
	189, 1692,
	190, 1692,
	191, 1692,
	192, 1692,
	193, 1692,
	194, 1692,
	195, 1692,
	196, 1692,
	197, 1692,
	198, 1692,
	199, 1692,
	200, 1692,
	201, 1692,
	203, 1692,
	204, 1692,
	206, 1692,
	207, 1692,
	209, 1692,
	210, 1692,
	211, 1692,
	212, 1692,
	213, 1692,
	214, 1692,
	215, 1692,
	216, 1692,
	217, 1692,
	219, 1692,
	220, 1692,
	222, 1692,
	223, 1692,
	224, 1692,
	225, 1692,
	226, 1692,
	230, 1692,
	231, 1692,
	232, 1692,
	233, 1692,
	234, 1692,
	237, 1692,
	238, 1692,
	239, 1692,
	241, 1692,
	243, 1692,
	244, 1692,
	246, 1692,
	248, 1692,
	249, 1692,
	250, 1692,
	252, 1692,
	256, 1692,
	257, 1692,
	258, 1692,
	259, 1692,
	260, 1692,
	261, 1692,
	263, 1692,
	264, 1692,
	265, 1692,
	267, 1692,
	268, 1692,
	270, 1692,
	271, 1692,
	274, 1692,
	278, 1692,
	279, 1692,
	280, 1692,
	283, 1692,
	284, 1692,
	285, 1692,
	286, 1692,
	288, 1692,
	289, 1692,
	290, 1692,
	291, 1692,
	292, 1692,
	293, 1692,
	294, 1692,
	295, 1692,
	296, 1692,
	297, 1692,
	298, 1692,
	299, 1692,
	300, 1692,
	301, 1692,
	302, 1692,
	303, 1692,
	304, 1692,
	305, 1692,
	306, 1692,
	307, 1692,
	308, 1692,
	309, 1692,
	311, 1692,
	313, 1692,
	314, 1692,
	315, 1692,
	316, 1692,
	317, 1692,
	318, 1692,
	319, 1692,
	320, 1692,
	321, 1692,
	322, 1692,
	323, 1692,
	324, 1692,
	325, 1692,
	327, 1692,
	328, 1692,
	330, 1692,
	332, 1692,
	333, 1692,
	335, 1692,
	336, 1692,
	337, 1692,
	338, 1692,
	339, 1692,
	342, 1692,
	346, 1692,
	347, 1692,
	348, 1692,
	351, 1692,
	352, 1692,
	353, 1692,
	355, 1692,
	357, 1692,
	358, 1692,
	359, 1692,
	360, 1692,
	361, 1692,
	362, 1692,
	363, 1692,
	364, 1692,
	365, 1692,
	366, 1692,
	367, 1692,
	368, 1692,
	369, 1692,
	371, 1692,
	372, 1692,
	373, 1692,
	374, 1692,
	375, 1692,
	376, 1692,
	377, 1692,
	378, 1692,
	379, 1692,
	380, 1692,
	381, 1692,
	382, 1692,
	383, 1692,
	384, 1692,
	385, 1692,
	387, 1692,
	388, 1692,
	390, 1692,
	391, 1692,
	392, 1692,
	393, 1692,
	394, 1692,
	395, 1692,
	396, 1692,
	397, 1692,
	398, 1692,
	399, 1692,
	400, 1692,
	401, 1692,
	403, 1692,
	405, 1692,
	406, 1692,
	407, 1692,
	412, 1692,
	414, 1692,
	415, 1692,
	416, 1692,
	417, 1692,
	418, 1692,
	419, 1692,
	420, 1692,
	421, 1692,
	422, 1692,
	423, 1692,
	425, 1692,
	426, 1692,
	427, 1692,
	429, 1692,
	430, 1692,
	431, 1692,
	432, 1692,
	433, 1692,
	434, 1692,
	435, 1692,
	437, 1692,
	438, 1692,
	439, 1692,
	440, 1692,
	441, 1692,
	442, 1692,
	443, 1692,
	444, 1692,
	445, 1692,
	446, 1692,
	447, 1692,
	448, 1692,
	450, 1692,
	451, 1692,
	452, 1692,
	453, 1692,
	454, 1692,
	455, 1692,
	457, 1692,
	458, 1692,
	459, 1692,
	460, 1692,
	461, 1692,
	462, 1692,
	464, 1692,
	465, 1692,
	466, 1692,
	467, 1692,
	468, 1692,
	469, 1692,
	470, 1692,
	471, 1692,
	473, 1692,
	475, 1692,
	476, 1692,
	477, 1692,
	478, 1692,
	479, 1692,
	480, 1692,
	481, 1692,
	482, 1692,
	483, 1692,
	484, 1692,
	485, 1692,
	486, 1692,
	487, 1692,
	488, 1692,
	489, 1692,
	490, 1692,
	492, 1692,
	493, 1692,
	495, 1692,
	496, 1692,
	498, 1692,
	499, 1692,
	500, 1692,
	501, 1692,
	502, 1692,
	503, 1692,
	504, 1692,
	505, 1692,
	506, 1692,
	508, 1692,
	509, 1692,
	510, 1692,
	511, 1692,
	512, 1692,
	514, 1692,
	516, 1692,
	517, 1692,
	518, 1692,
	519, 1692,
	520, 1692,
	521, 1692,
	523, 1692,
	524, 1692,
	525, 1692,
	526, 1692,
	528, 1692,
	529, 1692,
	532, 1692,
	533, 1692,
	534, 1692,
	535, 1692,
	536, 1692,
	537, 1692,
	538, 1692,
	540, 1692,
	543, 1692,
	544, 1692,
	545, 1692,
	546, 1692,
	547, 1692,
	548, 1692,
	550, 1692,
	551, 1692,
	552, 1692,
	553, 1692,
	555, 1692,
	560, 1692,
	561, 1692,
	562, 1692,
	563, 1692,
	564, 1692,
	565, 1692,
	-2, 0,
	-1, 883,
	260, 402,
	-2, 0,
	-1, 955,
	392, 864,
	455, 864,
	496, 864,
	518, 864,
	-2, 0,
	-1, 956,
	392, 863,
	455, 863,
	496, 863,
	518, 863,
	-2, 801,
	-1, 960,
	1, 915,
	592, 915,
	594, 915,
	596, 915,
	-2, 0,
	-1, 962,
	1, 838,
	592, 838,
	594, 838,
	596, 838,
	-2, 0,
	-1, 963,
	1, 842,
	592, 842,
	594, 842,
	596, 842,
	-2, 0,
	-1, 964,
	1, 980,
	182, 980,
	592, 980,
	594, 980,
	596, 980,
	-2, 0,
	-1, 972,
	1, 869,
	592, 869,
	594, 869,
	596, 869,
	-2, 0,
	-1, 979,
	1, 915,
	592, 915,
	594, 915,
	596, 915,
	-2, 0,
	-1, 980,
	1, 917,
	592, 917,
	594, 917,
	596, 917,
	-2, 0,
	-1, 981,
	1, 920,
	592, 920,
	594, 920,
	596, 920,
	-2, 0,
	-1, 987,
	1, 944,
	592, 944,
	594, 944,
	596, 944,
	-2, 0,
	-1, 988,
	1, 946,
	592, 946,
	594, 946,
	596, 946,
	-2, 0,
	-1, 993,
	1, 974,
	592, 974,
	594, 974,
	596, 974,
	-2, 0,
	-1, 1042,
	169, 1566,
	182, 1566,
	273, 1566,
	340, 1566,
	-2, 1502,
	-1, 1057,
	169, 1565,
	182, 1565,
	273, 1565,
	340, 1565,
	-2, 1499,
	-1, 1084,
	595, 2283,
	-2, 699,
	-1, 1113,
	5, 2275,
	593, 2273,
	-2, 2264,
	-1, 1121,
	5, 2296,
	593, 2293,
	-2, 2284,
	-1, 1122,
	5, 2297,
	593, 2294,
	-2, 2285,
	-1, 1130,
	595, 2281,
	-2, 2263,
	-1, 1131,
	593, 2715,
	-2, 2282,
	-1, 1154,
	593, 2714,
	-2, 2298,
	-1, 1155,
	5, 1767,
	-2, 2685,
	-1, 1156,
	5, 1768,
	-2, 2686,
	-1, 1157,
	5, 1769,
	-2, 2700,
	-1, 1158,
	5, 1770,
	-2, 2664,
	-1, 1159,
	5, 1771,
	-2, 2698,
	-1, 1160,
	5, 1779,
	-2, 2677,
	-1, 1161,
	5, 1766,
	-2, 2673,
	-1, 1162,
	5, 1766,
	-2, 2672,
	-1, 1163,
	5, 1766,
	-2, 2691,
	-1, 1164,
	5, 1777,
	-2, 2666,
	-1, 1165,
	5, 1782,
	-2, 2665,
	-1, 1166,
	5, 1784,
	-2, 2710,
	-1, 1169,
	5, 1806,
	-2, 2703,
	-1, 1170,
	5, 1798,
	-2, 2704,
	-1, 1171,
	5, 1806,
	-2, 2705,
	-1, 1172,
	5, 1802,
	-2, 2706,
	-1, 1173,
	5, 1752,
	-2, 2678,
	-1, 1174,
	5, 1753,
	-2, 2679,
	-1, 1175,
	5, 1754,
	-2, 2667,
	-1, 1203,
	5, 1789,
	-2, 2711,
	-1, 1204,
	5, 1790,
	-2, 2701,
	-1, 1205,
	5, 1791,
	551, 1791,
	-2, 2668,
	-1, 1206,
	5, 1792,
	551, 1792,
	-2, 2669,
	-1, 1243,
	593, 2293,
	-2, 2284,
	-1, 1244,
	593, 2294,
	-2, 2285,
	-1, 1344,
	186, 2632,
	513, 2632,
	576, 2632,
	595, 2632,
	-2, 0,
	-1, 1347,
	1, 676,
	596, 676,
	-2, 1414,
	-1, 1475,
	359, 2258,
	414, 2258,
	457, 2258,
	586, 2258,
	-2, 2248,
	-1, 1486,
	597, 2258,
	-2, 2260,
	-1, 1494,
	1, 1262,
	419, 1226,
	457, 1226,
	571, 1226,
	592, 1262,
	594, 1262,
	596, 1262,
	-2, 1551,
	-1, 1500,
	202, 1359,
	221, 1359,
	427, 1359,
	-2, 0,
	-1, 1545,
	399, 1050,
	550, 1050,
	-2, 397,
	-1, 1562,
	43, 2256,
	-2, 1016,
	-1, 1569,
	1, 1262,
	592, 1262,
	594, 1262,
	596, 1262,
	-2, 1551,
	-1, 1577,
	4, 1287,
	21, 1287,
	22, 1287,
	23, 1287,
	24, 1287,
	25, 1287,
	26, 1287,
	27, 1287,
	29, 1287,
	30, 1287,
	36, 1287,
	41, 1287,
	42, 1287,
	44, 1287,
	45, 1287,
	46, 1287,
	47, 1287,
	48, 1287,
	49, 1287,
	50, 1287,
	51, 1287,
	53, 1287,
	54, 1287,
	55, 1287,
	56, 1287,
	58, 1287,
	59, 1287,
	60, 1287,
	61, 1287,
	62, 1287,
	63, 1287,
	64, 1287,
	68, 1287,
	69, 1287,
	70, 1287,
	71, 1287,
	73, 1287,
	74, 1287,
	75, 1287,
	79, 1287,
	80, 1287,
	81, 1287,
	82, 1287,
	83, 1287,
	84, 1287,
	85, 1287,
	88, 1287,
	89, 1287,
	90, 1287,
	91, 1287,
	92, 1287,
	94, 1287,
	96, 1287,
	97, 1287,
	98, 1287,
	99, 1287,
	100, 1287,
	101, 1287,
	103, 1287,
	104, 1287,
	105, 1287,
	107, 1287,
	108, 1287,
	109, 1287,
	117, 1287,
	118, 1287,
	119, 1287,
	120, 1287,
	121, 1287,
	123, 1287,
	124, 1287,
	125, 1287,
	127, 1287,
	128, 1287,
	129, 1287,
	131, 1287,
	132, 1287,
	133, 1287,
	135, 1287,
	136, 1287,
	137, 1287,
	140, 1287,
	141, 1287,
	142, 1287,
	144, 1287,
	145, 1287,
	147, 1287,
	148, 1287,
	149, 1287,
	151, 1287,
	152, 1287,
	153, 1287,
	154, 1287,
	155, 1287,
	156, 1287,
	157, 1287,
	158, 1287,
	159, 1287,
	160, 1287,
	161, 1287,
	162, 1287,
	163, 1287,
	164, 1287,
	165, 1287,
	166, 1287,
	174, 1287,
	175, 1287,
	176, 1287,
	177, 1287,
	181, 1287,
	183, 1287,
	184, 1287,
	188, 1287,
	189, 1287,
	190, 1287,
	191, 1287,
	192, 1287,
	193, 1287,
	194, 1287,
	195, 1287,
	196, 1287,
	197, 1287,
	198, 1287,
	199, 1287,
	200, 1287,
	201, 1287,
	203, 1287,
	204, 1287,
	206, 1287,
	207, 1287,
	209, 1287,
	210, 1287,
	211, 1287,
	212, 1287,
	213, 1287,
	214, 1287,
	215, 1287,
	216, 1287,
	217, 1287,
	219, 1287,
	220, 1287,
	222, 1287,
	223, 1287,
	224, 1287,
	225, 1287,
	226, 1287,
	231, 1287,
	232, 1287,
	233, 1287,
	234, 1287,
	237, 1287,
	238, 1287,
	239, 1287,
	241, 1287,
	243, 1287,
	244, 1287,
	246, 1287,
	248, 1287,
	249, 1287,
	250, 1287,
	252, 1287,
	256, 1287,
	257, 1287,
	258, 1287,
	259, 1287,
	260, 1287,
	261, 1287,
	263, 1287,
	264, 1287,
	265, 1287,
	267, 1287,
	268, 1287,
	270, 1287,
	271, 1287,
	274, 1287,
	278, 1287,
	279, 1287,
	280, 1287,
	283, 1287,
	284, 1287,
	285, 1287,
	286, 1287,
	288, 1287,
	289, 1287,
	290, 1287,
	291, 1287,
	292, 1287,
	293, 1287,
	294, 1287,
	295, 1287,
	296, 1287,
	297, 1287,
	298, 1287,
	299, 1287,
	300, 1287,
	301, 1287,
	302, 1287,
	303, 1287,
	304, 1287,
	305, 1287,
	306, 1287,
	307, 1287,
	308, 1287,
	309, 1287,
	311, 1287,
	313, 1287,
	314, 1287,
	315, 1287,
	316, 1287,
	317, 1287,
	318, 1287,
	319, 1287,
	320, 1287,
	321, 1287,
	322, 1287,
	323, 1287,
	324, 1287,
	325, 1287,
	327, 1287,
	328, 1287,
	332, 1287,
	333, 1287,
	335, 1287,
	336, 1287,
	337, 1287,
	338, 1287,
	339, 1287,
	342, 1287,
	344, 1287,
	346, 1287,
	347, 1287,
	348, 1287,
	351, 1287,
	352, 1287,
	353, 1287,
	355, 1287,
	357, 1287,
	358, 1287,
	359, 1287,
	360, 1287,
	361, 1287,
	362, 1287,
	363, 1287,
	364, 1287,
	365, 1287,
	366, 1287,
	367, 1287,
	368, 1287,
	369, 1287,
	371, 1287,
	372, 1287,
	373, 1287,
	374, 1287,
	375, 1287,
	376, 1287,
	377, 1287,
	378, 1287,
	379, 1287,
	380, 1287,
	381, 1287,
	382, 1287,
	383, 1287,
	384, 1287,
	385, 1287,
	387, 1287,
	388, 1287,
	390, 1287,
	391, 1287,
	392, 1287,
	393, 1287,
	394, 1287,
	395, 1287,
	396, 1287,
	397, 1287,
	398, 1287,
	399, 1287,
	400, 1287,
	401, 1287,
	403, 1287,
	405, 1287,
	406, 1287,
	407, 1287,
	412, 1287,
	414, 1287,
	415, 1287,
	416, 1287,
	417, 1287,
	418, 1287,
	419, 1287,
	420, 1287,
	421, 1287,
	422, 1287,
	423, 1287,
	425, 1287,
	426, 1287,
	427, 1287,
	429, 1287,
	430, 1287,
	431, 1287,
	432, 1287,
	433, 1287,
	434, 1287,
	435, 1287,
	437, 1287,
	438, 1287,
	439, 1287,
	440, 1287,
	441, 1287,
	442, 1287,
	443, 1287,
	444, 1287,
	445, 1287,
	446, 1287,
	447, 1287,
	448, 1287,
	450, 1287,
	451, 1287,
	452, 1287,
	453, 1287,
	454, 1287,
	455, 1287,
	457, 1287,
	458, 1287,
	459, 1287,
	460, 1287,
	461, 1287,
	462, 1287,
	464, 1287,
	465, 1287,
	466, 1287,
	467, 1287,
	468, 1287,
	469, 1287,
	470, 1287,
	471, 1287,
	473, 1287,
	475, 1287,
	476, 1287,
	477, 1287,
	478, 1287,
	479, 1287,
	480, 1287,
	481, 1287,
	482, 1287,
	483, 1287,
	484, 1287,
	485, 1287,
	486, 1287,
	487, 1287,
	488, 1287,
	489, 1287,
	490, 1287,
	492, 1287,
	493, 1287,
	495, 1287,
	496, 1287,
	498, 1287,
	499, 1287,
	500, 1287,
	501, 1287,
	502, 1287,
	503, 1287,
	504, 1287,
	505, 1287,
	506, 1287,
	508, 1287,
	509, 1287,
	510, 1287,
	511, 1287,
	512, 1287,
	514, 1287,
	516, 1287,
	517, 1287,
	518, 1287,
	519, 1287,
	520, 1287,
	521, 1287,
	523, 1287,
	524, 1287,
	525, 1287,
	526, 1287,
	528, 1287,
	529, 1287,
	532, 1287,
	533, 1287,
	534, 1287,
	535, 1287,
	536, 1287,
	537, 1287,
	538, 1287,
	540, 1287,
	543, 1287,
	544, 1287,
	545, 1287,
	546, 1287,
	547, 1287,
	548, 1287,
	550, 1287,
	551, 1287,
	552, 1287,
	553, 1287,
	555, 1287,
	560, 1287,
	561, 1287,
	562, 1287,
	563, 1287,
	564, 1287,
	565, 1287,
	-2, 0,
	-1, 1600,
	1, 542,
	592, 542,
	594, 542,
	596, 542,
	-2, 1522,
	-1, 1603,
	4, 2709,
	11, 2709,
	12, 2709,
	14, 2709,
	15, 2709,
	16, 2709,
	17, 2709,
	18, 2709,
	19, 2709,
	21, 2709,
	22, 2709,
	23, 2709,
	24, 2709,
	25, 2709,
	26, 2709,
	27, 2709,
	29, 2709,
	30, 2709,
	33, 2709,
	34, 2709,
	36, 2709,
	38, 2709,
	41, 2709,
	42, 2709,
	44, 2709,
	45, 2709,
	46, 2709,
	47, 2709,
	48, 2709,
	49, 2709,
	50, 2709,
	51, 2709,
	53, 2709,
	54, 2709,
	55, 2709,
	56, 2709,
	58, 2709,
	59, 2709,
	60, 2709,
	61, 2709,
	62, 2709,
	63, 2709,
	64, 2709,
	67, 2709,
	68, 2709,
	69, 2709,
	70, 2709,
	71, 2709,
	73, 2709,
	74, 2709,
	75, 2709,
	76, 2709,
	79, 2709,
	80, 2709,
	81, 2709,
	82, 2709,
	83, 2709,
	84, 2709,
	85, 2709,
	86, 2709,
	88, 2709,
	89, 2709,
	90, 2709,
	91, 2709,
	92, 2709,
	94, 2709,
	95, 2709,
	96, 2709,
	97, 2709,
	98, 2709,
	99, 2709,
	100, 2709,
	101, 2709,
	103, 2709,
	104, 2709,
	105, 2709,
	106, 2709,
	107, 2709,
	108, 2709,
	109, 2709,
	117, 2709,
	118, 2709,
	119, 2709,
	120, 2709,
	121, 2709,
	123, 2709,
	124, 2709,
	125, 2709,
	127, 2709,
	128, 2709,
	129, 2709,
	131, 2709,
	132, 2709,
	133, 2709,
	135, 2709,
	136, 2709,
	137, 2709,
	140, 2709,
	141, 2709,
	142, 2709,
	144, 2709,
	145, 2709,
	147, 2709,
	148, 2709,
	149, 2709,
	151, 2709,
	152, 2709,
	153, 2709,
	154, 2709,
	155, 2709,
	156, 2709,
	157, 2709,
	158, 2709,
	159, 2709,
	160, 2709,
	161, 2709,
	162, 2709,
	163, 2709,
	164, 2709,
	165, 2709,
	166, 2709,
	170, 2709,
	171, 2709,
	172, 2709,
	173, 2709,
	174, 2709,
	175, 2709,
	176, 2709,
	177, 2709,
	180, 2709,
	181, 2709,
	183, 2709,
	184, 2709,
	187, 2709,
	188, 2709,
	189, 2709,
	190, 2709,
	191, 2709,
	192, 2709,
	193, 2709,
	194, 2709,
	195, 2709,
	196, 2709,
	197, 2709,
	198, 2709,
	199, 2709,
	200, 2709,
	201, 2709,
	203, 2709,
	204, 2709,
	206, 2709,
	207, 2709,
	209, 2709,
	210, 2709,
	211, 2709,
	212, 2709,
	213, 2709,
	214, 2709,
	215, 2709,
	216, 2709,
	217, 2709,
	218, 2709,
	219, 2709,
	220, 2709,
	221, 2709,
	222, 2709,
	223, 2709,
	224, 2709,
	225, 2709,
	226, 2709,
	228, 2709,
	229, 2709,
	231, 2709,
	232, 2709,
	233, 2709,
	234, 2709,
	236, 2709,
	237, 2709,
	238, 2709,
	239, 2709,
	241, 2709,
	243, 2709,
	244, 2709,
	245, 2709,
	246, 2709,
	247, 2709,
	248, 2709,
	249, 2709,
	250, 2709,
	251, 2709,
	252, 2709,
	254, 2709,
	255, 2709,
	256, 2709,
	257, 2709,
	258, 2709,
	259, 2709,
	260, 2709,
	261, 2709,
	263, 2709,
	264, 2709,
	265, 2709,
	267, 2709,
	268, 2709,
	269, 2709,
	270, 2709,
	271, 2709,
	272, 2709,
	274, 2709,
	278, 2709,
	279, 2709,
	280, 2709,
	283, 2709,
	284, 2709,
	285, 2709,
	286, 2709,
	287, 2709,
	288, 2709,
	289, 2709,
	290, 2709,
	291, 2709,
	292, 2709,
	293, 2709,
	294, 2709,
	295, 2709,
	296, 2709,
	297, 2709,
	298, 2709,
	299, 2709,
	300, 2709,
	301, 2709,
	302, 2709,
	303, 2709,
	304, 2709,
	305, 2709,
	306, 2709,
	307, 2709,
	308, 2709,
	309, 2709,
	311, 2709,
	312, 2709,
	313, 2709,
	314, 2709,
	315, 2709,
	316, 2709,
	317, 2709,
	318, 2709,
	319, 2709,
	320, 2709,
	321, 2709,
	322, 2709,
	323, 2709,
	324, 2709,
	325, 2709,
	327, 2709,
	328, 2709,
	331, 2709,
	332, 2709,
	333, 2709,
	335, 2709,
	336, 2709,
	337, 2709,
	338, 2709,
	339, 2709,
	342, 2709,
	346, 2709,
	347, 2709,
	348, 2709,
	349, 2709,
	351, 2709,
	352, 2709,
	353, 2709,
	355, 2709,
	357, 2709,
	358, 2709,
	359, 2709,
	360, 2709,
	361, 2709,
	362, 2709,
	363, 2709,
	364, 2709,
	365, 2709,
	366, 2709,
	367, 2709,
	368, 2709,
	369, 2709,
	371, 2709,
	372, 2709,
	373, 2709,
	374, 2709,
	375, 2709,
	376, 2709,
	377, 2709,
	378, 2709,
	379, 2709,
	380, 2709,
	381, 2709,
	382, 2709,
	383, 2709,
	384, 2709,
	385, 2709,
	387, 2709,
	388, 2709,
	390, 2709,
	391, 2709,
	392, 2709,
	393, 2709,
	394, 2709,
	395, 2709,
	396, 2709,
	397, 2709,
	398, 2709,
	399, 2709,
	400, 2709,
	401, 2709,
	403, 2709,
	405, 2709,
	406, 2709,
	407, 2709,
	412, 2709,
	413, 2709,
	414, 2709,
	415, 2709,
	416, 2709,
	417, 2709,
	418, 2709,
	419, 2709,
	420, 2709,
	421, 2709,
	422, 2709,
	423, 2709,
	425, 2709,
	426, 2709,
	427, 2709,
	428, 2709,
	429, 2709,
	430, 2709,
	431, 2709,
	432, 2709,
	433, 2709,
	434, 2709,
	435, 2709,
	436, 2709,
	437, 2709,
	438, 2709,
	439, 2709,
	440, 2709,
	441, 2709,
	442, 2709,
	443, 2709,
	444, 2709,
	445, 2709,
	446, 2709,
	447, 2709,
	448, 2709,
	450, 2709,
	451, 2709,
	452, 2709,
	453, 2709,
	454, 2709,
	455, 2709,
	457, 2709,
	458, 2709,
	459, 2709,
	460, 2709,
	461, 2709,
	462, 2709,
	463, 2709,
	464, 2709,
	465, 2709,
	466, 2709,
	467, 2709,
	468, 2709,
	469, 2709,
	470, 2709,
	471, 2709,
	473, 2709,
	475, 2709,
	476, 2709,
	477, 2709,
	478, 2709,
	479, 2709,
	480, 2709,
	481, 2709,
	482, 2709,
	483, 2709,
	484, 2709,
	485, 2709,
	486, 2709,
	487, 2709,
	488, 2709,
	489, 2709,
	490, 2709,
	492, 2709,
	493, 2709,
	494, 2709,
	495, 2709,
	496, 2709,
	498, 2709,
	499, 2709,
	500, 2709,
	501, 2709,
	502, 2709,
	503, 2709,
	504, 2709,
	505, 2709,
	506, 2709,
	508, 2709,
	509, 2709,
	510, 2709,
	511, 2709,
	512, 2709,
	514, 2709,
	516, 2709,
	517, 2709,
	518, 2709,
	519, 2709,
	520, 2709,
	521, 2709,
	523, 2709,
	524, 2709,
	525, 2709,
	526, 2709,
	528, 2709,
	529, 2709,
	532, 2709,
	533, 2709,
	534, 2709,
	535, 2709,
	536, 2709,
	537, 2709,
	538, 2709,
	540, 2709,
	543, 2709,
	544, 2709,
	545, 2709,
	546, 2709,
	547, 2709,
	548, 2709,
	550, 2709,
	551, 2709,
	552, 2709,
	553, 2709,
	555, 2709,
	560, 2709,
	561, 2709,
	562, 2709,
	563, 2709,
	564, 2709,
	565, 2709,
	566, 2709,
	568, 2709,
	574, 2709,
	575, 2709,
	576, 2709,
	577, 2709,
	578, 2709,
	579, 2709,
	581, 2709,
	582, 2709,
	583, 2709,
	584, 2709,
	585, 2709,
	586, 2709,
	587, 2709,
	588, 2709,
	589, 2709,
	591, 2709,
	594, 2709,
	595, 2709,
	597, 2709,
	598, 2709,
	-2, 0,
	-1, 1608,
	186, 2591,
	513, 2591,
	576, 2591,
	595, 2591,
	-2, 0,
	-1, 1657,
	392, 864,
	455, 864,
	496, 864,
	518, 864,
	-2, 0,
	-1, 1668,
	1, 1359,
	592, 1359,
	594, 1359,
	596, 1359,
	-2, 0,
	-1, 1685,
	1, 859,
	592, 859,
	594, 859,
	596, 859,
	-2, 0,
	-1, 1686,
	1, 902,
	592, 902,
	594, 902,
	596, 902,
	-2, 0,
	-1, 1687,
	1, 910,
	592, 910,
	594, 910,
	596, 910,
	-2, 0,
	-1, 1690,
	1, 868,
	592, 868,
	594, 868,
	596, 868,
	-2, 0,
	-1, 1692,
	1, 874,
	592, 874,
	594, 874,
	596, 874,
	-2, 0,
	-1, 1695,
	1, 870,
	592, 870,
	594, 870,
	596, 870,
	-2, 0,
	-1, 1700,
	1, 884,
	592, 884,
	594, 884,
	596, 884,
	-2, 0,
	-1, 1731,
	1, 2574,
	592, 2574,
	594, 2574,
	595, 2574,
	596, 2574,
	-2, 0,
	-1, 1735,
	1, 955,
	592, 955,
	594, 955,
	596, 955,
	-2, 0,
	-1, 1750,
	1, 1409,
	596, 1409,
	-2, 1414,
	-1, 1753,
	169, 1565,
	182, 1565,
	273, 1565,
	340, 1565,
	-2, 1503,
	-1, 1853,
	150, 1524,
	169, 1524,
	182, 1524,
	240, 1524,
	273, 1524,
	340, 1524,
	350, 1524,
	530, 1524,
	-2, 1971,
	-1, 1913,
	594, 2144,
	-2, 0,
	-1, 1948,
	150, 1524,
	169, 1524,
	182, 1524,
	240, 1524,
	273, 1524,
	340, 1524,
	350, 1524,
	530, 1524,
	-2, 1653,
	-1, 1983,
	513, 2588,
	595, 2588,
	598, 2588,
	-2, 0,
	-1, 2000,
	593, 1794,
	-2, 1782,
	-1, 2032,
	186, 2588,
	595, 2588,
	598, 2588,
	-2, 0,
	-1, 2080,
	1, 678,
	596, 678,
	-2, 1414,
	-1, 2213,
	221, 256,
	-2, 2292,
	-1, 2214,
	221, 257,
	-2, 305,
	-1, 2318,
	1, 861,
	592, 861,
	594, 861,
	596, 861,
	-2, 0,
	-1, 2319,
	1, 904,
	592, 904,
	594, 904,
	596, 904,
	-2, 0,
	-1, 2320,
	1, 912,
	592, 912,
	594, 912,
	596, 912,
	-2, 0,
	-1, 2321,
	1, 957,
	592, 957,
	594, 957,
	596, 957,
	-2, 0,
	-1, 2361,
	1, 886,
	592, 886,
	594, 886,
	596, 886,
	-2, 0,
	-1, 2379,
	1, 940,
	592, 940,
	594, 940,
	596, 940,
	-2, 0,
	-1, 2424,
	434, 1592,
	435, 1592,
	-2, 1827,
	-1, 2455,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1847,
	-1, 2456,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1848,
	-1, 2457,
	95, 0,
	254, 0,
	255, 0,
	578, 0,
	579, 0,
	-2, 1849,
	-1, 2458,
	95, 0,
	254, 0,
	255, 0,
	578, 0,
	579, 0,
	-2, 1850,
	-1, 2459,
	95, 0,
	254, 0,
	255, 0,
	578, 0,
	579, 0,
	-2, 1851,
	-1, 2460,
	95, 0,
	254, 0,
	255, 0,
	578, 0,
	579, 0,
	-2, 1852,
	-1, 2461,
	95, 0,
	254, 0,
	255, 0,
	578, 0,
	579, 0,
	-2, 1853,
	-1, 2462,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1854,
	-1, 2474,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1866,
	-1, 2475,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1867,
	-1, 2476,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1868,
	-1, 2480,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1875,
	-1, 2486,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1879,
	-1, 2488,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1887,
	-1, 2489,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1888,
	-1, 2490,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1889,
	-1, 2491,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1890,
	-1, 2663,
	5, 2296,
	186, 2155,
	593, 2293,
	-2, 2284,
	-1, 2664,
	186, 2156,
	-2, 2660,
	-1, 2665,
	186, 2157,
	-2, 2481,
	-1, 2666,
	186, 2158,
	-2, 2366,
	-1, 2667,
	186, 2159,
	-2, 2421,
	-1, 2668,
	186, 2160,
	-2, 2466,
	-1, 2669,
	186, 2161,
	-2, 2586,
	-1, 2670,
	186, 2162,
	-2, 1954,
	-1, 2741,
	1, 1654,
	2, 1654,
	106, 1654,
	150, 1654,
	169, 1654,
	182, 1654,
	187, 1654,
	205, 1654,
	208, 1654,
	236, 1654,
	240, 1654,
	251, 1654,
	269, 1654,
	273, 1654,
	312, 1654,
	340, 1654,
	344, 1654,
	350, 1654,
	424, 1654,
	428, 1654,
	530, 1654,
	541, 1654,
	557, 1654,
	558, 1654,
	559, 1654,
	569, 1654,
	592, 1654,
	594, 1654,
	596, 1654,
	598, 1654,
	-2, 1653,
	-1, 2754,
	593, 2265,
	-2, 2279,
	-1, 2756,
	1, 322,
	557, 322,
	-2, 1551,
	-1, 2784,
	593, 1793,
	-2, 1783,
	-1, 2969,
	1, 1262,
	419, 1226,
	457, 1226,
	571, 1226,
	592, 1262,
	594, 1262,
	596, 1262,
	-2, 1551,
	-1, 3147,
	345, 1595,
	-2, 2699,
	-1, 3148,
	345, 1596,
	-2, 2571,
	-1, 3152,
	434, 2221,
	435, 2221,
	-2, 1952,
	-1, 3153,
	434, 2225,
	435, 2225,
	-2, 1953,
	-1, 3154,
	434, 2222,
	435, 2222,
	-2, 1952,
	-1, 3155,
	434, 2226,
	435, 2226,
	-2, 1953,
	-1, 3168,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1877,
	-1, 3169,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1881,
	-1, 3175,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1883,
	-1, 3398,
	1, 675,
	592, 675,
	594, 675,
	596, 675,
	-2, 1414,
	-1, 3568,
	43, 2256,
	-2, 1017,
	-1, 3573,
	1, 1262,
	592, 1262,
	594, 1262,
	596, 1262,
	-2, 1551,
	-1, 3680,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1885,
	-1, 3687,
	245, 0,
	247, 0,
	331, 0,
	-2, 1904,
	-1, 3755,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1933,
	-1, 3756,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1934,
	-1, 3757,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1935,
	-1, 3761,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1939,
	-1, 3762,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1940,
	-1, 3763,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1941,
	-1, 3810,
	593, 2266,
	-2, 2280,
	-1, 3983,
	595, 2817,
	-2, 1477,
	-1, 4041,
	245, 0,
	247, 0,
	331, 0,
	-2, 1905,
	-1, 4044,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1908,
	-1, 4045,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1910,
	-1, 4139,
	595, 2281,
	-2, 1297,
	-1, 4290,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1909,
	-1, 4291,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1911,
	-1, 4302,
	245, 0,
	-2, 1944,
	-1, 4483,
	245, 0,
	-2, 1945,
	-1, 4675,
	50, 0,
	218, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 2663,
}

const sqlPrivate = 57344

const sqlLast = 129049

var sqlAct = [...]int{
	270, 4790, 3557, 3040, 4869, 3306, 4668, 4777, 4731, 4347,
	4667, 3053, 4656, 4674, 4512, 4685, 3556, 4547, 4806, 4568,
	4520, 2210, 2128, 4543, 4405, 4621, 4687, 4624, 4604, 1236,
	4643, 4024, 4686, 2049, 4333, 4744, 2891, 4412, 3720, 4673,
	4241, 4487, 4436, 4135, 4390, 2913, 4207, 4182, 3672, 1247,
	4246, 4311, 4352, 4279, 2434, 1316, 3975, 3967, 2294, 1320,
	4228, 698, 4230, 3420, 3590, 3903, 1067, 1309, 4421, 4221,
	3161, 4136, 4120, 2847, 3482, 808, 4450, 2503, 3584, 1762,
	2062, 2696, 4251, 3930, 3948, 3932, 2136, 3552, 1624, 3062,
	3542, 769, 2285, 2442, 3423, 4307, 2435, 1380, 3075, 2258,
	3629, 808, 1987, 3631, 3029, 1954, 1058, 3010, 2926, 3064,
	3813, 1472, 2999, 2292, 3350, 3535, 709, 3329, 3534, 4023,
	3321, 3289, 1311, 3072, 3041, 885, 3312, 3024, 3055, 3061,
	4080, 3310, 2199, 4778, 881, 4, 3026, 1923, 2197, 2439,
	2940, 2976, 2147, 2849, 3442, 2734, 3781, 3288, 1066, 178,
	1899, 4488, 1831, 2733, 3145, 2581, 2516, 1479, 1861, 803,
	3417, 1314, 2736, 2583, 876, 1564, 2198, 1227, 108, 3003,
	949, 3071, 2945, 764, 2193, 2174, 1362, 3011, 2181, 1509,
	2116, 2693, 264, 1117, 2060, 1750, 1288, 2572, 1924, 2500,
	1113, 1122, 3357, 2714, 2106, 263, 2120, 2404, 1988, 1665,
	2423, 2406, 1622, 3409, 1943, 3554, 2767, 1601, 805, 3034,
	1567, 2245, 685, 2890, 2872, 742, 707, 4569, 809, 810,
	4791, 3065, 1124, 3924, 1940, 1349, 2766, 2835, 2575, 2723,
	1230, 2704, 1894, 1933, 1209, 2659, 1845, 1244, 2553, 2625,
	187, 2405, 178, 1763, 1764, 1700, 1167, 1685, 1599, 1299,
	750, 2207, 2407, 762, 2244, 1226, 188, 814, 2271, 1504,
	2135, 4732, 2428, 1592, 2035, 2038, 1098, 702, 1232, 1207,
	817, 725, 44, 43, 41, 32, 699, 1769, 710, 857,
	30, 28, 3198, 814, 1749, 1515, 970, 3192, 3795, 798,
	3796, 4882, 3308, 4872, 4326, 2713, 817, 3609, 2051, 4712,
	2051, 4856, 1062, 858, 3600, 2713, 2051, 2051, 2051, 900,
	1631, 3382, 1691, 2051, 4855, 2051, 4845, 4826, 2713, 4824,
	2219, 4351, 4101, 4351, 4763, 4720, 1617, 4709, 2219, 4721,
	4323, 2713, 4707, 3599, 1302, 4704, 2713, 4701, 2219, 4705,
	4671, 4702, 4670, 4669, 2219, 4664, 2219, 2072, 4663, 2072,
	4654, 4652, 2072, 1062, 4351, 4351, 4649, 1052, 1063, 3609,
	4424, 2219, 3380, 1224, 4619, 1777, 1778, 4593, 4351, 4586,
	4585, 2775, 4580, 2713, 2713, 4579, 4351, 4573, 4539, 4351,
	4485, 2219, 4198, 4467, 2775, 4464, 4461, 4010, 159, 2219,
	4351, 1210, 1210, 4414, 1358, 1780, 73, 4415, 46, 45,
	4368, 4367, 4358, 4357, 2219, 2219, 2219, 4351, 4350, 3365,
	4318, 2219, 4351, 74, 2219, 2069, 154, 4292, 4270, 1043,
	4259, 2775, 2072, 2293, 3609, 3207, 1358, 1242, 4177, 78,
	1779, 3208, 2713, 4160, 4043, 1042, 2706, 2713, 2775, 3991,
	67, 3985, 3946, 3626, 3805, 3626, 3947, 48, 3806, 156,
	2796, 1516, 3803, 3788, 2037, 3785, 3804, 2713, 3704, 3700,
	3625, 3616, 2219, 2713, 3626, 3617, 3305, 47, 3300, 87,
	2713, 1057, 2713, 3299, 3250, 3248, 3240, 2713, 3251, 3249,
	3241, 3238, 3209, 2771, 3160, 2713, 2713, 1777, 1778, 3079,
	1517, 1259, 1517, 2072, 2069, 50, 68, 3051, 3050, 1211,
	2713, 2281, 2281, 2819, 51, 4594, 1517, 2713, 2774, 57,
	1808, 2764, 2775, 157, 2758, 2713, 234, 1780, 2219, 1777,
	1778, 49, 2219, 107, 1266, 4489, 3259, 3260, 93, 104,
	4480, 4468, 2712, 2280, 1785, 2795, 2713, 2281, 1213, 4424,
	1214, 2072, 1808, 1833, 3785, 2705, 4239, 4198, 2069, 1780,
	2713, 1260, 1779, 4161, 4010, 2578, 3617, 2916, 2834, 2140,
	2085, 1115, 1799, 2050, 236, 2066, 3005, 2218, 2936, 52,
	2832, 1796, 1919, 1503, 3886, 1833, 1260, 3675, 3650, 1941,
	2186, 3601, 1667, 2750, 1779, 2749, 2748, 94, 2747, 2746,
	2529, 2530, 2531, 2548, 2549, 2550, 1215, 234, 1212, 4096,
	3602, 3197, 1051, 1050, 1049, 1048, 1047, 1046, 1045, 1041,
	2551, 1040, 1039, 235, 1038, 1037, 1036, 1035, 3119, 262,
	1034, 1033, 1032, 1031, 1030, 4037, 228, 1029, 1777, 1778,
	1028, 1517, 1027, 1026, 1025, 229, 1024, 1006, 947, 946,
	945, 944, 943, 1833, 2579, 236, 1802, 1803, 1804, 1805,
	942, 1808, 941, 940, 939, 2052, 1785, 2052, 1780, 938,
	189, 937, 2541, 2052, 2052, 2052, 936, 935, 934, 933,
	2052, 2537, 2052, 932, 931, 930, 929, 928, 927, 926,
	925, 924, 1508, 923, 1833, 922, 921, 920, 1785, 919,
	918, 917, 916, 1779, 235, 3265, 915, 914, 913, 903,
	902, 898, 897, 891, 1807, 1809, 2069, 890, 875, 874,
	831, 830, 829, 828, 1830, 820, 3599, 819, 818, 784,
	775, 4692, 774, 1260, 773, 756, 2580, 258, 2577, 257,
	1794, 1795, 256, 97, 255, 254, 1807, 1809, 1777, 1778,
	1529, 189, 253, 1325, 1122, 252, 2542, 2543, 2544, 2545,
	251, 53, 250, 249, 248, 247, 2536, 234, 246, 234,
	245, 244, 243, 1800, 242, 56, 241, 240, 1780, 239,
	59, 1122, 1122, 234, 2069, 238, 237, 4253, 4055, 69,
	3827, 3799, 3627, 3353, 3220, 58, 186, 100, 1383, 1120,
	103, 3203, 1383, 3194, 54, 1800, 3102, 1785, 158, 1325,
	2986, 1508, 3275, 1779, 2779, 236, 55, 236, 2755, 3019,
	2740, 3303, 2608, 1944, 2594, 2592, 234, 2114, 2288, 2071,
	3037, 236, 1353, 1122, 62, 1122, 1967, 1122, 1872, 149,
	2546, 2547, 2219, 1325, 2806, 93, 1830, 1366, 1367, 1776,
	2050, 2069, 2066, 1511, 155, 1807, 1809, 2795, 2705, 2399,
	1369, 3304, 1863, 1246, 235, 1902, 235, 4672, 4651, 1325,
	73, 1487, 1901, 2539, 236, 1902, 1693, 228, 1830, 228,
	235, 4554, 1901, 1482, 4477, 1830, 229, 74, 229, 1325,
	2582, 3259, 3260, 228, 4471, 4469, 1325, 1905, 3951, 1806,
	153, 4345, 229, 78, 1122, 4306, 1122, 1900, 234, 4492,
	1325, 189, 2287, 189, 1800, 190, 1122, 1785, 1122, 4260,
	4238, 4107, 1801, 235, 4078, 4077, 4071, 189, 1507, 1523,
	4070, 4069, 4062, 1293, 1296, 4061, 228, 4059, 1573, 1576,
	4054, 2354, 1870, 87, 4051, 229, 1260, 4050, 1781, 1782,
	1783, 1784, 1786, 1787, 1801, 3945, 236, 1306, 1863, 1347,
	3831, 3276, 1528, 3830, 1376, 1325, 1469, 1474, 3829, 1492,
	189, 3259, 3260, 3, 3277, 3278, 3279, 3809, 1777, 1778,
	1832, 3776, 3775, 883, 3774, 1122, 3696, 1830, 1122, 3691,
	3348, 3296, 4255, 4039, 3287, 49, 3258, 107, 3255, 3254,
	3252, 1808, 93, 104, 814, 235, 2576, 3247, 1780, 3246,
	3259, 3260, 1832, 3245, 3242, 3239, 3219, 817, 228, 1864,
	3202, 1862, 2540, 3195, 3193, 1342, 3052, 229, 1562, 3259,
	3260, 2741, 2565, 1635, 1833, 2788, 1239, 1776, 178, 178,
	1506, 1505, 1223, 1779, 1865, 1636, 3274, 2226, 1775, 4876,
	4816, 4815, 189, 2261, 1604, 1606, 2224, 1063, 3952, 4779,
	3265, 94, 4730, 1801, 1797, 1793, 3021, 1790, 1788, 1789,
	1781, 1782, 1783, 1784, 1786, 1787, 3884, 3259, 3260, 1353,
	1832, 4728, 1353, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1248, 3722, 4611, 4546, 4530, 4527, 4526, 4525, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 3269, 3261,
	3262, 3263, 3264, 3266, 3267, 4506, 1122, 2512, 2777, 4491,
	4490, 1832, 1122, 4465, 1621, 3301, 4449, 4448, 2506, 4434,
	4431, 1641, 4430, 234, 4425, 1477, 4364, 4341, 4304, 1595,
	3265, 1522, 4287, 4286, 4267, 1333, 149, 1785, 4266, 3952,
	4224, 4199, 1119, 234, 4095, 4076, 4011, 4005, 4002, 1754,
	2526, 2527, 2528, 2552, 2538, 2532, 3872, 2534, 2535, 2533,
	2520, 2521, 2522, 2523, 2524, 2525, 3871, 3855, 3854, 3265,
	3852, 236, 3791, 3779, 1065, 1748, 3686, 1850, 3628, 1709,
	1616, 3610, 3576, 3499, 3455, 1807, 1809, 234, 3265, 3422,
	3374, 236, 1630, 3372, 3224, 3281, 3223, 97, 1579, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 3218, 3184, 1852,
	3605, 2998, 1908, 1907, 1906, 39, 1903, 1122, 1122, 1122,
	235, 1895, 1893, 1122, 1755, 2786, 2785, 2752, 2745, 1096,
	1244, 4254, 1244, 228, 2711, 236, 3265, 3275, 2590, 1849,
	235, 1966, 229, 1658, 1800, 1922, 1917, 1383, 1916, 1915,
	186, 100, 1914, 228, 103, 3020, 1122, 1913, 1694, 808,
	1921, 1912, 229, 3259, 3260, 2005, 808, 189, 1911, 1325,
	1910, 1909, 1890, 1889, 1063, 1888, 3275, 1887, 1886, 1885,
	234, 1884, 1777, 1778, 235, 1883, 1882, 3036, 884, 1881,
	1880, 1879, 1878, 149, 1877, 3275, 1876, 228, 1751, 1865,
	1759, 1851, 1848, 1843, 1930, 1593, 229, 1043, 1341, 2289,
	1830, 1758, 1780, 1783, 1784, 1786, 1787, 1830, 1264, 1255,
	4493, 4227, 1904, 1042, 4103, 1753, 4047, 2056, 236, 3826,
	2058, 189, 3802, 1975, 3794, 1325, 2063, 1978, 1772, 1773,
	2065, 3206, 1122, 3275, 2743, 2068, 1325, 1779, 4324, 1830,
	4105, 3259, 3260, 3825, 153, 1927, 1928, 1598, 1951, 1864,
	1310, 3370, 1846, 1122, 2105, 1962, 234, 1365, 1830, 190,
	1383, 1210, 4163, 2105, 4813, 4805, 2914, 235, 234, 1238,
	4528, 2105, 178, 2130, 4426, 4417, 3276, 3345, 4422, 1358,
	228, 4416, 4258, 1801, 4201, 1896, 1897, 4200, 2103, 229,
	1063, 4162, 4098, 1353, 2607, 4014, 2593, 2591, 4013, 1475,
	4012, 3797, 1486, 1310, 236, 3612, 1830, 3611, 1944, 3673,
	1242, 1746, 1242, 2078, 189, 3276, 236, 1902, 1970, 2112,
	1364, 2077, 3265, 2895, 1901, 1973, 1359, 1952, 3898, 1984,
	1363, 814, 1974, 1358, 3276, 3244, 2033, 3243, 814, 4472,
	4470, 1832, 1942, 3166, 817, 2943, 3263, 3264, 3266, 3267,
	2877, 817, 1949, 235, 1361, 2091, 1240, 1979, 1657, 3869,
	234, 1022, 3424, 1874, 2028, 235, 228, 1885, 1920, 2054,
	1310, 1310, 4344, 2140, 3955, 229, 1885, 1999, 228, 2183,
	1710, 3458, 3276, 2941, 1358, 3491, 4742, 229, 1946, 3559,
	3621, 3558, 1325, 1325, 2286, 1666, 1961, 1960, 1959, 1957,
	189, 2002, 1383, 4308, 1956, 1955, 1023, 4413, 236, 4716,
	1871, 4697, 189, 2200, 3271, 3272, 3273, 4684, 1985, 3543,
	2080, 3270, 3268, 3269, 3261, 3262, 3263, 3264, 3266, 3267,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 3076, 3212, 1667,
	2201, 3959, 3942, 3900, 1355, 2310, 3895, 3877, 3647, 3396,
	3308, 234, 4693, 3724, 2168, 2573, 2173, 235, 2784, 2178,
	3270, 3268, 3269, 3261, 3262, 3263, 3264, 3266, 3267, 2578,
	228, 3550, 234, 1918, 1971, 1898, 2076, 2255, 1572, 229,
	2211, 2216, 3261, 3262, 3263, 3264, 3266, 3267, 2262, 2074,
	1499, 1336, 1292, 1597, 4706, 4703, 1325, 2942, 1325, 236,
	1325, 2083, 1830, 4360, 189, 2933, 3595, 2922, 3847, 4521,
	2930, 234, 4242, 1222, 2108, 4148, 1325, 1325, 2098, 4694,
	236, 4618, 4146, 4337, 2874, 1360, 2928, 1325, 3268, 3269,
	3261, 3262, 3263, 3264, 3266, 3267, 4503, 3427, 1598, 1325,
	2146, 1325, 1325, 1325, 3864, 2978, 3059, 3033, 235, 3526,
	4761, 4760, 2778, 3667, 2203, 2204, 2414, 2205, 2579, 236,
	3400, 228, 4386, 1002, 1708, 808, 3913, 2921, 2251, 235,
	229, 2296, 4150, 2092, 1645, 1547, 814, 1539, 2820, 1020,
	1018, 4795, 228, 1356, 2873, 2167, 2367, 1122, 2365, 817,
	1016, 229, 1357, 1014, 748, 189, 2097, 2096, 2256, 1501,
	2105, 2107, 2268, 4871, 1011, 4534, 4379, 4370, 235, 4191,
	4190, 3911, 1506, 1505, 3910, 2412, 189, 3902, 3892, 3891,
	2838, 228, 1122, 3889, 3888, 3876, 2838, 3842, 2291, 2166,
	229, 3841, 2309, 2177, 3912, 2836, 2314, 3532, 2081, 3531,
	2580, 2836, 2577, 3364, 3217, 3216, 3215, 2276, 3214, 3170,
	2939, 3030, 2938, 2217, 2935, 189, 1122, 1365, 1122, 2924,
	2912, 2911, 1548, 1707, 1063, 1122, 1063, 3371, 2005, 2005,
	1383, 2398, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 2237, 1122,
	2278, 1122, 1122, 1122, 1122, 2236, 1993, 2265, 2100, 2297,
	1364, 3424, 748, 4361, 2137, 4145, 3261, 3262, 3263, 3264,
	3266, 3267, 1595, 2416, 2273, 1348, 2273, 1122, 2403, 2274,
	2270, 1122, 1122, 4338, 2282, 3489, 2283, 814, 2905, 1122,
	1787, 2201, 1342, 1122, 1643, 1122, 1122, 1365, 2133, 3402,
	817, 2413, 1486, 1383, 1706, 1358, 1359, 870, 2414, 1122,
	1122, 1122, 1122, 2339, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 2301, 2286, 1597, 3457, 4796, 2138, 2139, 2904,
	4395, 2903, 2882, 2881, 2582, 2875, 2318, 1689, 1689, 2842,
	1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1486,
	2329, 2765, 2875, 1122, 2899, 2487, 1061, 2134, 747, 3267,
	1364, 1752, 2554, 2555, 2621, 1244, 2620, 2412, 2444, 782,
	2892, 2893, 1383, 2102, 2792, 2411, 2554, 2570, 2361, 2892,
	2893, 1244, 1585, 2379, 1584, 4800, 4164, 2892, 2893, 1659,
	1332, 2573, 2427, 2235, 1583, 4113, 1582, 1122, 1383, 2391,
	2319, 1686, 2616, 1359, 2302, 2769, 2440, 2441, 4285, 1962,
	1502, 2101, 871, 2326, 1745, 3125, 2879, 1543, 4132, 2851,
	1008, 2662, 2662, 2676, 1355, 2554, 2402, 1278, 2697, 2699,
	1999, 1999, 2518, 2400, 2703, 2408, 2415, 2401, 2378, 2388,
	1043, 1688, 1688, 1043, 1043, 3490, 1060, 1063, 2410, 1239,
	2576, 1239, 4128, 2569, 2002, 2002, 2431, 1063, 4112, 2432,
	2433, 1063, 3648, 2320, 1687, 2396, 2306, 1744, 749, 1514,
	1556, 1521, 2827, 1527, 2171, 2502, 1638, 1667, 2753, 780,
	2728, 4801, 2502, 3259, 3260, 1251, 747, 4514, 3082, 2618,
	4147, 2720, 1667, 4760, 2619, 4144, 1561, 2622, 3850, 2623,
	2624, 3181, 2757, 1325, 1325, 1360, 4129, 1951, 1723, 2390,
	1719, 2514, 1210, 2413, 2865, 2371, 2932, 3158, 2801, 3143,
	3861, 1355, 2510, 2327, 2805, 3128, 1655, 1249, 4828, 2508,
	3179, 2864, 2854, 2567, 2768, 2275, 2742, 2323, 2816, 821,
	1615, 3656, 1620, 4690, 1757, 1383, 3399, 2823, 2931, 1063,
	3655, 2772, 1629, 2929, 1634, 1242, 1062, 2719, 3274, 2815,
	2317, 1705, 1340, 1356, 2809, 178, 2825, 3116, 1568, 2927,
	1253, 1242, 1357, 1353, 4396, 2727, 2671, 2732, 2658, 2005,
	2738, 2739, 2688, 2791, 2701, 2780, 4394, 2411, 2582, 2709,
	2710, 4803, 4392, 2484, 1639, 3873, 749, 2725, 2726, 2721,
	1904, 2837, 1360, 2826, 3713, 4189, 2817, 3890, 4516, 2121,
	3887, 1949, 4809, 1702, 2122, 3834, 2254, 1383, 1692, 1566,
	2397, 3821, 911, 2812, 2824, 3538, 3530, 3259, 3260, 3487,
	3277, 3278, 3279, 1325, 1012, 1012, 3921, 1252, 3859, 4391,
	2366, 2843, 2364, 2148, 2934, 1012, 2841, 2902, 1013, 3157,
	3710, 2880, 3265, 1644, 1122, 1122, 4774, 1122, 3127, 1012,
	1356, 2811, 2787, 2841, 1777, 1778, 2152, 4393, 4782, 1357,
	2800, 4781, 3176, 3474, 2803, 4284, 2804, 1896, 1897, 808,
	2763, 1325, 2840, 2878, 2818, 4831, 2790, 1808, 2794, 3124,
	4749, 3922, 1322, 781, 1780, 3466, 2925, 3177, 4142, 4029,
	2900, 3182, 3274, 4028, 2810, 868, 2387, 867, 2973, 4124,
	873, 872, 1325, 2140, 4125, 3539, 2109, 2110, 4691, 2884,
	1833, 3150, 3151, 2149, 1325, 3592, 1325, 2123, 3475, 1779,
	2868, 697, 3711, 2853, 3920, 3122, 1059, 3481, 3017, 4859,
	2821, 1325, 783, 2883, 2127, 1358, 779, 2223, 2222, 1545,
	3467, 3411, 2051, 2160, 1720, 2981, 2901, 692, 2582, 3275,
	2983, 2482, 2187, 2974, 2485, 3593, 4127, 2194, 4590, 1993,
	1993, 3473, 4600, 2846, 2970, 2971, 2389, 2885, 2377, 3044,
	2856, 2859, 4130, 4329, 4802, 3013, 822, 823, 2184, 1122,
	2325, 3536, 3126, 3465, 3073, 1542, 3265, 2894, 2896, 2897,
	2898, 1999, 1238, 2196, 1238, 1277, 2972, 2143, 2161, 2915,
	3874, 2907, 3077, 2910, 2906, 2481, 2909, 2124, 2129, 904,
	4689, 4522, 2920, 3083, 3084, 2002, 4541, 2839, 1568, 2808,
	2153, 814, 1830, 1785, 3090, 3091, 3092, 3439, 3100, 3502,
	2498, 3080, 1358, 3058, 817, 3592, 3085, 3401, 3086, 1717,
	1122, 2159, 892, 3002, 2979, 4143, 1122, 1122, 2195, 178,
	746, 814, 2144, 4807, 4658, 3443, 4659, 1506, 2984, 2496,
	3046, 1668, 1500, 4515, 817, 3048, 1262, 2996, 2852, 1958,
	2188, 1807, 1809, 2172, 4216, 3178, 2582, 3007, 3006, 1240,
	3105, 1240, 4748, 1721, 3438, 3180, 2154, 2155, 1891, 3130,
	2125, 3132, 3368, 3275, 1250, 2142, 4771, 2908, 3276, 1080,
	2908, 4126, 1122, 1122, 3039, 1009, 2184, 3445, 1122, 3049,
	2150, 715, 2131, 4641, 2838, 3060, 3172, 2172, 3078, 825,
	824, 1122, 1122, 2501, 3047, 4723, 4281, 1122, 1122, 2857,
	1800, 4025, 4297, 1122, 3103, 4724, 3104, 3028, 2131, 4629,
	4133, 4174, 2564, 3860, 3097, 4588, 1842, 3412, 3222, 2737,
	2121, 2724, 4832, 2151, 3935, 2122, 4819, 1062, 2509, 4808,
	3107, 1640, 3109, 3933, 3111, 3106, 1830, 2979, 997, 3726,
	2756, 3444, 4226, 1654, 1656, 1722, 2184, 1718, 1122, 1122,
	1122, 826, 827, 3173, 1122, 2322, 4589, 3138, 3120, 3405,
	912, 1756, 1056, 4019, 1122, 4810, 2483, 4817, 3149, 4194,
	3822, 2492, 1267, 1830, 4030, 3669, 3537, 3141, 2316, 1339,
	4548, 1122, 4231, 1642, 4688, 997, 1673, 4759, 4757, 3139,
	1310, 2493, 3950, 3480, 3140, 4634, 2494, 2180, 4567, 4433,
	2499, 4232, 4193, 1054, 2427, 997, 1767, 3159, 4192, 1056,
	3144, 3937, 3276, 3270, 3268, 3269, 3261, 3262, 3263, 3264,
	3266, 3267, 3973, 3580, 2179, 2243, 905, 906, 1929, 1056,
	3200, 3201, 1265, 4280, 1258, 3204, 684, 4074, 2123, 1310,
	4026, 2430, 2156, 1932, 2678, 1932, 3936, 2141, 2093, 1801,
	1766, 3099, 3196, 4747, 998, 2127, 4860, 2191, 2175, 893,
	894, 693, 4217, 1761, 3171, 1063, 3108, 4359, 3110, 2052,
	3112, 1122, 1122, 1122, 1122, 1055, 1310, 1310, 4837, 3358,
	4442, 1122, 1122, 1122, 4502, 3974, 1122, 2138, 2139, 2126,
	3935, 3906, 1536, 3893, 3846, 3009, 1122, 1244, 1383, 3933,
	1993, 998, 1122, 3418, 1122, 3315, 3316, 1832, 3581, 3572,
	3414, 3018, 2189, 1244, 1239, 3012, 3133, 2176, 2157, 3135,
	3000, 998, 1766, 2269, 1936, 2263, 1936, 3765, 2124, 2129,
	1239, 1383, 2420, 2257, 3205, 3709, 3931, 2249, 2229, 2090,
	694, 1269, 755, 1244, 3780, 4549, 1383, 4605, 4722, 3211,
	3271, 3272, 3273, 3670, 1765, 2190, 2841, 3270, 3268, 3269,
	3261, 3262, 3263, 3264, 3266, 3267, 2005, 3298, 1475, 1766,
	1383, 4282, 3351, 1939, 3838, 1939, 3338, 3937, 4570, 2372,
	2086, 2886, 3976, 3317, 2495, 4247, 1325, 1325, 1934, 695,
	1934, 696, 2858, 2997, 2497, 1486, 1280, 1781, 1782, 1783,
	1784, 1786, 1787, 4411, 4409, 4031, 1937, 3331, 1937, 1122,
	2307, 2125, 3936, 4229, 3934, 2088, 4340, 3430, 3426, 907,
	908, 1767, 3425, 1122, 3386, 3327, 1765, 3388, 3389, 3164,
	1842, 2130, 3392, 1325, 3393, 3142, 3394, 4075, 2005, 3325,
	1071, 3347, 3793, 3320, 3319, 999, 1696, 1695, 1690, 1935,
	3352, 1935, 895, 896, 2762, 3449, 1122, 2089, 2761, 2131,
	2760, 2759, 3293, 3294, 3295, 2130, 1591, 1936, 1060, 1353,
	2421, 3326, 1325, 1765, 1589, 3397, 3336, 3390, 3815, 3356,
	3344, 3323, 3339, 3340, 3309, 910, 4836, 1242, 3337, 3403,
	4032, 3941, 999, 1767, 1325, 1577, 1325, 4348, 3004, 3406,
	3407, 2355, 3332, 1242, 4509, 3324, 4406, 4208, 2862, 1578,
	3447, 3429, 999, 2183, 3434, 1383, 1939, 3436, 3766, 3853,
	3428, 3622, 2183, 3432, 2267, 3415, 1325, 3767, 1674, 3546,
	1325, 2722, 3816, 1242, 3843, 3363, 3342, 1486, 3343, 3375,
	3376, 4550, 3377, 3360, 3361, 3362, 4768, 4545, 1310, 1937,
	3460, 3492, 3330, 3448, 2887, 2888, 4327, 1325, 3817, 3378,
	3814, 4264, 2977, 1130, 3369, 1938, 3381, 1938, 3366, 3081,
	3839, 1325, 3464, 1325, 2982, 3485, 2980, 1383, 2295, 3387,
	3934, 2200, 3391, 1648, 808, 3335, 4335, 3503, 1999, 4608,
	1000, 4510, 3505, 4615, 3507, 1325, 3398, 3511, 1486, 2715,
	1486, 3517, 4349, 4602, 4081, 3782, 3478, 1325, 3359, 266,
	266, 266, 2002, 687, 688, 2589, 703, 687, 703, 713,
	1740, 3404, 753, 3500, 1244, 4772, 772, 4636, 3588, 754,
	4773, 778, 4336, 4263, 2718, 4770, 3419, 1000, 266, 3446,
	2126, 4708, 4537, 1001, 3456, 2383, 1742, 1739, 1737, 1325,
	1325, 1714, 4529, 3571, 1712, 1053, 4303, 1000, 889, 3541,
	1999, 3544, 3555, 3469, 266, 1684, 3586, 1238, 3472, 2588,
	1974, 4073, 1325, 3940, 3462, 2717, 3290, 4609, 3322, 4511,
	2716, 3579, 3685, 1238, 2002, 3493, 3564, 3645, 3644, 3379,
	1001, 3501, 3333, 3334, 3597, 3844, 3476, 3253, 3528, 3470,
	3073, 3514, 3183, 3471, 3522, 3520, 1590, 3523, 1938, 3073,
	1001, 1682, 3001, 2923, 1588, 1383, 2876, 1680, 1383, 1678,
	1676, 1670, 1664, 1662, 1587, 909, 3529, 2789, 3512, 2392,
	1969, 1602, 3518, 3533, 1965, 3608, 1743, 1626, 2363, 2330,
	2209, 4398, 3291, 3548, 2884, 3665, 3582, 3664, 1761, 3540,
	3118, 1122, 3117, 3088, 1240, 3589, 2409, 1122, 1122, 3818,
	3568, 1122, 1122, 1122, 3569, 1122, 814, 3567, 1701, 3642,
	1240, 2334, 3649, 2248, 1122, 2005, 2228, 2034, 1875, 817,
	1637, 1560, 3641, 1122, 4683, 3620, 4175, 3897, 1122, 178,
	178, 3596, 687, 687, 1383, 1063, 3504, 3624, 3594, 3663,
	266, 3896, 4176, 1122, 4601, 3606, 3607, 3603, 4159, 4245,
	3639, 1383, 4181, 4172, 1242, 3662, 3618, 1010, 4117, 3632,
	3972, 2005, 2005, 1122, 1122, 2385, 1122, 1122, 1122, 2384,
	1741, 1738, 1736, 3963, 3909, 1713, 3639, 3488, 1711, 3894,
	3383, 3384, 3867, 3865, 1122, 3632, 3845, 3671, 1122, 1683,
	2005, 2005, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1122, 1122, 3659, 1122, 3643, 4745, 3738, 3688, 3739, 3575,
	3570, 1122, 1122, 2005, 3560, 3031, 3023, 3413, 1122, 3668,
	4240, 3706, 3658, 3527, 3016, 1681, 3698, 3699, 3652, 1122,
	3653, 1679, 3654, 1677, 1675, 1669, 1663, 1661, 1586, 3008,
	1244, 1244, 2994, 4459, 1122, 2975, 2807, 3634, 2362, 2331,
	2208, 2802, 2227, 2225, 2202, 2185, 3463, 1993, 2158, 2145,
	2132, 2073, 3633, 2070, 2067, 2064, 2059, 3695, 2057, 3693,
	2053, 2044, 3585, 3634, 1383, 4736, 4231, 3515, 3477, 1977,
	3479, 3811, 2194, 1770, 4761, 1219, 3587, 3705, 3633, 3162,
	3728, 3712, 3714, 3715, 3721, 4232, 4451, 2094, 3136, 3777,
	3134, 2968, 3716, 4646, 1015, 1017, 1019, 3798, 2395, 4452,
	3513, 1220, 4269, 3736, 3519, 4262, 4261, 3737, 4188, 3743,
	4109, 3074, 2113, 1122, 3741, 3735, 1541, 1999, 4444, 1993,
	3769, 2863, 4437, 3984, 2140, 1734, 1735, 2321, 2838, 2266,
	2838, 3836, 4453, 1122, 3784, 3837, 1486, 1486, 1300, 2440,
	3729, 2002, 3630, 2836, 2393, 2860, 3778, 3770, 2987, 1301,
	2358, 2990, 2353, 2992, 4645, 2328, 3789, 3790, 4151, 4183,
	178, 1777, 1778, 1999, 1999, 1660, 1122, 1122, 2440, 3744,
	3660, 2866, 3786, 3787, 3163, 4479, 3866, 4082, 3868, 3666,
	1777, 1778, 4060, 1771, 3441, 3516, 2215, 2002, 2002, 2867,
	2394, 1780, 1999, 1999, 2889, 4455, 4764, 3035, 3800, 1774,
	3035, 3773, 1334, 2867, 1268, 3905, 1239, 3801, 4755, 1486,
	1122, 1221, 4717, 2993, 1301, 3960, 2002, 2002, 4454, 2360,
	1242, 1242, 1239, 1301, 259, 1999, 1779, 3904, 2250, 1345,
	2930, 2928, 2937, 2919, 2254, 2917, 4456, 1325, 2869, 4595,
	2871, 2041, 1325, 4804, 2164, 1779, 2918, 3878, 3828, 2002,
	3521, 3908, 1239, 2870, 3819, 3820, 3883, 3885, 4346, 3882,
	3640, 3635, 3636, 3637, 3638, 4561, 2005, 4555, 4508, 3832,
	3833, 681, 3835, 4428, 3849, 4404, 4328, 3899, 3970, 3113,
	3962, 3949, 3808, 3907, 3574, 3038, 3640, 3635, 3636, 3637,
	3638, 3901, 3875, 2702, 2079, 1855, 3870, 1325, 1986, 1860,
	1498, 4638, 1497, 1122, 3367, 4835, 4639, 2041, 3923, 3925,
	2140, 1244, 1122, 1508, 3986, 3259, 3260, 4557, 2041, 2169,
	1777, 1778, 1325, 1325, 1325, 2884, 4776, 4052, 4638, 3969,
	3956, 4821, 3993, 4639, 2830, 2831, 2828, 2829, 1647, 1325,
	2584, 3977, 3919, 3824, 1646, 2121, 3939, 2830, 2828, 2617,
	2122, 1716, 4429, 1310, 1715, 1325, 3978, 4380, 4185, 4180,
	3943, 1383, 2165, 4179, 4048, 3929, 3981, 3823, 3938, 3717,
	3509, 3927, 3506, 1256, 1869, 1868, 4783, 4599, 4598, 3957,
	3916, 4597, 4536, 3044, 4535, 3966, 1383, 4495, 4407, 1122,
	1122, 3928, 3961, 4374, 4009, 1122, 1122, 2005, 4325, 4322,
	1122, 1122, 4320, 1122, 4219, 3980, 1276, 4205, 1122, 4149,
	3073, 4104, 4008, 3990, 3944, 3863, 3856, 3997, 266, 1122,
	266, 266, 3964, 1305, 266, 1315, 3578, 3577, 3435, 3385,
	3979, 3123, 3115, 3096, 3987, 1122, 1335, 3095, 3094, 3093,
	3982, 3022, 3988, 4017, 3917, 772, 2995, 2861, 3992, 2798,
	4015, 3998, 3999, 2793, 2782, 4033, 1993, 4000, 1486, 4003,
	4007, 4006, 2781, 2123, 3419, 2770, 2513, 4016, 2386, 4004,
	266, 2359, 266, 266, 1305, 2352, 266, 266, 2351, 2350,
	2127, 1315, 2349, 4457, 4046, 2348, 2264, 2238, 1999, 4458,
	2234, 2233, 2232, 4027, 4034, 266, 1244, 1510, 2231, 4042,
	2230, 1242, 1993, 1993, 1244, 2047, 2046, 2045, 1383, 2043,
	1383, 1976, 2002, 1733, 1732, 1671, 1555, 1244, 1534, 1554,
	1553, 1552, 1551, 1550, 1549, 1544, 1540, 1538, 1325, 1325,
	1537, 1993, 1993, 1239, 1491, 1490, 1489, 1559, 1383, 1374,
	1315, 1373, 1372, 1371, 266, 266, 3351, 1305, 1370, 1338,
	1337, 1287, 1286, 2124, 2129, 1285, 1284, 1283, 1282, 1238,
	1281, 1279, 1274, 1244, 1993, 1244, 1273, 4022, 772, 1272,
	266, 266, 1271, 4072, 1270, 1238, 882, 8, 1602, 2162,
	1602, 1202, 2084, 1021, 1007, 4513, 4131, 1325, 2382, 92,
	1546, 844, 4137, 889, 4137, 86, 2192, 1383, 3862, 1325,
	4711, 976, 1325, 4635, 1530, 1238, 2172, 4540, 4140, 852,
	4617, 3958, 3437, 1383, 2944, 2333, 4090, 1672, 2335, 1999,
	4093, 4086, 4083, 4089, 4079, 4110, 4111, 4084, 4085, 4114,
	4088, 4094, 3346, 4097, 2170, 2744, 2125, 4587, 178, 4056,
	3221, 4153, 4486, 2002, 4296, 4116, 1240, 2587, 1873, 4152,
	3302, 1325, 1325, 88, 4102, 1106, 1152, 4215, 4214, 4118,
	3848, 3063, 1240, 4212, 4211, 1990, 1992, 4108, 1070, 1386,
	266, 1325, 4657, 2095, 1112, 2111, 2104, 2163, 2783, 4173,
	2119, 4087, 2661, 1383, 2131, 1129, 1242, 1126, 1325, 1994,
	4187, 266, 1240, 4184, 1242, 4186, 3918, 1996, 1128, 4168,
	1127, 1995, 1892, 4206, 1125, 1989, 4203, 1242, 3968, 2171,
	3042, 3604, 1596, 1244, 4171, 1594, 978, 2099, 2507, 2571,
	3210, 4178, 1866, 1325, 1325, 1325, 4237, 1086, 1108, 2568,
	4197, 4209, 4248, 1263, 1097, 2117, 1383, 1085, 3328, 4202,
	4204, 3307, 4137, 3591, 3807, 4141, 2419, 4249, 1122, 1122,
	1122, 862, 3256, 1242, 4196, 1242, 4265, 4195, 2574, 1254,
	2685, 4154, 4155, 2677, 2673, 3395, 1383, 4210, 3032, 1747,
	4252, 1122, 4310, 4236, 1122, 1122, 4225, 1844, 2118, 4234,
	3043, 1368, 1090, 2505, 1122, 1857, 3188, 2005, 4157, 2429,
	3598, 4243, 1122, 1122, 4250, 3450, 3451, 3349, 3452, 3453,
	3454, 4166, 2776, 4257, 4169, 4642, 3725, 1383, 3121, 1325,
	2242, 1218, 4274, 1217, 1261, 4288, 1216, 4623, 4620, 1239,
	1239, 2182, 4272, 4001, 4271, 4276, 3553, 1993, 2087, 2822,
	2517, 3561, 1383, 4283, 1102, 1310, 1485, 2376, 3313, 3623,
	1122, 4277, 1557, 3494, 3495, 777, 3496, 3497, 3498, 1122,
	4353, 1114, 1829, 2965, 2964, 4505, 1354, 1122, 1352, 1351,
	1350, 2005, 4792, 4858, 3858, 2126, 4293, 4299, 3857, 233,
	1122, 3156, 1768, 1122, 1760, 230, 232, 231, 4220, 3812,
	3355, 4715, 3880, 3545, 23, 22, 1238, 1122, 21, 4305,
	4316, 4317, 687, 4331, 1383, 4268, 4365, 4366, 112, 42,
	2254, 1325, 4356, 1242, 20, 151, 129, 4319, 148, 147,
	121, 1325, 1325, 266, 146, 266, 145, 4330, 2731, 266,
	144, 143, 150, 142, 141, 4332, 4381, 136, 4383, 1319,
	4384, 4339, 1510, 1305, 266, 140, 266, 139, 138, 4373,
	137, 135, 266, 1510, 703, 4385, 133, 134, 4397, 266,
	1510, 128, 4419, 132, 131, 130, 1383, 4376, 1993, 1325,
	127, 4410, 4375, 4371, 2048, 126, 125, 124, 123, 122,
	120, 152, 119, 1240, 118, 117, 266, 1244, 1244, 116,
	115, 114, 113, 266, 765, 1494, 767, 4382, 61, 60,
	111, 110, 19, 4400, 4399, 4423, 4427, 1122, 1122, 40,
	4402, 4389, 14, 4438, 4408, 4403, 4137, 4137, 3555, 1999,
	65, 66, 18, 13, 1122, 2005, 35, 91, 4439, 1532,
	4462, 4463, 4418, 772, 102, 101, 4441, 36, 99, 98,
	34, 17, 2511, 2002, 16, 15, 96, 95, 33, 4440,
	31, 4158, 11, 9, 37, 1569, 4446, 4252, 1855, 1953,
	4445, 4460, 1122, 4167, 12, 1122, 4170, 5, 183, 4363,
	182, 185, 1244, 4447, 4435, 181, 184, 90, 180, 179,
	89, 29, 1610, 4466, 10, 1244, 4474, 175, 4475, 4476,
	4501, 4420, 3954, 1999, 81, 177, 1623, 176, 174, 173,
	172, 4137, 82, 79, 171, 85, 170, 80, 84, 83,
	1239, 27, 2684, 4387, 4137, 6, 64, 2002, 7, 4278,
	3646, 105, 4497, 4478, 4500, 106, 38, 4484, 4524, 77,
	76, 4523, 2130, 75, 26, 4233, 63, 1122, 1122, 4532,
	25, 169, 216, 4517, 4518, 215, 214, 1122, 4544, 213,
	212, 1649, 1244, 211, 4443, 1244, 210, 209, 204, 1325,
	203, 208, 206, 205, 207, 202, 4531, 225, 219, 1325,
	1325, 218, 224, 223, 4533, 222, 221, 1242, 1242, 220,
	4538, 4137, 1238, 1238, 4137, 217, 1325, 227, 201, 200,
	199, 197, 193, 266, 192, 4564, 196, 266, 4566, 4423,
	1122, 1122, 4578, 4552, 4553, 4551, 4559, 4558, 4563, 4556,
	1122, 198, 195, 194, 191, 226, 72, 4572, 4571, 167,
	168, 71, 166, 4494, 4576, 4577, 4496, 165, 4574, 4377,
	4575, 164, 2254, 2041, 163, 162, 161, 160, 70, 24,
	2, 4581, 4582, 1, 0, 0, 0, 1999, 1122, 1122,
	266, 1122, 1310, 0, 266, 4592, 0, 4610, 0, 0,
	266, 4596, 1242, 0, 1602, 4614, 266, 0, 0, 1240,
	1240, 2002, 0, 0, 0, 1242, 0, 4622, 4625, 0,
	4640, 4591, 266, 4637, 266, 0, 0, 4612, 687, 0,
	266, 0, 4613, 0, 0, 1239, 0, 0, 0, 4662,
	0, 4631, 772, 1239, 0, 0, 889, 0, 0, 1122,
	1122, 1122, 0, 4665, 0, 4627, 1239, 0, 0, 0,
	4666, 4647, 0, 0, 0, 0, 4653, 0, 0, 4626,
	0, 266, 4630, 1305, 266, 0, 4660, 0, 2424, 1122,
	4644, 4695, 1242, 4661, 0, 1242, 0, 0, 772, 4679,
	4680, 0, 0, 0, 4682, 266, 4681, 0, 1993, 0,
	4700, 0, 1239, 2332, 1239, 4388, 0, 0, 266, 266,
	4583, 266, 4584, 266, 0, 266, 0, 266, 4718, 0,
	0, 0, 0, 0, 0, 4710, 4698, 4713, 0, 4729,
	4741, 0, 4725, 4727, 0, 0, 1122, 0, 0, 4714,
	0, 4740, 2368, 0, 0, 2369, 4726, 2370, 0, 4746,
	4739, 0, 0, 0, 0, 0, 0, 4734, 0, 266,
	266, 266, 266, 4733, 4735, 4762, 0, 0, 0, 0,
	0, 0, 1993, 4756, 4632, 4752, 4753, 4633, 4754, 0,
	4758, 0, 0, 0, 0, 4766, 753, 4765, 4767, 1244,
	772, 1244, 2130, 4769, 4622, 0, 0, 4625, 0, 4775,
	0, 0, 4786, 1238, 4785, 0, 0, 4799, 4544, 4784,
	4797, 0, 4780, 0, 4788, 4794, 4737, 4738, 4137, 0,
	4137, 0, 4743, 2679, 0, 4798, 0, 0, 4812, 0,
	0, 0, 4787, 0, 4789, 0, 0, 0, 0, 0,
	4811, 4814, 0, 0, 0, 0, 0, 0, 0, 0,
	3965, 4696, 1239, 0, 0, 4644, 0, 0, 0, 4825,
	4829, 4822, 0, 0, 0, 1122, 1122, 4827, 0, 4830,
	0, 4823, 0, 0, 1122, 0, 1122, 1122, 4833, 0,
	0, 0, 0, 2519, 4839, 0, 0, 0, 4849, 0,
	1240, 4843, 4852, 4854, 4847, 4853, 4851, 0, 0, 0,
	4846, 4850, 0, 0, 0, 4848, 785, 0, 0, 0,
	4862, 0, 4842, 4866, 4861, 4864, 4857, 0, 4867, 0,
	4868, 4018, 4870, 4863, 0, 0, 1993, 0, 4873, 0,
	0, 796, 0, 0, 0, 4865, 4875, 1122, 4878, 0,
	4880, 0, 0, 0, 4881, 4877, 4883, 4884, 4874, 4870,
	0, 0, 0, 687, 0, 0, 0, 4840, 4841, 2684,
	0, 0, 3044, 0, 0, 1486, 0, 0, 266, 0,
	0, 0, 877, 4793, 0, 0, 0, 687, 0, 1242,
	0, 1242, 0, 0, 266, 0, 687, 0, 1238, 0,
	0, 0, 0, 0, 0, 0, 1238, 0, 266, 73,
	0, 880, 879, 0, 0, 0, 0, 0, 0, 1238,
	0, 0, 0, 4818, 266, 1315, 74, 0, 4879, 4820,
	0, 0, 0, 0, 790, 0, 0, 0, 0, 0,
	802, 0, 78, 0, 0, 0, 0, 0, 0, 0,
	2684, 2684, 0, 0, 795, 0, 0, 0, 0, 0,
	0, 4132, 0, 0, 0, 1238, 1381, 1238, 0, 0,
	1480, 0, 0, 266, 1315, 0, 1310, 0, 703, 0,
	0, 0, 87, 0, 0, 1240, 0, 0, 2797, 0,
	0, 0, 0, 1240, 266, 4128, 0, 266, 0, 4121,
	0, 266, 794, 266, 0, 0, 1240, 0, 1305, 0,
	266, 266, 0, 1315, 1315, 2813, 4119, 0, 0, 748,
	266, 0, 883, 0, 0, 4123, 1239, 1239, 2041, 2041,
	0, 0, 0, 0, 49, 0, 107, 0, 0, 0,
	0, 93, 104, 0, 792, 0, 0, 0, 0, 4129,
	0, 0, 1240, 0, 1240, 0, 2284, 0, 0, 0,
	0, 0, 0, 0, 0, 2850, 0, 0, 0, 0,
	0, 0, 1319, 2298, 0, 2041, 266, 0, 0, 0,
	0, 0, 0, 2300, 0, 0, 0, 0, 0, 266,
	0, 4122, 0, 0, 0, 2308, 0, 2311, 2312, 2313,
	94, 0, 266, 801, 0, 0, 0, 0, 0, 0,
	0, 1239, 0, 0, 2041, 1238, 0, 0, 0, 0,
	0, 0, 0, 0, 1239, 3185, 3186, 0, 0, 266,
	2684, 2684, 2684, 2684, 0, 4218, 2041, 0, 2041, 0,
	2960, 0, 0, 0, 1077, 0, 0, 0, 4235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 2985, 0, 0, 0, 0, 2041, 0,
	0, 4256, 2041, 2952, 2950, 0, 0, 787, 0, 0,
	2954, 2956, 2946, 0, 0, 0, 0, 1510, 0, 0,
	266, 1239, 266, 0, 1239, 0, 0, 0, 0, 266,
	0, 0, 1240, 0, 0, 0, 0, 0, 791, 3027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2850,
	0, 687, 0, 0, 0, 0, 0, 0, 0, 0,
	3056, 889, 0, 2850, 2850, 0, 0, 0, 0, 0,
	3146, 0, 0, 747, 0, 0, 97, 0, 0, 0,
	266, 0, 4124, 0, 0, 0, 0, 4125, 797, 0,
	0, 1777, 1778, 0, 789, 0, 0, 0, 0, 266,
	1305, 266, 0, 0, 0, 0, 0, 0, 1510, 0,
	1510, 1315, 266, 0, 1808, 1305, 0, 1305, 0, 1305,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 186,
	100, 0, 0, 103, 0, 3283, 3284, 3285, 3286, 4127,
	0, 786, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 2679, 2679, 0, 0, 4130, 1779, 0, 0, 234,
	0, 266, 266, 266, 266, 1305, 1799, 884, 1305, 793,
	266, 0, 149, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 749, 0, 0, 0, 0, 0, 0,
	0, 2948, 0, 0, 788, 0, 0, 0, 0, 268,
	0, 0, 2962, 0, 266, 0, 0, 236, 0, 1238,
	1238, 0, 266, 0, 0, 0, 799, 800, 0, 0,
	0, 0, 0, 2961, 2953, 2951, 2955, 2957, 2947, 2949,
	2963, 0, 0, 153, 0, 0, 0, 0, 0, 2959,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 0,
	1802, 1803, 1804, 1805, 0, 1968, 235, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 2966, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 4126, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1238, 0, 1240, 1240, 0, 0,
	0, 0, 0, 878, 0, 0, 0, 1238, 1807, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 1239, 0,
	1239, 0, 0, 4133, 0, 0, 0, 0, 0, 0,
	0, 2679, 2679, 2679, 2679, 0, 0, 0, 1510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2814,
	1319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 1238, 0, 0, 1238, 2115, 0,
	0, 1240, 0, 0, 0, 0, 0, 0, 0, 0,
	1084, 0, 0, 0, 1240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 4562, 0, 0, 0, 0, 0,
	2967, 2684, 2684, 0, 0, 0, 0, 0, 0, 2958,
	0, 1240, 0, 0, 1240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2969,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 266, 0, 0, 0,
	0, 687, 0, 0, 0, 0, 687, 0, 0, 687,
	0, 0, 687, 687, 0, 0, 1801, 0, 687, 0,
	2220, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	0, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684,
	2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684,
	2684, 0, 2684, 1510, 0, 0, 73, 0, 0, 0,
	0, 4648, 0, 0, 1832, 0, 266, 4650, 0, 0,
	266, 266, 0, 74, 0, 0, 0, 3089, 0, 0,
	0, 0, 0, 0, 2041, 0, 0, 0, 0, 78,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2850,
	2850, 266, 0, 3410, 0, 0, 0, 0, 0, 2850,
	0, 0, 3421, 0, 0, 0, 3681, 3682, 0, 0,
	2850, 3421, 0, 2850, 3421, 0, 0, 3421, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 266, 3410, 0, 266, 0, 0, 0,
	0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	0, 1238, 0, 1238, 0, 0, 3410, 0, 266, 883,
	0, 0, 0, 3484, 3484, 0, 1305, 0, 0, 0,
	0, 0, 0, 107, 0, 0, 0, 0, 93, 104,
	0, 0, 2850, 0, 2850, 0, 3510, 2850, 3410, 0,
	0, 2850, 3410, 0, 0, 772, 3745, 3746, 3747, 3748,
	3749, 3750, 3751, 3752, 3753, 3754, 3755, 3756, 3757, 3758,
	3759, 3760, 3761, 3762, 3763, 3764, 0, 3768, 0, 0,
	0, 0, 1305, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 1510, 0, 0, 0, 94, 1240, 0,
	1240, 0, 0, 0, 0, 0, 0, 266, 3549, 0,
	0, 3551, 2850, 0, 0, 266, 0, 0, 73, 266,
	0, 0, 1315, 0, 0, 0, 0, 0, 2443, 0,
	0, 0, 0, 0, 0, 74, 0, 266, 0, 0,
	0, 0, 3027, 0, 0, 1305, 0, 266, 0, 0,
	2850, 78, 687, 0, 0, 0, 0, 0, 0, 2850,
	0, 0, 2679, 2679, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 3027, 0, 0, 3027, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3651, 0, 0, 0,
	0, 2585, 0, 2773, 0, 0, 0, 0, 0, 0,
	0, 883, 0, 3657, 0, 0, 1510, 0, 0, 1305,
	266, 0, 266, 97, 0, 107, 0, 0, 1305, 0,
	93, 104, 2679, 2679, 2679, 2679, 2679, 2679, 2679, 2679,
	2679, 2679, 2679, 2679, 2679, 2679, 2679, 2679, 2679, 2679,
	2679, 2679, 0, 2679, 0, 0, 0, 0, 266, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 2041, 0, 0, 2041, 0, 186, 100, 0, 0,
	103, 0, 0, 0, 0, 0, 74, 0, 0, 94,
	1084, 1084, 0, 0, 0, 0, 2754, 0, 0, 0,
	0, 0, 78, 0, 0, 0, 234, 1467, 0, 0,
	0, 1467, 0, 0, 884, 0, 3723, 0, 0, 149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 883, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 49, 190, 107, 0, 0, 0,
	0, 93, 104, 235, 0, 0, 0, 74, 0, 0,
	0, 0, 0, 266, 266, 0, 228, 0, 0, 0,
	0, 0, 0, 78, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 687, 687, 0, 0,
	0, 0, 0, 2833, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 1510, 1510,
	94, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 1510, 0, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 100,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 883, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 0, 107, 234, 0,
	0, 0, 93, 104, 0, 0, 884, 0, 0, 0,
	0, 149, 0, 0, 0, 0, 0, 0, 0, 1777,
	1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0,
	0, 772, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 1808, 3524, 0, 0, 236, 0, 0, 1780,
	0, 0, 0, 2041, 0, 0, 0, 0, 1827, 0,
	0, 94, 0, 0, 0, 0, 3484, 0, 0, 0,
	0, 0, 153, 0, 0, 1833, 0, 0, 0, 266,
	0, 3565, 0, 0, 1779, 0, 97, 190, 0, 0,
	0, 0, 0, 3573, 1799, 235, 0, 0, 0, 0,
	0, 0, 0, 1796, 3410, 1813, 266, 0, 228, 0,
	703, 703, 1315, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 3614, 3615, 0, 0, 186,
	100, 0, 189, 103, 266, 0, 0, 0, 0, 266,
	0, 0, 0, 2684, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 2850, 266, 0, 0, 884, 1802, 1803,
	1804, 1805, 149, 3056, 3056, 0, 0, 0, 1785, 889,
	889, 2850, 0, 0, 0, 3027, 3027, 0, 0, 889,
	2850, 0, 0, 0, 0, 0, 0, 97, 0, 2684,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 266, 0, 0, 0, 1818, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 1807, 1809, 0, 0,
	0, 0, 0, 153, 0, 0, 1467, 0, 0, 0,
	0, 0, 0, 1824, 0, 1825, 0, 0, 190, 0,
	186, 100, 1794, 1795, 103, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	1816, 0, 0, 0, 0, 0, 0, 1813, 229, 0,
	234, 0, 0, 1813, 0, 1800, 4057, 0, 884, 1813,
	0, 0, 0, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1815, 0, 266,
	0, 0, 1084, 0, 153, 1510, 0, 266, 1830, 1467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	266, 0, 0, 2684, 4342, 0, 0, 235, 1813, 0,
	0, 0, 0, 1813, 0, 1315, 0, 0, 0, 0,
	228, 0, 1813, 0, 0, 0, 0, 1813, 1315, 229,
	0, 0, 0, 0, 0, 2850, 2850, 0, 3484, 2850,
	0, 1806, 0, 0, 0, 0, 4139, 0, 4139, 1510,
	0, 0, 0, 0, 1605, 0, 0, 0, 0, 2850,
	0, 3421, 0, 0, 1801, 1510, 1510, 266, 3410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3410, 0, 266, 3410, 0, 266, 0, 3484, 0,
	0, 1819, 1813, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 2850, 0, 2850, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1777, 1778, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1467, 0, 0, 0, 0, 3314, 0, 0, 0,
	1808, 2850, 0, 0, 2679, 1931, 4222, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 2654, 2655,
	2656, 2657, 2650, 2651, 2652, 2653, 0, 266, 0, 3341,
	0, 0, 0, 1833, 0, 0, 0, 0, 4483, 0,
	0, 0, 1779, 0, 3354, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 1817, 0, 4139, 0, 0, 1510,
	2679, 1796, 1791, 1792, 1798, 1820, 1797, 1793, 3373, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0,
	0, 0, 4065, 3914, 0, 0, 4064, 0, 0, 1813,
	1813, 1813, 1813, 1813, 1813, 1813, 1813, 0, 0, 0,
	2630, 2631, 2632, 2633, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 3684, 0, 0, 0, 0,
	0, 0, 1813, 2642, 2643, 2644, 2645, 2638, 2639, 2640,
	2641, 2646, 2647, 2648, 2649, 0, 1802, 1803, 1804, 1805,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2683, 3994, 3995,
	3996, 2850, 0, 3421, 0, 0, 4334, 0, 0, 0,
	1813, 0, 0, 0, 266, 1319, 1813, 0, 0, 0,
	0, 4354, 0, 4354, 1807, 1809, 1069, 0, 0, 2626,
	2627, 2628, 2629, 2634, 2635, 2636, 2637, 0, 0, 0,
	0, 0, 0, 0, 0, 772, 0, 0, 0, 0,
	1794, 1795, 0, 0, 0, 0, 3484, 0, 1305, 0,
	0, 0, 3259, 3260, 2679, 3277, 3278, 3279, 0, 0,
	0, 0, 0, 3410, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 1800, 4038, 0, 0, 0, 0, 1467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4334, 0, 0, 0, 0, 3354, 0, 0, 2850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3274, 1510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4139, 4139, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1467, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4099, 4100, 0, 1510, 0, 1806,
	1510, 3484, 4499, 0, 0, 0, 0, 0, 0, 4334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3265, 1801, 0, 0, 4139, 0, 0, 0, 0,
	0, 0, 0, 1480, 0, 0, 1381, 0, 4139, 0,
	0, 1467, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 1467, 0, 0,
	0, 0, 703, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 3281, 0, 0, 4222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4139, 0, 266, 4139, 0,
	0, 0, 3702, 0, 0, 0, 0, 1319, 3421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3275, 3718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1510, 0, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 1793, 0, 1790, 1788, 1789,
	1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0, 0,
	4606, 0, 0, 0, 0, 0, 0, 0, 0, 4273,
	0, 4275, 0, 4354, 0, 0, 266, 0, 0, 0,
	0, 1830, 0, 0, 0, 0, 0, 0, 1510, 0,
	0, 1510, 0, 0, 1467, 0, 0, 0, 0, 0,
	2850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 3259,
	3260, 266, 3277, 3278, 3279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 3690, 3810, 0, 0, 0, 0, 0, 3723, 0,
	0, 0, 0, 0, 0, 4321, 0, 3276, 0, 0,
	0, 0, 0, 0, 0, 1510, 1467, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 3274, 266, 0, 0, 0, 0,
	1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813,
	1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813,
	1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813, 1813,
	1813, 1813, 1813, 1813, 1813, 1813, 0, 4334, 0, 0,
	0, 1813, 0, 1813, 1813, 1813, 1813, 0, 0, 1330,
	0, 0, 0, 0, 0, 2683, 2683, 4401, 0, 0,
	0, 0, 0, 3259, 3260, 0, 3277, 3278, 3279, 0,
	1813, 0, 0, 0, 0, 2850, 1069, 1069, 0, 0,
	0, 0, 4139, 0, 4139, 3689, 0, 1510, 3265, 0,
	0, 0, 0, 0, 0, 3271, 3272, 3273, 0, 0,
	0, 0, 3270, 3268, 3269, 3261, 3262, 3263, 3264, 3266,
	3267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 1777, 1778, 1510, 1512, 1154,
	1518, 0, 1524, 1510, 0, 0, 0, 0, 3274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1808, 0,
	0, 1813, 0, 3281, 1813, 1780, 0, 1813, 0, 0,
	1813, 0, 0, 0, 1813, 1813, 1813, 1813, 1813, 1813,
	1813, 0, 0, 3056, 0, 0, 0, 0, 0, 0,
	0, 1833, 2850, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 0, 3275, 0, 0, 3056, 1613,
	1799, 1618, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 1627, 0, 1632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 3265, 3280, 0, 2683, 2683, 2683, 2683, 0,
	0, 0, 1813, 0, 1813, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3679, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1697, 0, 0, 1703, 1802, 1803, 1804, 1805, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 3281, 0, 0,
	0, 0, 0, 0, 0, 1319, 1319, 0, 0, 0,
	0, 1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823,
	0, 0, 1319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 1808, 0, 0, 0, 0, 3275,
	0, 1780, 1807, 1809, 3276, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1245, 1833, 1794, 1795,
	3259, 3260, 0, 3277, 3278, 3279, 1779, 0, 1834, 1835,
	1836, 1837, 1838, 1839, 1840, 1841, 1799, 0, 4092, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 1830, 0, 0, 0, 4106, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 1803, 1804, 1805, 1830, 0, 0, 0, 0, 0,
	1785, 0, 3271, 3272, 3273, 0, 0, 1467, 3276, 3270,
	3268, 3269, 3261, 3262, 3263, 3264, 3266, 3267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 0,
	1467, 1828, 1925, 1925, 1925, 0, 0, 1806, 1807, 1809,
	0, 0, 0, 0, 0, 1467, 0, 0, 0, 3265,
	0, 0, 0, 1813, 1813, 1824, 1813, 1825, 0, 0,
	1801, 0, 0, 0, 1794, 1795, 0, 0, 0, 1467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1816, 0, 0, 0, 0, 0, 0, 0,
	3282, 0, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1084, 0,
	0, 0, 0, 0, 3281, 0, 0, 0, 1832, 0,
	0, 0, 1084, 0, 1381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3271, 3272, 3273, 0,
	0, 1826, 0, 3270, 3268, 3269, 3261, 3262, 3263, 3264,
	3266, 3267, 0, 0, 4294, 0, 3275, 0, 0, 1815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 1069, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4294, 0, 0, 0, 0,
	0, 0, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 1467, 0, 0, 0, 0, 0,
	2443, 0, 0, 1806, 0, 0, 0, 0, 0, 1830,
	0, 0, 0, 1813, 1813, 0, 2683, 2683, 0, 0,
	1813, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	3280, 3280, 0, 0, 1813, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 1467, 0, 1813, 0,
	0, 0, 2443, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 3276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2683, 2683, 2683, 2683,
	2683, 2683, 2683, 2683, 2683, 2683, 2683, 2683, 2683, 2683,
	2683, 2683, 2683, 2683, 2683, 2683, 0, 2683, 3280, 3280,
	3280, 3280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 1245, 1813, 1791, 1792, 1798, 1820, 1797, 1793,
	0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	0, 0, 0, 0, 3234, 0, 3259, 3260, 3235, 3277,
	3278, 3279, 0, 0, 1467, 0, 0, 1467, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1245, 0, 0,
	0, 1245, 0, 0, 0, 0, 0, 0, 1245, 0,
	0, 0, 0, 3271, 3272, 3273, 0, 0, 0, 0,
	3270, 3268, 3269, 3261, 3262, 3263, 3264, 3266, 3267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 3274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1467, 0, 0, 0, 0, 1245, 0,
	0, 0, 0, 0, 0, 1813, 0, 1777, 1778, 0,
	1467, 0, 2356, 1821, 1822, 1823, 0, 0, 1245, 0,
	0, 0, 0, 0, 0, 1245, 0, 0, 0, 0,
	1808, 0, 0, 0, 0, 0, 0, 1780, 0, 1245,
	0, 0, 0, 0, 0, 0, 1827, 2380, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 3265, 0, 0, 0, 0,
	0, 2418, 1799, 2422, 0, 0, 0, 0, 0, 0,
	2436, 1796, 0, 0, 1245, 0, 0, 2445, 2446, 2447,
	2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457,
	2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467,
	2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477,
	2478, 2479, 2480, 0, 2486, 0, 2488, 2489, 2490, 2491,
	3281, 0, 0, 1467, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2515, 0, 0, 0, 1802, 1803, 1804, 1805,
	0, 0, 0, 0, 1854, 0, 1785, 0, 2566, 0,
	0, 0, 3275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2596, 2599, 2602, 2605, 0, 2609,
	2610, 2611, 2612, 2613, 2614, 2615, 0, 0, 0, 0,
	0, 0, 0, 0, 1818, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 1807, 1809, 0, 2675, 0, 2687,
	2689, 2694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 1813, 0, 0, 1813, 3280, 3280, 1813, 0,
	1794, 1795, 1813, 0, 0, 1830, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 1813, 1813, 1813, 1813,
	0, 0, 0, 0, 0, 1813, 0, 1813, 0, 0,
	3280, 3280, 3280, 3280, 3280, 3280, 3280, 3280, 3280, 3280,
	3280, 3280, 3280, 3280, 3280, 3280, 3280, 3280, 3280, 3280,
	0, 3276, 0, 3280, 0, 0, 1813, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 1830, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1245,
	0, 1245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2006, 1813, 0, 0, 1245, 1806,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 0,
	1467, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 1467, 0, 0, 0, 3271,
	3272, 3273, 0, 0, 1245, 0, 3270, 3268, 3269, 3261,
	3262, 3263, 3264, 3266, 3267, 1245, 0, 0, 1777, 1778,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1245,
	0, 1808, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2988,
	2989, 0, 2991, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 1813, 0, 0, 0, 0, 0,
	0, 0, 1817, 1799, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 1820, 1797, 1793, 0, 1790, 1788, 1789,
	1781, 1782, 1783, 1784, 1786, 1787, 0, 1467, 0, 1467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 1813, 0, 0, 0, 1813, 1813, 0, 0, 1813,
	1813, 0, 0, 0, 1813, 0, 0, 1467, 1813, 0,
	0, 0, 0, 1813, 0, 0, 3678, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2683, 0,
	0, 1245, 1245, 0, 0, 0, 0, 1802, 1803, 1804,
	1805, 1245, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3114, 0, 1467, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1467, 0, 2683, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 1809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 1834, 1835, 0, 0, 1245, 0, 1245, 0, 1245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1467, 0, 1800, 1245, 1245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1245, 0,
	1245, 1245, 1245, 0, 0, 0, 0, 3168, 3169, 0,
	0, 0, 0, 3175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1467, 0, 0, 0, 0,
	0, 0, 3189, 3190, 0, 0, 0, 0, 2566, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 1467, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 1813, 1813, 0, 0, 0,
	1107, 109, 0, 0, 0, 1813, 1813, 3280, 2683, 0,
	0, 0, 0, 3199, 1813, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 1467, 0, 0, 3213,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3225, 3280, 0, 0,
	0, 1467, 0, 1801, 0, 0, 0, 2006, 2006, 1245,
	1813, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 1084, 0, 109, 0, 0, 0, 0, 1777,
	1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0,
	0, 1832, 0, 1467, 0, 0, 0, 0, 0, 0,
	0, 1814, 1808, 0, 0, 0, 0, 0, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 2694, 2694, 2694, 0,
	0, 0, 1245, 0, 0, 1833, 0, 0, 0, 0,
	0, 1925, 0, 0, 1779, 0, 0, 0, 0, 3318,
	0, 0, 0, 0, 1799, 1467, 0, 0, 1118, 1044,
	0, 0, 0, 1796, 0, 0, 0, 0, 3280, 0,
	1064, 0, 0, 0, 0, 1797, 1793, 0, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 1813,
	0, 0, 1813, 0, 1245, 0, 0, 0, 0, 0,
	0, 1245, 0, 0, 265, 265, 265, 1777, 1778, 0,
	1245, 0, 0, 0, 0, 0, 0, 1228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1245, 0, 0,
	1808, 0, 0, 815, 0, 0, 0, 1780, 1802, 1803,
	1804, 1805, 0, 0, 0, 1813, 0, 0, 1785, 0,
	0, 0, 0, 0, 1069, 0, 0, 0, 0, 815,
	0, 0, 0, 1833, 0, 0, 0, 0, 1069, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 0, 0, 1818, 0, 0, 1828,
	0, 1796, 0, 0, 0, 0, 1807, 1809, 0, 0,
	0, 3440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 0, 1825, 0, 0, 0, 0,
	0, 0, 1794, 1795, 0, 0, 1084, 1084, 0, 0,
	0, 0, 1245, 1245, 0, 0, 0, 0, 0, 0,
	1816, 0, 0, 0, 0, 3174, 0, 1777, 1778, 0,
	0, 0, 0, 0, 0, 1800, 0, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 1802, 1803, 1804, 1805,
	1808, 0, 0, 0, 1245, 0, 1785, 1780, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 0, 0, 1826,
	0, 0, 0, 1833, 0, 0, 0, 0, 2006, 0,
	0, 0, 1779, 0, 0, 0, 0, 1815, 0, 0,
	0, 0, 1799, 0, 1807, 1809, 0, 0, 1830, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 1084, 0,
	0, 0, 0, 0, 0, 0, 1245, 0, 0, 0,
	1794, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 0, 1800, 0, 3167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 1802, 1803, 1804, 1805,
	1245, 0, 0, 0, 0, 0, 1785, 0, 0, 1813,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1245, 0, 1245, 1830, 0, 0, 0,
	0, 0, 1832, 0, 1807, 1809, 0, 0, 0, 0,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1794, 1795, 0, 0, 0, 0, 2436, 0, 0, 0,
	0, 0, 3676, 3677, 0, 0, 3680, 0, 0, 1806,
	3683, 0, 0, 0, 0, 0, 0, 0, 0, 3687,
	0, 0, 0, 1800, 0, 0, 0, 0, 3694, 0,
	0, 0, 1801, 3318, 1817, 0, 0, 0, 0, 0,
	0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 3707, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0,
	0, 0, 2562, 0, 0, 0, 2563, 0, 3730, 3731,
	0, 3732, 3733, 3734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 1778, 0, 0, 3740,
	1832, 0, 0, 3742, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1808, 0,
	0, 0, 0, 0, 0, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 3771, 3772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 3783, 0, 0, 0, 0, 1806,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 3792,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 1801, 0, 1797, 1793, 0, 1790, 1788, 1789,
	1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 109, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 3840, 0,
	0, 0, 0, 0, 1802, 1803, 1804, 1805, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 3851, 1064,
	109, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 109,
	0, 0, 3879, 265, 0, 265, 265, 0, 0, 265,
	0, 0, 1807, 1809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 1793, 0, 1790, 1788, 1789,
	1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 1794, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 265, 265, 0,
	0, 265, 265, 109, 0, 0, 0, 0, 0, 0,
	0, 1800, 0, 0, 0, 0, 1245, 1245, 0, 0,
	815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 0, 0, 1245, 0, 0, 0, 265,
	265, 0, 0, 0, 0, 0, 0, 0, 1925, 0,
	0, 0, 0, 0, 1830, 2006, 0, 3989, 0, 1245,
	0, 733, 0, 0, 0, 265, 265, 1044, 0, 0,
	0, 0, 0, 0, 0, 1245, 1245, 0, 0, 0,
	0, 716, 0, 0, 0, 0, 717, 0, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 1806, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 0, 0, 718, 0, 2006, 0, 0,
	1801, 0, 0, 0, 4035, 4036, 719, 0, 0, 0,
	4040, 4041, 0, 0, 0, 4044, 4045, 0, 0, 0,
	0, 0, 0, 4049, 0, 0, 0, 720, 0, 0,
	0, 1245, 0, 0, 4053, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 739,
	4058, 0, 0, 1245, 0, 1245, 265, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 721,
	0, 0, 0, 0, 1245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1245, 0, 0, 0, 1245,
	0, 0, 722, 0, 0, 0, 0, 0, 0, 0,
	1945, 0, 1948, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 723, 0, 1245, 724, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1245, 0, 1245, 0, 748, 0, 1245, 0, 0, 0,
	0, 0, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 1245, 0, 0, 0, 0, 738,
	0, 0, 0, 0, 0, 0, 1245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1245, 1245,
	0, 0, 0, 0, 0, 0, 0, 0, 735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1245, 0, 0, 1245, 1947, 1234,
	1241, 0, 0, 0, 265, 0, 0, 745, 0, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	1947, 265, 0, 0, 0, 0, 0, 815, 0, 0,
	0, 0, 0, 0, 815, 0, 0, 0, 746, 0,
	727, 0, 0, 0, 0, 261, 261, 683, 0, 0,
	0, 0, 0, 0, 2006, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 1245, 0, 0, 0, 0, 747, 0,
	0, 0, 0, 4289, 4290, 4291, 728, 0, 0, 0,
	1245, 743, 744, 741, 0, 0, 0, 0, 0, 736,
	2006, 2006, 729, 0, 0, 0, 2436, 0, 0, 4300,
	4301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4309, 4312, 2006,
	2006, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 737, 0, 0, 0,
	0, 0, 0, 0, 0, 731, 0, 0, 0, 0,
	0, 0, 2006, 0, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 0, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4355, 0, 0, 0, 749, 1245,
	1245, 0, 4362, 0, 0, 0, 1064, 0, 1064, 734,
	0, 0, 0, 0, 0, 4369, 0, 0, 1069, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4378, 1245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 265,
	1044, 0, 0, 1044, 1044, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4504, 0, 0,
	4507, 0, 0, 0, 0, 0, 1245, 0, 0, 0,
	0, 1245, 0, 0, 0, 0, 265, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2504,
	0, 0, 0, 0, 0, 2006, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 1064,
	0, 0, 0, 815, 265, 0, 265, 0, 265, 1853,
	265, 0, 265, 1853, 0, 0, 1245, 0, 0, 0,
	0, 0, 1069, 1069, 0, 0, 0, 0, 0, 0,
	1245, 0, 4560, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 1245, 1245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 265, 265, 265, 1245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1245, 0, 0, 0, 0, 0,
	1245, 0, 0, 0, 0, 1228, 2436, 0, 0, 0,
	0, 0, 0, 0, 0, 4312, 0, 1131, 0, 0,
	0, 1948, 0, 0, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2006, 0, 0, 0,
	0, 0, 733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1069, 0, 0, 109, 0, 0,
	0, 0, 716, 267, 267, 267, 0, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	0, 0, 0, 0, 4678, 4678, 4678, 719, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1245, 0, 0, 720, 0,
	0, 0, 0, 1245, 4699, 0, 0, 1245, 0, 1245,
	0, 0, 0, 0, 0, 0, 1245, 0, 0, 0,
	739, 0, 0, 0, 0, 0, 0, 1245, 1245, 0,
	0, 0, 0, 0, 0, 0, 0, 1245, 0, 0,
	721, 0, 0, 1241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1241,
	0, 4678, 1245, 722, 1245, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 1291, 0, 1291, 1291, 0, 0,
	0, 0, 0, 0, 0, 723, 1245, 0, 724, 265,
	0, 0, 0, 0, 0, 0, 1245, 0, 1245, 0,
	0, 1245, 0, 0, 0, 748, 0, 0, 0, 0,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1378, 0, 0, 0,
	738, 0, 1484, 0, 0, 0, 0, 0, 265, 0,
	0, 1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823,
	1245, 1245, 0, 109, 0, 0, 109, 0, 109, 265,
	0, 0, 265, 1814, 1808, 0, 265, 0, 265, 0,
	1245, 1780, 0, 0, 0, 265, 265, 0, 0, 0,
	1827, 0, 1245, 0, 0, 265, 0, 1245, 0, 735,
	4678, 4834, 0, 0, 0, 0, 0, 1833, 0, 4838,
	0, 0, 109, 0, 0, 109, 1779, 0, 0, 0,
	0, 109, 1245, 0, 0, 0, 1799, 0, 0, 0,
	0, 0, 1245, 1245, 1245, 1796, 1611, 1612, 0, 0,
	0, 0, 0, 0, 0, 1245, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	726, 0, 0, 0, 0, 1245, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 2006, 0, 0, 746,
	0, 727, 0, 0, 265, 0, 0, 0, 0, 0,
	1802, 1803, 1804, 1805, 0, 0, 1245, 0, 1245, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1724, 815, 0, 747,
	0, 1245, 0, 0, 0, 0, 0, 728, 0, 0,
	0, 0, 743, 744, 741, 0, 0, 0, 1818, 0,
	736, 1828, 0, 729, 0, 265, 0, 815, 1807, 1809,
	2006, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 0, 1825, 0, 0,
	0, 0, 0, 0, 1794, 1795, 0, 0, 0, 0,
	0, 0, 0, 1245, 0, 730, 0, 737, 0, 0,
	1245, 0, 1816, 0, 0, 0, 731, 0, 0, 0,
	1245, 1245, 0, 0, 0, 265, 2504, 1800, 0, 0,
	732, 0, 0, 0, 0, 740, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 265, 1853, 0, 749,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	734, 0, 0, 0, 0, 1245, 0, 0, 1245, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1245, 1245, 0, 1815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 265, 265, 265, 265,
	0, 0, 0, 0, 0, 265, 0, 0, 265, 0,
	0, 0, 0, 0, 2006, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 1778, 0, 1810, 1811, 1812, 1821,
	1822, 1823, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 1806, 0, 1814, 1808, 265, 0, 0,
	0, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	0, 1245, 1827, 0, 0, 0, 1801, 0, 0, 0,
	0, 0, 0, 0, 1245, 1963, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	1972, 0, 1484, 1819, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 267, 0, 267, 267, 0, 0, 267, 0,
	1328, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 1291, 0, 0, 0, 0, 1228, 0, 1484,
	0, 1245, 0, 0, 1245, 0, 0, 0, 1245, 0,
	0, 0, 0, 1228, 0, 0, 0, 0, 1245, 1245,
	0, 0, 0, 0, 267, 1328, 267, 267, 0, 1328,
	267, 267, 0, 0, 0, 1245, 1328, 0, 0, 0,
	0, 0, 1802, 1803, 1804, 1805, 0, 0, 0, 267,
	0, 0, 1785, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793,
	1328, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 4063, 0,
	1818, 0, 0, 1828, 0, 0, 1328, 0, 267, 267,
	1807, 1809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1328, 1824, 0, 1825,
	0, 0, 0, 1328, 267, 267, 1794, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1328, 0, 0,
	0, 0, 0, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	109, 109, 0, 109, 109, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1241, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 109, 109,
	0, 109, 109, 109, 0, 0, 0, 0, 0, 0,
	0, 1947, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 1830, 0, 0, 0, 0, 0, 833, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2240, 0, 835, 0,
	2247, 0, 0, 836, 0, 0, 0, 0, 0, 0,
	0, 265, 2260, 0, 0, 265, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 0, 0, 2272, 0,
	2272, 0, 0, 0, 0, 0, 2279, 0, 1245, 0,
	1245, 0, 837, 0, 854, 0, 265, 0, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1228, 0, 0, 1064, 0, 838,
	0, 0, 0, 0, 839, 1819, 0, 2247, 0, 0,
	2304, 109, 109, 0, 0, 0, 0, 265, 265, 0,
	0, 265, 0, 0, 0, 0, 863, 0, 1947, 0,
	0, 2324, 840, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 265, 0, 2340, 861, 2342, 0, 2344,
	0, 2346, 0, 2347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 841, 0, 0, 842, 2373, 2374, 2375, 0, 0,
	0, 0, 0, 0, 0, 0, 865, 0, 1817, 0,
	0, 748, 0, 0, 265, 0, 1791, 1792, 1798, 1820,
	1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784,
	1786, 1787, 815, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 267, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1328, 0, 0, 0, 267, 267,
	267, 0, 265, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 1241, 267, 0, 0, 1328, 0, 0, 0,
	0, 0, 0, 0, 0, 864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 859, 0, 271, 0, 0,
	267, 0, 0, 0, 0, 265, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 1778,
	0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1808, 1328, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 1328, 0, 843, 0, 1827, 0, 0,
	0, 0, 109, 0, 0, 265, 845, 265, 0, 0,
	0, 0, 807, 0, 1833, 0, 0, 1328, 0, 0,
	1228, 1228, 0, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1799, 0, 0, 0, 846, 807, 0,
	0, 0, 1796, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2751, 747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 832, 0,
	856, 0, 0, 0, 0, 0, 0, 0, 0, 847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 1803, 1804,
	1805, 0, 0, 0, 853, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 848, 0, 0, 0, 849, 868, 267, 867, 1328,
	1328, 267, 850, 0, 0, 0, 0, 0, 0, 1328,
	2799, 0, 0, 1291, 0, 1818, 851, 1291, 1828, 1291,
	0, 860, 0, 0, 0, 1807, 1809, 869, 0, 866,
	0, 0, 0, 0, 0, 749, 2260, 0, 0, 0,
	0, 0, 1824, 0, 1825, 0, 0, 0, 1241, 1241,
	0, 1794, 1795, 0, 267, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 1816,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 267, 0, 267, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 1328, 0, 1328, 0, 1328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1328, 1328, 109, 0, 0, 1826, 0,
	0, 0, 0, 0, 1328, 267, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 1484, 1328, 0, 1328, 1328,
	1328, 1228, 0, 0, 0, 0, 0, 1830, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 267, 0, 267, 0, 267, 0, 267,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2247, 0, 0, 0,
	1806, 0, 0, 0, 0, 2260, 0, 0, 0, 0,
	0, 0, 0, 267, 267, 267, 267, 0, 0, 0,
	0, 0, 0, 1801, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 265, 0, 0, 0, 0, 3087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1328, 0, 265,
	0, 0, 0, 0, 0, 3098, 0, 3101, 0, 265,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1123, 1241,
	109, 0, 0, 0, 0, 0, 1228, 0, 0, 0,
	0, 0, 0, 0, 1228, 0, 0, 3129, 1484, 3131,
	1484, 0, 0, 0, 0, 0, 3137, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	1328, 1791, 1792, 1798, 1820, 1797, 1793, 265, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0,
	1291, 0, 0, 0, 0, 0, 0, 0, 3165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 1241, 0, 0, 0, 0, 0,
	0, 0, 1241, 0, 0, 0, 0, 267, 0, 0,
	1326, 0, 0, 0, 0, 1947, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 267, 0, 0, 0, 267, 0, 267, 0, 0,
	0, 0, 0, 0, 267, 267, 0, 0, 0, 0,
	1328, 1328, 0, 0, 267, 1384, 0, 0, 0, 1384,
	0, 1947, 0, 1947, 0, 0, 1326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 0, 0, 0, 0, 265, 0,
	1326, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 267, 0, 0, 1326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1326, 0, 0, 0,
	0, 0, 0, 1326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 1328, 0, 0, 1326, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	1328, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1947, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1326, 0, 267, 0, 267, 0, 1328, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 1291, 0, 0, 0, 1484, 1484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1328, 0, 1328, 0, 0, 0, 3408, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 1328, 2504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 3459, 3461,
	0, 0, 2260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 267, 267, 267, 0,
	0, 0, 0, 0, 267, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 3562, 0, 0, 0, 3566, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1947, 1947, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3619, 0, 0, 0,
	0, 0, 0, 0, 1384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 807, 0, 0, 0,
	0, 0, 0, 807, 0, 0, 1326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1327, 0, 0, 0, 0, 0, 0, 0, 0,
	1947, 0, 0, 0, 0, 0, 3661, 0, 1484, 0,
	0, 0, 0, 1947, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 109, 0, 0, 265, 1385, 0, 0, 0,
	1385, 0, 1326, 0, 3674, 0, 0, 1327, 0, 0,
	0, 0, 0, 1326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1384, 0, 0,
	1947, 1327, 265, 1947, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1328, 0, 1327, 0, 0,
	0, 0, 0, 0, 1327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1328, 0, 0,
	0, 0, 0, 1327, 0, 0, 0, 0, 0, 1326,
	1326, 0, 0, 1328, 1328, 0, 265, 0, 0, 1384,
	267, 0, 0, 0, 267, 267, 0, 0, 1777, 1778,
	0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 1808, 0, 0, 0, 267, 0, 0, 1780, 0,
	1328, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 0, 0, 0, 0, 0,
	265, 0, 0, 1779, 0, 0, 267, 267, 0, 1328,
	267, 0, 0, 1799, 0, 0, 0, 267, 0, 0,
	0, 0, 1796, 1326, 0, 1326, 0, 1326, 0, 0,
	0, 1328, 267, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1326, 1326, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 1326, 0, 0, 0, 0, 0,
	0, 0, 0, 1328, 0, 0, 1326, 1328, 1326, 1326,
	1326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1947, 0, 1947,
	0, 0, 807, 0, 1328, 0, 0, 1802, 1803, 1804,
	1805, 0, 0, 267, 0, 0, 0, 1785, 1328, 0,
	1328, 0, 0, 0, 1328, 0, 0, 0, 0, 0,
	0, 267, 2260, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 1328, 267, 0, 0, 0, 0, 0, 0,
	2260, 0, 0, 0, 1328, 1818, 0, 0, 1828, 0,
	3953, 267, 0, 0, 0, 1807, 1809, 0, 0, 0,
	0, 0, 0, 0, 0, 2260, 0, 0, 0, 0,
	3971, 0, 1824, 0, 1825, 0, 0, 0, 0, 0,
	0, 1794, 1795, 0, 0, 0, 1328, 1328, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 1384, 0, 1816,
	0, 0, 0, 0, 0, 1385, 0, 0, 0, 1328,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4020, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 267, 1328, 267, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	1384, 0, 267, 1327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1385, 0,
	0, 1328, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 1328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1384,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1384, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1327, 1327, 0, 4156, 0, 0, 0, 0, 0, 0,
	1385, 0, 0, 0, 0, 0, 0, 0, 0, 2260,
	0, 1328, 0, 0, 0, 0, 0, 0, 0, 0,
	1326, 1326, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 3692, 0, 0, 0, 0,
	0, 0, 1384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 948, 0, 997, 0,
	0, 0, 0, 2260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4244, 1327, 0, 1327, 0, 1327, 0,
	0, 0, 956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1327, 1327, 0, 0, 971, 0,
	954, 953, 0, 0, 0, 1327, 0, 0, 0, 0,
	0, 0, 0, 0, 1384, 0, 0, 1327, 0, 1327,
	1327, 1327, 973, 0, 0, 0, 0, 0, 955, 0,
	1326, 0, 0, 958, 0, 0, 0, 0, 1005, 0,
	0, 0, 0, 267, 0, 0, 0, 968, 969, 0,
	0, 0, 0, 0, 0, 0, 986, 0, 0, 0,
	0, 0, 0, 0, 1328, 0, 0, 0, 0, 1328,
	267, 0, 0, 0, 998, 960, 807, 0, 1326, 0,
	961, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 962, 0, 0, 0, 0, 0, 267, 1326,
	0, 995, 0, 267, 0, 0, 0, 0, 267, 0,
	0, 1326, 0, 1326, 1328, 0, 0, 0, 0, 0,
	4343, 0, 0, 0, 0, 0, 0, 0, 1326, 0,
	0, 996, 0, 0, 0, 0, 0, 0, 1385, 1328,
	1328, 1328, 0, 0, 0, 0, 0, 964, 0, 0,
	0, 0, 0, 0, 0, 952, 1328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 965, 966, 267, 0, 1328, 0,
	0, 2260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 974, 972, 0, 0, 0, 0, 0,
	0, 967, 0, 1328, 0, 983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1002, 994, 0, 0, 0, 0, 0,
	0, 1385, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 999, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4473, 1484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1385, 0, 0, 0, 0, 0, 0, 0, 959, 0,
	0, 1004, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1328, 1385, 1328, 0, 0,
	0, 0, 0, 0, 957, 0, 0, 0, 990, 991,
	0, 0, 0, 0, 0, 1328, 1328, 0, 0, 0,
	0, 993, 0, 0, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 988, 0, 0, 0, 0, 0,
	0, 0, 1003, 984, 0, 0, 977, 975, 0, 980,
	0, 0, 0, 0, 0, 981, 0, 0, 950, 0,
	1000, 267, 0, 0, 1328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1328, 0, 1328, 267, 0, 1328,
	267, 0, 951, 4565, 0, 0, 0, 0, 0, 0,
	1328, 1327, 1327, 0, 992, 0, 982, 0, 0, 0,
	267, 0, 979, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1001, 0, 0, 0, 0, 0, 0,
	0, 985, 0, 0, 0, 0, 0, 0, 1328, 1328,
	963, 0, 0, 1385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 987, 0, 0, 0, 1328, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 267, 0, 0, 0, 1328, 0, 0, 0, 989,
	0, 0, 4616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 1328, 1328, 0, 0, 1385, 0, 0, 0, 0,
	0, 0, 0, 1328, 0, 0, 0, 4655, 1384, 0,
	0, 1327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1327,
	0, 0, 0, 1326, 1326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1328, 0, 1328, 0, 0, 0,
	0, 4719, 0, 0, 0, 0, 0, 0, 0, 0,
	1327, 0, 0, 0, 0, 0, 0, 0, 0, 1328,
	0, 0, 1327, 0, 1327, 0, 0, 0, 267, 0,
	1326, 0, 0, 0, 0, 0, 0, 0, 0, 1327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1328, 0, 0, 0, 0, 0, 0, 1328, 267,
	0, 1326, 0, 1326, 0, 0, 0, 0, 1328, 1328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1326, 0, 0, 0, 1326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1328, 0, 0, 1328, 0, 0, 0,
	0, 0, 0, 0, 1326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1326, 0,
	1326, 0, 0, 0, 1384, 0, 0, 0, 0, 0,
	0, 807, 267, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 1326, 0, 0, 1777, 1778, 0, 1810, 1811,
	1812, 1821, 1822, 1823, 1326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1814, 1808, 0,
	0, 0, 0, 0, 0, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1326, 1326, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 1326,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1384, 0, 0, 1384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 1328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1328, 1328, 0, 0,
	0, 0, 0, 0, 1802, 1803, 1804, 1805, 0, 0,
	0, 0, 0, 1328, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1384, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 0, 0, 1828, 0, 0, 1384, 0,
	0, 0, 1807, 1809, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	0, 1825, 0, 0, 0, 0, 1385, 0, 1794, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 1385,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1385, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1385, 0,
	0, 0, 0, 0, 0, 1826, 0, 0, 0, 0,
	0, 0, 0, 0, 1327, 1327, 0, 0, 0, 0,
	0, 0, 0, 1815, 0, 0, 0, 0, 0, 267,
	0, 1384, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1327, 0, 0, 0, 0, 0, 0, 0, 1777,
	1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 0,
	0, 1814, 1808, 0, 0, 0, 0, 0, 0, 1780,
	1327, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	1801, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1327, 0, 1327, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 1819, 0, 0,
	0, 0, 0, 1385, 1799, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 1327, 0, 0, 0, 1327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1327,
	0, 1327, 0, 0, 1326, 1385, 0, 0, 0, 1326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1327, 0, 0, 0, 0, 1802, 1803,
	1804, 1805, 0, 0, 0, 1327, 0, 0, 1785, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 1791, 1792,
	1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 1326, 0, 0, 0, 0, 0,
	0, 0, 3237, 0, 0, 0, 1818, 1327, 1327, 1828,
	0, 0, 0, 0, 0, 0, 1807, 1809, 0, 1326,
	1326, 1326, 0, 0, 0, 0, 0, 0, 0, 0,
	1327, 0, 0, 1824, 0, 1825, 1326, 0, 0, 0,
	0, 0, 1794, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 1326, 0, 0, 0, 0, 0, 1384, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1385, 0, 1800, 1385, 0, 0, 0,
	0, 0, 0, 1384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1815, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 1385, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1385,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 0, 1384, 0, 1384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 1326, 1326, 0, 0, 0,
	0, 0, 0, 1777, 1778, 1384, 1810, 1811, 1812, 1821,
	1822, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 1814, 1808, 0, 0, 0,
	0, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 1326, 0, 0, 0, 0, 1833,
	0, 0, 0, 0, 1384, 0, 1326, 0, 1779, 1326,
	0, 0, 1385, 0, 0, 0, 0, 0, 1799, 0,
	1384, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1326, 1326,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 1326, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0,
	1384, 0, 0, 0, 0, 1326, 3236, 0, 0, 0,
	0, 0, 1802, 1803, 1804, 1805, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1326, 1326, 1326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1384, 0, 0, 0, 0, 0, 0,
	1818, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	1807, 1809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1384, 0, 0, 0, 1824, 0, 1825,
	0, 0, 0, 0, 0, 1327, 1794, 1795, 0, 0,
	1327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1384, 0, 1326, 0, 0, 1800,
	0, 0, 0, 1777, 1778, 0, 1810, 1811, 1812, 1821,
	1822, 1823, 0, 0, 0, 0, 0, 0, 0, 1384,
	0, 0, 0, 0, 0, 1327, 1808, 0, 0, 0,
	0, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 1826, 0, 0, 0, 0, 0, 0,
	1327, 1327, 1327, 0, 0, 0, 0, 0, 0, 1833,
	0, 1815, 0, 0, 0, 0, 0, 1327, 1779, 0,
	0, 0, 1830, 0, 0, 0, 0, 0, 1799, 0,
	0, 1384, 0, 1327, 0, 0, 0, 1796, 1326, 1385,
	0, 0, 0, 0, 0, 0, 0, 0, 1326, 1326,
	0, 1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823,
	0, 0, 0, 0, 1385, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 1808, 1806, 0, 0, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 1384, 0, 0, 1326, 0, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 1802, 1803, 1804, 1805, 1779, 0, 0, 0,
	0, 0, 1785, 0, 0, 1819, 1799, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	1818, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	1807, 1809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1385, 0, 1385, 0,
	0, 0, 0, 0, 0, 0, 1794, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 1327, 1327, 0, 0,
	1802, 1803, 1804, 1805, 1816, 0, 1385, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 1817, 1800,
	0, 0, 0, 0, 0, 0, 1791, 1792, 1798, 1820,
	1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784,
	1786, 1787, 0, 0, 0, 0, 0, 0, 1818, 0,
	3233, 1828, 0, 0, 0, 1327, 0, 0, 1807, 1809,
	0, 0, 0, 0, 0, 1385, 0, 1327, 0, 0,
	1327, 0, 0, 0, 0, 1824, 1326, 1825, 0, 0,
	0, 1385, 0, 0, 1794, 1795, 1326, 1326, 0, 0,
	0, 0, 1830, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1816, 1326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 0, 1327,
	1327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1327,
	0, 0, 0, 0, 0, 1806, 0, 0, 0, 0,
	0, 1385, 0, 0, 0, 0, 1327, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 1327, 1327, 1327, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 1385, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 1385, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 0, 0, 0, 0, 1385, 0, 1327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 1817, 0,
	1385, 0, 0, 0, 0, 0, 1791, 1792, 1798, 1820,
	1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784,
	1786, 1787, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1385, 0, 0, 0, 0, 0, 0, 1327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1327,
	1327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793,
	0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	0, 0, 0, 0, 1385, 0, 0, 1327, 3232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1382, 0, 0, 1327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1327, 1327, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 1387, 282,
	283, 1388, 1389, 1390, 1327, 1391, 629, 1392, 1393, 1394,
	1395, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 1396, 634, 294,
	295, 296, 297, 298, 299, 1397, 1398, 0, 300, 635,
	636, 637, 1399, 301, 302, 638, 1400, 1329, 1401, 303,
	304, 305, 306, 307, 308, 309, 0, 1402, 311, 312,
	313, 310, 314, 1403, 315, 0, 316, 317, 318, 319,
	320, 321, 1404, 322, 323, 324, 1186, 325, 326, 327,
	1405, 1406, 1408, 1407, 1409, 1410, 1411, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 1412, 337, 334, 335,
	1413, 338, 336, 339, 1414, 340, 341, 342, 1415, 1416,
	343, 344, 345, 1417, 346, 347, 1418, 348, 349, 350,
	1419, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 1420, 272, 1421,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 1422, 369, 370, 1423, 1424, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 1425, 383, 647, 1426, 648, 384, 1427, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 1189, 390,
	391, 1428, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 1429, 1188, 400, 652, 653,
	1430, 654, 1431, 402, 403, 1190, 655, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 1432, 414, 416, 415, 1433, 417, 656, 1193,
	418, 419, 1194, 1434, 420, 0, 0, 0, 421, 422,
	425, 1435, 1436, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 1437,
	274, 1197, 466, 467, 1438, 657, 468, 658, 470, 471,
	1439, 0, 472, 0, 1440, 1441, 474, 475, 476, 1442,
	1443, 477, 478, 659, 1198, 479, 1199, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	1444, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 1445, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 1446, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 1447, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 1448,
	555, 556, 554, 557, 558, 559, 1449, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 1450, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 1451, 587, 588, 0, 584, 575, 1452, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 1453, 597, 670,
	671, 672, 673, 1454, 606, 1455, 598, 599, 600, 674,
	601, 675, 1456, 602, 603, 604, 605, 0, 607, 608,
	1457, 1458, 609, 610, 611, 613, 614, 612, 615, 1459,
	616, 1460, 0, 617, 618, 619, 676, 677, 678, 1461,
	621, 620, 622, 679, 1462, 623, 1463, 1464, 1465, 1466,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1382, 0, 0, 0, 0, 0, 0,
	0, 2729, 0, 0, 0, 0, 0, 0, 0, 2730,
	275, 277, 276, 278, 279, 280, 281, 1387, 282, 283,
	1388, 1389, 1390, 0, 1391, 629, 1392, 1393, 1394, 1395,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 1396, 634, 294, 295,
	296, 297, 298, 299, 1397, 1398, 0, 300, 635, 636,
	637, 1399, 301, 302, 638, 1400, 1329, 1401, 303, 304,
	305, 306, 307, 308, 309, 0, 1402, 311, 312, 313,
	310, 314, 1403, 315, 0, 316, 317, 318, 319, 320,
	321, 1404, 322, 323, 324, 1186, 325, 326, 327, 1405,
	1406, 1408, 1407, 1409, 1410, 1411, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 1412, 337, 334, 335, 1413,
	338, 336, 339, 1414, 340, 341, 342, 1415, 1416, 343,
	344, 345, 1417, 346, 347, 1418, 348, 349, 350, 1419,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 1420, 272, 1421, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 1422, 369, 370, 1423, 1424, 1187, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 1425, 383, 647, 1426, 648, 384, 1427, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 1189, 390, 391,
	1428, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 1429, 1188, 400, 652, 653, 1430,
	654, 1431, 402, 403, 1190, 655, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 1432, 414, 416, 415, 1433, 417, 656, 1193, 418,
	419, 1194, 1434, 420, 0, 0, 0, 421, 422, 425,
	1435, 1436, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1437, 274,
	1197, 466, 467, 1438, 657, 468, 658, 470, 471, 1439,
	0, 472, 0, 1440, 1441, 474, 475, 476, 1442, 1443,
	477, 478, 659, 1198, 479, 1199, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 1444,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 1445, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 1446, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 1447, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 1448, 555,
	556, 554, 557, 558, 559, 1449, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 1450, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	1451, 587, 588, 0, 584, 575, 1452, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 1453, 597, 670, 671,
	672, 673, 1454, 606, 1455, 598, 599, 600, 674, 601,
	675, 1456, 602, 603, 604, 605, 0, 607, 608, 1457,
	1458, 609, 610, 611, 613, 614, 612, 615, 1459, 616,
	1460, 0, 617, 618, 619, 676, 677, 678, 1461, 621,
	620, 622, 679, 1462, 623, 1463, 1464, 1465, 1466, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1382, 0, 0, 0, 0, 3701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3703, 275, 277, 276,
	278, 279, 280, 281, 1387, 282, 283, 1388, 1389, 1390,
	0, 1391, 629, 1392, 1393, 1394, 1395, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 1396, 634, 294, 295, 296, 297, 298,
	299, 1397, 1398, 0, 300, 635, 636, 637, 1399, 301,
	302, 638, 1400, 1329, 1401, 303, 304, 305, 306, 307,
	308, 309, 0, 1402, 311, 312, 313, 310, 314, 1403,
	315, 0, 316, 317, 318, 319, 320, 321, 1404, 322,
	323, 324, 1186, 325, 326, 327, 1405, 1406, 1408, 1407,
	1409, 1410, 1411, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 1412, 337, 334, 335, 1413, 338, 336, 339,
	1414, 340, 341, 342, 1415, 1416, 343, 344, 345, 1417,
	346, 347, 1418, 348, 349, 350, 1419, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 1420, 272, 1421, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 1422, 369,
	370, 1423, 1424, 1187, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 1425, 383,
	647, 1426, 648, 384, 1427, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 1189, 390, 391, 1428, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 1429, 1188, 400, 652, 653, 1430, 654, 1431, 402,
	403, 1190, 655, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 1432, 414,
	416, 415, 1433, 417, 656, 1193, 418, 419, 1194, 1434,
	420, 0, 0, 0, 421, 422, 425, 1435, 1436, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1437, 274, 1197, 466, 467,
	1438, 657, 468, 658, 470, 471, 1439, 0, 472, 0,
	1440, 1441, 474, 475, 476, 1442, 1443, 477, 478, 659,
	1198, 479, 1199, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 1444, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 1445, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 1446, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	1447, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 1448, 555, 556, 554, 557,
	558, 559, 1449, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	1450, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 1451, 587, 588,
	0, 584, 575, 1452, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 1453, 597, 670, 671, 672, 673, 1454,
	606, 1455, 598, 599, 600, 674, 601, 675, 1456, 602,
	603, 604, 605, 0, 607, 608, 1457, 1458, 609, 610,
	611, 613, 614, 612, 615, 1459, 616, 1460, 0, 617,
	618, 619, 676, 677, 678, 1461, 621, 620, 622, 679,
	1462, 623, 1463, 1464, 1465, 1466, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1382, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4091, 275, 277,
	276, 278, 279, 280, 281, 1387, 282, 283, 1388, 1389,
	1390, 0, 1391, 629, 1392, 1393, 1394, 1395, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 1396, 634, 294, 295, 296, 297,
	298, 299, 1397, 1398, 0, 300, 635, 636, 637, 1399,
	301, 302, 638, 1400, 1329, 1401, 303, 304, 305, 306,
	307, 308, 309, 0, 1402, 311, 312, 313, 310, 314,
	1403, 315, 0, 316, 317, 318, 319, 320, 321, 1404,
	322, 323, 324, 1186, 325, 326, 327, 1405, 1406, 1408,
	1407, 1409, 1410, 1411, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 1412, 337, 334, 335, 1413, 338, 336,
	339, 1414, 340, 341, 342, 1415, 1416, 343, 344, 345,
	1417, 346, 347, 1418, 348, 349, 350, 1419, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 1420, 272, 1421, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 1422,
	369, 370, 1423, 1424, 1187, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 1425,
	383, 647, 1426, 648, 384, 1427, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 1189, 390, 391, 1428, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 1429, 1188, 400, 652, 653, 1430, 654, 1431,
	402, 403, 1190, 655, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 1432,
	414, 416, 415, 1433, 417, 656, 1193, 418, 419, 1194,
	1434, 420, 0, 0, 0, 421, 422, 425, 1435, 1436,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1437, 274, 1197, 466,
	467, 1438, 657, 468, 658, 470, 471, 1439, 0, 472,
	0, 1440, 1441, 474, 475, 476, 1442, 1443, 477, 478,
	659, 1198, 479, 1199, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 1444, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 1445, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 1446,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 1447, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 1448, 555, 556, 554,
	557, 558, 559, 1449, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 1450, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 1451, 587,
	588, 0, 584, 575, 1452, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 1453, 597, 670, 671, 672, 673,
	1454, 606, 1455, 598, 599, 600, 674, 601, 675, 1456,
	602, 603, 604, 605, 0, 607, 608, 1457, 1458, 609,
	610, 611, 613, 614, 612, 615, 1459, 616, 1460, 0,
	617, 618, 619, 676, 677, 678, 1461, 621, 620, 622,
	679, 1462, 623, 1463, 1464, 1465, 1466, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 1382, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4295, 275, 277, 276, 278, 279, 280,
	281, 1387, 282, 283, 1388, 1389, 1390, 0, 1391, 629,
	1392, 1393, 1394, 1395, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	1396, 634, 294, 295, 296, 297, 298, 299, 1397, 1398,
	0, 300, 635, 636, 637, 1399, 301, 302, 638, 1400,
	1329, 1401, 303, 304, 305, 306, 307, 308, 309, 0,
	1402, 311, 312, 313, 310, 314, 1403, 315, 0, 316,
	317, 318, 319, 320, 321, 1404, 322, 323, 324, 1186,
	325, 326, 327, 1405, 1406, 1408, 1407, 1409, 1410, 1411,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 1412,
	337, 334, 335, 1413, 338, 336, 339, 1414, 340, 341,
	342, 1415, 1416, 343, 344, 345, 1417, 346, 347, 1418,
	348, 349, 350, 1419, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	1420, 272, 1421, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 1422, 369, 370, 1423, 1424,
	1187, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 1425, 383, 647, 1426, 648,
	384, 1427, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 1189, 390, 391, 1428, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 1429, 1188,
	400, 652, 653, 1430, 654, 1431, 402, 403, 1190, 655,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 1432, 414, 416, 415, 1433,
	417, 656, 1193, 418, 419, 1194, 1434, 420, 0, 0,
	0, 421, 422, 425, 1435, 1436, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1437, 274, 1197, 466, 467, 1438, 657, 468,
	658, 470, 471, 1439, 0, 472, 0, 1440, 1441, 474,
	475, 476, 1442, 1443, 477, 478, 659, 1198, 479, 1199,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 1444, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 1445,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 1446, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 1447, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 1448, 555, 556, 554, 557, 558, 559, 1449,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 1450, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 1451, 587, 588, 0, 584, 575,
	1452, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	1453, 597, 670, 671, 672, 673, 1454, 606, 1455, 598,
	599, 600, 674, 601, 675, 1456, 602, 603, 604, 605,
	0, 607, 608, 1457, 1458, 609, 610, 611, 613, 614,
	612, 615, 1459, 616, 1460, 0, 617, 618, 619, 676,
	677, 678, 1461, 621, 620, 622, 679, 1462, 623, 1463,
	1464, 1465, 1466, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 1382, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4165,
	275, 277, 276, 278, 279, 280, 281, 1387, 282, 283,
	1388, 1389, 1390, 0, 1391, 629, 1392, 1393, 1394, 1395,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 1396, 634, 294, 295,
	296, 297, 298, 299, 1397, 1398, 0, 300, 635, 636,
	637, 1399, 301, 302, 638, 1400, 1329, 1401, 303, 304,
	305, 306, 307, 308, 309, 0, 1402, 311, 312, 313,
	310, 314, 1403, 315, 0, 316, 317, 318, 319, 320,
	321, 1404, 322, 323, 324, 1186, 325, 326, 327, 1405,
	1406, 1408, 1407, 1409, 1410, 1411, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 1412, 337, 334, 335, 1413,
	338, 336, 339, 1414, 340, 341, 342, 1415, 1416, 343,
	344, 345, 1417, 346, 347, 1418, 348, 349, 350, 1419,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 1420, 272, 1421, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 1422, 369, 370, 1423, 1424, 1187, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 1425, 383, 647, 1426, 648, 384, 1427, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 1189, 390, 391,
	1428, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 1429, 1188, 400, 652, 653, 1430,
	654, 1431, 402, 403, 1190, 655, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 1432, 414, 416, 415, 1433, 417, 656, 1193, 418,
	419, 1194, 1434, 420, 0, 0, 0, 421, 422, 425,
	1435, 1436, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1437, 274,
	1197, 466, 467, 1438, 657, 468, 658, 470, 471, 1439,
	0, 472, 0, 1440, 1441, 474, 475, 476, 1442, 1443,
	477, 478, 659, 1198, 479, 1199, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 1444,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 1445, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 1446, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 1447, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 1448, 555,
	556, 554, 557, 558, 559, 1449, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 1450, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	1451, 587, 588, 0, 584, 575, 1452, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 1453, 597, 670, 671,
	672, 673, 1454, 606, 1455, 598, 599, 600, 674, 601,
	675, 1456, 602, 603, 604, 605, 0, 607, 608, 1457,
	1458, 609, 610, 611, 613, 614, 612, 615, 1459, 616,
	1460, 0, 617, 618, 619, 676, 677, 678, 1461, 621,
	620, 622, 679, 1462, 623, 1463, 1464, 1465, 1466, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 1382,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4021, 275, 277, 276, 278,
	279, 280, 281, 1387, 282, 283, 1388, 1389, 1390, 0,
	1391, 629, 1392, 1393, 1394, 1395, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 1396, 634, 294, 295, 296, 297, 298, 299,
	1397, 1398, 0, 300, 635, 636, 637, 1399, 301, 302,
	638, 1400, 1329, 1401, 303, 304, 305, 306, 307, 308,
	309, 0, 1402, 311, 312, 313, 310, 314, 1403, 315,
	0, 316, 317, 318, 319, 320, 321, 1404, 322, 323,
	324, 1186, 325, 326, 327, 1405, 1406, 1408, 1407, 1409,
	1410, 1411, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 1412, 337, 334, 335, 1413, 338, 336, 339, 1414,
	340, 341, 342, 1415, 1416, 343, 344, 345, 1417, 346,
	347, 1418, 348, 349, 350, 1419, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 1420, 272, 1421, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 1422, 369, 370,
	1423, 1424, 1187, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 1425, 383, 647,
	1426, 648, 384, 1427, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 1189, 390, 391, 1428, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	1429, 1188, 400, 652, 653, 1430, 654, 1431, 402, 403,
	1190, 655, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 1432, 414, 416,
	415, 1433, 417, 656, 1193, 418, 419, 1194, 1434, 420,
	0, 0, 0, 421, 422, 425, 1435, 1436, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1437, 274, 1197, 466, 467, 1438,
	657, 468, 658, 470, 471, 1439, 0, 472, 0, 1440,
	1441, 474, 475, 476, 1442, 1443, 477, 478, 659, 1198,
	479, 1199, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 1444, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 1445, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 1446, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 1447,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 1448, 555, 556, 554, 557, 558,
	559, 1449, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 1450,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 1451, 587, 588, 0,
	584, 575, 1452, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 1453, 597, 670, 671, 672, 673, 1454, 606,
	1455, 598, 599, 600, 674, 601, 675, 1456, 602, 603,
	604, 605, 0, 607, 608, 1457, 1458, 609, 610, 611,
	613, 614, 612, 615, 1459, 616, 1460, 0, 617, 618,
	619, 676, 677, 678, 1461, 621, 620, 622, 679, 1462,
	623, 1463, 1464, 1465, 1466, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 1382, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3719, 275, 277, 276, 278, 279, 280, 281, 1387,
	282, 283, 1388, 1389, 1390, 0, 1391, 629, 1392, 1393,
	1394, 1395, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 1396, 634,
	294, 295, 296, 297, 298, 299, 1397, 1398, 0, 300,
	635, 636, 637, 1399, 301, 302, 638, 1400, 1329, 1401,
	303, 304, 305, 306, 307, 308, 309, 0, 1402, 311,
	312, 313, 310, 314, 1403, 315, 0, 316, 317, 318,
	319, 320, 321, 1404, 322, 323, 324, 1186, 325, 326,
	327, 1405, 1406, 1408, 1407, 1409, 1410, 1411, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 1412, 337, 334,
	335, 1413, 338, 336, 339, 1414, 340, 341, 342, 1415,
	1416, 343, 344, 345, 1417, 346, 347, 1418, 348, 349,
	350, 1419, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 1420, 272,
	1421, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 1422, 369, 370, 1423, 1424, 1187, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 1425, 383, 647, 1426, 648, 384, 1427,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 1189,
	390, 391, 1428, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 1429, 1188, 400, 652,
	653, 1430, 654, 1431, 402, 403, 1190, 655, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 1432, 414, 416, 415, 1433, 417, 656,
	1193, 418, 419, 1194, 1434, 420, 0, 0, 0, 421,
	422, 425, 1435, 1436, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1437, 274, 1197, 466, 467, 1438, 657, 468, 658, 470,
	471, 1439, 0, 472, 0, 1440, 1441, 474, 475, 476,
	1442, 1443, 477, 478, 659, 1198, 479, 1199, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 1444, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 1445, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 1446, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 1447, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	1448, 555, 556, 554, 557, 558, 559, 1449, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 1450, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 1451, 587, 588, 0, 584, 575, 1452, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 1453, 597,
	670, 671, 672, 673, 1454, 606, 1455, 598, 599, 600,
	674, 601, 675, 1456, 602, 603, 604, 605, 0, 607,
	608, 1457, 1458, 609, 610, 611, 613, 614, 612, 615,
	1459, 616, 1460, 0, 617, 618, 619, 676, 677, 678,
	1461, 621, 620, 622, 679, 1462, 623, 1463, 1464, 1465,
	1466, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 1382, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3547, 275, 277,
	276, 278, 279, 280, 281, 1387, 282, 283, 1388, 1389,
	1390, 0, 1391, 629, 1392, 1393, 1394, 1395, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 1396, 634, 294, 295, 296, 297,
	298, 299, 1397, 1398, 0, 300, 635, 636, 637, 1399,
	301, 302, 638, 1400, 1329, 1401, 303, 304, 305, 306,
	307, 308, 309, 0, 1402, 311, 312, 313, 310, 314,
	1403, 315, 0, 316, 317, 318, 319, 320, 321, 1404,
	322, 323, 324, 1186, 325, 326, 327, 1405, 1406, 1408,
	1407, 1409, 1410, 1411, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 1412, 337, 334, 335, 1413, 338, 336,
	339, 1414, 340, 341, 342, 1415, 1416, 343, 344, 345,
	1417, 346, 347, 1418, 348, 349, 350, 1419, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 1420, 272, 1421, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 1422,
	369, 370, 1423, 1424, 1187, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 1425,
	383, 647, 1426, 648, 384, 1427, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 1189, 390, 391, 1428, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 1429, 1188, 400, 652, 653, 1430, 654, 1431,
	402, 403, 1190, 655, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 1432,
	414, 416, 415, 1433, 417, 656, 1193, 418, 419, 1194,
	1434, 420, 0, 0, 0, 421, 422, 425, 1435, 1436,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1437, 274, 1197, 466,
	467, 1438, 657, 468, 658, 470, 471, 1439, 0, 472,
	0, 1440, 1441, 474, 475, 476, 1442, 1443, 477, 478,
	659, 1198, 479, 1199, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 1444, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 1445, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 1446,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 1447, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 1448, 555, 556, 554,
	557, 558, 559, 1449, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 1450, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 1451, 587,
	588, 0, 584, 575, 1452, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 1453, 597, 670, 671, 672, 673,
	1454, 606, 1455, 598, 599, 600, 674, 601, 675, 1456,
	602, 603, 604, 605, 0, 607, 608, 1457, 1458, 609,
	610, 611, 613, 614, 612, 615, 1459, 616, 1460, 0,
	617, 618, 619, 676, 677, 678, 1461, 621, 620, 622,
	679, 1462, 623, 1463, 1464, 1465, 1466, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 1382, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2586, 275, 277, 276, 278, 279, 280,
	281, 1387, 282, 283, 1388, 1389, 1390, 0, 1391, 629,
	1392, 1393, 1394, 1395, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	1396, 634, 294, 295, 296, 297, 298, 299, 1397, 1398,
	0, 300, 635, 636, 637, 1399, 301, 302, 638, 1400,
	1329, 1401, 303, 304, 305, 306, 307, 308, 309, 0,
	1402, 311, 312, 313, 310, 314, 1403, 315, 0, 316,
	317, 318, 319, 320, 321, 1404, 322, 323, 324, 1186,
	325, 326, 327, 1405, 1406, 1408, 1407, 1409, 1410, 1411,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 1412,
	337, 334, 335, 1413, 338, 336, 339, 1414, 340, 341,
	342, 1415, 1416, 343, 344, 345, 1417, 346, 347, 1418,
	348, 349, 350, 1419, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	1420, 272, 1421, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 1422, 369, 370, 1423, 1424,
	1187, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 1425, 383, 647, 1426, 648,
	384, 1427, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 1189, 390, 391, 1428, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 1429, 1188,
	400, 652, 653, 1430, 654, 1431, 402, 403, 1190, 655,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 1432, 414, 416, 415, 1433,
	417, 656, 1193, 418, 419, 1194, 1434, 420, 0, 0,
	0, 421, 422, 425, 1435, 1436, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1437, 274, 1197, 466, 467, 1438, 657, 468,
	658, 470, 471, 1439, 0, 472, 0, 1440, 1441, 474,
	475, 476, 1442, 1443, 477, 478, 659, 1198, 479, 1199,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 1444, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 1445,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 1446, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 1447, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 1448, 555, 556, 554, 557, 558, 559, 1449,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 1450, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 1451, 587, 588, 0, 584, 575,
	1452, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	1453, 597, 670, 671, 672, 673, 1454, 606, 1455, 598,
	599, 600, 674, 601, 675, 1456, 602, 603, 604, 605,
	0, 607, 608, 1457, 1458, 609, 610, 611, 613, 614,
	612, 615, 1459, 616, 1460, 0, 617, 618, 619, 676,
	677, 678, 1461, 621, 620, 622, 679, 1462, 623, 1463,
	1464, 1465, 1466, 624, 625, 680, 626, 627, 628, 0,
	0, 1478, 0, 1382, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2221,
	275, 277, 276, 278, 279, 280, 281, 1387, 282, 283,
	1388, 1389, 1390, 0, 1391, 629, 1392, 1393, 1394, 1395,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 1396, 634, 294, 295,
	296, 297, 298, 299, 1397, 1398, 0, 300, 635, 636,
	637, 1399, 301, 302, 638, 1400, 1329, 1401, 303, 304,
	305, 306, 307, 308, 309, 0, 1402, 311, 312, 313,
	310, 314, 1403, 315, 0, 316, 317, 318, 319, 320,
	321, 1404, 322, 323, 324, 1186, 325, 326, 327, 1405,
	1406, 1408, 1407, 1409, 1410, 1411, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 1412, 337, 334, 335, 1413,
	338, 336, 339, 1414, 340, 341, 342, 1415, 1416, 343,
	344, 345, 1417, 346, 347, 1418, 348, 349, 350, 1419,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 1420, 272, 1421, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 1422, 369, 370, 1423, 1424, 1187, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 1425, 383, 647, 1426, 648, 384, 1427, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 1189, 390, 391,
	1428, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 1429, 1188, 400, 652, 653, 1430,
	654, 1431, 402, 403, 1190, 655, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 1432, 414, 416, 415, 1433, 417, 656, 1193, 418,
	419, 1194, 1434, 420, 0, 0, 0, 421, 422, 425,
	1435, 1436, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1437, 274,
	1197, 466, 467, 1438, 657, 468, 658, 470, 471, 1439,
	0, 472, 0, 1440, 1441, 474, 475, 476, 1442, 1443,
	477, 478, 659, 1198, 479, 1199, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 1444,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 1445, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 1446, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 1447, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 1448, 555,
	556, 554, 557, 558, 559, 1449, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 1450, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	1451, 587, 588, 0, 584, 575, 1452, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 1453, 597, 670, 671,
	672, 673, 1454, 606, 1455, 598, 599, 600, 674, 601,
	675, 1456, 602, 603, 604, 605, 0, 607, 608, 1457,
	1458, 609, 610, 611, 613, 614, 612, 615, 1459, 616,
	1460, 0, 617, 618, 619, 676, 677, 678, 1461, 621,
	620, 622, 679, 1462, 623, 1463, 1464, 1465, 1466, 624,
	625, 680, 626, 627, 628, 1379, 0, 1382, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 1387, 282, 283, 1388, 1389, 1390, 0, 1391, 629,
	1392, 1393, 1394, 1395, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	1396, 634, 294, 295, 296, 297, 298, 299, 1397, 1398,
	0, 300, 635, 636, 637, 1399, 301, 302, 638, 1400,
	1329, 1401, 303, 304, 305, 306, 307, 308, 309, 0,
	1402, 311, 312, 313, 310, 314, 1403, 315, 0, 316,
	317, 318, 319, 320, 321, 1404, 322, 323, 324, 1186,
	325, 326, 327, 1405, 1406, 1408, 1407, 1409, 1410, 1411,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 1412,
	337, 334, 335, 1413, 338, 336, 339, 1414, 340, 341,
	342, 1415, 1416, 343, 344, 345, 1417, 346, 347, 1418,
	348, 349, 350, 1419, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	1420, 272, 1421, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 1422, 369, 370, 1423, 1424,
	1187, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 1425, 383, 647, 1426, 648,
	384, 1427, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 1189, 390, 391, 1428, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 1429, 1188,
	400, 652, 653, 1430, 654, 1431, 402, 403, 1190, 655,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 1432, 414, 416, 415, 1433,
	417, 656, 1193, 418, 419, 1194, 1434, 420, 0, 0,
	0, 421, 422, 425, 1435, 1436, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1437, 274, 1197, 466, 467, 1438, 657, 468,
	658, 470, 471, 1439, 0, 472, 0, 1440, 1441, 474,
	475, 476, 1442, 1443, 477, 478, 659, 1198, 479, 1199,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 1444, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 1445,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 1446, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 1447, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 1448, 555, 556, 554, 557, 558, 559, 1449,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 1450, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 1451, 587, 588, 0, 584, 575,
	1452, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	1453, 597, 670, 671, 672, 673, 1454, 606, 1455, 598,
	599, 600, 674, 601, 675, 1456, 602, 603, 604, 605,
	0, 607, 608, 1457, 1458, 609, 610, 611, 613, 614,
	612, 615, 1459, 616, 1460, 0, 617, 618, 619, 676,
	677, 678, 1461, 621, 620, 622, 679, 1462, 623, 1463,
	1464, 1465, 1466, 624, 625, 680, 626, 627, 628, 1382,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 1387, 282, 283, 1388, 1389, 1390, 0,
	1391, 629, 1392, 1393, 1394, 1395, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 1396, 634, 294, 295, 296, 297, 298, 299,
	1397, 1398, 0, 300, 635, 636, 637, 1399, 301, 302,
	638, 1400, 1329, 1401, 303, 304, 305, 306, 307, 308,
	309, 0, 1402, 311, 312, 313, 310, 314, 1403, 315,
	0, 316, 317, 318, 319, 320, 321, 1404, 322, 323,
	324, 1186, 325, 326, 327, 1405, 1406, 1408, 1407, 1409,
	1410, 1411, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 1412, 337, 334, 335, 1413, 338, 336, 339, 1414,
	340, 341, 342, 1415, 1416, 343, 344, 345, 1417, 346,
	347, 1418, 348, 349, 350, 1419, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 1420, 272, 1421, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 1422, 369, 370,
	1423, 1424, 1187, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 1425, 383, 647,
	1426, 648, 384, 1427, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 1189, 390, 391, 1428, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	1429, 1188, 400, 652, 653, 1430, 654, 1431, 402, 403,
	1190, 655, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 1432, 414, 416,
	415, 1433, 417, 656, 1193, 418, 419, 1194, 1434, 420,
	0, 0, 0, 421, 422, 425, 1435, 1436, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1437, 274, 1197, 466, 467, 1438,
	657, 468, 658, 470, 471, 1439, 0, 472, 0, 1440,
	1441, 474, 475, 476, 1442, 1443, 477, 478, 659, 1198,
	479, 1199, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 1444, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 1445, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 1446, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 1447,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 1448, 555, 556, 554, 557, 558,
	559, 1449, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 1450,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 1451, 587, 588, 0,
	584, 575, 1452, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 1453, 597, 670, 671, 672, 673, 1454, 606,
	1455, 598, 599, 600, 674, 601, 675, 1456, 602, 603,
	604, 605, 0, 607, 608, 1457, 1458, 609, 610, 611,
	613, 614, 612, 615, 1459, 616, 1460, 0, 617, 618,
	619, 676, 677, 678, 1461, 621, 620, 622, 679, 1462,
	623, 1463, 1464, 1465, 1466, 624, 625, 680, 626, 627,
	628, 2561, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 2558, 282, 283,
	0, 0, 0, 0, 0, 1145, 1109, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	1158, 0, 292, 1165, 293, 1164, 0, 1175, 294, 295,
	296, 297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 1168, 333, 1162, 1161, 1081, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 2559, 0, 343,
	1153, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1087, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 1100, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1160, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	1173, 1174, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 1110, 384, 0, 385, 386,
	387, 388, 389, 1146, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1188, 400, 1155, 1156, 0,
	1116, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1078, 274,
	1197, 466, 467, 1101, 1149, 468, 1163, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 1088,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1159, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 1089, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	1157, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1204, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 1075, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1169, 1170,
	1171, 1172, 0, 606, 0, 598, 599, 600, 1181, 601,
	1182, 1099, 602, 603, 604, 605, 0, 607, 608, 0,
	1082, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 676, 1166, 1203, 2557, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 1079, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1074, 0, 0, 0,
	0, 0, 0, 1072, 1073, 2560, 0, 0, 0, 0,
	0, 0, 1105, 2556, 0, 1065, 1103, 1121, 1093, 1094,
	1095, 1091, 1092, 1104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 1145,
	1109, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 1158, 0, 292, 1165, 293, 1164,
	0, 1175, 294, 295, 296, 297, 298, 299, 1111, 1144,
	1076, 300, 1205, 1206, 637, 0, 301, 302, 1151, 0,
	1132, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140,
	328, 329, 330, 331, 332, 1168, 333, 1162, 1161, 1081,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1153, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1087, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1176, 1177, 364,
	1100, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1160, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 1173, 1174, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1183, 0, 1110,
	384, 0, 385, 386, 387, 388, 389, 1146, 1147, 1150,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1188,
	400, 1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1184, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 1139, 1138, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1078, 274, 1197, 466, 467, 1101, 1149, 468,
	1163, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	1178, 480, 481, 1088, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1179, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1159, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 1089, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 234, 555, 556, 554, 557, 558, 559, 1142,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 1157, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 1204, 578, 579, 580,
	581, 1180, 585, 586, 0, 587, 588, 1075, 584, 575,
	236, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 1169, 1170, 1171, 1172, 0, 606, 0, 598,
	599, 600, 1181, 601, 1182, 1099, 602, 603, 604, 605,
	0, 607, 608, 0, 1082, 609, 610, 611, 613, 614,
	612, 615, 1143, 616, 0, 0, 617, 618, 619, 1603,
	1166, 1203, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 228, 624, 625, 680, 626, 627, 628, 1079,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	1074, 0, 0, 0, 0, 0, 0, 1072, 1073, 1121,
	1093, 1094, 1095, 1091, 1092, 1104, 1858, 1856, 0, 0,
	1103, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 1145, 1109, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 1158, 0, 292, 1165,
	293, 1164, 0, 1175, 294, 295, 296, 297, 298, 299,
	1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 1168, 333, 1162,
	1161, 1081, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1153, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1087, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 1100, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1160, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 1173, 1174, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 1110, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 1155, 1156, 0, 1116, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1078, 274, 1197, 466, 467, 1101,
	1149, 468, 1163, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 1088, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1159, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 1089,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 234, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 1157, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1204, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 1075,
	584, 575, 236, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1169, 1170, 1171, 1172, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 1099, 602, 603,
	604, 605, 0, 607, 608, 0, 1082, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 1603, 1166, 1203, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 228, 624, 625, 680, 626, 627,
	628, 1079, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 1074, 0, 0, 0, 0, 0, 0, 1072,
	1073, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 1858, 3187,
	0, 0, 1103, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 1145, 1109, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 1158, 0,
	292, 1165, 293, 1164, 0, 1175, 294, 295, 296, 297,
	298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0,
	301, 302, 1151, 0, 1132, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 1135, 1133, 1134,
	1141, 1137, 1136, 1140, 328, 329, 330, 331, 332, 1168,
	333, 1162, 1161, 1081, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1153, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1087, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1176, 1177, 364, 1100, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1160, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 1173, 1174,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1183, 0, 1110, 384, 0, 385, 386, 387, 388,
	389, 1146, 1147, 1150, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1188, 400, 1155, 1156, 0, 1116, 0,
	402, 403, 1190, 1148, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1184, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 1139, 1138,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1078, 274, 1197, 466,
	467, 1101, 1149, 468, 1163, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 1178, 480, 481, 1088, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1179, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1159, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 1089, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 234, 555, 556, 554,
	557, 558, 559, 1142, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 1157, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	1204, 578, 579, 580, 581, 1180, 585, 586, 0, 587,
	588, 1075, 584, 575, 236, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 1169, 1170, 1171, 1172,
	0, 606, 0, 598, 599, 600, 1181, 601, 1182, 1099,
	602, 603, 604, 605, 0, 607, 608, 0, 1082, 609,
	610, 611, 613, 614, 612, 615, 1143, 616, 0, 0,
	617, 618, 619, 1603, 1166, 1203, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 228, 624, 625, 680,
	626, 627, 628, 1079, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 1074, 0, 0, 0, 0, 0,
	0, 1072, 1073, 1121, 1093, 1094, 1095, 1091, 1092, 1104,
	1858, 1856, 0, 0, 1103, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 1145, 1109, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	1158, 0, 292, 1165, 293, 1164, 2690, 1175, 294, 295,
	296, 297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 1168, 333, 1162, 1161, 1081, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1153, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1087, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 1100, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1160, 0, 0, 0,
	368, 0, 369, 370, 0, 2695, 1187, 371, 372, 373,
	1173, 1174, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 1110, 384, 0, 385, 386,
	387, 388, 389, 1146, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1188, 400, 1155, 1156, 0,
	1116, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 2691, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1078, 274,
	1197, 466, 467, 1101, 1149, 468, 1163, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 1088,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1159, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 1089, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	1157, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1204, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 1075, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1169, 1170,
	1171, 1172, 0, 606, 2692, 598, 599, 600, 1181, 601,
	1182, 1099, 602, 603, 604, 605, 0, 607, 608, 0,
	1082, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 676, 1166, 1203, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 1079, 2606, 0, 1121, 1093,
	1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0, 0,
	0, 0, 0, 1072, 1073, 275, 277, 276, 278, 279,
	280, 281, 1105, 282, 283, 0, 1103, 0, 0, 0,
	1145, 1109, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 1158, 0, 292, 1165, 293,
	1164, 0, 1175, 294, 295, 296, 297, 298, 299, 1111,
	1144, 1076, 300, 1205, 1206, 637, 0, 301, 302, 1151,
	0, 1132, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136,
	1140, 328, 329, 330, 331, 332, 1168, 333, 1162, 1161,
	1081, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 1153, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1087, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1176, 1177,
	364, 1100, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1160, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 1173, 1174, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1183, 0,
	1110, 384, 0, 385, 386, 387, 388, 389, 1146, 1147,
	1150, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1188, 400, 1155, 1156, 0, 1116, 0, 402, 403, 1190,
	1148, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1184, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 1139, 1138, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 1078, 274, 1197, 466, 467, 1101, 1149,
	468, 1163, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 1178, 480, 481, 1088, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 1179, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1159, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 1089, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	1142, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 1157, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 1204, 578, 579,
	580, 581, 1180, 585, 586, 0, 587, 588, 1075, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 1169, 1170, 1171, 1172, 0, 606, 0,
	598, 599, 600, 1181, 601, 1182, 1099, 602, 603, 604,
	605, 0, 607, 608, 0, 1082, 609, 610, 611, 613,
	614, 612, 615, 1143, 616, 0, 0, 617, 618, 619,
	676, 1166, 1203, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1079, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1074, 0, 0, 0, 0, 0, 0, 1072, 1073,
	0, 0, 0, 0, 0, 0, 0, 1105, 2604, 0,
	2603, 1103, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 1145, 1109, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 1158,
	0, 292, 1165, 293, 1164, 0, 1175, 294, 295, 296,
	297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637,
	0, 301, 302, 1151, 0, 1132, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 1135, 1133,
	1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331, 332,
	1168, 333, 1162, 1161, 1081, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1153,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1087, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1176, 1177, 364, 1100, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1160, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 1173,
	1174, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1183, 0, 1110, 384, 0, 385, 386, 387,
	388, 389, 1146, 1147, 1150, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1188, 400, 1155, 1156, 0, 1116,
	0, 402, 403, 1190, 1148, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1184, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 1139,
	1138, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 1078, 274, 1197,
	466, 467, 1101, 1149, 468, 1163, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 1178, 480, 481, 1088, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1179,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1159, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 1089, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1142, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 1157,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1204, 578, 579, 580, 581, 1180, 585, 586, 0,
	587, 588, 1075, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1169, 1170, 1171,
	1172, 0, 606, 0, 598, 599, 600, 1181, 601, 1182,
	1099, 602, 603, 604, 605, 0, 607, 608, 0, 1082,
	609, 610, 611, 613, 614, 612, 615, 1143, 616, 0,
	0, 617, 618, 619, 676, 1166, 1203, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1074, 0, 0, 0, 0,
	0, 0, 1072, 1073, 0, 0, 0, 0, 0, 0,
	0, 1105, 2601, 0, 2600, 1103, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1079, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1074,
	0, 0, 0, 0, 0, 0, 1072, 1073, 0, 0,
	0, 0, 0, 0, 0, 1105, 2598, 0, 2597, 1103,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 0, 0, 0, 0, 0, 0, 0, 1105,
	2595, 0, 1699, 1103, 1121, 1093, 1094, 1095, 1091, 1092,
	1104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 1145, 1109, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 1158, 0, 292, 1165, 293, 1164, 0, 1175, 294,
	295, 296, 297, 298, 299, 1111, 1144, 1076, 300, 1205,
	1206, 637, 0, 301, 302, 1151, 0, 1132, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330,
	331, 332, 1168, 333, 1162, 1161, 1081, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1153, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1087, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1176, 1177, 364, 1100, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1160, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 1173, 1174, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1183, 0, 1110, 384, 0, 385,
	386, 387, 388, 389, 1146, 1147, 1150, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1188, 400, 1155, 1156,
	0, 1116, 0, 402, 403, 1190, 1148, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1184, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 1139, 1138, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 1078,
	274, 1197, 466, 467, 1101, 1149, 468, 1163, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 1178, 480, 481,
	1088, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1179, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1159, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 1089, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1142, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 1157, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 1204, 578, 579, 580, 581, 1180, 585,
	586, 0, 587, 588, 1075, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 1169,
	1170, 1171, 1172, 0, 606, 0, 598, 599, 600, 1181,
	601, 1182, 1099, 602, 603, 604, 605, 0, 607, 608,
	0, 1082, 609, 610, 611, 613, 614, 612, 615, 1143,
	616, 0, 0, 617, 618, 619, 676, 1166, 1203, 0,
	621, 620, 622, 679, 0, 623, 1698, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1079, 1068, 0, 1121,
	1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0,
	0, 0, 0, 0, 1072, 1073, 275, 277, 276, 278,
	279, 280, 281, 1105, 282, 283, 0, 1103, 0, 0,
	0, 1145, 1109, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 1158, 0, 292, 1165,
	293, 1164, 0, 1175, 294, 295, 296, 297, 298, 299,
	1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 1168, 333, 1162,
	1161, 1081, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1153, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1087, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 1100, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1160, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 1173, 1174, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 1110, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 1155, 1156, 0, 1116, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1078, 274, 1197, 466, 467, 1101,
	1149, 468, 1163, 470, 471, 0, 0, 472, 0, 1083,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 1088, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1159, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 1089,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 1157, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1204, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 1075,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1169, 1170, 1171, 1172, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 1099, 602, 603,
	604, 605, 0, 607, 608, 0, 1082, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 1166, 1203, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1079, 0, 0, 1121, 1093, 1094, 1095, 1091, 1092,
	1104, 0, 1074, 0, 0, 0, 0, 0, 0, 1072,
	1073, 275, 277, 276, 278, 279, 280, 281, 1105, 282,
	283, 0, 1103, 0, 0, 0, 1145, 1109, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 1158, 0, 292, 1165, 293, 1164, 0, 1175, 294,
	295, 296, 297, 298, 299, 1111, 1144, 1076, 300, 1205,
	1206, 637, 0, 301, 302, 1151, 0, 1132, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	4628, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330,
	331, 332, 1168, 333, 1162, 1161, 1081, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1153, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1087, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1176, 1177, 364, 1100, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1160, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 1173, 1174, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1183, 0, 1110, 384, 0, 385,
	386, 387, 388, 389, 1146, 1147, 1150, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1188, 400, 1155, 1156,
	0, 1116, 0, 402, 403, 1190, 1148, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1184, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 1139, 1138, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 1078,
	274, 1197, 466, 467, 1101, 1149, 468, 1163, 470, 471,
	0, 0, 472, 0, 1083, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 1178, 480, 481,
	1088, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1179, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1159, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 1089, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1142, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 1157, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 1204, 578, 579, 580, 581, 1180, 585,
	586, 0, 587, 588, 1075, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 1169,
	1170, 1171, 1172, 0, 606, 0, 598, 599, 600, 1181,
	601, 1182, 1099, 602, 603, 604, 605, 0, 607, 608,
	0, 1082, 609, 610, 611, 613, 614, 612, 615, 1143,
	616, 0, 0, 617, 618, 619, 676, 1166, 1203, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1079, 0, 0, 1121,
	1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0,
	0, 0, 0, 0, 1072, 1073, 275, 277, 276, 278,
	279, 280, 281, 1105, 282, 283, 0, 1103, 0, 0,
	0, 1145, 1109, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 1158, 0, 292, 1165,
	293, 1164, 0, 1175, 294, 295, 296, 297, 298, 299,
	1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 1168, 333, 1162,
	1161, 1081, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1153, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1087, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 1100, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1160, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 1173, 1174, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 1110, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 2438, 397, 398, 399, 401,
	0, 1188, 400, 1155, 1156, 0, 1116, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1078, 274, 1197, 466, 467, 1101,
	1149, 468, 1163, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 1088, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 2437, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1159, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 1089,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 1157, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1204, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 1075,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1169, 1170, 1171, 1172, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 1099, 602, 603,
	604, 605, 0, 607, 608, 0, 1082, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 1166, 1203, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1079, 0, 0, 1121, 1093, 1094, 1095, 1091, 1092,
	1104, 0, 1074, 0, 0, 0, 0, 0, 0, 1072,
	1073, 275, 277, 276, 278, 279, 280, 281, 1105, 282,
	283, 0, 1103, 0, 0, 0, 1145, 1109, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 1158, 0, 292, 1165, 293, 1164, 0, 1175, 294,
	295, 296, 297, 298, 299, 1111, 1144, 1076, 300, 1205,
	1206, 637, 0, 301, 302, 1151, 0, 1132, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330,
	331, 332, 1168, 333, 1162, 1161, 1081, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1153, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1087, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1176, 1177, 364, 1100, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1160, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 1173, 1174, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1183, 0, 1110, 384, 0, 385,
	386, 387, 388, 389, 1146, 1147, 1150, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1188, 400, 1155, 1156,
	0, 1116, 0, 402, 403, 1190, 1148, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1184, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 1139, 1138, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 1078,
	274, 1197, 466, 467, 1101, 1149, 468, 1163, 470, 471,
	0, 0, 472, 0, 1083, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 1178, 480, 481,
	1088, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1179, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1159, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 1089, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1142, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 1157, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 1204, 578, 579, 580, 581, 1180, 585,
	586, 0, 587, 588, 1075, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 1169,
	1170, 1171, 1172, 0, 606, 0, 598, 599, 600, 1181,
	601, 1182, 1099, 602, 603, 604, 605, 0, 607, 608,
	0, 1082, 609, 610, 611, 613, 614, 612, 615, 1143,
	616, 0, 0, 617, 618, 619, 676, 1166, 1203, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1079, 0, 0, 1121,
	1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0, 0,
	0, 0, 0, 0, 1072, 1073, 275, 277, 276, 278,
	279, 280, 281, 1105, 282, 283, 0, 1103, 0, 0,
	0, 1145, 1109, 0, 0, 0, 284, 285, 1185, 286,
	287, 288, 289, 290, 291, 630, 1158, 0, 292, 1165,
	293, 1164, 0, 1175, 294, 295, 296, 297, 298, 299,
	1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301, 302,
	1151, 0, 1132, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 4372, 321, 0, 322, 323,
	324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137,
	1136, 1140, 328, 329, 330, 331, 332, 1168, 333, 1162,
	1161, 1081, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1153, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1087, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1176,
	1177, 364, 1100, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1160, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1187, 371, 372, 373, 1173, 1174, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1183,
	0, 1110, 384, 0, 385, 386, 387, 388, 389, 1146,
	1147, 1150, 469, 1189, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1188, 400, 1155, 1156, 0, 1116, 0, 402, 403,
	1190, 1148, 1191, 404, 405, 406, 1192, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1184, 1193, 418, 419, 1194, 0, 420,
	0, 0, 0, 421, 422, 425, 1139, 1138, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1195, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1196, 465, 454, 1078, 274, 1197, 466, 467, 1101,
	1149, 468, 1163, 470, 471, 0, 0, 472, 0, 1083,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1198,
	479, 1199, 1178, 480, 481, 1088, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1179, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1159, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1200, 533, 534, 535, 536, 537, 1089,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1142, 560, 561, 543, 544, 562, 563, 1201, 564,
	565, 566, 567, 568, 569, 570, 1157, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1204, 578,
	579, 580, 581, 1180, 585, 586, 0, 587, 588, 1075,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1169, 1170, 1171, 1172, 0, 606,
	0, 598, 599, 600, 1181, 601, 1182, 1099, 602, 603,
	604, 605, 0, 607, 608, 0, 1082, 609, 610, 611,
	613, 614, 612, 615, 1143, 616, 0, 0, 617, 618,
	619, 676, 1166, 1203, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1079, 0, 0, 1121, 1093, 1094, 1095, 1091, 1092,
	1104, 0, 1074, 0, 0, 0, 0, 0, 0, 1072,
	1073, 275, 277, 276, 278, 279, 280, 281, 1105, 282,
	283, 0, 1103, 0, 0, 0, 1145, 1109, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 1158, 0, 292, 1165, 293, 1164, 0, 1175, 294,
	295, 296, 297, 298, 299, 1111, 1144, 1076, 300, 1205,
	1206, 637, 0, 301, 302, 1151, 0, 1132, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330,
	331, 332, 1168, 333, 1162, 1161, 1081, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1153, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1087, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1176, 1177, 364, 1100, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1160, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 1173, 1174, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1183, 0, 1110, 384, 0, 385,
	386, 387, 388, 389, 1146, 1147, 1150, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1188, 400, 1155, 1156,
	0, 1116, 0, 402, 403, 1190, 1148, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1184, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 1139, 1138, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 1078,
	3983, 1197, 466, 467, 1101, 1149, 468, 1163, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 1178, 480, 481,
	1088, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1179, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1159, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 1089, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1142, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 1157, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 1204, 578, 579, 580, 581, 1180, 585,
	586, 0, 587, 588, 1075, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 1169,
	1170, 1171, 1172, 0, 606, 0, 598, 599, 600, 1181,
	601, 1182, 1099, 602, 603, 604, 605, 0, 607, 608,
	0, 1082, 609, 610, 611, 613, 614, 612, 615, 1143,
	616, 0, 0, 617, 618, 619, 676, 1166, 1203, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1079, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1074, 0, 0,
	0, 0, 0, 0, 1072, 1073, 1926, 0, 0, 0,
	0, 0, 0, 1105, 0, 0, 0, 1103, 1121, 1093,
	1094, 1095, 1091, 1092, 1104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	1145, 1109, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 1158, 0, 292, 1165, 293,
	1164, 0, 1175, 294, 295, 296, 297, 298, 299, 1111,
	1144, 1076, 300, 1205, 1206, 637, 0, 301, 302, 1151,
	0, 1132, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136,
	1140, 328, 329, 330, 331, 332, 1168, 333, 1162, 1161,
	1081, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 1153, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1087, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1176, 1177,
	364, 1100, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1160, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 1173, 1174, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1183, 0,
	1110, 384, 0, 385, 386, 387, 388, 389, 1146, 1147,
	1150, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1188, 400, 1155, 1156, 0, 1116, 0, 402, 403, 1190,
	1148, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1184, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 1139, 1138, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 1078, 274, 1197, 466, 467, 1101, 1149,
	468, 1163, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 1178, 480, 481, 1088, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 1179, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1159, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 1089, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	1142, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 1157, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 1204, 578, 579,
	580, 581, 1180, 585, 586, 0, 587, 588, 1075, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 1169, 1170, 1171, 1172, 0, 606, 0,
	598, 599, 600, 1181, 601, 1182, 1099, 602, 603, 604,
	605, 0, 607, 608, 0, 1082, 609, 610, 611, 613,
	614, 612, 615, 1143, 616, 0, 0, 617, 618, 619,
	676, 1166, 1203, 3697, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1079, 0, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104,
	0, 1074, 0, 0, 0, 0, 0, 0, 1072, 1073,
	275, 277, 276, 278, 279, 280, 281, 1105, 282, 283,
	0, 1103, 0, 0, 0, 1145, 1109, 0, 0, 0,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	1158, 0, 292, 1165, 293, 1164, 0, 1175, 294, 295,
	296, 297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 1168, 333, 1162, 1161, 1081, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1153, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1087, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 1100, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1160, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	1173, 1174, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 1110, 384, 0, 385, 386,
	387, 388, 389, 1146, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1188, 400, 1155, 1156, 0,
	1116, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 1078, 274,
	1197, 466, 467, 1101, 1149, 468, 1163, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 1088,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1159, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 1089, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	1157, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1204, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 1075, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1169, 1170,
	1171, 1172, 0, 606, 0, 598, 599, 600, 1181, 601,
	1182, 1099, 602, 603, 604, 605, 0, 607, 608, 0,
	1082, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 676, 1166, 1203, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 1079, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1074, 0, 0, 0,
	0, 0, 0, 1072, 1073, 1926, 0, 0, 0, 0,
	0, 0, 1105, 0, 0, 0, 1103, 1121, 1093, 1094,
	1095, 1091, 1092, 1104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 1145,
	1109, 0, 0, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 1158, 0, 292, 1165, 293, 1164,
	0, 1175, 294, 295, 296, 297, 298, 299, 1111, 1144,
	1076, 300, 1205, 1206, 637, 0, 301, 302, 1151, 0,
	1132, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140,
	328, 329, 330, 331, 332, 1168, 333, 1162, 1161, 1081,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1153, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1087, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1176, 1177, 364,
	1100, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1160, 0, 0, 0, 368, 0, 369, 370, 0, 2695,
	1187, 371, 372, 373, 1173, 1174, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1183, 0, 1110,
	384, 0, 385, 386, 387, 388, 389, 1146, 1147, 1150,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1188,
	400, 1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1184, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 1139, 1138, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 1078, 274, 1197, 466, 467, 1101, 1149, 468,
	1163, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	1178, 480, 481, 1088, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1179, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1159, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 1089, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 1142,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 1157, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 1204, 578, 579, 580,
	581, 1180, 585, 586, 0, 587, 588, 1075, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 1169, 1170, 1171, 1172, 0, 606, 0, 598,
	599, 600, 1181, 601, 1182, 1099, 602, 603, 604, 605,
	0, 607, 608, 0, 1082, 609, 610, 611, 613, 614,
	612, 615, 1143, 616, 0, 0, 617, 618, 619, 676,
	1166, 1203, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1079,
	0, 0, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0,
	1074, 0, 0, 0, 0, 0, 0, 1072, 1073, 275,
	277, 276, 278, 279, 280, 281, 1105, 282, 283, 0,
	1103, 0, 0, 0, 1145, 1109, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 1158,
	0, 292, 1165, 293, 1164, 0, 1175, 294, 295, 296,
	297, 298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637,
	0, 301, 302, 1151, 0, 1132, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 1135, 1133,
	1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331, 332,
	1168, 333, 1162, 1161, 1081, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1153,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1087, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1176, 1177, 364, 1100, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1160, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 1173,
	1174, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1183, 0, 1110, 384, 0, 385, 386, 387,
	388, 389, 1146, 1147, 1150, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1188, 400, 1155, 1156, 0, 1116,
	0, 402, 403, 1190, 1148, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1184, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 1139,
	1138, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 1078, 274, 1197,
	466, 467, 1101, 1149, 468, 1163, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 1178, 480, 481, 1088, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1179,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1159, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 1089, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1142, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 1157,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1204, 578, 579, 580, 581, 1180, 585, 586, 0,
	587, 588, 1075, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1169, 1170, 1171,
	1172, 0, 606, 0, 598, 599, 600, 1181, 601, 1182,
	1099, 602, 603, 604, 605, 0, 607, 608, 0, 1082,
	609, 610, 611, 613, 614, 612, 615, 1143, 616, 0,
	0, 617, 618, 619, 676, 1166, 1203, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1074, 0, 0, 0, 0,
	0, 0, 1072, 1073, 0, 0, 0, 0, 0, 0,
	0, 1105, 1856, 0, 2700, 1103, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1079, 2698,
	0, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074,
	0, 0, 0, 0, 0, 0, 1072, 1073, 275, 277,
	276, 278, 279, 280, 281, 1105, 282, 283, 0, 1103,
	0, 0, 0, 1145, 1109, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 1158, 0,
	292, 1165, 293, 1164, 0, 1175, 294, 295, 296, 297,
	298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0,
	301, 302, 1151, 0, 1132, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 1135, 1133, 1134,
	1141, 1137, 1136, 1140, 328, 329, 330, 331, 332, 1168,
	333, 1162, 1161, 1081, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1153, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1087, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1176, 1177, 364, 1100, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1160, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 1173, 1174,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1183, 0, 1110, 384, 0, 385, 386, 387, 388,
	389, 1146, 1147, 1150, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1188, 400, 1155, 1156, 0, 1116, 0,
	402, 403, 1190, 1148, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1184, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 1139, 1138,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1078, 274, 1197, 466,
	467, 1101, 1149, 468, 1163, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 1178, 480, 481, 1088, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1179, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1159, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 1089, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1142, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 1157, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	1204, 578, 579, 580, 581, 1180, 585, 586, 0, 587,
	588, 1075, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 1169, 1170, 1171, 1172,
	0, 606, 0, 598, 599, 600, 1181, 601, 1182, 1099,
	602, 603, 604, 605, 0, 607, 608, 0, 1082, 609,
	610, 611, 613, 614, 612, 615, 1143, 616, 0, 0,
	617, 618, 619, 676, 1166, 1203, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 1079, 2686, 0, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 0, 1074, 0, 0, 0, 0, 0,
	0, 1072, 1073, 275, 277, 276, 278, 279, 280, 281,
	1105, 282, 283, 0, 1103, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1079, 2674,
	0, 1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074,
	0, 0, 0, 0, 0, 0, 1072, 1073, 275, 277,
	276, 278, 279, 280, 281, 1105, 282, 283, 0, 1103,
	0, 0, 0, 1145, 1109, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 1158, 0,
	292, 1165, 293, 1164, 0, 1175, 294, 295, 296, 297,
	298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0,
	301, 302, 1151, 0, 1132, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 1135, 1133, 1134,
	1141, 1137, 1136, 1140, 328, 329, 330, 331, 332, 1168,
	333, 1162, 1161, 1081, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1153, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1087, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1176, 1177, 364, 1100, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1160, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 1173, 1174,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1183, 0, 1110, 384, 0, 385, 386, 387, 388,
	389, 1146, 1147, 1150, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1188, 400, 1155, 1156, 0, 1116, 0,
	402, 403, 1190, 1148, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1184, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 1139, 1138,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1078, 274, 1197, 466,
	467, 1101, 1149, 468, 1163, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 1178, 480, 481, 1088, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1179, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1159, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 1089, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1142, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 1157, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	1204, 578, 579, 580, 581, 1180, 585, 586, 0, 587,
	588, 1075, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 1169, 1170, 1171, 1172,
	0, 606, 0, 598, 599, 600, 1181, 601, 1182, 1099,
	602, 603, 604, 605, 0, 607, 608, 0, 1082, 609,
	610, 611, 613, 614, 612, 615, 1143, 616, 0, 0,
	617, 618, 619, 676, 1166, 1203, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 1079, 2672, 0, 2663, 2670, 1094, 1095,
	1091, 1092, 1104, 0, 1074, 0, 0, 0, 0, 0,
	0, 1072, 1073, 275, 277, 276, 278, 279, 280, 281,
	1105, 282, 283, 0, 1103, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 2666, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 2667, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 2668, 435, 2665, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	2669, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 2664, 628, 1079, 2660,
	0, 2663, 2670, 1094, 1095, 1091, 1092, 1104, 0, 1074,
	0, 0, 0, 0, 0, 0, 1072, 1073, 275, 277,
	276, 278, 279, 280, 281, 1105, 282, 283, 0, 1103,
	0, 0, 0, 1145, 1109, 0, 0, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 1158, 0,
	292, 1165, 293, 1164, 0, 1175, 294, 295, 296, 297,
	298, 299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0,
	301, 302, 1151, 0, 1132, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 1135, 1133, 1134,
	1141, 1137, 1136, 1140, 328, 329, 330, 331, 332, 1168,
	2666, 1162, 1161, 1081, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1153, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1087, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1176, 1177, 364, 1100, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1160, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 1173, 1174,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1183, 0, 1110, 384, 0, 385, 386, 387, 2667,
	389, 1146, 1147, 1150, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1188, 400, 1155, 1156, 0, 1116, 0,
	402, 403, 1190, 1148, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1184, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 1139, 1138,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 2668, 435, 2665, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 1078, 274, 1197, 466,
	467, 1101, 1149, 468, 1163, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 1178, 480, 481, 1088, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1179, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1159, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 1089, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 2669, 0, 555, 556, 554,
	557, 558, 559, 1142, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 1157, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	1204, 578, 579, 580, 581, 1180, 585, 586, 0, 587,
	588, 1075, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 1169, 1170, 1171, 1172,
	0, 606, 0, 598, 599, 600, 1181, 601, 1182, 1099,
	602, 603, 604, 605, 0, 607, 608, 0, 1082, 609,
	610, 611, 613, 614, 612, 615, 1143, 616, 0, 0,
	617, 618, 619, 676, 1166, 1203, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 2664, 628, 1079, 0, 0, 1121, 1093, 1094, 1095,
	1091, 1092, 1104, 0, 1074, 0, 0, 0, 0, 0,
	0, 1072, 1073, 275, 277, 276, 278, 279, 280, 281,
	1105, 282, 283, 0, 1103, 0, 0, 0, 1145, 1109,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 1158, 0, 292, 1165, 293, 1164, 0,
	1175, 294, 295, 296, 297, 298, 299, 1111, 1144, 1076,
	300, 1205, 1206, 637, 0, 301, 302, 1151, 0, 1132,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328,
	329, 330, 331, 332, 1168, 333, 1162, 1161, 1081, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1153, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1087, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1176, 1177, 364, 1100,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1160,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 1173, 1174, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1183, 0, 1110, 384,
	0, 385, 386, 387, 388, 389, 1146, 1147, 1150, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1188, 400,
	1155, 1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1184, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 1139, 1138, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 1178,
	480, 481, 1088, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1179, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1159,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 1089, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1142, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 1157, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1204, 578, 579, 580, 581,
	1180, 585, 586, 0, 587, 588, 1075, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1169, 1170, 1171, 1172, 0, 606, 0, 598, 599,
	600, 1181, 601, 1182, 1099, 602, 603, 604, 605, 0,
	607, 608, 0, 1082, 609, 610, 611, 613, 614, 612,
	615, 1143, 616, 0, 0, 617, 618, 619, 676, 1166,
	1203, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1079, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1074,
	0, 0, 0, 0, 0, 0, 1072, 1073, 0, 0,
	0, 0, 0, 1864, 0, 1105, 0, 0, 0, 1103,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 2417, 282, 283, 0, 0, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 2381, 0, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 2357, 0,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 275, 277, 276,
	278, 279, 280, 281, 1105, 282, 283, 0, 1103, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 1704, 0, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 1633, 0,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 275, 277, 276,
	278, 279, 280, 281, 1105, 282, 283, 0, 1103, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 1628, 0, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 1619, 0,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 275, 277, 276,
	278, 279, 280, 281, 1105, 282, 283, 0, 1103, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 1614, 0, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 1526, 0,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 275, 277, 276,
	278, 279, 280, 281, 1105, 282, 283, 0, 1103, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1525, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 1520, 0, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1519, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 1513, 0,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 275, 277, 276,
	278, 279, 280, 281, 1105, 282, 283, 0, 1103, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 1331, 0, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 0, 0,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 275, 277, 276,
	278, 279, 280, 281, 1105, 282, 283, 0, 1103, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 0, 0, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	4677, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 4676,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 0, 0,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 275, 277, 276,
	278, 279, 280, 281, 1105, 282, 283, 0, 1103, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 4675, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 4677, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 4676, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 0, 0, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 4314,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 4315, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 4313, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 0, 0,
	1121, 1093, 1094, 1095, 3154, 3155, 1104, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 275, 277, 276,
	278, 279, 280, 281, 1105, 282, 283, 0, 1103, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 0, 0, 1121, 1093, 1094, 1095, 3152,
	3153, 1104, 0, 1074, 0, 0, 0, 0, 0, 0,
	1072, 1073, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1079, 0, 0,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 1074, 0,
	0, 0, 0, 0, 0, 1072, 1073, 275, 277, 276,
	278, 279, 280, 281, 1105, 282, 283, 0, 1103, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 1076, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 1081, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 1078, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 1088, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	1089, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	1075, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 1082, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1079, 0, 0, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 1074, 0, 0, 0, 0, 0, 0,
	2425, 2426, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 0, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 1190, 1148, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	0, 274, 1197, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	1121, 1093, 1094, 1095, 1091, 1092, 1104, 0, 2682, 0,
	0, 0, 0, 0, 0, 2680, 2681, 275, 277, 276,
	278, 279, 280, 281, 1105, 282, 283, 0, 1103, 0,
	0, 0, 1145, 1109, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 1158, 0, 292,
	1165, 293, 1164, 0, 1175, 294, 295, 296, 297, 298,
	299, 1111, 1144, 0, 300, 1205, 1206, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 1168, 333,
	1162, 1161, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1153, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1087,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 1100, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1160, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 1173, 1174, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 1110, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 1155, 1156, 0, 1116, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 0, 274, 1197, 466, 467,
	1101, 1149, 468, 1163, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1159, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	3147, 3148, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 1157, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1204,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1169, 1170, 1171, 1172, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 1099, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 1166, 1203, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 1121, 1093, 1094, 1095, 1091,
	1092, 1104, 0, 0, 0, 0, 0, 0, 0, 0,
	2109, 2110, 275, 277, 276, 278, 279, 280, 281, 1105,
	282, 283, 0, 1103, 0, 0, 0, 1145, 1109, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 0, 1158, 0, 292, 1165, 293, 1164, 0, 1175,
	294, 295, 296, 297, 298, 299, 1111, 1144, 1076, 300,
	1205, 1206, 637, 0, 301, 302, 1151, 0, 1132, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	4677, 1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329,
	330, 331, 332, 1168, 333, 1162, 1161, 1081, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1087, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1176, 1177, 364, 1100, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1160, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 1173, 1174, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1183, 0, 1110, 384, 0,
	385, 386, 387, 388, 389, 1146, 1147, 1150, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1188, 400, 1155,
	1156, 0, 1116, 0, 402, 403, 0, 1148, 0, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1184,
	1193, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 1139, 1138, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	1078, 274, 0, 466, 467, 1101, 1149, 468, 1163, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 1178, 480,
	481, 1088, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1179, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1159, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 1089, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1142, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 1157, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1204, 578, 579, 580, 581, 1180,
	585, 586, 0, 587, 588, 1075, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1169, 1170, 1171, 1172, 0, 606, 0, 598, 599, 600,
	1181, 601, 1182, 1099, 602, 603, 604, 605, 0, 4676,
	608, 0, 1082, 609, 610, 611, 613, 614, 612, 615,
	1143, 616, 0, 0, 617, 618, 619, 676, 1166, 1203,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 1065, 0,
	1243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1072, 1073, 275, 277, 276,
	278, 279, 280, 281, 1105, 282, 283, 0, 1103, 0,
	0, 0, 1145, 0, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 1144, 0, 300, 635, 636, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 652, 653, 0, 654, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 1229, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 0, 274, 1197, 466, 467,
	0, 1149, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 1235, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	666, 1237, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 234, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	0, 584, 575, 236, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 1603, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 0, 1243, 0, 228, 624, 625, 680, 626,
	627, 628, 0, 0, 229, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 1145, 0, 1233, 0, 1950,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 1144, 0, 300, 635, 636,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 1146, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1188, 400, 652, 653, 0,
	654, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 1229, 414, 416, 415, 0, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 0, 274,
	1197, 466, 467, 0, 1149, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 1235, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 666, 1237, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 234, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 0, 584, 575, 236, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 1181, 601,
	1182, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 1603, 677, 678, 0, 621,
	620, 622, 679, 0, 623, 3311, 0, 1243, 228, 624,
	625, 680, 626, 627, 628, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 1145,
	1233, 0, 1950, 0, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 1144,
	0, 300, 635, 636, 637, 0, 301, 302, 1151, 0,
	1132, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1176, 1177, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1183, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 1146, 1147, 1150,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1188,
	400, 652, 653, 0, 654, 0, 402, 403, 1190, 1148,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 1229, 414, 416, 415, 0,
	417, 1184, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 1139, 1138, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 0, 274, 1197, 466, 467, 0, 1149, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 1235, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	1178, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1179, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 666, 1237, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 1142,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 1180, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 1181, 601, 1182, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 1143, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 0, 623, 1225,
	0, 1243, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 1145, 1233, 0, 1231, 0, 284, 285,
	1185, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 1144, 0, 300, 635, 636, 637, 0,
	301, 302, 1151, 0, 1132, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1186, 325, 326, 327, 1135, 1133, 1134,
	1141, 1137, 1136, 1140, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1176, 1177, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1187, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1183, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 1146, 1147, 1150, 469, 1189, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1188, 400, 652, 653, 0, 654, 0,
	402, 403, 1190, 1148, 1191, 404, 405, 406, 1192, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 1229,
	414, 416, 415, 0, 417, 1184, 1193, 418, 419, 1194,
	0, 420, 0, 0, 0, 421, 422, 425, 1139, 1138,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1195,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1196, 465, 454, 0, 274, 1197, 466,
	467, 0, 1149, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 1235, 474, 475, 476, 0, 0, 477, 478,
	659, 1198, 479, 1199, 1178, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1179, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1200, 533, 534, 535, 536,
	537, 666, 1237, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1142, 560, 561, 543, 544, 562, 563,
	1201, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 1180, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 1181, 601, 1182, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 1143, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 0, 623, 0, 1243, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 1145, 0, 1233, 0,
	1231, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 1144, 0, 300, 635,
	636, 637, 0, 301, 302, 1151, 0, 1132, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	1135, 1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1176, 1177, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1183, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 1146, 1147, 1150, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1188, 400, 652, 653,
	0, 654, 0, 402, 403, 1190, 1148, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 1229, 414, 416, 415, 0, 417, 1184, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 1139, 1138, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 0,
	274, 1197, 466, 467, 0, 1149, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 1235, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 1178, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1179, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 1237, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1142, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 1180, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 1181,
	601, 1182, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 1143,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 0, 623, 0, 1243, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 1145,
	0, 1233, 0, 1231, 284, 285, 1185, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 1144,
	0, 300, 635, 636, 637, 0, 301, 302, 1151, 0,
	1132, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1186,
	325, 326, 327, 1135, 1133, 1134, 1141, 1137, 1136, 1140,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1176, 1177, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1187, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1183, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 1146, 1147, 1150,
	469, 1189, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1188,
	400, 652, 653, 0, 654, 0, 402, 403, 1190, 1148,
	1191, 404, 405, 406, 1192, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1184, 1193, 418, 419, 1194, 0, 420, 0, 0,
	0, 421, 422, 425, 1139, 1138, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1195, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1196,
	465, 454, 0, 274, 1197, 466, 467, 0, 1149, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1198, 479, 1199,
	1178, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1179, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1200, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 1142,
	560, 561, 543, 544, 562, 563, 1201, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 1180, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 1181, 601, 1182, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 1143, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 0, 623, 0,
	1243, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 1145, 0, 0, 0, 4138, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 1144, 0, 300, 635, 636, 637, 0, 301,
	302, 1151, 0, 1132, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 1135, 1133, 1134, 1141,
	1137, 1136, 1140, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1176, 1177, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1183, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	1146, 1147, 1150, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1188, 400, 652, 653, 0, 654, 0, 402,
	403, 1190, 1148, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1184, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 1139, 1138, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 0, 274, 1197, 466, 467,
	0, 1149, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 1178, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1179, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	666, 1237, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1142, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 1180, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 1181, 601, 1182, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 1143, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 0, 269, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 2529, 2530, 2531, 2548, 2549, 2550, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 2551, 0, 629, 0, 0, 0, 1848,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 1833, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 2541, 0, 311, 312, 313,
	310, 314, 0, 315, 2537, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 0, 0, 2542,
	2543, 2544, 2545, 365, 366, 367, 644, 0, 0, 2536,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 2546, 2547, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 2539, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 2540, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 1832, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	1065, 0, 1324, 2526, 2527, 2528, 2552, 2538, 2532, 0,
	2534, 2535, 2533, 2520, 2521, 2522, 2523, 2524, 2525, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 1329, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 1188, 400, 652, 653, 0, 654,
	0, 402, 403, 1190, 655, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 0, 0, 1197,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 234, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 236, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 1603, 677, 678, 0, 621, 620,
	622, 679, 0, 623, 1600, 0, 1324, 228, 624, 625,
	680, 626, 627, 628, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 189, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 1329,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 1188, 400,
	652, 653, 0, 654, 0, 402, 403, 1190, 655, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 0, 0, 1197, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 234, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 236,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 1603, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 228, 624, 625, 680, 626, 627, 628, 1324, 1323,
	229, 0, 0, 0, 1321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 189, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 1329, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	1188, 400, 652, 653, 0, 654, 0, 402, 403, 1190,
	655, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 0, 0, 1197, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1324, 1323, 0, 0, 0, 0, 1321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 1625, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 1329, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 1188, 400, 652, 653, 0, 654, 0, 402,
	403, 1190, 655, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 0, 0, 1197, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1324, 1323, 0, 0, 0, 0, 1321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 3613,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 1329, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 1188, 400, 652, 653, 0, 654,
	0, 402, 403, 1190, 655, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 0, 0, 1197,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 2299, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1324, 2213, 0, 0, 0, 0,
	2214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 1625, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 1329, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 1188, 400, 652, 653,
	0, 654, 0, 402, 403, 1190, 655, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 2212, 416, 415, 0, 417, 656, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 0,
	0, 1197, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1324, 1323, 0, 0,
	0, 0, 1321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 1625, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 1329,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 1188, 400,
	652, 653, 0, 654, 0, 402, 403, 1190, 655, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 0, 0, 1197, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 1065, 0,
	269, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 1609, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 234, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 236, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 1603, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 0, 1243, 0, 228, 624, 625, 680, 626,
	627, 628, 0, 0, 229, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 1145, 0, 0, 0, 189,
	284, 285, 1185, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 1144, 0, 300, 635, 636,
	637, 0, 301, 302, 1151, 0, 1132, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1186, 325, 326, 327, 1135,
	1133, 1134, 1141, 1137, 1136, 1140, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1176, 1177, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1187, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1183, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 1146, 1147, 1150, 469, 1189, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1188, 400, 652, 653, 0,
	654, 0, 402, 403, 1190, 1148, 1191, 404, 405, 406,
	1192, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1184, 1193, 418,
	419, 1194, 0, 420, 0, 0, 0, 421, 422, 425,
	1139, 1138, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1195, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1196, 465, 454, 0, 274,
	1197, 466, 467, 0, 1149, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1198, 479, 1199, 1178, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1179, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1200, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1142, 560, 561, 543, 544,
	562, 563, 1201, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 1180, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 1181, 601,
	1182, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 1143, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 269, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 274, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 0, 623,
	0, 269, 3057, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 1964, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 269, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	4844, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 0, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 3563, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 0, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	1597, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 269, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 3045, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 269, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 3722, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 0, 623, 901, 0, 806,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 2290, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 813, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 899, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 274, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 811, 589, 590, 591, 592, 593, 812, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 0,
	623, 806, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 2031, 282, 283, 0, 0,
	0, 816, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 813, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 2030, 550, 551, 552, 553, 0, 2032, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 811, 589, 590, 591, 592, 593,
	812, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 2029, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 0, 623, 806, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 1982, 282, 283,
	0, 0, 0, 816, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 813,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 1981, 550, 551, 552, 553, 0, 1983,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 811, 589, 590, 591,
	592, 593, 812, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 1980, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 804, 623, 806, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 816, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 813, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 811, 589,
	590, 591, 592, 593, 812, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 2004, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 816, 0, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 0, 2010, 0, 292, 2000, 293, 2016, 0, 2023,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	2026, 2027, 0, 0, 301, 302, 0, 0, 1329, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 1168, 333, 2014, 2013, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1153, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 0, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 0, 0, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 2012, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 2021, 2022, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 0, 0, 0, 384, 0,
	385, 386, 387, 388, 389, 0, 0, 0, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 1188, 400, 2007,
	2008, 0, 2003, 0, 402, 403, 1190, 0, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 0,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	0, 0, 1197, 466, 467, 0, 0, 468, 2015, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 0, 1198, 479, 1199, 0, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 1997, 493, 494, 495, 1998, 496,
	497, 498, 0, 499, 0, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 2011, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 0, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 2009, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 2025, 578, 579, 580, 581, 0,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	2017, 2018, 2019, 2020, 0, 606, 0, 598, 599, 600,
	0, 601, 0, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 0, 2001, 2024,
	806, 621, 620, 622, 0, 0, 623, 0, 0, 0,
	0, 624, 625, 0, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 1991, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 813, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 274, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 811, 589, 590, 591, 592, 593, 812,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 806, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 816, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 813, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 274, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 2336, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 2337, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 811, 589, 590, 591, 592,
	593, 812, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 2338, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 0, 623, 269, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 816, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	274, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 2075, 623, 1324, 2042, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 816, 0, 629, 0,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 1329,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 2039, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 1188, 400,
	652, 653, 0, 654, 0, 402, 403, 1190, 655, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 0, 0, 1197, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 2040, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 2036, 623, 1324, 2042,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 1329, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	2039, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	1188, 400, 652, 653, 0, 654, 0, 402, 403, 1190,
	655, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 0, 0, 1197, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	2040, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 0, 623,
	1324, 2042, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 1329, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 2039, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 1188, 400, 652, 653, 0, 654, 0, 402,
	403, 1190, 655, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 0, 0, 1197, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 2040, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1324, 1323, 0, 0, 0, 0, 1321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 1329, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 1188, 400, 652, 653, 0, 654,
	0, 402, 403, 1190, 655, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 0, 0, 1197,
	466, 467, 3915, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1324, 1323, 0, 0, 0, 0,
	1321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 1329, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 1188, 400, 652, 653,
	0, 654, 0, 402, 403, 1190, 655, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 0,
	0, 1197, 466, 467, 3525, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1653, 0, 1324, 1323,
	0, 0, 0, 0, 1321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 1329, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 1652, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	1188, 400, 652, 653, 0, 654, 0, 402, 403, 1190,
	655, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 0, 0, 1197, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 1651,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 1650,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1571, 0, 1324, 1323, 0, 0, 0, 0, 1321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 1185, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 1329, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1186, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1187, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 1570, 650, 651, 469, 1189, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 1188, 400, 652, 653, 0, 654,
	0, 402, 403, 1190, 655, 1191, 404, 405, 406, 1192,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 1193, 418, 419,
	1194, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1195, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1196, 465, 454, 0, 0, 1197,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1198, 479, 1199, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1200, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 1201, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1531, 0, 1324, 1323, 0, 0,
	0, 0, 1321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 1329,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 1188, 400,
	652, 653, 0, 654, 0, 402, 403, 1190, 655, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 0, 0, 1197, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1496, 0,
	1324, 1323, 0, 0, 0, 0, 1321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 1329, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	1495, 650, 651, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 1188, 400, 652, 653, 0, 654, 0, 402,
	403, 1190, 655, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 0, 0, 1197, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1318, 0, 1324, 1323, 0, 0, 0, 0,
	1321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 1185, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 1329, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1186, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1187, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 1317, 650, 651, 469, 1189, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 1188, 400, 652, 653,
	0, 654, 0, 402, 403, 1190, 655, 1191, 404, 405,
	406, 1192, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 1193,
	418, 419, 1194, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1195, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1196, 465, 454, 0,
	0, 1197, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1198, 479, 1199, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1200, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 1201, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1324, 1323, 0, 0,
	0, 0, 1321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 1185, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 1329,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1186, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1187,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	1189, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 1188, 400,
	652, 653, 0, 654, 0, 402, 403, 1190, 655, 1191,
	404, 405, 406, 1192, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 1193, 418, 419, 1194, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1195, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1196, 465,
	454, 0, 0, 1197, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1198, 479, 1199, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1200, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 1201, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 1324, 2042,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 1185, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 1329, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1186, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	2082, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1187, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 1189, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	1188, 400, 652, 653, 0, 654, 0, 402, 403, 1190,
	655, 1191, 404, 405, 406, 1192, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 1193, 418, 419, 1194, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1195, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1196, 465, 454, 0, 0, 1197, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1198, 479,
	1199, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1200, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 1201, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 0, 623,
	1324, 1323, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 1185,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 1329, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1186, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1187, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 1189, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 1188, 400, 652, 653, 0, 654, 0, 402,
	403, 1190, 655, 1191, 404, 405, 406, 1192, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 1193, 418, 419, 1194, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1195, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1196, 465, 454, 0, 0, 1197, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1198, 479, 1199, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1200, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 1201,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 1324, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 1185, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 1329, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1186, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1187, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 1189,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 1188, 400, 652,
	653, 0, 654, 0, 402, 403, 1190, 655, 1191, 404,
	405, 406, 1192, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	1193, 418, 419, 1194, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1195, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1196, 465, 454,
	0, 0, 1197, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1198, 479, 1199, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1200,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 1201, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	269, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 2851, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 2848,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 2855, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 3070, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 2854, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 3067, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	3069, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 3066, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 2853, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 3068, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 269, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 2851, 301, 302, 638, 0, 0, 2845,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 2848, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 2855, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 2854, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 2844, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 2853, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 2852, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 1730, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 1729, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 1728, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 1731, 542, 549, 550, 551,
	552, 553, 0, 1727, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	1725, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 1726, 620, 622, 679, 1471, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 1473,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 274, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	1235, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 1468,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 1470, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 1235, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 1375, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 1377, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 1235, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 712, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 711, 280, 281, 701,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 704, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 705, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	706, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 700, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 701, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 704, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 705, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 706, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 701, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	704, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	705, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 706, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 701, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 704, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 3926, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 706, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 274, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 1235, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 3468,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 3015, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 3014,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 274, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 2305,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 274, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 2246,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 2253, 623, 269, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 2252, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 274, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 2239, 623,
	269, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	2241, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 274, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 269, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 2206, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 1235, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 1575, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 1574, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 1488, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 274, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 1481,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 1483, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 1308, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 1307, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 1298, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 1297, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 1295, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 1294, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 1290, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 1289,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 274, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 682,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 260, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 269, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 274, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 269, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 704, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 705, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 706, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 269, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 2345, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 274, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 269, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 2343,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 269, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 2341, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 274, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 269, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 2259, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 269, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 2061, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 274, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 269, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 2055, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 888, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 887, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 886, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	269, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 3070, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 4213, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	766, 623, 269, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 1345, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 1343,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 771,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 770, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 1346, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 768, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 766, 623, 269, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 1345, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 1343, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 771, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 770, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 1346, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 768,
	671, 672, 673, 0, 606, 0, 598, 1344, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 691, 623, 269, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	690, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 689, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 269, 3057,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 0, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 0, 623,
	269, 4223, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 269, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 4498, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	269, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 4115, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 269, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 3881, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	269, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 2735, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 269, 3057, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 3054, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 2315, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 2303, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 766,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 759, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 771, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 770, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 1608, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 768, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 1581, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 1580, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 1565, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 1563, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 1558, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 1535, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 1533,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 1493,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 1476, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 1313, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 1312, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 1304, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 1303, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 1257, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 776, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 766, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 759,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 757,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 758, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 771, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 760,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 770,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 761,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 768, 671, 672, 673, 0, 606,
	0, 598, 763, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 751,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 752, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 714, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 708, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 686, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 3583, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 770, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 768, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 3508, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 3486, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 3483, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 3433, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 3431, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 3416, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 3025, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 752, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 2277, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	0, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 1275, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 1208, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 0, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 0, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 0, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 0, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1777, 1778, 0, 1810, 1811, 1812,
	1821, 1822, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 1808, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 1777, 1778, 1779,
	1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0, 1799,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 1814,
	1808, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 1803, 1804, 1805, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1818, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 1807, 1809, 0, 0, 0, 1802, 1803, 1804, 1805,
	0, 0, 0, 0, 0, 0, 1785, 0, 1824, 0,
	1825, 0, 0, 0, 0, 0, 0, 1794, 1795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 0, 0, 0,
	0, 0, 0, 0, 1818, 0, 0, 1828, 0, 0,
	1800, 0, 0, 0, 1807, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 0, 1825, 0, 0, 0, 0, 0, 0,
	1794, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 1816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1815, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1801,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0,
	0, 0, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 1814, 1808, 0, 0, 0, 0, 0, 1806,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 1801, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 0, 0, 0, 1819,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 1791, 1792, 1798,
	1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 0, 0, 0, 0, 0, 0, 0,
	0, 3231, 0, 0, 0, 0, 0, 0, 0, 1802,
	1803, 1804, 1805, 0, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789,
	1781, 1782, 1783, 1784, 1786, 1787, 0, 1818, 0, 0,
	1828, 0, 0, 0, 2563, 0, 0, 1807, 1809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 0, 1825, 0, 0, 0,
	0, 0, 0, 1794, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1777,
	1778, 1816, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0,
	0, 0, 0, 0, 0, 0, 1800, 0, 0, 0,
	0, 1814, 1808, 0, 0, 0, 0, 0, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 0,
	1826, 0, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1799, 0, 0, 0, 1815, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 1830,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1802, 1803,
	1804, 1805, 0, 0, 0, 1801, 1777, 1778, 1785, 1810,
	1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1808,
	0, 0, 1819, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 1818, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 1807, 1809, 0, 0,
	0, 0, 1833, 1832, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 1824, 0, 1825, 0, 0, 0, 0,
	0, 1799, 1794, 1795, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0,
	1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 1826,
	0, 0, 0, 4607, 0, 1802, 1803, 1804, 1805, 0,
	0, 0, 0, 0, 0, 1785, 0, 1815, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1818, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 1807, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 1806, 1825, 0, 0, 0, 0, 0, 0, 1794,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 1777, 1778, 1816, 1810, 1811,
	1812, 1821, 1822, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 1800, 0, 0, 0, 0, 1814, 1808, 0,
	0, 1819, 0, 0, 0, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 1832, 0, 0, 0, 1826, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 0, 0, 0, 1815, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 1806, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0,
	0, 0, 4603, 0, 1802, 1803, 1804, 1805, 0, 0,
	0, 1801, 1777, 1778, 1785, 1810, 1811, 1812, 1821, 1822,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 1808, 0, 0, 1819, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 1818, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 1807, 1809, 0, 0, 0, 0, 1833, 1832,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 1824,
	0, 1825, 0, 0, 0, 0, 0, 1799, 1794, 1795,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 1791,
	1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781,
	1782, 1783, 1784, 1786, 1787, 1826, 0, 0, 0, 4519,
	0, 1802, 1803, 1804, 1805, 0, 0, 0, 0, 0,
	0, 1785, 0, 1815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 1807,
	1809, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 1806, 1825, 0,
	0, 0, 0, 0, 0, 1794, 1795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 1777, 1778, 1816, 1810, 1811, 1812, 1821, 1822, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 1800, 0,
	0, 0, 0, 1814, 1808, 0, 0, 1819, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 1832, 0,
	0, 0, 1826, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 0, 0, 0,
	1815, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 1830, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 1791, 1792,
	1798, 1820, 1797, 1793, 1806, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 0, 0, 0, 0, 4482, 0,
	1802, 1803, 1804, 1805, 0, 0, 0, 1801, 1777, 1778,
	1785, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 1808, 0, 0, 1819, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 1818, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 1807, 1809,
	0, 0, 0, 0, 1833, 1832, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 1824, 0, 1825, 0, 0,
	0, 0, 0, 1799, 1794, 1795, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797,
	1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786,
	1787, 1826, 0, 0, 0, 4481, 0, 1802, 1803, 1804,
	1805, 0, 0, 0, 0, 0, 0, 1785, 0, 1815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1818, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 1807, 1809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1806, 1825, 0, 0, 0, 0, 0,
	0, 1794, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 1777, 1778, 1816,
	1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 1814,
	1808, 0, 0, 1819, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 1832, 0, 0, 0, 1826, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 0, 0, 1815, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793,
	1806, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	0, 0, 0, 0, 4298, 0, 1802, 1803, 1804, 1805,
	0, 0, 0, 1801, 1777, 1778, 1785, 1810, 1811, 1812,
	1821, 1822, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 1808, 0, 0,
	1819, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 1818, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 1807, 1809, 0, 0, 0, 0,
	1833, 1832, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 1824, 0, 1825, 0, 0, 0, 0, 0, 1799,
	1794, 1795, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 1826, 0, 0,
	0, 4134, 0, 1802, 1803, 1804, 1805, 0, 0, 0,
	0, 0, 0, 1785, 0, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1818, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 1807, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 1806,
	1825, 0, 0, 0, 0, 0, 0, 1794, 1795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 1777, 1778, 1816, 1810, 1811, 1812, 1821,
	1822, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	1800, 0, 0, 0, 0, 1814, 1808, 0, 0, 1819,
	0, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	1832, 0, 0, 0, 1826, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 1815, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	1791, 1792, 1798, 1820, 1797, 1793, 1806, 1790, 1788, 1789,
	1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0, 0,
	4068, 0, 1802, 1803, 1804, 1805, 0, 0, 0, 1801,
	1777, 1778, 1785, 1810, 1811, 1812, 1821, 1822, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 1808, 0, 0, 1819, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	1818, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	1807, 1809, 0, 0, 0, 0, 1833, 1832, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 1824, 0, 1825,
	0, 0, 0, 0, 0, 1799, 1794, 1795, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 1791, 1792, 1798,
	1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 1826, 0, 0, 0, 4067, 0, 1802,
	1803, 1804, 1805, 0, 0, 0, 0, 0, 0, 1785,
	0, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 1807, 1809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 1806, 1825, 0, 0, 0,
	0, 0, 0, 1794, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 1777,
	1778, 1816, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0,
	0, 0, 0, 0, 0, 0, 1800, 0, 0, 0,
	0, 1814, 1808, 0, 0, 1819, 0, 0, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 1832, 0, 0, 0,
	1826, 0, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1799, 0, 0, 0, 1815, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 1830,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 1791, 1792, 1798, 1820,
	1797, 1793, 1806, 1790, 1788, 1789, 1781, 1782, 1783, 1784,
	1786, 1787, 0, 0, 0, 0, 4066, 0, 1802, 1803,
	1804, 1805, 0, 0, 0, 1801, 1777, 1778, 1785, 1810,
	1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 1808,
	0, 0, 1819, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 1818, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 1807, 1809, 0, 0,
	0, 0, 1833, 1832, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 1824, 0, 1825, 0, 0, 0, 0,
	0, 1799, 1794, 1795, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0,
	1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 1826,
	0, 0, 0, 3727, 0, 1802, 1803, 1804, 1805, 0,
	0, 0, 0, 0, 0, 1785, 0, 1815, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1818, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 1807, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 1806, 1825, 0, 0, 0, 0, 0, 0, 1794,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 1777, 1778, 1816, 1810, 1811,
	1812, 1821, 1822, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 1800, 0, 0, 0, 0, 1814, 1808, 0,
	0, 1819, 0, 0, 0, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 1832, 0, 0, 0, 1826, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 0, 0, 0, 1815, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 1806, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0,
	0, 0, 3229, 0, 1802, 1803, 1804, 1805, 0, 0,
	0, 1801, 1777, 1778, 1785, 1810, 1811, 1812, 1821, 1822,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 1808, 0, 0, 1819, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 1818, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 1807, 1809, 0, 0, 0, 0, 1833, 1832,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 1824,
	0, 1825, 0, 0, 0, 0, 0, 1799, 1794, 1795,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 1791,
	1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781,
	1782, 1783, 1784, 1786, 1787, 1826, 0, 0, 0, 3228,
	0, 1802, 1803, 1804, 1805, 0, 0, 0, 0, 0,
	0, 1785, 0, 1815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 1807,
	1809, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 1806, 1825, 0,
	0, 0, 0, 0, 0, 1794, 1795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 1777, 1778, 1816, 1810, 1811, 1812, 1821, 1822, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 1800, 0,
	0, 0, 0, 1814, 1808, 0, 0, 1819, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 1832, 0,
	0, 0, 1826, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 0, 0, 0,
	1815, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 1830, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 1791, 1792,
	1798, 1820, 1797, 1793, 1806, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 0, 0, 0, 0, 3227, 0,
	1802, 1803, 1804, 1805, 0, 0, 0, 1801, 1777, 1778,
	1785, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 1808, 0, 0, 1819, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 1818, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 1807, 1809,
	0, 0, 0, 0, 1833, 1832, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 1824, 0, 1825, 0, 0,
	0, 0, 0, 1799, 1794, 1795, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797,
	1793, 0, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786,
	1787, 1826, 0, 0, 0, 3226, 0, 1802, 1803, 1804,
	1805, 0, 0, 0, 0, 0, 0, 1785, 4751, 1815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1818, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 1807, 1809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1806, 1825, 0, 0, 0, 0, 0,
	0, 1794, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 1777, 1778, 1816,
	1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 1814,
	1808, 0, 0, 1819, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 1832, 0, 0, 0, 1826, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 0, 0, 1815, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793,
	1806, 1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
	0, 0, 3191, 0, 0, 0, 1802, 1803, 1804, 1805,
	0, 0, 0, 1801, 0, 0, 1785, 0, 3291, 0,
	0, 0, 3290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 1777, 1778, 0, 1810, 1811,
	1812, 1821, 1822, 1823, 1818, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 1807, 1809, 0, 1814, 1808, 0,
	0, 1832, 0, 3162, 0, 1780, 0, 0, 0, 0,
	0, 1824, 0, 1825, 1827, 0, 0, 0, 0, 0,
	1794, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 1816, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 0, 0, 1800, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 1826, 3163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 1802, 1803, 1804, 1805, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2708, 0, 0, 0, 0, 0, 0, 1777, 1778,
	0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 1806,
	0, 0, 1818, 0, 0, 1828, 0, 0, 0, 0,
	1814, 1808, 1807, 1809, 0, 2707, 0, 0, 1780, 0,
	0, 0, 1801, 0, 0, 0, 0, 1827, 0, 1824,
	0, 1825, 0, 0, 0, 0, 0, 0, 1794, 1795,
	0, 0, 0, 0, 1833, 0, 0, 0, 0, 1819,
	0, 0, 0, 1779, 0, 0, 1816, 0, 0, 0,
	0, 0, 0, 1799, 0, 0, 0, 0, 0, 0,
	0, 1800, 1796, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 1802, 1803, 1804,
	1805, 0, 1817, 0, 0, 0, 0, 1785, 0, 0,
	1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789,
	1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 1778, 0, 1810,
	1811, 1812, 1821, 1822, 1823, 1818, 0, 1806, 1828, 0,
	0, 0, 0, 0, 0, 1807, 1809, 0, 1814, 1808,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	1801, 0, 1824, 0, 1825, 1827, 0, 0, 0, 0,
	0, 1794, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 0, 0, 0, 0, 1819, 0, 1816,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 0, 0, 1800, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 1802, 1803, 1804, 1805, 0,
	1817, 0, 0, 0, 0, 1785, 0, 0, 1791, 1792,
	1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782,
	1783, 1784, 1786, 1787, 0, 0, 0, 0, 0, 1777,
	1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 0,
	1806, 0, 0, 1818, 0, 0, 1828, 0, 0, 0,
	0, 1814, 1808, 1807, 1809, 0, 0, 0, 0, 1780,
	0, 0, 0, 1801, 0, 0, 0, 0, 1827, 0,
	1824, 0, 1825, 0, 0, 0, 0, 0, 0, 1794,
	1795, 0, 0, 0, 0, 1833, 0, 0, 0, 0,
	1819, 0, 0, 0, 1779, 0, 0, 1816, 0, 0,
	0, 0, 0, 0, 1799, 0, 0, 0, 0, 0,
	0, 0, 1800, 1796, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1815, 1062, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 1802, 1803,
	1804, 1805, 0, 1817, 0, 0, 0, 0, 1785, 0,
	0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788,
	1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 0, 1806, 1828,
	0, 0, 0, 0, 0, 0, 1807, 1809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 0, 1824, 0, 1825, 0, 0, 0, 0,
	0, 0, 1794, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1800, 0, 0, 0, 1777,
	1778, 0, 1810, 1811, 1812, 1821, 1822, 1823, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 1808, 0, 0, 0, 0, 0, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 1815, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 1799, 0, 0, 0, 0, 0,
	0, 1817, 0, 1796, 0, 0, 0, 0, 0, 1791,
	1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789, 1781,
	1782, 1783, 1784, 1786, 1787, 0, 0, 1777, 1778, 0,
	1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 1814,
	1808, 0, 0, 0, 3292, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 1801, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1802, 1803,
	1804, 1805, 0, 1833, 0, 0, 0, 0, 1785, 0,
	0, 1819, 1779, 0, 3297, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 1818, 0, 0, 1828,
	0, 0, 0, 0, 0, 3708, 1807, 1809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 0, 1825, 0, 0, 0, 0,
	0, 0, 1794, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1816, 0, 0, 0, 0, 0, 1802, 1803, 1804, 1805,
	0, 0, 0, 0, 1817, 1800, 1785, 0, 0, 0,
	0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1818, 0, 0, 1828, 0, 1826,
	0, 0, 0, 0, 1807, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1815, 0, 0,
	0, 1824, 0, 1825, 0, 0, 0, 0, 1830, 0,
	1794, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	0, 0, 0, 0, 1777, 1778, 0, 1810, 1811, 1812,
	1821, 1822, 1823, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 1808, 0, 0,
	0, 1806, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 1826, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 1815, 0, 0, 0, 1799,
	0, 1819, 0, 0, 0, 0, 1830, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 1802, 1803, 1804, 1805, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 1819,
	0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0, 1790,
	1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787, 0, 0,
	0, 1818, 0, 0, 1828, 0, 0, 0, 0, 0,
	1832, 1807, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	1825, 0, 0, 0, 0, 0, 0, 1794, 1795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789,
	1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1777, 1778, 0,
	1810, 1811, 1812, 1821, 1822, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	1808, 0, 0, 0, 3230, 0, 1806, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1801,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	1777, 1778, 1779, 1810, 1811, 1812, 1821, 1822, 1823, 0,
	0, 0, 1799, 0, 0, 0, 1819, 0, 0, 0,
	0, 1796, 1814, 1808, 0, 0, 0, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1802, 1803, 1804, 1805,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 1791, 1792, 1798,
	1820, 1797, 1793, 0, 1790, 1788, 1789, 1781, 1782, 1783,
	1784, 1786, 1787, 0, 1818, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 1807, 1809, 0, 0, 0, 1802,
	1803, 1804, 1805, 0, 0, 0, 0, 0, 0, 1785,
	0, 1824, 0, 1825, 0, 0, 0, 0, 0, 0,
	1794, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 0, 0,
	1828, 0, 0, 1800, 0, 0, 0, 1807, 1809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 0, 1825, 0, 0, 0,
	0, 0, 0, 1794, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 1800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1815, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	1791, 1792, 1798, 1820, 1797, 1793, 0, 1790, 1788, 1789,
	1781, 1782, 1783, 1784, 1786, 1787, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 1791, 1792, 1798, 1820, 1797, 1793, 0,
	1790, 1788, 1789, 1781, 1782, 1783, 1784, 1786, 1787,
}

var sqlPact = [...]int{
	367, -1000, -1000, -1000, -1000, 180, -1000, -1000, 179, 173,
	171, 170, 168, 166, 165, 164, 162, 159, 158, -1000,
	-1000, -1000, -1000, -1000, -1000, 157, -1000, -1000, 156, -1000,
	154, 149, 146, -1000, -1000, 139, -1000, 138, -1000, -1000,
	-1000, -1000, 136, 133, 131, 92889, 92337, 93434, 2302, 113753,
	100002, 2299, 82443, 113201, 81891, 112649, 2133, 10529, 112097, 2750,
	129, -1000, 111545, 128, 126, 124, -1000, 110993, -1000, 1819,
	-1000, 123, -1000, 4844, 68031, 122, 121, 119, 2107, 117,
	-1000, 116, 115, -1000, -1000, 114, -1000, 12416, 1745, -1000,
	113, 112, -1000, 4910, 97801, 111, 107, 2420, 106, 105,
	66375, 104, 103, 2387, 2893, -1000, -1000, 2124, -1000, -1000,
	102, 101, 100, 96, 95, 94, 93, 91, 90, 89,
	87, 85, -1000, 84, 83, 82, 81, 80, -1000, 79,
	78, 77, -1000, 73, -1000, 72, 71, 70, 65, 63,
	58, 57, 56, 54, 46, 45, 44, 43, 42, 14834,
	-1000, -1000, 41, 1988, 1712, 1701, 1698, 1688, 1687, 954,
	40, 38, 37, 36, 34, 31, 28, 27, 26, 25,
	24, 21, 20, 19, 18, 16, 15, 13, 148, 12,
	11, 10, 9, 8, 7, 6, 2611, -1000, 1776, 1172,
	30905, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 121383, 114298,
	2, -58, 0, -1000, 3363, 1030, 54717, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 258, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 488, 1977, 726, -1000, -1000, -1000, 110448,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2300, -22,
	-1000, 2058, -1000, -1000, -1000, -1000, -1000, 725, -1000, 2298,
	338, 2235, -1000, -1000, -1000, 3434, 2458, 3862, 3860, 3857,
	3854, 3850, 120838, 1878, 3849, 2546, 3848, 3846, 3845, 3844,
	3843, 3840, 3839, -1000, 91785, 1052, 91233, 90681, 3426, 109903,
	90129, 109351, 75830, 46841, 1133, 3432, -1000, -1000, -1000, -1000,
	-1000, -1000, 114298, -1000, 1051, -1000, -1000, 3838, 3837, 2130,
	715, 99450, -1000, 1843, -1000, -1000, -1000, -1000, 899, 1254,
	32600, 32600, 255, -1000, -1000, -1000, -1000, -1000, -1000, 3836,
	3831, 3830, 3829, 3827, -1000, -1000, 81339, 23933, 80787, 80235,
	108799, 23369, 89577, 89025, 3824, 3823, 3822, 108247, 75266, 3564,
	3562, 1050, 2054, 1467, -1000, -1000, -1000, -1000, -1000, -1000,
	-25, 70230, 3595, 114298, -1000, 248, -1000, -1000, -1000, -1000,
	-1000, -1000, 46276, 449, 45711, 917, 45146, 738, -1000, -1000,
	-1000, -1000, 74702, -1000, 107695, 2409, 3818, 3815, 1167, 3814,
	3308, 1868, 3813, 1903, 1248, 3812, 3811, 3810, 3809, 3808,
	3807, 3804, 1543, 107143, 3009, 1585, 106591, 1739, 74138, 1038,
	88473, 93434, 2675, 106039, 1464, 1452, -1000, -1000, -1000, -1000,
	3132, 2882, 2874, 1303, -1000, -1000, -1000, -1000, 58052, 6241,
	6120, -1000, -1000, 11440, 105487, 60862, 93434, 93434, -1000, -1000,
	-1000, -1000, -1000, 44581, 324, 44016, 1112, -1000, -1000, 58614,
	2961, -1000, -1000, -1000, -1000, 43451, 308, 42886, 1021, 114298,
	-1000, 3008, 2044, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2591, 1682, 3626, 2772, 73574, 2094, 1394, 3381, 3131, 3130,
	1503, 2053, 3129, 3803, 2594, 3128, 3127, 3125, 3119, 3073,
	1516, 2608, 310, 2607, 30340, 2996, 1740, 42321, 1615, 1488,
	3062, 3059, 3639, 2026, 2078, 2076, 79683, 3802, 3801, 3327,
	3056, 3055, 2829, 3054, -1000, 2960, 1540, -1000, -1000, -1000,
	-1000, 1419, -1000, -1000, -1000, -1000, -1000, 84078, -1000, -1000,
	1306, -1000, -1000, 1306, -1000, -1000, -1000, -1000, -1000, 1418,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1776, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2544, -1000, 2112, -1000, -1000, 2491, 3335,
	3335, 3335, 3429, 444, 433, -1000, 148, -1000, -1000, 128459,
	-1000, -1000, 47406, 47406, 47406, 47406, 47406, 47406, 47406, 47406,
	2170, -1000, 710, -1000, -1000, 771, -1000, 709, 646, 584,
	-1000, -1000, -1000, -1000, -1000, -1000, 708, -1000, -1000, -1000,
	-1000, -1000, -1000, 3595, -1000, 26817, -1000, -1000, -1000, 418,
	706, 47406, -1000, -1000, 3660, 3659, 927, -1000, 233, 913,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3006, 703, 701, -1000, 699, 698, 697, 696,
	693, -1000, -1000, -1000, 692, 688, 686, 685, 684, 682,
	680, 679, -1000, 2085, -1000, -1000, -1000, -1000, -1000, -1000,
	629, 628, 628, 628, -1000, 1034, -1000, -1000, -1000, 304,
	623, 294, 621, 620, 619, -1000, 678, 677, 675, 668,
	664, 659, 656, 655, 653, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1032, -1000, -1000, -1000, -1000, -26, 114298, -1000,
	488, -26, -1000, -1000, 652, -1000, 34889, 34889, 34889, -1000,
	-1000, 2294, 47406, -1000, 2549, -1000, -18, -18, 850, 56376,
	-1000, 53609, 850, 674, 779, 62514, -1000, 2958, -1000, -1000,
	648, 231, -1000, -1000, -1000, -1000, 24495, 2954, 114298, 114298,
	93434, 93434, 93434, 3799, 3222, 47406, -1000, -1000, 67479, 114298,
	93979, -1000, -1000, 3550, 68581, 66927, 114298, 3005, 71334, 3797,
	-1000, -1000, -1000, -1000, -1000, 3198, 3795, 3794, 3793, -1000,
	114298, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 242, 3197,
	-1000, -1000, 97249, 242, 3195, -1000, 242, 3193, -1000, 96704,
	-1000, -1000, 2258, 3192, -1000, -1000, 244, 3191, -1000, -1000,
	-1000, 243, 3190, -1000, -1000, 224, -57, 3188, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	128459, -1000, -1000, -1000, 70782, -1000, 3352, -1000, -1000, 114298,
	-1000, 47406, -1000, 3546, 1746, 76944, 3476, -38, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2519, 2539, 1120, 2320, -1000,
	3247, 1702, 32600, 3293, -1000, -1000, -1000, -1000, 222, 24495,
	-1000, -1000, -1000, -1000, -1000, -1000, 3611, 3187, 1393, -1000,
	2319, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2018,
	3186, -1000, 2175, 3185, 1964, -1000, -1000, 3510, -1000, 3324,
	-1000, -1000, 2193, 3182, -17, -1000, -1000, 2308, -1000, -1000,
	-1000, -1000, 2014, -1000, 1302, 3181, -1000, 2770, 2770, 87921,
	3148, 60300, 58614, 70230, -31, -1000, -1000, -1000, -1000, -187,
	-1000, 22803, 128459, -1000, -1000, -1000, -1000, 1875, 128459, 893,
	-1000, -1000, 3180, -1000, 128459, 884, -1000, -1000, 3179, -1000,
	3004, -1000, -1000, 2419, -1000, -1000, 3788, -1000, -1000, 3786,
	-1000, 3780, 3779, 3778, -1000, 1775, 2041, 3775, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 87376, 2291, -1000, -1000,
	86272, 3001, -1000, 2418, 3475, -1000, 86824, 1037, -1000, 991,
	2414, -1000, 96159, 1005, 2406, -1000, 3774, 3417, 2704, 991,
	2404, -1000, -1000, -1000, -1000, -1000, 1012, -1000, 64169, -1000,
	64169, -1000, 1648, -1000, 120293, -18, 93434, 3595, -1000, -61,
	-1000, -1000, -1000, 1030, -1000, 57498, -1000, 57498, 98898, 76392,
	945, 716, 65821, 128459, -1000, -1000, -1000, -1000, 128459, -1000,
	-1000, -1000, -175, 2767, -1000, 76392, 59738, 128459, -1000, -1000,
	-1000, -1000, 128459, -1000, -1000, -1000, 76392, 86272, -1000, 104935,
	85727, -1000, -1000, 1539, 2568, -1000, -1000, -1000, 76392, 1334,
	76392, 76392, 76392, -1000, 104383, -1000, -1000, 2128, 1515, 3328,
	2105, 93434, -1000, 1863, -1000, -1000, -1000, 3365, 3147, 114298,
	-1000, -1000, 2999, -1000, 69678, 95614, -1000, 95069, -1000, 94524,
	-1000, 93434, -1000, 93434, -1000, 3773, 3770, 3767, -1000, -1000,
	3766, -1000, 3763, 3357, -1000, 929, 41756, 128459, 3355, -1000,
	3759, 3463, 2996, 128459, -1000, 3146, 1696, 1694, 114298, -1000,
	-1000, 114298, -1000, 114298, -1000, -1000, -1000, 1607, -1000, -1000,
	2518, -1000, -1000, -1000, -1000, 93434, 93434, 93434, 93434, 1510,
	-1000, 41191, -1000, -1000, 3053, 3756, 1779, -1000, 1849, -1000,
	2953, 3360, -1000, 1538, 1750, -1000, -1000, 251, -1000, -1000,
	-38, -1000, 119748, -1000, 2491, -1000, 114298, -1000, 2563, 2976,
	2984, 1622, 2276, 2610, -1000, 40626, 2566, 50796, 2313, 148,
	-1000, -1000, 148, 148, 32035, -1000, -1000, 68581, 68581, 24495,
	1429, 47406, 47406, 47406, 47406, 47406, 47406, 47406, 47406, 47406,
	47406, 47406, 47406, 47406, 47406, 47406, 47406, 47406, 47406, 47406,
	47406, 47406, 47406, 47406, 47406, 47406, 47406, 47406, 47406, 47406,
	47406, 47406, 47406, 47406, 47406, 47406, 47406, 2113, 47406, 1412,
	47406, 47406, 47406, 47406, 2272, -1000, -1000, 2012, 525, 2064,
	646, -1000, -1000, -1000, 3599, 3599, 3599, 354, 354, 354,
	12717, 12717, 514, 3754, 771, -1000, 47406, -1000, 67, 56929,
	47406, 25059, -1000, 433, 9558, 2484, -1000, 428, 25653, -1000,
	-1000, -1000, 26817, 584, 40032, 47406, 1009, 128459, -1000, -1000,
	1456, 3622, 22237, 2904, 2820, 645, 813, 812, 29746, 29152,
	28558, 27964, 810, 47406, 47406, 47406, 47406, 47406, 47406, 47406,
	47406, -1000, -1000, 3631, -1000, 3622, -1000, -1000, -1000, -1000,
	3622, 1427, 1425, 3622, -1000, 3622, 3622, 6746, 6746, 39467,
	38902, 38337, 51361, 37772, 47406, 27399, 37207, 36642, -1000, 114298,
	-26, 3545, 47406, 250, -1000, 126977, -1000, 250, 250, 641,
	-62, 128459, 2800, 2800, 55270, 2690, 2177, 2177, 2177, -1000,
	850, 17680, 850, 103286, 2178, 850, 850, 215, 245, 427,
	53056, 2549, 103286, 752, 635, -7, -8, -10, -1000, -1000,
	-11, -13, -1000, -1000, 93434, 634, 25059, 24495, 213, 2070,
	-80, 2626, 2625, 2623, -1000, 2619, -1000, 1815, -83, 1408,
	93434, 114298, 1477, 3753, -76, -1000, 5737, -86, -1000, 1071,
	209, 3622, -1000, -1000, -1000, -1000, -1000, 3750, 3742, -1000,
	1017, 633, 632, 432, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 629, 628, 628, 628, -1000, 304, 623, 294,
	621, 620, 619, -1000, -1000, -1000, -1000, -1000, 2951, 93434,
	114298, 1446, 3741, -187, 93979, -63, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 114298, -1000, -1000, -1000, 3737, -1000,
	93434, -1000, -1000, 93434, 242, 3178, -1000, 93434, -1000, 93434,
	236, 3173, -1000, -1000, 114298, -1000, 93434, 93434, -1000, 114298,
	114298, 114298, 76392, 76392, 249, -1000, 93434, 854, -91, 1171,
	-38, -1000, -1000, -1000, 1306, -1000, 1721, -1000, -1000, -1000,
	-1000, -1000, -1000, 1549, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 927, -1000, -1000, -1000, -1000, -1000, -1000, 3618,
	3616, -28, -1000, -1000, 24495, -1000, -40, 1658, 1953, 1396,
	-1000, 79131, 2416, 3342, 3735, 2686, 3318, 1644, -1000, 1606,
	-1000, 3433, 84078, 3487, 3502, 1367, -1000, 2940, -1000, -1000,
	895, 1756, 1777, 1390, 1389, 84078, 2175, -1000, 68581, -1000,
	2673, 3424, 1356, 1373, 1356, 1356, 1365, -1000, 84078, 1773,
	1388, 1386, 1345, 2111, 1981, 1978, -1000, -1000, -1000, 1258,
	1257, 800, 1974, -1000, -41, 3484, 3495, 1350, -1000, 2937,
	1256, -1000, -1000, -1000, 3419, 93434, 24495, 1594, 1578, 1573,
	1770, 1251, -30, -1000, 3480, 1249, 1247, -1000, 1036, 5107,
	3261, -1000, 76392, 1036, 1036, 1919, 3172, 2751, 1627, -1000,
	2765, 820, 2763, -1000, -1000, -1000, 820, -31, 70230, 114298,
	205, -1000, 67, 47406, 47406, 67, 47406, 67, 3457, 3169,
	-1000, -1000, -1000, -1000, -1000, 3734, 1999, 2543, -1000, -1000,
	618, 2401, 2936, 114298, 2666, -32, 93434, -1000, 69126, 3166,
	71886, 2175, 2396, -1000, -1000, 85175, -1000, 3151, 488, 2392,
	-1000, 662, 3729, 3143, -1000, 119203, -1000, 3352, 1260, 3142,
	1116, 694, 3537, -1000, 694, 64721, -1000, 114298, -1000, -18,
	831, 78041, -96, -97, 422, -1000, 103838, 114298, 1115, 78586,
	114298, 3282, 988, 58614, -1000, 58614, -105, -175, 2758, 1577,
	945, 945, 820, -1000, 820, -1000, 93434, 2981, -1000, -1000,
	76392, 945, 945, 945, -1000, -1000, -1000, -1000, 3727, 3726,
	3725, 3721, -1000, -1000, 990, 93434, 114298, 93434, -1000, -1000,
	-1000, 1499, 201, -1000, 114298, -1000, 114298, 114298, 93434, -1000,
	990, 114298, 990, 114298, 990, 114298, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 67, -1000, -1000, 128459, -1000, 47406, -1000,
	-1000, 3720, 1683, -1000, 2980, -1000, 2978, -1000, 23, -1000,
	-1000, 1881, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3719,
	128459, -1000, 1865, -1000, -1000, -1000, -1000, 93434, 93434, 93434,
	93434, 114298, 3260, -1000, 114298, 3257, 93434, -1000, -1000, 84078,
	-1000, 2563, 2976, -1000, -1000, -1000, -1000, -1000, -1000, 1410,
	2242, -1000, 2589, -1000, 1628, -1000, -1000, -1000, 128459, 51926,
	-1000, -1000, 128459, 1857, -1000, 50231, 49666, -1000, -1000, 1754,
	93434, 2638, -1000, 2638, -114, -1000, 126784, 2583, 93434, -1000,
	-1000, -1000, -1000, -1000, 888, 727, 727, 1271, 1271, 1271,
	1271, 3440, 957, 2223, 617, 8606, 8606, 5280, 5280, 5280,
	5280, 5280, 8606, 508, 354, 354, 508, 508, 508, 508,
	508, 354, 354, 354, 8606, 8606, 8606, 354, 12717, 12052,
	9826, 47406, 47406, 1246, 2005, 525, 9686, 47406, 10164, 10164,
	10164, 10164, -1000, 1933, -1000, -1000, -1000, -1000, 2926, 615,
	51361, 51361, -1000, -1000, -1000, -1000, 26235, 47406, -1000, -1000,
	-1000, -1000, 36048, -1000, -1000, 126160, -314, 420, -1000, 198,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 419, -98, 3, -1000, 47406, 47406, 47406,
	416, -1000, 196, 47406, 114298, -1000, 122546, 749, -167, -1000,
	-112, 1405, -1000, 47406, -1000, -1000, 1245, -1000, 1243, 1242,
	1241, -1000, 614, 412, -1000, 189, -1000, 2173, 603, 601,
	47406, -1000, -1000, -1000, -1000, -1000, 125901, -1000, -1000, 125734,
	-1000, -1000, 125475, -1000, -1000, 125308, -1000, -1000, -1000, 128396,
	122483, 16900, 16522, 7920, 16088, 15704, -113, 411, -118, 410,
	882, 880, 409, 405, 403, -119, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -120, 396,
	-1000, 2921, -98, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 395, -1000, 394, -1000, 128023, -98, 392, 7979, -1000,
	51361, 51361, 51361, 51361, -1000, 390, -1000, 126586, -1000, 127756,
	35483, 35483, 35483, 387, 127648, 47406, -98, -121, -1000, -126,
	-1000, -1000, 522, -128, 1003, 34889, 54163, 24495, -1000, 1003,
	1003, 47406, -1000, 47406, 2603, -1000, -1000, -1000, -1000, 2602,
	2547, 2800, 55270, -1000, -1000, -1000, -1000, 103286, -1000, 3595,
	2778, -1000, 103286, -1000, -1000, 114298, 488, -1000, 103286, 103286,
	24495, 850, -1000, 850, 103286, 793, -1000, -1000, -1000, -1000,
	-1000, 386, 61969, 3, 188, 24495, 991, -1000, -1000, 2684,
	2684, 2684, 2684, -1000, -1000, 114298, 1240, -33, -104, 2757,
	-1000, 3569, -1000, 2101, -1000, 68581, -1000, 770, 1185, 24495,
	-1000, -1000, -1000, 597, -1000, 3622, 3622, -1000, 3622, 114298,
	2913, 176, 2755, -1000, 125, 71886, 71886, 3717, -1000, -1000,
	242, -1000, 93434, 242, 242, -1000, 93434, 93434, 2258, -1000,
	244, -1000, 243, -1000, -1000, -57, -1000, 1000, 32600, -1000,
	1306, -1000, -1000, 1587, -1000, 2021, -1000, 1360, -1000, -1000,
	-1000, -1000, 32600, -1000, 2155, 114298, 114298, 93434, -1000, 114298,
	-1000, 2121, 71886, -1000, 2391, 118658, 2384, 68581, 114298, -1000,
	-1000, 596, 911, 2576, 2572, 1106, 114298, 114298, 2571, 118113,
	117568, -1000, 3716, 114298, 2068, 47406, 3414, 2157, 2506, 67,
	67, -1000, 67, 67, 67, -1000, 591, 1354, 93434, 93434,
	114298, 71886, 93434, 1906, -1000, -1000, -1000, -1000, -1000, 84623,
	-1000, -1000, 3630, 3629, -1000, 1356, -1000, -1000, -1000, 1356,
	2175, 1884, 114298, 71886, 93434, 71886, -1000, -1000, 2181, 117023,
	116478, 1755, 114298, 1450, -1000, 800, 2123, 67, 67, -1000,
	67, 67, 67, 590, 24495, 1995, -1000, 2992, 114298, 3657,
	115933, 3655, 114298, 114298, 114298, 71886, 3333, 114298, 114298, 71886,
	-1000, 115388, 3512, 2544, 5107, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 73010, 1122, 114298, 1302,
	-1000, -1000, 1752, 1236, 1234, 84078, 2159, 1751, 1855, 114298,
	58614, 970, 58614, 2713, -1000, -1000, 21671, -1000, 128459, 128459,
	-1000, 128459, -1000, 69126, 114298, -1000, 1031, 114298, 78586, 940,
	3141, 63617, -187, 945, 76392, 93434, -32, 2666, 114298, -1000,
	-1000, 2175, 3137, 488, 2390, -1000, 76392, 3536, 3136, 589,
	3715, 3714, -1000, 93434, 2289, 2389, -1000, -1000, 114843, 3208,
	800, 114298, 1003, 55270, 1991, -1000, 61416, 1070, 114298, 1871,
	118, -1000, -1000, -1000, 5, 114298, -1000, 624, -1000, -1000,
	831, 831, 945, -239, 588, -1000, 841, 839, 59176, 76392,
	-133, -1000, -1000, -1000, -1000, 2384, 93434, 114298, 1270, 2701,
	114298, -134, -1000, 187, 585, -1000, 3084, -1000, -175, -1000,
	988, 58614, 2912, 2911, -1000, -1000, 999, -1000, 1535, 945,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -19, 114298, -187, -187, -50, -33, -1000, 990, -1000,
	990, -1000, 990, -1000, 128459, -1000, -1000, 1666, 1657, 114298,
	-1000, -1000, 114298, -1000, 24495, 114298, 93434, 24495, 93434, 2975,
	2973, -1000, -1000, -1000, 114298, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1128, -1000, 1857, 2240, -1000, 584, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2480, -1000, -35,
	32035, 852, -1000, -1000, 93434, -20, 47406, 47406, 9087, 7734,
	47406, 51361, 51361, -1000, 47406, 6886, -1000, -1000, -1000, -1000,
	-1000, 2906, 583, 47406, 68581, 7672, 7528, -1000, 385, 14217,
	508, -1000, 47406, -1000, 576, -1000, 382, 34324, -1000, 127175,
	-48, -135, -1000, 18259, -98, -136, -1000, -1000, 768, -1000,
	3155, -1000, 47406, 127368, 2449, 2008, 1880, 1710, 3622, 3654,
	21105, -1000, 65271, 1006, 2199, 125049, -1000, -1000, -1000, -1000,
	68581, 68581, 47406, 47406, -1000, 47406, 47406, 47406, -1000, -1000,
	-1000, 3622, 866, -1000, -1000, -1000, 866, -1000, -1000, 1356,
	-1000, 1356, -1000, 47406, -1000, -1000, 2900, 47406, -1000, 68581,
	68581, 51361, 51361, 51361, 51361, 51361, 51361, 51361, 51361, 51361,
	51361, 51361, 51361, 51361, 51361, 51361, 51361, 51361, 51361, 51361,
	51361, 2599, 51361, 3594, 3594, 3594, 1252, -1000, 2970, 2900,
	47406, 47406, 68581, 380, 378, 377, -1000, 47406, -98, -1000,
	-1000, 5949, 580, -1000, 2465, -1000, 2810, -1000, 47406, -1000,
	-143, -1000, 2549, -1000, -1000, 2810, 2810, -141, 128459, 55270,
	55270, -1000, 579, 47406, 2601, -1000, -1000, 742, -310, -1000,
	835, -1000, -1000, -1000, -1000, -1000, -1000, 488, -1000, -1000,
	-1000, 186, 103286, 103286, 740, -1000, -142, -1000, -1000, -150,
	-1000, 3534, 373, 24495, -1000, 1003, 2835, -1000, -1000, -1000,
	-1000, -1000, -1000, -187, 114298, 114298, 1747, 2233, 3652, -1000,
	3625, 762, 737, 185, 3622, 364, 359, 356, -187, 114298,
	114298, 1741, 114298, -1000, -1000, -1000, -1000, 242, -1000, -1000,
	-1000, 236, -1000, -1000, -1000, -1000, 2665, -1000, -38, -1000,
	-1000, -1000, 47406, -1000, -1000, 3340, 1228, 1224, -1000, -1000,
	-1000, -1000, 2884, -1000, 3103, -1000, 2375, -1000, 1075, -1000,
	1917, -1000, 47406, 577, 2699, 575, 574, 3704, 2066, 3703,
	1113, 3100, 2258, 3099, 2258, -1000, -1000, -1000, 906, -1000,
	128459, 2157, -1000, 573, 563, -1000, -40, 1652, 1936, 1222,
	998, -1000, -1000, -1000, -1000, 47406, 47406, 102741, -1000, 469,
	3324, -23, -1000, -1000, -1000, 1736, 1221, 1220, -1000, -1000,
	-1000, -1000, 2175, 1733, 1216, 1215, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2374, -1000, -1000, 3096, 997, -1000, 3045,
	3031, 873, 114298, -1000, 994, -1000, -1000, -1000, -1000, 47406,
	-1000, -41, 1214, 3469, 2372, 93434, -1000, 2258, 3091, 1211,
	-1000, 1208, -1000, -1000, -1000, 3479, 3478, 1219, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 72448, -1000, -1000, 1036,
	114298, 71886, 93434, 1847, -1000, -1000, 82988, 83533, 114298, 2751,
	-187, 820, -1000, 2398, 820, 970, 2897, -1000, 2659, 993,
	93434, 3702, 351, -152, -42, 68581, 3533, -1000, 2260, 546,
	93434, 925, -1000, 3595, -1000, -1000, -1000, 992, -1000, 3462,
	93434, 3532, 3090, 991, 67, 93434, 3614, -1000, -1000, 3530,
	93434, 3077, 2288, 2366, 2527, 800, 77496, 991, 2187, -54,
	-1000, 1871, 33730, 3322, -153, -1000, -1000, -1000, 1003, 64721,
	55270, 47406, 3701, -155, -1000, -1000, -1000, -1000, -1000, 100554,
	100554, 76392, 76392, 76392, 945, 114298, 114298, 78586, -1000, -1000,
	555, 114298, 114298, 554, -1000, 114298, 114298, 3700, 76392, -44,
	553, -1000, 834, 832, 829, -1000, -1000, -1000, -1000, -1000,
	-1000, 988, -1000, -175, 58614, 67, -1000, 2225, 93434, -1000,
	20539, -1000, -1000, -1000, -1000, -1000, -1000, 990, -187, -1000,
	-1000, 2148, 2312, 2148, 1839, 1835, -1000, -1000, 2239, -1000,
	-1000, -1000, -1000, 2639, 3330, 24495, 3459, 10164, 47406, 47406,
	476, 7141, 950, 10164, 47406, 47406, 68581, 16802, -160, 47406,
	47406, -1000, 47406, 734, 128459, -1000, 3649, 47406, 343, 340,
	-1000, -1000, -1000, 3609, -1000, -1000, -1000, 128459, 47406, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 336, -1000, 183, -1000,
	-1000, -1000, 121928, -1000, 47406, 333, 3412, -1000, 331, 328,
	11670, 6408, 124882, 124623, 124456, 327, -1000, -1000, 326, 322,
	128459, 2970, 128459, -1000, -1000, 870, 870, 1340, 1340, 1340,
	1340, 3594, 515, 1008, 1056, 2042, 2042, 2042, 989, 1252,
	1252, 2042, 2042, 2042, 1252, 2895, 2509, 552, 8505, -1000,
	-1000, 128459, 128459, 321, -1000, -1000, -1000, -98, 320, 5949,
	-1000, 2806, 3407, 128459, -1000, 55270, 2806, 2806, -1000, -1000,
	2547, 114298, 128459, 55270, -1000, 2778, -1000, 18836, -1000, 24495,
	-1000, -1000, -1000, -1000, 3595, -1000, 61969, -1000, 551, -1000,
	4, -1000, 2835, -1000, 826, -1000, -1000, 76392, 76392, -187,
	-237, 114298, -1000, -1000, 732, 3699, 759, 24495, 317, -1000,
	-1000, -1000, -187, -187, 114298, -187, -1000, -1000, -1000, 3281,
	128459, 114298, 114298, 1531, 102196, 114298, 3075, -1000, 4953, -1000,
	1106, 124197, 55823, -1000, 55823, 114298, -1000, -1000, -1000, 1939,
	1506, 3697, 1157, -1000, 3369, 114298, -1000, 114298, -1000, -1000,
	-1000, 114298, 114298, 93434, 114298, -1000, 71886, 3058, -161, 128459,
	-45, -1000, 825, -1000, 1370, -1000, 19973, 114298, 71886, 93434,
	114298, 71886, 93434, 3070, 114298, 2160, -1000, -1000, 3030, -1000,
	3052, -166, 24495, -1000, 3648, 3644, 3069, 3373, -1000, 114298,
	3643, 114298, 93434, 3279, -1000, -1000, -1000, -1000, -1000, -1000,
	1731, 1207, 1206, 2274, -47, 2268, 2232, -50, 2159, 970,
	-51, 548, -1000, 821, -1000, -1000, 818, -1000, 970, -1000,
	76392, 58614, 3695, 488, -1000, 2685, -1000, 98346, 2286, 67,
	-1000, 3692, 101106, 547, -1000, 2204, -1000, 729, -1000, 2475,
	71886, 2175, 67, 93434, -1000, -1000, 488, 316, -52, -1000,
	3153, 1081, 24495, 93434, 3066, 2531, 800, 77496, -1000, 1260,
	2610, -1000, -53, -1000, 638, 67, 2187, -1000, -54, 128459,
	-1000, 816, -1000, -174, -1000, -1000, 315, -1000, 3277, 3276,
	-1000, 2819, 55823, 545, 541, 114298, 3273, -1000, -1000, -176,
	3110, 3110, 76392, 58614, 76392, -1000, 988, 820, -1000, 2413,
	-1000, -1000, -1000, -1000, -1000, 24495, 1748, -1000, 540, 539,
	-1000, -1000, -1000, -1000, 3330, 10164, 10164, 47406, 47406, 47406,
	10164, 16802, -177, -1000, 10164, 10164, -98, -1000, -1000, 127175,
	-1000, -1000, -1000, 128459, -1000, 19407, 2149, -1000, 124030, -1000,
	32035, -1000, -1000, 47406, 47406, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 51361, 2880, 535, 68581, -1000, -1000, 301,
	955, 47406, 49101, 2549, 955, 955, -1000, -184, -1000, -1000,
	-1000, 3595, 4, -1000, -1000, 3690, 24495, -1000, 76392, -1000,
	-1000, 3687, -183, 757, -1000, 3686, -1000, -1000, 108, -1000,
	-1000, -1000, 2745, 3528, -1000, 1948, -1000, 114298, -1000, 114298,
	-1000, 24495, 114298, 2828, 1299, -1000, 911, 2570, 534, 51361,
	93434, 889, -1000, 3518, 2777, -186, -1000, 114298, 47406, 114298,
	-191, -192, 2343, -1000, -1000, 1279, 47406, -1000, -1000, -1000,
	68581, 533, 2258, 2258, -193, -194, -1000, -1000, -1000, 47406,
	1204, 114298, 33165, -1000, 3681, 3324, -1000, -1000, -1000, -1000,
	-1000, -1000, 114298, -1000, 114298, -1000, 47406, 1203, -1000, -1000,
	-1000, 3642, 2258, 24495, 2258, -1000, 2258, 3373, 1147, 114298,
	71886, 93434, 1711, 1711, 2969, -1000, -1000, -1000, 2564, 2564,
	76392, 58614, -1000, -57, 970, -1000, 3527, 2682, 3676, -1000,
	-1000, -1000, -1000, 2558, -1000, -1000, 114298, 2557, 958, -1000,
	-201, -1000, 815, 809, 78586, 940, 874, -1000, -59, 531,
	-1000, 808, -1000, -1000, -1000, -1000, 488, 3525, -1000, 3637,
	529, 527, 114298, 2265, 526, 24495, 3320, 800, 77496, -1000,
	3208, 1871, -1000, 2360, 114298, 3315, -1000, 2610, 525, -1000,
	945, 524, 523, 3295, 3295, -208, 55823, 55823, -209, 520,
	945, -1000, -211, -1000, -1000, -1000, -1000, -1000, -67, -1000,
	857, 856, -1000, -1000, 93434, 93434, 47406, 47406, -1000, 10164,
	10164, 10164, -1000, 280, -1000, -1000, 2187, 3405, -1000, -68,
	123771, 123604, 2186, 51361, 68581, -214, -1000, -1000, 114298, 128459,
	-73, -1000, 128459, 517, 516, 441, -1000, -1000, -1000, 728,
	-1000, -1000, -1000, 114298, 3675, -1000, 114298, 101651, 114298, -1000,
	-1000, 1950, -1000, -1000, -1000, 114298, 2365, -1000, -1000, -1000,
	1105, 47406, 8505, 512, 47406, -1000, 3520, -1000, 2679, 2870,
	1956, 55823, -1000, 3330, -1000, 123345, -1000, 1078, 1989, -1000,
	-1000, -1000, 128459, 3373, 55823, -1000, -1000, 495, 494, 128459,
	493, 804, 2876, -1000, -1000, -1000, -1000, -1000, 128459, 492,
	3469, -1000, -1000, -1000, -1000, 2258, 93434, -1000, -1000, -1000,
	1202, -1000, -1000, -1000, -1000, 3672, 3670, 2866, 82988, -1000,
	-216, -1000, -1000, 1996, 67, 2129, 2736, -1000, 2286, 491,
	-1000, -1000, 2246, 2636, -1000, 101106, 32600, 32600, 277, 3519,
	874, -1000, 3598, -1000, 3239, 3239, 47406, 3517, 67, -1000,
	3614, 55823, -1000, 93434, 55823, 2264, 2067, 2515, 77496, -1000,
	2527, -1000, -1000, -217, 114298, 1871, -1000, -1000, 76392, 76392,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1078, -219, -222, -1000, 76392, -1000, -1000, 2413, -1000,
	114298, -1000, 114298, -1000, -1000, -224, -225, -1000, 2131, 47406,
	32035, -1000, -1000, 2186, -227, -1000, -93, -1000, 3491, 49101,
	3669, 3666, 3665, -1000, -187, -1000, -187, -1000, 1937, -1000,
	-1000, -1000, 3061, 2804, 123178, 2469, 114298, 122919, -1000, 2868,
	-1000, -1000, 2682, 490, -1000, -1000, -1000, -1000, 852, 114298,
	2682, 2794, 93434, 1090, -230, 2148, 2148, 47406, 31470, 2158,
	47406, -1000, -1000, 3373, 114298, -1000, -1000, 114298, 2261, -1000,
	2850, 3613, -1000, 940, -1000, 2132, 114298, -1000, 3362, -1000,
	3264, -1000, -1000, -1000, 2685, 67, -1000, -1000, -1000, -238,
	128459, 67, -1000, 264, -243, 1081, -244, 93434, 2029, -1000,
	800, -1000, 2531, 1003, -1000, -1000, -246, -249, 1956, 1078,
	2123, -251, -1000, -252, -254, -1000, -1000, 263, 48536, 48536,
	48536, -98, -114, -1000, 114298, 489, -1000, -1000, -1000, -1000,
	-1000, 3026, 968, -1000, 2250, 1926, 127, 1076, -1000, -1000,
	2123, 114298, -1000, -1000, -1000, 962, 488, -1000, 47406, 1078,
	-257, -1000, 1059, -259, -1000, 1058, -262, -1000, 2865, -1000,
	-267, 2258, -260, 234, 1711, 960, 3456, -1000, -1000, -1000,
	2246, 93434, -269, -1000, -1000, 2373, -1000, 2682, 958, -1000,
	-1000, -1000, 1078, 478, 1956, 459, 1555, 800, -1000, -1000,
	1356, 3320, 3216, 945, 945, 2682, 1956, 937, -1000, 945,
	-1000, -1000, -1000, 3134, -1000, 52491, 2281, 1826, 126327, 3134,
	3134, -1000, -1000, 114298, 3443, -1000, 2254, 2253, 1528, -1000,
	-1000, -1000, -1000, -1000, -1000, 2777, -270, 3431, 2469, 128459,
	2682, -1000, 2148, 2735, -1000, 2148, 2859, -1000, 2115, -1000,
	-1000, -1000, 2833, -1000, 2854, -1000, 1784, 3586, 2486, 456,
	-1000, 114298, 1806, 1803, 3664, 2129, 2246, 1956, 55823, 2682,
	55823, 2108, -1000, 114298, -1000, 2067, 1361, -1000, -1000, 2123,
	2682, 1003, 455, -1000, -1000, 1846, 3500, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 799, -1000, 3232, -1000, 1126,
	2118, 2118, 1003, -1000, 798, 2250, -1000, -1000, 448, -1000,
	447, -1000, 2230, 114298, 2188, -1000, -1000, -1000, -1000, 114298,
	-1000, -1000, 3619, -1000, 940, -1000, 2682, -275, 2123, -277,
	-1000, -1000, -1000, -187, 2029, -1000, 1641, 937, 2123, -1000,
	1821, -1000, -1000, 2180, 47971, 47406, -1000, 3572, -1000, -1000,
	2562, -1000, -1000, 47406, 2777, 47406, 47406, -1000, 234, 63067,
	-278, -1000, 2246, 2123, 1078, 937, 1956, 1555, 64721, 1003,
	937, -1000, -1000, -1000, 128459, -1000, -1000, -1000, 128459, -1000,
	-280, -293, -1000, -239, 100554, 2245, 2486, 937, 1956, 1003,
	2682, 2108, -265, -1000, 1003, 2123, 1200, -301, -1000, -1000,
	-1000, -1000, 1003, 2682, -1000, 2123, -1000, -1000, -1000, -1000,
	-1000, 446, -1000, -1000, 2123, 937, 47406, 937, 1003, -303,
	1003, -1000, 2123, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4523, 4520, 4519, 4518, 4517, 4516, 4515, 4514, 4511,
	4507, 4502, 4501, 140, 4500, 4499, 4496, 4495, 4494, 4493,
	4492, 4491, 4476, 4474, 4472, 4471, 4470, 4469, 4468, 4467,
	4465, 4459, 4456, 4455, 4453, 4452, 4451, 4448, 4447, 4445,
	4444, 4443, 4442, 4441, 4440, 4438, 4437, 4436, 4433, 4430,
	4429, 4426, 4425, 4422, 4421, 4420, 4416, 4414, 4413, 4410,
	4409, 4406, 4405, 4401, 4400, 4399, 53, 4398, 4396, 4395,
	4391, 4389, 4388, 4387, 4386, 4385, 4384, 4383, 4382, 4380,
	4379, 4378, 4377, 4375, 4374, 4372, 4371, 68, 4367, 281,
	4364, 4361, 4360, 4359, 4358, 4357, 4356, 4355, 4351, 4350,
	4348, 4347, 280, 4344, 134, 164, 4339, 4334, 3866, 4333,
	4332, 275, 4330, 4328, 4327, 4326, 285, 4325, 4324, 4321,
	4320, 4319, 4318, 4317, 4315, 4314, 4307, 4306, 88, 202,
	4303, 4302, 1215, 4301, 4300, 4292, 4289, 4282, 4281, 4280,
	4279, 4278, 4276, 253, 173, 4274, 274, 4272, 4271, 4270,
	4269, 4265, 4264, 4262, 4261, 4260, 4259, 4258, 4257, 4256,
	4255, 4250, 4245, 4244, 4243, 4241, 4237, 4236, 4231, 4230,
	4228, 4227, 4225, 4217, 4214, 4213, 4212, 4211, 4210, 4206,
	4204, 4200, 4199, 4198, 4196, 4195, 247, 170, 192, 4194,
	4189, 273, 272, 4188, 4178, 4175, 4174, 4173, 128, 11,
	92, 4172, 4171, 90, 85, 83, 98, 103, 100, 4170,
	110, 4169, 125, 69, 4168, 16, 2, 168, 256, 9470,
	240, 4167, 4166, 4165, 252, 201, 4164, 244, 4162, 4161,
	4159, 4158, 4154, 70, 48, 196, 180, 178, 175, 33,
	4153, 160, 104, 78, 56, 50, 12, 74, 217, 19,
	1, 220, 4152, 261, 8, 133, 7, 42, 4150, 4149,
	4148, 4146, 2973, 136, 4145, 267, 250, 172, 4144, 4143,
	4142, 1229, 4141, 4140, 47, 4135, 334, 108, 127, 73,
	123, 4132, 151, 166, 34, 4129, 162, 63, 4128, 157,
	97, 93, 9648, 10879, 4127, 4126, 111, 67, 99, 619,
	195, 182, 206, 203, 161, 165, 122, 219, 218, 183,
	190, 4124, 258, 4121, 3514, 80, 184, 152, 5174, 4120,
	4119, 4118, 87, 205, 112, 4116, 4113, 76, 17, 24,
	4, 6, 144, 23, 22, 10, 4111, 31, 119, 46,
	25, 4108, 27, 4107, 4106, 4104, 4103, 4101, 49, 171,
	4100, 4098, 282, 4096, 106, 54, 43, 4095, 179, 223,
	4092, 231, 131, 4087, 4080, 259, 211, 186, 4079, 81,
	238, 4076, 4075, 4073, 4072, 4071, 137, 3, 124, 4070,
	4067, 146, 4062, 51, 241, 197, 4059, 64, 4058, 4055,
	177, 107, 142, 277, 199, 229, 120, 233, 193, 235,
	4054, 4053, 4050, 181, 4049, 4048, 228, 155, 4042, 4041,
	249, 286, 94, 40, 79, 243, 82, 200, 154, 4036,
	209, 4034, 4033, 284, 185, 225, 20, 14, 89, 129,
	4031, 5, 236, 156, 224, 117, 4028, 6925, 2654, 2850,
	4027, 4024, 147, 121, 77, 130, 158, 266, 102, 4023,
	4019, 2479, 4018, 4017, 4012, 4010, 187, 4009, 4008, 4007,
	145, 153, 204, 4006, 96, 71, 52, 30, 126, 255,
	268, 114, 230, 167, 263, 4005, 4002, 4001, 188, 4000,
	58, 113, 169, 207, 248, 57, 3998, 198, 3995, 139,
	561, 65, 150, 3994, 232, 3992, 3991, 3990, 3988, 3987,
	3979, 3977, 246, 239, 3975, 3972, 3968, 36, 194, 3966,
	262, 163, 213, 105, 66, 3965, 91, 4208, 3964, 222,
	2262, 59, 265, 454, 264, 3963, 3476, 55, 3962, 0,
	13248, 7749, 11417, 12707, 3959, 5399, 3958, 3956, 3955, 221,
	143, 3954, 3953, 3951, 109, 3950, 84, 3949, 3948, 72,
	3947, 28, 15, 18, 26, 32, 1142, 789, 3946, 3945,
	29, 132, 148, 3943, 269, 234, 3940, 3938, 3937, 3934,
	95, 3932, 41, 3930, 38, 3929, 3927, 39, 13, 35,
	3925, 3922, 208, 3908, 226, 254, 3907, 159, 3905, 61,
	138, 3904, 3902, 3901, 62, 60, 260, 86, 3900, 279,
	3899, 215, 3897, 3894, 21, 3893, 3891, 245, 118, 115,
	3890, 251, 141, 44, 214, 176, 227, 3888, 3886, 174,
	3885, 3881, 3880, 271, 3879, 3878, 37, 3876, 9, 3875,
	3874, 210, 3227, 3873, 3872, 45, 3871, 189,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 51, 51, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 37, 38, 32, 32,
	33, 33, 34, 35, 35, 10, 10, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 18, 18, 39, 39,
	19, 19, 41, 41, 20, 20, 42, 42, 596, 596,
	614, 614, 23, 23, 44, 44, 24, 45, 17, 597,
	597, 597, 597, 36, 25, 46, 29, 29, 29, 29,
	29, 201, 201, 201, 201, 22, 22, 40, 40, 236,
	236, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 592, 592, 238,
	238, 237, 231, 231, 232, 232, 598, 598, 239, 239,
	239, 241, 241, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 491, 491, 491, 524, 524, 523, 523,
	523, 522, 522, 618, 618, 619, 619, 619, 619, 619,
	131, 131, 389, 389, 389, 55, 55, 55, 55, 55,
	587, 587, 203, 203, 203, 205, 205, 204, 204, 204,
	204, 204, 78, 78, 603, 603, 604, 604, 602, 605,
	605, 605, 202, 202, 202, 127, 127, 127, 127, 127,
	127, 128, 128, 129, 129, 206, 206, 206, 208, 208,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 212,
	16, 16, 16, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 107, 107, 526, 526, 527, 527, 197, 197,
	198, 198, 198, 198, 199, 199, 200, 200, 200, 69,
	69, 209, 209, 211, 211, 210, 210, 210, 210, 210,
	57, 57, 57, 57, 57, 57, 57, 58, 58, 58,
	58, 58, 59, 59, 59, 59, 59, 59, 60, 60,
	60, 60, 60, 60, 67, 67, 67, 67, 67, 188,
	188, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 75, 75, 75, 75, 620, 620,
	620, 620, 620, 620, 620, 620, 620, 620, 620, 620,
	620, 620, 620, 620, 620, 620, 620, 621, 621, 622,
	622, 623, 623, 624, 624, 624, 624, 624, 624, 624,
	624, 624, 624, 624, 624, 624, 624, 624, 624, 624,
	624, 624, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 84,
	84, 350, 350, 313, 313, 85, 85, 85, 86, 86,
	87, 87, 71, 71, 585, 585, 366, 366, 482, 482,
	72, 593, 593, 593, 595, 595, 594, 594, 89, 89,
	388, 388, 90, 90, 90, 90, 90, 90, 91, 91,
	91, 91, 91, 91, 91, 92, 92, 92, 92, 92,
	92, 92, 92, 92, 92, 92, 92, 92, 92, 99,
	99, 99, 99, 99, 100, 100, 100, 97, 97, 97,
	94, 94, 94, 93, 93, 93, 98, 98, 98, 584,
	302, 302, 96, 96, 96, 95, 95, 95, 367, 367,
	101, 101, 101, 101, 314, 102, 102, 102, 102, 102,
	102, 102, 102, 105, 105, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 484, 484,
	103, 103, 103, 449, 449, 108, 108, 108, 404, 404,
	109, 109, 109, 109, 109, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 130, 130, 130, 130, 130, 130,
	130, 130, 589, 589, 359, 359, 265, 265, 265, 265,
	120, 120, 120, 120, 121, 121, 121, 122, 122, 193,
	193, 137, 137, 137, 137, 137, 136, 136, 136, 136,
	136, 136, 61, 61, 61, 62, 62, 63, 63, 64,
	64, 65, 65, 66, 66, 66, 66, 66, 139, 139,
	615, 615, 141, 138, 138, 138, 140, 140, 140, 140,
	142, 144, 144, 144, 144, 143, 143, 143, 143, 143,
	145, 145, 516, 516, 375, 375, 514, 514, 536, 536,
	515, 515, 320, 320, 320, 320, 320, 321, 321, 321,
	525, 525, 525, 525, 525, 525, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 194,
	194, 195, 196, 196, 196, 196, 196, 171, 171, 171,
	187, 187, 187, 187, 187, 187, 187, 174, 174, 174,
	158, 158, 147, 147, 147, 147, 147, 147, 147, 152,
	152, 152, 152, 152, 152, 152, 152, 148, 148, 160,
	160, 160, 160, 160, 153, 153, 154, 154, 155, 155,
	155, 155, 181, 181, 157, 157, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 149, 149, 149, 149, 162,
	162, 162, 162, 411, 411, 411, 186, 186, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 184, 184, 184, 184, 184, 184,
	606, 606, 607, 607, 178, 178, 178, 178, 178, 178,
	463, 463, 172, 172, 172, 172, 177, 177, 177, 177,
	180, 180, 180, 180, 394, 394, 169, 169, 169, 170,
	170, 170, 175, 175, 176, 351, 351, 173, 173, 179,
	179, 179, 179, 150, 150, 150, 150, 150, 150, 150,
	151, 151, 151, 151, 182, 182, 168, 168, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 625,
	625, 164, 164, 164, 163, 163, 163, 163, 166, 166,
	167, 167, 167, 167, 167, 167, 165, 156, 185, 586,
	586, 582, 582, 582, 582, 582, 582, 582, 582, 583,
	583, 583, 583, 588, 588, 113, 113, 113, 113, 113,
	123, 123, 123, 123, 123, 114, 114, 114, 114, 114,
	116, 116, 115, 115, 115, 115, 79, 79, 79, 79,
	79, 15, 15, 15, 80, 80, 256, 256, 215, 215,
	215, 339, 339, 216, 216, 328, 328, 328, 328, 213,
	213, 214, 214, 81, 81, 626, 626, 626, 599, 599,
	599, 600, 600, 600, 600, 600, 600, 322, 322, 323,
	323, 429, 429, 429, 429, 429, 326, 326, 326, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 329, 329,
	240, 240, 240, 337, 338, 338, 330, 330, 336, 335,
	335, 334, 334, 333, 333, 331, 332, 332, 332, 341,
	341, 340, 343, 343, 342, 428, 545, 545, 547, 547,
	547, 547, 547, 547, 547, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 412, 412, 627,
	627, 543, 543, 543, 544, 539, 539, 540, 540, 540,
	540, 540, 324, 324, 325, 325, 325, 325, 541, 542,
	357, 357, 467, 546, 546, 548, 548, 550, 628, 628,
	628, 628, 628, 628, 629, 629, 629, 427, 427, 426,
	426, 348, 348, 551, 551, 551, 551, 552, 552, 552,
	552, 552, 555, 554, 553, 553, 553, 553, 553, 83,
	83, 83, 391, 391, 390, 390, 392, 392, 392, 392,
	392, 392, 392, 392, 392, 392, 392, 392, 392, 392,
	392, 190, 190, 268, 268, 77, 77, 77, 12, 12,
	12, 12, 12, 12, 12, 283, 283, 13, 13, 13,
	601, 601, 601, 82, 82, 82, 82, 82, 82, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 591,
	591, 590, 590, 269, 269, 631, 631, 88, 88, 88,
	88, 88, 88, 88, 88, 485, 485, 486, 486, 76,
	76, 76, 76, 76, 413, 413, 410, 410, 409, 409,
	356, 356, 465, 465, 465, 466, 273, 273, 274, 274,
	233, 233, 233, 31, 30, 21, 21, 26, 26, 27,
	27, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	28, 28, 48, 48, 48, 48, 49, 49, 49, 49,
	52, 52, 53, 53, 47, 47, 47, 47, 50, 50,
	43, 43, 54, 54, 54, 54, 54, 608, 610, 610,
	609, 609, 613, 613, 613, 613, 613, 613, 611, 611,
	612, 612, 616, 616, 617, 617, 119, 119, 124, 124,
	124, 124, 124, 125, 125, 125, 125, 126, 126, 126,
	126, 135, 135, 189, 189, 189, 189, 189, 189, 189,
	56, 56, 56, 56, 68, 68, 68, 68, 133, 633,
	633, 633, 134, 134, 134, 632, 632, 266, 266, 423,
	423, 424, 424, 634, 634, 425, 425, 425, 425, 425,
	259, 258, 260, 260, 261, 261, 74, 74, 74, 249,
	249, 248, 250, 250, 251, 251, 246, 246, 528, 528,
	253, 253, 253, 254, 254, 242, 242, 243, 243, 244,
	244, 245, 245, 257, 257, 635, 635, 111, 111, 111,
	192, 192, 312, 312, 312, 420, 420, 420, 349, 349,
	280, 280, 422, 422, 422, 422, 387, 387, 387, 191,
	191, 364, 364, 377, 377, 378, 378, 479, 479, 379,
	117, 117, 118, 118, 132, 132, 219, 219, 217, 217,
	217, 217, 217, 217, 217, 217, 224, 224, 225, 225,
	226, 226, 227, 228, 228, 228, 228, 368, 368, 229,
	229, 229, 218, 218, 218, 220, 220, 220, 220, 220,
	220, 220, 223, 223, 223, 223, 230, 230, 230, 222,
	222, 562, 562, 562, 564, 564, 566, 566, 565, 565,
	561, 561, 563, 563, 630, 630, 393, 393, 393, 346,
	347, 344, 344, 345, 345, 354, 354, 352, 353, 353,
	355, 355, 464, 464, 464, 234, 234, 234, 384, 384,
	384, 384, 385, 385, 416, 416, 414, 414, 414, 414,
	415, 415, 417, 417, 417, 418, 418, 419, 419, 381,
	381, 382, 382, 383, 383, 383, 383, 445, 445, 221,
	221, 221, 361, 361, 361, 362, 362, 435, 435, 435,
	435, 435, 435, 435, 436, 436, 434, 434, 434, 434,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 469,
	470, 470, 363, 363, 471, 421, 421, 580, 580, 580,
	581, 581, 462, 462, 472, 472, 472, 472, 472, 472,
	460, 460, 461, 461, 480, 481, 481, 397, 397, 397,
	397, 395, 395, 398, 398, 398, 398, 398, 396, 396,
	473, 473, 473, 473, 386, 386, 474, 474, 474, 474,
	475, 476, 476, 477, 477, 430, 431, 431, 487, 487,
	487, 487, 489, 360, 360, 360, 360, 360, 538, 537,
	537, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 504, 504, 504, 504, 504, 504, 504, 490,
	490, 490, 490, 490, 494, 494, 494, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 495, 495,
	500, 500, 501, 501, 501, 496, 497, 502, 502, 502,
	502, 636, 636, 506, 506, 498, 498, 498, 498, 498,
	498, 498, 498, 498, 492, 492, 492, 499, 499, 499,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 405, 405, 407, 407, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 439, 439,
	439, 439, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 556, 556, 556,
	556, 556, 556, 556, 556, 441, 441, 559, 559, 560,
	560, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	567, 567, 568, 568, 570, 570, 571, 571, 572, 573,
	573, 573, 574, 575, 575, 569, 569, 576, 576, 576,
	576, 577, 577, 578, 578, 578, 578, 578, 579, 579,
	579, 579, 579, 451, 451, 452, 452, 458, 458, 458,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 319, 319, 318, 270, 270,
	270, 270, 270, 270, 373, 373, 371, 371, 371, 374,
	374, 372, 372, 370, 370, 369, 369, 448, 448, 446,
	446, 450, 450, 399, 399, 505, 505, 505, 505, 505,
	505, 505, 505, 400, 400, 400, 408, 401, 401, 402,
	402, 402, 402, 402, 442, 443, 403, 403, 403, 444,
	444, 453, 457, 457, 456, 455, 455, 454, 454, 432,
	432, 433, 433, 380, 380, 637, 637, 376, 376, 478,
	478, 478, 478, 316, 316, 365, 365, 315, 315, 307,
	307, 308, 308, 308, 308, 358, 358, 459, 459, 507,
	507, 508, 508, 509, 509, 510, 510, 511, 512, 513,
	447, 447, 291, 290, 277, 278, 289, 288, 287, 276,
	279, 284, 285, 286, 281, 282, 298, 297, 296, 247,
	252, 303, 304, 304, 306, 306, 305, 305, 293, 294,
	295, 483, 275, 309, 309, 310, 310, 310, 311, 311,
	311, 311, 271, 271, 272, 272, 299, 299, 300, 301,
	301, 292, 292, 292, 262, 262, 262, 263, 263, 264,
	264, 521, 521, 518, 518, 518, 519, 519, 519, 520,
	520, 520, 520, 517, 517, 517, 517, 517, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 530, 530, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 532, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 535, 535,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 5, 6, 9,
	6, 8, 4, 4, 5, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 6,
	6, 9, 6, 9, 6, 5, 6, 5, 1, 1,
	1, 0, 6, 6, 6, 6, 6, 6, 4, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 4, 6,
	5, 6, 5, 6, 4, 8, 3, 4, 2, 3,
	10, 3, 6, 4, 3, 1, 3, 2, 1, 1,
	3, 1, 3, 2, 2, 3, 2, 0, 1, 1,
	0, 2, 0, 7, 10, 6, 8, 6, 6, 6,
	9, 4, 3, 2, 2, 0, 1, 3, 1, 1,
	1, 1, 1, 1, 3, 6, 4, 6, 7, 9,
	6, 2, 2, 3, 0, 8, 6, 8, 7, 2,
	0, 1, 2, 5, 0, 1, 3, 3, 1, 1,
	3, 1, 12, 3, 1, 0, 1, 1, 2, 3,
	3, 0, 4, 6, 0, 5, 7, 6, 8, 8,
	2, 1, 3, 1, 3, 2, 5, 0, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 6, 4, 9, 7, 12, 12, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	5, 2, 0, 1, 2, 3, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 6, 6, 6, 6, 4, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 6, 3, 8, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 2, 1, 3, 2, 0,
	7, 2, 5, 0, 1, 3, 3, 1, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 6, 4, 7, 7, 7,
	9, 10, 5, 2, 6, 4, 7, 7, 7, 10,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 1, 5, 3, 2, 6, 3, 3, 4, 4,
	3, 1, 3, 3, 2, 1, 3, 3, 1, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 1, 1, 1, 2, 2,
	2, 1, 3, 3, 3, 3, 3, 2, 3, 3,
	1, 1, 1, 1, 1, 2, 2, 5, 7, 3,
	3, 3, 4, 4, 6, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 4, 4, 2, 6,
	4, 3, 2, 3, 4, 3, 5, 3, 6, 5,
	6, 3, 5, 6, 3, 4, 3, 4, 3, 3,
	4, 4, 5, 0, 1, 1, 1, 1, 3, 2,
	3, 4, 3, 4, 3, 5, 3, 4, 4, 3,
	4, 5, 3, 4, 3, 4, 4, 5, 3, 3,
	1, 1, 0, 2, 5, 4, 6, 4, 6, 4,
	1, 0, 3, 4, 4, 5, 7, 5, 3, 3,
	3, 4, 4, 5, 2, 0, 4, 2, 3, 4,
	2, 3, 3, 3, 5, 2, 0, 3, 3, 4,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 3,
	4, 5, 4, 4, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 4, 3, 4, 4, 5, 1,
	1, 10, 10, 3, 5, 5, 5, 3, 5, 6,
	4, 4, 5, 5, 2, 3, 2, 5, 4, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 1, 2, 0, 1, 2, 1, 2, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 6, 5, 8,
	3, 6, 6, 3, 13, 16, 1, 0, 1, 2,
	3, 0, 2, 0, 4, 0, 4, 5, 4, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 2, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 1, 1,
	0, 1, 4, 1, 0, 3, 7, 7, 1, 1,
	3, 7, 1, 3, 11, 3, 2, 0, 3, 1,
	2, 2, 3, 2, 6, 2, 1, 2, 2, 2,
	8, 4, 2, 5, 5, 5, 2, 2, 0, 1,
	3, 11, 12, 9, 5, 3, 1, 5, 10, 7,
	11, 3, 3, 0, 2, 4, 3, 3, 1, 5,
	1, 3, 1, 2, 0, 1, 2, 2, 0, 1,
	3, 3, 2, 2, 1, 1, 1, 4, 0, 6,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 5,
	8, 4, 1, 0, 1, 2, 2, 1, 2, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 4, 2, 2, 2, 4, 7, 3, 4, 6,
	5, 7, 5, 5, 3, 3, 0, 2, 2, 2,
	1, 1, 1, 8, 10, 11, 7, 10, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 11, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 17,
	20, 16, 19, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 2, 4, 2, 3, 1, 0, 2, 0,
	1, 1, 0, 9, 6, 6, 8, 6, 8, 5,
	7, 2, 6, 7, 4, 4, 5, 2, 4, 6,
	6, 8, 6, 7, 8, 9, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 6, 8, 8, 4, 7, 3, 0,
	7, 10, 1, 1, 1, 1, 2, 2, 3, 0,
	3, 0, 1, 0, 2, 0, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	3, 2, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 0, 2, 4, 2, 1, 0, 2, 1, 1,
	0, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	2, 3, 2, 2, 1, 2, 13, 16, 3, 1,
	0, 4, 1, 0, 2, 2, 3, 0, 1, 1,
	4, 4, 5, 1, 0, 3, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 4, 8, 11, 5, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	6, 4, 5, 4, 1, 1, 3, 3, 1, 2,
	4, 4, 2, 3, 5, 5, 1, 3, 1, 0,
	1, 2, 3, 2, 4, 2, 3, 0, 2, 0,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 8, 8, 8, 2, 4, 4, 4, 2,
	2, 2, 2, 3, 1, 3, 1, 2, 6, 7,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 3, 1, 3, 3, 3, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 1, 3, 2, 4, 4, 0,
	4, 4, 3, 4, 1, 5, 3, 4, 5, 5,
	1, 5, 1, 3, 2, 0, 3, 0, 2, 3,
	1, 3, 2, 0, 3, 5, 6, 4, 6, 4,
	3, 2, 1, 0, 5, 1, 0, 2, 2, 2,
	1, 1, 0, 1, 1, 1, 1, 0, 4, 2,
	1, 2, 2, 4, 1, 3, 1, 2, 3, 2,
	4, 1, 0, 1, 0, 2, 1, 0, 2, 5,
	7, 2, 1, 2, 4, 3, 5, 0, 1, 3,
	5, 1, 2, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 6, 6, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 3, 0,
	5, 4, 1, 2, 1, 4, 1, 1, 2, 1,
	1, 1, 1, 1, 0, 1, 2, 5, 1, 4,
	2, 5, 1, 4, 3, 3, 0, 1, 2, 4,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 1, 0, 1, 4, 1, 3, 3,
	3, 5, 2, 2, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 3, 3, 2, 2, 3, 5, 4, 6, 3,
	5, 4, 6, 4, 6, 5, 7, 3, 3, 3,
	3, 3, 4, 3, 2, 4, 2, 3, 3, 4,
	3, 4, 3, 4, 5, 6, 6, 7, 6, 7,
	6, 7, 3, 4, 4, 1, 3, 1, 3, 3,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 5, 6, 6, 7, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 2, 1, 5, 5, 6, 3,
	1, 1, 1, 2, 2, 2, 4, 3, 5, 6,
	8, 6, 5, 4, 3, 2, 2, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 596, -104, -101, -69, -67, -108, -109,
	-90, -110, -103, -130, -135, -117, -118, -119, -131, -137,
	-189, -194, -195, -196, -3, -55, -57, -70, -89, -91,
	-102, -112, -111, -113, -120, -127, -123, -107, -61, -132,
	-136, -146, -190, -191, -192, 32, 31, 100, 80, 154,
	128, 137, 202, 384, 427, 439, 398, 142, 418, 403,
	-140, -141, 457, -56, -68, -134, -133, 73, 129, 412,
	-4, -12, -16, 29, 46, -58, -59, -60, 62, -77,
	-73, -84, -78, -71, -72, -75, -620, 102, -563, -92,
	-95, -126, -624, 161, 220, -114, -115, 366, -121, -122,
	420, -124, -125, 423, 162, -63, -62, 156, -217, -219,
	-138, -139, -193, -147, -148, -149, -150, -151, -152, -153,
	-155, -181, -156, -157, -158, -159, -160, -161, -165, -184,
	-162, -163, -164, -167, -166, -168, -173, -169, -170, -171,
	-172, -174, -175, -177, -178, -179, -180, -182, -183, 462,
	-176, -185, -154, 523, 49, 477, 82, 146, 431, 21,
	-5, -6, -7, -8, -9, -10, -11, -15, -14, -54,
	-74, -76, -79, -80, -81, -88, -82, -83, -562, -93,
	-94, -97, -99, -100, -96, -98, 419, -220, -218, 593,
	538, -18, -23, -24, -19, -20, -22, -25, -21, -26,
	-27, -28, -39, -44, -45, -41, -42, -40, -43, -46,
	-47, -48, -49, -50, -51, -52, -53, -30, -36, -37,
	-31, -32, -33, -34, -35, -38, -17, -29, 559, 568,
	-223, -221, -222, -230, 449, 546, 497, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, -314,
	2, -293, -299, -300, -301, -292, -262, -532, -535, 4,
	-529, -533, 168, 230, 330, 21, 23, 22, 24, 25,
	26, 27, 29, 30, 41, 42, 44, 45, 46, 47,
	48, 49, 53, 55, 59, 60, 61, 62, 63, 64,
	68, 73, 74, 79, 80, 81, 82, 83, 84, 85,
	91, 88, 89, 90, 92, 94, 96, 97, 98, 99,
	100, 101, 103, 104, 105, 107, 108, 109, 117, 118,
	119, 120, 121, 123, 128, 129, 132, 127, 131, 133,
	135, 136, 137, 140, 141, 142, 144, 145, 147, 148,
	149, 151, 152, 154, 155, 156, 159, 157, 505, 158,
	160, 161, 162, 163, 166, 174, 175, 176, 181, 183,
	184, 188, 189, 190, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 203, 207, 209, 210, 211, 212, 213,
	219, 220, 222, 223, 224, 225, 226, 231, 232, 233,
	237, 234, 243, 244, 248, 249, 250, 252, 256, 257,
	258, 259, 260, 261, 263, 265, 264, 267, 270, 271,
	274, 278, 279, 283, 284, 280, 285, 286, 288, 289,
	292, 290, 293, 294, 291, 295, 297, 298, 299, 300,
	301, 302, 303, 304, 305, 306, 307, 308, 296, 311,
	309, 313, 314, 315, 328, 324, 325, 319, 320, 316,
	321, 317, 318, 322, 323, 327, 332, 333, 336, 217,
	338, 339, 342, 360, 346, 347, 348, 351, 352, 355,
	358, 359, 361, 362, 363, 364, 365, 366, 367, 368,
	369, 371, 372, 374, 375, 376, 378, 379, 380, 382,
	384, 385, 387, 388, 390, 391, 392, 393, 394, 395,
	396, 398, 400, 399, 401, 403, 405, 406, 407, 412,
	418, 414, 415, 416, 417, 419, 420, 421, 422, 423,
	425, 426, 427, 429, 430, 431, 432, 433, 435, 437,
	438, 442, 443, 459, 460, 479, 439, 440, 441, 444,
	445, 446, 447, 448, 452, 450, 451, 453, 454, 455,
	457, 458, 461, 462, 464, 465, 466, 467, 468, 469,
	470, 473, 475, 476, 477, 496, 478, 480, 484, 485,
	486, 487, 481, 482, 495, 489, 490, 492, 493, 498,
	499, 500, 501, 502, 503, 504, 506, 508, 516, 517,
	518, 520, 523, 524, 525, 526, 514, 528, 529, 532,
	533, 534, 537, 535, 536, 538, 540, 543, 544, 545,
	551, 550, 552, 555, 560, 561, 563, 564, 565, 36,
	50, 51, 54, 56, 58, 69, 70, 71, 75, 124,
	125, 153, 164, 165, 177, 191, 192, 204, 206, 214,
	215, 216, 238, 239, 241, 246, 268, 335, 337, 353,
	357, 373, 377, 381, 383, 397, 434, 471, 483, 488,
	509, 510, 511, 512, 519, 521, 546, 547, 548, 553,
	562, -314, 2, -293, 344, -286, 2, -262, -262, 384,
	28, 2, 28, 372, 451, 500, 502, 2, -589, -359,
	2, 28, -265, -262, 102, 202, 449, -286, 2, -589,
	-359, 25, 2, -262, 2, 358, 22, 27, 66, 77,
	98, 140, 163, 185, 188, -623, 360, 391, 437, 453,
	495, 506, 520, 2, 550, 289, 450, 497, 230, 120,
	525, 444, -601, 442, 443, 358, 389, 429, 205, 539,
	-266, 2, 439, -262, 289, 2, 596, 94, 279, 74,
	434, 454, -143, 517, -144, -145, 2, -142, 509, -516,
	444, 311, -262, 596, 596, 596, 28, -275, -262, 497,
	230, 444, 120, 493, 596, 2, 497, 363, 550, 450,
	120, 394, 230, 525, 188, 140, 27, 444, -601, 572,
	573, 289, 126, -587, 2, -582, 4, -533, -529, -308,
	-307, 497, 503, 120, -301, -292, 586, -300, 596, 596,
	596, 2, 249, 250, 393, 392, 454, 455, 596, 596,
	596, 596, 442, 2, 163, 22, 27, 66, 93, 98,
	126, 185, 188, 349, -621, 360, 391, 453, 495, 499,
	506, 520, -600, 478, 68, 417, 444, -599, -601, 289,
	525, 140, -409, 120, 279, 200, 533, 502, 500, 531,
	132, 237, 536, 535, 596, 596, -105, 2, 593, 32,
	31, -104, -108, 142, 457, -212, 497, 242, 2, -262,
	596, 596, 2, 249, 250, 442, 443, 596, 596, 186,
	-582, 2, 596, 596, 2, 249, 250, 442, 443, 242,
	2, 68, 446, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 2, -187,
	454, 478, 211, 47, 46, 74, 28, 390, 79, 364,
	121, 126, 148, 526, 203, 230, 231, 257, 93, 94,
	-411, 44, 250, 68, 249, 443, -606, 442, -463, 498,
	445, 451, 492, 261, 439, 517, 102, 540, 430, 565,
	394, 395, 490, 407, 280, 157, 187, 4, 120, 311,
	456, 509, 279, 438, 367, 84, 596, -630, 2, 497,
	-632, 2, 517, 517, 2, -632, 2, -632, 2, -632,
	2, -633, 517, 562, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, -218, -220, -219, 596, 596, 596, 596, 596,
	596, 596, -187, 454, 2, 74, 28, -352, -354, 530,
	240, 150, 350, -217, -219, 2, -562, -514, 2, -437,
	-536, -439, 584, 585, 577, 494, 67, -318, 329, 566,
	-451, 126, 531, 344, -535, -440, -453, 153, 360, 434,
	-374, 8, 9, 5, 6, 7, -271, -441, -447, 522,
	167, 334, -311, 597, 10, 593, -559, -219, -452, 37,
	206, 65, -518, -310, -272, -490, 241, -309, -292, -556,
	-557, 4, -529, -530, -519, -493, -501, -497, -498, -504,
	-262, -532, 77, 111, 112, 110, 115, 114, 282, 281,
	116, 113, 456, 539, 66, 36, 214, 215, 246, 335,
	216, 75, -558, 141, -531, 238, 239, 471, 51, 397,
	177, 125, 124, 337, 56, 54, 547, -502, 122, 509,
	510, 511, 512, 191, 192, 58, 164, 165, 357, 381,
	488, 519, 521, 204, 268, 43, 106, 187, 236, 218,
	245, 247, 251, 269, 272, 312, 326, 331, 354, 356,
	428, 463, -636, 548, 483, 69, 70, -564, 399, -565,
	-286, -564, 596, 596, 598, 596, -344, -346, -347, 2,
	28, 138, 593, 2, -468, 2, -469, -473, -219, 262,
	-472, 593, -470, 591, -293, 345, -560, 435, -556, -557,
	-271, -292, -310, 4, -529, -531, 595, -348, 593, 120,
	497, 78, 230, 163, -404, 593, -262, 28, 344, 513,
	598, -345, 388, -449, 593, 344, 186, 347, 60, 293,
	2, 2, 2, 2, 2, 214, -262, 497, 119, 2,
	260, 2, 2, 2, 2, 2, 2, 2, -367, 214,
	2, -293, 550, -367, 214, 2, -367, 214, 2, -410,
	2, 87, -276, 214, 2, -262, -302, 214, 2, -297,
	-299, -306, 214, 2, -304, -262, -527, 214, 2, -526,
	-521, 10, -520, 5, 4, -529, -533, -530, -532, 77,
	-437, 2, -132, 2, 60, -262, 550, 2, 2, 459,
	2, 593, -143, 71, 517, 43, 454, -424, 2, -425,
	-258, -259, -260, -480, -261, 248, 387, 396, 569, 130,
	329, 565, -615, 186, 576, 513, -514, -514, -375, 595,
	2, 2, 2, 2, 2, 2, -473, 214, -293, 2,
	-290, -517, 4, -529, -533, -530, -534, 28, 31, 32,
	33, 35, 37, 38, 39, 40, 57, 65, 66, 72,
	76, 78, 87, 93, 102, 110, 111, 113, 112, 114,
	115, 116, 126, 130, 134, 138, 139, 143, 146, 150,
	167, 169, 182, 185, 186, 202, 205, 208, 221, 235,
	240, 242, 262, 266, 273, 281, 282, 329, 334, 340,
	344, 345, 349, 350, 370, 386, 402, 424, 449, 456,
	474, 491, 497, 507, 513, 515, 522, 530, 531, 539,
	541, 549, 554, 556, 557, 558, 559, -535, 2, -473,
	214, 2, -296, 214, -473, -299, 2, -276, 2, -289,
	-517, 2, -315, 214, -293, -295, -299, -297, 2, 2,
	2, 2, -304, 2, -526, 214, 2, 28, 28, 550,
	388, 242, 513, 598, -365, -307, -308, -513, 8, -358,
	-262, 595, -437, 2, -132, -116, 2, 182, -437, 214,
	2, -132, 214, 2, -437, 214, 2, -132, 214, 2,
	-603, 2, -526, 214, -262, 2, 293, 2, 2, 520,
	2, 98, 497, 119, 2, 416, -622, 437, 524, 2,
	2, 2, 2, 2, 2, 2, 497, -281, 2, -262,
	182, 481, -304, 214, -305, 2, 450, -631, 399, -526,
	214, 2, 550, -297, 214, 2, -297, 230, 244, -276,
	214, 2, 502, 500, 502, 500, 186, 2, 242, 2,
	242, 2, -474, 2, -475, -469, -476, 591, 345, -484,
	2, -483, -520, 546, -105, 593, -105, 593, 454, 593,
	-526, -293, -293, -437, 2, -132, -116, 2, -437, 2,
	-132, 2, -129, -526, -128, 593, 186, -437, 2, -132,
	-116, 2, -437, 2, -132, 2, -212, 182, 2, 120,
	497, -187, 2, 182, 541, 2, 8, 2, 221, -526,
	445, 395, 174, 2, 459, 2, 460, 74, -411, 565,
	74, 186, 2, 186, 2, -394, 2, 559, 388, 186,
	2, 2, -586, 2, 344, 186, 2, 186, 2, 186,
	2, 186, 2, 186, 2, -186, 455, 518, 496, 392,
	250, 2, -132, 556, -116, 250, 249, -437, 556, 2,
	-607, 182, 443, -437, 2, 516, 259, 158, 186, -394,
	2, 186, 2, 186, 2, 5, 2, 393, 479, 2,
	248, 387, 479, 2, -293, 497, 550, 450, 120, 28,
	2, 442, 2, 2, 88, 89, 186, 2, 186, 2,
	201, 186, 2, 186, 497, 565, 2, -386, -473, -423,
	-424, -423, 513, -352, -354, -187, 459, 2, -224, -384,
	-226, 182, -414, -415, -227, 273, 169, 340, -228, -393,
	28, 138, -393, -393, 60, 594, 594, 11, 12, 76,
	41, 584, 585, 586, 587, 180, 588, 589, 582, 583,
	581, 574, 575, 579, 254, 255, 95, 578, 576, 86,
	287, 436, 170, 171, 172, 173, 413, 228, 34, 229,
	14, 15, 16, -318, 33, 349, 272, 566, 218, 463,
	577, 17, 18, 19, 245, 247, 331, 50, 221, -270,
	360, -317, 494, 67, -437, -437, -437, -437, -437, -437,
	-437, -437, 356, 593, -380, -432, 591, -219, 593, 593,
	593, 593, -513, -219, -437, -451, 594, -372, 593, -219,
	-451, -446, 593, 434, 591, 593, -454, -437, 5, 5,
	5, 593, 595, -567, 560, 182, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 383, -495, 593, -494, 593, -494, -494, 551, -492,
	593, 568, 561, 593, -492, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 551, 598,
	-564, -348, 593, -376, -478, -437, 586, -376, -376, 344,
	-369, -437, 106, -397, 251, 312, 187, 269, 428, 236,
	-434, 597, -434, -462, 568, -219, -470, -292, -219, -472,
	593, -468, -462, -106, -513, -89, -102, -111, -132, -146,
	-191, -192, 586, -293, 593, 186, 593, 595, -517, 186,
	-358, -276, -293, -309, -310, -315, 2, 137, -369, -582,
	525, 444, 28, 450, -358, -265, 38, -448, -487, -488,
	-538, 597, -537, -490, -500, -496, -499, 373, 377, -519,
	54, 547, -502, 241, 4, -529, -531, 238, 239, 471,
	51, 397, 177, 125, 124, 337, 56, 509, 510, 511,
	512, 191, 192, 58, 548, 483, 69, 70, -582, 525,
	444, 28, 450, -358, 182, -524, 2, -523, -522, 116,
	456, -520, 5, 2, 153, 2, 2, 2, -262, -239,
	598, 64, 421, 153, -367, 214, -239, 153, -239, 153,
	-316, 214, -315, -239, 153, -239, 598, 153, -239, 598,
	153, 595, 598, 153, -524, 2, -410, -516, -369, 38,
	-424, 2, 126, -522, -634, 598, 271, -321, 286, 328,
	210, 345, 563, 338, 130, -525, 5, 4, -447, -459,
	126, 279, 241, -507, -509, 8, -508, 9, -510, 584,
	585, -515, -514, 109, 595, -517, -236, 414, 457, 359,
	-235, 24, 29, 142, 232, 315, 544, 159, -334, 233,
	-331, 363, 153, 475, 534, -596, -597, 441, 504, 505,
	90, 338, 457, 359, 414, 153, -390, -392, 38, 118,
	315, 358, 61, 225, 291, 292, 477, 553, 153, 457,
	359, 414, 359, 457, 24, 142, -253, -248, -597, 99,
	414, 489, 386, -597, -238, 475, 534, -596, -597, 441,
	414, -237, -336, -331, 363, 153, 597, 24, 142, 414,
	457, 359, -618, -619, 29, 414, 359, -590, -283, -561,
	221, 559, 153, -283, -283, -473, 214, -611, 182, 2,
	-604, -128, 263, 5, 10, -526, -128, -365, 598, 598,
	-517, 586, 443, 442, 153, 153, 153, 153, 182, 329,
	2, 2, 2, 2, 2, 188, -599, -623, 2, 2,
	-293, 214, -350, 344, -585, -366, 497, -293, 182, 329,
	43, -296, 214, 2, -299, 550, -590, 329, -298, 214,
	-293, 38, 593, 329, 2, -410, 2, 230, -561, 329,
	-474, -312, -293, -469, -312, 457, -286, 38, -434, -293,
	594, 598, -484, -484, -526, -200, 559, 186, 102, 593,
	593, -212, -481, 598, -480, 221, -527, -129, -526, 417,
	-526, -585, -276, 2, -293, 2, 497, 252, -526, -200,
	221, -526, -526, -526, -516, 28, 460, 2, -186, 455,
	518, 89, 460, 2, -293, 497, 120, 230, 80, -611,
	2, 182, -262, -588, 182, -583, 429, 444, 525, -582,
	-293, 120, -293, 120, -293, 120, -293, -293, 2, 2,
	2, 2, 2, 85, 2, -132, -437, 2, 85, 2,
	46, -607, 182, 2, 516, 2, 516, 2, -262, -262,
	-262, 478, 271, -293, -293, -293, -294, -299, 498, 443,
	-437, 2, -625, 2, 186, 182, 2, 497, 230, 497,
	230, 120, 186, 74, 120, 28, 497, 440, -239, 598,
	-266, -224, -384, -516, -385, -384, -225, -224, -227, 182,
	396, 535, 315, 461, 256, -415, -414, 28, -437, -419,
	176, 314, -437, -417, -439, 584, 585, -508, -510, -368,
	338, -218, -218, -218, -355, -464, -437, 386, 230, -489,
	-487, -487, -291, -517, 509, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, 272, 218, 463, 50, 221, -437, 513, -437, -437,
	-437, -437, 309, 329, 334, 522, 167, 532, 138, 338,
	-637, 491, 40, -444, -219, -373, 593, -458, 35, 474,
	28, -451, 593, 2, -432, -437, -433, -319, -317, -262,
	584, 585, 586, 587, 588, 589, 574, 575, 576, 14,
	15, 16, 579, 583, 581, 582, 180, 95, 578, 287,
	436, 86, 170, 171, 172, 173, 254, 255, 17, 18,
	19, 34, 577, -370, -369, -369, 594, 549, 28, 138,
	586, 2, 594, 598, 38, 594, -437, -370, -450, -446,
	-369, -457, -456, 556, -405, -406, 564, 296, 123, 212,
	294, -407, 448, -511, 8, -517, 586, -568, 175, 205,
	593, 594, 2, 594, 2, 594, -437, 2, 594, -437,
	2, 594, -437, 2, 594, -437, 2, 594, 2, -437,
	-437, -437, -437, -437, -437, -437, -369, 8, -511, -511,
	509, 509, -511, -511, -511, -503, 373, 374, 375, 376,
	274, 275, 276, 277, 377, 378, 379, 380, 301, 302,
	303, 304, 297, 298, 299, 300, 305, 306, 307, 308,
	196, 197, 198, 199, 192, 193, 194, 195, -503, -399,
	2, -505, -369, 4, 564, 296, 123, 212, 294, 448,
	5, -399, 2, -400, 2, -437, -369, -401, -438, -439,
	584, 585, 577, -318, -451, -402, 2, -437, -370, -437,
	57, 266, 515, -403, -437, 186, -369, -369, 2, -369,
	2, -565, 38, -369, -361, 598, 186, 38, 4, -361,
	-361, 593, 594, 598, -398, 209, 290, 285, 244, -398,
	-468, -397, 251, -395, 354, -395, -395, -462, -277, 591,
	599, -517, -462, -461, -460, 38, -286, 351, -462, -462,
	595, 594, -461, 592, -580, 593, 596, 596, 596, 596,
	596, -293, 593, -369, -517, 595, 480, 2, 594, 245,
	245, 245, 245, 435, 594, 513, -584, -302, -306, 498,
	2, 559, -104, 346, 594, 598, -360, 37, 591, 595,
	-511, 2, 2, -506, 551, 593, 593, -406, 593, 186,
	-584, -306, 498, 2, -359, 598, 513, -262, 2, -293,
	-367, -239, 153, -367, -367, -239, 598, 153, -276, -297,
	-302, -304, -306, -262, -526, -527, -239, -298, -615, 594,
	517, -425, -320, 396, 473, 415, 452, 493, 8, 9,
	8, 9, 598, -517, 598, -616, 93, 513, 78, 444,
	-255, 280, 513, -428, 214, 78, -539, -279, 93, -540,
	-262, 72, 531, 386, 185, 151, -616, 93, 386, -616,
	93, 2, 232, 93, 457, 478, 28, 60, -473, 41,
	41, 28, -614, 327, 267, 555, 186, 565, 497, 230,
	444, 513, 513, -473, -392, -487, 118, 291, 292, 60,
	-512, -507, 584, 585, -512, 60, -512, -512, -512, 559,
	-296, -473, 444, 513, 513, 513, -251, -248, 369, 405,
	405, 513, 513, -635, 576, 405, 598, 41, 41, 28,
	-614, 327, 267, 186, 513, -315, -277, 545, 42, 545,
	42, 545, 513, 42, 444, 513, 598, 42, 513, 513,
	-13, 457, 571, 419, -591, -267, 105, 321, 284, 322,
	97, 318, 96, 317, 103, 319, 104, 320, 552, 332,
	63, 316, 295, 323, -268, -269, 365, 543, 120, -526,
	-13, -13, 457, 359, 414, 153, -612, 221, 28, -601,
	221, -481, 221, -481, -307, -262, 595, -132, -437, -437,
	-132, -437, -132, 46, 153, 2, -631, 260, 593, -324,
	329, 186, -358, -482, 242, 598, -366, -582, 153, -523,
	-391, -390, 329, -298, 214, 2, 153, -348, 329, 147,
	593, 394, 2, 153, -278, 214, -263, -262, -410, -242,
	501, 153, -388, 541, -420, -132, 593, 126, 38, -420,
	-377, -378, -479, -379, -279, 593, -286, -434, -105, -483,
	594, 594, 594, -199, 348, -198, -262, 5, -212, 541,
	-323, -429, -428, -543, -544, -539, 272, 230, 531, 244,
	168, -349, -280, -279, 119, -206, 559, -128, -129, 594,
	-481, 221, 481, -200, -200, -481, -481, -293, 182, -526,
	-200, -200, -200, 2, 2, 2, 2, -394, -293, -276,
	-315, -293, 595, -358, -358, -306, -302, -394, -276, -394,
	-276, -394, -276, -132, -437, 2, 454, 182, 182, 595,
	-394, -351, 424, 2, 394, 120, 497, 363, 230, -293,
	-315, -293, -315, -276, 120, -276, 121, -293, -473, -385,
	-225, 345, 256, 461, -417, -418, -439, 434, 435, -418,
	434, 435, 8, 9, 8, 9, -229, 465, 333, -367,
	598, -233, 39, 134, 256, -293, 565, 149, -437, -437,
	513, -637, 491, -444, 149, -437, 309, 334, 522, 167,
	532, 138, 338, 186, 593, -438, -438, 594, -371, -437,
	-437, 592, 601, 594, 595, 594, -354, 598, -352, -437,
	-369, -369, 594, 595, -369, -358, 592, 592, 598, 594,
	-455, -456, 143, -437, 513, 513, 513, 513, 593, 594,
	595, -573, 355, 593, 593, -437, 594, 594, 594, 594,
	38, 598, 598, 598, 594, 598, 598, 598, 594, 594,
	594, 598, 594, 565, 565, 594, 594, 594, 594, 598,
	594, 598, 594, 186, 594, 594, -408, 370, 594, 11,
	12, 584, 585, 586, 587, 180, 588, 589, 582, 583,
	581, 574, 575, 576, 86, 287, 436, 14, 15, 16,
	-318, 245, 221, -438, -438, -438, -438, 594, -442, -443,
	186, 182, 38, -403, -403, -403, 594, 186, -369, 594,
	594, 593, -566, 289, 329, 594, -431, -430, 557, -478,
	-362, 2, -468, -288, -517, -431, -431, -369, -437, 251,
	251, -396, 541, 344, -398, -468, -461, -513, -436, -435,
	184, 39, 134, 324, 325, 217, -461, -286, -348, -461,
	-461, -517, -462, -462, -460, 594, -581, -513, 594, -363,
	-471, -560, -354, 595, -517, -209, -561, -188, 5, 334,
	-188, -188, -188, -358, 513, 513, 221, 25, 371, -487,
	591, 592, 8, -517, 593, -511, -511, -511, -358, 186,
	186, 221, 186, -523, -523, 2, -239, -367, -239, -239,
	-315, -316, -239, -239, -239, -389, 559, -514, -424, 529,
	83, 396, 509, -514, -235, 414, -279, -279, -293, -303,
	-262, 200, 406, -523, 329, -428, 214, -241, 329, -487,
	-287, -262, 593, -412, 561, 256, 256, 541, -279, -287,
	256, 214, -279, 214, -287, 2, -287, -592, 396, 339,
	-437, 60, -332, 278, 394, 330, -236, 414, 457, 359,
	-132, -132, -132, -132, -132, 593, -615, 541, 137, -293,
	-315, -293, -303, -523, -298, 457, 359, 414, 326, -309,
	-512, -512, -390, 457, 359, 414, -303, -523, -296, -523,
	422, 126, -247, 214, -262, -247, 214, 444, -276, 405,
	565, 45, -635, -237, -132, -132, -132, -132, -132, 593,
	-277, -238, 414, 5, 214, -279, 5, -279, 214, 5,
	-262, -279, -303, -523, -619, 24, 142, -279, -303, -523,
	-144, 28, -187, -267, -526, 334, 537, -276, -590, -283,
	444, 513, 513, -473, -608, -609, 202, 427, 444, 430,
	-358, -128, -203, 559, -128, -197, 226, 586, -587, -262,
	550, -262, -322, -325, -323, -279, -215, -216, 561, 559,
	153, -313, -293, 591, -200, -526, -293, -482, -304, -305,
	153, -348, 329, -526, 38, 153, 593, 2, 2, -297,
	344, 329, -278, 214, -243, 144, -635, -276, -431, -362,
	-387, -422, 424, 344, -349, 546, -286, -387, -364, 598,
	186, 576, 595, -349, -477, 586, -105, -105, -200, 598,
	593, 576, 576, 593, -526, -526, 594, 598, -241, -293,
	-278, 230, 230, -285, -263, 594, 598, 595, 593, -208,
	348, -207, 145, 258, 243, 467, 468, 469, 470, 136,
	466, -481, -206, -129, 186, 186, -64, 559, 497, -200,
	597, -262, -394, -394, -394, 454, 454, -262, -358, -289,
	-276, -293, -290, -315, 182, 182, -276, 535, -418, 345,
	283, -464, -234, 567, -293, 597, -437, -437, 149, 149,
	-437, -438, -438, -437, 149, 186, 593, -437, -448, 33,
	33, 594, 598, -433, -437, -317, 594, 549, -354, -354,
	594, 586, -517, 597, 594, -446, 146, -437, 507, 296,
	212, 294, -407, 294, -407, -407, -511, 5, -517, 586,
	-574, -282, 593, -262, 557, -353, 350, 594, -489, -487,
	-437, -437, -437, -437, -437, -511, -492, -492, -507, -507,
	-437, -442, -437, -489, -487, -438, -438, -438, -438, -438,
	-438, -438, -438, -438, -438, -438, -438, -438, -438, -438,
	-438, -438, -438, -438, -438, 138, 329, 338, -438, -443,
	-442, -437, -437, -487, 594, 594, 594, -369, -104, 593,
	289, -381, 205, -437, -481, 598, -381, -381, 594, -468,
	-468, 593, -437, 251, 592, 598, 600, 576, -348, 595,
	-460, -461, 592, 594, 598, 594, 598, -421, 38, 594,
	-517, -431, -211, -210, 135, 53, 107, 133, 334, -358,
	-358, 444, 347, 5, 8, 591, 592, 595, -511, 594,
	594, 594, -358, -358, 444, -358, -239, -239, 119, 315,
	-437, 513, 513, 60, 221, 153, 329, 543, -545, -540,
	151, -437, 593, 230, 593, 593, 2, -231, -232, 142,
	457, 24, -617, 2, 541, 153, -239, 153, -239, 563,
	-332, 593, 593, 513, 444, -255, 513, 559, -369, -437,
	-201, 126, -516, -597, 597, -597, 597, 444, 513, 513,
	444, 513, 513, 329, 153, 559, 166, 166, 565, -247,
	559, -369, 513, -491, 48, 26, 329, -297, -239, 153,
	513, 513, 525, 457, -526, 334, -13, -303, -523, -298,
	457, 359, 414, -589, -359, -589, 202, -306, -612, -481,
	-205, 348, -204, 145, 426, 136, 258, 223, -481, -203,
	186, 242, 559, -298, 2, 594, 594, 598, -546, 38,
	342, 342, 593, -293, -85, 559, -480, -513, -593, 559,
	43, -296, 38, 153, -590, -132, -298, -485, -486, 5,
	38, -293, 153, 344, 329, -244, 265, -635, -521, -561,
	-354, -387, -376, 330, 91, 594, -431, -378, -362, -437,
	2, 594, -198, -199, -526, -526, -526, -200, -212, -212,
	-429, -326, 593, -278, -263, 593, -212, -280, 2, -527,
	598, 593, 576, 576, 576, -206, -481, -128, -132, 348,
	-293, 586, -394, -338, -337, 363, 338, -338, 434, 434,
	345, 176, 261, -233, -277, -437, -437, 149, 33, 33,
	-437, -437, -448, 594, -437, -437, -369, 592, 5, -437,
	594, 594, 8, -437, 594, 595, -575, -262, -437, 594,
	60, 594, 594, 598, 598, 594, 594, 594, 594, 594,
	594, 594, -443, 186, 138, 338, 593, 594, 594, -104,
	-445, 208, 60, -468, -445, -445, -396, -358, -468, -435,
	-277, 591, -517, -513, -471, 593, 595, -210, 576, -526,
	-526, 559, -306, 592, 2, 591, -517, 594, -306, 119,
	-279, -279, 497, 434, -247, 386, -428, 153, -547, 93,
	-549, 76, 168, 102, 329, 334, 531, 386, 72, 126,
	402, -627, 38, 570, 594, -356, -465, -560, 593, -262,
	-356, -358, 329, 486, 126, 329, 126, 554, 119, 2,
	525, 79, -279, -287, -358, -358, -293, -303, -523, 160,
	594, 598, 576, 2, 586, 586, -303, -523, -298, -303,
	-523, -296, 153, -247, 361, 166, 160, 594, -277, 5,
	5, 153, -274, 76, -279, 5, -279, -297, 119, 444,
	513, 513, 344, 344, 347, -608, -609, -203, 598, 593,
	576, 576, -203, -527, -128, 2, -348, -339, 232, -279,
	-544, -541, -542, 386, -548, -550, 168, 386, -132, 2,
	-214, -213, -262, 5, 593, -324, 348, 592, -595, 348,
	-594, 117, 136, -523, -391, -132, -298, -348, 594, 598,
	147, -413, 541, -277, -293, 153, -245, 264, -635, -521,
	-242, -416, -414, 139, 593, 344, -132, -354, 576, 594,
	594, 119, 119, 224, 152, -356, 593, 593, -358, 119,
	594, -207, -208, -526, -128, -526, -206, -481, -65, -66,
	230, 93, 368, -290, 497, 230, 593, 593, -233, -437,
	-437, -437, 594, -354, -517, 586, -569, 363, 594, -464,
	-437, -437, -438, 186, 593, -448, 594, -570, 558, -437,
	-382, -383, -437, 432, 108, 206, -570, -570, 594, -513,
	2, -526, 2, 513, 591, 2, 186, 221, 38, 405,
	-428, -287, -291, -284, -262, 168, 214, 334, 554, -412,
	256, 593, -438, -293, 593, 2, 30, -628, 130, 235,
	594, 598, -466, -273, -262, -437, -466, 594, 594, 334,
	334, 554, -437, -487, 593, -239, -239, 594, 594, -437,
	513, -516, 100, -514, 2, -597, -247, -276, -437, 513,
	5, -239, -291, -239, -239, -274, 525, -303, -523, -298,
	-613, 498, 451, 526, 445, 189, 433, -613, 182, -204,
	-205, -526, -128, -203, 38, -329, 234, 2, -546, 256,
	-284, 256, -626, 559, 594, 598, 576, 576, -322, -215,
	-86, -87, 514, -480, 598, 593, 576, -348, 38, 5,
	593, 593, -262, 344, 593, -277, -257, 92, -635, -521,
	-243, -387, 330, -358, 93, -416, -444, -200, 593, 593,
	-327, 81, 94, 127, 213, 190, 231, 478, 484, 28,
	-327, 594, -356, -356, 594, 593, -200, 594, 598, 28,
	593, 28, 593, -293, -315, -369, -369, 594, -354, 60,
	598, 594, 594, -438, -448, 594, -571, -572, -282, 598,
	593, 593, 458, 592, -358, 2, -358, -247, 386, -262,
	-549, -284, 329, 541, -437, -264, 593, -437, 38, 235,
	131, 219, -427, -629, 101, 487, 222, -465, -233, 594,
	-426, 541, 402, -274, -356, 593, 593, 593, 576, 186,
	593, -491, -239, -297, 513, 2, 2, 186, -589, 594,
	-602, 400, -132, -333, -334, 221, 593, -328, 344, 119,
	315, -213, -514, -514, 594, 38, -87, 9, -594, -595,
	-437, 38, -132, -485, -356, -293, -356, 344, -249, -248,
	273, -521, -244, 594, -287, -387, -527, -527, -426, 594,
	594, -527, -66, -358, -358, 594, 594, -576, 394, 435,
	207, -369, -355, 594, 598, 38, -383, 2, 2, 2,
	405, 153, 209, 594, -551, 288, -262, 594, 131, 219,
	-329, 593, -234, -466, -329, 209, -293, -598, 541, 594,
	-341, -340, -337, -343, -342, -337, -369, -514, 100, 361,
	-369, -274, -358, -358, 344, -605, 187, -604, 5, 10,
	-215, 361, -357, -467, -279, 82, 119, -339, -132, 594,
	-132, 594, 594, -413, 594, -293, -246, -528, 405, 407,
	-635, -245, -431, 594, 594, -427, -426, -335, -331, 594,
	594, 594, 594, -577, -578, 50, 528, 109, -437, -577,
	-577, -572, -574, 168, 559, -552, -555, -554, 344, 464,
	187, 362, 594, 486, 553, -335, -358, 559, -348, -437,
	-426, 594, 598, 546, 594, 598, 546, 594, 186, 594,
	-239, -610, 559, -239, -613, -202, 559, 46, -328, -293,
	594, 598, 385, 132, 142, -329, -626, -426, 593, -427,
	593, -254, -253, -635, -507, -257, 139, -200, -200, -329,
	-427, -216, 559, -200, -579, 151, -578, 382, 181, 434,
	382, 181, -579, -579, -284, 55, -554, 344, -555, 344,
	535, 132, -628, 594, 55, -551, -329, -340, 221, -342,
	186, 361, 202, 186, 442, -604, 30, -256, -255, 593,
	-467, 435, 435, 2, -333, -328, -427, -356, -329, -356,
	-250, -251, -252, -358, -249, 330, 535, -335, -329, -431,
	109, 205, 508, 315, 33, 576, -553, 315, 421, 64,
	457, -553, -431, 576, -552, 593, 593, 347, -358, 348,
	-358, 2, -215, -329, 594, -335, 594, -246, 457, -216,
	-335, 434, 352, -578, -437, 23, 334, 126, -437, -628,
	-369, -369, -239, -199, 593, 594, -328, -335, -426, -216,
	-427, -254, -377, -431, -216, 594, 594, -199, -240, 64,
	421, -256, -216, -427, -431, -329, -250, -431, -431, -330,
	-331, 513, 594, -431, -329, -335, 593, -335, -216, -369,
	-216, -431, 594, -431, -330,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 545, 546, 548, 549, 550, 552,
	553, 555, 557, 559, 560, 561, 563, 564, 566, 567,
	568, 569, 570, 572, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	641, 643, 0, 1383, 1385, 1387, 1389, 0, 791, 0,
	36, 37, 39, 0, -2, 330, 332, 334, 0, 361,
	363, 364, 366, 368, 369, 370, 372, -2, 0, 478,
	479, 481, 483, -2, 0, 995, 997, 0, 630, 632,
	0, 1000, 1002, 0, 0, 652, 653, 0, 1494, -2,
	646, 648, 650, 716, 718, 720, 722, 724, 726, 728,
	730, 732, 734, 735, 737, 739, 741, 743, 745, 746,
	748, 750, 752, 753, 755, 756, 758, 760, 762, 764,
	766, 768, 770, 772, 774, 776, 778, 780, 782, -2,
	785, 786, 787, -2, -2, 0, -2, -2, -2, 1401,
	41, 43, 45, 47, 49, 51, 53, 55, 57, 59,
	422, 424, 426, 428, 430, 433, 435, 437, 1552, 485,
	487, 489, 491, 493, 495, 497, 0, -2, 1566, 0,
	0, 61, 62, 63, 64, 65, 66, 67, 68, 69,
	70, 71, 107, 108, 109, 110, 111, 112, 113, 114,
	75, 76, 77, 79, 80, 81, 82, 86, 87, 88,
	89, 90, 91, 92, 93, 94, 105, 73, 0, 0,
	1525, 1527, 1529, 1531, -2, 0, 0, 5, 9, 11,
	13, 15, 17, 19, 21, 23, 25, 27, 29, 547,
	551, 554, 556, 558, 562, 565, 571, 573, 575, 530,
	531, 534, 2258, 2276, 2277, 2278, 2281, 2282, 2283, 2284,
	2285, 2286, 2734, 2816, 2817, 2308, 2309, 2310, 2311, 2312,
	2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322,
	2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332,
	2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342,
	2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352,
	2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362,
	2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372,
	2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382,
	2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392,
	2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402,
	2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412,
	2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422,
	2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432,
	2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442,
	2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452,
	2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462,
	2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
	2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512,
	2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532,
	2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542,
	2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552,
	2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562,
	2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572,
	2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582,
	2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592,
	2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602,
	2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612,
	2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622,
	2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632,
	2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642,
	2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652,
	2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662,
	2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672,
	2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682,
	2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692,
	2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702,
	2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712,
	2713, 532, 533, 1172, 0, 599, 597, 2243, 600, 2533,
	602, 604, 472, 473, 474, 475, 476, 477, 0, 623,
	613, 1564, 624, 626, 627, 628, 629, 594, 592, 0,
	623, 2312, 621, 1381, 1382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 484, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 401, 1230, 1231, 1232,
	1366, 1367, 2579, 1408, 0, 231, 642, -2, -2, -2,
	2699, -2, 674, -2, 685, 688, 689, 681, 2703, 0,
	2582, -2, 692, 1384, 1386, 1388, 789, 790, 2262, 0,
	0, 0, 0, 0, 38, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 241, -2, -2, -2, -2,
	0, 0, 2627, 2364, 2211, 2278, 2214, 2209, 331, 333,
	335, 336, 0, 0, 0, 0, 0, 0, 362, 365,
	367, 371, -2, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 1056, 1048, 1049, 1288,
	0, 0, 0, -2, 480, 482, 535, 536, 0, 1553,
	1553, 543, 544, -2, 0, 0, 0, 0, 301, 289,
	996, 998, 999, 0, 0, 0, 0, 631, 633, 0,
	0, 270, 1001, 1003, 1004, 0, 0, 0, 0, 0,
	303, 0, 0, 647, 649, 651, 717, 719, 721, 723,
	725, 727, 729, 731, 733, 736, 738, 740, 742, 744,
	747, 749, 751, 754, 757, 759, 761, 763, 765, 767,
	769, 771, 773, 775, 777, 779, 781, 783, 784, 797,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	-2, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 892, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, -2, 976, 0, 0, 800, 802, 803,
	804, 0, 865, 890, 891, 900, 788, 0, 1212, 1554,
	1410, 1391, 1405, 1410, 1393, 1394, 1395, 1396, 1397, 1402,
	1404, 1398, 1399, 1400, 42, 44, 46, 48, 50, 52,
	54, 56, 58, 60, 423, 425, 427, 429, 431, 434,
	436, 438, -2, 1523, 1524, 486, 488, 490, 492, 494,
	496, 498, 634, 0, 636, 0, 801, -2, 0, 1558,
	1558, 1558, 0, 0, 1524, 1522, 0, 639, 640, 696,
	697, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	2085, 1915, 0, 698, -2, 1948, 1950, 2674, 2506, 2699,
	2084, 1952, 1953, 1954, 1955, 1956, 0, 1958, 1959, 1960,
	1961, 1962, 1963, 0, 1965, 0, 1970, 1971, 1972, 0,
	2681, 2188, 2272, -2, 0, 0, 2687, 2268, 0, 2051,
	1988, -2, -2, 2295, 2274, 1759, 1760, 1761, 1762, 1763,
	-2, -2, 2717, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
	1999, 2000, 2001, 2002, 0, 2662, 2682, 2683, 2688, 2690,
	2684, 2671, 2013, 2377, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1786, 1795, -2,
	-2, -2, -2, -2, -2, -2, 2675, 2676, 2693, 2696,
	2702, 2707, 2708, 2680, 2689, 2716, 2718, 2719, 2720, 2721,
	2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731,
	2732, 2733, 1787, -2, -2, -2, -2, 1541, 2546, 1544,
	1172, 1542, 1526, 1528, 0, 1530, 0, 0, 0, 1535,
	1561, 1559, 0, 1610, 1539, 1540, 1629, 1629, 1653, 0,
	1634, 0, 1653, 1553, 1680, 0, 1640, 2571, 1989, 1990,
	0, 2278, 2273, -2, -2, 2714, 0, 0, 0, 0,
	0, 0, 0, 0, 595, 0, 601, 603, 0, 0,
	0, 622, 1563, 0, 0, 0, 0, 0, 0, 0,
	404, 405, 406, 407, 408, 2682, 0, 0, 0, 413,
	0, 415, 416, 417, 418, 419, 420, 421, 200, 2682,
	503, 528, 0, 200, 2682, 506, 200, 2682, 509, 0,
	512, 1286, 200, 2682, 515, 2239, 200, 2682, 518, 520,
	2247, 200, 2682, 524, 2254, 2252, 525, 2682, 527, 306,
	304, 305, 2291, 2292, 2299, 2300, 2301, 2302, 2715, 2717,
	1377, 1378, 1379, 1380, 0, 1407, 1287, 644, 645, 0,
	669, 0, 673, 2670, -2, 0, 2591, -2, 677, 1411,
	1415, 1416, 1417, 1418, 1419, 0, 0, 0, 0, 1424,
	0, 0, 0, 0, 670, 671, 684, 690, 693, 0,
	792, 793, 794, 795, 796, 72, 0, 2682, 1680, 74,
	0, 2233, 2303, 2304, 2305, 2306, 2307, 2735, 2736, 2737,
	2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747,
	2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757,
	2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767,
	2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777,
	2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787,
	2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797,
	2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807,
	2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 78, 0,
	2682, 83, 0, 2682, 0, -2, 95, 0, 106, 0,
	2236, 115, 0, 2682, 0, 2208, -2, 0, 212, 290,
	291, 292, 0, 1023, -2, 2682, 1224, 1226, 1226, 0,
	-2, 0, 0, 0, 986, 2205, 2210, 987, 2229, 988,
	2215, 0, 337, 338, 339, 340, 341, 0, 342, 2682,
	344, 345, 0, 347, 348, 2682, 350, 351, 0, 353,
	0, 253, 254, 2682, 375, 377, 0, 379, 380, 0,
	382, 0, 0, 0, 386, -2, 402, 0, 399, 389,
	390, 392, 393, 394, 395, 396, 0, 442, 440, 2244,
	0, 0, -2, 2682, 0, 1020, 0, 0, 1266, -2,
	2682, 1217, 0, 1273, 2682, 1269, 0, -2, 0, 1551,
	2682, 1428, 1052, 1053, 1054, 1055, 1692, 469, 0, 1459,
	0, 1461, 0, 1480, 1686, 1629, 0, 0, 1691, 0,
	-2, 588, 2261, -2, 538, 0, 539, 0, -2, 0,
	318, 0, 0, 1005, 1006, 1007, 1008, 1009, 1012, 1013,
	1014, 1015, 1666, 271, 273, 0, 0, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 0, 0, 654, 0,
	0, 798, 799, 0, 0, 809, 810, 811, 0, 318,
	2583, 2542, 2398, 818, 0, 821, 824, -2, 0, 0,
	0, 0, 828, 0, 833, 834, 835, 0, -2, 0,
	841, 843, 994, 845, 0, 0, 847, 0, 851, 0,
	854, 0, 856, 0, 858, -2, -2, -2, 866, 867,
	-2, 872, -2, 0, 876, -2, 0, 879, 0, 882,
	-2, 0, 892, 888, 889, 0, 0, 0, 0, 908,
	909, 0, 918, 0, 921, 922, 923, 0, 927, 928,
	0, 930, 931, 932, 933, 0, 2654, 2588, 2364, 0,
	939, -2, 945, 947, 0, -2, 0, 963, 0, 967,
	0, 0, 975, 0, 0, 805, 806, 200, 1684, 1390,
	-2, 1392, 0, -2, 0, 635, 0, 638, 1583, 1509,
	1506, 0, 1580, 1581, 1510, 0, 0, 0, 1517, 0,
	1556, 1557, 0, 0, 0, 1496, 1497, 0, 0, 0,
	0, 2090, 2091, 2092, 2093, 2106, 2094, 2095, 2105, 2103,
	2104, 2096, 2097, 2102, 2116, 2117, 2107, 2108, 2098, 2111,
	2109, 2110, 2112, 2113, 2114, 2115, 0, 0, 2121, 0,
	2099, 2100, 2101, 2129, 0, 0, 2130, 0, 2132, 0,
	2122, 2118, 2119, 2120, 0, 1894, 1896, 2196, 0, 0,
	0, 2128, 2123, 2124, 1832, 1833, 1834, 1835, 1836, 1869,
	1873, 1874, 0, 0, 1949, 2193, 2192, 1951, 0, 0,
	2144, 0, 1964, -2, 0, 2085, 2139, 0, 0, 1973,
	1974, 1975, 0, 0, 2144, 0, 0, 2187, 1985, 1986,
	1824, 0, 0, 2053, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 1772, 0, 1774, 0, 1775, 1776, 1783, 1796,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 2168, -2, 0, 0, 0, 0, 1788, 0,
	1543, 0, 0, 1614, 2197, 2201, 2202, 1614, 1614, 0,
	0, 2145, 1677, 1677, 0, 0, 1672, 1672, 1672, 1670,
	1653, 0, 1653, 1663, 0, 1653, 1653, 0, -2, 1634,
	0, 0, 1663, 0, 1647, 576, 578, 580, 582, 583,
	584, 586, 1681, 1682, 0, 0, 0, 0, 2279, 0,
	0, 0, 0, 0, 2264, 0, 358, 0, 0, 0,
	2637, 2582, 0, -2, 606, 625, 1553, 0, 2147, 1707,
	1711, 0, 1713, 1714, 1715, 1716, 1717, 0, 0, 1708,
	-2, 1784, 1786, 1807, 2296, 2297, 2298, 1767, 1768, 1769,
	1770, 1771, 1779, 1766, 1766, 1766, 1777, 1806, 1798, 1806,
	1802, 1752, 1753, 1754, 1789, 1790, 1791, 1792, 0, 2637,
	2582, 0, -2, 615, 0, 0, 1491, 216, 218, 219,
	220, 221, 222, 403, 0, 410, 411, 412, 0, 499,
	0, 198, 199, 0, 200, 2682, 504, 0, 507, 0,
	200, 2682, 2203, 513, 0, 516, 0, 0, 522, 0,
	0, 0, 0, 0, 200, 1493, 0, 0, 0, 0,
	-2, 679, 686, 687, 0, 1413, 0, 1420, 707, 708,
	709, 1422, 1423, 0, 1425, 682, 710, 711, 712, 713,
	714, 715, 0, 2217, 2218, 2219, 2220, 2223, 2224, 0,
	0, 680, 700, 683, 0, 694, 116, 1363, 0, 0,
	159, 0, 1363, 1363, 0, 0, 0, 0, 185, 0,
	1091, 0, 0, 0, 0, 131, 144, 155, 128, 129,
	0, 0, 0, 0, 0, 0, 84, 1194, 0, 1197,
	0, 0, 0, 0, 0, 0, 0, 1210, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 103, 143, 0,
	0, 1456, 0, 138, 118, 0, 0, 131, 145, 157,
	0, 189, 191, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 223, 0, 0, 0, 1218, 0, 0,
	0, 1550, 0, 0, 0, 0, 2682, 1361, 0, 1346,
	0, 1666, 2447, -2, -2, 271, 1666, 985, 0, 0,
	2279, 2213, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 381, 383, 384, 385, 0, 1265, 0, 391, 432,
	1143, 2682, 0, 0, 459, 454, 0, 456, 0, 0,
	0, 1193, 2682, 1191, 2248, 0, 1215, 0, 1172, 2682,
	2246, 0, 0, 0, 1274, 2288, 1283, 1287, 1446, 0,
	471, 0, 1462, 1464, 0, 0, 1687, 0, 1689, 1629,
	1553, 0, 0, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 277, 0, 1665, 0, 0, 1666, 271, 2557,
	318, 318, 1666, 656, 1666, 658, 0, 0, 812, 813,
	0, 318, 318, 318, 819, 820, 822, 823, -2, -2,
	-2, -2, 825, 826, 915, 0, 0, 0, 914, 836,
	837, 0, 840, 844, 0, 979, 2566, 2582, 2637, 992,
	915, 2364, 915, 2364, 915, 2364, 855, 857, 860, 903,
	911, 871, 878, 0, 873, 877, 880, 883, 0, 885,
	893, -2, 0, 895, 0, 897, 0, 899, 915, 916,
	919, 926, 929, 934, 935, 936, 937, 2259, 938, -2,
	942, 943, 0, 954, 959, 960, 956, 0, 0, 0,
	0, 0, 0, 970, 971, 0, 0, 978, 1211, 0,
	1403, 1583, 1509, 637, 1500, 1582, 1501, 1508, 1511, 0,
	0, 1513, 0, 1515, 0, 1578, 1579, 1586, 1587, 0,
	1597, 1598, 1590, 0, -2, 0, 0, 1593, 1594, 1519,
	0, 1536, 1537, 1538, 1567, 1570, 1302, 0, 2816, 1828,
	1702, 1829, 1830, 2232, 0, 1837, 1838, 1839, 1840, 1841,
	1842, 1843, 1844, 1845, 1846, -2, -2, -2, -2, -2,
	-2, -2, -2, 1855, 1856, 1857, 1858, 1859, 1860, 1861,
	1862, 1863, 1864, 1865, -2, -2, -2, 1870, 1871, 1872,
	-2, 2131, 2133, 0, 2196, 0, -2, 0, -2, -2,
	-2, -2, 1891, 0, 1893, 1898, 1900, 1902, 0, 0,
	0, 0, 2195, 1912, 2179, 2180, 0, 0, 2087, 2088,
	2089, 1897, 0, 1916, 2194, 2191, 0, 0, 2125, 0,
	2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099,
	2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	2120, 2121, 2122, 0, 2143, 1566, 1977, 0, 0, 0,
	0, 1984, 1969, 2141, 0, 2140, 0, 0, 0, 2151,
	0, 2186, 2182, 0, 2230, 1823, 1810, 1811, 1812, 1813,
	1814, 1815, 1825, 0, 2227, 2265, 2271, 2061, 0, 0,
	0, 2014, 2015, 2016, 2017, 2018, 0, 2020, 2021, 0,
	2023, 2024, 0, 2026, 2027, 0, 2029, 2030, 2031, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 0, 0,
	2033, 0, 2154, -2, -2, -2, -2, -2, -2, -2,
	-2, 0, 2035, 0, 2037, 2145, 2165, 0, 0, 1917,
	0, 0, 0, 0, 2085, 0, 2040, 2145, 2173, 0,
	0, 0, 0, 0, 2145, 0, 2178, 0, 2047, 0,
	2049, 1545, 0, 0, 1697, 0, 0, 0, 2200, 1697,
	1697, 0, 1609, 0, 0, 1673, 1674, 1675, 1676, 0,
	0, 1677, 0, 1667, 1671, 1668, 1669, 1663, 1626, 0,
	0, 2234, 1663, 1632, 1662, 0, 1172, 1652, 1663, 1663,
	0, -2, 1636, 1653, 0, 0, 577, 579, 581, 585,
	587, 0, 0, 1566, -2, 0, -2, 320, 1171, 0,
	0, 0, 0, 596, 598, 0, 0, 519, 0, 0,
	612, 0, 590, 0, 593, 0, 1698, 1701, 0, 0,
	1712, 1718, 1719, 0, -2, 0, 0, 1808, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 414, 529,
	200, 501, 0, 200, 200, 510, 0, 0, 200, 521,
	200, 2255, 200, 2253, 307, 526, 1492, 234, 0, 672,
	0, 1412, 1421, 0, 704, 0, 706, 0, 2221, 2225,
	2222, 2226, 0, 695, 0, 0, 0, 0, 1362, 0,
	1309, 0, 0, 163, 2682, 0, 202, 0, 0, 1136,
	2240, 0, 1128, 0, 0, 2384, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 130, 0, 0, 0, 0,
	0, 0, 0, 0, 1195, 1196, 1198, 1205, 1207, 0,
	1201, 2228, 0, 0, 1202, 0, 1204, 1206, 1208, 0,
	0, 0, 0, 0, 0, 0, 97, 104, 0, 0,
	0, 0, 0, 0, 1455, 1456, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 2207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1220, 0, 0, 0, 1261, 1259, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 0, 0, 0, -2,
	1222, 1223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 309, 2206, 2216, 0, 1010, 1011, 343,
	346, 349, 352, 240, 0, 387, 0, 0, 1058, 1033,
	0, 0, 441, 318, 0, 0, 455, 459, 2257, 1018,
	1189, 1192, 0, 1172, 2682, 1238, 0, 0, 0, 0,
	0, 0, 1272, 0, 0, 2682, 2235, 2287, 2288, 1448,
	1456, 0, 1697, 0, 1478, 1465, 0, 0, 0, 1478,
	1482, 1483, 1485, 1486, 0, 0, 1688, 1694, 537, 589,
	1553, 1553, 318, 316, 2509, 314, 311, 313, 0, 0,
	0, 1059, 1061, 1062, 1063, 202, 0, 2288, 1128, 2436,
	2288, 0, 1468, 1470, 0, 265, 0, 274, 1666, 272,
	277, 0, 0, 0, 453, 655, 660, 807, 0, 318,
	815, 816, 817, 862, 905, 913, 958, 827, 829, 830,
	831, 0, 0, 993, 989, 990, 991, 846, 915, 849,
	915, 852, 915, 875, 881, 887, 894, 0, 0, 0,
	907, 924, 0, 941, 0, 0, 0, 0, 0, 0,
	0, 964, 965, 966, 968, 973, 972, 977, 1685, 1504,
	1505, 1507, 0, 1516, 0, 0, 1592, -2, -2, 1591,
	1595, 1596, -2, -2, -2, -2, 1512, 0, 1521, 1518,
	0, 1577, 1300, 1301, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 1913, 0, -2, 1892, 1895, 1899, 1901,
	1903, 0, 0, 0, 0, 0, 0, 2134, 0, 2136,
	1914, 2189, 2192, 2127, 0, 2083, 0, 0, 1565, 1566,
	1566, 0, 1983, 0, 2142, 0, 2149, 2150, 0, 1976,
	0, 2183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 2019, 2022, 2025, 2028,
	0, 0, 0, 0, 2008, 0, 0, 0, 2012, 1778,
	1764, 0, 1806, 1804, 1805, 1799, 1806, 1803, 1756, 0,
	1755, 0, 2032, 0, 2034, 2036, 0, 0, 2038, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1920, 1921, 1922, 1942, 2039, 2171, 2172,
	0, 0, 0, 0, 0, 0, 2045, 0, 2177, 2046,
	2048, 1553, 0, 1546, 0, 1611, 1600, 1696, 0, 2198,
	1666, 1613, 1615, 2199, 2237, 1600, 1600, 0, 2146, 0,
	0, 1657, 0, 0, 0, 1659, 1630, 0, 0, 1624,
	0, 1619, 1620, 1621, 1622, 1623, 1631, 1172, 1661, 1633,
	1637, 2265, 0, 1663, 0, 1648, 0, 1650, 1683, 0,
	1642, 1645, 0, 0, 2280, 1697, 0, 354, 359, 360,
	355, 356, 357, 605, 0, 0, 0, 0, 0, 2148,
	0, 1703, 0, 1709, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 217, 1490, 409, 500, 200, 505, 508,
	2204, 200, 514, 517, 523, 230, 0, 668, -2, 702,
	703, 705, 0, 701, 160, 1363, 0, 0, 1305, 1307,
	2251, 1311, 1317, 1320, 0, 165, 2682, 176, 0, 1107,
	0, 2238, 0, 0, 0, 0, 0, 0, 1365, 0,
	0, 2682, 200, 2682, 200, 179, 181, 184, 0, 188,
	186, 0, 1095, 0, 0, 1098, 117, 1363, 0, 0,
	120, 124, 132, 133, 136, 0, 0, 0, 142, 0,
	0, 0, 1322, 1326, 1334, 0, 0, 0, 1199, 1200,
	1203, 1209, 85, 0, 0, 0, 1330, 1332, 1338, 96,
	1434, 1435, 98, 2682, 2249, 100, 2682, 0, 1304, 0,
	0, 0, 0, 190, 122, 126, 134, 135, 137, 0,
	1340, 119, 0, 215, 0, 0, 205, 200, 2682, 0,
	207, 0, 208, 209, 224, 0, 0, 0, 1021, 1022,
	1227, 1228, 1229, 1260, 1213, 1214, 0, 1225, 1219, 0,
	0, 0, 0, 0, 1342, 1343, 0, 0, 0, 1361,
	1358, 1666, 236, 0, 1666, 244, 0, 2212, 0, 374,
	0, 0, 0, 0, 1057, 1154, 0, 1028, 0, 0,
	0, 447, 443, 0, 452, 458, 457, 463, -2, 0,
	0, 0, 0, -2, 0, 0, 1276, 1270, 1271, 0,
	0, 0, 0, 2682, 1450, 1456, 0, 1551, 1566, 470,
	1457, 1478, 0, 0, 0, 1467, 1463, 1460, 1697, 0,
	0, 0, 0, 0, 1690, 1693, 540, 541, 293, 0,
	0, 0, 0, 0, 318, 0, 0, 0, 1064, 1068,
	0, 2288, 2288, 0, 2242, 0, 0, 0, 0, 275,
	0, 278, 0, 0, 0, 283, 284, 285, 286, 287,
	288, 277, 267, 1666, 0, 0, 657, 0, 0, 814,
	0, 839, 848, 850, 853, 896, 898, 915, 925, 948,
	949, 1085, 0, 1085, 0, 0, 969, 1514, 0, 1589,
	1520, 1571, 1572, 0, 1302, 0, 1831, 1876, 0, 0,
	-2, 0, 0, 1880, 0, 0, 0, -2, 0, 0,
	0, 2135, 2137, 0, 2191, 2126, 1978, 0, 0, 0,
	1982, 1966, 1967, 0, 2086, 2152, 2181, 2185, 0, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 0, 2231, 2266, 2270,
	2059, 2060, 2064, 2245, 0, 0, 0, 1991, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 1801, 0, 0,
	2153, 2164, 2166, 1918, 1919, 1923, 1924, 1925, 1926, 1927,
	1928, 1929, 1930, 1931, 1932, -2, -2, -2, 1936, 1937,
	1938, -2, -2, -2, 1943, 0, 0, 0, 2167, 2169,
	2170, 2174, 2175, 0, 2042, 2043, 2044, 2176, 0, 1553,
	1547, 1608, 0, 1695, 1612, 0, 1608, 1608, 1560, 1655,
	0, 0, 1679, 0, 1627, 0, 1628, 0, 1660, 0,
	1635, 1638, 1639, 1649, 0, 1641, 0, 1644, 0, 1978,
	-2, 319, 321, 323, 0, 326, 327, 0, 0, 608,
	609, 0, 607, 591, 0, 0, 1705, 0, 0, 1781,
	1785, 1809, 617, 618, 0, 616, 502, 511, 232, 0,
	1664, 0, 0, 0, 0, 0, 0, 201, 1105, 1135,
	0, 0, 0, 1127, 0, 0, 1141, 167, 168, 0,
	0, 0, 0, 177, 0, 0, 174, 0, 183, 187,
	1092, 0, 0, 0, 0, 1310, 0, 0, 0, 139,
	140, 141, 0, 146, 0, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1440, 1441, 0, 1431,
	0, 0, 0, 203, 0, 0, 0, 1299, 226, 0,
	0, 0, 0, 0, 1263, 1264, 1221, 1323, 1327, 1335,
	0, 0, 0, 0, 623, 0, 628, 1360, 0, 244,
	242, 0, 245, 0, 248, 249, 0, 251, 244, 238,
	0, 0, 0, 1172, 388, 1031, 1142, 0, 1144, 0,
	1029, 0, 0, 1143, 439, 0, 446, 0, 460, 0,
	0, 1193, 0, 0, 1216, 1236, 1172, 0, 1275, 1277,
	0, 1285, 0, 0, 0, 1452, 1456, 0, 1445, 1446,
	1585, 1458, 1476, -2, 0, 0, 1566, 1484, 1481, 1487,
	1488, 0, 315, 0, 310, 312, 0, 296, 0, 0,
	1060, 1065, 0, 0, 0, 0, 0, 1469, 1471, 0,
	0, 0, 0, 0, 0, 266, 277, 1666, 302, 0,
	808, 832, 906, 950, 1084, 0, 0, 952, 0, 0,
	1588, 1575, 1576, 1573, 1302, 1878, 1882, 0, 0, 0,
	1884, -2, 0, 1906, -2, -2, 2138, 2190, 1957, 1566,
	1979, 1981, 1968, 2184, 1826, 0, 2066, 2063, 0, 2050,
	0, 2003, 2004, 0, 0, 2007, 2009, 2010, 2011, 1765,
	1758, 1757, 2163, 0, 0, 0, 0, 2041, 1548, 0,
	2055, 0, 0, 1616, 2055, 2055, 1656, 0, 1658, 1625,
	1617, 0, 2266, 1651, 1643, 0, 0, 324, 0, 328,
	329, 0, 0, 1699, 1704, 0, 1710, 1780, 0, 233,
	161, 162, 1314, 1318, 1315, 0, 164, 0, 1106, 0,
	1109, 0, 0, 0, 0, 1116, 1128, 0, 0, 0,
	0, 0, 1129, 0, 1158, 0, 1290, 1297, 0, -2,
	0, 0, 0, 170, 193, 0, 0, 194, 1364, 172,
	0, 0, 200, 200, 0, 0, 1306, 1308, 1321, 0,
	0, 0, 0, 149, 0, 0, 1324, 1328, 1336, 1331,
	1333, 1339, 0, 101, 0, 1442, 0, 0, 1341, 213,
	214, 0, 200, 0, 200, 206, 200, 1299, 0, 0,
	0, 0, 0, 0, 0, 1344, 1345, 235, 0, 0,
	0, 0, 237, 308, 244, 376, 0, 1079, 0, 1154,
	1146, 1147, 1148, 0, 1153, 1155, 0, 0, 1045, 1030,
	0, 1041, 0, 0, 1058, 1033, 0, 444, 461, 0,
	464, 0, 467, 1019, 1190, 1233, 1172, 0, 1267, 0,
	0, 0, 0, 0, 0, 0, 1454, 1456, 0, 1447,
	1448, 1478, 1584, 0, 0, 0, 1466, 1585, 0, 317,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 279, 0, 280, 281, 282, 268, 269, 659, 661,
	0, 0, 667, 1083, 0, 0, 0, 0, 1574, 1886,
	-2, -2, 1907, 0, 2267, 2269, 1566, 0, 2052, 1568,
	0, 0, -2, 0, 0, 0, 1549, 1532, 0, 1607,
	1599, 1601, 1603, 2569, 2359, 2681, 1533, 1534, 1678, 0,
	1646, 325, 610, 0, 0, 1706, 0, 0, 0, 1316,
	166, 0, 1110, 1111, 2241, 1113, 0, 1115, 1117, 1118,
	1119, 0, 1122, 2290, 0, 1126, 0, 1137, 1159, 0,
	1168, 0, 1292, 1302, 1296, 0, 1294, 1170, 0, 169,
	171, 195, 192, 1299, 0, 173, 182, 0, 0, 121,
	0, 0, 2353, 152, 150, 148, 99, 1303, 123, 0,
	215, 225, 1298, 227, 210, 200, 0, 1325, 1329, 1337,
	0, 1352, 1353, 1354, 1355, 0, 0, 0, 0, 246,
	0, 247, 250, 0, 0, 1094, 0, 1032, 1145, 0,
	1156, 1157, 1035, 0, 1034, 0, 0, 0, 0, 0,
	445, 448, 0, 451, 0, 0, 0, 0, 0, 1278,
	1276, 0, 1284, 0, 0, 0, 1430, 0, 0, 1449,
	1450, 468, 1472, 0, 0, 1478, 1489, 295, 0, 0,
	1066, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077,
	1067, 1170, 0, 0, 1134, 0, 300, 276, 0, 663,
	0, 665, 0, 951, 953, 0, 0, 1980, 2070, 0,
	0, 2005, 2006, -2, 0, 1946, 2054, 2056, 0, 0,
	0, 0, 0, 1618, 611, 1700, 619, 1312, 0, 1319,
	1108, 1112, 0, 0, 0, 1176, 0, 0, 1130, 0,
	1162, 1163, 1079, 0, 1164, 1165, 1166, 1291, 1577, 1297,
	1079, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 204, 228, 1299, 0, 1356, 1357, 0, 0, 243,
	261, 0, 1234, 1033, 1093, 0, 0, 1043, 0, 1046,
	0, 1042, 1039, 1040, 1031, 0, 449, 450, 465, 0,
	466, 0, 1237, 0, 0, 1285, 0, 0, 1437, 1429,
	1456, 1451, 1452, 1697, 1475, 1479, 0, 0, 1168, 1170,
	1090, 0, 662, 0, 0, 961, 962, 0, 0, 0,
	0, 2065, 1569, 1947, 0, 0, 1602, 1604, 1605, 1606,
	1313, 0, 0, 1121, 1181, 0, 0, 0, 1160, 1161,
	1090, 0, 1295, 1293, 1139, 0, 1172, 175, 0, 1170,
	0, 1099, 0, 0, 1102, 0, 0, 153, 2353, 151,
	0, 200, 1349, 200, 0, 264, 0, 258, 256, 257,
	1035, 0, 0, 1150, 1152, 0, 1047, 1079, 1045, 462,
	1235, 1268, 1170, 0, 1168, 0, 1444, 1456, 1438, 1439,
	0, 1454, 0, 318, 318, 1079, 1168, 1033, 1089, 318,
	664, 666, 2062, 2082, 2071, -2, 2640, 2360, 0, 2082,
	2082, 2057, 2058, 0, 0, 1123, 1177, 1178, 0, 1173,
	1174, 1175, 2289, 1124, 1125, 1158, 0, 0, 1176, 196,
	1079, 1096, 0, 0, 1097, 0, 0, 156, 0, 158,
	229, 1347, 0, 1350, 0, 252, 0, 0, 1027, 0,
	1149, 0, 0, 0, 0, 1094, 1035, 1168, 0, 1079,
	0, 1433, 1443, 0, 1453, 1430, 0, 297, 298, 1090,
	1079, 1697, 0, 299, 2067, 0, 0, 2073, 2074, 2075,
	2076, 2077, 2068, 2069, 1114, 0, 1179, 0, 1180, 0,
	0, 0, 1697, 1167, 0, 1181, 180, 1100, 0, 1103,
	0, 154, 0, 0, 0, 259, 260, 1024, 1026, 0,
	1151, 1036, 0, 1038, 1033, 1044, 1079, 0, 1090, 0,
	1426, 1432, 1436, 2250, 1437, 1473, 0, 1033, 1090, 1133,
	0, 2079, 2080, 0, 0, 0, 1182, 0, 1185, 1186,
	0, 1183, 1138, 0, 1158, 0, 0, 1348, 200, 0,
	0, 1037, 1035, 1090, 1170, 1033, 1168, 1444, 0, 1697,
	1033, 2078, 2081, 2072, 1120, 1184, 1187, 1188, 1169, 1140,
	0, 0, 1351, 262, 0, 1082, 1027, 1033, 1168, 1697,
	1079, 1433, 1697, 1131, 1697, 1087, 0, 0, 1078, 1080,
	1081, 1025, 1697, 1079, 1281, 1090, 1427, 1474, 1132, 1101,
	1086, 0, 263, 1279, 1090, 1033, 0, 1033, 1697, 0,
	1697, 1282, 1087, 1280, 1104,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 582, 3, 588, 583, 3,
	593, 594, 586, 584, 598, 585, 595, 587, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 601, 3,
	574, 576, 575, 579, 597, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 591, 3, 592, 589, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 599, 581, 600, 577,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 578, 57917, 580, 57918, 590, 57919, 596,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1465
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1470
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1472
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1475
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1476
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1477
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1478
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1479
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1480
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1481
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1483
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1485
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1492
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1501
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1503
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1506
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1507
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1508
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1509
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1510
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1511
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1512
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1514
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1515
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1574
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1600
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1614
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1632
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1636
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1640
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1667
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1671
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1677
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[5].union.dataPlacement(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1687
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1694
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1704
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1711
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1761
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1793
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1797
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1801
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1807
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1817
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1826
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1847
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1855
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1869
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1878
		{
		}
	case 131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1879
		{
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1883
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1892
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1904
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1909
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1916
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1928
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1935
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1943
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1948
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1952
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1957
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1963
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1971
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1982
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1992
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2002
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2011
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2022
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2028
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2036
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2044
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 154:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2054
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2059
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2080
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2084
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2091
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2096
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2101
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2106
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2116
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2121
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2136
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2145
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2159
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2188
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2191
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2197
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 180:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2237
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2242
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2249
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2257
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2272
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2280
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = nil
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2290
		{
			sqlVAL.union.val = true
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = false
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2300
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = nil
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 203:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2365
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2376
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2385
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2404
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2422
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2426
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2429
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2440
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2447
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2464
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2469
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2476
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2484
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2515
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2519
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2523
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2527
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2579
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2590
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2599
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2607
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2619
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2630
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2634
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2651
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2655
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2740
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2751
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = nil
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2768
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2778
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2794
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2800
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2804
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2808
		{
			sqlVAL.union.val = nil
		}
	case 265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2840
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2849
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2868
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2878
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2885
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2889
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2893
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2899
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2929
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2938
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2954
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2958
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2962
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2966
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2976
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2982
		{
			return unimplemented(sqllex, "alter function")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2986
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3027
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3032
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3036
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3042
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3047
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3052
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3057
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3062
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3066
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3082
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3085
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3093
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3121
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3139
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3143
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3149
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3153
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = nil
		}
	case 319:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3169
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3183
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3203
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3211
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3215
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3219
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3223
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3227
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3235
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3236
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3237
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3238
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3248
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3256
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3265
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3292
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3298
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3301
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3311
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3320
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3328
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3337
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3349
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3365
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3369
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3374
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3386
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3392
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3393
		{
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3394
		{
			return helpWith(sqllex, "CREATE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3407
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3408
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3411
		{
			return unimplemented(sqllex, "create access method")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3412
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3413
		{
			return unimplemented(sqllex, "create cast")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3414
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3415
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3416
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3417
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3418
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3419
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3420
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3421
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3423
		{
			return unimplemented(sqllex, "create publication")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3424
		{
			return unimplemented(sqllex, "create rule")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3425
		{
			return unimplemented(sqllex, "create server")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3426
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3427
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3428
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3429
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3432
		{
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3433
		{
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3436
		{
		}
	case 400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3437
		{
		}
	case 401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3440
		{
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3441
		{
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3444
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3445
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3446
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3447
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3448
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3449
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3450
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3451
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3452
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3453
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3454
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3455
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3456
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3457
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3458
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3459
		{
			return unimplemented(sqllex, "drop server")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3460
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3461
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3462
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3465
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3466
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3467
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3468
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3469
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3471
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3472
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3484
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3492
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3500
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3506
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3510
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3519
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3526
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3532
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3538
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3542
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3580
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3588
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3598
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3602
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3612
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3623
		{

			sqlVAL.union.val = nil
		}
	case 460:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3651
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3655
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3666
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3670
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3683
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3706
		{
			return helpWith(sqllex, "DELETE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3709
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3710
		{
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3718
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3721
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3722
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3723
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3724
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3725
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3734
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3735
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3736
		{
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3737
		{
			return helpWith(sqllex, "DROP")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3740
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3742
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3744
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3745
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3746
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3754
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3758
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3762
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3771
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3779
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3791
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3794
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3802
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3806
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3809
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3826
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3834
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3842
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3850
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3857
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3864
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3879
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3883
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3889
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3893
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3902
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3910
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3917
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3925
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3929
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3932
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3936
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3941
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3954
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3959
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3966
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3970
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3993
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4000
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4002
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4010
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4018
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4026
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4034
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4045
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4053
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4056
		{
			return helpWith(sqllex, "DELETE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4058
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4059
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4060
		{
			return helpWith(sqllex, "INSERT")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4063
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4065
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4073
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4075
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4080
		{
			return helpWith(sqllex, "DELETE")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4082
		{
			return helpWith(sqllex, "INSERT")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4088
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4089
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4097
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4107
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4115
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4123
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4131
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4141
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4148
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4156
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4160
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4164
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4178
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4186
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4189
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4216
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4238
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4242
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4253
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "GRANT")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4283
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4287
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4291
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4295
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4316
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4319
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4328
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			return helpWith(sqllex, "RESET")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4365
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4369
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4372
		{
			return helpWith(sqllex, "RESET")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4380
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4383
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4394
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4397
		{
			return helpWith(sqllex, "USE")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4401
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4402
		{
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4403
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4404
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4408
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4409
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4410
		{
			return helpWith(sqllex, "USE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4426
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4441
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4444
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4462
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4470
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4474
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4478
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4484
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4488
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4521
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4524
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4550
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4578
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4581
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4586
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4590
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4613
		{
			return unimplemented(sqllex, "set from current")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4617
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4626
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4631
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4636
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4644
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4649
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4656
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4660
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4666
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4670
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4677
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4698
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4720
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4724
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4730
		{
			sqlVAL.union.val = tree.Low
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = tree.Normal
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = tree.High
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4766
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4781
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4782
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4783
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4784
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4785
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4787
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4788
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4789
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4791
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4792
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4793
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4794
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4795
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4797
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4798
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4801
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4803
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4804
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4805
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4806
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4807
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4808
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4809
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4810
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4811
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4812
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4813
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4814
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4817
		{
			return helpWith(sqllex, "SHOW")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4820
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4825
		{
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4826
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4829
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4833
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4838
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4843
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4848
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4853
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4863
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4864
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4865
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4876
		{
			sqlVAL.str = "client_encoding"
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			sqlVAL.str = "timezone"
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4894
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4898
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4902
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4913
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4921
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4929
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4943
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4952
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4961
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4970
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4978
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4995
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4997
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5000
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5002
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5006
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5009
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5017
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5020
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5028
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5032
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5036
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5043
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5051
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5054
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5065
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5072
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5076
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5086
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5095
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5102
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5105
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5118
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5126
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5134
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5137
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5139
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5143
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5147
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5150
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5152
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5159
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5167
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5170
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5175
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5183
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5186
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5191
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5195
		{
			sqlVAL.union.val = true
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = true
		}
	case 865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5199
		{
			sqlVAL.union.val = false
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5216
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5220
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5224
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5227
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5228
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5229
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5231
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5239
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5246
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5248
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5256
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5264
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5272
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5273
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5289
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5291
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5297
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5299
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5305
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5313
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 894:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5334
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5337
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5342
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5344
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5348
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = true
		}
	case 901:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = false
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5360
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5363
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5365
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5368
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5376
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5386
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5396
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5399
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5409
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5414
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5417
		{
			sqlVAL.union.val = true
		}
	case 915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = false
		}
	case 916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5425
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5432
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5446
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5453
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5457
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5461
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5472
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5483
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5486
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5494
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5499
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5504
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5508
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5518
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5522
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5527
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5532
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5537
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5545
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5555
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5559
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5561
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5565
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5573
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5576
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5584
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5587
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5605
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5613
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5628
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5634
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5636
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5639
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5641
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5644
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5648
		{
		}
	case 961:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5657
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5665
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5671
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5680
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5685
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5689
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5692
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5701
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5705
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5721
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5746
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5751
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5761
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5768
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5775
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 980:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5780
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5908
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5947
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5951
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5960
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5977
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5981
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5992
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6009
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6010
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6011
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6021
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6022
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6023
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6041
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6050
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6055
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6059
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6082
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6084
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6090
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6118
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6125
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6136
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6153
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6192
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6208
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6237
		{

			sqlVAL.union.val = nil
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6243
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.str = ""
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6253
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = nil
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6263
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6268
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6272
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6276
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6280
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6286
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6290
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6306
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6320
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6335
		{
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6336
		{
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6337
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6355
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6356
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6357
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6365
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6370
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6386
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6392
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6405
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6418
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6429
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6432
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6435
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6436
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6442
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6458
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6463
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6468
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.str = ""
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6502
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6514
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6530
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6556
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6586
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6606
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6617
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6621
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6635
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6639
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6669
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6673
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6677
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6681
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6691
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6698
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6706
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6716
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6731
		{

			sqlVAL.union.val = true
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = false
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6742
		{
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6743
		{
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6761
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6801
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6812
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6844
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6855
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6872
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6882
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6897
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6904
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6921
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6925
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6931
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6941
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6962
		{
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6963
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6964
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6965
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6966
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6967
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7007
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7011
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7039
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7043
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7074
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7080
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7123
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7132
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7140
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7147
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7151
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7154
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7155
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7156
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7166
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7168
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7170
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7172
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7175
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7178
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7180
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7182
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7190
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7193
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7218
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7252
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7260
		{
			sqlVAL.str = ""
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7270
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = true
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7286
		{

			sqlVAL.union.val = true
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = false
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7301
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7315
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7327
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7339
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7349
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7359
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = nil
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7469
		{
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7470
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7495
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7497
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7499
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7501
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7503
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7505
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7519
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7523
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7543
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7561
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7580
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7597
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7614
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7618
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.union.val = false
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = true
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = false
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = true
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = false
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7659
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7672
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7678
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7684
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7692
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7717
		{
			sqlVAL.str = ""
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7721
		{
			sqlVAL.str = ""
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7729
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7739
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7745
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7751
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7757
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7765
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7771
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7810
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7829
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7917
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7982
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7988
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8000
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8006
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8020
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8026
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8085
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8089
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = true
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = false
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.union.val = tree.Types
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8145
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8149
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8173
		{
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8174
		{
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8177
		{
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8178
		{
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8189
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8207
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8216
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8229
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8237
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8245
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8266
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8274
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8285
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8289
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8290
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8291
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8310
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8315
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8328
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8333
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8342
		{
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8343
		{
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8344
		{
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8361
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8364
		{
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8365
		{
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8393
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8406
		{
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8408
		{
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8412
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8461
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8501
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.str = ""
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8524
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8529
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8546
		{

		}
	case 1440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8553
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8561
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.str = ""
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.str = ""
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8596
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8600
		{
			sqlVAL.str = ""
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.str = ""
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8616
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8629
		{
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8630
		{
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8659
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8677
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8681
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8690
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8739
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8743
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8766
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8770
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8796
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8808
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8840
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8861
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8876
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8942
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8988
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9005
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9009
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9013
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9020
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9055
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9056
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9057
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9118
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9155
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9162
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9178
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = true
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = false
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9231
		{
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9232
		{
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9240
		{
			sqlVAL.union.val = nil
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9245
		{
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9246
		{
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = true
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = false
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = false
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = true
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9275
		{
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9276
		{
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9279
		{
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9280
		{
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9294
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9321
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9342
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9347
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9373
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9406
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9461
		{
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9462
		{
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9465
		{
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9466
		{
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9500
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9501
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9502
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9529
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9532
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9534
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9549
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9557
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9571
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9576
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9581
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9587
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9597
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9609
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9628
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9668
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9678
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9713
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9724
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9754
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9787
		{
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9789
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = nil
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = true
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = false
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9852
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9882
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.str = tree.AstFull
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.str = tree.AstRight
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.str = tree.AstInner
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9906
		{
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9907
		{
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.str = tree.AstHash
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9943
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.str = ""
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9976
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9981
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9999
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10005
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10011
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10021
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = true
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = false
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = true
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = false
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10070
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10083
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10091
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10092
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10110
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10112
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10120
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10133
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10140
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10149
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10189
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10201
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10202
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10216
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10230
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10231
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10234
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = types.Geography
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10251
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10259
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10285
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10293
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = nil
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = types.Int2
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = types.Int
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = types.Float4
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = types.Float
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10336
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10344
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10352
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = types.Bool
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10366
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = types.Float
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10385
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10391
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10413
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = types.String
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = true
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = false
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = types.Date
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10462
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10470
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10484
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10493
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10501
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10518
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = true
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = false
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10530
		{
			sqlVAL.union.val = false
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10534
		{
			sqlVAL.union.val = types.Interval
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10542
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10553
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10626
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10641
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10647
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = nil
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10671
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10720
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10731
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10756
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10836
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10840
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10844
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10848
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10860
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10880
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10888
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10934
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10938
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11001
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11067
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11084
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11089
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11197
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11205
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11215
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11223
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11227
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11301
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11306
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11332
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11341
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11356
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11375
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11386
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11394
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11397
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11398
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11400
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11413
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11422
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11475
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11488
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11515
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11523
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11529
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11541
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11545
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11555
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11571
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11575
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11579
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11587
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11591
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11595
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11599
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11610
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11613
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11618
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11620
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11627
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11636
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11638
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11642
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11645
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11651
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11654
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11656
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11659
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11661
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11664
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11666
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11669
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11674
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11676
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11680
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11683
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11684
		{
			return unimplemented(sqllex, "treat")
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11690
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11705
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11710
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11726
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11730
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11757
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11800
		{
			sqlVAL.str = ""
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11846
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11859
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11887
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11891
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11895
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11899
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11923
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11927
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11932
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11956
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11994
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11995
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11997
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11999
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12000
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12001
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12003
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12005
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12006
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12007
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12009
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12010
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12011
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12013
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12014
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12015
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12017
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12018
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12019
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12021
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12023
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12026
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12027
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12032
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12056
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12057
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12081
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12110
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12114
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12120
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12124
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12137
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12151
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12181
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12208
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12246
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12258
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12262
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12268
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12274
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12280
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12288
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12306
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12313
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12317
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12323
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12329
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12340
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12346
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12350
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12363
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12372
		{
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12373
		{
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12377
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12381
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12387
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12396
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12400
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12404
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12412
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12416
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12422
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12426
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12445
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12453
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12476
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12485
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12489
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12497
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12503
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12507
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12522
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12526
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12538
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12542
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12551
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12562
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12571
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12579
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12596
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12681
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12689
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12693
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12699
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12703
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12711
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12738
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12745
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12749
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12753
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12767
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12771
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12775
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12788
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12797
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12815
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12828
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12835
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12860
		{
			sqlVAL.str = ""
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12866
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12870
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
