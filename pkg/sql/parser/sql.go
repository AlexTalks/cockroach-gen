// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:868
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13544

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1565,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	260, 406,
	-2, 0,
	-1, 74,
	242, 243,
	513, 243,
	-2, 0,
	-1, 87,
	230, 1301,
	244, 1301,
	260, 402,
	389, 402,
	399, 1057,
	437, 402,
	450, 1057,
	497, 1057,
	524, 402,
	550, 1057,
	-2, 0,
	-1, 93,
	132, 1565,
	237, 1565,
	535, 1565,
	536, 1565,
	-2, 0,
	-1, 109,
	150, 1536,
	169, 1536,
	182, 1536,
	240, 1536,
	273, 1536,
	340, 1536,
	350, 1536,
	530, 1536,
	-2, 1507,
	-1, 149,
	158, 908,
	259, 908,
	392, 870,
	455, 870,
	496, 870,
	516, 908,
	518, 870,
	-2, 0,
	-1, 153,
	4, 1567,
	21, 1567,
	22, 1567,
	23, 1567,
	24, 1567,
	25, 1567,
	26, 1567,
	27, 1567,
	29, 1567,
	30, 1567,
	36, 1567,
	41, 1567,
	42, 1567,
	44, 1567,
	45, 1567,
	46, 1567,
	47, 1567,
	48, 1567,
	49, 1567,
	50, 1567,
	51, 1567,
	53, 1567,
	54, 1567,
	55, 1567,
	56, 1567,
	58, 1567,
	59, 1567,
	60, 1567,
	61, 1567,
	62, 1567,
	63, 1567,
	64, 1567,
	68, 1567,
	69, 1567,
	70, 1567,
	71, 1567,
	73, 1567,
	74, 1567,
	75, 1567,
	79, 1567,
	80, 1567,
	81, 1567,
	82, 1567,
	83, 1567,
	84, 1567,
	85, 1567,
	88, 1567,
	89, 1567,
	90, 1567,
	91, 1567,
	92, 1567,
	94, 1567,
	96, 1567,
	97, 1567,
	98, 1567,
	99, 1567,
	100, 1567,
	101, 1567,
	103, 1567,
	104, 1567,
	105, 1567,
	107, 1567,
	108, 1567,
	109, 1567,
	117, 1567,
	118, 1567,
	119, 1567,
	120, 1567,
	121, 1567,
	123, 1567,
	124, 1567,
	125, 1567,
	127, 1567,
	128, 1567,
	129, 1567,
	131, 1567,
	132, 1567,
	133, 1567,
	135, 1567,
	136, 1567,
	137, 1567,
	140, 1567,
	141, 1567,
	142, 1567,
	144, 1567,
	145, 1567,
	147, 1567,
	148, 1567,
	149, 1567,
	151, 1567,
	152, 1567,
	153, 1567,
	154, 1567,
	155, 1567,
	156, 1567,
	157, 1567,
	158, 1567,
	159, 1567,
	160, 1567,
	161, 1567,
	162, 1567,
	163, 1567,
	164, 1567,
	165, 1567,
	166, 1567,
	168, 1567,
	174, 1567,
	175, 1567,
	176, 1567,
	177, 1567,
	181, 1567,
	183, 1567,
	184, 1567,
	188, 1567,
	189, 1567,
	190, 1567,
	191, 1567,
	192, 1567,
	193, 1567,
	194, 1567,
	195, 1567,
	196, 1567,
	197, 1567,
	198, 1567,
	199, 1567,
	200, 1567,
	201, 1567,
	203, 1567,
	204, 1567,
	206, 1567,
	207, 1567,
	209, 1567,
	210, 1567,
	211, 1567,
	212, 1567,
	213, 1567,
	214, 1567,
	215, 1567,
	216, 1567,
	217, 1567,
	219, 1567,
	220, 1567,
	222, 1567,
	223, 1567,
	224, 1567,
	225, 1567,
	226, 1567,
	230, 1567,
	231, 1567,
	232, 1567,
	233, 1567,
	234, 1567,
	237, 1567,
	238, 1567,
	239, 1567,
	241, 1567,
	243, 1567,
	244, 1567,
	246, 1567,
	248, 1567,
	249, 1567,
	250, 1567,
	252, 1567,
	256, 1567,
	257, 1567,
	258, 1567,
	259, 1567,
	260, 1567,
	261, 1567,
	263, 1567,
	264, 1567,
	265, 1567,
	267, 1567,
	268, 1567,
	270, 1567,
	271, 1567,
	274, 1567,
	278, 1567,
	279, 1567,
	280, 1567,
	283, 1567,
	284, 1567,
	285, 1567,
	286, 1567,
	288, 1567,
	289, 1567,
	290, 1567,
	291, 1567,
	292, 1567,
	293, 1567,
	294, 1567,
	295, 1567,
	296, 1567,
	297, 1567,
	298, 1567,
	299, 1567,
	300, 1567,
	301, 1567,
	302, 1567,
	303, 1567,
	304, 1567,
	305, 1567,
	306, 1567,
	307, 1567,
	308, 1567,
	309, 1567,
	311, 1567,
	313, 1567,
	314, 1567,
	315, 1567,
	316, 1567,
	317, 1567,
	318, 1567,
	319, 1567,
	320, 1567,
	321, 1567,
	322, 1567,
	323, 1567,
	324, 1567,
	325, 1567,
	327, 1567,
	328, 1567,
	330, 1567,
	332, 1567,
	333, 1567,
	335, 1567,
	336, 1567,
	337, 1567,
	338, 1567,
	339, 1567,
	342, 1567,
	345, 1567,
	346, 1567,
	347, 1567,
	348, 1567,
	351, 1567,
	352, 1567,
	353, 1567,
	355, 1567,
	357, 1567,
	358, 1567,
	359, 1567,
	360, 1567,
	361, 1567,
	362, 1567,
	363, 1567,
	364, 1567,
	365, 1567,
	366, 1567,
	367, 1567,
	368, 1567,
	369, 1567,
	371, 1567,
	372, 1567,
	373, 1567,
	374, 1567,
	375, 1567,
	376, 1567,
	377, 1567,
	378, 1567,
	379, 1567,
	380, 1567,
	381, 1567,
	382, 1567,
	383, 1567,
	384, 1567,
	385, 1567,
	387, 1567,
	388, 1567,
	390, 1567,
	391, 1567,
	392, 1567,
	393, 1567,
	394, 1567,
	395, 1567,
	396, 1567,
	397, 1567,
	398, 1567,
	399, 1567,
	400, 1567,
	401, 1567,
	403, 1567,
	405, 1567,
	406, 1567,
	407, 1567,
	412, 1567,
	414, 1567,
	415, 1567,
	416, 1567,
	417, 1567,
	418, 1567,
	419, 1567,
	420, 1567,
	421, 1567,
	422, 1567,
	423, 1567,
	425, 1567,
	426, 1567,
	427, 1567,
	429, 1567,
	430, 1567,
	431, 1567,
	432, 1567,
	433, 1567,
	434, 1567,
	435, 1567,
	437, 1567,
	438, 1567,
	439, 1567,
	440, 1567,
	441, 1567,
	442, 1567,
	443, 1567,
	444, 1567,
	445, 1567,
	446, 1567,
	447, 1567,
	448, 1567,
	450, 1567,
	451, 1567,
	452, 1567,
	453, 1567,
	454, 1567,
	455, 1567,
	457, 1567,
	458, 1567,
	459, 1567,
	460, 1567,
	461, 1567,
	462, 1567,
	464, 1567,
	465, 1567,
	466, 1567,
	467, 1567,
	468, 1567,
	469, 1567,
	470, 1567,
	471, 1567,
	473, 1567,
	475, 1567,
	476, 1567,
	477, 1567,
	478, 1567,
	479, 1567,
	480, 1567,
	481, 1567,
	482, 1567,
	483, 1567,
	484, 1567,
	485, 1567,
	486, 1567,
	487, 1567,
	488, 1567,
	489, 1567,
	490, 1567,
	492, 1567,
	493, 1567,
	495, 1567,
	496, 1567,
	498, 1567,
	499, 1567,
	500, 1567,
	501, 1567,
	502, 1567,
	503, 1567,
	504, 1567,
	505, 1567,
	506, 1567,
	508, 1567,
	509, 1567,
	510, 1567,
	511, 1567,
	512, 1567,
	514, 1567,
	516, 1567,
	517, 1567,
	518, 1567,
	519, 1567,
	520, 1567,
	521, 1567,
	523, 1567,
	524, 1567,
	525, 1567,
	526, 1567,
	528, 1567,
	529, 1567,
	532, 1567,
	533, 1567,
	534, 1567,
	535, 1567,
	536, 1567,
	537, 1567,
	538, 1567,
	540, 1567,
	543, 1567,
	544, 1567,
	545, 1567,
	546, 1567,
	547, 1567,
	548, 1567,
	550, 1567,
	551, 1567,
	552, 1567,
	553, 1567,
	555, 1567,
	560, 1567,
	561, 1567,
	562, 1567,
	563, 1567,
	564, 1567,
	565, 1567,
	-2, 0,
	-1, 154,
	1, 1418,
	130, 1418,
	248, 1418,
	329, 1418,
	387, 1418,
	396, 1418,
	569, 1418,
	598, 1418,
	-2, 0,
	-1, 156,
	1, 1418,
	598, 1418,
	-2, 0,
	-1, 157,
	1, 1418,
	598, 1418,
	-2, 0,
	-1, 158,
	1, 1418,
	513, 1418,
	598, 1418,
	-2, 0,
	-1, 187,
	150, 1535,
	169, 1535,
	182, 1535,
	240, 1535,
	273, 1535,
	340, 1535,
	350, 1535,
	530, 1535,
	-2, 1510,
	-1, 234,
	4, 1574,
	5, 1574,
	6, 1574,
	7, 1574,
	8, 1574,
	9, 1574,
	10, 1574,
	21, 1574,
	22, 1574,
	23, 1574,
	24, 1574,
	25, 1574,
	26, 1574,
	27, 1574,
	29, 1574,
	30, 1574,
	36, 1574,
	37, 1574,
	41, 1574,
	42, 1574,
	43, 1574,
	44, 1574,
	45, 1574,
	46, 1574,
	47, 1574,
	48, 1574,
	49, 1574,
	50, 1574,
	51, 1574,
	53, 1574,
	54, 1574,
	55, 1574,
	56, 1574,
	58, 1574,
	59, 1574,
	60, 1574,
	61, 1574,
	62, 1574,
	63, 1574,
	64, 1574,
	65, 1574,
	66, 1574,
	67, 1574,
	68, 1574,
	69, 1574,
	70, 1574,
	71, 1574,
	73, 1574,
	74, 1574,
	75, 1574,
	77, 1574,
	79, 1574,
	80, 1574,
	81, 1574,
	82, 1574,
	83, 1574,
	84, 1574,
	85, 1574,
	88, 1574,
	89, 1574,
	90, 1574,
	91, 1574,
	92, 1574,
	94, 1574,
	96, 1574,
	97, 1574,
	98, 1574,
	99, 1574,
	100, 1574,
	101, 1574,
	103, 1574,
	104, 1574,
	105, 1574,
	106, 1574,
	107, 1574,
	108, 1574,
	109, 1574,
	110, 1574,
	111, 1574,
	112, 1574,
	113, 1574,
	114, 1574,
	115, 1574,
	116, 1574,
	117, 1574,
	118, 1574,
	119, 1574,
	120, 1574,
	121, 1574,
	122, 1574,
	123, 1574,
	124, 1574,
	125, 1574,
	126, 1574,
	127, 1574,
	128, 1574,
	129, 1574,
	131, 1574,
	132, 1574,
	133, 1574,
	135, 1574,
	136, 1574,
	137, 1574,
	140, 1574,
	141, 1574,
	142, 1574,
	144, 1574,
	145, 1574,
	147, 1574,
	148, 1574,
	149, 1574,
	151, 1574,
	152, 1574,
	153, 1574,
	154, 1574,
	155, 1574,
	156, 1574,
	157, 1574,
	158, 1574,
	159, 1574,
	160, 1574,
	161, 1574,
	162, 1574,
	163, 1574,
	164, 1574,
	165, 1574,
	166, 1574,
	167, 1574,
	168, 1574,
	174, 1574,
	175, 1574,
	176, 1574,
	177, 1574,
	181, 1574,
	183, 1574,
	184, 1574,
	187, 1574,
	188, 1574,
	189, 1574,
	190, 1574,
	191, 1574,
	192, 1574,
	193, 1574,
	194, 1574,
	195, 1574,
	196, 1574,
	197, 1574,
	198, 1574,
	199, 1574,
	200, 1574,
	201, 1574,
	203, 1574,
	204, 1574,
	206, 1574,
	207, 1574,
	209, 1574,
	210, 1574,
	211, 1574,
	212, 1574,
	213, 1574,
	214, 1574,
	215, 1574,
	216, 1574,
	217, 1574,
	218, 1574,
	219, 1574,
	220, 1574,
	222, 1574,
	223, 1574,
	224, 1574,
	225, 1574,
	226, 1574,
	230, 1574,
	231, 1574,
	232, 1574,
	233, 1574,
	234, 1574,
	236, 1574,
	237, 1574,
	238, 1574,
	239, 1574,
	241, 1574,
	243, 1574,
	244, 1574,
	245, 1574,
	246, 1574,
	247, 1574,
	248, 1574,
	249, 1574,
	250, 1574,
	251, 1574,
	252, 1574,
	256, 1574,
	257, 1574,
	258, 1574,
	259, 1574,
	260, 1574,
	261, 1574,
	263, 1574,
	264, 1574,
	265, 1574,
	267, 1574,
	268, 1574,
	269, 1574,
	270, 1574,
	271, 1574,
	272, 1574,
	274, 1574,
	278, 1574,
	279, 1574,
	280, 1574,
	281, 1574,
	282, 1574,
	283, 1574,
	284, 1574,
	285, 1574,
	286, 1574,
	288, 1574,
	289, 1574,
	290, 1574,
	291, 1574,
	292, 1574,
	293, 1574,
	294, 1574,
	295, 1574,
	296, 1574,
	297, 1574,
	298, 1574,
	299, 1574,
	300, 1574,
	301, 1574,
	302, 1574,
	303, 1574,
	304, 1574,
	305, 1574,
	306, 1574,
	307, 1574,
	308, 1574,
	309, 1574,
	311, 1574,
	312, 1574,
	313, 1574,
	314, 1574,
	315, 1574,
	316, 1574,
	317, 1574,
	318, 1574,
	319, 1574,
	320, 1574,
	321, 1574,
	322, 1574,
	323, 1574,
	324, 1574,
	325, 1574,
	326, 1574,
	327, 1574,
	328, 1574,
	329, 1574,
	330, 1574,
	331, 1574,
	332, 1574,
	333, 1574,
	334, 1574,
	335, 1574,
	336, 1574,
	337, 1574,
	338, 1574,
	339, 1574,
	342, 1574,
	346, 1574,
	347, 1574,
	348, 1574,
	351, 1574,
	352, 1574,
	353, 1574,
	354, 1574,
	355, 1574,
	356, 1574,
	357, 1574,
	358, 1574,
	359, 1574,
	360, 1574,
	361, 1574,
	362, 1574,
	363, 1574,
	364, 1574,
	365, 1574,
	366, 1574,
	367, 1574,
	368, 1574,
	369, 1574,
	371, 1574,
	372, 1574,
	373, 1574,
	374, 1574,
	375, 1574,
	376, 1574,
	377, 1574,
	378, 1574,
	379, 1574,
	380, 1574,
	381, 1574,
	382, 1574,
	383, 1574,
	384, 1574,
	385, 1574,
	387, 1574,
	388, 1574,
	390, 1574,
	391, 1574,
	392, 1574,
	393, 1574,
	394, 1574,
	395, 1574,
	396, 1574,
	397, 1574,
	398, 1574,
	399, 1574,
	400, 1574,
	401, 1574,
	403, 1574,
	405, 1574,
	406, 1574,
	407, 1574,
	412, 1574,
	414, 1574,
	415, 1574,
	416, 1574,
	417, 1574,
	418, 1574,
	419, 1574,
	420, 1574,
	421, 1574,
	422, 1574,
	423, 1574,
	425, 1574,
	426, 1574,
	427, 1574,
	428, 1574,
	429, 1574,
	430, 1574,
	431, 1574,
	432, 1574,
	433, 1574,
	434, 1574,
	435, 1574,
	437, 1574,
	438, 1574,
	439, 1574,
	440, 1574,
	441, 1574,
	442, 1574,
	443, 1574,
	444, 1574,
	445, 1574,
	446, 1574,
	447, 1574,
	448, 1574,
	450, 1574,
	451, 1574,
	452, 1574,
	453, 1574,
	454, 1574,
	455, 1574,
	456, 1574,
	457, 1574,
	458, 1574,
	459, 1574,
	460, 1574,
	461, 1574,
	462, 1574,
	463, 1574,
	464, 1574,
	465, 1574,
	466, 1574,
	467, 1574,
	468, 1574,
	469, 1574,
	470, 1574,
	471, 1574,
	473, 1574,
	475, 1574,
	476, 1574,
	477, 1574,
	478, 1574,
	479, 1574,
	480, 1574,
	481, 1574,
	482, 1574,
	483, 1574,
	484, 1574,
	485, 1574,
	486, 1574,
	487, 1574,
	488, 1574,
	489, 1574,
	490, 1574,
	492, 1574,
	493, 1574,
	494, 1574,
	495, 1574,
	496, 1574,
	498, 1574,
	499, 1574,
	500, 1574,
	501, 1574,
	502, 1574,
	503, 1574,
	504, 1574,
	505, 1574,
	506, 1574,
	508, 1574,
	509, 1574,
	510, 1574,
	511, 1574,
	512, 1574,
	514, 1574,
	516, 1574,
	517, 1574,
	518, 1574,
	519, 1574,
	520, 1574,
	521, 1574,
	522, 1574,
	523, 1574,
	524, 1574,
	525, 1574,
	526, 1574,
	528, 1574,
	529, 1574,
	531, 1574,
	532, 1574,
	533, 1574,
	534, 1574,
	535, 1574,
	536, 1574,
	537, 1574,
	538, 1574,
	539, 1574,
	540, 1574,
	543, 1574,
	544, 1574,
	545, 1574,
	546, 1574,
	547, 1574,
	548, 1574,
	550, 1574,
	551, 1574,
	552, 1574,
	553, 1574,
	555, 1574,
	560, 1574,
	561, 1574,
	562, 1574,
	563, 1574,
	564, 1574,
	565, 1574,
	566, 1574,
	579, 1574,
	586, 1574,
	587, 1574,
	588, 1574,
	595, 1574,
	599, 1574,
	-2, 0,
	-1, 738,
	4, 1299,
	21, 1299,
	22, 1299,
	23, 1299,
	24, 1299,
	25, 1299,
	26, 1299,
	27, 1299,
	29, 1299,
	30, 1299,
	36, 1299,
	41, 1299,
	42, 1299,
	44, 1299,
	45, 1299,
	46, 1299,
	47, 1299,
	48, 1299,
	49, 1299,
	50, 1299,
	51, 1299,
	53, 1299,
	54, 1299,
	55, 1299,
	56, 1299,
	58, 1299,
	59, 1299,
	60, 1299,
	61, 1299,
	62, 1299,
	63, 1299,
	64, 1299,
	68, 1299,
	69, 1299,
	70, 1299,
	71, 1299,
	73, 1299,
	74, 1299,
	75, 1299,
	79, 1299,
	80, 1299,
	81, 1299,
	82, 1299,
	83, 1299,
	84, 1299,
	85, 1299,
	88, 1299,
	89, 1299,
	90, 1299,
	91, 1299,
	92, 1299,
	94, 1299,
	96, 1299,
	97, 1299,
	98, 1299,
	99, 1299,
	100, 1299,
	101, 1299,
	103, 1299,
	104, 1299,
	105, 1299,
	107, 1299,
	108, 1299,
	109, 1299,
	117, 1299,
	118, 1299,
	119, 1299,
	120, 1299,
	121, 1299,
	123, 1299,
	124, 1299,
	125, 1299,
	127, 1299,
	128, 1299,
	129, 1299,
	131, 1299,
	132, 1299,
	133, 1299,
	135, 1299,
	136, 1299,
	137, 1299,
	140, 1299,
	141, 1299,
	142, 1299,
	144, 1299,
	145, 1299,
	147, 1299,
	148, 1299,
	149, 1299,
	151, 1299,
	152, 1299,
	153, 1299,
	154, 1299,
	155, 1299,
	156, 1299,
	157, 1299,
	158, 1299,
	159, 1299,
	160, 1299,
	161, 1299,
	162, 1299,
	163, 1299,
	164, 1299,
	165, 1299,
	166, 1299,
	168, 1299,
	174, 1299,
	175, 1299,
	176, 1299,
	177, 1299,
	181, 1299,
	183, 1299,
	184, 1299,
	188, 1299,
	189, 1299,
	190, 1299,
	191, 1299,
	192, 1299,
	193, 1299,
	194, 1299,
	195, 1299,
	196, 1299,
	197, 1299,
	198, 1299,
	199, 1299,
	200, 1299,
	201, 1299,
	203, 1299,
	204, 1299,
	206, 1299,
	207, 1299,
	209, 1299,
	210, 1299,
	211, 1299,
	212, 1299,
	213, 1299,
	214, 1299,
	215, 1299,
	216, 1299,
	217, 1299,
	219, 1299,
	220, 1299,
	222, 1299,
	223, 1299,
	224, 1299,
	225, 1299,
	226, 1299,
	230, 1299,
	231, 1299,
	232, 1299,
	233, 1299,
	234, 1299,
	237, 1299,
	238, 1299,
	239, 1299,
	241, 1299,
	243, 1299,
	244, 1299,
	246, 1299,
	248, 1299,
	249, 1299,
	250, 1299,
	252, 1299,
	256, 1299,
	257, 1299,
	258, 1299,
	259, 1299,
	260, 1299,
	261, 1299,
	263, 1299,
	264, 1299,
	265, 1299,
	267, 1299,
	268, 1299,
	270, 1299,
	271, 1299,
	274, 1299,
	278, 1299,
	279, 1299,
	280, 1299,
	283, 1299,
	284, 1299,
	285, 1299,
	286, 1299,
	288, 1299,
	289, 1299,
	290, 1299,
	291, 1299,
	292, 1299,
	293, 1299,
	294, 1299,
	295, 1299,
	296, 1299,
	297, 1299,
	298, 1299,
	299, 1299,
	300, 1299,
	301, 1299,
	302, 1299,
	303, 1299,
	304, 1299,
	305, 1299,
	306, 1299,
	307, 1299,
	308, 1299,
	309, 1299,
	311, 1299,
	313, 1299,
	314, 1299,
	315, 1299,
	316, 1299,
	317, 1299,
	318, 1299,
	319, 1299,
	320, 1299,
	321, 1299,
	322, 1299,
	323, 1299,
	324, 1299,
	325, 1299,
	327, 1299,
	328, 1299,
	330, 1299,
	332, 1299,
	333, 1299,
	335, 1299,
	336, 1299,
	337, 1299,
	338, 1299,
	339, 1299,
	342, 1299,
	346, 1299,
	347, 1299,
	348, 1299,
	351, 1299,
	352, 1299,
	353, 1299,
	355, 1299,
	357, 1299,
	358, 1299,
	359, 1299,
	360, 1299,
	361, 1299,
	362, 1299,
	363, 1299,
	364, 1299,
	365, 1299,
	366, 1299,
	367, 1299,
	368, 1299,
	369, 1299,
	371, 1299,
	372, 1299,
	373, 1299,
	374, 1299,
	375, 1299,
	376, 1299,
	377, 1299,
	378, 1299,
	379, 1299,
	380, 1299,
	381, 1299,
	382, 1299,
	383, 1299,
	384, 1299,
	385, 1299,
	387, 1299,
	388, 1299,
	390, 1299,
	391, 1299,
	392, 1299,
	393, 1299,
	394, 1299,
	395, 1299,
	396, 1299,
	397, 1299,
	398, 1299,
	399, 1299,
	400, 1299,
	401, 1299,
	403, 1299,
	405, 1299,
	406, 1299,
	407, 1299,
	412, 1299,
	414, 1299,
	415, 1299,
	416, 1299,
	417, 1299,
	418, 1299,
	419, 1299,
	420, 1299,
	421, 1299,
	422, 1299,
	423, 1299,
	425, 1299,
	426, 1299,
	427, 1299,
	429, 1299,
	430, 1299,
	431, 1299,
	432, 1299,
	433, 1299,
	434, 1299,
	435, 1299,
	437, 1299,
	438, 1299,
	439, 1299,
	440, 1299,
	441, 1299,
	442, 1299,
	443, 1299,
	444, 1299,
	445, 1299,
	446, 1299,
	447, 1299,
	448, 1299,
	450, 1299,
	451, 1299,
	452, 1299,
	453, 1299,
	454, 1299,
	455, 1299,
	457, 1299,
	458, 1299,
	459, 1299,
	460, 1299,
	461, 1299,
	462, 1299,
	464, 1299,
	465, 1299,
	466, 1299,
	467, 1299,
	468, 1299,
	469, 1299,
	470, 1299,
	471, 1299,
	473, 1299,
	475, 1299,
	476, 1299,
	477, 1299,
	478, 1299,
	479, 1299,
	480, 1299,
	481, 1299,
	482, 1299,
	483, 1299,
	484, 1299,
	485, 1299,
	486, 1299,
	487, 1299,
	488, 1299,
	489, 1299,
	490, 1299,
	492, 1299,
	493, 1299,
	495, 1299,
	496, 1299,
	498, 1299,
	499, 1299,
	500, 1299,
	501, 1299,
	502, 1299,
	503, 1299,
	504, 1299,
	505, 1299,
	506, 1299,
	508, 1299,
	509, 1299,
	510, 1299,
	511, 1299,
	512, 1299,
	514, 1299,
	516, 1299,
	517, 1299,
	518, 1299,
	519, 1299,
	520, 1299,
	521, 1299,
	523, 1299,
	524, 1299,
	525, 1299,
	526, 1299,
	528, 1299,
	529, 1299,
	532, 1299,
	533, 1299,
	534, 1299,
	535, 1299,
	536, 1299,
	537, 1299,
	538, 1299,
	540, 1299,
	543, 1299,
	544, 1299,
	545, 1299,
	546, 1299,
	547, 1299,
	548, 1299,
	550, 1299,
	551, 1299,
	552, 1299,
	553, 1299,
	555, 1299,
	560, 1299,
	561, 1299,
	562, 1299,
	563, 1299,
	564, 1299,
	565, 1299,
	-2, 0,
	-1, 757,
	186, 2362,
	513, 2362,
	578, 2362,
	597, 2362,
	-2, 0,
	-1, 758,
	186, 2469,
	513, 2469,
	578, 2469,
	597, 2469,
	-2, 0,
	-1, 759,
	186, 2349,
	513, 2349,
	578, 2349,
	597, 2349,
	-2, 0,
	-1, 761,
	186, 2605,
	513, 2605,
	578, 2605,
	597, 2605,
	-2, 0,
	-1, 763,
	186, 2646,
	513, 2646,
	578, 2646,
	597, 2646,
	-2, 0,
	-1, 772,
	186, 2496,
	513, 2496,
	578, 2496,
	597, 2496,
	-2, 696,
	-1, 807,
	597, 2298,
	600, 2298,
	-2, 988,
	-1, 808,
	597, 2300,
	600, 2300,
	-2, 989,
	-1, 809,
	597, 2299,
	600, 2299,
	-2, 990,
	-1, 810,
	600, 2224,
	-2, 991,
	-1, 833,
	182, 258,
	-2, 0,
	-1, 857,
	43, 2271,
	-2, 0,
	-1, 858,
	550, 1277,
	-2, 1058,
	-1, 874,
	4, 1704,
	21, 1704,
	22, 1704,
	23, 1704,
	24, 1704,
	25, 1704,
	26, 1704,
	27, 1704,
	29, 1704,
	30, 1704,
	36, 1704,
	41, 1704,
	42, 1704,
	44, 1704,
	45, 1704,
	46, 1704,
	47, 1704,
	48, 1704,
	49, 1704,
	50, 1704,
	51, 1704,
	53, 1704,
	54, 1704,
	55, 1704,
	56, 1704,
	58, 1704,
	59, 1704,
	60, 1704,
	61, 1704,
	62, 1704,
	63, 1704,
	64, 1704,
	68, 1704,
	69, 1704,
	70, 1704,
	71, 1704,
	73, 1704,
	74, 1704,
	75, 1704,
	79, 1704,
	80, 1704,
	81, 1704,
	82, 1704,
	83, 1704,
	84, 1704,
	85, 1704,
	88, 1704,
	89, 1704,
	90, 1704,
	91, 1704,
	92, 1704,
	94, 1704,
	96, 1704,
	97, 1704,
	98, 1704,
	99, 1704,
	100, 1704,
	101, 1704,
	103, 1704,
	104, 1704,
	105, 1704,
	107, 1704,
	108, 1704,
	109, 1704,
	117, 1704,
	118, 1704,
	119, 1704,
	120, 1704,
	121, 1704,
	123, 1704,
	124, 1704,
	125, 1704,
	127, 1704,
	128, 1704,
	129, 1704,
	131, 1704,
	132, 1704,
	133, 1704,
	135, 1704,
	136, 1704,
	137, 1704,
	140, 1704,
	141, 1704,
	142, 1704,
	144, 1704,
	145, 1704,
	147, 1704,
	148, 1704,
	149, 1704,
	151, 1704,
	152, 1704,
	153, 1704,
	154, 1704,
	155, 1704,
	156, 1704,
	157, 1704,
	158, 1704,
	159, 1704,
	160, 1704,
	161, 1704,
	162, 1704,
	163, 1704,
	164, 1704,
	165, 1704,
	166, 1704,
	168, 1704,
	174, 1704,
	175, 1704,
	176, 1704,
	177, 1704,
	181, 1704,
	183, 1704,
	184, 1704,
	188, 1704,
	189, 1704,
	190, 1704,
	191, 1704,
	192, 1704,
	193, 1704,
	194, 1704,
	195, 1704,
	196, 1704,
	197, 1704,
	198, 1704,
	199, 1704,
	200, 1704,
	201, 1704,
	203, 1704,
	204, 1704,
	206, 1704,
	207, 1704,
	209, 1704,
	210, 1704,
	211, 1704,
	212, 1704,
	213, 1704,
	214, 1704,
	215, 1704,
	216, 1704,
	217, 1704,
	219, 1704,
	220, 1704,
	222, 1704,
	223, 1704,
	224, 1704,
	225, 1704,
	226, 1704,
	230, 1704,
	231, 1704,
	232, 1704,
	233, 1704,
	234, 1704,
	237, 1704,
	238, 1704,
	239, 1704,
	241, 1704,
	243, 1704,
	244, 1704,
	246, 1704,
	248, 1704,
	249, 1704,
	250, 1704,
	252, 1704,
	256, 1704,
	257, 1704,
	258, 1704,
	259, 1704,
	260, 1704,
	261, 1704,
	263, 1704,
	264, 1704,
	265, 1704,
	267, 1704,
	268, 1704,
	270, 1704,
	271, 1704,
	274, 1704,
	278, 1704,
	279, 1704,
	280, 1704,
	283, 1704,
	284, 1704,
	285, 1704,
	286, 1704,
	288, 1704,
	289, 1704,
	290, 1704,
	291, 1704,
	292, 1704,
	293, 1704,
	294, 1704,
	295, 1704,
	296, 1704,
	297, 1704,
	298, 1704,
	299, 1704,
	300, 1704,
	301, 1704,
	302, 1704,
	303, 1704,
	304, 1704,
	305, 1704,
	306, 1704,
	307, 1704,
	308, 1704,
	309, 1704,
	311, 1704,
	313, 1704,
	314, 1704,
	315, 1704,
	316, 1704,
	317, 1704,
	318, 1704,
	319, 1704,
	320, 1704,
	321, 1704,
	322, 1704,
	323, 1704,
	324, 1704,
	325, 1704,
	327, 1704,
	328, 1704,
	330, 1704,
	332, 1704,
	333, 1704,
	335, 1704,
	336, 1704,
	337, 1704,
	338, 1704,
	339, 1704,
	342, 1704,
	346, 1704,
	347, 1704,
	348, 1704,
	351, 1704,
	352, 1704,
	353, 1704,
	355, 1704,
	357, 1704,
	358, 1704,
	359, 1704,
	360, 1704,
	361, 1704,
	362, 1704,
	363, 1704,
	364, 1704,
	365, 1704,
	366, 1704,
	367, 1704,
	368, 1704,
	369, 1704,
	371, 1704,
	372, 1704,
	373, 1704,
	374, 1704,
	375, 1704,
	376, 1704,
	377, 1704,
	378, 1704,
	379, 1704,
	380, 1704,
	381, 1704,
	382, 1704,
	383, 1704,
	384, 1704,
	385, 1704,
	387, 1704,
	388, 1704,
	390, 1704,
	391, 1704,
	392, 1704,
	393, 1704,
	394, 1704,
	395, 1704,
	396, 1704,
	397, 1704,
	398, 1704,
	399, 1704,
	400, 1704,
	401, 1704,
	403, 1704,
	405, 1704,
	406, 1704,
	407, 1704,
	412, 1704,
	414, 1704,
	415, 1704,
	416, 1704,
	417, 1704,
	418, 1704,
	419, 1704,
	420, 1704,
	421, 1704,
	422, 1704,
	423, 1704,
	425, 1704,
	426, 1704,
	427, 1704,
	429, 1704,
	430, 1704,
	431, 1704,
	432, 1704,
	433, 1704,
	434, 1704,
	435, 1704,
	437, 1704,
	438, 1704,
	439, 1704,
	440, 1704,
	441, 1704,
	442, 1704,
	443, 1704,
	444, 1704,
	445, 1704,
	446, 1704,
	447, 1704,
	448, 1704,
	450, 1704,
	451, 1704,
	452, 1704,
	453, 1704,
	454, 1704,
	455, 1704,
	457, 1704,
	458, 1704,
	459, 1704,
	460, 1704,
	461, 1704,
	462, 1704,
	464, 1704,
	465, 1704,
	466, 1704,
	467, 1704,
	468, 1704,
	469, 1704,
	470, 1704,
	471, 1704,
	473, 1704,
	475, 1704,
	476, 1704,
	477, 1704,
	478, 1704,
	479, 1704,
	480, 1704,
	481, 1704,
	482, 1704,
	483, 1704,
	484, 1704,
	485, 1704,
	486, 1704,
	487, 1704,
	488, 1704,
	489, 1704,
	490, 1704,
	492, 1704,
	493, 1704,
	495, 1704,
	496, 1704,
	498, 1704,
	499, 1704,
	500, 1704,
	501, 1704,
	502, 1704,
	503, 1704,
	504, 1704,
	505, 1704,
	506, 1704,
	508, 1704,
	509, 1704,
	510, 1704,
	511, 1704,
	512, 1704,
	514, 1704,
	516, 1704,
	517, 1704,
	518, 1704,
	519, 1704,
	520, 1704,
	521, 1704,
	523, 1704,
	524, 1704,
	525, 1704,
	526, 1704,
	528, 1704,
	529, 1704,
	532, 1704,
	533, 1704,
	534, 1704,
	535, 1704,
	536, 1704,
	537, 1704,
	538, 1704,
	540, 1704,
	543, 1704,
	544, 1704,
	545, 1704,
	546, 1704,
	547, 1704,
	548, 1704,
	550, 1704,
	551, 1704,
	552, 1704,
	553, 1704,
	555, 1704,
	560, 1704,
	561, 1704,
	562, 1704,
	563, 1704,
	564, 1704,
	565, 1704,
	-2, 0,
	-1, 884,
	260, 406,
	-2, 0,
	-1, 956,
	392, 871,
	455, 871,
	496, 871,
	518, 871,
	-2, 0,
	-1, 957,
	392, 870,
	455, 870,
	496, 870,
	518, 870,
	-2, 806,
	-1, 961,
	1, 922,
	594, 922,
	596, 922,
	598, 922,
	-2, 0,
	-1, 963,
	1, 845,
	594, 845,
	596, 845,
	598, 845,
	-2, 0,
	-1, 964,
	1, 849,
	594, 849,
	596, 849,
	598, 849,
	-2, 0,
	-1, 965,
	1, 987,
	182, 987,
	594, 987,
	596, 987,
	598, 987,
	-2, 0,
	-1, 973,
	1, 876,
	594, 876,
	596, 876,
	598, 876,
	-2, 0,
	-1, 980,
	1, 922,
	594, 922,
	596, 922,
	598, 922,
	-2, 0,
	-1, 981,
	1, 924,
	594, 924,
	596, 924,
	598, 924,
	-2, 0,
	-1, 982,
	1, 927,
	594, 927,
	596, 927,
	598, 927,
	-2, 0,
	-1, 988,
	1, 951,
	594, 951,
	596, 951,
	598, 951,
	-2, 0,
	-1, 989,
	1, 953,
	594, 953,
	596, 953,
	598, 953,
	-2, 0,
	-1, 994,
	1, 981,
	594, 981,
	596, 981,
	598, 981,
	-2, 0,
	-1, 1044,
	169, 1578,
	182, 1578,
	273, 1578,
	340, 1578,
	-2, 1514,
	-1, 1059,
	169, 1577,
	182, 1577,
	273, 1577,
	340, 1577,
	-2, 1511,
	-1, 1086,
	597, 2297,
	-2, 704,
	-1, 1115,
	5, 2289,
	595, 2287,
	-2, 2278,
	-1, 1123,
	5, 2310,
	595, 2307,
	-2, 2298,
	-1, 1124,
	5, 2311,
	595, 2308,
	-2, 2299,
	-1, 1132,
	597, 2295,
	-2, 2277,
	-1, 1133,
	595, 2729,
	-2, 2296,
	-1, 1156,
	595, 2728,
	-2, 2312,
	-1, 1157,
	5, 1779,
	-2, 2699,
	-1, 1158,
	5, 1780,
	-2, 2700,
	-1, 1159,
	5, 1781,
	-2, 2714,
	-1, 1160,
	5, 1782,
	-2, 2678,
	-1, 1161,
	5, 1783,
	-2, 2712,
	-1, 1162,
	5, 1791,
	-2, 2691,
	-1, 1163,
	5, 1778,
	-2, 2687,
	-1, 1164,
	5, 1778,
	-2, 2686,
	-1, 1165,
	5, 1778,
	-2, 2705,
	-1, 1166,
	5, 1789,
	-2, 2680,
	-1, 1167,
	5, 1794,
	-2, 2679,
	-1, 1168,
	5, 1796,
	-2, 2724,
	-1, 1171,
	5, 1818,
	-2, 2717,
	-1, 1172,
	5, 1810,
	-2, 2718,
	-1, 1173,
	5, 1818,
	-2, 2719,
	-1, 1174,
	5, 1814,
	-2, 2720,
	-1, 1175,
	5, 1764,
	-2, 2692,
	-1, 1176,
	5, 1765,
	-2, 2693,
	-1, 1177,
	5, 1766,
	-2, 2681,
	-1, 1205,
	5, 1801,
	-2, 2725,
	-1, 1206,
	5, 1802,
	-2, 2715,
	-1, 1207,
	5, 1803,
	551, 1803,
	-2, 2682,
	-1, 1208,
	5, 1804,
	551, 1804,
	-2, 2683,
	-1, 1245,
	595, 2307,
	-2, 2298,
	-1, 1246,
	595, 2308,
	-2, 2299,
	-1, 1347,
	186, 2646,
	513, 2646,
	578, 2646,
	597, 2646,
	-2, 0,
	-1, 1350,
	1, 680,
	598, 680,
	-2, 1426,
	-1, 1479,
	359, 2272,
	414, 2272,
	457, 2272,
	588, 2272,
	-2, 2262,
	-1, 1490,
	599, 2272,
	-2, 2274,
	-1, 1498,
	1, 1274,
	419, 1238,
	457, 1238,
	572, 1238,
	594, 1274,
	596, 1274,
	598, 1274,
	-2, 1563,
	-1, 1504,
	202, 1371,
	221, 1371,
	427, 1371,
	-2, 0,
	-1, 1549,
	399, 1057,
	550, 1057,
	-2, 401,
	-1, 1566,
	43, 2270,
	-2, 1023,
	-1, 1573,
	1, 1274,
	594, 1274,
	596, 1274,
	598, 1274,
	-2, 1563,
	-1, 1581,
	4, 1299,
	21, 1299,
	22, 1299,
	23, 1299,
	24, 1299,
	25, 1299,
	26, 1299,
	27, 1299,
	29, 1299,
	30, 1299,
	36, 1299,
	41, 1299,
	42, 1299,
	44, 1299,
	45, 1299,
	46, 1299,
	47, 1299,
	48, 1299,
	49, 1299,
	50, 1299,
	51, 1299,
	53, 1299,
	54, 1299,
	55, 1299,
	56, 1299,
	58, 1299,
	59, 1299,
	60, 1299,
	61, 1299,
	62, 1299,
	63, 1299,
	64, 1299,
	68, 1299,
	69, 1299,
	70, 1299,
	71, 1299,
	73, 1299,
	74, 1299,
	75, 1299,
	79, 1299,
	80, 1299,
	81, 1299,
	82, 1299,
	83, 1299,
	84, 1299,
	85, 1299,
	88, 1299,
	89, 1299,
	90, 1299,
	91, 1299,
	92, 1299,
	94, 1299,
	96, 1299,
	97, 1299,
	98, 1299,
	99, 1299,
	100, 1299,
	101, 1299,
	103, 1299,
	104, 1299,
	105, 1299,
	107, 1299,
	108, 1299,
	109, 1299,
	117, 1299,
	118, 1299,
	119, 1299,
	120, 1299,
	121, 1299,
	123, 1299,
	124, 1299,
	125, 1299,
	127, 1299,
	128, 1299,
	129, 1299,
	131, 1299,
	132, 1299,
	133, 1299,
	135, 1299,
	136, 1299,
	137, 1299,
	140, 1299,
	141, 1299,
	142, 1299,
	144, 1299,
	145, 1299,
	147, 1299,
	148, 1299,
	149, 1299,
	151, 1299,
	152, 1299,
	153, 1299,
	154, 1299,
	155, 1299,
	156, 1299,
	157, 1299,
	158, 1299,
	159, 1299,
	160, 1299,
	161, 1299,
	162, 1299,
	163, 1299,
	164, 1299,
	165, 1299,
	166, 1299,
	174, 1299,
	175, 1299,
	176, 1299,
	177, 1299,
	181, 1299,
	183, 1299,
	184, 1299,
	188, 1299,
	189, 1299,
	190, 1299,
	191, 1299,
	192, 1299,
	193, 1299,
	194, 1299,
	195, 1299,
	196, 1299,
	197, 1299,
	198, 1299,
	199, 1299,
	200, 1299,
	201, 1299,
	203, 1299,
	204, 1299,
	206, 1299,
	207, 1299,
	209, 1299,
	210, 1299,
	211, 1299,
	212, 1299,
	213, 1299,
	214, 1299,
	215, 1299,
	216, 1299,
	217, 1299,
	219, 1299,
	220, 1299,
	222, 1299,
	223, 1299,
	224, 1299,
	225, 1299,
	226, 1299,
	231, 1299,
	232, 1299,
	233, 1299,
	234, 1299,
	237, 1299,
	238, 1299,
	239, 1299,
	241, 1299,
	243, 1299,
	244, 1299,
	246, 1299,
	248, 1299,
	249, 1299,
	250, 1299,
	252, 1299,
	256, 1299,
	257, 1299,
	258, 1299,
	259, 1299,
	260, 1299,
	261, 1299,
	263, 1299,
	264, 1299,
	265, 1299,
	267, 1299,
	268, 1299,
	270, 1299,
	271, 1299,
	274, 1299,
	278, 1299,
	279, 1299,
	280, 1299,
	283, 1299,
	284, 1299,
	285, 1299,
	286, 1299,
	288, 1299,
	289, 1299,
	290, 1299,
	291, 1299,
	292, 1299,
	293, 1299,
	294, 1299,
	295, 1299,
	296, 1299,
	297, 1299,
	298, 1299,
	299, 1299,
	300, 1299,
	301, 1299,
	302, 1299,
	303, 1299,
	304, 1299,
	305, 1299,
	306, 1299,
	307, 1299,
	308, 1299,
	309, 1299,
	311, 1299,
	313, 1299,
	314, 1299,
	315, 1299,
	316, 1299,
	317, 1299,
	318, 1299,
	319, 1299,
	320, 1299,
	321, 1299,
	322, 1299,
	323, 1299,
	324, 1299,
	325, 1299,
	327, 1299,
	328, 1299,
	332, 1299,
	333, 1299,
	335, 1299,
	336, 1299,
	337, 1299,
	338, 1299,
	339, 1299,
	342, 1299,
	344, 1299,
	346, 1299,
	347, 1299,
	348, 1299,
	351, 1299,
	352, 1299,
	353, 1299,
	355, 1299,
	357, 1299,
	358, 1299,
	359, 1299,
	360, 1299,
	361, 1299,
	362, 1299,
	363, 1299,
	364, 1299,
	365, 1299,
	366, 1299,
	367, 1299,
	368, 1299,
	369, 1299,
	371, 1299,
	372, 1299,
	373, 1299,
	374, 1299,
	375, 1299,
	376, 1299,
	377, 1299,
	378, 1299,
	379, 1299,
	380, 1299,
	381, 1299,
	382, 1299,
	383, 1299,
	384, 1299,
	385, 1299,
	387, 1299,
	388, 1299,
	390, 1299,
	391, 1299,
	392, 1299,
	393, 1299,
	394, 1299,
	395, 1299,
	396, 1299,
	397, 1299,
	398, 1299,
	399, 1299,
	400, 1299,
	401, 1299,
	403, 1299,
	405, 1299,
	406, 1299,
	407, 1299,
	412, 1299,
	414, 1299,
	415, 1299,
	416, 1299,
	417, 1299,
	418, 1299,
	419, 1299,
	420, 1299,
	421, 1299,
	422, 1299,
	423, 1299,
	425, 1299,
	426, 1299,
	427, 1299,
	429, 1299,
	430, 1299,
	431, 1299,
	432, 1299,
	433, 1299,
	434, 1299,
	435, 1299,
	437, 1299,
	438, 1299,
	439, 1299,
	440, 1299,
	441, 1299,
	442, 1299,
	443, 1299,
	444, 1299,
	445, 1299,
	446, 1299,
	447, 1299,
	448, 1299,
	450, 1299,
	451, 1299,
	452, 1299,
	453, 1299,
	454, 1299,
	455, 1299,
	457, 1299,
	458, 1299,
	459, 1299,
	460, 1299,
	461, 1299,
	462, 1299,
	464, 1299,
	465, 1299,
	466, 1299,
	467, 1299,
	468, 1299,
	469, 1299,
	470, 1299,
	471, 1299,
	473, 1299,
	475, 1299,
	476, 1299,
	477, 1299,
	478, 1299,
	479, 1299,
	480, 1299,
	481, 1299,
	482, 1299,
	483, 1299,
	484, 1299,
	485, 1299,
	486, 1299,
	487, 1299,
	488, 1299,
	489, 1299,
	490, 1299,
	492, 1299,
	493, 1299,
	495, 1299,
	496, 1299,
	498, 1299,
	499, 1299,
	500, 1299,
	501, 1299,
	502, 1299,
	503, 1299,
	504, 1299,
	505, 1299,
	506, 1299,
	508, 1299,
	509, 1299,
	510, 1299,
	511, 1299,
	512, 1299,
	514, 1299,
	516, 1299,
	517, 1299,
	518, 1299,
	519, 1299,
	520, 1299,
	521, 1299,
	523, 1299,
	524, 1299,
	525, 1299,
	526, 1299,
	528, 1299,
	529, 1299,
	532, 1299,
	533, 1299,
	534, 1299,
	535, 1299,
	536, 1299,
	537, 1299,
	538, 1299,
	540, 1299,
	543, 1299,
	544, 1299,
	545, 1299,
	546, 1299,
	547, 1299,
	548, 1299,
	550, 1299,
	551, 1299,
	552, 1299,
	553, 1299,
	555, 1299,
	560, 1299,
	561, 1299,
	562, 1299,
	563, 1299,
	564, 1299,
	565, 1299,
	-2, 0,
	-1, 1604,
	1, 546,
	594, 546,
	596, 546,
	598, 546,
	-2, 1534,
	-1, 1607,
	4, 2723,
	11, 2723,
	12, 2723,
	14, 2723,
	15, 2723,
	16, 2723,
	17, 2723,
	18, 2723,
	19, 2723,
	21, 2723,
	22, 2723,
	23, 2723,
	24, 2723,
	25, 2723,
	26, 2723,
	27, 2723,
	29, 2723,
	30, 2723,
	33, 2723,
	34, 2723,
	36, 2723,
	38, 2723,
	41, 2723,
	42, 2723,
	44, 2723,
	45, 2723,
	46, 2723,
	47, 2723,
	48, 2723,
	49, 2723,
	50, 2723,
	51, 2723,
	53, 2723,
	54, 2723,
	55, 2723,
	56, 2723,
	58, 2723,
	59, 2723,
	60, 2723,
	61, 2723,
	62, 2723,
	63, 2723,
	64, 2723,
	67, 2723,
	68, 2723,
	69, 2723,
	70, 2723,
	71, 2723,
	73, 2723,
	74, 2723,
	75, 2723,
	76, 2723,
	79, 2723,
	80, 2723,
	81, 2723,
	82, 2723,
	83, 2723,
	84, 2723,
	85, 2723,
	86, 2723,
	88, 2723,
	89, 2723,
	90, 2723,
	91, 2723,
	92, 2723,
	94, 2723,
	95, 2723,
	96, 2723,
	97, 2723,
	98, 2723,
	99, 2723,
	100, 2723,
	101, 2723,
	103, 2723,
	104, 2723,
	105, 2723,
	106, 2723,
	107, 2723,
	108, 2723,
	109, 2723,
	117, 2723,
	118, 2723,
	119, 2723,
	120, 2723,
	121, 2723,
	123, 2723,
	124, 2723,
	125, 2723,
	127, 2723,
	128, 2723,
	129, 2723,
	131, 2723,
	132, 2723,
	133, 2723,
	135, 2723,
	136, 2723,
	137, 2723,
	140, 2723,
	141, 2723,
	142, 2723,
	144, 2723,
	145, 2723,
	147, 2723,
	148, 2723,
	149, 2723,
	151, 2723,
	152, 2723,
	153, 2723,
	154, 2723,
	155, 2723,
	156, 2723,
	157, 2723,
	158, 2723,
	159, 2723,
	160, 2723,
	161, 2723,
	162, 2723,
	163, 2723,
	164, 2723,
	165, 2723,
	166, 2723,
	170, 2723,
	171, 2723,
	172, 2723,
	173, 2723,
	174, 2723,
	175, 2723,
	176, 2723,
	177, 2723,
	180, 2723,
	181, 2723,
	183, 2723,
	184, 2723,
	187, 2723,
	188, 2723,
	189, 2723,
	190, 2723,
	191, 2723,
	192, 2723,
	193, 2723,
	194, 2723,
	195, 2723,
	196, 2723,
	197, 2723,
	198, 2723,
	199, 2723,
	200, 2723,
	201, 2723,
	203, 2723,
	204, 2723,
	206, 2723,
	207, 2723,
	209, 2723,
	210, 2723,
	211, 2723,
	212, 2723,
	213, 2723,
	214, 2723,
	215, 2723,
	216, 2723,
	217, 2723,
	218, 2723,
	219, 2723,
	220, 2723,
	221, 2723,
	222, 2723,
	223, 2723,
	224, 2723,
	225, 2723,
	226, 2723,
	228, 2723,
	229, 2723,
	231, 2723,
	232, 2723,
	233, 2723,
	234, 2723,
	236, 2723,
	237, 2723,
	238, 2723,
	239, 2723,
	241, 2723,
	243, 2723,
	244, 2723,
	245, 2723,
	246, 2723,
	247, 2723,
	248, 2723,
	249, 2723,
	250, 2723,
	251, 2723,
	252, 2723,
	254, 2723,
	255, 2723,
	256, 2723,
	257, 2723,
	258, 2723,
	259, 2723,
	260, 2723,
	261, 2723,
	263, 2723,
	264, 2723,
	265, 2723,
	267, 2723,
	268, 2723,
	269, 2723,
	270, 2723,
	271, 2723,
	272, 2723,
	274, 2723,
	278, 2723,
	279, 2723,
	280, 2723,
	283, 2723,
	284, 2723,
	285, 2723,
	286, 2723,
	287, 2723,
	288, 2723,
	289, 2723,
	290, 2723,
	291, 2723,
	292, 2723,
	293, 2723,
	294, 2723,
	295, 2723,
	296, 2723,
	297, 2723,
	298, 2723,
	299, 2723,
	300, 2723,
	301, 2723,
	302, 2723,
	303, 2723,
	304, 2723,
	305, 2723,
	306, 2723,
	307, 2723,
	308, 2723,
	309, 2723,
	311, 2723,
	312, 2723,
	313, 2723,
	314, 2723,
	315, 2723,
	316, 2723,
	317, 2723,
	318, 2723,
	319, 2723,
	320, 2723,
	321, 2723,
	322, 2723,
	323, 2723,
	324, 2723,
	325, 2723,
	327, 2723,
	328, 2723,
	331, 2723,
	332, 2723,
	333, 2723,
	335, 2723,
	336, 2723,
	337, 2723,
	338, 2723,
	339, 2723,
	342, 2723,
	346, 2723,
	347, 2723,
	348, 2723,
	349, 2723,
	351, 2723,
	352, 2723,
	353, 2723,
	355, 2723,
	357, 2723,
	358, 2723,
	359, 2723,
	360, 2723,
	361, 2723,
	362, 2723,
	363, 2723,
	364, 2723,
	365, 2723,
	366, 2723,
	367, 2723,
	368, 2723,
	369, 2723,
	371, 2723,
	372, 2723,
	373, 2723,
	374, 2723,
	375, 2723,
	376, 2723,
	377, 2723,
	378, 2723,
	379, 2723,
	380, 2723,
	381, 2723,
	382, 2723,
	383, 2723,
	384, 2723,
	385, 2723,
	387, 2723,
	388, 2723,
	390, 2723,
	391, 2723,
	392, 2723,
	393, 2723,
	394, 2723,
	395, 2723,
	396, 2723,
	397, 2723,
	398, 2723,
	399, 2723,
	400, 2723,
	401, 2723,
	403, 2723,
	405, 2723,
	406, 2723,
	407, 2723,
	412, 2723,
	413, 2723,
	414, 2723,
	415, 2723,
	416, 2723,
	417, 2723,
	418, 2723,
	419, 2723,
	420, 2723,
	421, 2723,
	422, 2723,
	423, 2723,
	425, 2723,
	426, 2723,
	427, 2723,
	428, 2723,
	429, 2723,
	430, 2723,
	431, 2723,
	432, 2723,
	433, 2723,
	434, 2723,
	435, 2723,
	436, 2723,
	437, 2723,
	438, 2723,
	439, 2723,
	440, 2723,
	441, 2723,
	442, 2723,
	443, 2723,
	444, 2723,
	445, 2723,
	446, 2723,
	447, 2723,
	448, 2723,
	450, 2723,
	451, 2723,
	452, 2723,
	453, 2723,
	454, 2723,
	455, 2723,
	457, 2723,
	458, 2723,
	459, 2723,
	460, 2723,
	461, 2723,
	462, 2723,
	463, 2723,
	464, 2723,
	465, 2723,
	466, 2723,
	467, 2723,
	468, 2723,
	469, 2723,
	470, 2723,
	471, 2723,
	473, 2723,
	475, 2723,
	476, 2723,
	477, 2723,
	478, 2723,
	479, 2723,
	480, 2723,
	481, 2723,
	482, 2723,
	483, 2723,
	484, 2723,
	485, 2723,
	486, 2723,
	487, 2723,
	488, 2723,
	489, 2723,
	490, 2723,
	492, 2723,
	493, 2723,
	494, 2723,
	495, 2723,
	496, 2723,
	498, 2723,
	499, 2723,
	500, 2723,
	501, 2723,
	502, 2723,
	503, 2723,
	504, 2723,
	505, 2723,
	506, 2723,
	508, 2723,
	509, 2723,
	510, 2723,
	511, 2723,
	512, 2723,
	514, 2723,
	516, 2723,
	517, 2723,
	518, 2723,
	519, 2723,
	520, 2723,
	521, 2723,
	523, 2723,
	524, 2723,
	525, 2723,
	526, 2723,
	528, 2723,
	529, 2723,
	532, 2723,
	533, 2723,
	534, 2723,
	535, 2723,
	536, 2723,
	537, 2723,
	538, 2723,
	540, 2723,
	543, 2723,
	544, 2723,
	545, 2723,
	546, 2723,
	547, 2723,
	548, 2723,
	550, 2723,
	551, 2723,
	552, 2723,
	553, 2723,
	555, 2723,
	560, 2723,
	561, 2723,
	562, 2723,
	563, 2723,
	564, 2723,
	565, 2723,
	566, 2723,
	568, 2723,
	576, 2723,
	577, 2723,
	578, 2723,
	579, 2723,
	580, 2723,
	581, 2723,
	583, 2723,
	584, 2723,
	585, 2723,
	586, 2723,
	587, 2723,
	588, 2723,
	589, 2723,
	590, 2723,
	591, 2723,
	593, 2723,
	596, 2723,
	597, 2723,
	599, 2723,
	600, 2723,
	-2, 0,
	-1, 1612,
	186, 2605,
	513, 2605,
	578, 2605,
	597, 2605,
	-2, 0,
	-1, 1661,
	392, 871,
	455, 871,
	496, 871,
	518, 871,
	-2, 0,
	-1, 1672,
	1, 1371,
	594, 1371,
	596, 1371,
	598, 1371,
	-2, 0,
	-1, 1689,
	1, 866,
	594, 866,
	596, 866,
	598, 866,
	-2, 0,
	-1, 1690,
	1, 909,
	594, 909,
	596, 909,
	598, 909,
	-2, 0,
	-1, 1691,
	1, 917,
	594, 917,
	596, 917,
	598, 917,
	-2, 0,
	-1, 1694,
	1, 875,
	594, 875,
	596, 875,
	598, 875,
	-2, 0,
	-1, 1696,
	1, 881,
	594, 881,
	596, 881,
	598, 881,
	-2, 0,
	-1, 1699,
	1, 877,
	594, 877,
	596, 877,
	598, 877,
	-2, 0,
	-1, 1704,
	1, 891,
	594, 891,
	596, 891,
	598, 891,
	-2, 0,
	-1, 1735,
	1, 2588,
	594, 2588,
	596, 2588,
	597, 2588,
	598, 2588,
	-2, 0,
	-1, 1739,
	1, 962,
	594, 962,
	596, 962,
	598, 962,
	-2, 0,
	-1, 1754,
	1, 1421,
	598, 1421,
	-2, 1426,
	-1, 1757,
	169, 1577,
	182, 1577,
	273, 1577,
	340, 1577,
	-2, 1515,
	-1, 1857,
	150, 1536,
	169, 1536,
	182, 1536,
	240, 1536,
	273, 1536,
	340, 1536,
	350, 1536,
	530, 1536,
	-2, 1983,
	-1, 1918,
	596, 2158,
	-2, 0,
	-1, 1953,
	150, 1536,
	169, 1536,
	182, 1536,
	240, 1536,
	273, 1536,
	340, 1536,
	350, 1536,
	530, 1536,
	-2, 1665,
	-1, 1990,
	513, 2602,
	597, 2602,
	600, 2602,
	-2, 0,
	-1, 2007,
	595, 1806,
	-2, 1794,
	-1, 2039,
	186, 2602,
	597, 2602,
	600, 2602,
	-2, 0,
	-1, 2087,
	1, 682,
	598, 682,
	-2, 1426,
	-1, 2220,
	221, 259,
	-2, 2306,
	-1, 2221,
	221, 260,
	-2, 308,
	-1, 2325,
	1, 868,
	594, 868,
	596, 868,
	598, 868,
	-2, 0,
	-1, 2326,
	1, 911,
	594, 911,
	596, 911,
	598, 911,
	-2, 0,
	-1, 2327,
	1, 919,
	594, 919,
	596, 919,
	598, 919,
	-2, 0,
	-1, 2328,
	1, 964,
	594, 964,
	596, 964,
	598, 964,
	-2, 0,
	-1, 2368,
	1, 893,
	594, 893,
	596, 893,
	598, 893,
	-2, 0,
	-1, 2386,
	1, 947,
	594, 947,
	596, 947,
	598, 947,
	-2, 0,
	-1, 2431,
	434, 1604,
	435, 1604,
	-2, 1839,
	-1, 2462,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1859,
	-1, 2463,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1860,
	-1, 2464,
	95, 0,
	254, 0,
	255, 0,
	580, 0,
	581, 0,
	-2, 1861,
	-1, 2465,
	95, 0,
	254, 0,
	255, 0,
	580, 0,
	581, 0,
	-2, 1862,
	-1, 2466,
	95, 0,
	254, 0,
	255, 0,
	580, 0,
	581, 0,
	-2, 1863,
	-1, 2467,
	95, 0,
	254, 0,
	255, 0,
	580, 0,
	581, 0,
	-2, 1864,
	-1, 2468,
	95, 0,
	254, 0,
	255, 0,
	580, 0,
	581, 0,
	-2, 1865,
	-1, 2469,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1866,
	-1, 2481,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1878,
	-1, 2482,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1879,
	-1, 2483,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1880,
	-1, 2487,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1887,
	-1, 2493,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1891,
	-1, 2495,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1899,
	-1, 2496,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1900,
	-1, 2497,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1901,
	-1, 2498,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1902,
	-1, 2672,
	5, 2310,
	186, 2169,
	595, 2307,
	-2, 2298,
	-1, 2673,
	186, 2170,
	-2, 2674,
	-1, 2674,
	186, 2171,
	-2, 2495,
	-1, 2675,
	186, 2172,
	-2, 2380,
	-1, 2676,
	186, 2173,
	-2, 2435,
	-1, 2677,
	186, 2174,
	-2, 2480,
	-1, 2678,
	186, 2175,
	-2, 2600,
	-1, 2679,
	186, 2176,
	-2, 1966,
	-1, 2750,
	1, 1666,
	2, 1666,
	106, 1666,
	150, 1666,
	169, 1666,
	182, 1666,
	187, 1666,
	205, 1666,
	208, 1666,
	236, 1666,
	240, 1666,
	251, 1666,
	269, 1666,
	273, 1666,
	312, 1666,
	340, 1666,
	344, 1666,
	350, 1666,
	424, 1666,
	428, 1666,
	530, 1666,
	541, 1666,
	557, 1666,
	558, 1666,
	559, 1666,
	569, 1666,
	594, 1666,
	596, 1666,
	598, 1666,
	600, 1666,
	-2, 1665,
	-1, 2763,
	595, 2279,
	-2, 2293,
	-1, 2765,
	1, 325,
	557, 325,
	-2, 1563,
	-1, 2794,
	595, 1805,
	-2, 1795,
	-1, 2979,
	1, 1274,
	419, 1238,
	457, 1238,
	572, 1238,
	594, 1274,
	596, 1274,
	598, 1274,
	-2, 1563,
	-1, 3158,
	345, 1607,
	-2, 2713,
	-1, 3159,
	345, 1608,
	-2, 2585,
	-1, 3163,
	434, 2235,
	435, 2235,
	-2, 1964,
	-1, 3164,
	434, 2239,
	435, 2239,
	-2, 1965,
	-1, 3165,
	434, 2236,
	435, 2236,
	-2, 1964,
	-1, 3166,
	434, 2240,
	435, 2240,
	-2, 1965,
	-1, 3179,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1889,
	-1, 3180,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1893,
	-1, 3186,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1895,
	-1, 3410,
	1, 679,
	594, 679,
	596, 679,
	598, 679,
	-2, 1426,
	-1, 3579,
	43, 2270,
	-2, 1024,
	-1, 3584,
	1, 1274,
	594, 1274,
	596, 1274,
	598, 1274,
	-2, 1563,
	-1, 3692,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1897,
	-1, 3699,
	245, 0,
	247, 0,
	331, 0,
	-2, 1916,
	-1, 3767,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1945,
	-1, 3768,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1946,
	-1, 3769,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1947,
	-1, 3773,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1951,
	-1, 3774,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1952,
	-1, 3775,
	14, 0,
	15, 0,
	16, 0,
	576, 0,
	577, 0,
	578, 0,
	-2, 1953,
	-1, 3822,
	595, 2280,
	-2, 2294,
	-1, 3996,
	597, 2831,
	-2, 1489,
	-1, 4054,
	245, 0,
	247, 0,
	331, 0,
	-2, 1917,
	-1, 4057,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1920,
	-1, 4058,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1922,
	-1, 4156,
	597, 2295,
	-2, 1309,
	-1, 4309,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1921,
	-1, 4310,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 1923,
	-1, 4321,
	245, 0,
	-2, 1956,
	-1, 4508,
	245, 0,
	-2, 1957,
	-1, 4704,
	50, 0,
	218, 0,
	272, 0,
	463, 0,
	566, 0,
	579, 0,
	-2, 2677,
}

const sqlPrivate = 57344

const sqlLast = 131223

var sqlAct = [...]int{
	270, 4696, 4898, 4806, 3063, 3317, 4697, 4539, 2857, 4819,
	3050, 4370, 4760, 4547, 4685, 3568, 4703, 4714, 3567, 4575,
	4835, 4672, 4596, 2135, 4430, 2056, 1238, 4571, 1513, 4632,
	4152, 4653, 2217, 4037, 4715, 4650, 4716, 4352, 2292, 4437,
	4415, 1249, 4461, 3732, 4265, 2901, 4773, 2923, 4512, 4260,
	3684, 4226, 4375, 4330, 4702, 2441, 4298, 3431, 3601, 1323,
	3980, 1319, 4201, 4247, 3988, 1069, 4446, 4249, 4240, 698,
	3172, 3916, 4133, 1312, 4153, 809, 2301, 2510, 4475, 1766,
	3493, 2069, 4270, 3595, 1060, 3945, 3563, 3072, 2705, 2936,
	3961, 3553, 2143, 2449, 4326, 1384, 3640, 3020, 2442, 769,
	1628, 809, 3434, 3009, 3642, 3039, 3943, 3085, 3332, 3825,
	1959, 1476, 3546, 2299, 1994, 3074, 3545, 3361, 3340, 3300,
	4093, 4036, 886, 1314, 709, 3082, 1068, 178, 2265, 882,
	4, 3065, 3034, 3036, 3051, 3071, 3321, 1977, 1928, 2206,
	2204, 2950, 3323, 2986, 3453, 4807, 2154, 2859, 3793, 2743,
	4513, 2742, 2588, 2446, 3299, 1904, 2523, 3156, 1835, 3428,
	804, 1483, 1865, 2590, 877, 2205, 3081, 3013, 950, 1229,
	1568, 1317, 2955, 764, 2745, 1119, 2200, 2181, 2123, 2188,
	2127, 1754, 1291, 3021, 1365, 2067, 1948, 264, 1305, 2723,
	2579, 1124, 2507, 3368, 1929, 1115, 2113, 2430, 2413, 1669,
	2411, 3565, 263, 1605, 742, 3044, 2777, 1626, 1126, 2252,
	1571, 810, 811, 4820, 2882, 4597, 3075, 3937, 2900, 806,
	178, 2702, 1352, 1232, 685, 2845, 2776, 2582, 707, 1945,
	1899, 2732, 1938, 2713, 1211, 2560, 2668, 1246, 2412, 2634,
	1849, 187, 1302, 188, 1995, 750, 1767, 1169, 1704, 1768,
	2414, 2214, 762, 1228, 2278, 2251, 1508, 2142, 4761, 1596,
	2435, 2044, 815, 1689, 108, 2042, 2045, 1100, 1603, 702,
	699, 725, 710, 44, 43, 41, 32, 818, 799, 1209,
	858, 30, 28, 3209, 1753, 971, 1519, 1234, 815, 1773,
	3203, 3807, 859, 3808, 4911, 4901, 3319, 2058, 2722, 3620,
	4885, 4884, 4874, 818, 2722, 2722, 2226, 4741, 4345, 4342,
	2058, 2058, 2058, 2058, 2058, 4855, 1064, 4853, 2058, 4374,
	901, 4374, 4792, 4749, 4738, 4736, 2226, 4750, 2722, 2722,
	4733, 4730, 4700, 4699, 4734, 4731, 2226, 2226, 4698, 3610,
	4693, 4692, 2079, 4683, 2079, 2079, 4681, 4374, 2226, 3611,
	4374, 3394, 1781, 1782, 4678, 1054, 4648, 4621, 4449, 4614,
	4374, 2785, 4613, 2722, 4608, 4607, 2722, 4601, 4374, 4374,
	4567, 2226, 4510, 4492, 4217, 1812, 2785, 4023, 4114, 1226,
	4489, 4486, 1784, 4439, 2226, 4374, 4393, 4440, 4392, 4381,
	2226, 4380, 2226, 2226, 4373, 4374, 2076, 4337, 4374, 1361,
	3377, 2226, 1512, 1212, 1212, 4311, 4289, 4278, 1837, 2785,
	2079, 3620, 4196, 1361, 4179, 3392, 2722, 1783, 2722, 2226,
	1045, 4056, 1044, 4004, 3998, 2785, 1064, 3637, 3637, 3959,
	2300, 3817, 1244, 3960, 3815, 3818, 3800, 3716, 3816, 1635,
	2722, 2226, 3712, 3636, 3797, 3627, 2722, 3637, 3316, 3628,
	2806, 3311, 2722, 3310, 1065, 2722, 3261, 2722, 3259, 3251,
	3262, 3249, 3260, 3252, 3220, 2722, 3089, 3218, 2722, 2781,
	2079, 3061, 1059, 3219, 3060, 2288, 2829, 2784, 2288, 2774,
	2722, 2785, 2767, 2722, 2721, 2715, 2226, 2076, 2722, 2287,
	1262, 1533, 1269, 2288, 1215, 3620, 1216, 2226, 3171, 2722,
	4622, 4514, 234, 4505, 4493, 4449, 2079, 3797, 2714, 1213,
	2226, 4258, 4217, 2076, 1263, 4180, 4023, 1621, 3628, 2926,
	2844, 1789, 2147, 1781, 1782, 2092, 2057, 2073, 3015, 2225,
	2946, 2842, 1924, 1507, 3899, 3687, 2759, 2805, 3661, 1946,
	2193, 3612, 1671, 2758, 2757, 2756, 1812, 2755, 1217, 234,
	236, 1214, 1053, 1784, 1052, 93, 1051, 1050, 2585, 1049,
	3613, 4272, 1048, 3270, 3271, 1047, 2722, 1043, 1042, 1811,
	1813, 1041, 1040, 1039, 1038, 4721, 1037, 1263, 1036, 1837,
	3130, 4496, 1035, 1034, 1033, 1032, 1031, 1030, 1783, 1029,
	1028, 2536, 2537, 2538, 2555, 2556, 2557, 236, 1803, 235,
	1027, 1026, 1008, 948, 947, 946, 945, 944, 943, 942,
	941, 2558, 228, 940, 939, 938, 3047, 937, 936, 1521,
	935, 229, 934, 933, 932, 931, 930, 929, 1804, 928,
	927, 926, 925, 924, 923, 1781, 1782, 922, 1814, 1815,
	1816, 1825, 1826, 1827, 1837, 921, 235, 2586, 189, 1781,
	1782, 2617, 920, 919, 2059, 918, 917, 1818, 1812, 916,
	915, 3270, 3271, 2548, 914, 1784, 904, 2059, 2059, 2059,
	2059, 2059, 2544, 903, 1831, 2059, 3208, 899, 1122, 1784,
	898, 892, 1806, 1807, 1808, 1809, 891, 876, 875, 832,
	831, 1837, 1789, 830, 829, 189, 821, 1521, 3270, 3271,
	1783, 1834, 820, 1532, 1695, 1781, 1782, 819, 785, 776,
	1803, 775, 774, 756, 1783, 258, 257, 256, 255, 1800,
	1512, 254, 2076, 253, 252, 251, 250, 249, 1812, 2587,
	248, 2584, 3276, 247, 246, 1784, 245, 244, 243, 242,
	1811, 1813, 241, 1328, 1124, 240, 239, 2549, 2550, 2551,
	2552, 238, 237, 4109, 4068, 3839, 3811, 2543, 3638, 3364,
	1949, 1837, 2615, 3610, 3231, 1263, 4274, 3314, 3214, 3205,
	1783, 1124, 1124, 1124, 3113, 2996, 2361, 1805, 1907, 1907,
	2789, 2764, 2749, 2601, 2599, 1906, 1906, 2121, 1780, 1387,
	2078, 1121, 1972, 1387, 1806, 1807, 1808, 1809, 1876, 1804,
	1328, 1515, 3270, 3271, 1789, 3029, 1373, 3315, 2295, 1248,
	4701, 4680, 1910, 1905, 1098, 4582, 1867, 4517, 1789, 4502,
	4365, 4494, 1117, 4325, 1124, 1225, 1124, 4279, 1124, 2076,
	3276, 2553, 2554, 2226, 1328, 1836, 1369, 1370, 1371, 3286,
	1356, 4257, 1822, 234, 1874, 1832, 2816, 2057, 2076, 2073,
	2805, 4120, 1811, 1813, 2406, 4091, 149, 4090, 4084, 4083,
	1328, 4082, 4075, 4074, 2546, 4072, 4067, 3276, 1491, 1828,
	4064, 1829, 1834, 4063, 1789, 1486, 3958, 3843, 1798, 1799,
	1328, 3964, 3842, 2589, 1521, 3841, 234, 1328, 3821, 3788,
	3787, 236, 2294, 3786, 3708, 1124, 1820, 1124, 3703, 2714,
	3359, 1328, 1867, 1527, 1639, 3307, 1263, 1124, 3298, 1124,
	3269, 1804, 1834, 3266, 3265, 1241, 3263, 3258, 3257, 1296,
	1299, 3256, 1811, 1813, 1511, 1810, 1793, 1785, 1786, 1787,
	1788, 1790, 1791, 3253, 236, 1577, 1580, 3286, 234, 234,
	235, 3250, 1520, 3230, 3213, 1350, 3206, 1309, 1805, 3204,
	3062, 2750, 2572, 228, 1869, 1830, 1328, 1380, 1780, 1473,
	1478, 2233, 229, 2268, 234, 2231, 3270, 3271, 1779, 4905,
	1496, 3276, 4845, 1819, 3286, 1868, 1124, 1866, 4844, 1124,
	1481, 1804, 3965, 235, 1834, 4808, 236, 236, 3287, 189,
	3270, 3271, 4759, 3288, 3289, 3290, 228, 4757, 1250, 2583,
	815, 3734, 4640, 4574, 4558, 229, 1836, 178, 178, 4555,
	1834, 4554, 236, 2547, 1345, 818, 4553, 4273, 3270, 3271,
	4532, 3288, 3289, 3290, 1510, 1509, 4516, 3384, 1240, 1566,
	2798, 3897, 189, 1640, 4515, 235, 235, 1810, 4490, 4474,
	4052, 3285, 1625, 4473, 2513, 1608, 1610, 1834, 228, 228,
	4459, 1242, 3031, 1583, 1834, 4456, 4455, 229, 229, 4450,
	1805, 235, 4389, 2519, 4360, 3285, 4323, 4306, 4305, 4286,
	4285, 1836, 4243, 3312, 228, 1124, 1124, 1124, 1124, 1124,
	1124, 1124, 1124, 229, 189, 3046, 3287, 1823, 4218, 1356,
	4108, 4089, 1356, 3285, 4024, 1794, 1792, 1793, 1785, 1786,
	1787, 1788, 1790, 1791, 4018, 4015, 1336, 4518, 1124, 3885,
	189, 3884, 3867, 3866, 1124, 1526, 3864, 3803, 1836, 3791,
	1645, 3698, 1521, 3287, 1854, 3639, 3621, 3587, 1599, 1758,
	1805, 3510, 3466, 3433, 3965, 3276, 3279, 3280, 3272, 3273,
	3274, 3275, 3277, 3278, 1065, 3386, 3235, 4182, 4497, 3234,
	3229, 234, 3195, 2533, 2534, 2535, 2559, 2545, 2539, 3276,
	2541, 2542, 2540, 2527, 2528, 2529, 2530, 2531, 2532, 1067,
	3008, 1913, 2787, 1912, 1911, 3270, 3271, 1908, 1900, 1752,
	1713, 1898, 1620, 2796, 2795, 2761, 2754, 3276, 1836, 2720,
	1821, 2597, 1853, 1971, 1634, 1927, 1922, 1921, 1920, 236,
	1795, 1796, 1802, 1824, 1801, 1797, 1919, 1794, 1792, 1793,
	1785, 1786, 1787, 1788, 1790, 1791, 1856, 1918, 3202, 1124,
	1124, 1124, 1917, 234, 1759, 1124, 1787, 1788, 1790, 1791,
	1916, 1915, 1246, 4246, 1246, 3280, 3272, 3273, 3274, 3275,
	3277, 3278, 3286, 1662, 1597, 2616, 1914, 1895, 235, 1387,
	1894, 1893, 3292, 3030, 1926, 1892, 1781, 1782, 1697, 1124,
	1698, 228, 809, 1891, 1890, 1889, 3286, 1888, 2012, 809,
	229, 236, 1328, 3272, 3273, 3274, 3275, 3277, 3278, 1975,
	1785, 1786, 1787, 1788, 1790, 1791, 1784, 1887, 1886, 4343,
	1885, 1991, 1884, 1883, 3286, 1882, 1881, 189, 2040, 1763,
	1755, 2296, 1880, 1869, 1855, 1852, 1847, 4116, 3356, 1344,
	1045, 1762, 1044, 1935, 1267, 1834, 1258, 4060, 3838, 3814,
	235, 1783, 2063, 3806, 3217, 2065, 3270, 3271, 1757, 1909,
	2752, 2070, 1602, 228, 4118, 2072, 3837, 1982, 1328, 1834,
	2075, 1868, 229, 3382, 3276, 1124, 1850, 1985, 4842, 1328,
	234, 234, 1776, 1777, 1781, 1782, 2614, 2112, 1932, 1933,
	3616, 1967, 178, 2112, 4834, 2924, 1124, 1834, 4556, 189,
	3270, 3271, 1065, 2112, 1387, 1366, 1956, 2600, 2598, 3274,
	3275, 3277, 3278, 4451, 1784, 1212, 4717, 2137, 4495, 234,
	1368, 3287, 4442, 4441, 4277, 1901, 1902, 4220, 236, 236,
	4219, 2953, 4181, 1890, 4111, 4027, 4026, 1890, 4025, 2905,
	2110, 3809, 3623, 4364, 3622, 3287, 4788, 4786, 1224, 1783,
	4447, 1957, 3968, 1361, 1356, 1949, 3685, 1244, 1907, 1244,
	1980, 2119, 1361, 2085, 1875, 1906, 3911, 236, 1750, 2951,
	1976, 3255, 2084, 3287, 3254, 3177, 1661, 235, 235, 815,
	1981, 3286, 2887, 1364, 3882, 1367, 815, 1954, 3469, 1947,
	228, 228, 2098, 3570, 818, 3569, 3435, 1878, 1024, 229,
	229, 818, 4771, 2293, 4438, 1361, 2006, 1714, 2061, 3502,
	1670, 1986, 4745, 4726, 3319, 4713, 235, 3554, 2035, 234,
	1925, 3086, 1671, 2190, 2147, 3276, 189, 189, 1065, 228,
	39, 2208, 2207, 2317, 3972, 3955, 1328, 1328, 229, 1966,
	1965, 1964, 1962, 1025, 4327, 2009, 1387, 1961, 1960, 1951,
	2269, 3632, 3913, 1789, 1834, 3908, 3890, 3658, 3408, 2087,
	3736, 2580, 3223, 1992, 2585, 189, 4384, 236, 3281, 3279,
	3280, 3272, 3273, 3274, 3275, 3277, 3278, 2794, 4356, 1923,
	4722, 1903, 3561, 234, 2952, 3282, 3283, 3284, 2262, 1576,
	1503, 1339, 3281, 3279, 3280, 3272, 3273, 3274, 3275, 3277,
	3278, 1295, 4735, 2932, 2175, 4732, 2180, 3606, 3859, 2185,
	1601, 2940, 2083, 3282, 3283, 3284, 235, 1602, 2943, 4548,
	3281, 3279, 3280, 3272, 3273, 3274, 3275, 3277, 3278, 228,
	3287, 236, 2938, 2081, 4261, 1649, 2218, 2223, 229, 4647,
	1328, 4528, 1328, 3383, 1328, 2090, 234, 4723, 3438, 3877,
	3069, 3043, 3537, 2586, 4789, 2115, 4824, 4387, 4383, 871,
	1328, 1328, 2105, 2931, 4362, 189, 4790, 3679, 3926, 3412,
	4411, 1328, 1063, 4169, 1543, 2830, 4900, 4562, 3414, 1022,
	235, 1004, 2861, 1328, 1551, 1328, 1328, 1328, 2884, 4404,
	2153, 1712, 4167, 228, 236, 4395, 4210, 2210, 2211, 4164,
	1020, 2848, 229, 2212, 1018, 1834, 1016, 3112, 2848, 809,
	2099, 1013, 2258, 2421, 4209, 3924, 2846, 2988, 1505, 3923,
	3915, 2303, 2316, 2846, 2374, 815, 3905, 2174, 3904, 189,
	2372, 1124, 1368, 1834, 3902, 2587, 3925, 2584, 3901, 3889,
	818, 2104, 2103, 235, 2263, 2112, 2114, 3854, 2883, 1510,
	1509, 3853, 3543, 2275, 3542, 2088, 228, 2630, 2788, 3376,
	1351, 3862, 1062, 4183, 872, 229, 1124, 3228, 3227, 2298,
	2173, 1552, 2419, 3226, 2184, 3225, 3181, 3281, 3279, 3280,
	3272, 3273, 3274, 3275, 3277, 3278, 4385, 2949, 2321, 2948,
	2945, 2934, 189, 2922, 2224, 2864, 2921, 1367, 4357, 2915,
	1124, 2914, 1124, 2283, 2913, 2892, 2891, 2405, 2147, 1124,
	2852, 2775, 2012, 2012, 1387, 1647, 1124, 1124, 1124, 1124,
	1124, 1124, 1124, 1124, 1124, 1124, 1124, 1124, 1124, 1124,
	1124, 1124, 1124, 1124, 1124, 1124, 1124, 1124, 1124, 1124,
	1124, 1124, 1124, 1124, 1124, 1124, 1124, 1124, 1124, 1124,
	1124, 1124, 2244, 1124, 2272, 1124, 1124, 1124, 1124, 2285,
	2243, 4825, 2309, 2107, 1368, 1601, 1791, 2494, 2304, 3500,
	2208, 2293, 1064, 1756, 1599, 2144, 2280, 2423, 2280, 2281,
	2277, 1124, 3435, 1362, 748, 1124, 1124, 2629, 1362, 2589,
	2410, 2885, 3468, 1124, 748, 1345, 815, 1124, 3040, 1124,
	1124, 2451, 4163, 1589, 1065, 1588, 1065, 1387, 2289, 2140,
	2290, 818, 1711, 1124, 1124, 1124, 1124, 4165, 2420, 1124,
	1124, 1124, 1124, 1124, 1124, 1124, 1124, 2308, 2346, 1367,
	4126, 3272, 3273, 3274, 3275, 3277, 3278, 2242, 2145, 2146,
	1241, 2802, 1241, 2779, 2909, 1124, 1124, 1124, 1124, 1124,
	1124, 1124, 1124, 1124, 2336, 1587, 2325, 1586, 1124, 1785,
	1786, 1787, 1788, 1790, 1791, 2902, 2903, 1663, 2141, 4829,
	1246, 2902, 2903, 2561, 2562, 2580, 2885, 1387, 2109, 1362,
	3278, 2902, 2903, 2398, 1010, 2368, 1246, 2561, 2577, 1506,
	4304, 4420, 2418, 4125, 1547, 3659, 2863, 2403, 2434, 2386,
	2889, 1358, 1124, 1387, 2313, 2583, 1358, 2395, 1748, 1560,
	2837, 2509, 1281, 1710, 2625, 2421, 2108, 2178, 2509, 3092,
	2006, 2006, 1967, 2766, 1565, 2875, 2378, 2409, 3136, 3501,
	2589, 1749, 2407, 2671, 2671, 2685, 3154, 2561, 2333, 2408,
	2706, 2708, 2525, 2422, 2415, 1045, 2712, 2438, 1045, 1045,
	2439, 2440, 1061, 1240, 2385, 1240, 2447, 2448, 4148, 2009,
	2009, 2576, 874, 873, 1671, 4830, 2737, 1671, 4719, 4789,
	4857, 998, 2874, 2330, 2419, 4148, 1242, 4161, 1242, 1723,
	1761, 2191, 1363, 1642, 2517, 4541, 1343, 1363, 2282, 2942,
	2762, 2515, 4141, 2397, 2627, 1058, 4134, 1358, 2491, 2628,
	1659, 3934, 2631, 1693, 2632, 2633, 1693, 3169, 747, 4141,
	1328, 1328, 2729, 4132, 2939, 3411, 2324, 2811, 747, 2521,
	2000, 2941, 4136, 2815, 3668, 3667, 3127, 4166, 1956, 1212,
	3725, 4208, 2187, 2851, 2574, 2937, 3886, 2826, 3139, 2751,
	1359, 2862, 2778, 2847, 697, 1359, 4142, 1065, 2334, 1360,
	178, 1572, 1387, 2782, 1360, 2417, 3935, 1065, 2728, 2186,
	3903, 1065, 2736, 4142, 2741, 1244, 2326, 2747, 2748, 1690,
	692, 2851, 2825, 3900, 1648, 4832, 912, 2819, 1363, 1727,
	3874, 1244, 2680, 2667, 2697, 3846, 2012, 999, 4135, 2710,
	2128, 2801, 2790, 2182, 1014, 2129, 2718, 2719, 1356, 3933,
	3833, 1643, 1570, 2730, 2734, 2735, 4543, 1692, 3192, 1954,
	1692, 1937, 1909, 3549, 1706, 1014, 2222, 3485, 749, 1014,
	2420, 1015, 2145, 2146, 1387, 2194, 1014, 3541, 749, 2327,
	2201, 2822, 1691, 2155, 3498, 4421, 1359, 3190, 2373, 3168,
	1328, 2944, 2827, 4720, 2371, 1360, 2853, 4419, 2912, 869,
	1065, 868, 2183, 4417, 2890, 3477, 2159, 4303, 2230, 2229,
	783, 1124, 1124, 4803, 1124, 2404, 2489, 2888, 2797, 2492,
	1709, 3138, 3486, 2810, 2394, 1335, 4811, 2813, 2821, 2814,
	4159, 4810, 1901, 1902, 2589, 2773, 809, 3547, 1328, 2804,
	2818, 4860, 1941, 2800, 2418, 4162, 4618, 3887, 3872, 2828,
	4416, 2850, 3135, 2505, 2935, 3161, 3162, 2910, 2130, 3012,
	3478, 2820, 4838, 2156, 1646, 3484, 998, 4778, 822, 1328,
	2488, 3054, 1361, 2116, 2117, 2134, 4042, 1361, 4418, 2983,
	2894, 1328, 2503, 1328, 4041, 2849, 3083, 3027, 2167, 2878,
	1058, 1944, 3662, 2195, 2831, 4718, 3550, 3603, 1328, 4137,
	1254, 3133, 2893, 3476, 4138, 1518, 1939, 1525, 2150, 1531,
	2396, 3604, 2991, 3722, 4143, 2911, 4137, 2993, 4831, 3492,
	781, 4138, 1546, 2687, 1942, 2856, 3093, 3094, 1000, 3187,
	1549, 4143, 2980, 2981, 2984, 2866, 2869, 3100, 3101, 3102,
	1280, 2191, 1251, 2168, 2006, 4628, 1124, 2203, 2131, 2136,
	3114, 4348, 3115, 4888, 3188, 3137, 4140, 2058, 3193, 2904,
	2906, 2907, 2908, 2151, 2916, 2332, 2917, 1940, 1361, 2925,
	2160, 3023, 4144, 4140, 2920, 1724, 1619, 2982, 1624, 2930,
	2895, 3087, 999, 2009, 2919, 1256, 2166, 4160, 1633, 4144,
	1638, 3603, 3513, 815, 178, 3723, 3110, 3068, 3090, 3334,
	2989, 4549, 2202, 3095, 3422, 3096, 2149, 1124, 818, 2833,
	4484, 4569, 3183, 1124, 1124, 786, 1721, 1510, 2994, 2508,
	4687, 4542, 4688, 815, 2499, 1572, 3413, 3450, 2835, 1011,
	746, 2132, 3058, 4616, 3006, 2848, 2161, 2162, 818, 3056,
	797, 905, 2128, 3016, 2500, 1672, 1001, 2129, 3116, 2501,
	2867, 2765, 1255, 2506, 1696, 3017, 1504, 3141, 1265, 3143,
	2157, 2490, 3548, 4476, 693, 2836, 2179, 3049, 3650, 1124,
	1124, 3380, 3059, 1002, 4617, 1124, 4477, 3643, 3070, 2138,
	2516, 2329, 4752, 1943, 3449, 4777, 2834, 1760, 1124, 1124,
	3088, 4235, 4753, 1342, 1124, 1124, 3057, 3038, 2918, 3019,
	1124, 4139, 3109, 2158, 913, 1896, 1722, 1658, 1660, 4478,
	2198, 3107, 3454, 4836, 1725, 823, 824, 3119, 4139, 3121,
	2191, 3123, 2989, 2138, 2323, 4038, 1003, 3118, 1644, 3120,
	3417, 3122, 3117, 791, 782, 4316, 4800, 2918, 4300, 803,
	4149, 4150, 3189, 694, 4670, 1124, 1124, 1124, 893, 2589,
	3184, 1124, 3191, 796, 2179, 3131, 3149, 4149, 4150, 715,
	2130, 1124, 3948, 3873, 3456, 2196, 4658, 3144, 3160, 4193,
	3146, 3946, 4480, 1000, 2571, 3645, 1846, 2134, 1124, 3233,
	3216, 1941, 2733, 784, 2000, 2000, 2746, 780, 3151, 3150,
	3644, 4861, 695, 1064, 696, 4479, 3333, 3738, 1241, 4848,
	3170, 795, 4245, 2434, 3155, 4250, 1726, 1056, 2197, 998,
	3423, 1937, 4032, 4481, 1241, 3491, 4846, 4213, 748, 4837,
	3834, 1270, 2163, 4043, 4251, 3681, 3152, 3207, 3455, 4576,
	1944, 4663, 4595, 1058, 3211, 3212, 1677, 2502, 4458, 3215,
	4212, 4211, 3986, 793, 3591, 2731, 2250, 2504, 3963, 3950,
	2131, 2136, 1934, 1268, 1261, 4839, 684, 1771, 826, 825,
	2133, 4087, 4039, 1942, 3182, 2437, 1252, 2148, 1770, 2100,
	1124, 1124, 1124, 1124, 3369, 4299, 3777, 1082, 4866, 1057,
	1124, 1124, 1124, 3827, 3949, 1124, 4776, 4382, 906, 907,
	4467, 1001, 1941, 1770, 4527, 1124, 1246, 1387, 2164, 3987,
	3919, 1124, 802, 1124, 3326, 3327, 1765, 2097, 3650, 4236,
	4889, 1240, 1246, 3906, 2059, 3858, 1963, 3643, 1002, 1253,
	827, 828, 3429, 3721, 3592, 999, 3342, 1240, 1325, 3583,
	1387, 3425, 3028, 2132, 1242, 4751, 3022, 3828, 3010, 1073,
	2276, 1944, 1246, 2868, 2270, 1387, 2264, 1540, 2256, 3222,
	1242, 2236, 4577, 1272, 3850, 2427, 1939, 3792, 1065, 4633,
	3682, 2896, 2851, 3829, 755, 3826, 2012, 3349, 3362, 4598,
	1387, 1003, 1769, 3309, 1942, 2379, 788, 3460, 2093, 3989,
	1770, 2138, 4266, 2095, 3375, 4044, 1328, 1328, 3007, 3328,
	1283, 4436, 2314, 4434, 3805, 894, 895, 1769, 3651, 3646,
	3647, 3648, 3649, 4359, 3441, 3437, 2128, 792, 3390, 1124,
	3436, 2129, 3175, 4301, 3153, 3645, 3398, 1940, 3331, 3400,
	3401, 3343, 1943, 1124, 3404, 2096, 3405, 3363, 3406, 3338,
	3644, 2137, 3458, 1328, 3418, 3419, 4248, 3330, 2012, 1771,
	1700, 1699, 747, 1694, 2772, 3358, 2771, 2770, 2769, 2768,
	1595, 4371, 3947, 1062, 3336, 3439, 1124, 798, 3443, 1593,
	4482, 4088, 3954, 790, 1771, 2137, 4483, 3778, 3337, 911,
	4045, 3341, 1328, 3347, 3409, 3459, 3779, 4536, 3402, 3350,
	3351, 908, 909, 3355, 1769, 3367, 4865, 1356, 3415, 3320,
	3014, 1244, 1846, 2428, 1328, 4431, 1328, 4227, 1581, 3348,
	3335, 3304, 3305, 3306, 3346, 3440, 2872, 1244, 3445, 1322,
	787, 3447, 1582, 2190, 3865, 1387, 1000, 3353, 3633, 3354,
	3641, 2274, 2190, 3426, 2130, 3557, 1328, 3516, 3855, 3518,
	1328, 4797, 3522, 1943, 2897, 2898, 3528, 1244, 794, 3387,
	3388, 2134, 3389, 3371, 3372, 3373, 3374, 4283, 4578, 4573,
	3851, 3471, 749, 3503, 4346, 2724, 4372, 1328, 2000, 2987,
	3393, 3378, 2133, 789, 3830, 3091, 1498, 3421, 2992, 2990,
	2302, 1328, 2207, 1328, 2006, 3399, 1652, 1387, 1678, 4354,
	4367, 3496, 4637, 3403, 809, 4366, 800, 801, 896, 897,
	2727, 4537, 3410, 4644, 4630, 1328, 4094, 3566, 3551, 3514,
	1536, 3475, 3794, 3370, 3511, 3416, 3489, 1328, 3473, 2596,
	3381, 3344, 3345, 2009, 2131, 2136, 4801, 1744, 4665, 4282,
	4802, 4799, 4737, 4565, 1246, 4355, 1573, 1746, 3599, 2390,
	3487, 2726, 3575, 1743, 1001, 3083, 2725, 3457, 3651, 3646,
	3647, 3648, 3649, 4423, 3083, 3582, 2006, 3395, 3396, 1328,
	1328, 754, 3467, 1614, 1741, 3480, 1718, 1716, 4557, 1055,
	1688, 1002, 3523, 1686, 1684, 4322, 3529, 1627, 3597, 4086,
	4638, 3552, 1328, 3555, 3483, 1981, 3953, 3301, 3697, 4538,
	3656, 3619, 3430, 3655, 3391, 2009, 3504, 3590, 3608, 3856,
	1594, 3499, 3264, 3512, 3424, 3194, 1682, 2132, 3011, 1592,
	3539, 1680, 3533, 3525, 3481, 3531, 2933, 3534, 3482, 910,
	1674, 1668, 1666, 1591, 1003, 2886, 1387, 2799, 3660, 1387,
	3948, 2399, 1653, 1974, 1970, 3540, 1747, 1630, 2370, 3946,
	2338, 3302, 3677, 3474, 3676, 3544, 2216, 1765, 3129, 3128,
	3098, 2126, 3670, 2416, 3559, 2138, 1705, 3538, 2894, 2341,
	2255, 3593, 1124, 2235, 2041, 3488, 1879, 3490, 1124, 1124,
	3600, 1641, 1124, 1124, 1124, 3578, 1124, 178, 178, 3580,
	3579, 815, 1564, 2595, 4712, 1124, 2012, 4194, 3653, 3910,
	2362, 3909, 3652, 4195, 1124, 4629, 818, 3524, 4178, 1124,
	3631, 3530, 1012, 3605, 3635, 1387, 2124, 4264, 4200, 4191,
	4130, 3675, 3614, 3607, 1124, 3617, 3618, 3950, 3515, 2392,
	3598, 1745, 1387, 2391, 3674, 3629, 3985, 1742, 3976, 1244,
	3922, 3907, 2012, 2012, 1124, 1124, 3880, 1124, 1124, 1124,
	3878, 3857, 3586, 3581, 3571, 3041, 3033, 3026, 1740, 2125,
	1717, 1715, 3949, 3018, 1687, 1124, 3004, 1685, 1683, 1124,
	3683, 2012, 2012, 1124, 1124, 1124, 1124, 1124, 1124, 1124,
	1124, 1124, 1124, 1124, 1124, 1124, 1124, 1124, 1124, 1124,
	1124, 1124, 1124, 2985, 1124, 3710, 3711, 3671, 2817, 3654,
	1681, 4774, 1124, 1124, 2012, 1679, 3750, 4259, 3751, 1124,
	3700, 1065, 2812, 3680, 1673, 1667, 1665, 1590, 2234, 3664,
	1124, 3665, 2232, 3666, 2209, 3672, 2192, 2165, 2369, 2152,
	2337, 1246, 1246, 2139, 3678, 1124, 2215, 2080, 2077, 2074,
	2071, 2066, 2064, 2060, 2051, 3718, 2133, 3596, 3526, 1221,
	4765, 1774, 3944, 2201, 4250, 1984, 4790, 3173, 2101, 4535,
	3705, 2402, 3147, 3145, 3707, 1387, 2978, 4675, 4288, 1017,
	1019, 1021, 3823, 4251, 4281, 1222, 4280, 4207, 4122, 3724,
	3726, 3727, 3717, 3084, 3733, 2120, 1545, 2848, 2848, 4469,
	3810, 2873, 4462, 3728, 1241, 3740, 3997, 3789, 2147, 1738,
	1739, 2328, 2846, 2870, 2006, 3831, 3832, 2400, 1304, 3748,
	1241, 2365, 2360, 3749, 4674, 1124, 3747, 2335, 4170, 3781,
	3844, 3845, 3753, 3847, 3755, 3848, 1781, 1782, 2273, 3849,
	3947, 4202, 1303, 1664, 1124, 3796, 4504, 4369, 2876, 178,
	1241, 4095, 3790, 2009, 4073, 3452, 1132, 2877, 2899, 1778,
	2006, 2006, 3174, 2401, 1337, 3782, 1784, 1781, 1782, 2171,
	1271, 1775, 4793, 4784, 4746, 3003, 3527, 1124, 1124, 3879,
	2877, 3881, 3973, 3801, 3802, 3798, 3799, 259, 2367, 2006,
	2006, 2257, 3918, 1348, 2940, 1223, 2447, 3741, 2927, 2009,
	2009, 1783, 266, 266, 266, 2938, 687, 688, 2879, 703,
	687, 703, 713, 3812, 3917, 753, 3813, 1240, 2947, 773,
	4636, 1124, 2006, 1304, 779, 2447, 3756, 1304, 2009, 2009,
	2929, 266, 1783, 1240, 681, 2147, 1244, 1244, 4623, 2881,
	1242, 4589, 4583, 2928, 2176, 4534, 4453, 4429, 1328, 4833,
	4347, 890, 2880, 1328, 3921, 3983, 1242, 266, 3785, 3975,
	3840, 2009, 3962, 1240, 3820, 3891, 3585, 3048, 2711, 2086,
	1993, 4667, 4368, 3896, 3898, 3532, 4668, 2012, 3895, 1502,
	1501, 3379, 4864, 3270, 3271, 4585, 1242, 2172, 4667, 3861,
	1781, 1782, 1512, 4668, 3912, 4065, 4805, 2840, 2841, 1651,
	3920, 2838, 2839, 2591, 3836, 1650, 2840, 3883, 1328, 3914,
	2838, 2626, 3982, 1720, 1124, 3888, 1719, 4454, 2000, 4405,
	4204, 4199, 1246, 1124, 4198, 3999, 4061, 3936, 3938, 3054,
	3835, 3729, 3520, 1328, 1328, 1328, 4006, 3517, 1606, 1873,
	2894, 1872, 4850, 4812, 4627, 4626, 4625, 4564, 4563, 4520,
	1328, 4432, 4399, 4344, 3990, 4341, 3083, 4339, 3952, 3969,
	4238, 4224, 4168, 4117, 4021, 4003, 1328, 3991, 3957, 3876,
	3868, 3994, 1387, 3589, 4010, 3588, 3942, 3446, 3397, 3951,
	3134, 3126, 3932, 3940, 3106, 687, 687, 3105, 3104, 3930,
	2000, 3103, 3929, 266, 3993, 3970, 3032, 3005, 1387, 2871,
	3956, 1124, 1124, 3974, 3941, 2808, 2803, 1124, 1124, 2012,
	2792, 4022, 1124, 1124, 2791, 1124, 2780, 2520, 2393, 2366,
	1124, 2359, 2358, 2357, 2356, 3979, 2355, 2271, 2245, 2241,
	2240, 1124, 1241, 2239, 2238, 3977, 2237, 2054, 2053, 2052,
	2997, 2050, 1983, 3000, 1737, 3002, 1736, 1124, 3992, 1675,
	1559, 1558, 3995, 1557, 1556, 4000, 1555, 1554, 4001, 4011,
	4012, 1553, 4005, 1548, 1544, 1542, 4030, 4046, 1541, 4019,
	4028, 1495, 1494, 4020, 4013, 4016, 1493, 4017, 4029, 1378,
	1377, 1376, 1375, 1374, 1341, 2006, 1340, 4047, 1290, 3045,
	1289, 1288, 3045, 1287, 1286, 1285, 1284, 1282, 1277, 1276,
	1275, 1274, 1273, 4059, 2169, 883, 8, 4040, 1246, 1204,
	2291, 2091, 1023, 1009, 3931, 1859, 1246, 1244, 4540, 1864,
	1387, 3430, 1387, 4055, 2009, 4147, 1322, 2305, 4146, 1246,
	4145, 2179, 2389, 92, 1550, 845, 86, 2307, 2199, 3875,
	1328, 1328, 4100, 4740, 977, 1240, 4664, 1534, 4568, 2315,
	1387, 2318, 2319, 2320, 853, 3362, 4646, 3971, 3448, 2177,
	2954, 2340, 1676, 2342, 3357, 2753, 4615, 4069, 1242, 3232,
	4511, 3124, 4123, 4124, 4315, 1246, 2594, 1246, 1877, 4035,
	3313, 88, 1108, 4085, 1154, 4234, 4233, 4131, 3860, 3073,
	4231, 4230, 1997, 1999, 1072, 1390, 4686, 4171, 2102, 1114,
	1328, 4154, 2170, 4154, 2118, 2111, 4158, 4157, 2793, 4103,
	1387, 2670, 1328, 1131, 1128, 1328, 2001, 2006, 2003, 1130,
	1129, 4099, 2002, 4173, 4174, 1897, 1387, 1127, 178, 4097,
	4098, 4092, 1996, 3981, 2178, 3052, 4102, 4106, 3615, 1600,
	1598, 4203, 979, 4205, 4110, 2106, 4107, 4127, 4172, 2514,
	4096, 2578, 3221, 1870, 1088, 4129, 2009, 1110, 4101, 2575,
	1266, 268, 1099, 1087, 1328, 1328, 3339, 4115, 3318, 3602,
	3819, 2426, 863, 3267, 2581, 1257, 2694, 2686, 2682, 4228,
	4121, 3407, 3042, 1751, 1328, 4329, 1848, 3053, 1372, 1092,
	2512, 1861, 3199, 2436, 3609, 3360, 1387, 2786, 4192, 4671,
	3737, 1328, 3132, 1244, 2249, 1220, 1219, 1264, 4225, 4206,
	1218, 1244, 4652, 4649, 2189, 4197, 4014, 3564, 2094, 1241,
	1241, 2832, 2524, 3572, 1244, 4222, 1246, 4190, 2000, 1104,
	2048, 4256, 1489, 2383, 3324, 4176, 1328, 1328, 1328, 3634,
	1561, 4187, 778, 4376, 4216, 1116, 1833, 4267, 4185, 1387,
	2975, 4188, 4154, 4221, 2974, 4531, 4284, 4287, 1357, 1355,
	4268, 1124, 1124, 1124, 4215, 4223, 1354, 1353, 4214, 4821,
	1244, 4887, 1244, 3871, 2000, 2000, 3870, 3869, 233, 1387,
	4244, 3167, 4253, 4271, 1124, 4262, 4229, 1124, 1124, 1772,
	1764, 230, 232, 231, 4276, 4239, 2048, 1124, 3824, 3366,
	2012, 4744, 3893, 2000, 2000, 1124, 1124, 2048, 4269, 3556,
	23, 22, 21, 112, 42, 4255, 20, 151, 129, 148,
	1387, 147, 1328, 121, 146, 145, 144, 143, 4307, 150,
	142, 4291, 1240, 1240, 141, 136, 2000, 4293, 4290, 140,
	139, 138, 137, 135, 4302, 1387, 1259, 4295, 133, 134,
	128, 132, 1086, 1124, 4296, 1242, 1242, 4312, 131, 130,
	127, 4177, 126, 125, 124, 123, 1124, 122, 120, 152,
	119, 118, 117, 4186, 116, 1124, 4189, 115, 114, 1279,
	2012, 113, 4318, 765, 767, 61, 60, 111, 110, 1124,
	19, 266, 1124, 266, 266, 40, 1308, 266, 1318, 14,
	4350, 65, 4335, 4336, 66, 18, 1124, 4390, 4391, 1338,
	13, 35, 91, 1387, 4324, 102, 101, 36, 773, 4379,
	1328, 1244, 99, 98, 34, 4338, 17, 16, 4349, 15,
	1328, 1328, 96, 95, 33, 31, 11, 4406, 4351, 4408,
	9, 4409, 37, 1958, 266, 4252, 266, 266, 1308, 12,
	266, 266, 4358, 5, 183, 1318, 182, 4398, 185, 181,
	184, 90, 3566, 4422, 180, 179, 89, 29, 10, 266,
	175, 1514, 4445, 4444, 3967, 1387, 2824, 1322, 1328, 4410,
	81, 177, 4401, 4435, 176, 174, 173, 4400, 172, 82,
	4396, 79, 1538, 171, 85, 170, 1246, 1246, 80, 84,
	1241, 83, 27, 6, 64, 7, 4407, 4452, 2006, 4297,
	3657, 1563, 4468, 4424, 1318, 105, 1124, 1124, 266, 266,
	106, 1308, 4154, 4154, 4463, 4428, 4487, 4488, 4472, 4433,
	38, 4427, 4448, 1124, 2012, 4425, 77, 4464, 4491, 4466,
	4443, 76, 773, 75, 266, 266, 26, 2009, 63, 4414,
	25, 169, 216, 215, 214, 213, 4412, 212, 2740, 211,
	210, 209, 204, 4465, 4460, 4471, 4271, 890, 1606, 4470,
	1606, 1124, 4485, 1124, 203, 1124, 208, 206, 205, 207,
	202, 4519, 225, 219, 4521, 1246, 218, 224, 2006, 223,
	3461, 3462, 4402, 3463, 3464, 3465, 4499, 222, 1124, 2000,
	1246, 221, 4526, 220, 4500, 4501, 2979, 217, 227, 201,
	4503, 4154, 200, 1240, 199, 197, 193, 192, 196, 198,
	195, 194, 191, 226, 4388, 72, 4154, 2009, 167, 168,
	4552, 71, 166, 4525, 165, 164, 1242, 4522, 3505, 3506,
	163, 3507, 3508, 3509, 266, 162, 4560, 2137, 4509, 161,
	160, 70, 1124, 1124, 24, 2, 1, 4545, 0, 4544,
	0, 4551, 1124, 0, 4572, 0, 266, 1246, 0, 0,
	1246, 0, 0, 0, 1328, 0, 0, 0, 0, 0,
	0, 4413, 0, 0, 1328, 1328, 1241, 4559, 0, 0,
	0, 1244, 1244, 4154, 1241, 4561, 4154, 4592, 0, 0,
	4594, 1328, 0, 4566, 0, 0, 0, 1241, 0, 0,
	4606, 0, 0, 0, 3099, 1124, 1124, 4580, 4581, 4579,
	0, 0, 4584, 0, 4587, 1124, 4591, 4586, 0, 0,
	0, 2000, 4448, 4599, 4611, 0, 4612, 4602, 0, 4603,
	4600, 2431, 2006, 0, 0, 4604, 4605, 0, 0, 0,
	0, 0, 0, 1241, 2518, 1241, 0, 0, 0, 0,
	4610, 0, 4609, 0, 0, 0, 1124, 1124, 0, 1124,
	1859, 4620, 0, 0, 4639, 0, 262, 0, 4624, 0,
	1244, 2009, 4643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4673, 0, 1244, 0, 4651, 4654, 1240,
	4669, 4661, 0, 4619, 4662, 0, 4641, 1240, 0, 4642,
	0, 0, 4666, 0, 0, 0, 0, 4691, 0, 0,
	1240, 0, 1242, 0, 4694, 2693, 0, 1124, 1124, 1124,
	1242, 4695, 4656, 0, 4660, 0, 0, 0, 0, 0,
	0, 0, 0, 1242, 4676, 0, 0, 0, 0, 0,
	0, 4724, 0, 4682, 4655, 4690, 4689, 4659, 1124, 0,
	0, 0, 1244, 0, 0, 1244, 1240, 687, 1240, 0,
	0, 0, 4729, 0, 0, 0, 0, 4711, 0, 4725,
	0, 4710, 4708, 4709, 0, 0, 0, 2688, 266, 1242,
	266, 1242, 0, 0, 266, 0, 4739, 4727, 4742, 4747,
	0, 4758, 0, 0, 1241, 4756, 0, 1514, 1308, 1978,
	266, 4754, 266, 4769, 4743, 1124, 0, 0, 266, 1514,
	703, 0, 4770, 0, 0, 266, 1514, 4755, 0, 4768,
	0, 4775, 1086, 1086, 1086, 0, 0, 0, 0, 0,
	2055, 4766, 4767, 4764, 4762, 4763, 4791, 4772, 0, 0,
	1471, 0, 266, 0, 1471, 0, 0, 0, 0, 266,
	4783, 4787, 4785, 0, 4795, 4781, 4782, 4794, 1246, 4673,
	1246, 2137, 1781, 1782, 4815, 4651, 4798, 4796, 4654, 0,
	4826, 0, 4809, 0, 0, 4814, 4828, 0, 4572, 4804,
	0, 0, 4813, 4817, 4154, 1812, 4154, 4823, 4816, 773,
	4818, 4822, 1784, 0, 4827, 0, 0, 4841, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1240, 0, 0,
	0, 4840, 4843, 0, 0, 0, 0, 0, 1837, 4854,
	0, 0, 0, 0, 0, 0, 0, 1783, 0, 4859,
	1242, 4847, 4851, 0, 1124, 1124, 0, 4849, 4856, 0,
	4852, 0, 4858, 1124, 0, 1124, 1124, 0, 0, 0,
	4862, 3196, 3197, 4872, 4876, 4868, 0, 0, 0, 0,
	0, 0, 0, 4879, 4882, 0, 3054, 4877, 4881, 4880,
	4878, 4875, 0, 4871, 0, 4883, 0, 0, 4886, 4890,
	0, 0, 0, 0, 4893, 4892, 0, 4896, 0, 4897,
	4895, 4899, 4891, 0, 0, 0, 4904, 4902, 0, 0,
	0, 0, 0, 0, 4894, 4906, 1124, 0, 0, 0,
	0, 0, 2000, 4910, 4913, 4912, 0, 4903, 4899, 0,
	4907, 0, 4909, 0, 0, 0, 0, 0, 0, 0,
	0, 1789, 0, 4869, 4870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 1244, 266, 1244, 0, 0, 0, 0,
	0, 0, 0, 0, 1241, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1811,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2000, 0, 4908, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2048, 266, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3294, 3295, 3296, 3297, 1606, 1804, 266,
	0, 266, 0, 0, 0, 687, 0, 266, 0, 1079,
	0, 0, 0, 1241, 0, 0, 0, 0, 0, 773,
	0, 0, 0, 890, 0, 0, 0, 0, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 1240, 1240, 0,
	0, 0, 0, 0, 0, 0, 3978, 0, 266, 0,
	1308, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	1242, 1242, 0, 0, 0, 773, 0, 0, 0, 0,
	0, 1834, 266, 0, 0, 0, 0, 0, 0, 0,
	2339, 0, 0, 0, 2693, 266, 266, 0, 266, 0,
	266, 0, 266, 0, 266, 1241, 0, 1385, 1241, 0,
	0, 1484, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4031, 0, 2375,
	0, 0, 2376, 3535, 2377, 0, 1240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 266, 266, 266,
	0, 1240, 0, 0, 0, 0, 3157, 1805, 0, 1242,
	3270, 3271, 0, 3288, 3289, 3290, 0, 0, 0, 0,
	1471, 3576, 0, 753, 1242, 2693, 2693, 773, 0, 0,
	0, 0, 4051, 3584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1781, 1782, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 1240, 0,
	1812, 1240, 0, 0, 0, 3625, 3626, 1784, 3270, 3271,
	0, 3288, 3289, 3290, 0, 3285, 0, 2688, 2688, 0,
	0, 1242, 0, 0, 1242, 0, 0, 0, 0, 0,
	3702, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 0, 0, 0, 0, 0, 0, 0,
	2526, 0, 0, 0, 0, 0, 0, 1313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1086, 0, 0,
	0, 0, 0, 0, 0, 1471, 0, 0, 0, 0,
	0, 0, 0, 3285, 1794, 1792, 1793, 1785, 1786, 1787,
	1788, 1790, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1479, 0, 3276,
	1490, 1313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 2693, 2693, 2693,
	2693, 0, 0, 0, 0, 687, 1789, 0, 0, 0,
	0, 0, 266, 0, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 3292, 0, 0, 3276, 1313, 1313,
	0, 0, 0, 0, 266, 1318, 1241, 0, 1241, 0,
	0, 0, 0, 0, 1811, 1813, 0, 0, 0, 2688,
	2688, 2688, 2688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4237, 0, 0, 3286, 1471, 0, 0,
	0, 0, 0, 0, 0, 0, 4254, 0, 0, 0,
	0, 0, 0, 266, 1318, 0, 0, 0, 703, 0,
	0, 0, 3292, 0, 0, 0, 0, 0, 2807, 4275,
	0, 0, 0, 1804, 266, 0, 0, 266, 0, 0,
	0, 266, 0, 266, 0, 0, 0, 0, 1308, 0,
	266, 266, 0, 1318, 1318, 2823, 3693, 3694, 0, 0,
	266, 0, 0, 0, 3286, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1240,
	0, 1240, 0, 0, 2048, 2048, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1242, 0, 1242, 2860, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1973, 0, 266,
	0, 2048, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 266, 0, 0, 3287, 3757, 3758, 3759, 3760,
	3761, 3762, 3763, 3764, 3765, 3766, 3767, 3768, 3769, 3770,
	3771, 3772, 3773, 3774, 3775, 3776, 0, 3780, 0, 266,
	2048, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 0, 0, 0, 0, 0, 1781, 1782,
	0, 0, 2048, 0, 2048, 0, 0, 0, 0, 0,
	0, 0, 266, 2995, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 3287, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 2048, 0, 0, 1514, 2048, 0,
	266, 0, 266, 0, 0, 0, 0, 0, 0, 266,
	1836, 0, 0, 0, 1837, 0, 0, 0, 0, 3037,
	0, 0, 2122, 1783, 3927, 0, 0, 0, 0, 2860,
	0, 687, 0, 1803, 0, 1471, 0, 0, 0, 0,
	3066, 890, 1800, 2860, 2860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3282, 3283, 3284, 0, 0,
	266, 0, 3281, 3279, 3280, 3272, 3273, 3274, 3275, 3277,
	3278, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	1308, 266, 0, 0, 0, 0, 0, 0, 1514, 0,
	1514, 1318, 266, 0, 0, 1308, 4050, 1308, 0, 1308,
	1792, 1793, 1785, 1786, 1787, 1788, 1790, 1791, 0, 4007,
	4008, 4009, 0, 0, 0, 0, 0, 1806, 1807, 1808,
	1809, 0, 1490, 3282, 3283, 3284, 1322, 1789, 1471, 0,
	3281, 3279, 3280, 3272, 3273, 3274, 3275, 3277, 3278, 0,
	0, 266, 266, 266, 266, 1308, 0, 0, 1308, 2970,
	266, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2227, 0, 0, 0, 0, 1490,
	0, 0, 0, 0, 0, 1811, 1813, 0, 0, 0,
	2693, 2693, 2962, 2960, 266, 0, 0, 0, 0, 2964,
	2966, 2956, 266, 0, 0, 0, 0, 0, 1471, 0,
	0, 1798, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1471, 0, 0, 0, 0, 0,
	4570, 0, 0, 0, 1804, 0, 0, 0, 0, 0,
	0, 0, 2688, 2688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2693, 2693, 2693, 2693, 2693, 2693, 2693, 2693, 2693, 2693,
	2693, 2693, 2693, 2693, 2693, 2693, 2693, 2693, 2693, 2693,
	0, 2693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 4112, 4113, 1514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688,
	2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688,
	2688, 2688, 0, 2688, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2958, 0, 0, 1471, 0, 0, 0, 0, 0, 0,
	0, 2972, 0, 1805, 4677, 0, 0, 0, 0, 0,
	4679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2971, 2963, 2961, 2965, 2967, 2957, 2959, 2973,
	0, 0, 0, 0, 0, 0, 0, 0, 2969, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2450, 0, 0, 0, 0, 2261, 0, 0,
	1322, 1836, 0, 0, 0, 1471, 0, 0, 0, 0,
	0, 2976, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 687, 0, 0, 0, 0, 687, 0,
	0, 687, 0, 0, 687, 687, 1781, 1782, 0, 0,
	687, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 4292, 0, 4294, 0, 0, 0, 0, 1812,
	0, 0, 1514, 0, 0, 2592, 1784, 1801, 1797, 0,
	1794, 1792, 1793, 1785, 1786, 1787, 1788, 1790, 1791, 0,
	0, 0, 0, 0, 0, 0, 1514, 0, 0, 0,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 266,
	0, 1783, 0, 266, 266, 0, 0, 0, 0, 0,
	0, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2048, 2860, 2860, 266, 0, 1978, 0, 4340, 2384,
	0, 0, 2860, 0, 0, 3432, 0, 0, 0, 0,
	0, 0, 0, 2860, 3432, 0, 2860, 3432, 0, 0,
	3432, 2763, 0, 0, 0, 0, 0, 0, 0, 2977,
	0, 0, 0, 0, 3696, 266, 266, 1978, 2968, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 1807, 1808, 1809, 1978,
	0, 266, 0, 0, 0, 1789, 3495, 3495, 0, 1308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 2860, 0, 2860, 0, 3521,
	2860, 1978, 0, 0, 2860, 1978, 0, 0, 773, 0,
	0, 0, 0, 0, 0, 0, 4426, 0, 0, 0,
	0, 0, 0, 1811, 1813, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 1308, 0, 0, 0, 0,
	4321, 0, 266, 74, 0, 0, 1514, 0, 0, 1798,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 78,
	266, 3560, 0, 0, 3562, 2860, 0, 0, 266, 0,
	0, 0, 266, 0, 0, 1318, 0, 0, 0, 0,
	2843, 0, 1804, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 3037, 4361, 0, 1308, 87,
	266, 0, 0, 2860, 0, 687, 0, 0, 0, 0,
	0, 0, 2860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 3037, 0, 0, 3037, 0, 884,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 0, 107, 0, 1834, 0, 0, 93, 104,
	0, 0, 0, 0, 1313, 0, 0, 0, 0, 0,
	3663, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 3669, 1817, 0,
	1514, 0, 0, 1308, 266, 0, 266, 0, 0, 0,
	0, 0, 1308, 0, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 1313, 878, 0, 0, 94, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1805, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 881, 880, 0, 0, 0, 2048, 0,
	1313, 1313, 0, 0, 0, 0, 0, 0, 74, 0,
	2048, 3270, 3271, 2048, 3288, 3289, 3290, 0, 0, 0,
	1322, 1322, 0, 0, 78, 0, 4508, 1817, 1471, 0,
	0, 0, 1817, 3701, 0, 0, 0, 1322, 0, 1836,
	3735, 1817, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1471, 0, 0, 87, 0, 4530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1471, 0, 0, 0,
	0, 0, 2048, 0, 0, 0, 3285, 0, 0, 0,
	0, 4550, 1479, 0, 0, 0, 0, 0, 0, 0,
	0, 1471, 0, 0, 884, 0, 0, 0, 0, 0,
	0, 1817, 0, 97, 0, 0, 49, 1817, 107, 1490,
	0, 0, 0, 93, 104, 1801, 1797, 0, 1794, 1792,
	1793, 1785, 1786, 1787, 1788, 1790, 1791, 266, 266, 0,
	1086, 0, 0, 0, 2693, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1086, 0, 1936, 0, 0, 0,
	687, 687, 0, 0, 0, 0, 186, 100, 0, 0,
	103, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3276, 0, 94, 1514, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 1514, 1514,
	2693, 1514, 0, 0, 885, 0, 2688, 0, 0, 149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 3292, 1471, 0, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 0, 0, 0, 0,
	0, 1490, 2688, 0, 0, 0, 0, 0, 1817, 0,
	153, 0, 1313, 0, 0, 773, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 190, 0, 3286, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 1471, 0,
	3495, 0, 0, 0, 0, 229, 0, 0, 2048, 0,
	0, 0, 1490, 266, 1490, 0, 0, 2692, 97, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 189, 0, 0, 0, 1817, 1071, 1978, 0,
	266, 0, 0, 0, 703, 703, 1318, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	2693, 186, 100, 0, 0, 103, 0, 0, 266, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 2860, 266, 885,
	2693, 0, 0, 0, 149, 3325, 0, 3066, 3066, 0,
	0, 0, 0, 890, 890, 2860, 3287, 0, 0, 3037,
	3037, 0, 2688, 890, 2860, 2693, 0, 1471, 0, 0,
	1471, 0, 0, 0, 0, 0, 0, 0, 3352, 236,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 3365, 0, 0, 0, 0, 0, 0,
	0, 0, 2688, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3385, 0,
	190, 0, 0, 0, 0, 0, 0, 2688, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 1471, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4070, 0, 1471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3282, 3283, 3284, 0,
	0, 0, 0, 3281, 3279, 3280, 3272, 3273, 3274, 3275,
	3277, 3278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	1514, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1318, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 1318, 0, 0, 0, 0, 0, 0,
	2860, 2860, 0, 3495, 2860, 0, 74, 0, 0, 0,
	0, 4156, 0, 4156, 1514, 0, 1471, 0, 0, 0,
	0, 0, 78, 0, 0, 2860, 0, 3432, 0, 0,
	0, 1514, 1514, 266, 1978, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3365, 0, 1978, 0, 266,
	1978, 0, 266, 0, 3495, 0, 0, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 2860,
	0, 2860, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1490, 1490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 884, 0, 0, 0, 0, 2860, 0, 0,
	0, 0, 4241, 1817, 0, 0, 107, 0, 0, 0,
	0, 93, 104, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1490, 0, 0, 0,
	0, 0, 4156, 0, 0, 1514, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 1817,
	94, 2261, 0, 0, 1484, 0, 0, 1385, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 0, 0,
	1333, 0, 0, 1817, 0, 1817, 1817, 1817, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 2692, 2692, 0,
	0, 0, 0, 3714, 0, 0, 0, 1071, 1071, 1071,
	0, 0, 1817, 0, 0, 0, 0, 2860, 0, 3432,
	3730, 0, 4353, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	1313, 4377, 0, 4377, 0, 0, 2783, 0, 0, 0,
	0, 0, 0, 1471, 0, 0, 0, 0, 0, 0,
	1516, 0, 1522, 1817, 1528, 0, 97, 773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3495, 1471,
	1308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 1978, 1817, 266, 0, 1817,
	0, 0, 1817, 0, 0, 0, 0, 0, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 0, 0, 0, 0, 186,
	100, 0, 4353, 103, 0, 0, 0, 0, 0, 0,
	2860, 1617, 0, 1622, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1631, 0, 1636, 1490, 0, 4457, 234,
	0, 0, 0, 3822, 0, 0, 0, 885, 0, 0,
	1514, 0, 149, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4156, 4156, 1817, 0, 0, 3291, 0, 2692,
	2692, 2692, 2692, 0, 0, 0, 1817, 0, 1817, 0,
	266, 266, 0, 1817, 0, 0, 0, 236, 0, 0,
	0, 1471, 0, 1471, 0, 0, 0, 0, 0, 0,
	0, 0, 1701, 0, 3735, 1707, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 0, 1514,
	0, 1471, 1514, 3495, 4524, 0, 0, 0, 190, 0,
	0, 4353, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 4156, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 4156, 0, 0, 0,
	0, 2663, 2664, 2665, 2666, 2659, 2660, 2661, 2662, 0,
	0, 1471, 0, 0, 0, 189, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 1471, 0, 0,
	703, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 0,
	0, 0, 0, 0, 0, 0, 0, 4241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4156, 1858, 266, 4156, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 3432, 0, 0, 0,
	0, 0, 0, 2639, 2640, 2641, 2642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1471, 0, 0,
	0, 0, 1514, 0, 1514, 0, 2651, 2652, 2653, 2654,
	2647, 2648, 2649, 2650, 2655, 2656, 2657, 2658, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 4634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1471, 0, 0, 4377, 74, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1514,
	78, 0, 1514, 0, 0, 1930, 1930, 1930, 0, 0,
	1471, 2860, 2635, 2636, 2637, 2638, 2643, 2644, 2645, 2646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 1817, 1817,
	87, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1471, 0, 0, 0, 0, 1781, 1782, 0, 3735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1313, 0, 0, 1471, 1514, 0, 1812,
	884, 0, 0, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 49, 0, 107, 0, 0, 0, 0, 93,
	104, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 0, 1086, 0, 0, 0, 0, 0, 0,
	0, 1803, 0, 0, 0, 0, 0, 0, 2261, 0,
	1800, 0, 0, 0, 1471, 0, 0, 0, 0, 4353,
	4105, 1156, 1071, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4119, 0,
	0, 0, 0, 0, 0, 0, 0, 2860, 0, 0,
	0, 0, 0, 0, 4156, 0, 4156, 0, 0, 1514,
	0, 0, 0, 0, 0, 0, 1471, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 1807, 1808, 1809, 1817,
	1817, 0, 2692, 2692, 0, 1789, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3291, 3291, 0, 1514,
	1817, 1817, 0, 0, 0, 1514, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 1813, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 3066, 0, 0, 0, 0,
	0, 0, 0, 0, 2860, 0, 0, 0, 0, 1798,
	1799, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	3066, 0, 2692, 2692, 2692, 2692, 2692, 2692, 2692, 2692,
	2692, 2692, 2692, 2692, 2692, 2692, 2692, 2692, 2692, 2692,
	2692, 2692, 1804, 2692, 3291, 3291, 3291, 3291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 100, 0,
	0, 103, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 1385, 0, 0,
	0, 0, 0, 1086, 1086, 0, 0, 234, 1247, 0,
	0, 0, 0, 0, 0, 885, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 1834, 0, 4313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4313, 0,
	0, 0, 0, 74, 0, 0, 0, 0, 1810, 0,
	0, 153, 2261, 0, 0, 0, 0, 0, 0, 78,
	0, 0, 0, 2450, 0, 0, 190, 0, 0, 0,
	0, 1805, 1313, 0, 235, 0, 0, 2363, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 228, 1086, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1611, 0, 0, 0, 0, 0, 1836,
	0, 2450, 0, 0, 0, 0, 0, 0, 0, 884,
	0, 0, 0, 0, 0, 0, 2425, 0, 2429, 0,
	0, 49, 0, 107, 0, 2443, 0, 0, 93, 104,
	0, 0, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459,
	2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469,
	2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479,
	2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 0, 2493,
	0, 2495, 2496, 2497, 2498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 1797, 94, 1794, 1792,
	1793, 1785, 1786, 1787, 1788, 1790, 1791, 2522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 0, 2573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2603,
	2606, 2609, 2612, 0, 0, 2618, 2619, 2620, 2621, 2622,
	2623, 2624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2684, 0, 2696, 2698, 2703, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 1817,
	0, 0, 1817, 3291, 3291, 1817, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 3270, 3271, 0,
	3288, 3289, 3290, 97, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 1817, 1817, 1817, 1817, 0, 0, 0,
	0, 0, 1817, 0, 1817, 0, 0, 3291, 3291, 3291,
	3291, 3291, 3291, 3291, 3291, 3291, 3291, 3291, 3291, 3291,
	3291, 3291, 3291, 3291, 3291, 3291, 3291, 0, 0, 0,
	3291, 0, 0, 1817, 1817, 0, 186, 100, 0, 0,
	103, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 3285, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 1490, 0, 0, 885, 0, 0, 0, 0, 149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 1247, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 1817, 0, 0, 0, 3276, 0, 0, 0,
	1247, 0, 0, 0, 1247, 190, 0, 0, 0, 0,
	0, 1247, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 1313, 0,
	0, 0, 0, 0, 0, 229, 0, 3293, 0, 0,
	1781, 1782, 0, 0, 0, 1247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3292, 1609, 1812, 0, 0, 0, 0, 0, 0,
	1784, 1247, 0, 0, 0, 0, 0, 2998, 2999, 0,
	3001, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1247, 0, 0, 0, 0, 1837, 0, 1247, 0,
	0, 0, 1817, 3286, 0, 1783, 0, 1781, 1782, 0,
	0, 0, 1247, 0, 0, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 1817,
	0, 0, 0, 1817, 1817, 0, 0, 1817, 1817, 0,
	0, 0, 1817, 1837, 0, 0, 1817, 1247, 0, 0,
	0, 1817, 1783, 0, 0, 0, 1834, 0, 3691, 0,
	0, 0, 1803, 0, 0, 0, 2692, 0, 0, 0,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 1806,
	1807, 1808, 1809, 0, 0, 0, 0, 0, 0, 1789,
	0, 0, 3125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2692, 0, 0, 3690, 0, 0, 0, 0,
	0, 0, 3287, 0, 0, 0, 0, 1811, 1813, 0,
	0, 0, 0, 0, 0, 0, 1806, 1807, 1808, 1809,
	0, 0, 0, 0, 0, 0, 1789, 0, 0, 1838,
	1839, 0, 0, 1798, 1799, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1781, 1782, 0,
	1814, 1815, 1816, 1825, 1826, 1827, 1804, 0, 0, 0,
	0, 0, 0, 0, 1811, 1813, 0, 0, 0, 1818,
	1812, 0, 0, 0, 0, 3179, 3180, 1784, 0, 0,
	0, 3186, 0, 0, 0, 0, 1831, 0, 0, 0,
	1798, 1799, 0, 0, 0, 0, 0, 0, 0, 0,
	3200, 3201, 0, 1837, 0, 0, 2573, 0, 0, 0,
	0, 0, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1803, 1804, 0, 0, 0, 0, 0, 1834,
	0, 1800, 3282, 3283, 3284, 0, 0, 0, 0, 3281,
	3279, 3280, 3272, 3273, 3274, 3275, 3277, 3278, 1817, 1817,
	1817, 3210, 0, 0, 0, 0, 0, 0, 0, 1817,
	1817, 3291, 2692, 0, 0, 0, 0, 3224, 1817, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 1247, 3236, 1247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	1247, 3291, 2692, 0, 0, 1805, 1806, 1807, 1808, 1809,
	0, 0, 0, 0, 0, 0, 1789, 0, 1817, 2013,
	0, 0, 0, 1247, 0, 0, 1817, 2692, 0, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 1810,
	0, 0, 0, 0, 1822, 0, 0, 1832, 0, 0,
	0, 0, 0, 1836, 1811, 1813, 0, 0, 0, 0,
	0, 0, 1805, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 1829, 0, 0, 2703, 2703, 2703, 1247,
	1798, 1799, 0, 0, 0, 0, 0, 0, 0, 0,
	1247, 1930, 0, 0, 0, 0, 0, 0, 1820, 3329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1804, 0, 1247, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3291, 1801,
	1797, 0, 1794, 1792, 1793, 1785, 1786, 1787, 1788, 1790,
	1791, 0, 0, 0, 0, 0, 0, 1830, 0, 1817,
	3291, 0, 0, 1817, 0, 3270, 3271, 0, 3288, 3289,
	3290, 0, 0, 0, 0, 1819, 0, 0, 0, 0,
	3291, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1071, 1801, 1797, 0, 1794,
	1792, 1793, 1785, 1786, 1787, 1788, 1790, 1791, 1817, 1071,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	3285, 0, 0, 0, 0, 0, 0, 1247, 1247, 0,
	0, 0, 3451, 0, 0, 0, 0, 1247, 0, 0,
	0, 0, 1805, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 1782, 0, 0, 0, 0, 1825,
	1826, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 1784, 3276, 0, 0, 1817, 0, 0,
	0, 0, 1831, 0, 0, 0, 0, 0, 0, 0,
	0, 1247, 0, 1247, 0, 1247, 0, 0, 1817, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 0,
	0, 1247, 1247, 0, 0, 0, 0, 0, 1803, 0,
	0, 0, 1247, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 1821, 0, 1247, 0, 1247, 1247, 1247, 3292,
	0, 0, 1795, 1796, 1802, 1824, 1801, 1797, 0, 1794,
	1792, 1793, 1785, 1786, 1787, 1788, 1790, 1791, 0, 0,
	0, 0, 4078, 0, 0, 0, 4077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 1807, 1808, 1809, 0, 0, 0, 0,
	73, 0, 1789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 74, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 0, 0, 0,
	1822, 0, 0, 1832, 1834, 0, 0, 0, 0, 0,
	1811, 1813, 0, 2013, 2013, 1247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 87, 0, 0, 1798, 1799, 2443, 0,
	0, 0, 0, 0, 3688, 3689, 0, 0, 3692, 0,
	0, 0, 3695, 0, 1820, 0, 0, 0, 0, 0,
	0, 3699, 0, 0, 0, 0, 0, 0, 0, 1804,
	3706, 0, 0, 884, 0, 3329, 0, 0, 0, 0,
	3287, 0, 0, 0, 0, 0, 0, 107, 0, 0,
	3719, 0, 93, 104, 0, 0, 0, 0, 0, 1781,
	1782, 0, 1814, 1815, 1816, 1825, 1826, 1827, 1247, 0,
	3742, 3743, 0, 3744, 3745, 3746, 0, 0, 0, 0,
	0, 1818, 1812, 0, 0, 0, 0, 0, 0, 1784,
	0, 3752, 0, 0, 0, 3754, 0, 0, 1831, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 0, 3783, 3784,
	0, 1247, 0, 0, 1803, 0, 0, 0, 1247, 0,
	0, 0, 0, 1800, 0, 0, 3795, 1247, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 3804, 0, 0, 1247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1805, 0,
	3282, 3283, 3284, 0, 0, 0, 0, 3281, 3279, 3280,
	3272, 3273, 3274, 3275, 3277, 3278, 0, 0, 1120, 0,
	0, 0, 0, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 1807,
	1808, 1809, 0, 0, 0, 0, 0, 0, 1789, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 3852, 0, 0, 265, 265, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 0,
	3863, 0, 0, 0, 0, 0, 1822, 0, 0, 1832,
	0, 1247, 1247, 816, 0, 0, 1811, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 3892, 1829, 0, 0, 0, 816,
	0, 0, 1798, 1799, 0, 0, 0, 0, 1821, 0,
	186, 100, 0, 1247, 103, 0, 0, 0, 0, 0,
	1820, 1824, 1801, 1797, 0, 1794, 1792, 1793, 1785, 1786,
	1787, 1788, 1790, 1791, 0, 1804, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 2013, 885, 0,
	0, 0, 0, 149, 0, 0, 0, 0, 733, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 716, 1830,
	0, 0, 0, 717, 0, 1247, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 0, 0,
	0, 1247, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 190,
	1930, 0, 0, 719, 0, 1243, 0, 235, 0, 4002,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1247,
	228, 0, 0, 0, 720, 0, 0, 0, 0, 229,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 739, 0, 0, 0,
	1247, 0, 0, 0, 1805, 0, 189, 0, 0, 0,
	0, 0, 1247, 0, 1247, 0, 721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1247,
	0, 1823, 0, 0, 0, 0, 0, 4048, 4049, 722,
	0, 0, 0, 4053, 4054, 0, 0, 0, 4057, 4058,
	0, 0, 0, 0, 0, 0, 4062, 0, 0, 0,
	0, 723, 1836, 0, 724, 0, 0, 4066, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 748, 0, 4071, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 1796, 1802, 1824, 1801, 1797,
	0, 1794, 1792, 1793, 1785, 1786, 1787, 1788, 1790, 1791,
	0, 0, 0, 0, 3245, 735, 0, 0, 3246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 1782, 0, 1814,
	1815, 1816, 1825, 1826, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 1812,
	0, 0, 0, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 0, 0, 745, 1831, 726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 0, 0, 0, 746, 0, 727, 0, 0,
	0, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 747, 0, 0, 0, 0,
	0, 0, 0, 728, 0, 0, 0, 0, 743, 744,
	741, 0, 0, 0, 0, 0, 736, 0, 0, 729,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 1807, 1808, 1809, 0,
	0, 0, 0, 0, 0, 1789, 0, 0, 0, 0,
	0, 730, 0, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 732, 4308, 4309, 4310,
	0, 740, 0, 1822, 1109, 109, 1832, 0, 0, 0,
	0, 0, 0, 1811, 1813, 749, 0, 0, 0, 0,
	2443, 0, 0, 4319, 4320, 0, 734, 1247, 1247, 0,
	1828, 0, 1829, 0, 0, 0, 0, 0, 0, 1798,
	1799, 4328, 4331, 1247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 265, 265, 1820, 0, 265,
	0, 1247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1804, 1247, 0, 0, 1247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2013, 109, 0,
	0, 1247, 4378, 0, 0, 0, 265, 0, 265, 265,
	0, 4386, 265, 265, 0, 0, 1830, 1247, 1247, 0,
	0, 0, 0, 0, 0, 4394, 0, 0, 1071, 0,
	0, 816, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 4403, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1247, 0, 0, 0, 0, 2013,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 265, 0, 1046, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1066, 0, 0, 0, 1810, 0,
	0, 0, 0, 1247, 0, 0, 265, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 733, 0,
	0, 1805, 0, 0, 0, 1247, 0, 1247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 716, 0,
	0, 1230, 0, 717, 0, 0, 1247, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 1247, 0, 0,
	0, 1247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 718, 0, 0, 0, 0, 0, 1247, 0,
	0, 0, 0, 719, 0, 0, 0, 0, 0, 0,
	0, 0, 1247, 0, 1247, 0, 265, 4529, 1247, 0,
	0, 4533, 0, 0, 720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1247, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 739, 0, 1247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 0, 0, 0, 1247, 721, 0, 0, 0,
	0, 1795, 1796, 1802, 1824, 1801, 1797, 0, 1794, 1792,
	1793, 1785, 1786, 1787, 1788, 1790, 1791, 0, 0, 722,
	1247, 1247, 0, 0, 0, 4076, 0, 0, 1071, 1071,
	0, 0, 0, 0, 0, 0, 0, 0, 4588, 0,
	0, 723, 0, 1247, 724, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 748, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 738, 1247, 0, 0,
	1247, 0, 2443, 0, 0, 0, 0, 0, 0, 0,
	0, 4331, 0, 1781, 1782, 0, 1814, 1815, 1816, 1825,
	1826, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1818, 1812, 0, 0, 0,
	0, 0, 0, 1784, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 1071, 0, 735, 0, 2013, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 1247, 0, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1803, 0,
	0, 0, 0, 1247, 0, 0, 0, 1800, 0, 0,
	1952, 0, 1243, 2013, 2013, 0, 265, 0, 0, 0,
	0, 0, 0, 4707, 4707, 4707, 0, 0, 0, 0,
	0, 0, 265, 1952, 265, 0, 726, 0, 0, 0,
	816, 0, 2013, 2013, 0, 0, 0, 816, 0, 0,
	0, 0, 0, 0, 4728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 746, 0, 727, 0, 0,
	0, 0, 0, 0, 265, 2013, 0, 0, 0, 0,
	0, 265, 1806, 1807, 1808, 1809, 0, 0, 0, 0,
	0, 0, 1789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1247, 1247, 0, 747, 0, 0, 0, 0,
	0, 4707, 0, 728, 0, 0, 0, 0, 743, 744,
	741, 0, 0, 0, 0, 0, 736, 0, 0, 729,
	1822, 0, 0, 1832, 0, 0, 1247, 0, 0, 0,
	1811, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 1829,
	0, 0, 0, 0, 0, 0, 1798, 1799, 0, 0,
	0, 730, 0, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 731, 0, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 732, 0, 0, 1804,
	0, 740, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 734, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4707, 4863, 0, 1830, 0, 0, 0, 0, 0, 4867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 816, 0, 0, 109,
	0, 109, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1247,
	0, 0, 0, 0, 1247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2013, 265,
	0, 0, 0, 265, 1066, 109, 109, 0, 1805, 265,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	109, 0, 109, 0, 0, 0, 0, 0, 0, 1247,
	0, 265, 109, 265, 109, 1823, 0, 0, 0, 265,
	0, 0, 0, 1247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1247, 1247, 1247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 1247, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 265, 0, 0, 0, 1247, 0, 0,
	0, 0, 0, 1247, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 816, 265, 1247,
	265, 0, 265, 0, 265, 0, 265, 0, 0, 0,
	2013, 0, 0, 0, 0, 0, 0, 0, 1821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 1796,
	1802, 1824, 1801, 1797, 0, 1794, 1792, 1793, 1785, 1786,
	1787, 1788, 1790, 1791, 0, 0, 0, 0, 265, 265,
	265, 265, 3704, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1046, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1133, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1247,
	0, 0, 1857, 0, 0, 0, 1863, 1247, 0, 0,
	0, 1247, 0, 1247, 0, 0, 0, 0, 0, 0,
	1247, 0, 267, 267, 267, 0, 0, 0, 0, 0,
	0, 1247, 1247, 0, 0, 0, 0, 0, 0, 0,
	0, 1247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1247, 0, 1247, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1247, 0, 1247, 0, 0, 1247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1247, 0, 0,
	0, 0, 0, 0, 0, 0, 1950, 0, 1953, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1243, 0,
	0, 0, 0, 0, 0, 1247, 1247, 0, 0, 0,
	159, 0, 0, 0, 1243, 0, 0, 0, 73, 0,
	46, 45, 0, 0, 0, 1247, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 74, 0, 1247, 154, 0,
	0, 0, 1247, 0, 0, 0, 265, 0, 0, 0,
	0, 78, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 67, 0, 0, 0, 0, 1247, 0, 48,
	0, 156, 0, 0, 0, 0, 0, 1247, 1247, 1247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 47,
	1247, 87, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 50, 68, 265,
	1247, 0, 0, 265, 0, 265, 51, 1236, 0, 0,
	0, 57, 265, 265, 0, 157, 0, 0, 0, 0,
	0, 2013, 265, 49, 0, 107, 0, 0, 0, 0,
	93, 104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1247, 0, 1247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 261, 683, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1247, 0, 0, 0,
	0, 52, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 94,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2013, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 1247, 0, 0, 0, 0, 0,
	0, 1247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1247, 1247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 816, 0, 1247, 0, 0, 1247,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1247, 1247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1066, 97, 1066, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 53, 0, 2013, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 56, 0, 0,
	0, 265, 59, 265, 0, 0, 0, 0, 0, 0,
	0, 69, 0, 0, 265, 0, 0, 58, 186, 100,
	0, 0, 103, 0, 0, 0, 54, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 1247, 0, 55, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 1247, 0, 0, 109, 0, 62, 0, 0, 0,
	0, 149, 0, 265, 265, 265, 265, 0, 0, 0,
	0, 0, 265, 0, 0, 265, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 1247, 0,
	0, 1247, 153, 0, 0, 1247, 0, 0, 1046, 0,
	0, 1046, 1046, 0, 0, 1247, 1247, 190, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 1247, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 267, 0, 267, 267, 0, 0, 267, 0, 1331,
	0, 0, 0, 0, 0, 0, 0, 2511, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 3, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1066, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 1857, 0, 0, 267, 1331, 267, 267, 0, 1331,
	267, 267, 0, 0, 0, 0, 1331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1230, 0, 1331, 0, 267, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 1331, 0, 0, 0,
	0, 0, 0, 1331, 267, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1331, 1781, 1782,
	0, 1814, 1815, 1816, 1825, 1826, 1827, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1818, 1812, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 1243, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 1837, 0, 0, 0, 0, 0,
	1243, 0, 0, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1803, 0, 0, 0, 0, 0, 1247,
	0, 1247, 1800, 0, 267, 0, 0, 0, 0, 0,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1294, 0, 1294, 1294, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 265, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 1807, 1808,
	1809, 0, 0, 0, 0, 0, 0, 1789, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 1382, 0, 0, 0, 0,
	0, 1488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 1811, 1813, 265, 265, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 1952, 0,
	0, 0, 1828, 0, 1829, 0, 0, 0, 0, 0,
	0, 1798, 1799, 265, 109, 0, 0, 109, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1615, 1616, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 109, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 816, 0, 267, 0, 1819, 0, 0, 0,
	265, 0, 0, 0, 265, 1331, 0, 1834, 0, 0,
	267, 267, 267, 0, 0, 0, 834, 0, 267, 0,
	0, 0, 265, 0, 0, 267, 0, 0, 1331, 0,
	0, 0, 1243, 0, 0, 109, 836, 0, 0, 0,
	0, 837, 0, 0, 0, 1728, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 267,
	1810, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	838, 0, 855, 1805, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1331, 0, 839, 0, 0,
	1823, 0, 840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 265, 0,
	1331, 0, 0, 0, 864, 0, 0, 0, 0, 0,
	841, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 2511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 835, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 1782, 1857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 842,
	0, 0, 843, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 1821, 866, 0, 1784, 0, 0, 748,
	0, 0, 0, 1795, 1796, 1802, 1824, 1801, 1797, 0,
	1794, 1792, 1793, 1785, 1786, 1787, 1788, 1790, 1791, 0,
	0, 0, 1837, 2569, 0, 0, 0, 2570, 0, 0,
	0, 1783, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 1803, 1331, 1331, 267, 0, 0, 0, 0, 0,
	1800, 0, 1331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 865, 0, 1968, 0, 0, 0, 0,
	0, 0, 0, 860, 0, 0, 0, 0, 0, 0,
	0, 1979, 0, 1488, 0, 0, 0, 267, 0, 1243,
	1243, 267, 0, 0, 3185, 0, 0, 267, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 1807, 1808, 1809, 267,
	0, 267, 0, 1294, 0, 1789, 0, 267, 0, 0,
	1488, 0, 808, 844, 0, 0, 1331, 0, 1331, 0,
	1331, 0, 0, 0, 846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1331, 1331, 808, 0,
	1230, 0, 0, 0, 0, 0, 0, 1331, 267, 0,
	0, 267, 0, 1811, 1813, 847, 1230, 0, 0, 1331,
	0, 1331, 1331, 1331, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 1798,
	1799, 856, 0, 0, 0, 267, 267, 0, 267, 0,
	267, 0, 267, 747, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 833, 0, 857, 0,
	0, 0, 1804, 0, 0, 0, 0, 848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 267, 267, 267,
	0, 0, 854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 849,
	0, 0, 0, 850, 869, 0, 868, 0, 0, 0,
	851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 852, 1834, 0, 0, 0, 861,
	1331, 0, 0, 0, 0, 870, 0, 867, 0, 0,
	265, 0, 0, 749, 109, 109, 0, 109, 109, 109,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1243, 0, 109, 109, 0, 109, 109, 109, 0, 0,
	0, 1805, 0, 0, 0, 0, 0, 0, 2247, 0,
	0, 0, 2254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1331, 2267, 0, 0, 0, 0, 0,
	1781, 1782, 0, 0, 0, 0, 0, 0, 265, 0,
	2279, 0, 2279, 0, 0, 0, 0, 0, 2286, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 1836,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 2254,
	0, 0, 2311, 1331, 0, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1803, 0, 0, 1230, 0,
	0, 1066, 0, 2331, 1800, 0, 267, 0, 0, 1331,
	0, 0, 0, 0, 0, 109, 109, 2347, 0, 2349,
	0, 2351, 0, 2353, 267, 2354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 1797, 0, 1794, 1792,
	1793, 1785, 1786, 1787, 1788, 1790, 1791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3178, 0,
	0, 0, 0, 0, 0, 0, 1243, 2380, 2381, 2382,
	0, 0, 0, 267, 1243, 0, 0, 0, 0, 1806,
	1807, 1808, 1809, 0, 0, 0, 0, 1952, 0, 1789,
	0, 0, 0, 0, 267, 0, 0, 267, 0, 0,
	0, 267, 0, 267, 0, 0, 0, 0, 0, 1125,
	267, 267, 0, 0, 0, 0, 1331, 1331, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 0, 1952, 0, 1811, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 1331, 0,
	0, 0, 0, 1798, 1799, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 265, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 265, 0, 1804, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	1331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 1331, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 109, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 1230, 1230, 0, 0, 0,
	267, 0, 267, 0, 1331, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 2760, 0, 0,
	1329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 1331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1331, 0, 1331,
	0, 0, 0, 0, 0, 1805, 0, 0, 0, 0,
	267, 0, 0, 0, 1331, 0, 1388, 0, 0, 0,
	1388, 0, 0, 0, 0, 0, 0, 1329, 0, 267,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2809, 0, 0, 1294, 0,
	0, 1329, 1294, 1836, 1294, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 2267, 0, 0, 0, 0, 0, 1329, 0, 0,
	0, 267, 267, 267, 267, 0, 0, 0, 0, 0,
	267, 0, 0, 267, 0, 0, 0, 1329, 0, 0,
	0, 0, 0, 0, 1329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1329, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 265,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 1801,
	1797, 0, 1794, 1792, 1793, 1785, 1786, 1787, 1788, 1790,
	1791, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1329, 0, 0, 0, 0, 0, 0,
	1488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1230, 0, 0, 0,
	0, 0, 265, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2254, 0, 0, 0, 0, 0, 0, 0, 0,
	2267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 3097, 0, 0, 0, 0, 0, 0, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3108, 0, 3111, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1952, 0, 265, 1952, 0,
	0, 0, 3140, 1488, 3142, 1488, 0, 0, 0, 0,
	0, 3148, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 1230, 1331, 0, 0, 0, 0, 0, 0,
	1230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1294, 0, 0, 0, 0,
	0, 0, 0, 3176, 0, 0, 1331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1388, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 1331, 0, 0, 808,
	0, 0, 0, 0, 0, 0, 808, 0, 0, 1329,
	0, 0, 1331, 1331, 0, 0, 0, 0, 0, 267,
	0, 0, 1330, 267, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 1331,
	0, 0, 0, 0, 0, 0, 0, 0, 1389, 0,
	0, 0, 1389, 0, 0, 1329, 0, 0, 0, 1330,
	0, 0, 0, 0, 0, 0, 1329, 109, 0, 0,
	0, 0, 0, 0, 0, 267, 267, 0, 1331, 267,
	109, 0, 0, 0, 0, 0, 267, 0, 0, 265,
	0, 1388, 0, 1330, 0, 0, 0, 0, 0, 0,
	1331, 267, 1331, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1330,
	0, 1331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 0, 0, 1331, 0, 0, 1330,
	0, 0, 0, 0, 0, 0, 1330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1330, 0, 0, 1331, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 1952, 1331, 1952, 1331,
	0, 0, 0, 1331, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 1331, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1331, 0, 1330, 0, 0, 0, 0,
	267, 0, 0, 1329, 1329, 0, 0, 0, 0, 0,
	0, 0, 0, 1388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1331, 1331, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1294, 0, 0, 0, 1488, 1488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 267, 1331, 267, 1329, 0, 1329,
	0, 1329, 0, 0, 0, 3420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1329, 1329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1329, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	1329, 0, 1329, 1329, 1329, 0, 3470, 3472, 0, 0,
	2267, 0, 2511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 808, 0, 0, 0,
	0, 1331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3573,
	0, 1388, 0, 3577, 0, 0, 0, 0, 1389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1330, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 3630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1388, 0, 0, 1330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3673, 0, 1488, 0, 0,
	0, 0, 0, 1389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3686, 1388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	1388, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1331, 0, 0, 0, 0, 1331,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 1330, 1330, 0, 267, 0,
	0, 0, 0, 267, 0, 1389, 0, 0, 267, 0,
	0, 0, 0, 0, 1331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1329, 1329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1331,
	1331, 1331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1388,
	0, 0, 1331, 0, 0, 0, 267, 0, 1331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1330,
	0, 1330, 0, 1330, 1331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1330,
	1330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1388, 1330, 0, 1330, 1330, 1330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 808, 0, 1329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1331, 0, 1331, 0,
	0, 0, 0, 0, 0, 0, 1329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1331, 1331, 1329, 0,
	1329, 0, 0, 0, 0, 0, 1331, 0, 0, 0,
	0, 2267, 0, 0, 0, 1329, 0, 0, 0, 0,
	0, 0, 0, 1389, 0, 0, 0, 0, 0, 2267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3966,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 2267, 0, 1331, 0, 0, 3984,
	0, 0, 0, 0, 0, 0, 1331, 0, 1331, 267,
	0, 1331, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1389, 0, 0, 0,
	1331, 1331, 0, 0, 0, 0, 0, 4033, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1331, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 267, 0, 0, 0, 1331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1389, 0, 0, 0,
	0, 0, 1331, 1331, 1331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1331, 0, 0, 0, 0,
	0, 0, 1389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 1782, 0, 1814, 1815, 1816, 1825, 1826, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 1812, 0, 0, 1331, 0, 1331, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 0, 0, 0, 0, 1837, 0, 0, 0,
	0, 267, 0, 0, 0, 1783, 0, 0, 0, 1330,
	1330, 0, 0, 0, 0, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4175, 0, 0, 0, 0, 0,
	0, 1389, 0, 0, 0, 0, 0, 0, 0, 1331,
	2267, 0, 0, 0, 0, 0, 1331, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 1331, 1331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	1807, 1808, 1809, 0, 1388, 0, 0, 0, 0, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 0, 1389, 1331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2267, 0, 0, 1388, 0, 1330,
	0, 0, 0, 0, 4263, 0, 0, 1822, 0, 0,
	1832, 0, 1388, 0, 0, 0, 0, 1811, 1813, 0,
	267, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 1829, 1388, 0, 0,
	0, 0, 0, 1798, 1799, 0, 0, 1330, 0, 0,
	0, 0, 0, 1329, 1329, 0, 0, 0, 0, 0,
	0, 1820, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 0, 1330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1330, 0, 1330, 0, 0, 0, 0, 0, 0, 0,
	1329, 0, 0, 0, 0, 0, 0, 1330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 1329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1329, 4363, 1329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	1331, 0, 1388, 0, 0, 0, 0, 0, 0, 0,
	1331, 1331, 0, 1329, 0, 0, 0, 1329, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 1331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1329, 1805, 0, 0, 2267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1329, 0,
	1329, 0, 0, 0, 1388, 0, 0, 0, 0, 0,
	0, 808, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1329, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 1329, 0, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 1329, 1329, 0, 0,
	0, 4498, 1488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 1796, 1802, 1824, 1801,
	1797, 0, 1794, 1792, 1793, 1785, 1786, 1787, 1788, 1790,
	1791, 0, 0, 1388, 0, 0, 1388, 267, 0, 3248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 1782, 0, 1814, 1815, 1816, 1825, 1826, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 1812, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 0,
	0, 0, 1388, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1803, 4593, 0, 0, 1388,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1389, 0, 0, 0, 0, 1806,
	1807, 1808, 1809, 0, 0, 0, 0, 4645, 0, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1330, 1330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 0,
	1832, 0, 1388, 4684, 0, 0, 0, 1811, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 1829, 0, 0, 0,
	0, 0, 1330, 1798, 1799, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 0, 0, 0,
	0, 1330, 0, 0, 0, 0, 0, 0, 4748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1330, 0, 1330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 1389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1330, 0, 0, 1819, 1330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1330, 0, 1330, 0, 0, 1329, 1389, 0, 0, 0,
	1329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 1330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1330, 0, 0, 0,
	0, 0, 0, 0, 0, 1805, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1329, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 1330, 1330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1329, 1329, 1329, 0, 0, 0, 0, 0, 0, 0,
	0, 1330, 0, 1836, 0, 0, 0, 1329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1329, 0, 0, 0, 0, 0, 1388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1389, 0, 0, 1389, 0,
	0, 0, 0, 0, 0, 1388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 1796, 1802, 1824, 1801,
	1797, 0, 1794, 1792, 1793, 1785, 1786, 1787, 1788, 1790,
	1791, 0, 0, 0, 0, 0, 0, 0, 0, 3247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1389, 0, 1781, 1782, 0, 1814,
	1815, 1816, 1825, 1826, 1827, 0, 0, 0, 0, 0,
	0, 1389, 0, 0, 0, 0, 0, 0, 1818, 1812,
	0, 0, 0, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1388, 0, 1388,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 0, 0, 0, 0, 0, 1329, 1329, 0,
	0, 1803, 0, 0, 0, 0, 0, 1388, 0, 0,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1388, 0, 1329,
	0, 0, 1329, 0, 1389, 0, 0, 0, 0, 0,
	0, 0, 0, 1388, 0, 1806, 1807, 1808, 1809, 0,
	0, 0, 0, 0, 0, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1329, 1329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 1832, 0, 0, 0,
	0, 1329, 0, 1811, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 1388, 0, 0, 0, 0, 1329, 0,
	1828, 0, 1829, 0, 0, 0, 0, 0, 0, 1798,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 1329, 1329, 1329, 0, 0, 0, 0,
	0, 0, 1804, 0, 0, 0, 1388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 1330, 0, 0,
	0, 0, 1330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 0, 1388, 0, 1329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1388, 0, 0, 0, 0, 1330, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 1782, 0, 1814,
	1815, 1816, 1825, 1826, 1827, 0, 0, 0, 1810, 0,
	0, 0, 1330, 1330, 1330, 0, 0, 0, 1818, 1812,
	0, 0, 0, 0, 0, 0, 1784, 0, 0, 1330,
	0, 1805, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1330, 0, 0, 0, 0,
	1388, 1389, 1837, 0, 0, 0, 0, 1329, 1823, 0,
	0, 1783, 0, 0, 0, 0, 0, 1329, 1329, 0,
	0, 1803, 0, 0, 0, 0, 0, 1389, 0, 0,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1388, 0, 0, 1329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 1807, 1808, 1809, 0,
	0, 1821, 0, 0, 0, 1789, 0, 0, 0, 0,
	0, 1795, 1796, 1802, 1824, 1801, 1797, 0, 1794, 1792,
	1793, 1785, 1786, 1787, 1788, 1790, 1791, 0, 0, 0,
	0, 0, 0, 0, 0, 3244, 0, 0, 0, 1389,
	0, 1389, 0, 1822, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 1811, 1813, 0, 0, 0, 0, 1330,
	1330, 0, 0, 0, 0, 0, 0, 0, 0, 1389,
	1828, 0, 1829, 0, 0, 0, 0, 0, 0, 1798,
	1799, 0, 0, 0, 1781, 1782, 0, 1814, 1815, 1816,
	1825, 1826, 1827, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 1804, 0, 1784, 0, 0, 0, 0, 1330,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 1389,
	0, 1330, 0, 0, 1330, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 1389, 0, 0, 0, 1783,
	0, 1329, 0, 0, 0, 0, 1830, 0, 0, 1803,
	0, 1329, 1329, 0, 0, 0, 0, 0, 1800, 0,
	0, 0, 0, 0, 1819, 0, 0, 0, 1329, 0,
	0, 0, 0, 1330, 1330, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1389, 0, 0, 0, 0,
	1330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 1806, 1807, 1808, 1809, 0, 0, 0,
	0, 0, 0, 1789, 0, 1330, 1330, 1330, 0, 0,
	0, 1805, 0, 0, 0, 0, 0, 0, 1389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1823, 0,
	0, 1822, 0, 0, 1832, 0, 0, 0, 1389, 0,
	0, 1811, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 1798, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1389,
	0, 1330, 0, 0, 0, 1820, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 0, 0, 0, 1389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 1796, 1802, 1824, 1801, 1797, 0, 1794, 1792,
	1793, 1785, 1786, 1787, 1788, 1790, 1791, 0, 0, 0,
	0, 0, 0, 0, 0, 3243, 0, 0, 0, 0,
	0, 0, 1389, 1834, 0, 0, 0, 0, 0, 1330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1330,
	1330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 0, 0, 0, 1389, 0, 0, 1330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1805,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	1796, 1802, 1824, 1801, 1797, 0, 1794, 1792, 1793, 1785,
	1786, 1787, 1788, 1790, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1386, 0, 0, 1330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1330, 1330, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 1391, 282, 283, 1392, 1393, 1394,
	1330, 1395, 629, 1396, 1397, 1398, 1399, 284, 285, 1187,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 1400, 634, 294, 295, 296, 297, 298,
	299, 1401, 1402, 0, 300, 635, 636, 637, 1403, 301,
	302, 638, 1404, 1332, 1405, 303, 304, 305, 306, 307,
	308, 309, 0, 1406, 311, 312, 313, 310, 314, 1407,
	315, 0, 316, 317, 318, 319, 320, 321, 1408, 322,
	323, 324, 1188, 325, 326, 327, 1409, 1410, 1412, 1411,
	1413, 1414, 1415, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 1416, 337, 334, 335, 1417, 338, 336, 339,
	1418, 340, 341, 342, 1419, 1420, 343, 344, 345, 1421,
	346, 347, 1422, 348, 349, 350, 1423, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 1424, 272, 1425, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 1426, 369,
	370, 1427, 1428, 1189, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 1429, 383,
	647, 1430, 648, 384, 1431, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 1191, 390, 391, 1432, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 1433, 1190, 400, 652, 653, 1434, 654, 1435, 402,
	403, 1192, 655, 1193, 404, 405, 406, 1194, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 1436, 414,
	416, 415, 1437, 417, 656, 1195, 418, 419, 1196, 1438,
	420, 0, 0, 0, 421, 422, 425, 1439, 1440, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1197, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1198, 465, 454, 1441, 274, 1199, 466, 467,
	1442, 657, 468, 658, 470, 471, 1443, 0, 472, 0,
	1444, 1445, 474, 475, 476, 1446, 1447, 477, 478, 659,
	1200, 479, 1201, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 1448, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 1449, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 1450, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	1451, 530, 531, 532, 1202, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 1452, 555, 556, 554, 557,
	558, 559, 1453, 560, 561, 543, 544, 562, 563, 1203,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	1454, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 1455, 587, 588,
	0, 584, 575, 1456, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 1457, 597, 670, 671, 672, 673, 1458,
	606, 1459, 598, 599, 600, 674, 601, 675, 1460, 602,
	603, 604, 605, 0, 607, 608, 1461, 1462, 609, 610,
	611, 613, 614, 612, 615, 1463, 616, 1464, 0, 617,
	618, 619, 676, 677, 678, 1465, 621, 620, 622, 679,
	1466, 623, 1467, 1468, 1469, 1470, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1386, 0, 0, 0, 0, 0, 0, 0, 2738,
	0, 0, 0, 0, 0, 0, 0, 2739, 275, 277,
	276, 278, 279, 280, 281, 1391, 282, 283, 1392, 1393,
	1394, 0, 1395, 629, 1396, 1397, 1398, 1399, 284, 285,
	1187, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 1400, 634, 294, 295, 296, 297,
	298, 299, 1401, 1402, 0, 300, 635, 636, 637, 1403,
	301, 302, 638, 1404, 1332, 1405, 303, 304, 305, 306,
	307, 308, 309, 0, 1406, 311, 312, 313, 310, 314,
	1407, 315, 0, 316, 317, 318, 319, 320, 321, 1408,
	322, 323, 324, 1188, 325, 326, 327, 1409, 1410, 1412,
	1411, 1413, 1414, 1415, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 1416, 337, 334, 335, 1417, 338, 336,
	339, 1418, 340, 341, 342, 1419, 1420, 343, 344, 345,
	1421, 346, 347, 1422, 348, 349, 350, 1423, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 1424, 272, 1425, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 1426,
	369, 370, 1427, 1428, 1189, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 1429,
	383, 647, 1430, 648, 384, 1431, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 1191, 390, 391, 1432, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 1433, 1190, 400, 652, 653, 1434, 654, 1435,
	402, 403, 1192, 655, 1193, 404, 405, 406, 1194, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 1436,
	414, 416, 415, 1437, 417, 656, 1195, 418, 419, 1196,
	1438, 420, 0, 0, 0, 421, 422, 425, 1439, 1440,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1197,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1198, 465, 454, 1441, 274, 1199, 466,
	467, 1442, 657, 468, 658, 470, 471, 1443, 0, 472,
	0, 1444, 1445, 474, 475, 476, 1446, 1447, 477, 478,
	659, 1200, 479, 1201, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 1448, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 1449, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 1450,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 1451, 530, 531, 532, 1202, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 1452, 555, 556, 554,
	557, 558, 559, 1453, 560, 561, 543, 544, 562, 563,
	1203, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 1454, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 1455, 587,
	588, 0, 584, 575, 1456, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 1457, 597, 670, 671, 672, 673,
	1458, 606, 1459, 598, 599, 600, 674, 601, 675, 1460,
	602, 603, 604, 605, 0, 607, 608, 1461, 1462, 609,
	610, 611, 613, 614, 612, 615, 1463, 616, 1464, 0,
	617, 618, 619, 676, 677, 678, 1465, 621, 620, 622,
	679, 1466, 623, 1467, 1468, 1469, 1470, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1386, 0, 0, 0, 0, 3713, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3715, 275, 277, 276,
	278, 279, 280, 281, 1391, 282, 283, 1392, 1393, 1394,
	0, 1395, 629, 1396, 1397, 1398, 1399, 284, 285, 1187,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 1400, 634, 294, 295, 296, 297, 298,
	299, 1401, 1402, 0, 300, 635, 636, 637, 1403, 301,
	302, 638, 1404, 1332, 1405, 303, 304, 305, 306, 307,
	308, 309, 0, 1406, 311, 312, 313, 310, 314, 1407,
	315, 0, 316, 317, 318, 319, 320, 321, 1408, 322,
	323, 324, 1188, 325, 326, 327, 1409, 1410, 1412, 1411,
	1413, 1414, 1415, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 1416, 337, 334, 335, 1417, 338, 336, 339,
	1418, 340, 341, 342, 1419, 1420, 343, 344, 345, 1421,
	346, 347, 1422, 348, 349, 350, 1423, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 1424, 272, 1425, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 1426, 369,
	370, 1427, 1428, 1189, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 1429, 383,
	647, 1430, 648, 384, 1431, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 1191, 390, 391, 1432, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 1433, 1190, 400, 652, 653, 1434, 654, 1435, 402,
	403, 1192, 655, 1193, 404, 405, 406, 1194, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 1436, 414,
	416, 415, 1437, 417, 656, 1195, 418, 419, 1196, 1438,
	420, 0, 0, 0, 421, 422, 425, 1439, 1440, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1197, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1198, 465, 454, 1441, 274, 1199, 466, 467,
	1442, 657, 468, 658, 470, 471, 1443, 0, 472, 0,
	1444, 1445, 474, 475, 476, 1446, 1447, 477, 478, 659,
	1200, 479, 1201, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 1448, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 1449, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 1450, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	1451, 530, 531, 532, 1202, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 1452, 555, 556, 554, 557,
	558, 559, 1453, 560, 561, 543, 544, 562, 563, 1203,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	1454, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 1455, 587, 588,
	0, 584, 575, 1456, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 1457, 597, 670, 671, 672, 673, 1458,
	606, 1459, 598, 599, 600, 674, 601, 675, 1460, 602,
	603, 604, 605, 0, 607, 608, 1461, 1462, 609, 610,
	611, 613, 614, 612, 615, 1463, 616, 1464, 0, 617,
	618, 619, 676, 677, 678, 1465, 621, 620, 622, 679,
	1466, 623, 1467, 1468, 1469, 1470, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1386, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4104,
	275, 277, 276, 278, 279, 280, 281, 1391, 282, 283,
	1392, 1393, 1394, 0, 1395, 629, 1396, 1397, 1398, 1399,
	284, 285, 1187, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 1400, 634, 294, 295,
	296, 297, 298, 299, 1401, 1402, 0, 300, 635, 636,
	637, 1403, 301, 302, 638, 1404, 1332, 1405, 303, 304,
	305, 306, 307, 308, 309, 0, 1406, 311, 312, 313,
	310, 314, 1407, 315, 0, 316, 317, 318, 319, 320,
	321, 1408, 322, 323, 324, 1188, 325, 326, 327, 1409,
	1410, 1412, 1411, 1413, 1414, 1415, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 1416, 337, 334, 335, 1417,
	338, 336, 339, 1418, 340, 341, 342, 1419, 1420, 343,
	344, 345, 1421, 346, 347, 1422, 348, 349, 350, 1423,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 1424, 272, 1425, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 1426, 369, 370, 1427, 1428, 1189, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 1429, 383, 647, 1430, 648, 384, 1431, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 1191, 390, 391,
	1432, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 1433, 1190, 400, 652, 653, 1434,
	654, 1435, 402, 403, 1192, 655, 1193, 404, 405, 406,
	1194, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 1436, 414, 416, 415, 1437, 417, 656, 1195, 418,
	419, 1196, 1438, 420, 0, 0, 0, 421, 422, 425,
	1439, 1440, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1197, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1198, 465, 454, 1441, 274,
	1199, 466, 467, 1442, 657, 468, 658, 470, 471, 1443,
	0, 472, 0, 1444, 1445, 474, 475, 476, 1446, 1447,
	477, 478, 659, 1200, 479, 1201, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 1448,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 1449, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 1450, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 1451, 530, 531, 532, 1202, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 1452, 555,
	556, 554, 557, 558, 559, 1453, 560, 561, 543, 544,
	562, 563, 1203, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 1454, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	1455, 587, 588, 0, 584, 575, 1456, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 1457, 597, 670, 671,
	672, 673, 1458, 606, 1459, 598, 599, 600, 674, 601,
	675, 1460, 602, 603, 604, 605, 0, 607, 608, 1461,
	1462, 609, 610, 611, 613, 614, 612, 615, 1463, 616,
	1464, 0, 617, 618, 619, 676, 677, 678, 1465, 621,
	620, 622, 679, 1466, 623, 1467, 1468, 1469, 1470, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 1386, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4314, 275, 277,
	276, 278, 279, 280, 281, 1391, 282, 283, 1392, 1393,
	1394, 0, 1395, 629, 1396, 1397, 1398, 1399, 284, 285,
	1187, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 1400, 634, 294, 295, 296, 297,
	298, 299, 1401, 1402, 0, 300, 635, 636, 637, 1403,
	301, 302, 638, 1404, 1332, 1405, 303, 304, 305, 306,
	307, 308, 309, 0, 1406, 311, 312, 313, 310, 314,
	1407, 315, 0, 316, 317, 318, 319, 320, 321, 1408,
	322, 323, 324, 1188, 325, 326, 327, 1409, 1410, 1412,
	1411, 1413, 1414, 1415, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 1416, 337, 334, 335, 1417, 338, 336,
	339, 1418, 340, 341, 342, 1419, 1420, 343, 344, 345,
	1421, 346, 347, 1422, 348, 349, 350, 1423, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 1424, 272, 1425, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 1426,
	369, 370, 1427, 1428, 1189, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 1429,
	383, 647, 1430, 648, 384, 1431, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 1191, 390, 391, 1432, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 1433, 1190, 400, 652, 653, 1434, 654, 1435,
	402, 403, 1192, 655, 1193, 404, 405, 406, 1194, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 1436,
	414, 416, 415, 1437, 417, 656, 1195, 418, 419, 1196,
	1438, 420, 0, 0, 0, 421, 422, 425, 1439, 1440,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1197,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1198, 465, 454, 1441, 274, 1199, 466,
	467, 1442, 657, 468, 658, 470, 471, 1443, 0, 472,
	0, 1444, 1445, 474, 475, 476, 1446, 1447, 477, 478,
	659, 1200, 479, 1201, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 1448, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 1449, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 1450,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 1451, 530, 531, 532, 1202, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 1452, 555, 556, 554,
	557, 558, 559, 1453, 560, 561, 543, 544, 562, 563,
	1203, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 1454, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 1455, 587,
	588, 0, 584, 575, 1456, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 1457, 597, 670, 671, 672, 673,
	1458, 606, 1459, 598, 599, 600, 674, 601, 675, 1460,
	602, 603, 604, 605, 0, 607, 608, 1461, 1462, 609,
	610, 611, 613, 614, 612, 615, 1463, 616, 1464, 0,
	617, 618, 619, 676, 677, 678, 1465, 621, 620, 622,
	679, 1466, 623, 1467, 1468, 1469, 1470, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 1386,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4184, 275, 277, 276, 278,
	279, 280, 281, 1391, 282, 283, 1392, 1393, 1394, 0,
	1395, 629, 1396, 1397, 1398, 1399, 284, 285, 1187, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 1400, 634, 294, 295, 296, 297, 298, 299,
	1401, 1402, 0, 300, 635, 636, 637, 1403, 301, 302,
	638, 1404, 1332, 1405, 303, 304, 305, 306, 307, 308,
	309, 0, 1406, 311, 312, 313, 310, 314, 1407, 315,
	0, 316, 317, 318, 319, 320, 321, 1408, 322, 323,
	324, 1188, 325, 326, 327, 1409, 1410, 1412, 1411, 1413,
	1414, 1415, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 1416, 337, 334, 335, 1417, 338, 336, 339, 1418,
	340, 341, 342, 1419, 1420, 343, 344, 345, 1421, 346,
	347, 1422, 348, 349, 350, 1423, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 1424, 272, 1425, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 1426, 369, 370,
	1427, 1428, 1189, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 1429, 383, 647,
	1430, 648, 384, 1431, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 1191, 390, 391, 1432, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	1433, 1190, 400, 652, 653, 1434, 654, 1435, 402, 403,
	1192, 655, 1193, 404, 405, 406, 1194, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 1436, 414, 416,
	415, 1437, 417, 656, 1195, 418, 419, 1196, 1438, 420,
	0, 0, 0, 421, 422, 425, 1439, 1440, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1197, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1198, 465, 454, 1441, 274, 1199, 466, 467, 1442,
	657, 468, 658, 470, 471, 1443, 0, 472, 0, 1444,
	1445, 474, 475, 476, 1446, 1447, 477, 478, 659, 1200,
	479, 1201, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 1448, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 1449, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 1450, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 1451,
	530, 531, 532, 1202, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 1452, 555, 556, 554, 557, 558,
	559, 1453, 560, 561, 543, 544, 562, 563, 1203, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 1454,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 1455, 587, 588, 0,
	584, 575, 1456, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 1457, 597, 670, 671, 672, 673, 1458, 606,
	1459, 598, 599, 600, 674, 601, 675, 1460, 602, 603,
	604, 605, 0, 607, 608, 1461, 1462, 609, 610, 611,
	613, 614, 612, 615, 1463, 616, 1464, 0, 617, 618,
	619, 676, 677, 678, 1465, 621, 620, 622, 679, 1466,
	623, 1467, 1468, 1469, 1470, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 1386, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4034, 275, 277, 276, 278, 279, 280,
	281, 1391, 282, 283, 1392, 1393, 1394, 0, 1395, 629,
	1396, 1397, 1398, 1399, 284, 285, 1187, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	1400, 634, 294, 295, 296, 297, 298, 299, 1401, 1402,
	0, 300, 635, 636, 637, 1403, 301, 302, 638, 1404,
	1332, 1405, 303, 304, 305, 306, 307, 308, 309, 0,
	1406, 311, 312, 313, 310, 314, 1407, 315, 0, 316,
	317, 318, 319, 320, 321, 1408, 322, 323, 324, 1188,
	325, 326, 327, 1409, 1410, 1412, 1411, 1413, 1414, 1415,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 1416,
	337, 334, 335, 1417, 338, 336, 339, 1418, 340, 341,
	342, 1419, 1420, 343, 344, 345, 1421, 346, 347, 1422,
	348, 349, 350, 1423, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	1424, 272, 1425, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 1426, 369, 370, 1427, 1428,
	1189, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 1429, 383, 647, 1430, 648,
	384, 1431, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 1191, 390, 391, 1432, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 1433, 1190,
	400, 652, 653, 1434, 654, 1435, 402, 403, 1192, 655,
	1193, 404, 405, 406, 1194, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 1436, 414, 416, 415, 1437,
	417, 656, 1195, 418, 419, 1196, 1438, 420, 0, 0,
	0, 421, 422, 425, 1439, 1440, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1197, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1198,
	465, 454, 1441, 274, 1199, 466, 467, 1442, 657, 468,
	658, 470, 471, 1443, 0, 472, 0, 1444, 1445, 474,
	475, 476, 1446, 1447, 477, 478, 659, 1200, 479, 1201,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 1448, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 1449,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 1450, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 1451, 530, 531,
	532, 1202, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 1452, 555, 556, 554, 557, 558, 559, 1453,
	560, 561, 543, 544, 562, 563, 1203, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 1454, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 1455, 587, 588, 0, 584, 575,
	1456, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	1457, 597, 670, 671, 672, 673, 1458, 606, 1459, 598,
	599, 600, 674, 601, 675, 1460, 602, 603, 604, 605,
	0, 607, 608, 1461, 1462, 609, 610, 611, 613, 614,
	612, 615, 1463, 616, 1464, 0, 617, 618, 619, 676,
	677, 678, 1465, 621, 620, 622, 679, 1466, 623, 1467,
	1468, 1469, 1470, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 1386, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3731, 275, 277, 276, 278, 279, 280, 281, 1391,
	282, 283, 1392, 1393, 1394, 0, 1395, 629, 1396, 1397,
	1398, 1399, 284, 285, 1187, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 1400, 634,
	294, 295, 296, 297, 298, 299, 1401, 1402, 0, 300,
	635, 636, 637, 1403, 301, 302, 638, 1404, 1332, 1405,
	303, 304, 305, 306, 307, 308, 309, 0, 1406, 311,
	312, 313, 310, 314, 1407, 315, 0, 316, 317, 318,
	319, 320, 321, 1408, 322, 323, 324, 1188, 325, 326,
	327, 1409, 1410, 1412, 1411, 1413, 1414, 1415, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 1416, 337, 334,
	335, 1417, 338, 336, 339, 1418, 340, 341, 342, 1419,
	1420, 343, 344, 345, 1421, 346, 347, 1422, 348, 349,
	350, 1423, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 1424, 272,
	1425, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 1426, 369, 370, 1427, 1428, 1189, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 1429, 383, 647, 1430, 648, 384, 1431,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 1191,
	390, 391, 1432, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 1433, 1190, 400, 652,
	653, 1434, 654, 1435, 402, 403, 1192, 655, 1193, 404,
	405, 406, 1194, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 1436, 414, 416, 415, 1437, 417, 656,
	1195, 418, 419, 1196, 1438, 420, 0, 0, 0, 421,
	422, 425, 1439, 1440, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1197, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1198, 465, 454,
	1441, 274, 1199, 466, 467, 1442, 657, 468, 658, 470,
	471, 1443, 0, 472, 0, 1444, 1445, 474, 475, 476,
	1446, 1447, 477, 478, 659, 1200, 479, 1201, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 1448, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 1449, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 1450, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 1451, 530, 531, 532, 1202,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	1452, 555, 556, 554, 557, 558, 559, 1453, 560, 561,
	543, 544, 562, 563, 1203, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 1454, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 1455, 587, 588, 0, 584, 575, 1456, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 1457, 597,
	670, 671, 672, 673, 1458, 606, 1459, 598, 599, 600,
	674, 601, 675, 1460, 602, 603, 604, 605, 0, 607,
	608, 1461, 1462, 609, 610, 611, 613, 614, 612, 615,
	1463, 616, 1464, 0, 617, 618, 619, 676, 677, 678,
	1465, 621, 620, 622, 679, 1466, 623, 1467, 1468, 1469,
	1470, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 1386, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3558,
	275, 277, 276, 278, 279, 280, 281, 1391, 282, 283,
	1392, 1393, 1394, 0, 1395, 629, 1396, 1397, 1398, 1399,
	284, 285, 1187, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 1400, 634, 294, 295,
	296, 297, 298, 299, 1401, 1402, 0, 300, 635, 636,
	637, 1403, 301, 302, 638, 1404, 1332, 1405, 303, 304,
	305, 306, 307, 308, 309, 0, 1406, 311, 312, 313,
	310, 314, 1407, 315, 0, 316, 317, 318, 319, 320,
	321, 1408, 322, 323, 324, 1188, 325, 326, 327, 1409,
	1410, 1412, 1411, 1413, 1414, 1415, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 1416, 337, 334, 335, 1417,
	338, 336, 339, 1418, 340, 341, 342, 1419, 1420, 343,
	344, 345, 1421, 346, 347, 1422, 348, 349, 350, 1423,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 1424, 272, 1425, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 1426, 369, 370, 1427, 1428, 1189, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 1429, 383, 647, 1430, 648, 384, 1431, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 1191, 390, 391,
	1432, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 1433, 1190, 400, 652, 653, 1434,
	654, 1435, 402, 403, 1192, 655, 1193, 404, 405, 406,
	1194, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 1436, 414, 416, 415, 1437, 417, 656, 1195, 418,
	419, 1196, 1438, 420, 0, 0, 0, 421, 422, 425,
	1439, 1440, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1197, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1198, 465, 454, 1441, 274,
	1199, 466, 467, 1442, 657, 468, 658, 470, 471, 1443,
	0, 472, 0, 1444, 1445, 474, 475, 476, 1446, 1447,
	477, 478, 659, 1200, 479, 1201, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 1448,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 1449, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 1450, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 1451, 530, 531, 532, 1202, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 1452, 555,
	556, 554, 557, 558, 559, 1453, 560, 561, 543, 544,
	562, 563, 1203, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 1454, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	1455, 587, 588, 0, 584, 575, 1456, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 1457, 597, 670, 671,
	672, 673, 1458, 606, 1459, 598, 599, 600, 674, 601,
	675, 1460, 602, 603, 604, 605, 0, 607, 608, 1461,
	1462, 609, 610, 611, 613, 614, 612, 615, 1463, 616,
	1464, 0, 617, 618, 619, 676, 677, 678, 1465, 621,
	620, 622, 679, 1466, 623, 1467, 1468, 1469, 1470, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 1386, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2593, 275, 277,
	276, 278, 279, 280, 281, 1391, 282, 283, 1392, 1393,
	1394, 0, 1395, 629, 1396, 1397, 1398, 1399, 284, 285,
	1187, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 1400, 634, 294, 295, 296, 297,
	298, 299, 1401, 1402, 0, 300, 635, 636, 637, 1403,
	301, 302, 638, 1404, 1332, 1405, 303, 304, 305, 306,
	307, 308, 309, 0, 1406, 311, 312, 313, 310, 314,
	1407, 315, 0, 316, 317, 318, 319, 320, 321, 1408,
	322, 323, 324, 1188, 325, 326, 327, 1409, 1410, 1412,
	1411, 1413, 1414, 1415, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 1416, 337, 334, 335, 1417, 338, 336,
	339, 1418, 340, 341, 342, 1419, 1420, 343, 344, 345,
	1421, 346, 347, 1422, 348, 349, 350, 1423, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 1424, 272, 1425, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 1426,
	369, 370, 1427, 1428, 1189, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 1429,
	383, 647, 1430, 648, 384, 1431, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 1191, 390, 391, 1432, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 1433, 1190, 400, 652, 653, 1434, 654, 1435,
	402, 403, 1192, 655, 1193, 404, 405, 406, 1194, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 1436,
	414, 416, 415, 1437, 417, 656, 1195, 418, 419, 1196,
	1438, 420, 0, 0, 0, 421, 422, 425, 1439, 1440,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1197,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1198, 465, 454, 1441, 274, 1199, 466,
	467, 1442, 657, 468, 658, 470, 471, 1443, 0, 472,
	0, 1444, 1445, 474, 475, 476, 1446, 1447, 477, 478,
	659, 1200, 479, 1201, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 1448, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 1449, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 1450,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 1451, 530, 531, 532, 1202, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 1452, 555, 556, 554,
	557, 558, 559, 1453, 560, 561, 543, 544, 562, 563,
	1203, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 1454, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 1455, 587,
	588, 0, 584, 575, 1456, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 1457, 597, 670, 671, 672, 673,
	1458, 606, 1459, 598, 599, 600, 674, 601, 675, 1460,
	602, 603, 604, 605, 0, 607, 608, 1461, 1462, 609,
	610, 611, 613, 614, 612, 615, 1463, 616, 1464, 0,
	617, 618, 619, 676, 677, 678, 1465, 621, 620, 622,
	679, 1466, 623, 1467, 1468, 1469, 1470, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 1482, 0, 1386,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2228, 275, 277, 276, 278,
	279, 280, 281, 1391, 282, 283, 1392, 1393, 1394, 0,
	1395, 629, 1396, 1397, 1398, 1399, 284, 285, 1187, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 1400, 634, 294, 295, 296, 297, 298, 299,
	1401, 1402, 0, 300, 635, 636, 637, 1403, 301, 302,
	638, 1404, 1332, 1405, 303, 304, 305, 306, 307, 308,
	309, 0, 1406, 311, 312, 313, 310, 314, 1407, 315,
	0, 316, 317, 318, 319, 320, 321, 1408, 322, 323,
	324, 1188, 325, 326, 327, 1409, 1410, 1412, 1411, 1413,
	1414, 1415, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 1416, 337, 334, 335, 1417, 338, 336, 339, 1418,
	340, 341, 342, 1419, 1420, 343, 344, 345, 1421, 346,
	347, 1422, 348, 349, 350, 1423, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 1424, 272, 1425, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 1426, 369, 370,
	1427, 1428, 1189, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 1429, 383, 647,
	1430, 648, 384, 1431, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 1191, 390, 391, 1432, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	1433, 1190, 400, 652, 653, 1434, 654, 1435, 402, 403,
	1192, 655, 1193, 404, 405, 406, 1194, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 1436, 414, 416,
	415, 1437, 417, 656, 1195, 418, 419, 1196, 1438, 420,
	0, 0, 0, 421, 422, 425, 1439, 1440, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1197, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1198, 465, 454, 1441, 274, 1199, 466, 467, 1442,
	657, 468, 658, 470, 471, 1443, 0, 472, 0, 1444,
	1445, 474, 475, 476, 1446, 1447, 477, 478, 659, 1200,
	479, 1201, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 1448, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 1449, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 1450, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 1451,
	530, 531, 532, 1202, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 1452, 555, 556, 554, 557, 558,
	559, 1453, 560, 561, 543, 544, 562, 563, 1203, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 1454,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 1455, 587, 588, 0,
	584, 575, 1456, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 1457, 597, 670, 671, 672, 673, 1458, 606,
	1459, 598, 599, 600, 674, 601, 675, 1460, 602, 603,
	604, 605, 0, 607, 608, 1461, 1462, 609, 610, 611,
	613, 614, 612, 615, 1463, 616, 1464, 0, 617, 618,
	619, 676, 677, 678, 1465, 621, 620, 622, 679, 1466,
	623, 1467, 1468, 1469, 1470, 624, 625, 680, 626, 627,
	628, 1383, 0, 1386, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 1391, 282, 283,
	1392, 1393, 1394, 0, 1395, 629, 1396, 1397, 1398, 1399,
	284, 285, 1187, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 1400, 634, 294, 295,
	296, 297, 298, 299, 1401, 1402, 0, 300, 635, 636,
	637, 1403, 301, 302, 638, 1404, 1332, 1405, 303, 304,
	305, 306, 307, 308, 309, 0, 1406, 311, 312, 313,
	310, 314, 1407, 315, 0, 316, 317, 318, 319, 320,
	321, 1408, 322, 323, 324, 1188, 325, 326, 327, 1409,
	1410, 1412, 1411, 1413, 1414, 1415, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 1416, 337, 334, 335, 1417,
	338, 336, 339, 1418, 340, 341, 342, 1419, 1420, 343,
	344, 345, 1421, 346, 347, 1422, 348, 349, 350, 1423,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 1424, 272, 1425, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 1426, 369, 370, 1427, 1428, 1189, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 1429, 383, 647, 1430, 648, 384, 1431, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 1191, 390, 391,
	1432, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 1433, 1190, 400, 652, 653, 1434,
	654, 1435, 402, 403, 1192, 655, 1193, 404, 405, 406,
	1194, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 1436, 414, 416, 415, 1437, 417, 656, 1195, 418,
	419, 1196, 1438, 420, 0, 0, 0, 421, 422, 425,
	1439, 1440, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1197, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1198, 465, 454, 1441, 274,
	1199, 466, 467, 1442, 657, 468, 658, 470, 471, 1443,
	0, 472, 0, 1444, 1445, 474, 475, 476, 1446, 1447,
	477, 478, 659, 1200, 479, 1201, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 1448,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 1449, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 1450, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 1451, 530, 531, 532, 1202, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 1452, 555,
	556, 554, 557, 558, 559, 1453, 560, 561, 543, 544,
	562, 563, 1203, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 1454, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	1455, 587, 588, 0, 584, 575, 1456, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 1457, 597, 670, 671,
	672, 673, 1458, 606, 1459, 598, 599, 600, 674, 601,
	675, 1460, 602, 603, 604, 605, 0, 607, 608, 1461,
	1462, 609, 610, 611, 613, 614, 612, 615, 1463, 616,
	1464, 0, 617, 618, 619, 676, 677, 678, 1465, 621,
	620, 622, 679, 1466, 623, 1467, 1468, 1469, 1470, 624,
	625, 680, 626, 627, 628, 1386, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 1391,
	282, 283, 1392, 1393, 1394, 0, 1395, 629, 1396, 1397,
	1398, 1399, 284, 285, 1187, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 1400, 634,
	294, 295, 296, 297, 298, 299, 1401, 1402, 0, 300,
	635, 636, 637, 1403, 301, 302, 638, 1404, 1332, 1405,
	303, 304, 305, 306, 307, 308, 309, 0, 1406, 311,
	312, 313, 310, 314, 1407, 315, 0, 316, 317, 318,
	319, 320, 321, 1408, 322, 323, 324, 1188, 325, 326,
	327, 1409, 1410, 1412, 1411, 1413, 1414, 1415, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 1416, 337, 334,
	335, 1417, 338, 336, 339, 1418, 340, 341, 342, 1419,
	1420, 343, 344, 345, 1421, 346, 347, 1422, 348, 349,
	350, 1423, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 1424, 272,
	1425, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 1426, 369, 370, 1427, 1428, 1189, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 1429, 383, 647, 1430, 648, 384, 1431,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 1191,
	390, 391, 1432, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 1433, 1190, 400, 652,
	653, 1434, 654, 1435, 402, 403, 1192, 655, 1193, 404,
	405, 406, 1194, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 1436, 414, 416, 415, 1437, 417, 656,
	1195, 418, 419, 1196, 1438, 420, 0, 0, 0, 421,
	422, 425, 1439, 1440, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1197, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1198, 465, 454,
	1441, 274, 1199, 466, 467, 1442, 657, 468, 658, 470,
	471, 1443, 0, 472, 0, 1444, 1445, 474, 475, 476,
	1446, 1447, 477, 478, 659, 1200, 479, 1201, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 1448, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 1449, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 1450, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 1451, 530, 531, 532, 1202,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	1452, 555, 556, 554, 557, 558, 559, 1453, 560, 561,
	543, 544, 562, 563, 1203, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 1454, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 1455, 587, 588, 0, 584, 575, 1456, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 1457, 597,
	670, 671, 672, 673, 1458, 606, 1459, 598, 599, 600,
	674, 601, 675, 1460, 602, 603, 604, 605, 0, 607,
	608, 1461, 1462, 609, 610, 611, 613, 614, 612, 615,
	1463, 616, 1464, 0, 617, 618, 619, 676, 677, 678,
	1465, 621, 620, 622, 679, 1466, 623, 1467, 1468, 1469,
	1470, 624, 625, 680, 626, 627, 628, 2568, 0, 1123,
	1095, 1096, 1097, 1093, 1094, 1106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 2565, 282, 283, 0, 0, 0, 0,
	0, 1147, 1111, 0, 0, 0, 284, 285, 1187, 286,
	287, 288, 289, 290, 291, 630, 1160, 0, 292, 1167,
	293, 1166, 0, 1177, 294, 295, 296, 297, 298, 299,
	1113, 1146, 1078, 300, 1207, 1208, 637, 0, 301, 302,
	1153, 0, 1134, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1188, 325, 326, 327, 1137, 1135, 1136, 1143, 1139,
	1138, 1142, 328, 329, 330, 331, 332, 1170, 333, 1164,
	1163, 1083, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 2566, 0, 343, 1155, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1089, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1178,
	1179, 364, 1102, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1162, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1189, 371, 372, 373, 1175, 1176, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1185,
	0, 1112, 384, 0, 385, 386, 387, 388, 389, 1148,
	1149, 1152, 469, 1191, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1190, 400, 1157, 1158, 0, 1118, 0, 402, 403,
	1192, 1150, 1193, 404, 405, 406, 1194, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1186, 1195, 418, 419, 1196, 0, 420,
	0, 0, 0, 421, 422, 425, 1141, 1140, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1197, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1198, 465, 454, 1080, 274, 1199, 466, 467, 1103,
	1151, 468, 1165, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1200,
	479, 1201, 1180, 480, 481, 1090, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1181, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1161, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1202, 533, 534, 535, 536, 537, 1091,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1144, 560, 561, 543, 544, 562, 563, 1203, 564,
	565, 566, 567, 568, 569, 570, 1159, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1206, 578,
	579, 580, 581, 1182, 585, 586, 0, 587, 588, 1077,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1171, 1172, 1173, 1174, 0, 606,
	0, 598, 599, 600, 1183, 601, 1184, 1101, 602, 603,
	604, 605, 0, 607, 608, 0, 1084, 609, 610, 611,
	613, 614, 612, 615, 1145, 616, 0, 0, 617, 618,
	619, 676, 1168, 1205, 2564, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1081, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1076, 0, 0, 0, 0, 0,
	0, 1074, 1075, 2567, 0, 0, 0, 0, 0, 0,
	1107, 2563, 0, 1067, 1105, 1123, 1095, 1096, 1097, 1093,
	1094, 1106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 1147, 1111, 0,
	0, 0, 284, 285, 1187, 286, 287, 288, 289, 290,
	291, 630, 1160, 0, 292, 1167, 293, 1166, 0, 1177,
	294, 295, 296, 297, 298, 299, 1113, 1146, 1078, 300,
	1207, 1208, 637, 0, 301, 302, 1153, 0, 1134, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1188, 325, 326,
	327, 1137, 1135, 1136, 1143, 1139, 1138, 1142, 328, 329,
	330, 331, 332, 1170, 333, 1164, 1163, 1083, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1155, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1089, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1178, 1179, 364, 1102, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1162, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1189, 371,
	372, 373, 1175, 1176, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1185, 0, 1112, 384, 0,
	385, 386, 387, 388, 389, 1148, 1149, 1152, 469, 1191,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1190, 400, 1157,
	1158, 0, 1118, 0, 402, 403, 1192, 1150, 1193, 404,
	405, 406, 1194, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1186,
	1195, 418, 419, 1196, 0, 420, 0, 0, 0, 421,
	422, 425, 1141, 1140, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1197, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1198, 465, 454,
	1080, 274, 1199, 466, 467, 1103, 1151, 468, 1165, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1200, 479, 1201, 1180, 480,
	481, 1090, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1181, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1161, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1202,
	533, 534, 535, 536, 537, 1091, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	234, 555, 556, 554, 557, 558, 559, 1144, 560, 561,
	543, 544, 562, 563, 1203, 564, 565, 566, 567, 568,
	569, 570, 1159, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1206, 578, 579, 580, 581, 1182,
	585, 586, 0, 587, 588, 1077, 584, 575, 236, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1171, 1172, 1173, 1174, 0, 606, 0, 598, 599, 600,
	1183, 601, 1184, 1101, 602, 603, 604, 605, 0, 607,
	608, 0, 1084, 609, 610, 611, 613, 614, 612, 615,
	1145, 616, 0, 0, 617, 618, 619, 1607, 1168, 1205,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	228, 624, 625, 680, 626, 627, 628, 1081, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1076, 0, 0, 0, 0, 0, 0, 1074, 1075, 1123,
	1095, 1096, 1097, 1093, 1094, 1106, 1862, 1860, 0, 0,
	1105, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 1147, 1111, 0, 0, 0, 284, 285, 1187, 286,
	287, 288, 289, 290, 291, 630, 1160, 0, 292, 1167,
	293, 1166, 0, 1177, 294, 295, 296, 297, 298, 299,
	1113, 1146, 1078, 300, 1207, 1208, 637, 0, 301, 302,
	1153, 0, 1134, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1188, 325, 326, 327, 1137, 1135, 1136, 1143, 1139,
	1138, 1142, 328, 329, 330, 331, 332, 1170, 333, 1164,
	1163, 1083, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1155, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1089, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1178,
	1179, 364, 1102, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1162, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1189, 371, 372, 373, 1175, 1176, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1185,
	0, 1112, 384, 0, 385, 386, 387, 388, 389, 1148,
	1149, 1152, 469, 1191, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1190, 400, 1157, 1158, 0, 1118, 0, 402, 403,
	1192, 1150, 1193, 404, 405, 406, 1194, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1186, 1195, 418, 419, 1196, 0, 420,
	0, 0, 0, 421, 422, 425, 1141, 1140, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1197, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1198, 465, 454, 1080, 274, 1199, 466, 467, 1103,
	1151, 468, 1165, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1200,
	479, 1201, 1180, 480, 481, 1090, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1181, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1161, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1202, 533, 534, 535, 536, 537, 1091,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 234, 555, 556, 554, 557, 558,
	559, 1144, 560, 561, 543, 544, 562, 563, 1203, 564,
	565, 566, 567, 568, 569, 570, 1159, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1206, 578,
	579, 580, 581, 1182, 585, 586, 0, 587, 588, 1077,
	584, 575, 236, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1171, 1172, 1173, 1174, 0, 606,
	0, 598, 599, 600, 1183, 601, 1184, 1101, 602, 603,
	604, 605, 0, 607, 608, 0, 1084, 609, 610, 611,
	613, 614, 612, 615, 1145, 616, 0, 0, 617, 618,
	619, 1607, 1168, 1205, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 228, 624, 625, 680, 626, 627,
	628, 1081, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1076, 0, 0, 0, 0, 0,
	0, 1074, 1075, 1123, 1095, 1096, 1097, 1093, 1094, 1106,
	1862, 3198, 0, 0, 1105, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 1147, 1111, 0, 0, 0,
	284, 285, 1187, 286, 287, 288, 289, 290, 291, 630,
	1160, 0, 292, 1167, 293, 1166, 0, 1177, 294, 295,
	296, 297, 298, 299, 1113, 1146, 1078, 300, 1207, 1208,
	637, 0, 301, 302, 1153, 0, 1134, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1188, 325, 326, 327, 1137,
	1135, 1136, 1143, 1139, 1138, 1142, 328, 329, 330, 331,
	332, 1170, 333, 1164, 1163, 1083, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1155, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1089, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1178, 1179, 364, 1102, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1162, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1189, 371, 372, 373,
	1175, 1176, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1185, 0, 1112, 384, 0, 385, 386,
	387, 388, 389, 1148, 1149, 1152, 469, 1191, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1190, 400, 1157, 1158, 0,
	1118, 0, 402, 403, 1192, 1150, 1193, 404, 405, 406,
	1194, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1186, 1195, 418,
	419, 1196, 0, 420, 0, 0, 0, 421, 422, 425,
	1141, 1140, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1197, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1198, 465, 454, 1080, 274,
	1199, 466, 467, 1103, 1151, 468, 1165, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1200, 479, 1201, 1180, 480, 481, 1090,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1181, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1161, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1202, 533, 534,
	535, 536, 537, 1091, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 234, 555,
	556, 554, 557, 558, 559, 1144, 560, 561, 543, 544,
	562, 563, 1203, 564, 565, 566, 567, 568, 569, 570,
	1159, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1206, 578, 579, 580, 581, 1182, 585, 586,
	0, 587, 588, 1077, 584, 575, 236, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1171, 1172,
	1173, 1174, 0, 606, 0, 598, 599, 600, 1183, 601,
	1184, 1101, 602, 603, 604, 605, 0, 607, 608, 0,
	1084, 609, 610, 611, 613, 614, 612, 615, 1145, 616,
	0, 0, 617, 618, 619, 1607, 1168, 1205, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 228, 624,
	625, 680, 626, 627, 628, 1081, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1076, 0,
	0, 0, 0, 0, 0, 1074, 1075, 1123, 1095, 1096,
	1097, 1093, 1094, 1106, 1862, 1860, 0, 0, 1105, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 1147,
	1111, 0, 0, 0, 284, 285, 1187, 286, 287, 288,
	289, 290, 291, 630, 1160, 0, 292, 1167, 293, 1166,
	2699, 1177, 294, 295, 296, 297, 298, 299, 1113, 1146,
	1078, 300, 1207, 1208, 637, 0, 301, 302, 1153, 0,
	1134, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1188,
	325, 326, 327, 1137, 1135, 1136, 1143, 1139, 1138, 1142,
	328, 329, 330, 331, 332, 1170, 333, 1164, 1163, 1083,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1155, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1089, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1178, 1179, 364,
	1102, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1162, 0, 0, 0, 368, 0, 369, 370, 0, 2704,
	1189, 371, 372, 373, 1175, 1176, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1185, 0, 1112,
	384, 0, 385, 386, 387, 388, 389, 1148, 1149, 1152,
	469, 1191, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1190,
	400, 1157, 1158, 0, 1118, 0, 402, 403, 1192, 1150,
	1193, 404, 405, 406, 1194, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 2700,
	417, 1186, 1195, 418, 419, 1196, 0, 420, 0, 0,
	0, 421, 422, 425, 1141, 1140, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1197, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1198,
	465, 454, 1080, 274, 1199, 466, 467, 1103, 1151, 468,
	1165, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1200, 479, 1201,
	1180, 480, 481, 1090, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1181, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1161, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1202, 533, 534, 535, 536, 537, 1091, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 1144,
	560, 561, 543, 544, 562, 563, 1203, 564, 565, 566,
	567, 568, 569, 570, 1159, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 1206, 578, 579, 580,
	581, 1182, 585, 586, 0, 587, 588, 1077, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 1171, 1172, 1173, 1174, 0, 606, 2701, 598,
	599, 600, 1183, 601, 1184, 1101, 602, 603, 604, 605,
	0, 607, 608, 0, 1084, 609, 610, 611, 613, 614,
	612, 615, 1145, 616, 0, 0, 617, 618, 619, 676,
	1168, 1205, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1081,
	0, 0, 2613, 0, 1123, 1095, 1096, 1097, 1093, 1094,
	1106, 0, 1076, 0, 0, 0, 0, 0, 0, 1074,
	1075, 275, 277, 276, 278, 279, 280, 281, 1107, 282,
	283, 0, 1105, 0, 0, 0, 1147, 1111, 0, 0,
	0, 284, 285, 1187, 286, 287, 288, 289, 290, 291,
	630, 1160, 0, 292, 1167, 293, 1166, 0, 1177, 294,
	295, 296, 297, 298, 299, 1113, 1146, 1078, 300, 1207,
	1208, 637, 0, 301, 302, 1153, 0, 1134, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1188, 325, 326, 327,
	1137, 1135, 1136, 1143, 1139, 1138, 1142, 328, 329, 330,
	331, 332, 1170, 333, 1164, 1163, 1083, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1155, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1089, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1178, 1179, 364, 1102, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1162, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1189, 371, 372,
	373, 1175, 1176, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1185, 0, 1112, 384, 0, 385,
	386, 387, 388, 389, 1148, 1149, 1152, 469, 1191, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1190, 400, 1157, 1158,
	0, 1118, 0, 402, 403, 1192, 1150, 1193, 404, 405,
	406, 1194, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1186, 1195,
	418, 419, 1196, 0, 420, 0, 0, 0, 421, 422,
	425, 1141, 1140, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1197, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1198, 465, 454, 1080,
	274, 1199, 466, 467, 1103, 1151, 468, 1165, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1200, 479, 1201, 1180, 480, 481,
	1090, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1181, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1161, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1202, 533,
	534, 535, 536, 537, 1091, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1144, 560, 561, 543,
	544, 562, 563, 1203, 564, 565, 566, 567, 568, 569,
	570, 1159, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 1206, 578, 579, 580, 581, 1182, 585,
	586, 0, 587, 588, 1077, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 1171,
	1172, 1173, 1174, 0, 606, 0, 598, 599, 600, 1183,
	601, 1184, 1101, 602, 603, 604, 605, 0, 607, 608,
	0, 1084, 609, 610, 611, 613, 614, 612, 615, 1145,
	616, 0, 0, 617, 618, 619, 676, 1168, 1205, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1081, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1076,
	0, 0, 0, 0, 0, 0, 1074, 1075, 0, 0,
	0, 0, 0, 0, 0, 1107, 2611, 0, 2610, 1105,
	1123, 1095, 1096, 1097, 1093, 1094, 1106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 1147, 1111, 0, 0, 0, 284, 285, 1187,
	286, 287, 288, 289, 290, 291, 630, 1160, 0, 292,
	1167, 293, 1166, 0, 1177, 294, 295, 296, 297, 298,
	299, 1113, 1146, 1078, 300, 1207, 1208, 637, 0, 301,
	302, 1153, 0, 1134, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1188, 325, 326, 327, 1137, 1135, 1136, 1143,
	1139, 1138, 1142, 328, 329, 330, 331, 332, 1170, 333,
	1164, 1163, 1083, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1155, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1089,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1178, 1179, 364, 1102, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1162, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1189, 371, 372, 373, 1175, 1176, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1185, 0, 1112, 384, 0, 385, 386, 387, 388, 389,
	1148, 1149, 1152, 469, 1191, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1190, 400, 1157, 1158, 0, 1118, 0, 402,
	403, 1192, 1150, 1193, 404, 405, 406, 1194, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1186, 1195, 418, 419, 1196, 0,
	420, 0, 0, 0, 421, 422, 425, 1141, 1140, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1197, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1198, 465, 454, 1080, 274, 1199, 466, 467,
	1103, 1151, 468, 1165, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1200, 479, 1201, 1180, 480, 481, 1090, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1181, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1161, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1202, 533, 534, 535, 536, 537,
	1091, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1144, 560, 561, 543, 544, 562, 563, 1203,
	564, 565, 566, 567, 568, 569, 570, 1159, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1206,
	578, 579, 580, 581, 1182, 585, 586, 0, 587, 588,
	1077, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1171, 1172, 1173, 1174, 0,
	606, 0, 598, 599, 600, 1183, 601, 1184, 1101, 602,
	603, 604, 605, 0, 607, 608, 0, 1084, 609, 610,
	611, 613, 614, 612, 615, 1145, 616, 0, 0, 617,
	618, 619, 676, 1168, 1205, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1081, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1076, 0, 0, 0, 0,
	0, 0, 1074, 1075, 0, 0, 0, 0, 0, 0,
	0, 1107, 2608, 0, 2607, 1105, 1123, 1095, 1096, 1097,
	1093, 1094, 1106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 1147, 1111,
	0, 0, 0, 284, 285, 1187, 286, 287, 288, 289,
	290, 291, 630, 1160, 0, 292, 1167, 293, 1166, 0,
	1177, 294, 295, 296, 297, 298, 299, 1113, 1146, 1078,
	300, 1207, 1208, 637, 0, 301, 302, 1153, 0, 1134,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1188, 325,
	326, 327, 1137, 1135, 1136, 1143, 1139, 1138, 1142, 328,
	329, 330, 331, 332, 1170, 333, 1164, 1163, 1083, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1155, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1089, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1178, 1179, 364, 1102,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1162,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1189,
	371, 372, 373, 1175, 1176, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1185, 0, 1112, 384,
	0, 385, 386, 387, 388, 389, 1148, 1149, 1152, 469,
	1191, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1190, 400,
	1157, 1158, 0, 1118, 0, 402, 403, 1192, 1150, 1193,
	404, 405, 406, 1194, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1186, 1195, 418, 419, 1196, 0, 420, 0, 0, 0,
	421, 422, 425, 1141, 1140, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1197, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1198, 465,
	454, 1080, 274, 1199, 466, 467, 1103, 1151, 468, 1165,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1200, 479, 1201, 1180,
	480, 481, 1090, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1181, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1161,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1202, 533, 534, 535, 536, 537, 1091, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1144, 560,
	561, 543, 544, 562, 563, 1203, 564, 565, 566, 567,
	568, 569, 570, 1159, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1206, 578, 579, 580, 581,
	1182, 585, 586, 0, 587, 588, 1077, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1171, 1172, 1173, 1174, 0, 606, 0, 598, 599,
	600, 1183, 601, 1184, 1101, 602, 603, 604, 605, 0,
	607, 608, 0, 1084, 609, 610, 611, 613, 614, 612,
	615, 1145, 616, 0, 0, 617, 618, 619, 676, 1168,
	1205, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1081, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1076, 0, 0, 0, 0, 0, 0, 1074, 1075,
	0, 0, 0, 0, 0, 0, 0, 1107, 2605, 0,
	2604, 1105, 1123, 1095, 1096, 1097, 1093, 1094, 1106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 1147, 1111, 0, 0, 0, 284,
	285, 1187, 286, 287, 288, 289, 290, 291, 630, 1160,
	0, 292, 1167, 293, 1166, 0, 1177, 294, 295, 296,
	297, 298, 299, 1113, 1146, 1078, 300, 1207, 1208, 637,
	0, 301, 302, 1153, 0, 1134, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1188, 325, 326, 327, 1137, 1135,
	1136, 1143, 1139, 1138, 1142, 328, 329, 330, 331, 332,
	1170, 333, 1164, 1163, 1083, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1155,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1089, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1178, 1179, 364, 1102, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1162, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1189, 371, 372, 373, 1175,
	1176, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1185, 0, 1112, 384, 0, 385, 386, 387,
	388, 389, 1148, 1149, 1152, 469, 1191, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1190, 400, 1157, 1158, 0, 1118,
	0, 402, 403, 1192, 1150, 1193, 404, 405, 406, 1194,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1186, 1195, 418, 419,
	1196, 0, 420, 0, 0, 0, 421, 422, 425, 1141,
	1140, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1197, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1198, 465, 454, 1080, 274, 1199,
	466, 467, 1103, 1151, 468, 1165, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1200, 479, 1201, 1180, 480, 481, 1090, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1181,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1161, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1202, 533, 534, 535,
	536, 537, 1091, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1144, 560, 561, 543, 544, 562,
	563, 1203, 564, 565, 566, 567, 568, 569, 570, 1159,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1206, 578, 579, 580, 581, 1182, 585, 586, 0,
	587, 588, 1077, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1171, 1172, 1173,
	1174, 0, 606, 0, 598, 599, 600, 1183, 601, 1184,
	1101, 602, 603, 604, 605, 0, 607, 608, 0, 1084,
	609, 610, 611, 613, 614, 612, 615, 1145, 616, 0,
	0, 617, 618, 619, 676, 1168, 1205, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1081, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1076, 0, 0,
	0, 0, 0, 0, 1074, 1075, 0, 0, 0, 0,
	0, 0, 0, 1107, 2602, 0, 1703, 1105, 1123, 1095,
	1096, 1097, 1093, 1094, 1106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	1147, 1111, 0, 0, 0, 284, 285, 1187, 286, 287,
	288, 289, 290, 291, 630, 1160, 0, 292, 1167, 293,
	1166, 0, 1177, 294, 295, 296, 297, 298, 299, 1113,
	1146, 1078, 300, 1207, 1208, 637, 0, 301, 302, 1153,
	0, 1134, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1188, 325, 326, 327, 1137, 1135, 1136, 1143, 1139, 1138,
	1142, 328, 329, 330, 331, 332, 1170, 333, 1164, 1163,
	1083, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 1155, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1089, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1178, 1179,
	364, 1102, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1162, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1189, 371, 372, 373, 1175, 1176, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1185, 0,
	1112, 384, 0, 385, 386, 387, 388, 389, 1148, 1149,
	1152, 469, 1191, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1190, 400, 1157, 1158, 0, 1118, 0, 402, 403, 1192,
	1150, 1193, 404, 405, 406, 1194, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1186, 1195, 418, 419, 1196, 0, 420, 0,
	0, 0, 421, 422, 425, 1141, 1140, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1197, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1198, 465, 454, 1080, 274, 1199, 466, 467, 1103, 1151,
	468, 1165, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1200, 479,
	1201, 1180, 480, 481, 1090, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 1181, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1161, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1202, 533, 534, 535, 536, 537, 1091, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	1144, 560, 561, 543, 544, 562, 563, 1203, 564, 565,
	566, 567, 568, 569, 570, 1159, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 1206, 578, 579,
	580, 581, 1182, 585, 586, 0, 587, 588, 1077, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 1171, 1172, 1173, 1174, 0, 606, 0,
	598, 599, 600, 1183, 601, 1184, 1101, 602, 603, 604,
	605, 0, 607, 608, 0, 1084, 609, 610, 611, 613,
	614, 612, 615, 1145, 616, 0, 0, 617, 618, 619,
	676, 1168, 1205, 0, 621, 620, 622, 679, 0, 623,
	1702, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1081, 0, 0, 1070, 0, 1123, 1095, 1096, 1097, 1093,
	1094, 1106, 0, 1076, 0, 0, 0, 0, 0, 0,
	1074, 1075, 275, 277, 276, 278, 279, 280, 281, 1107,
	282, 283, 0, 1105, 0, 0, 0, 1147, 1111, 0,
	0, 0, 284, 285, 1187, 286, 287, 288, 289, 290,
	291, 630, 1160, 0, 292, 1167, 293, 1166, 0, 1177,
	294, 295, 296, 297, 298, 299, 1113, 1146, 1078, 300,
	1207, 1208, 637, 0, 301, 302, 1153, 0, 1134, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1188, 325, 326,
	327, 1137, 1135, 1136, 1143, 1139, 1138, 1142, 328, 329,
	330, 331, 332, 1170, 333, 1164, 1163, 1083, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1155, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1089, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1178, 1179, 364, 1102, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1162, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1189, 371,
	372, 373, 1175, 1176, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1185, 0, 1112, 384, 0,
	385, 386, 387, 388, 389, 1148, 1149, 1152, 469, 1191,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1190, 400, 1157,
	1158, 0, 1118, 0, 402, 403, 1192, 1150, 1193, 404,
	405, 406, 1194, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1186,
	1195, 418, 419, 1196, 0, 420, 0, 0, 0, 421,
	422, 425, 1141, 1140, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1197, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1198, 465, 454,
	1080, 274, 1199, 466, 467, 1103, 1151, 468, 1165, 470,
	471, 0, 0, 472, 0, 1085, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1200, 479, 1201, 1180, 480,
	481, 1090, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1181, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1161, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1202,
	533, 534, 535, 536, 537, 1091, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1144, 560, 561,
	543, 544, 562, 563, 1203, 564, 565, 566, 567, 568,
	569, 570, 1159, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1206, 578, 579, 580, 581, 1182,
	585, 586, 0, 587, 588, 1077, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1171, 1172, 1173, 1174, 0, 606, 0, 598, 599, 600,
	1183, 601, 1184, 1101, 602, 603, 604, 605, 0, 607,
	608, 0, 1084, 609, 610, 611, 613, 614, 612, 615,
	1145, 616, 0, 0, 617, 618, 619, 676, 1168, 1205,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1081, 0, 0,
	0, 0, 1123, 1095, 1096, 1097, 1093, 1094, 1106, 0,
	1076, 0, 0, 0, 0, 0, 0, 1074, 1075, 275,
	277, 276, 278, 279, 280, 281, 1107, 282, 283, 0,
	1105, 0, 0, 0, 1147, 1111, 0, 0, 0, 284,
	285, 1187, 286, 287, 288, 289, 290, 291, 630, 1160,
	0, 292, 1167, 293, 1166, 0, 1177, 294, 295, 296,
	297, 298, 299, 1113, 1146, 1078, 300, 1207, 1208, 637,
	0, 301, 302, 1153, 0, 1134, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 4657, 321,
	0, 322, 323, 324, 1188, 325, 326, 327, 1137, 1135,
	1136, 1143, 1139, 1138, 1142, 328, 329, 330, 331, 332,
	1170, 333, 1164, 1163, 1083, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1155,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1089, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1178, 1179, 364, 1102, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1162, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1189, 371, 372, 373, 1175,
	1176, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1185, 0, 1112, 384, 0, 385, 386, 387,
	388, 389, 1148, 1149, 1152, 469, 1191, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1190, 400, 1157, 1158, 0, 1118,
	0, 402, 403, 1192, 1150, 1193, 404, 405, 406, 1194,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1186, 1195, 418, 419,
	1196, 0, 420, 0, 0, 0, 421, 422, 425, 1141,
	1140, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1197, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1198, 465, 454, 1080, 274, 1199,
	466, 467, 1103, 1151, 468, 1165, 470, 471, 0, 0,
	472, 0, 1085, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1200, 479, 1201, 1180, 480, 481, 1090, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1181,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1161, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1202, 533, 534, 535,
	536, 537, 1091, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1144, 560, 561, 543, 544, 562,
	563, 1203, 564, 565, 566, 567, 568, 569, 570, 1159,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1206, 578, 579, 580, 581, 1182, 585, 586, 0,
	587, 588, 1077, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1171, 1172, 1173,
	1174, 0, 606, 0, 598, 599, 600, 1183, 601, 1184,
	1101, 602, 603, 604, 605, 0, 607, 608, 0, 1084,
	609, 610, 611, 613, 614, 612, 615, 1145, 616, 0,
	0, 617, 618, 619, 676, 1168, 1205, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1081, 0, 0, 0, 0, 1123,
	1095, 1096, 1097, 1093, 1094, 1106, 0, 1076, 0, 0,
	0, 0, 0, 0, 1074, 1075, 275, 277, 276, 278,
	279, 280, 281, 1107, 282, 283, 0, 1105, 0, 0,
	0, 1147, 1111, 0, 0, 0, 284, 285, 1187, 286,
	287, 288, 289, 290, 291, 630, 1160, 0, 292, 1167,
	293, 1166, 0, 1177, 294, 295, 296, 297, 298, 299,
	1113, 1146, 1078, 300, 1207, 1208, 637, 0, 301, 302,
	1153, 0, 1134, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1188, 325, 326, 327, 1137, 1135, 1136, 1143, 1139,
	1138, 1142, 328, 329, 330, 331, 332, 1170, 333, 1164,
	1163, 1083, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1155, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1089, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1178,
	1179, 364, 1102, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1162, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1189, 371, 372, 373, 1175, 1176, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1185,
	0, 1112, 384, 0, 385, 386, 387, 388, 389, 1148,
	1149, 1152, 469, 1191, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 2445, 397, 398, 399, 401,
	0, 1190, 400, 1157, 1158, 0, 1118, 0, 402, 403,
	1192, 1150, 1193, 404, 405, 406, 1194, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1186, 1195, 418, 419, 1196, 0, 420,
	0, 0, 0, 421, 422, 425, 1141, 1140, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1197, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1198, 465, 454, 1080, 274, 1199, 466, 467, 1103,
	1151, 468, 1165, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1200,
	479, 1201, 1180, 480, 481, 1090, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1181, 499, 664, 500,
	501, 2444, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1161, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1202, 533, 534, 535, 536, 537, 1091,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1144, 560, 561, 543, 544, 562, 563, 1203, 564,
	565, 566, 567, 568, 569, 570, 1159, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1206, 578,
	579, 580, 581, 1182, 585, 586, 0, 587, 588, 1077,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1171, 1172, 1173, 1174, 0, 606,
	0, 598, 599, 600, 1183, 601, 1184, 1101, 602, 603,
	604, 605, 0, 607, 608, 0, 1084, 609, 610, 611,
	613, 614, 612, 615, 1145, 616, 0, 0, 617, 618,
	619, 676, 1168, 1205, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1081, 0, 0, 0, 0, 1123, 1095, 1096, 1097,
	1093, 1094, 1106, 0, 1076, 0, 0, 0, 0, 0,
	0, 1074, 1075, 275, 277, 276, 278, 279, 280, 281,
	1107, 282, 283, 0, 1105, 0, 0, 0, 1147, 1111,
	0, 0, 0, 284, 285, 1187, 286, 287, 288, 289,
	290, 291, 630, 1160, 0, 292, 1167, 293, 1166, 0,
	1177, 294, 295, 296, 297, 298, 299, 1113, 1146, 1078,
	300, 1207, 1208, 637, 0, 301, 302, 1153, 0, 1134,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1188, 325,
	326, 327, 1137, 1135, 1136, 1143, 1139, 1138, 1142, 328,
	329, 330, 331, 332, 1170, 333, 1164, 1163, 1083, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1155, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1089, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1178, 1179, 364, 1102,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1162,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1189,
	371, 372, 373, 1175, 1176, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1185, 0, 1112, 384,
	0, 385, 386, 387, 388, 389, 1148, 1149, 1152, 469,
	1191, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1190, 400,
	1157, 1158, 0, 1118, 0, 402, 403, 1192, 1150, 1193,
	404, 405, 406, 1194, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1186, 1195, 418, 419, 1196, 0, 420, 0, 0, 0,
	421, 422, 425, 1141, 1140, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1197, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1198, 465,
	454, 1080, 274, 1199, 466, 467, 1103, 1151, 468, 1165,
	470, 471, 0, 0, 472, 0, 1085, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1200, 479, 1201, 1180,
	480, 481, 1090, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1181, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1161,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1202, 533, 534, 535, 536, 537, 1091, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1144, 560,
	561, 543, 544, 562, 563, 1203, 564, 565, 566, 567,
	568, 569, 570, 1159, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1206, 578, 579, 580, 581,
	1182, 585, 586, 0, 587, 588, 1077, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1171, 1172, 1173, 1174, 0, 606, 0, 598, 599,
	600, 1183, 601, 1184, 1101, 602, 603, 604, 605, 0,
	607, 608, 0, 1084, 609, 610, 611, 613, 614, 612,
	615, 1145, 616, 0, 0, 617, 618, 619, 676, 1168,
	1205, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1081, 0,
	0, 0, 0, 1123, 1095, 1096, 1097, 1093, 1094, 1106,
	0, 1076, 0, 0, 0, 0, 0, 0, 1074, 1075,
	275, 277, 276, 278, 279, 280, 281, 1107, 282, 283,
	0, 1105, 0, 0, 0, 1147, 1111, 0, 0, 0,
	284, 285, 1187, 286, 287, 288, 289, 290, 291, 630,
	1160, 0, 292, 1167, 293, 1166, 0, 1177, 294, 295,
	296, 297, 298, 299, 1113, 1146, 1078, 300, 1207, 1208,
	637, 0, 301, 302, 1153, 0, 1134, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 4397,
	321, 0, 322, 323, 324, 1188, 325, 326, 327, 1137,
	1135, 1136, 1143, 1139, 1138, 1142, 328, 329, 330, 331,
	332, 1170, 333, 1164, 1163, 1083, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1155, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1089, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1178, 1179, 364, 1102, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1162, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1189, 371, 372, 373,
	1175, 1176, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1185, 0, 1112, 384, 0, 385, 386,
	387, 388, 389, 1148, 1149, 1152, 469, 1191, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1190, 400, 1157, 1158, 0,
	1118, 0, 402, 403, 1192, 1150, 1193, 404, 405, 406,
	1194, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1186, 1195, 418,
	419, 1196, 0, 420, 0, 0, 0, 421, 422, 425,
	1141, 1140, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1197, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1198, 465, 454, 1080, 274,
	1199, 466, 467, 1103, 1151, 468, 1165, 470, 471, 0,
	0, 472, 0, 1085, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1200, 479, 1201, 1180, 480, 481, 1090,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1181, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1161, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1202, 533, 534,
	535, 536, 537, 1091, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1144, 560, 561, 543, 544,
	562, 563, 1203, 564, 565, 566, 567, 568, 569, 570,
	1159, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1206, 578, 579, 580, 581, 1182, 585, 586,
	0, 587, 588, 1077, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1171, 1172,
	1173, 1174, 0, 606, 0, 598, 599, 600, 1183, 601,
	1184, 1101, 602, 603, 604, 605, 0, 607, 608, 0,
	1084, 609, 610, 611, 613, 614, 612, 615, 1145, 616,
	0, 0, 617, 618, 619, 676, 1168, 1205, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 1081, 0, 0, 0, 0,
	1123, 1095, 1096, 1097, 1093, 1094, 1106, 0, 1076, 0,
	0, 0, 0, 0, 0, 1074, 1075, 275, 277, 276,
	278, 279, 280, 281, 1107, 282, 283, 0, 1105, 0,
	0, 0, 1147, 1111, 0, 0, 0, 284, 285, 1187,
	286, 287, 288, 289, 290, 291, 630, 1160, 0, 292,
	1167, 293, 1166, 0, 1177, 294, 295, 296, 297, 298,
	299, 1113, 1146, 1078, 300, 1207, 1208, 637, 0, 301,
	302, 1153, 0, 1134, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1188, 325, 326, 327, 1137, 1135, 1136, 1143,
	1139, 1138, 1142, 328, 329, 330, 331, 332, 1170, 333,
	1164, 1163, 1083, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1155, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1089,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1178, 1179, 364, 1102, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1162, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1189, 371, 372, 373, 1175, 1176, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1185, 0, 1112, 384, 0, 385, 386, 387, 388, 389,
	1148, 1149, 1152, 469, 1191, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1190, 400, 1157, 1158, 0, 1118, 0, 402,
	403, 1192, 1150, 1193, 404, 405, 406, 1194, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1186, 1195, 418, 419, 1196, 0,
	420, 0, 0, 0, 421, 422, 425, 1141, 1140, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1197, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1198, 465, 454, 1080, 3996, 1199, 466, 467,
	1103, 1151, 468, 1165, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1200, 479, 1201, 1180, 480, 481, 1090, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1181, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1161, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1202, 533, 534, 535, 536, 537,
	1091, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1144, 560, 561, 543, 544, 562, 563, 1203,
	564, 565, 566, 567, 568, 569, 570, 1159, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1206,
	578, 579, 580, 581, 1182, 585, 586, 0, 587, 588,
	1077, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1171, 1172, 1173, 1174, 0,
	606, 0, 598, 599, 600, 1183, 601, 1184, 1101, 602,
	603, 604, 605, 0, 607, 608, 0, 1084, 609, 610,
	611, 613, 614, 612, 615, 1145, 616, 0, 0, 617,
	618, 619, 676, 1168, 1205, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1081, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1076, 0, 0, 0, 0,
	0, 0, 1074, 1075, 1931, 0, 0, 0, 0, 0,
	0, 1107, 0, 0, 0, 1105, 1123, 1095, 1096, 1097,
	1093, 1094, 1106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 1147, 1111,
	0, 0, 0, 284, 285, 1187, 286, 287, 288, 289,
	290, 291, 630, 1160, 0, 292, 1167, 293, 1166, 0,
	1177, 294, 295, 296, 297, 298, 299, 1113, 1146, 1078,
	300, 1207, 1208, 637, 0, 301, 302, 1153, 0, 1134,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1188, 325,
	326, 327, 1137, 1135, 1136, 1143, 1139, 1138, 1142, 328,
	329, 330, 331, 332, 1170, 333, 1164, 1163, 1083, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1155, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1089, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1178, 1179, 364, 1102,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1162,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1189,
	371, 372, 373, 1175, 1176, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1185, 0, 1112, 384,
	0, 385, 386, 387, 388, 389, 1148, 1149, 1152, 469,
	1191, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1190, 400,
	1157, 1158, 0, 1118, 0, 402, 403, 1192, 1150, 1193,
	404, 405, 406, 1194, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1186, 1195, 418, 419, 1196, 0, 420, 0, 0, 0,
	421, 422, 425, 1141, 1140, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1197, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1198, 465,
	454, 1080, 274, 1199, 466, 467, 1103, 1151, 468, 1165,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1200, 479, 1201, 1180,
	480, 481, 1090, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1181, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1161,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1202, 533, 534, 535, 536, 537, 1091, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1144, 560,
	561, 543, 544, 562, 563, 1203, 564, 565, 566, 567,
	568, 569, 570, 1159, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1206, 578, 579, 580, 581,
	1182, 585, 586, 0, 587, 588, 1077, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1171, 1172, 1173, 1174, 0, 606, 0, 598, 599,
	600, 1183, 601, 1184, 1101, 602, 603, 604, 605, 0,
	607, 608, 0, 1084, 609, 610, 611, 613, 614, 612,
	615, 1145, 616, 0, 0, 617, 618, 619, 676, 1168,
	1205, 3709, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1081, 0,
	0, 0, 0, 1123, 1095, 1096, 1097, 1093, 1094, 1106,
	0, 1076, 0, 0, 0, 0, 0, 0, 1074, 1075,
	275, 277, 276, 278, 279, 280, 281, 1107, 282, 283,
	0, 1105, 0, 0, 0, 1147, 1111, 0, 0, 0,
	284, 285, 1187, 286, 287, 288, 289, 290, 291, 630,
	1160, 0, 292, 1167, 293, 1166, 0, 1177, 294, 295,
	296, 297, 298, 299, 1113, 1146, 1078, 300, 1207, 1208,
	637, 0, 301, 302, 1153, 0, 1134, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1188, 325, 326, 327, 1137,
	1135, 1136, 1143, 1139, 1138, 1142, 328, 329, 330, 331,
	332, 1170, 333, 1164, 1163, 1083, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1155, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1089, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1178, 1179, 364, 1102, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1162, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1189, 371, 372, 373,
	1175, 1176, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1185, 0, 1112, 384, 0, 385, 386,
	387, 388, 389, 1148, 1149, 1152, 469, 1191, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1190, 400, 1157, 1158, 0,
	1118, 0, 402, 403, 1192, 1150, 1193, 404, 405, 406,
	1194, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1186, 1195, 418,
	419, 1196, 0, 420, 0, 0, 0, 421, 422, 425,
	1141, 1140, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1197, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1198, 465, 454, 1080, 274,
	1199, 466, 467, 1103, 1151, 468, 1165, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1200, 479, 1201, 1180, 480, 481, 1090,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1181, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1161, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1202, 533, 534,
	535, 536, 537, 1091, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1144, 560, 561, 543, 544,
	562, 563, 1203, 564, 565, 566, 567, 568, 569, 570,
	1159, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1206, 578, 579, 580, 581, 1182, 585, 586,
	0, 587, 588, 1077, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1171, 1172,
	1173, 1174, 0, 606, 0, 598, 599, 600, 1183, 601,
	1184, 1101, 602, 603, 604, 605, 0, 607, 608, 0,
	1084, 609, 610, 611, 613, 614, 612, 615, 1145, 616,
	0, 0, 617, 618, 619, 676, 1168, 1205, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 1081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1076, 0,
	0, 0, 0, 0, 0, 1074, 1075, 1931, 0, 0,
	0, 0, 0, 0, 1107, 0, 0, 0, 1105, 1123,
	1095, 1096, 1097, 1093, 1094, 1106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 1147, 1111, 0, 0, 0, 284, 285, 1187, 286,
	287, 288, 289, 290, 291, 630, 1160, 0, 292, 1167,
	293, 1166, 0, 1177, 294, 295, 296, 297, 298, 299,
	1113, 1146, 1078, 300, 1207, 1208, 637, 0, 301, 302,
	1153, 0, 1134, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1188, 325, 326, 327, 1137, 1135, 1136, 1143, 1139,
	1138, 1142, 328, 329, 330, 331, 332, 1170, 333, 1164,
	1163, 1083, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1155, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1089, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1178,
	1179, 364, 1102, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1162, 0, 0, 0, 368, 0, 369, 370,
	0, 2704, 1189, 371, 372, 373, 1175, 1176, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1185,
	0, 1112, 384, 0, 385, 386, 387, 388, 389, 1148,
	1149, 1152, 469, 1191, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1190, 400, 1157, 1158, 0, 1118, 0, 402, 403,
	1192, 1150, 1193, 404, 405, 406, 1194, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1186, 1195, 418, 419, 1196, 0, 420,
	0, 0, 0, 421, 422, 425, 1141, 1140, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1197, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1198, 465, 454, 1080, 274, 1199, 466, 467, 1103,
	1151, 468, 1165, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1200,
	479, 1201, 1180, 480, 481, 1090, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1181, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1161, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1202, 533, 534, 535, 536, 537, 1091,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1144, 560, 561, 543, 544, 562, 563, 1203, 564,
	565, 566, 567, 568, 569, 570, 1159, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1206, 578,
	579, 580, 581, 1182, 585, 586, 0, 587, 588, 1077,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1171, 1172, 1173, 1174, 0, 606,
	0, 598, 599, 600, 1183, 601, 1184, 1101, 602, 603,
	604, 605, 0, 607, 608, 0, 1084, 609, 610, 611,
	613, 614, 612, 615, 1145, 616, 0, 0, 617, 618,
	619, 676, 1168, 1205, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1081, 0, 0, 0, 0, 1123, 1095, 1096, 1097,
	1093, 1094, 1106, 0, 1076, 0, 0, 0, 0, 0,
	0, 1074, 1075, 275, 277, 276, 278, 279, 280, 281,
	1107, 282, 283, 0, 1105, 0, 0, 0, 1147, 1111,
	0, 0, 0, 284, 285, 1187, 286, 287, 288, 289,
	290, 291, 630, 1160, 0, 292, 1167, 293, 1166, 0,
	1177, 294, 295, 296, 297, 298, 299, 1113, 1146, 1078,
	300, 1207, 1208, 637, 0, 301, 302, 1153, 0, 1134,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1188, 325,
	326, 327, 1137, 1135, 1136, 1143, 1139, 1138, 1142, 328,
	329, 330, 331, 332, 1170, 333, 1164, 1163, 1083, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1155, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1089, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1178, 1179, 364, 1102,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1162,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1189,
	371, 372, 373, 1175, 1176, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1185, 0, 1112, 384,
	0, 385, 386, 387, 388, 389, 1148, 1149, 1152, 469,
	1191, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1190, 400,
	1157, 1158, 0, 1118, 0, 402, 403, 1192, 1150, 1193,
	404, 405, 406, 1194, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1186, 1195, 418, 419, 1196, 0, 420, 0, 0, 0,
	421, 422, 425, 1141, 1140, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1197, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1198, 465,
	454, 1080, 274, 1199, 466, 467, 1103, 1151, 468, 1165,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1200, 479, 1201, 1180,
	480, 481, 1090, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1181, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1161,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1202, 533, 534, 535, 536, 537, 1091, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1144, 560,
	561, 543, 544, 562, 563, 1203, 564, 565, 566, 567,
	568, 569, 570, 1159, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1206, 578, 579, 580, 581,
	1182, 585, 586, 0, 587, 588, 1077, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1171, 1172, 1173, 1174, 0, 606, 0, 598, 599,
	600, 1183, 601, 1184, 1101, 602, 603, 604, 605, 0,
	607, 608, 0, 1084, 609, 610, 611, 613, 614, 612,
	615, 1145, 616, 0, 0, 617, 618, 619, 676, 1168,
	1205, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1081, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1076, 0, 0, 0, 0, 0, 0, 1074, 1075,
	0, 0, 0, 0, 0, 0, 0, 1107, 1860, 0,
	2709, 1105, 1123, 1095, 1096, 1097, 1093, 1094, 1106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 1147, 1111, 0, 0, 0, 284,
	285, 1187, 286, 287, 288, 289, 290, 291, 630, 1160,
	0, 292, 1167, 293, 1166, 0, 1177, 294, 295, 296,
	297, 298, 299, 1113, 1146, 1078, 300, 1207, 1208, 637,
	0, 301, 302, 1153, 0, 1134, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1188, 325, 326, 327, 1137, 1135,
	1136, 1143, 1139, 1138, 1142, 328, 329, 330, 331, 332,
	1170, 333, 1164, 1163, 1083, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1155,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1089, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1178, 1179, 364, 1102, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1162, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1189, 371, 372, 373, 1175,
	1176, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1185, 0, 1112, 384, 0, 385, 386, 387,
	388, 389, 1148, 1149, 1152, 469, 1191, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1190, 400, 1157, 1158, 0, 1118,
	0, 402, 403, 1192, 1150, 1193, 404, 405, 406, 1194,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1186, 1195, 418, 419,
	1196, 0, 420, 0, 0, 0, 421, 422, 425, 1141,
	1140, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1197, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1198, 465, 454, 1080, 274, 1199,
	466, 467, 1103, 1151, 468, 1165, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1200, 479, 1201, 1180, 480, 481, 1090, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1181,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1161, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1202, 533, 534, 535,
	536, 537, 1091, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1144, 560, 561, 543, 544, 562,
	563, 1203, 564, 565, 566, 567, 568, 569, 570, 1159,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1206, 578, 579, 580, 581, 1182, 585, 586, 0,
	587, 588, 1077, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1171, 1172, 1173,
	1174, 0, 606, 0, 598, 599, 600, 1183, 601, 1184,
	1101, 602, 603, 604, 605, 0, 607, 608, 0, 1084,
	609, 610, 611, 613, 614, 612, 615, 1145, 616, 0,
	0, 617, 618, 619, 676, 1168, 1205, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1081, 0, 0, 2707, 0, 1123,
	1095, 1096, 1097, 1093, 1094, 1106, 0, 1076, 0, 0,
	0, 0, 0, 0, 1074, 1075, 275, 277, 276, 278,
	279, 280, 281, 1107, 282, 283, 0, 1105, 0, 0,
	0, 1147, 1111, 0, 0, 0, 284, 285, 1187, 286,
	287, 288, 289, 290, 291, 630, 1160, 0, 292, 1167,
	293, 1166, 0, 1177, 294, 295, 296, 297, 298, 299,
	1113, 1146, 1078, 300, 1207, 1208, 637, 0, 301, 302,
	1153, 0, 1134, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1188, 325, 326, 327, 1137, 1135, 1136, 1143, 1139,
	1138, 1142, 328, 329, 330, 331, 332, 1170, 333, 1164,
	1163, 1083, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1155, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1089, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1178,
	1179, 364, 1102, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1162, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1189, 371, 372, 373, 1175, 1176, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1185,
	0, 1112, 384, 0, 385, 386, 387, 388, 389, 1148,
	1149, 1152, 469, 1191, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1190, 400, 1157, 1158, 0, 1118, 0, 402, 403,
	1192, 1150, 1193, 404, 405, 406, 1194, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1186, 1195, 418, 419, 1196, 0, 420,
	0, 0, 0, 421, 422, 425, 1141, 1140, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1197, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1198, 465, 454, 1080, 274, 1199, 466, 467, 1103,
	1151, 468, 1165, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1200,
	479, 1201, 1180, 480, 481, 1090, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1181, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1161, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1202, 533, 534, 535, 536, 537, 1091,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1144, 560, 561, 543, 544, 562, 563, 1203, 564,
	565, 566, 567, 568, 569, 570, 1159, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1206, 578,
	579, 580, 581, 1182, 585, 586, 0, 587, 588, 1077,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1171, 1172, 1173, 1174, 0, 606,
	0, 598, 599, 600, 1183, 601, 1184, 1101, 602, 603,
	604, 605, 0, 607, 608, 0, 1084, 609, 610, 611,
	613, 614, 612, 615, 1145, 616, 0, 0, 617, 618,
	619, 676, 1168, 1205, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1081, 0, 0, 2695, 0, 1123, 1095, 1096, 1097,
	1093, 1094, 1106, 0, 1076, 0, 0, 0, 0, 0,
	0, 1074, 1075, 275, 277, 276, 278, 279, 280, 281,
	1107, 282, 283, 0, 1105, 0, 0, 0, 1147, 1111,
	0, 0, 0, 284, 285, 1187, 286, 287, 288, 289,
	290, 291, 630, 1160, 0, 292, 1167, 293, 1166, 0,
	1177, 294, 295, 296, 297, 298, 299, 1113, 1146, 1078,
	300, 1207, 1208, 637, 0, 301, 302, 1153, 0, 1134,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1188, 325,
	326, 327, 1137, 1135, 1136, 1143, 1139, 1138, 1142, 328,
	329, 330, 331, 332, 1170, 333, 1164, 1163, 1083, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1155, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1089, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1178, 1179, 364, 1102,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1162,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1189,
	371, 372, 373, 1175, 1176, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1185, 0, 1112, 384,
	0, 385, 386, 387, 388, 389, 1148, 1149, 1152, 469,
	1191, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1190, 400,
	1157, 1158, 0, 1118, 0, 402, 403, 1192, 1150, 1193,
	404, 405, 406, 1194, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1186, 1195, 418, 419, 1196, 0, 420, 0, 0, 0,
	421, 422, 425, 1141, 1140, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1197, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1198, 465,
	454, 1080, 274, 1199, 466, 467, 1103, 1151, 468, 1165,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1200, 479, 1201, 1180,
	480, 481, 1090, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1181, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1161,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1202, 533, 534, 535, 536, 537, 1091, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1144, 560,
	561, 543, 544, 562, 563, 1203, 564, 565, 566, 567,
	568, 569, 570, 1159, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1206, 578, 579, 580, 581,
	1182, 585, 586, 0, 587, 588, 1077, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1171, 1172, 1173, 1174, 0, 606, 0, 598, 599,
	600, 1183, 601, 1184, 1101, 602, 603, 604, 605, 0,
	607, 608, 0, 1084, 609, 610, 611, 613, 614, 612,
	615, 1145, 616, 0, 0, 617, 618, 619, 676, 1168,
	1205, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1081, 0,
	0, 2683, 0, 1123, 1095, 1096, 1097, 1093, 1094, 1106,
	0, 1076, 0, 0, 0, 0, 0, 0, 1074, 1075,
	275, 277, 276, 278, 279, 280, 281, 1107, 282, 283,
	0, 1105, 0, 0, 0, 1147, 1111, 0, 0, 0,
	284, 285, 1187, 286, 287, 288, 289, 290, 291, 630,
	1160, 0, 292, 1167, 293, 1166, 0, 1177, 294, 295,
	296, 297, 298, 299, 1113, 1146, 1078, 300, 1207, 1208,
	637, 0, 301, 302, 1153, 0, 1134, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1188, 325, 326, 327, 1137,
	1135, 1136, 1143, 1139, 1138, 1142, 328, 329, 330, 331,
	332, 1170, 333, 1164, 1163, 1083, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1155, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1089, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1178, 1179, 364, 1102, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1162, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1189, 371, 372, 373,
	1175, 1176, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1185, 0, 1112, 384, 0, 385, 386,
	387, 388, 389, 1148, 1149, 1152, 469, 1191, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1190, 400, 1157, 1158, 0,
	1118, 0, 402, 403, 1192, 1150, 1193, 404, 405, 406,
	1194, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1186, 1195, 418,
	419, 1196, 0, 420, 0, 0, 0, 421, 422, 425,
	1141, 1140, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1197, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1198, 465, 454, 1080, 274,
	1199, 466, 467, 1103, 1151, 468, 1165, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1200, 479, 1201, 1180, 480, 481, 1090,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1181, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1161, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1202, 533, 534,
	535, 536, 537, 1091, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1144, 560, 561, 543, 544,
	562, 563, 1203, 564, 565, 566, 567, 568, 569, 570,
	1159, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1206, 578, 579, 580, 581, 1182, 585, 586,
	0, 587, 588, 1077, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1171, 1172,
	1173, 1174, 0, 606, 0, 598, 599, 600, 1183, 601,
	1184, 1101, 602, 603, 604, 605, 0, 607, 608, 0,
	1084, 609, 610, 611, 613, 614, 612, 615, 1145, 616,
	0, 0, 617, 618, 619, 676, 1168, 1205, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 1081, 0, 0, 2681, 0,
	2672, 2679, 1096, 1097, 1093, 1094, 1106, 0, 1076, 0,
	0, 0, 0, 0, 0, 1074, 1075, 275, 277, 276,
	278, 279, 280, 281, 1107, 282, 283, 0, 1105, 0,
	0, 0, 1147, 1111, 0, 0, 0, 284, 285, 1187,
	286, 287, 288, 289, 290, 291, 630, 1160, 0, 292,
	1167, 293, 1166, 0, 1177, 294, 295, 296, 297, 298,
	299, 1113, 1146, 1078, 300, 1207, 1208, 637, 0, 301,
	302, 1153, 0, 1134, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1188, 325, 326, 327, 1137, 1135, 1136, 1143,
	1139, 1138, 1142, 328, 329, 330, 331, 332, 1170, 2675,
	1164, 1163, 1083, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1155, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1089,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1178, 1179, 364, 1102, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1162, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1189, 371, 372, 373, 1175, 1176, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1185, 0, 1112, 384, 0, 385, 386, 387, 2676, 389,
	1148, 1149, 1152, 469, 1191, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1190, 400, 1157, 1158, 0, 1118, 0, 402,
	403, 1192, 1150, 1193, 404, 405, 406, 1194, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1186, 1195, 418, 419, 1196, 0,
	420, 0, 0, 0, 421, 422, 425, 1141, 1140, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	2677, 435, 2674, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1197, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1198, 465, 454, 1080, 274, 1199, 466, 467,
	1103, 1151, 468, 1165, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1200, 479, 1201, 1180, 480, 481, 1090, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1181, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1161, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1202, 533, 534, 535, 536, 537,
	1091, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 2678, 0, 555, 556, 554, 557,
	558, 559, 1144, 560, 561, 543, 544, 562, 563, 1203,
	564, 565, 566, 567, 568, 569, 570, 1159, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1206,
	578, 579, 580, 581, 1182, 585, 586, 0, 587, 588,
	1077, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1171, 1172, 1173, 1174, 0,
	606, 0, 598, 599, 600, 1183, 601, 1184, 1101, 602,
	603, 604, 605, 0, 607, 608, 0, 1084, 609, 610,
	611, 613, 614, 612, 615, 1145, 616, 0, 0, 617,
	618, 619, 676, 1168, 1205, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	2673, 628, 1081, 0, 0, 2669, 0, 2672, 2679, 1096,
	1097, 1093, 1094, 1106, 0, 1076, 0, 0, 0, 0,
	0, 0, 1074, 1075, 275, 277, 276, 278, 279, 280,
	281, 1107, 282, 283, 0, 1105, 0, 0, 0, 1147,
	1111, 0, 0, 0, 284, 285, 1187, 286, 287, 288,
	289, 290, 291, 630, 1160, 0, 292, 1167, 293, 1166,
	0, 1177, 294, 295, 296, 297, 298, 299, 1113, 1146,
	1078, 300, 1207, 1208, 637, 0, 301, 302, 1153, 0,
	1134, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1188,
	325, 326, 327, 1137, 1135, 1136, 1143, 1139, 1138, 1142,
	328, 329, 330, 331, 332, 1170, 2675, 1164, 1163, 1083,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1155, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1089, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1178, 1179, 364,
	1102, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1162, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1189, 371, 372, 373, 1175, 1176, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1185, 0, 1112,
	384, 0, 385, 386, 387, 2676, 389, 1148, 1149, 1152,
	469, 1191, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1190,
	400, 1157, 1158, 0, 1118, 0, 402, 403, 1192, 1150,
	1193, 404, 405, 406, 1194, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1186, 1195, 418, 419, 1196, 0, 420, 0, 0,
	0, 421, 422, 425, 1141, 1140, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 2677, 435, 2674,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1197, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1198,
	465, 454, 1080, 274, 1199, 466, 467, 1103, 1151, 468,
	1165, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1200, 479, 1201,
	1180, 480, 481, 1090, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1181, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1161, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1202, 533, 534, 535, 536, 537, 1091, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 2678, 0, 555, 556, 554, 557, 558, 559, 1144,
	560, 561, 543, 544, 562, 563, 1203, 564, 565, 566,
	567, 568, 569, 570, 1159, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 1206, 578, 579, 580,
	581, 1182, 585, 586, 0, 587, 588, 1077, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 1171, 1172, 1173, 1174, 0, 606, 0, 598,
	599, 600, 1183, 601, 1184, 1101, 602, 603, 604, 605,
	0, 607, 608, 0, 1084, 609, 610, 611, 613, 614,
	612, 615, 1145, 616, 0, 0, 617, 618, 619, 676,
	1168, 1205, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 2673, 628, 1081,
	0, 0, 0, 0, 1123, 1095, 1096, 1097, 1093, 1094,
	1106, 0, 1076, 0, 0, 0, 0, 0, 0, 1074,
	1075, 275, 277, 276, 278, 279, 280, 281, 1107, 282,
	283, 0, 1105, 0, 0, 0, 1147, 1111, 0, 0,
	0, 284, 285, 1187, 286, 287, 288, 289, 290, 291,
	630, 1160, 0, 292, 1167, 293, 1166, 0, 1177, 294,
	295, 296, 297, 298, 299, 1113, 1146, 1078, 300, 1207,
	1208, 637, 0, 301, 302, 1153, 0, 1134, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1188, 325, 326, 327,
	1137, 1135, 1136, 1143, 1139, 1138, 1142, 328, 329, 330,
	331, 332, 1170, 333, 1164, 1163, 1083, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1155, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1089, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1178, 1179, 364, 1102, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1162, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1189, 371, 372,
	373, 1175, 1176, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1185, 0, 1112, 384, 0, 385,
	386, 387, 388, 389, 1148, 1149, 1152, 469, 1191, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1190, 400, 1157, 1158,
	0, 1118, 0, 402, 403, 1192, 1150, 1193, 404, 405,
	406, 1194, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1186, 1195,
	418, 419, 1196, 0, 420, 0, 0, 0, 421, 422,
	425, 1141, 1140, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1197, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1198, 465, 454, 1080,
	274, 1199, 466, 467, 1103, 1151, 468, 1165, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1200, 479, 1201, 1180, 480, 481,
	1090, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1181, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1161, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1202, 533,
	534, 535, 536, 537, 1091, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1144, 560, 561, 543,
	544, 562, 563, 1203, 564, 565, 566, 567, 568, 569,
	570, 1159, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 1206, 578, 579, 580, 581, 1182, 585,
	586, 0, 587, 588, 1077, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 1171,
	1172, 1173, 1174, 0, 606, 0, 598, 599, 600, 1183,
	601, 1184, 1101, 602, 603, 604, 605, 0, 607, 608,
	0, 1084, 609, 610, 611, 613, 614, 612, 615, 1145,
	616, 0, 0, 617, 618, 619, 676, 1168, 1205, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1081, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1076,
	0, 0, 0, 0, 0, 0, 1074, 1075, 0, 0,
	0, 0, 0, 1868, 0, 1107, 0, 0, 0, 1105,
	1123, 1095, 1096, 1097, 1093, 1094, 1106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 2424, 282, 283, 0, 0, 0,
	0, 0, 1147, 1111, 0, 0, 0, 284, 285, 1187,
	286, 287, 288, 289, 290, 291, 630, 1160, 0, 292,
	1167, 293, 1166, 0, 1177, 294, 295, 296, 297, 298,
	299, 1113, 1146, 1078, 300, 1207, 1208, 637, 0, 301,
	302, 1153, 0, 1134, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1188, 325, 326, 327, 1137, 1135, 1136, 1143,
	1139, 1138, 1142, 328, 329, 330, 331, 332, 1170, 333,
	1164, 1163, 1083, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1155, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1089,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1178, 1179, 364, 1102, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1162, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1189, 371, 372, 373, 1175, 1176, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1185, 0, 1112, 384, 0, 385, 386, 387, 388, 389,
	1148, 1149, 1152, 469, 1191, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1190, 400, 1157, 1158, 0, 1118, 0, 402,
	403, 1192, 1150, 1193, 404, 405, 406, 1194, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1186, 1195, 418, 419, 1196, 0,
	420, 0, 0, 0, 421, 422, 425, 1141, 1140, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1197, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1198, 465, 454, 1080, 274, 1199, 466, 467,
	1103, 1151, 468, 1165, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1200, 479, 1201, 1180, 480, 481, 1090, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1181, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1161, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1202, 533, 534, 535, 536, 537,
	1091, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1144, 560, 561, 543, 544, 562, 563, 1203,
	564, 565, 566, 567, 568, 569, 570, 1159, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1206,
	578, 579, 580, 581, 1182, 585, 586, 0, 587, 588,
	1077, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1171, 1172, 1173, 1174, 0,
	606, 0, 598, 599, 600, 1183, 601, 1184, 1101, 602,
	603, 604, 605, 0, 607, 608, 0, 1084, 609, 610,
	611, 613, 614, 612, 615, 1145, 616, 0, 0, 617,
	618, 619, 676, 1168, 1205, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1081, 0, 0, 2388, 0, 1123, 1095, 1096,
	1097, 1093, 1094, 1106, 0, 1076, 0, 0, 0, 0,
	0, 0, 1074, 1075, 275, 277, 276, 278, 279, 280,
	281, 1107, 282, 283, 0, 1105, 0, 0, 0, 1147,
	1111, 0, 0, 0, 284, 285, 1187, 286, 287, 288,
	289, 290, 291, 630, 1160, 0, 292, 1167, 293, 1166,
	0, 1177, 294, 295, 296, 297, 298, 299, 1113, 1146,
	1078, 300, 1207, 1208, 637, 0, 301, 302, 1153, 0,
	1134, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1188,
	325, 326, 327, 1137, 1135, 1136, 1143, 1139, 1138, 1142,
	328, 329, 330, 331, 332, 1170, 333, 1164, 1163, 1083,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1155, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1089, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1178, 1179, 364,
	1102, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1162, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1189, 371, 372, 373, 1175, 1176, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1185, 0, 1112,
	384, 0, 385, 386, 387, 388, 389, 1148, 1149, 1152,
	469, 1191, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1190,
	400, 1157, 1158, 0, 1118, 0, 402, 403, 1192, 1150,
	1193, 404, 405, 406, 1194, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1186, 1195, 418, 419, 1196, 0, 420, 0, 0,
	0, 421, 422, 425, 1141, 1140, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1197, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1198,
	465, 454, 1080, 274, 1199, 466, 467, 1103, 1151, 468,
	1165, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1200, 479, 1201,
	1180, 480, 481, 1090, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1181, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1161, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1202, 533, 534, 535, 536, 537, 1091, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 1144,
	560, 561, 543, 544, 562, 563, 1203, 564, 565, 566,
	567, 568, 569, 570, 1159, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 1206, 578, 579, 580,
	581, 1182, 585, 586, 0, 587, 588, 1077, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 1171, 1172, 1173, 1174, 0, 606, 0, 598,
	599, 600, 1183, 601, 1184, 1101, 602, 603, 604, 605,
	0, 607, 608, 0, 1084, 609, 610, 611, 613, 614,
	612, 615, 1145, 616, 0, 0, 617, 618, 619, 676,
	1168, 1205, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1081,
	0, 0, 2364, 0, 1123, 1095, 1096, 1097, 1093, 1094,
	1106, 0, 1076, 0, 0, 0, 0, 0, 0, 1074,
	1075, 275, 277, 276, 278, 279, 280, 281, 1107, 282,
	283, 0, 1105, 0, 0, 0, 1147, 1111, 0, 0,
	0, 284, 285, 1187, 286, 287, 288, 289, 290, 291,
	630, 1160, 0, 292, 1167, 293, 1166, 0, 1177, 294,
	295, 296, 297, 298, 299, 1113, 1146, 1078, 300, 1207,
	1208, 637, 0, 301, 302, 1153, 0, 1134, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1188, 325, 326, 327,
	1137, 1135, 1136, 1143, 1139, 1138, 1142, 328, 329, 330,
	331, 332, 1170, 333, 1164, 1163, 1083, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1155, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1089, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1178, 1179, 364, 1102, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1162, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1189, 371, 372,
	373, 1175, 1176, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1185, 0, 1112, 384, 0, 385,
	386, 387, 388, 389, 1148, 1149, 1152, 469, 1191, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1190, 400, 1157, 1158,
	0, 1118, 0, 402, 403, 1192, 1150, 1193, 404, 405,
	406, 1194, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1186, 1195,
	418, 419, 1196, 0, 420, 0, 0, 0, 421, 422,
	425, 1141, 1140, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1197, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1198, 465, 454, 1080,
	274, 1199, 466, 467, 1103, 1151, 468, 1165, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1200, 479, 1201, 1180, 480, 481,
	1090, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1181, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1161, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1202, 533,
	534, 535, 536, 537, 1091, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1144, 560, 561, 543,
	544, 562, 563, 1203, 564, 565, 566, 567, 568, 569,
	570, 1159, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 1206, 578, 579, 580, 581, 1182, 585,
	586, 0, 587, 588, 1077, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 1171,
	1172, 1173, 1174, 0, 606, 0, 598, 599, 600, 1183,
	601, 1184, 1101, 602, 603, 604, 605, 0, 607, 608,
	0, 1084, 609, 610, 611, 613, 614, 612, 615, 1145,
	616, 0, 0, 617, 618, 619, 676, 1168, 1205, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1081, 0, 0, 1708,
	0, 1123, 1095, 1096, 1097, 1093, 1094, 1106, 0, 1076,
	0, 0, 0, 0, 0, 0, 1074, 1075, 275, 277,
	276, 278, 279, 280, 281, 1107, 282, 283, 0, 1105,
	0, 0, 0, 1147, 1111, 0, 0, 0, 284, 285,
	1187, 286, 287, 288, 289, 290, 291, 630, 1160, 0,
	292, 1167, 293, 1166, 0, 1177, 294, 295, 296, 297,
	298, 299, 1113, 1146, 1078, 300, 1207, 1208, 637, 0,
	301, 302, 1153, 0, 1134, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1188, 325, 326, 327, 1137, 1135, 1136,
	1143, 1139, 1138, 1142, 328, 329, 330, 331, 332, 1170,
	333, 1164, 1163, 1083, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1155, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1089, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1178, 1179, 364, 1102, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1162, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1189, 371, 372, 373, 1175, 1176,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1185, 0, 1112, 384, 0, 385, 386, 387, 388,
	389, 1148, 1149, 1152, 469, 1191, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1190, 400, 1157, 1158, 0, 1118, 0,
	402, 403, 1192, 1150, 1193, 404, 405, 406, 1194, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1186, 1195, 418, 419, 1196,
	0, 420, 0, 0, 0, 421, 422, 425, 1141, 1140,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1197,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1198, 465, 454, 1080, 274, 1199, 466,
	467, 1103, 1151, 468, 1165, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1200, 479, 1201, 1180, 480, 481, 1090, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1181, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1161, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1202, 533, 534, 535, 536,
	537, 1091, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1144, 560, 561, 543, 544, 562, 563,
	1203, 564, 565, 566, 567, 568, 569, 570, 1159, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	1206, 578, 579, 580, 581, 1182, 585, 586, 0, 587,
	588, 1077, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 1171, 1172, 1173, 1174,
	0, 606, 0, 598, 599, 600, 1183, 601, 1184, 1101,
	602, 603, 604, 605, 0, 607, 608, 0, 1084, 609,
	610, 611, 613, 614, 612, 615, 1145, 616, 0, 0,
	617, 618, 619, 676, 1168, 1205, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 1081, 0, 0, 1637, 0, 1123, 1095,
	1096, 1097, 1093, 1094, 1106, 0, 1076, 0, 0, 0,
	0, 0, 0, 1074, 1075, 275, 277, 276, 278, 279,
	280, 281, 1107, 282, 283, 0, 1105, 0, 0, 0,
	1147, 1111, 0, 0, 0, 284, 285, 1187, 286, 287,
	288, 289, 290, 291, 630, 1160, 0, 292, 1167, 293,
	1166, 0, 1177, 294, 295, 296, 297, 298, 299, 1113,
	1146, 1078, 300, 1207, 1208, 637, 0, 301, 302, 1153,
	0, 1134, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1188, 325, 326, 327, 1137, 1135, 1136, 1143, 1139, 1138,
	1142, 328, 329, 330, 331, 332, 1170, 333, 1164, 1163,
	1083, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 1155, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1089, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1178, 1179,
	364, 1102, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1162, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1189, 371, 372, 373, 1175, 1176, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1185, 0,
	1112, 384, 0, 385, 386, 387, 388, 389, 1148, 1149,
	1152, 469, 1191, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1190, 400, 1157, 1158, 0, 1118, 0, 402, 403, 1192,
	1150, 1193, 404, 405, 406, 1194, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1186, 1195, 418, 419, 1196, 0, 420, 0,
	0, 0, 421, 422, 425, 1141, 1140, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1197, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1198, 465, 454, 1080, 274, 1199, 466, 467, 1103, 1151,
	468, 1165, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1200, 479,
	1201, 1180, 480, 481, 1090, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 1181, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1161, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1202, 533, 534, 535, 536, 537, 1091, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	1144, 560, 561, 543, 544, 562, 563, 1203, 564, 565,
	566, 567, 568, 569, 570, 1159, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 1206, 578, 579,
	580, 581, 1182, 585, 586, 0, 587, 588, 1077, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 1171, 1172, 1173, 1174, 0, 606, 0,
	598, 599, 600, 1183, 601, 1184, 1101, 602, 603, 604,
	605, 0, 607, 608, 0, 1084, 609, 610, 611, 613,
	614, 612, 615, 1145, 616, 0, 0, 617, 618, 619,
	676, 1168, 1205, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1081, 0, 0, 1632, 0, 1123, 1095, 1096, 1097, 1093,
	1094, 1106, 0, 1076, 0, 0, 0, 0, 0, 0,
	1074, 1075, 275, 277, 276, 278, 279, 280, 281, 1107,
	282, 283, 0, 1105, 0, 0, 0, 1147, 1111, 0,
	0, 0, 284, 285, 1187, 286, 287, 288, 289, 290,
	291, 630, 1160, 0, 292, 1167, 293, 1166, 0, 1177,
	294, 295, 296, 297, 298, 299, 1113, 1146, 1078, 300,
	1207, 1208, 637, 0, 301, 302, 1153, 0, 1134, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1188, 325, 326,
	327, 1137, 1135, 1136, 1143, 1139, 1138, 1142, 328, 329,
	330, 331, 332, 1170, 333, 1164, 1163, 1083, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1155, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1089, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1178, 1179, 364, 1102, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1162, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1189, 371,
	372, 373, 1175, 1176, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1185, 0, 1112, 384, 0,
	385, 386, 387, 388, 389, 1148, 1149, 1152, 469, 1191,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1190, 400, 1157,
	1158, 0, 1118, 0, 402, 403, 1192, 1150, 1193, 404,
	405, 406, 1194, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1186,
	1195, 418, 419, 1196, 0, 420, 0, 0, 0, 421,
	422, 425, 1141, 1140, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1197, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1198, 465, 454,
	1080, 274, 1199, 466, 467, 1103, 1151, 468, 1165, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1200, 479, 1201, 1180, 480,
	481, 1090, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1181, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1161, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1202,
	533, 534, 535, 536, 537, 1091, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1144, 560, 561,
	543, 544, 562, 563, 1203, 564, 565, 566, 567, 568,
	569, 570, 1159, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1206, 578, 579, 580, 581, 1182,
	585, 586, 0, 587, 588, 1077, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1171, 1172, 1173, 1174, 0, 606, 0, 598, 599, 600,
	1183, 601, 1184, 1101, 602, 603, 604, 605, 0, 607,
	608, 0, 1084, 609, 610, 611, 613, 614, 612, 615,
	1145, 616, 0, 0, 617, 618, 619, 676, 1168, 1205,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1081, 0, 0,
	1623, 0, 1123, 1095, 1096, 1097, 1093, 1094, 1106, 0,
	1076, 0, 0, 0, 0, 0, 0, 1074, 1075, 275,
	277, 276, 278, 279, 280, 281, 1107, 282, 283, 0,
	1105, 0, 0, 0, 1147, 1111, 0, 0, 0, 284,
	285, 1187, 286, 287, 288, 289, 290, 291, 630, 1160,
	0, 292, 1167, 293, 1166, 0, 1177, 294, 295, 296,
	297, 298, 299, 1113, 1146, 1078, 300, 1207, 1208, 637,
	0, 301, 302, 1153, 0, 1134, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1188, 325, 326, 327, 1137, 1135,
	1136, 1143, 1139, 1138, 1142, 328, 329, 330, 331, 332,
	1170, 333, 1164, 1163, 1083, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1155,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1089, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1178, 1179, 364, 1102, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1162, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1189, 371, 372, 373, 1175,
	1176, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1185, 0, 1112, 384, 0, 385, 386, 387,
	388, 389, 1148, 1149, 1152, 469, 1191, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1190, 400, 1157, 1158, 0, 1118,
	0, 402, 403, 1192, 1150, 1193, 404, 405, 406, 1194,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1186, 1195, 418, 419,
	1196, 0, 420, 0, 0, 0, 421, 422, 425, 1141,
	1140, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1197, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1198, 465, 454, 1080, 274, 1199,
	466, 467, 1103, 1151, 468, 1165, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1200, 479, 1201, 1180, 480, 481, 1090, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1181,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1161, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1202, 533, 534, 535,
	536, 537, 1091, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1144, 560, 561, 543, 544, 562,
	563, 1203, 564, 565, 566, 567, 568, 569, 570, 1159,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1206, 578, 579, 580, 581, 1182, 585, 586, 0,
	587, 588, 1077, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1171, 1172, 1173,
	1174, 0, 606, 0, 598, 599, 600, 1183, 601, 1184,
	1101, 602, 603, 604, 605, 0, 607, 608, 0, 1084,
	609, 610, 611, 613, 614, 612, 615, 1145, 616, 0,
	0, 617, 618, 619, 676, 1168, 1205, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1081, 0, 0, 1618, 0, 1123,
	1095, 1096, 1097, 1093, 1094, 1106, 0, 1076, 0, 0,
	0, 0, 0, 0, 1074, 1075, 275, 277, 276, 278,
	279, 280, 281, 1107, 282, 283, 0, 1105, 0, 0,
	0, 1147, 1111, 0, 0, 0, 284, 285, 1187, 286,
	287, 288, 289, 290, 291, 630, 1160, 0, 292, 1167,
	293, 1166, 0, 1177, 294, 295, 296, 297, 298, 299,
	1113, 1146, 1078, 300, 1207, 1208, 637, 0, 301, 302,
	1153, 0, 1134, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1188, 325, 326, 327, 1137, 1135, 1136, 1143, 1139,
	1138, 1142, 328, 329, 330, 331, 332, 1170, 333, 1164,
	1163, 1083, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1155, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1089, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1178,
	1179, 364, 1102, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1162, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1189, 371, 372, 373, 1175, 1176, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1185,
	0, 1112, 384, 0, 385, 386, 387, 388, 389, 1148,
	1149, 1152, 469, 1191, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1190, 400, 1157, 1158, 0, 1118, 0, 402, 403,
	1192, 1150, 1193, 404, 405, 406, 1194, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1186, 1195, 418, 419, 1196, 0, 420,
	0, 0, 0, 421, 422, 425, 1141, 1140, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1197, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1198, 465, 454, 1080, 274, 1199, 466, 467, 1103,
	1151, 468, 1165, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1200,
	479, 1201, 1180, 480, 481, 1090, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1181, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1161, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1202, 533, 534, 535, 536, 537, 1091,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1144, 560, 561, 543, 544, 562, 563, 1203, 564,
	565, 566, 567, 568, 569, 570, 1159, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1206, 578,
	579, 580, 581, 1182, 585, 586, 0, 587, 588, 1077,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1171, 1172, 1173, 1174, 0, 606,
	0, 598, 599, 600, 1183, 601, 1184, 1101, 602, 603,
	604, 605, 0, 607, 608, 0, 1084, 609, 610, 611,
	613, 614, 612, 615, 1145, 616, 0, 0, 617, 618,
	619, 676, 1168, 1205, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1081, 0, 0, 1530, 0, 1123, 1095, 1096, 1097,
	1093, 1094, 1106, 0, 1076, 0, 0, 0, 0, 0,
	0, 1074, 1075, 275, 277, 276, 278, 279, 280, 281,
	1107, 282, 283, 0, 1105, 0, 0, 0, 1147, 1111,
	0, 0, 0, 284, 285, 1187, 286, 287, 288, 289,
	290, 291, 630, 1160, 0, 292, 1167, 293, 1166, 0,
	1177, 294, 295, 296, 297, 298, 299, 1113, 1146, 1078,
	300, 1207, 1208, 637, 0, 301, 302, 1153, 0, 1134,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1188, 325,
	326, 327, 1137, 1135, 1136, 1143, 1139, 1138, 1142, 328,
	329, 330, 331, 332, 1170, 333, 1164, 1163, 1083, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1155, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1089, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1178, 1179, 364, 1102,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1162,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1189,
	371, 372, 373, 1175, 1176, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1185, 0, 1112, 384,
	0, 385, 386, 387, 388, 389, 1529, 1149, 1152, 469,
	1191, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1190, 400,
	1157, 1158, 0, 1118, 0, 402, 403, 1192, 1150, 1193,
	404, 405, 406, 1194, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1186, 1195, 418, 419, 1196, 0, 420, 0, 0, 0,
	421, 422, 425, 1141, 1140, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1197, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1198, 465,
	454, 1080, 274, 1199, 466, 467, 1103, 1151, 468, 1165,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1200, 479, 1201, 1180,
	480, 481, 1090, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1181, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1161,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1202, 533, 534, 535, 536, 537, 1091, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1144, 560,
	561, 543, 544, 562, 563, 1203, 564, 565, 566, 567,
	568, 569, 570, 1159, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1206, 578, 579, 580, 581,
	1182, 585, 586, 0, 587, 588, 1077, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1171, 1172, 1173, 1174, 0, 606, 0, 598, 599,
	600, 1183, 601, 1184, 1101, 602, 603, 604, 605, 0,
	607, 608, 0, 1084, 609, 610, 611, 613, 614, 612,
	615, 1145, 616, 0, 0, 617, 618, 619, 676, 1168,
	1205, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1081, 0,
	0, 1524, 0, 1123, 1095, 1096, 1097, 1093, 1094, 1106,
	0, 1076, 0, 0, 0, 0, 0, 0, 1074, 1075,
	275, 277, 276, 278, 279, 280, 281, 1107, 282, 283,
	0, 1105, 0, 0, 0, 1147, 1111, 0, 0, 0,
	284, 285, 1187, 286, 287, 288, 289, 290, 291, 630,
	1160, 0, 292, 1167, 293, 1166, 0, 1177, 294, 295,
	296, 297, 298, 299, 1113, 1146, 1078, 300, 1207, 1208,
	637, 0, 301, 302, 1153, 0, 1134, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1188, 325, 326, 327, 1137,
	1135, 1136, 1143, 1139, 1138, 1142, 328, 329, 330, 331,
	332, 1170, 333, 1164, 1163, 1083, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1155, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1089, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1178, 1179, 364, 1102, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1162, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1189, 371, 372, 373,
	1175, 1176, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1185, 0, 1112, 384, 0, 385, 386,
	387, 388, 389, 1523, 1149, 1152, 469, 1191, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1190, 400, 1157, 1158, 0,
	1118, 0, 402, 403, 1192, 1150, 1193, 404, 405, 406,
	1194, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1186, 1195, 418,
	419, 1196, 0, 420, 0, 0, 0, 421, 422, 425,
	1141, 1140, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1197, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1198, 465, 454, 1080, 274,
	1199, 466, 467, 1103, 1151, 468, 1165, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1200, 479, 1201, 1180, 480, 481, 1090,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1181, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1161, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1202, 533, 534,
	535, 536, 537, 1091, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1144, 560, 561, 543, 544,
	562, 563, 1203, 564, 565, 566, 567, 568, 569, 570,
	1159, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1206, 578, 579, 580, 581, 1182, 585, 586,
	0, 587, 588, 1077, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1171, 1172,
	1173, 1174, 0, 606, 0, 598, 599, 600, 1183, 601,
	1184, 1101, 602, 603, 604, 605, 0, 607, 608, 0,
	1084, 609, 610, 611, 613, 614, 612, 615, 1145, 616,
	0, 0, 617, 618, 619, 676, 1168, 1205, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 1081, 0, 0, 1517, 0,
	1123, 1095, 1096, 1097, 1093, 1094, 1106, 0, 1076, 0,
	0, 0, 0, 0, 0, 1074, 1075, 275, 277, 276,
	278, 279, 280, 281, 1107, 282, 283, 0, 1105, 0,
	0, 0, 1147, 1111, 0, 0, 0, 284, 285, 1187,
	286, 287, 288, 289, 290, 291, 630, 1160, 0, 292,
	1167, 293, 1166, 0, 1177, 294, 295, 296, 297, 298,
	299, 1113, 1146, 1078, 300, 1207, 1208, 637, 0, 301,
	302, 1153, 0, 1134, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1188, 325, 326, 327, 1137, 1135, 1136, 1143,
	1139, 1138, 1142, 328, 329, 330, 331, 332, 1170, 333,
	1164, 1163, 1083, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1155, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1089,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1178, 1179, 364, 1102, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1162, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1189, 371, 372, 373, 1175, 1176, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1185, 0, 1112, 384, 0, 385, 386, 387, 388, 389,
	1148, 1149, 1152, 469, 1191, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1190, 400, 1157, 1158, 0, 1118, 0, 402,
	403, 1192, 1150, 1193, 404, 405, 406, 1194, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1186, 1195, 418, 419, 1196, 0,
	420, 0, 0, 0, 421, 422, 425, 1141, 1140, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1197, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1198, 465, 454, 1080, 274, 1199, 466, 467,
	1103, 1151, 468, 1165, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1200, 479, 1201, 1180, 480, 481, 1090, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1181, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1161, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1202, 533, 534, 535, 536, 537,
	1091, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1144, 560, 561, 543, 544, 562, 563, 1203,
	564, 565, 566, 567, 568, 569, 570, 1159, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1206,
	578, 579, 580, 581, 1182, 585, 586, 0, 587, 588,
	1077, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1171, 1172, 1173, 1174, 0,
	606, 0, 598, 599, 600, 1183, 601, 1184, 1101, 602,
	603, 604, 605, 0, 607, 608, 0, 1084, 609, 610,
	611, 613, 614, 612, 615, 1145, 616, 0, 0, 617,
	618, 619, 676, 1168, 1205, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1081, 0, 0, 1334, 0, 1123, 1095, 1096,
	1097, 1093, 1094, 1106, 0, 1076, 0, 0, 0, 0,
	0, 0, 1074, 1075, 275, 277, 276, 278, 279, 280,
	281, 1107, 282, 283, 0, 1105, 0, 0, 0, 1147,
	1111, 0, 0, 0, 284, 285, 1187, 286, 287, 288,
	289, 290, 291, 630, 1160, 0, 292, 1167, 293, 1166,
	0, 1177, 294, 295, 296, 297, 298, 299, 1113, 1146,
	1078, 300, 1207, 1208, 637, 0, 301, 302, 1153, 0,
	1134, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1188,
	325, 326, 327, 1137, 1135, 1136, 1143, 1139, 1138, 1142,
	328, 329, 330, 331, 332, 1170, 333, 1164, 1163, 1083,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1155, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1089, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1178, 1179, 364,
	1102, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1162, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1189, 371, 372, 373, 1175, 1176, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1185, 0, 1112,
	384, 0, 385, 386, 387, 388, 389, 1148, 1149, 1152,
	469, 1191, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1190,
	400, 1157, 1158, 0, 1118, 0, 402, 403, 1192, 1150,
	1193, 404, 405, 406, 1194, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1186, 1195, 418, 419, 1196, 0, 420, 0, 0,
	0, 421, 422, 425, 1141, 1140, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1197, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1198,
	465, 454, 1080, 274, 1199, 466, 467, 1103, 1151, 468,
	1165, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1200, 479, 1201,
	1180, 480, 481, 1090, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1181, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1161, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1202, 533, 534, 535, 536, 537, 1091, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 1144,
	560, 561, 543, 544, 562, 563, 1203, 564, 565, 566,
	567, 568, 569, 570, 1159, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 1206, 578, 579, 580,
	581, 1182, 585, 586, 0, 587, 588, 1077, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 1171, 1172, 1173, 1174, 0, 606, 0, 598,
	599, 600, 1183, 601, 1184, 1101, 602, 603, 604, 605,
	0, 607, 608, 0, 1084, 609, 610, 611, 613, 614,
	612, 615, 1145, 616, 0, 0, 617, 618, 619, 676,
	1168, 1205, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1081,
	0, 0, 0, 0, 1123, 1095, 1096, 1097, 1093, 1094,
	1106, 0, 1076, 0, 0, 0, 0, 0, 0, 1074,
	1075, 275, 277, 276, 278, 279, 280, 281, 1107, 282,
	283, 0, 1105, 0, 0, 0, 1147, 1111, 0, 0,
	0, 284, 285, 1187, 286, 287, 288, 289, 290, 291,
	630, 1160, 0, 292, 1167, 293, 1166, 0, 1177, 294,
	295, 296, 297, 298, 299, 1113, 1146, 1078, 300, 1207,
	1208, 637, 0, 301, 302, 1153, 0, 1134, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1188, 325, 326, 327,
	1137, 1135, 1136, 1143, 1139, 1138, 1142, 328, 329, 330,
	331, 332, 1170, 333, 1164, 1163, 1083, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1155, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1089, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1178, 1179, 364, 1102, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1162, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1189, 371, 372,
	373, 1175, 1176, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1185, 0, 1112, 384, 0, 385,
	386, 387, 388, 389, 1148, 1149, 1152, 469, 1191, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1190, 400, 1157, 1158,
	0, 1118, 0, 402, 403, 1192, 1150, 1193, 404, 405,
	406, 1194, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1186, 1195,
	418, 419, 1196, 0, 420, 0, 0, 0, 421, 422,
	425, 1141, 1140, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1197, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1198, 465, 454, 1080,
	274, 1199, 466, 467, 1103, 1151, 468, 1165, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1200, 479, 1201, 1180, 480, 481,
	1090, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1181, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1161, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1202, 533,
	534, 535, 536, 537, 1091, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 1144, 560, 561, 543,
	544, 562, 563, 1203, 564, 565, 566, 567, 568, 569,
	570, 1159, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 1206, 578, 579, 580, 581, 1182, 585,
	586, 0, 587, 588, 1077, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 1171,
	1172, 1173, 1174, 0, 606, 0, 598, 599, 600, 1183,
	601, 1184, 1101, 602, 603, 604, 605, 0, 607, 608,
	0, 1084, 609, 610, 611, 613, 614, 612, 615, 1145,
	616, 0, 0, 617, 618, 619, 676, 1168, 1205, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1081, 0, 0, 0,
	0, 1123, 1095, 1096, 1097, 1093, 1094, 1106, 0, 1076,
	0, 0, 0, 0, 0, 0, 1074, 1075, 275, 277,
	276, 278, 279, 280, 281, 1107, 282, 283, 0, 1105,
	0, 0, 0, 1147, 1111, 0, 0, 0, 284, 285,
	1187, 286, 287, 288, 289, 290, 291, 630, 1160, 0,
	292, 1167, 293, 1166, 0, 1177, 294, 295, 296, 297,
	298, 299, 1113, 1146, 1078, 300, 1207, 1208, 637, 0,
	301, 302, 1153, 0, 1134, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1188, 325, 326, 4706, 1137, 1135, 1136,
	1143, 1139, 1138, 1142, 328, 329, 330, 331, 332, 1170,
	333, 1164, 1163, 1083, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1155, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1089, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1178, 1179, 364, 1102, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1162, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1189, 371, 372, 373, 1175, 1176,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1185, 0, 1112, 384, 0, 385, 386, 387, 388,
	389, 1148, 1149, 1152, 469, 1191, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1190, 400, 1157, 1158, 0, 1118, 0,
	402, 403, 1192, 1150, 1193, 404, 405, 406, 1194, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1186, 1195, 418, 419, 1196,
	0, 420, 0, 0, 0, 421, 422, 425, 1141, 1140,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1197,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1198, 465, 454, 1080, 274, 1199, 466,
	467, 1103, 1151, 468, 1165, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1200, 479, 1201, 1180, 480, 481, 1090, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1181, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1161, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1202, 533, 534, 535, 536,
	537, 1091, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1144, 560, 561, 543, 544, 562, 563,
	1203, 564, 565, 566, 567, 568, 569, 570, 1159, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	1206, 578, 579, 580, 581, 1182, 585, 586, 0, 587,
	588, 1077, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 1171, 1172, 1173, 1174,
	0, 606, 0, 598, 599, 600, 1183, 601, 1184, 1101,
	602, 603, 604, 605, 0, 4705, 608, 0, 1084, 609,
	610, 611, 613, 614, 612, 615, 1145, 616, 0, 0,
	617, 618, 619, 676, 1168, 1205, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 1081, 0, 0, 0, 0, 1123, 1095,
	1096, 1097, 1093, 1094, 1106, 0, 1076, 0, 0, 0,
	0, 0, 0, 1074, 1075, 275, 277, 276, 278, 279,
	280, 281, 1107, 282, 283, 0, 1105, 0, 0, 0,
	1147, 1111, 0, 0, 0, 284, 285, 1187, 286, 287,
	288, 289, 290, 291, 4704, 1160, 0, 292, 1167, 293,
	1166, 0, 1177, 294, 295, 296, 297, 298, 299, 1113,
	1146, 1078, 300, 1207, 1208, 637, 0, 301, 302, 1153,
	0, 1134, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1188, 325, 326, 4706, 1137, 1135, 1136, 1143, 1139, 1138,
	1142, 328, 329, 330, 331, 332, 1170, 333, 1164, 1163,
	1083, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 1155, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1089, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1178, 1179,
	364, 1102, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1162, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1189, 371, 372, 373, 1175, 1176, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1185, 0,
	1112, 384, 0, 385, 386, 387, 388, 389, 1148, 1149,
	1152, 469, 1191, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1190, 400, 1157, 1158, 0, 1118, 0, 402, 403, 1192,
	1150, 1193, 404, 405, 406, 1194, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1186, 1195, 418, 419, 1196, 0, 420, 0,
	0, 0, 421, 422, 425, 1141, 1140, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1197, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1198, 465, 454, 1080, 274, 1199, 466, 467, 1103, 1151,
	468, 1165, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1200, 479,
	1201, 1180, 480, 481, 1090, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 1181, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1161, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1202, 533, 534, 535, 536, 537, 1091, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	1144, 560, 561, 543, 544, 562, 563, 1203, 564, 565,
	566, 567, 568, 569, 570, 1159, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 1206, 578, 579,
	580, 581, 1182, 585, 586, 0, 587, 588, 1077, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 1171, 1172, 1173, 1174, 0, 606, 0,
	598, 599, 600, 1183, 601, 1184, 1101, 602, 603, 604,
	605, 0, 4705, 608, 0, 1084, 609, 610, 611, 613,
	614, 612, 615, 1145, 616, 0, 0, 617, 618, 619,
	676, 1168, 1205, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1081, 0, 0, 0, 0, 1123, 1095, 1096, 1097, 1093,
	1094, 1106, 0, 1076, 0, 0, 0, 0, 0, 0,
	1074, 1075, 275, 277, 276, 278, 279, 280, 281, 1107,
	282, 283, 0, 1105, 0, 0, 0, 1147, 1111, 0,
	0, 0, 284, 285, 1187, 286, 287, 288, 289, 290,
	291, 630, 1160, 0, 292, 1167, 293, 1166, 0, 1177,
	294, 295, 296, 297, 298, 299, 1113, 1146, 1078, 300,
	1207, 1208, 637, 0, 301, 302, 1153, 0, 1134, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1188, 325, 4333,
	327, 1137, 1135, 1136, 1143, 1139, 1138, 1142, 328, 329,
	330, 331, 332, 1170, 333, 1164, 1163, 1083, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1155, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1089, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1178, 1179, 364, 1102, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1162, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1189, 371,
	372, 373, 1175, 1176, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1185, 0, 4334, 384, 0,
	385, 386, 387, 388, 389, 1148, 1149, 1152, 469, 1191,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1190, 400, 1157,
	1158, 0, 1118, 0, 402, 403, 1192, 1150, 1193, 404,
	405, 406, 1194, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1186,
	1195, 418, 419, 1196, 0, 420, 0, 0, 0, 421,
	422, 425, 1141, 1140, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1197, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1198, 465, 454,
	1080, 274, 1199, 466, 467, 1103, 1151, 468, 1165, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1200, 479, 1201, 1180, 480,
	481, 1090, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 1181, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1161, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1202,
	533, 534, 535, 4332, 537, 1091, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 1144, 560, 561,
	543, 544, 562, 563, 1203, 564, 565, 566, 567, 568,
	569, 570, 1159, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 1206, 578, 579, 580, 581, 1182,
	585, 586, 0, 587, 588, 1077, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	1171, 1172, 1173, 1174, 0, 606, 0, 598, 599, 600,
	1183, 601, 1184, 1101, 602, 603, 604, 605, 0, 607,
	608, 0, 1084, 609, 610, 611, 613, 614, 612, 615,
	1145, 616, 0, 0, 617, 618, 619, 676, 1168, 1205,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1081, 0, 0,
	0, 0, 1123, 1095, 1096, 1097, 3165, 3166, 1106, 0,
	1076, 0, 0, 0, 0, 0, 0, 1074, 1075, 275,
	277, 276, 278, 279, 280, 281, 1107, 282, 283, 0,
	1105, 0, 0, 0, 1147, 1111, 0, 0, 0, 284,
	285, 1187, 286, 287, 288, 289, 290, 291, 630, 1160,
	0, 292, 1167, 293, 1166, 0, 1177, 294, 295, 296,
	297, 298, 299, 1113, 1146, 1078, 300, 1207, 1208, 637,
	0, 301, 302, 1153, 0, 1134, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1188, 325, 326, 327, 1137, 1135,
	1136, 1143, 1139, 1138, 1142, 328, 329, 330, 331, 332,
	1170, 333, 1164, 1163, 1083, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1155,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1089, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1178, 1179, 364, 1102, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1162, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1189, 371, 372, 373, 1175,
	1176, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1185, 0, 1112, 384, 0, 385, 386, 387,
	388, 389, 1148, 1149, 1152, 469, 1191, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1190, 400, 1157, 1158, 0, 1118,
	0, 402, 403, 1192, 1150, 1193, 404, 405, 406, 1194,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1186, 1195, 418, 419,
	1196, 0, 420, 0, 0, 0, 421, 422, 425, 1141,
	1140, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1197, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1198, 465, 454, 1080, 274, 1199,
	466, 467, 1103, 1151, 468, 1165, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1200, 479, 1201, 1180, 480, 481, 1090, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 1181,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1161, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1202, 533, 534, 535,
	536, 537, 1091, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 1144, 560, 561, 543, 544, 562,
	563, 1203, 564, 565, 566, 567, 568, 569, 570, 1159,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 1206, 578, 579, 580, 581, 1182, 585, 586, 0,
	587, 588, 1077, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 1171, 1172, 1173,
	1174, 0, 606, 0, 598, 599, 600, 1183, 601, 1184,
	1101, 602, 603, 604, 605, 0, 607, 608, 0, 1084,
	609, 610, 611, 613, 614, 612, 615, 1145, 616, 0,
	0, 617, 618, 619, 676, 1168, 1205, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1081, 0, 0, 0, 0, 1123,
	1095, 1096, 1097, 3163, 3164, 1106, 0, 1076, 0, 0,
	0, 0, 0, 0, 1074, 1075, 275, 277, 276, 278,
	279, 280, 281, 1107, 282, 283, 0, 1105, 0, 0,
	0, 1147, 1111, 0, 0, 0, 284, 285, 1187, 286,
	287, 288, 289, 290, 291, 630, 1160, 0, 292, 1167,
	293, 1166, 0, 1177, 294, 295, 296, 297, 298, 299,
	1113, 1146, 1078, 300, 1207, 1208, 637, 0, 301, 302,
	1153, 0, 1134, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1188, 325, 326, 327, 1137, 1135, 1136, 1143, 1139,
	1138, 1142, 328, 329, 330, 331, 332, 1170, 333, 1164,
	1163, 1083, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1155, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1089, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1178,
	1179, 364, 1102, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1162, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1189, 371, 372, 373, 1175, 1176, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1185,
	0, 1112, 384, 0, 385, 386, 387, 388, 389, 1148,
	1149, 1152, 469, 1191, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1190, 400, 1157, 1158, 0, 1118, 0, 402, 403,
	1192, 1150, 1193, 404, 405, 406, 1194, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1186, 1195, 418, 419, 1196, 0, 420,
	0, 0, 0, 421, 422, 425, 1141, 1140, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1197, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1198, 465, 454, 1080, 274, 1199, 466, 467, 1103,
	1151, 468, 1165, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1200,
	479, 1201, 1180, 480, 481, 1090, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 1181, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1161, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1202, 533, 534, 535, 536, 537, 1091,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 1144, 560, 561, 543, 544, 562, 563, 1203, 564,
	565, 566, 567, 568, 569, 570, 1159, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 1206, 578,
	579, 580, 581, 1182, 585, 586, 0, 587, 588, 1077,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 1171, 1172, 1173, 1174, 0, 606,
	0, 598, 599, 600, 1183, 601, 1184, 1101, 602, 603,
	604, 605, 0, 607, 608, 0, 1084, 609, 610, 611,
	613, 614, 612, 615, 1145, 616, 0, 0, 617, 618,
	619, 676, 1168, 1205, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1081, 0, 0, 0, 0, 1123, 1095, 1096, 1097,
	1093, 1094, 1106, 0, 1076, 0, 0, 0, 0, 0,
	0, 1074, 1075, 275, 277, 276, 278, 279, 280, 281,
	1107, 282, 283, 0, 1105, 0, 0, 0, 1147, 1111,
	0, 0, 0, 284, 285, 1187, 286, 287, 288, 289,
	290, 291, 630, 1160, 0, 292, 1167, 293, 1166, 0,
	1177, 294, 295, 296, 297, 298, 299, 1113, 1146, 1078,
	300, 1207, 1208, 637, 0, 301, 302, 1153, 0, 1134,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1188, 325,
	326, 327, 1137, 1135, 1136, 1143, 1139, 1138, 1142, 328,
	329, 330, 331, 332, 1170, 333, 1164, 1163, 1083, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1155, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1089, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1178, 1179, 364, 1102,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1162,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1189,
	371, 372, 373, 1175, 1176, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1185, 0, 1112, 384,
	0, 385, 386, 387, 388, 389, 1148, 1149, 1152, 469,
	1191, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1190, 400,
	1157, 1158, 0, 1118, 0, 402, 403, 1192, 1150, 1193,
	404, 405, 406, 1194, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1186, 1195, 418, 419, 1196, 0, 420, 0, 0, 0,
	421, 422, 425, 1141, 1140, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1197, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1198, 465,
	454, 1080, 274, 1199, 466, 467, 1103, 1151, 468, 1165,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1200, 479, 1201, 1180,
	480, 481, 1090, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1181, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1161,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1202, 533, 534, 535, 536, 537, 1091, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1144, 560,
	561, 543, 544, 562, 563, 1203, 564, 565, 566, 567,
	568, 569, 570, 1159, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 1206, 578, 579, 580, 581,
	1182, 585, 586, 0, 587, 588, 1077, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 1171, 1172, 1173, 1174, 0, 606, 0, 598, 599,
	600, 1183, 601, 1184, 1101, 602, 603, 604, 605, 0,
	607, 608, 0, 1084, 609, 610, 611, 613, 614, 612,
	615, 1145, 616, 0, 0, 617, 618, 619, 676, 1168,
	1205, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1081, 0,
	0, 0, 0, 1123, 1095, 1096, 1097, 1093, 1094, 1106,
	0, 1076, 0, 0, 0, 0, 0, 0, 2432, 2433,
	275, 277, 276, 278, 279, 280, 281, 1107, 282, 283,
	0, 1105, 0, 0, 0, 1147, 1111, 0, 0, 0,
	284, 285, 1187, 286, 287, 288, 289, 290, 291, 630,
	1160, 0, 292, 1167, 293, 1166, 0, 1177, 294, 295,
	296, 297, 298, 299, 1113, 1146, 0, 300, 1207, 1208,
	637, 0, 301, 302, 1153, 0, 1134, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1188, 325, 326, 327, 1137,
	1135, 1136, 1143, 1139, 1138, 1142, 328, 329, 330, 331,
	332, 1170, 333, 1164, 1163, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1155, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1089, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1178, 1179, 364, 1102, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1162, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1189, 371, 372, 373,
	1175, 1176, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1185, 0, 1112, 384, 0, 385, 386,
	387, 388, 389, 1148, 1149, 1152, 469, 1191, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1190, 400, 1157, 1158, 0,
	1118, 0, 402, 403, 1192, 1150, 1193, 404, 405, 406,
	1194, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1186, 1195, 418,
	419, 1196, 0, 420, 0, 0, 0, 421, 422, 425,
	1141, 1140, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1197, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1198, 465, 454, 0, 274,
	1199, 466, 467, 1103, 1151, 468, 1165, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1200, 479, 1201, 1180, 480, 481, 1090,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	1181, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1161, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1202, 533, 534,
	535, 536, 537, 1091, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 1144, 560, 561, 543, 544,
	562, 563, 1203, 564, 565, 566, 567, 568, 569, 570,
	1159, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 1206, 578, 579, 580, 581, 1182, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 1171, 1172,
	1173, 1174, 0, 606, 0, 598, 599, 600, 1183, 601,
	1184, 1101, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 1145, 616,
	0, 0, 617, 618, 619, 676, 1168, 1205, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	1123, 1095, 1096, 1097, 1093, 1094, 1106, 0, 2691, 0,
	0, 0, 0, 0, 0, 2689, 2690, 275, 277, 276,
	278, 279, 280, 281, 1107, 282, 283, 0, 1105, 0,
	0, 0, 1147, 1111, 0, 0, 0, 284, 285, 1187,
	286, 287, 288, 289, 290, 291, 630, 1160, 0, 292,
	1167, 293, 1166, 0, 1177, 294, 295, 296, 297, 298,
	299, 1113, 1146, 0, 300, 1207, 1208, 637, 0, 301,
	302, 1153, 0, 1134, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1188, 325, 326, 327, 1137, 1135, 1136, 1143,
	1139, 1138, 1142, 328, 329, 330, 331, 332, 1170, 333,
	1164, 1163, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1155, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1089,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1178, 1179, 364, 1102, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1162, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1189, 371, 372, 373, 1175, 1176, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1185, 0, 1112, 384, 0, 385, 386, 387, 388, 389,
	1148, 1149, 1152, 469, 1191, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1190, 400, 1157, 1158, 0, 1118, 0, 402,
	403, 1192, 1150, 1193, 404, 405, 406, 1194, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1186, 1195, 418, 419, 1196, 0,
	420, 0, 0, 0, 421, 422, 425, 1141, 1140, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1197, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1198, 465, 454, 0, 274, 1199, 466, 467,
	1103, 1151, 468, 1165, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1200, 479, 1201, 1180, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1181, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1161, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1202, 533, 534, 535, 536, 537,
	3158, 3159, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1144, 560, 561, 543, 544, 562, 563, 1203,
	564, 565, 566, 567, 568, 569, 570, 1159, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 1206,
	578, 579, 580, 581, 1182, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 1171, 1172, 1173, 1174, 0,
	606, 0, 598, 599, 600, 1183, 601, 1184, 1101, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 1145, 616, 0, 0, 617,
	618, 619, 676, 1168, 1205, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 1123, 1095, 1096,
	1097, 1093, 1094, 1106, 0, 0, 0, 0, 0, 0,
	0, 0, 2116, 2117, 275, 277, 276, 278, 279, 280,
	281, 1107, 282, 283, 0, 1105, 0, 0, 0, 1147,
	1111, 0, 0, 0, 284, 285, 1187, 286, 287, 288,
	289, 290, 291, 0, 1160, 0, 292, 1167, 293, 1166,
	0, 1177, 294, 295, 296, 297, 298, 299, 1113, 1146,
	1078, 300, 1207, 1208, 637, 0, 301, 302, 1153, 0,
	1134, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1188,
	325, 326, 4706, 1137, 1135, 1136, 1143, 1139, 1138, 1142,
	328, 329, 330, 331, 332, 1170, 333, 1164, 1163, 1083,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1155, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1089, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1178, 1179, 364,
	1102, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1162, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1189, 371, 372, 373, 1175, 1176, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1185, 0, 1112,
	384, 0, 385, 386, 387, 388, 389, 1148, 1149, 1152,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1190,
	400, 1157, 1158, 0, 1118, 0, 402, 403, 0, 1150,
	0, 404, 405, 406, 1194, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1186, 1195, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 1141, 1140, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1197, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1198,
	465, 454, 1080, 274, 0, 466, 467, 1103, 1151, 468,
	1165, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1200, 479, 1201,
	1180, 480, 481, 1090, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 1181, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1161, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1202, 533, 534, 535, 536, 537, 1091, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 1144,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 1159, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 1206, 578, 579, 580,
	581, 1182, 585, 586, 0, 587, 588, 1077, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 1171, 1172, 1173, 1174, 0, 606, 0, 598,
	599, 600, 1183, 601, 1184, 1101, 602, 603, 604, 605,
	0, 4705, 608, 0, 1084, 609, 610, 611, 613, 614,
	612, 615, 1145, 616, 0, 0, 617, 618, 619, 676,
	1168, 1205, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 1067, 0, 1245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1074,
	1075, 275, 277, 276, 278, 279, 280, 281, 1107, 282,
	283, 0, 1105, 0, 0, 0, 1147, 0, 0, 0,
	0, 284, 285, 1187, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 1146, 0, 300, 635,
	636, 637, 0, 301, 302, 1153, 0, 1134, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1188, 325, 326, 327,
	1137, 1135, 1136, 1143, 1139, 1138, 1142, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1178, 1179, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1189, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1185, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 1148, 1149, 1152, 469, 1191, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1190, 400, 652, 653,
	0, 654, 0, 402, 403, 1192, 1150, 1193, 404, 405,
	406, 1194, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 1231, 414, 416, 415, 0, 417, 1186, 1195,
	418, 419, 1196, 0, 420, 0, 0, 0, 421, 422,
	425, 1141, 1140, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1197, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1198, 465, 454, 0,
	274, 1199, 466, 467, 0, 1151, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 1237, 474, 475, 476, 0,
	0, 477, 478, 659, 1200, 479, 1201, 1180, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 1181, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1202, 533,
	534, 535, 536, 537, 666, 1239, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 234,
	555, 556, 554, 557, 558, 559, 1144, 560, 561, 543,
	544, 562, 563, 1203, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 1182, 585,
	586, 0, 587, 588, 0, 584, 575, 236, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 1183,
	601, 1184, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 1145,
	616, 0, 0, 617, 618, 619, 1607, 677, 678, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 228,
	624, 625, 680, 626, 627, 628, 1245, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 1235, 0, 1955, 0, 0, 1147, 0,
	0, 0, 0, 284, 285, 1187, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 1146, 0,
	300, 635, 636, 637, 0, 301, 302, 1153, 0, 1134,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1188, 325,
	326, 327, 1137, 1135, 1136, 1143, 1139, 1138, 1142, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1178, 1179, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1189,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1185, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 1148, 1149, 1152, 469,
	1191, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1190, 400,
	652, 653, 0, 654, 0, 402, 403, 1192, 1150, 1193,
	404, 405, 406, 1194, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 1231, 414, 416, 415, 0, 417,
	1186, 1195, 418, 419, 1196, 0, 420, 0, 0, 0,
	421, 422, 425, 1141, 1140, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1197, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1198, 465,
	454, 0, 274, 1199, 466, 467, 0, 1151, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 1237, 474, 475,
	476, 0, 0, 477, 478, 659, 1200, 479, 1201, 1180,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1181, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1202, 533, 534, 535, 536, 537, 666, 1239, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 234, 555, 556, 554, 557, 558, 559, 1144, 560,
	561, 543, 544, 562, 563, 1203, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	1182, 585, 586, 0, 587, 588, 0, 584, 575, 236,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 1183, 601, 1184, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 1145, 616, 0, 0, 617, 618, 619, 1607, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 228, 624, 625, 680, 626, 627, 628, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 3322,
	0, 1245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1235, 0, 1955, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 1147, 0, 0, 0, 0, 284, 285,
	1187, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 1146, 0, 300, 635, 636, 637, 0,
	301, 302, 1153, 0, 1134, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1188, 325, 326, 327, 1137, 1135, 1136,
	1143, 1139, 1138, 1142, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1178, 1179, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1189, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1185, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 1148, 1149, 1152, 469, 1191, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1190, 400, 652, 653, 0, 654, 0,
	402, 403, 1192, 1150, 1193, 404, 405, 406, 1194, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 1231,
	414, 416, 415, 0, 417, 1186, 1195, 418, 419, 1196,
	0, 420, 0, 0, 0, 421, 422, 425, 1141, 1140,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1197,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1198, 465, 454, 0, 274, 1199, 466,
	467, 0, 1151, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 1237, 474, 475, 476, 0, 0, 477, 478,
	659, 1200, 479, 1201, 1180, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1181, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1202, 533, 534, 535, 536,
	537, 666, 1239, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1144, 560, 561, 543, 544, 562, 563,
	1203, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 1182, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 1183, 601, 1184, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 1145, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 0, 623, 0, 1227, 0, 1245, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 1147, 0,
	1235, 0, 1233, 284, 285, 1187, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 1146, 0,
	300, 635, 636, 637, 0, 301, 302, 1153, 0, 1134,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1188, 325,
	326, 327, 1137, 1135, 1136, 1143, 1139, 1138, 1142, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1178, 1179, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1189,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1185, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 1148, 1149, 1152, 469,
	1191, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1190, 400,
	652, 653, 0, 654, 0, 402, 403, 1192, 1150, 1193,
	404, 405, 406, 1194, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 1231, 414, 416, 415, 0, 417,
	1186, 1195, 418, 419, 1196, 0, 420, 0, 0, 0,
	421, 422, 425, 1141, 1140, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1197, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1198, 465,
	454, 0, 274, 1199, 466, 467, 0, 1151, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 1237, 474, 475,
	476, 0, 0, 477, 478, 659, 1200, 479, 1201, 1180,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1181, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1202, 533, 534, 535, 536, 537, 666, 1239, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1144, 560,
	561, 543, 544, 562, 563, 1203, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	1182, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 1183, 601, 1184, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 1145, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 1245, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 1147, 0, 1235, 0, 1233, 284, 285,
	1187, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 1146, 0, 300, 635, 636, 637, 0,
	301, 302, 1153, 0, 1134, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1188, 325, 326, 327, 1137, 1135, 1136,
	1143, 1139, 1138, 1142, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1178, 1179, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1189, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1185, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 1148, 1149, 1152, 469, 1191, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1190, 400, 652, 653, 0, 654, 0,
	402, 403, 1192, 1150, 1193, 404, 405, 406, 1194, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 1231,
	414, 416, 415, 0, 417, 1186, 1195, 418, 419, 1196,
	0, 420, 0, 0, 0, 421, 422, 425, 1141, 1140,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1197,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1198, 465, 454, 0, 274, 1199, 466,
	467, 0, 1151, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 1237, 474, 475, 476, 0, 0, 477, 478,
	659, 1200, 479, 1201, 1180, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1181, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1202, 533, 534, 535, 536,
	537, 666, 1239, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1144, 560, 561, 543, 544, 562, 563,
	1203, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 1182, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 1183, 601, 1184, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 1145, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 1245, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 1147, 0,
	1235, 0, 1233, 284, 285, 1187, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 1146, 0,
	300, 635, 636, 637, 0, 301, 302, 1153, 0, 1134,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1188, 325,
	326, 327, 1137, 1135, 1136, 1143, 1139, 1138, 1142, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1178, 1179, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1189,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1185, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 1148, 1149, 1152, 469,
	1191, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1190, 400,
	652, 653, 0, 654, 0, 402, 403, 1192, 1150, 1193,
	404, 405, 406, 1194, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1186, 1195, 418, 419, 1196, 0, 420, 0, 0, 0,
	421, 422, 425, 1141, 1140, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1197, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1198, 465,
	454, 0, 274, 1199, 466, 467, 0, 1151, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1200, 479, 1201, 1180,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 1181, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1202, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 1144, 560,
	561, 543, 544, 562, 563, 1203, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	1182, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 1183, 601, 1184, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 1145, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 1245, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 1147, 0, 0, 0, 4155, 284, 285,
	1187, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 1146, 0, 300, 635, 636, 637, 0,
	301, 302, 1153, 0, 1134, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1188, 325, 326, 327, 1137, 1135, 1136,
	1143, 1139, 1138, 1142, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1178, 1179, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1189, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1185, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 1148, 1149, 1152, 469, 1191, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1190, 400, 652, 653, 0, 654, 0,
	402, 403, 1192, 1150, 1193, 404, 405, 406, 1194, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1186, 1195, 418, 419, 1196,
	0, 420, 0, 0, 0, 421, 422, 425, 1141, 1140,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1197,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1198, 465, 454, 0, 274, 1199, 466,
	467, 0, 1151, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1200, 479, 1201, 1180, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 1181, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1202, 533, 534, 535, 536,
	537, 666, 1239, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 1144, 560, 561, 543, 544, 562, 563,
	1203, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 1182, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 1183, 601, 1184, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 1145, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 0, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 2536, 2537, 2538, 2555, 2556, 2557, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 2558, 0, 629, 0, 0, 0, 0,
	284, 285, 1852, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 1837, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 2548, 0, 311, 312, 313,
	310, 314, 0, 315, 2544, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 0, 0, 2549,
	2550, 2551, 2552, 365, 366, 367, 644, 0, 0, 2543,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 2553, 2554, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 2546, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 2547, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 1836, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 1067, 0, 1327, 2533, 2534, 2535, 2559, 2545,
	2539, 0, 2541, 2542, 2540, 2527, 2528, 2529, 2530, 2531,
	2532, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 1187, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 1332, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1188, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1189, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 1191, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 1190, 400, 652, 653,
	0, 654, 0, 402, 403, 1192, 655, 1193, 404, 405,
	406, 1194, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 1195,
	418, 419, 1196, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1197, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1198, 465, 454, 0,
	0, 1199, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1200, 479, 1201, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1202, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 234,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 1203, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 236, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 1607, 677, 678, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 228,
	624, 625, 680, 626, 627, 628, 0, 0, 229, 1604,
	0, 1327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 189, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	1187, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 1332, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1188, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1189, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 1191, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 1190, 400, 652, 653, 0, 654, 0,
	402, 403, 1192, 655, 1193, 404, 405, 406, 1194, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 1195, 418, 419, 1196,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1197,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1198, 465, 454, 0, 0, 1199, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1200, 479, 1201, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1202, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 234, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	1203, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 236, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 1607, 677, 678, 0, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 228, 624, 625, 680,
	626, 627, 628, 1327, 1326, 229, 0, 0, 0, 1324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 189, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 1187, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 1332, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1188, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1189, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 1191, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 1190, 400, 652, 653, 0,
	654, 0, 402, 403, 1192, 655, 1193, 404, 405, 406,
	1194, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 1195, 418,
	419, 1196, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1197, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1198, 465, 454, 0, 0,
	1199, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 1200, 479, 1201, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 1202, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 1203, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 0, 623, 0, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 1327, 1326, 0, 0, 0,
	0, 1324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 1629, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 1187, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 1332, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1188, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1189, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 1191,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 1190, 400, 652,
	653, 0, 654, 0, 402, 403, 1192, 655, 1193, 404,
	405, 406, 1194, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	1195, 418, 419, 1196, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1197, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1198, 465, 454,
	0, 0, 1199, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 1200, 479, 1201, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 1202,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 1203, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 1327, 1326, 0,
	0, 0, 0, 1324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 3624, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 1187, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	1332, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1188,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1189, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 1191, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 1190,
	400, 652, 653, 0, 654, 0, 402, 403, 1192, 655,
	1193, 404, 405, 406, 1194, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 1195, 418, 419, 1196, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1197, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1198,
	465, 454, 0, 0, 1199, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 1200, 479, 1201,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	2306, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 1202, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 1203, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 1327,
	2220, 0, 0, 0, 0, 2221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 1629, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 1187, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 1332, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1188, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1189, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 1191, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 1190, 400, 652, 653, 0, 654, 0, 402, 403,
	1192, 655, 1193, 404, 405, 406, 1194, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 2219, 416,
	415, 0, 417, 656, 1195, 418, 419, 1196, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1197, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1198, 465, 454, 0, 0, 1199, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1200,
	479, 1201, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1202, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 1203, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 1327, 1326, 0, 0, 0, 0, 1324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	1629, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	1187, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 1332, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1188, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1189, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 1191, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 1190, 400, 652, 653, 0, 654, 0,
	402, 403, 1192, 655, 1193, 404, 405, 406, 1194, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 1195, 418, 419, 1196,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1197,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1198, 465, 454, 0, 0, 1199, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 1200, 479, 1201, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 1202, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	1203, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 1067, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 1613, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 234, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 236, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 1607, 677, 678, 0, 621,
	620, 622, 679, 0, 623, 269, 0, 0, 228, 624,
	625, 680, 626, 627, 628, 0, 0, 229, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 189, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	1245, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 1147, 0, 0, 0, 1969, 284, 285, 1187,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 1146, 0, 300, 635, 636, 637, 0, 301,
	302, 1153, 0, 1134, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1188, 325, 326, 327, 1137, 1135, 1136, 1143,
	1139, 1138, 1142, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1178, 1179, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1189, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1185, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	1148, 1149, 1152, 469, 1191, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1190, 400, 652, 653, 0, 654, 0, 402,
	403, 1192, 1150, 1193, 404, 405, 406, 1194, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1186, 1195, 418, 419, 1196, 0,
	420, 0, 0, 0, 421, 422, 425, 1141, 1140, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1197, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1198, 465, 454, 0, 274, 1199, 466, 467,
	0, 1151, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1200, 479, 1201, 1180, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 1181, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1202, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 1144, 560, 561, 543, 544, 562, 563, 1203,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 1182, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 1183, 601, 1184, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 1145, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 269, 3067, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 0, 623, 269, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 4873, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	274, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 269, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 3574, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	274, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 269, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 1601, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 0, 623, 269, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 3055, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 269, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 3734, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 0, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 902, 623,
	807, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 2297,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 814, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 900, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 274, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 812, 589, 590, 591, 592, 593, 813,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 807, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 275, 277, 276, 278, 279, 280, 281, 2038,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 817, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 814, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 2037, 550, 551, 552, 553,
	0, 2039, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 812, 589,
	590, 591, 592, 593, 813, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 2036, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	807, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 1989, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 817,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 814, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 274, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	1988, 550, 551, 552, 553, 0, 1990, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 812, 589, 590, 591, 592, 593, 813,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 1987, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 805, 0, 807, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 817, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	814, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	274, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 812, 589, 590,
	591, 592, 593, 813, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 2011, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 0, 0, 817, 0,
	0, 284, 285, 1187, 286, 287, 288, 289, 290, 291,
	0, 2017, 0, 292, 2007, 293, 2023, 0, 2030, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 2033,
	2034, 0, 0, 301, 302, 0, 0, 1332, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1188, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 1170, 333, 2021, 2020, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1155, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 0, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 0, 0, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 2019, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1189, 371, 372,
	373, 2028, 2029, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 0, 0, 0, 384, 0, 385,
	386, 387, 388, 389, 0, 0, 0, 469, 1191, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 1190, 400, 2014, 2015,
	0, 2010, 0, 402, 403, 1192, 0, 1193, 404, 405,
	406, 1194, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 0, 1195,
	418, 419, 1196, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1197, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1198, 465, 454, 0,
	0, 1199, 466, 467, 0, 0, 468, 2022, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 0, 1200, 479, 1201, 0, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 2004, 493, 494, 495, 2005, 496, 497,
	498, 0, 499, 0, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 2018, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1202, 533,
	534, 535, 536, 537, 0, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 1203, 564, 565, 566, 567, 568, 569,
	570, 2016, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 2032, 578, 579, 580, 581, 0, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 2024,
	2025, 2026, 2027, 0, 606, 0, 598, 599, 600, 0,
	601, 0, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 0, 2008, 2031, 0,
	621, 620, 622, 0, 0, 623, 0, 0, 0, 0,
	624, 625, 0, 626, 627, 628, 807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 1998,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 814, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 274, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 812,
	589, 590, 591, 592, 593, 813, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 807, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	817, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 814, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 2343, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 2344, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 812, 589, 590, 591, 592, 593,
	813, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 2345, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 817, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 274, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 2082, 0,
	1327, 2049, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	817, 0, 629, 0, 0, 0, 0, 284, 285, 1187,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 1332, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1188, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 2046, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1189, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 1191, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 1190, 400, 652, 653, 0, 654, 0, 402,
	403, 1192, 655, 1193, 404, 405, 406, 1194, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 1195, 418, 419, 1196, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1197, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1198, 465, 454, 0, 0, 1199, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1200, 479, 1201, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1202, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 2047, 560, 561, 543, 544, 562, 563, 1203,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	2043, 623, 1327, 2049, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 1187, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 1332, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1188, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 2046, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1189, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 1191, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 1190, 400, 652, 653, 0, 654,
	0, 402, 403, 1192, 655, 1193, 404, 405, 406, 1194,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 1195, 418, 419,
	1196, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1197, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1198, 465, 454, 0, 0, 1199,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1200, 479, 1201, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1202, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 2047, 560, 561, 543, 544, 562,
	563, 1203, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 0, 623, 1327, 2049, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 1187, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 1332, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1188, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 2046, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1189, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 1191, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 1190, 400, 652, 653,
	0, 654, 0, 402, 403, 1192, 655, 1193, 404, 405,
	406, 1194, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 1195,
	418, 419, 1196, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1197, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1198, 465, 454, 0,
	0, 1199, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1200, 479, 1201, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1202, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 2047, 560, 561, 543,
	544, 562, 563, 1203, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1327, 1326, 0, 0,
	0, 0, 1324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 1187, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 1332,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1188, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1189,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	1191, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 1190, 400,
	652, 653, 0, 654, 0, 402, 403, 1192, 655, 1193,
	404, 405, 406, 1194, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 1195, 418, 419, 1196, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1197, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1198, 465,
	454, 0, 0, 1199, 466, 467, 3928, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1200, 479, 1201, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1202, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 1203, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1327, 1326,
	0, 0, 0, 0, 1324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 1187, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 1332, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1188, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1189, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 1191, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	1190, 400, 652, 653, 0, 654, 0, 402, 403, 1192,
	655, 1193, 404, 405, 406, 1194, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 1195, 418, 419, 1196, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1197, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1198, 465, 454, 0, 0, 1199, 466, 467, 3536, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1200, 479,
	1201, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1202, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 1203, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1657, 0, 1327, 1326, 0, 0, 0, 0, 1324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 1187, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 1332, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1188, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 1656, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1189, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 1191, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 1190, 400, 652, 653, 0, 654,
	0, 402, 403, 1192, 655, 1193, 404, 405, 406, 1194,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 1195, 418, 419,
	1196, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1197, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1198, 465, 454, 0, 0, 1199,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1200, 479, 1201, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 1655, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1202, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 1654, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 1203, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 1575, 0, 1327, 1326, 0, 0,
	0, 0, 1324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 1187, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 1332,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1188, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1189,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 1574, 650, 651, 469,
	1191, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 1190, 400,
	652, 653, 0, 654, 0, 402, 403, 1192, 655, 1193,
	404, 405, 406, 1194, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 1195, 418, 419, 1196, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1197, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1198, 465,
	454, 0, 0, 1199, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 1200, 479, 1201, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	1202, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 1203, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1535, 0,
	1327, 1326, 0, 0, 0, 0, 1324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 1187,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 1332, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1188, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1189, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 1191, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 1190, 400, 652, 653, 0, 654, 0, 402,
	403, 1192, 655, 1193, 404, 405, 406, 1194, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 1195, 418, 419, 1196, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1197, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1198, 465, 454, 0, 0, 1199, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1200, 479, 1201, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1202, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 1203,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 0, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 1500, 0, 1327, 1326, 0, 0, 0, 0,
	1324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 1187, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 1332, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1188, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1189, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 1499, 650, 651, 469, 1191, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 1190, 400, 652, 653,
	0, 654, 0, 402, 403, 1192, 655, 1193, 404, 405,
	406, 1194, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 1195,
	418, 419, 1196, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1197, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1198, 465, 454, 0,
	0, 1199, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1200, 479, 1201, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1202, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 1203, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 1321, 0, 1327, 1326,
	0, 0, 0, 0, 1324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 1187, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 637, 0, 301, 302, 638,
	0, 1332, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1188, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1189, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 1320, 650,
	651, 469, 1191, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	1190, 400, 652, 653, 0, 654, 0, 402, 403, 1192,
	655, 1193, 404, 405, 406, 1194, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 1195, 418, 419, 1196, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1197, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1198, 465, 454, 0, 0, 1199, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 1200, 479,
	1201, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 1202, 533, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 549, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 558, 559,
	0, 560, 561, 543, 544, 562, 563, 1203, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 670, 671, 672, 673, 0, 606, 0,
	598, 599, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 0, 623,
	0, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	1327, 1326, 0, 0, 0, 0, 1324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 1187,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 1332, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1188, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1189, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 1191, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 1190, 400, 652, 653, 0, 654, 0, 402,
	403, 1192, 655, 1193, 404, 405, 406, 1194, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 1195, 418, 419, 1196, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1197, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1198, 465, 454, 0, 0, 1199, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	1200, 479, 1201, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 1202, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 1203,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 1327, 2049, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 1187, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 1332, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1188, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 2089, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1189, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 1191, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 1190, 400, 652, 653, 0, 654,
	0, 402, 403, 1192, 655, 1193, 404, 405, 406, 1194,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 1195, 418, 419,
	1196, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1197, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1198, 465, 454, 0, 0, 1199,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 1200, 479, 1201, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 1202, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 1203, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 0, 623, 1327, 1326, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 1187, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 1332, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1188, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1189, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 1191, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 1190, 400, 652, 653,
	0, 654, 0, 402, 403, 1192, 655, 1193, 404, 405,
	406, 1194, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 1195,
	418, 419, 1196, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1197, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1198, 465, 454, 0,
	0, 1199, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 1200, 479, 1201, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 1202, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 1203, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 1327,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 1187, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 1332, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1188, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1189, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 1191, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 1190, 400, 652, 653, 0, 654, 0, 402, 403,
	1192, 655, 1193, 404, 405, 406, 1194, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 1195, 418, 419, 1196, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1197, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1198, 465, 454, 0, 0, 1199, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 1200,
	479, 1201, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 1202, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 1203, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 269, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 2861, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 2858, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 2865, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 3080, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 2864, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	3077, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 3079, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 3076, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 2863, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 3078, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 269,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 2861, 301, 302,
	638, 0, 0, 2855, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 2858, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 2865, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	2864, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 2854,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 2863, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 2862, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 1734,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 1733, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 1732, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 1735,
	542, 549, 550, 551, 552, 553, 0, 1731, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 1729, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 1730, 620, 622,
	679, 1475, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 1477, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 1237, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 1472, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 1474, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 1237, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 1379, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 1381, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 1237, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 712, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	711, 280, 281, 701, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 704, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 705, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 706, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 700,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 701, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 704,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 705,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 706, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	701, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 704, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 705, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 706, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 701, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 704,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 3939,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 706, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 274, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 1237, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 3479, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 3025, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 3024, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 2312, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	269, 621, 620, 622, 679, 0, 623, 0, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 274, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 2253, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	2260, 623, 269, 0, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 2259, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 274, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 2246, 623, 269, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 2248, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	274, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 269,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 2213,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 274, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	1237, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 1579,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 1578, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 1492, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 1485, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 1487, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 1311, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 1310, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 1301, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 1300,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 274, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 1298,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 1297, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 1293, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 1292, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 682, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 260, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 274, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 704, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 705, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 706, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 2352, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 274, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 2350, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 2348, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 274, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 2266, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 269, 621, 620, 622, 679, 0, 623, 0,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 2068, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 274, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 269, 621, 620,
	622, 679, 0, 623, 0, 0, 0, 0, 624, 625,
	680, 626, 627, 628, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 2062, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 889, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 888, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 887, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 269, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 3080, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 4232, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 766, 623, 269, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 1348, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 1346, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 772, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 771, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 770, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 1349, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 768, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 766, 623, 269, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 284, 285, 1348, 286, 287,
	288, 289, 290, 291, 630, 631, 0, 292, 632, 293,
	633, 0, 634, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 635, 636, 1346, 0, 301, 302, 638,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 639, 640,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 641, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 642, 643,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 644, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 645, 646, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 647, 0,
	648, 384, 0, 385, 386, 387, 388, 389, 649, 650,
	651, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	0, 400, 652, 653, 0, 654, 0, 402, 403, 0,
	655, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 656, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 772, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 0, 0, 466, 467, 0, 657,
	468, 658, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 659, 0, 479,
	0, 660, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 661, 493, 494,
	495, 662, 496, 497, 498, 663, 499, 664, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 665, 511, 513, 512, 514, 0, 515, 0, 516,
	517, 518, 0, 0, 0, 0, 519, 0, 521, 522,
	523, 524, 520, 525, 526, 527, 528, 529, 0, 530,
	531, 532, 0, 771, 534, 535, 536, 537, 666, 538,
	0, 539, 540, 546, 547, 548, 541, 542, 770, 550,
	551, 552, 553, 0, 555, 556, 554, 557, 1349, 559,
	0, 560, 561, 543, 544, 562, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 667, 0, 571, 0, 572,
	573, 574, 576, 545, 577, 582, 583, 668, 578, 579,
	580, 581, 669, 585, 586, 0, 587, 588, 0, 584,
	575, 0, 589, 590, 591, 592, 593, 594, 595, 358,
	596, 0, 597, 768, 671, 672, 673, 0, 606, 0,
	598, 1347, 600, 674, 601, 675, 0, 602, 603, 604,
	605, 0, 607, 608, 0, 0, 609, 610, 611, 613,
	614, 612, 615, 0, 616, 0, 0, 617, 618, 619,
	676, 677, 678, 0, 621, 620, 622, 679, 691, 623,
	269, 0, 0, 0, 624, 625, 680, 626, 627, 628,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 690, 282, 283, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 630, 631, 0, 292,
	632, 293, 633, 0, 634, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 635, 636, 637, 0, 301,
	302, 638, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	639, 640, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 641,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	642, 643, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 644, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 645, 646, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	647, 0, 648, 384, 0, 385, 386, 387, 388, 389,
	649, 650, 651, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 652, 653, 0, 654, 0, 402,
	403, 0, 655, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 656, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 657, 468, 658, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 659,
	0, 479, 0, 660, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 661,
	493, 494, 495, 662, 496, 497, 498, 663, 499, 664,
	689, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 665, 511, 513, 512, 514, 0, 515,
	0, 516, 517, 518, 0, 0, 0, 0, 519, 0,
	521, 522, 523, 524, 520, 525, 526, 527, 528, 529,
	0, 530, 531, 532, 0, 533, 534, 535, 536, 537,
	666, 538, 0, 539, 540, 546, 547, 548, 541, 542,
	549, 550, 551, 552, 553, 0, 555, 556, 554, 557,
	558, 559, 0, 560, 561, 543, 544, 562, 563, 0,
	564, 565, 566, 567, 568, 569, 570, 667, 0, 571,
	0, 572, 573, 574, 576, 545, 577, 582, 583, 668,
	578, 579, 580, 581, 669, 585, 586, 0, 587, 588,
	0, 584, 575, 0, 589, 590, 591, 592, 593, 594,
	595, 358, 596, 0, 597, 670, 671, 672, 673, 0,
	606, 0, 598, 599, 600, 674, 601, 675, 0, 602,
	603, 604, 605, 0, 607, 608, 0, 0, 609, 610,
	611, 613, 614, 612, 615, 0, 616, 0, 0, 617,
	618, 619, 676, 677, 678, 0, 621, 620, 622, 679,
	0, 623, 269, 3067, 0, 0, 624, 625, 680, 626,
	627, 628, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 630, 631,
	0, 292, 632, 293, 633, 0, 634, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 635, 636, 637,
	0, 301, 302, 638, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 639, 640, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 641, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 642, 643, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 644, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 645,
	646, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 647, 0, 648, 384, 0, 385, 386, 387,
	388, 389, 649, 650, 651, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 652, 653, 0, 654,
	0, 402, 403, 0, 655, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 656, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 657, 468, 658, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 659, 0, 479, 0, 660, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 661, 493, 494, 495, 662, 496, 497, 498, 663,
	499, 664, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 665, 511, 513, 512, 514,
	0, 515, 0, 516, 517, 518, 0, 0, 0, 0,
	519, 0, 521, 522, 523, 524, 520, 525, 526, 527,
	528, 529, 0, 530, 531, 532, 0, 533, 534, 535,
	536, 537, 666, 538, 0, 539, 540, 546, 547, 548,
	541, 542, 549, 550, 551, 552, 553, 0, 555, 556,
	554, 557, 558, 559, 0, 560, 561, 543, 544, 562,
	563, 0, 564, 565, 566, 567, 568, 569, 570, 667,
	0, 571, 0, 572, 573, 574, 576, 545, 577, 582,
	583, 668, 578, 579, 580, 581, 669, 585, 586, 0,
	587, 588, 0, 584, 575, 0, 589, 590, 591, 592,
	593, 594, 595, 358, 596, 0, 597, 670, 671, 672,
	673, 0, 606, 0, 598, 599, 600, 674, 601, 675,
	0, 602, 603, 604, 605, 0, 607, 608, 0, 0,
	609, 610, 611, 613, 614, 612, 615, 0, 616, 0,
	0, 617, 618, 619, 676, 677, 678, 0, 621, 620,
	622, 679, 0, 623, 269, 4242, 0, 0, 624, 625,
	680, 626, 627, 628, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 269,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 4523, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 269, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 4128, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 269,
	621, 620, 622, 679, 0, 623, 0, 0, 0, 0,
	624, 625, 680, 626, 627, 628, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 3894, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 269, 621, 620, 622, 679, 0,
	623, 0, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 629, 0, 2744, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	630, 631, 0, 292, 632, 293, 633, 0, 634, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 635,
	636, 637, 0, 301, 302, 638, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 639, 640, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 641, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 642, 643, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 644, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 645, 646, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 647, 0, 648, 384, 0, 385,
	386, 387, 388, 389, 649, 650, 651, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 652, 653,
	0, 654, 0, 402, 403, 0, 655, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 656, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 657, 468, 658, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 659, 0, 479, 0, 660, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 661, 493, 494, 495, 662, 496, 497,
	498, 663, 499, 664, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 665, 511, 513,
	512, 514, 0, 515, 0, 516, 517, 518, 0, 0,
	0, 0, 519, 0, 521, 522, 523, 524, 520, 525,
	526, 527, 528, 529, 0, 530, 531, 532, 0, 533,
	534, 535, 536, 537, 666, 538, 0, 539, 540, 546,
	547, 548, 541, 542, 549, 550, 551, 552, 553, 0,
	555, 556, 554, 557, 558, 559, 0, 560, 561, 543,
	544, 562, 563, 0, 564, 565, 566, 567, 568, 569,
	570, 667, 0, 571, 0, 572, 573, 574, 576, 545,
	577, 582, 583, 668, 578, 579, 580, 581, 669, 585,
	586, 0, 587, 588, 0, 584, 575, 0, 589, 590,
	591, 592, 593, 594, 595, 358, 596, 0, 597, 670,
	671, 672, 673, 0, 606, 0, 598, 599, 600, 674,
	601, 675, 0, 602, 603, 604, 605, 0, 607, 608,
	0, 0, 609, 610, 611, 613, 614, 612, 615, 0,
	616, 0, 0, 617, 618, 619, 676, 677, 678, 0,
	621, 620, 622, 679, 0, 623, 269, 3067, 0, 0,
	624, 625, 680, 626, 627, 628, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	3064, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 2322, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 2310, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 766, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 759, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 772, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	771, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 770, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 1612, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	768, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 1585, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 1584, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 1569, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 1567,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 1562,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 1539, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 302, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 1537, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 533, 534,
	535, 536, 537, 666, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 549, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 558, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 670, 671,
	672, 673, 0, 606, 0, 598, 599, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 1497, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	546, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 1480, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 1316, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 1315,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 1307,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 1306, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	1260, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 777, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 0, 621, 620, 622,
	679, 766, 623, 269, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 630,
	631, 0, 292, 632, 293, 633, 0, 634, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 635, 636,
	637, 0, 301, 759, 638, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 757, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 639, 640, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 641, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 642, 643, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 644, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	645, 646, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 647, 0, 648, 384, 0, 385, 386,
	387, 388, 389, 649, 650, 651, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 652, 653, 0,
	654, 0, 402, 403, 0, 655, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 656, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 758, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	772, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 657, 468, 658, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 659, 0, 479, 0, 660, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 661, 493, 494, 495, 662, 496, 497, 498,
	663, 499, 664, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 665, 511, 513, 512,
	514, 0, 515, 0, 516, 517, 518, 0, 0, 0,
	0, 519, 0, 521, 522, 523, 524, 520, 525, 526,
	527, 528, 529, 0, 530, 531, 532, 0, 771, 534,
	535, 536, 537, 760, 538, 0, 539, 540, 546, 547,
	548, 541, 542, 770, 550, 551, 552, 553, 0, 555,
	556, 554, 557, 761, 559, 0, 560, 561, 543, 544,
	562, 563, 0, 564, 565, 566, 567, 568, 569, 570,
	667, 0, 571, 0, 572, 573, 574, 576, 545, 577,
	582, 583, 668, 578, 579, 580, 581, 669, 585, 586,
	0, 587, 588, 0, 584, 575, 0, 589, 590, 591,
	592, 593, 594, 595, 358, 596, 0, 597, 768, 671,
	672, 673, 0, 606, 0, 598, 763, 600, 674, 601,
	675, 0, 602, 603, 604, 605, 0, 607, 608, 0,
	0, 609, 610, 611, 613, 614, 612, 615, 0, 616,
	0, 0, 617, 618, 619, 676, 677, 678, 0, 621,
	620, 622, 679, 751, 623, 269, 0, 0, 0, 624,
	625, 680, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 630, 631, 0, 292, 632, 293, 633, 0, 634,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	635, 636, 637, 0, 301, 302, 638, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 639, 640, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 641, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 642, 643, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 644, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 645, 646, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 647, 0, 648, 384, 0,
	385, 386, 387, 388, 389, 649, 650, 651, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 652,
	653, 0, 654, 0, 402, 403, 0, 655, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 656,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 657, 468, 658, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 659, 0, 479, 0, 660, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 661, 493, 494, 495, 662, 496,
	497, 498, 663, 499, 664, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 665, 511,
	513, 512, 514, 0, 515, 0, 516, 517, 518, 0,
	0, 0, 0, 519, 0, 521, 522, 523, 524, 520,
	525, 526, 527, 528, 529, 0, 530, 531, 532, 0,
	533, 534, 535, 536, 537, 666, 538, 0, 539, 540,
	752, 547, 548, 541, 542, 549, 550, 551, 552, 553,
	0, 555, 556, 554, 557, 558, 559, 0, 560, 561,
	543, 544, 562, 563, 0, 564, 565, 566, 567, 568,
	569, 570, 667, 0, 571, 0, 572, 573, 574, 576,
	545, 577, 582, 583, 668, 578, 579, 580, 581, 669,
	585, 586, 0, 587, 588, 0, 584, 575, 0, 589,
	590, 591, 592, 593, 594, 595, 358, 596, 0, 597,
	670, 671, 672, 673, 0, 606, 0, 598, 599, 600,
	674, 601, 675, 0, 602, 603, 604, 605, 0, 607,
	608, 0, 0, 609, 610, 611, 613, 614, 612, 615,
	0, 616, 0, 0, 617, 618, 619, 676, 677, 678,
	0, 621, 620, 622, 679, 714, 623, 269, 0, 0,
	0, 624, 625, 680, 626, 627, 628, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 630, 631, 0, 292, 632, 293, 633,
	0, 634, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 635, 636, 637, 0, 301, 302, 638, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 639, 640, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 641, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 642, 643, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	644, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 645, 646, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 647, 0, 648,
	384, 0, 385, 386, 387, 388, 389, 649, 650, 651,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 652, 653, 0, 654, 0, 402, 403, 0, 655,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 656, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 657, 468,
	658, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 659, 0, 479, 0,
	660, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 661, 493, 494, 495,
	662, 496, 497, 498, 663, 499, 664, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	665, 511, 513, 512, 514, 0, 515, 0, 516, 517,
	518, 0, 0, 0, 0, 519, 0, 521, 522, 523,
	524, 520, 525, 526, 527, 528, 529, 0, 530, 531,
	532, 0, 533, 534, 535, 536, 537, 666, 538, 0,
	539, 540, 546, 547, 548, 541, 542, 549, 550, 551,
	552, 553, 0, 555, 556, 554, 557, 558, 559, 0,
	560, 561, 543, 544, 562, 563, 0, 564, 565, 566,
	567, 568, 569, 570, 667, 0, 571, 0, 572, 573,
	574, 576, 545, 577, 582, 583, 668, 578, 579, 580,
	581, 669, 585, 586, 0, 587, 588, 0, 584, 575,
	0, 589, 590, 591, 592, 593, 594, 595, 358, 596,
	0, 597, 670, 671, 672, 673, 0, 606, 0, 598,
	599, 600, 674, 601, 675, 0, 602, 603, 604, 605,
	0, 607, 608, 0, 0, 609, 610, 611, 613, 614,
	612, 615, 0, 616, 0, 0, 617, 618, 619, 676,
	677, 678, 0, 621, 620, 622, 679, 708, 623, 269,
	0, 0, 0, 624, 625, 680, 626, 627, 628, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 629, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 630, 631, 0, 292, 632,
	293, 633, 0, 634, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 635, 636, 637, 0, 301, 302,
	638, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 639,
	640, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 641, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 642,
	643, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 644, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 645, 646, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 647,
	0, 648, 384, 0, 385, 386, 387, 388, 389, 649,
	650, 651, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 652, 653, 0, 654, 0, 402, 403,
	0, 655, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 656, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	657, 468, 658, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 659, 0,
	479, 0, 660, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 661, 493,
	494, 495, 662, 496, 497, 498, 663, 499, 664, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 665, 511, 513, 512, 514, 0, 515, 0,
	516, 517, 518, 0, 0, 0, 0, 519, 0, 521,
	522, 523, 524, 520, 525, 526, 527, 528, 529, 0,
	530, 531, 532, 0, 533, 534, 535, 536, 537, 666,
	538, 0, 539, 540, 546, 547, 548, 541, 542, 549,
	550, 551, 552, 553, 0, 555, 556, 554, 557, 558,
	559, 0, 560, 561, 543, 544, 562, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 667, 0, 571, 0,
	572, 573, 574, 576, 545, 577, 582, 583, 668, 578,
	579, 580, 581, 669, 585, 586, 0, 587, 588, 0,
	584, 575, 0, 589, 590, 591, 592, 593, 594, 595,
	358, 596, 0, 597, 670, 671, 672, 673, 0, 606,
	0, 598, 599, 600, 674, 601, 675, 0, 602, 603,
	604, 605, 0, 607, 608, 0, 0, 609, 610, 611,
	613, 614, 612, 615, 0, 616, 0, 0, 617, 618,
	619, 676, 677, 678, 0, 621, 620, 622, 679, 686,
	623, 269, 0, 0, 0, 624, 625, 680, 626, 627,
	628, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 3594, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 771, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 770, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 768, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 3519, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 3497, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 3494, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 3444, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 3442, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 3427, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 3035, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 752, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 2284, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 513, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 0, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 384,
	0, 385, 386, 387, 388, 389, 1278, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 538, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 269, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 630, 631, 0,
	292, 632, 293, 633, 0, 634, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 635, 636, 637, 0,
	301, 302, 638, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 639, 640, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	641, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 642, 643, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 644, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 645, 646,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 647, 0, 648, 384, 0, 385, 386, 387, 388,
	389, 649, 650, 651, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 652, 653, 0, 654, 0,
	402, 403, 0, 655, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 656, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 657, 468, 658, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	659, 0, 479, 0, 660, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	661, 493, 494, 495, 662, 496, 497, 498, 663, 499,
	664, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 665, 511, 1210, 512, 514, 0,
	515, 0, 516, 517, 518, 0, 0, 0, 0, 519,
	0, 521, 522, 523, 524, 520, 525, 526, 527, 528,
	529, 0, 530, 531, 532, 0, 533, 534, 535, 536,
	537, 666, 538, 0, 539, 540, 546, 547, 548, 541,
	542, 549, 550, 551, 552, 553, 0, 555, 556, 554,
	557, 558, 559, 0, 560, 561, 543, 544, 562, 563,
	0, 564, 565, 566, 567, 568, 569, 570, 667, 0,
	571, 0, 572, 573, 574, 576, 545, 577, 582, 583,
	668, 578, 579, 580, 581, 669, 585, 586, 0, 587,
	588, 0, 584, 575, 0, 589, 590, 591, 592, 593,
	594, 595, 358, 596, 0, 597, 670, 671, 672, 673,
	0, 606, 0, 598, 599, 600, 674, 601, 675, 0,
	602, 603, 604, 605, 0, 607, 608, 0, 0, 609,
	610, 611, 613, 614, 612, 615, 0, 616, 0, 0,
	617, 618, 619, 676, 677, 678, 269, 621, 620, 622,
	679, 0, 623, 0, 0, 0, 0, 624, 625, 680,
	626, 627, 628, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 630, 631, 0, 292, 632, 293, 633, 0,
	634, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 635, 636, 637, 0, 301, 302, 638, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 639, 640, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 641, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 642, 643, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 644,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 645, 646, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 647, 0, 648, 0,
	0, 385, 386, 387, 388, 389, 649, 650, 651, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	652, 653, 0, 654, 0, 402, 403, 0, 655, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	656, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 657, 468, 658,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 659, 0, 479, 0, 660,
	480, 481, 473, 482, 483, 0, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 661, 493, 494, 495, 662,
	496, 497, 498, 663, 499, 664, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 0, 509, 510, 665,
	511, 513, 512, 514, 0, 515, 0, 516, 517, 518,
	0, 0, 0, 0, 519, 0, 521, 522, 523, 524,
	520, 525, 526, 527, 528, 529, 0, 530, 531, 532,
	0, 533, 534, 535, 536, 537, 666, 0, 0, 539,
	540, 546, 547, 548, 541, 542, 549, 550, 551, 552,
	553, 0, 555, 556, 554, 557, 558, 559, 0, 560,
	561, 543, 544, 562, 563, 0, 564, 565, 566, 567,
	568, 569, 570, 667, 0, 571, 0, 572, 573, 574,
	576, 545, 577, 582, 583, 668, 578, 579, 580, 581,
	669, 585, 586, 0, 587, 588, 0, 584, 575, 0,
	589, 590, 591, 592, 593, 594, 595, 358, 596, 0,
	597, 670, 671, 672, 673, 0, 606, 0, 598, 599,
	600, 674, 601, 675, 0, 602, 603, 604, 605, 0,
	607, 608, 0, 0, 609, 610, 611, 613, 614, 612,
	615, 0, 616, 0, 0, 617, 618, 619, 676, 677,
	678, 0, 621, 620, 622, 679, 0, 623, 0, 0,
	0, 0, 624, 625, 680, 626, 627, 628, 1781, 1782,
	0, 1814, 1815, 1816, 1825, 1826, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1818, 1812, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 0, 0, 0,
	0, 1781, 1782, 1783, 1814, 1815, 1816, 1825, 1826, 1827,
	0, 0, 0, 1803, 0, 0, 0, 0, 0, 0,
	0, 0, 1800, 1818, 1812, 0, 0, 0, 0, 0,
	0, 1784, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 1807, 1808,
	1809, 0, 0, 0, 0, 0, 0, 1789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 1811, 1813, 0, 0, 0,
	1806, 1807, 1808, 1809, 0, 0, 0, 0, 0, 0,
	1789, 0, 1828, 0, 1829, 0, 0, 0, 0, 0,
	0, 1798, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 0, 0, 0, 0, 1822, 0,
	0, 1832, 0, 0, 1804, 0, 0, 0, 1811, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 1829, 0, 0,
	0, 0, 0, 0, 1798, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 1820, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 1804, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1805, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1781, 1782, 0, 1814, 1815,
	1816, 1825, 1826, 1827, 0, 0, 0, 0, 0, 0,
	1823, 0, 0, 0, 0, 0, 0, 1818, 1812, 0,
	0, 0, 0, 1810, 0, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 1805, 0, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1803, 0, 0, 1823, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 1821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 1796, 1802, 1824, 1801, 1797, 0,
	1794, 1792, 1793, 1785, 1786, 1787, 1788, 1790, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 3242, 0, 0,
	0, 0, 0, 0, 1806, 1807, 1808, 1809, 0, 0,
	0, 0, 0, 0, 1789, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1795, 1796, 1802, 1824,
	1801, 1797, 0, 1794, 1792, 1793, 1785, 1786, 1787, 1788,
	1790, 1791, 1822, 0, 0, 1832, 0, 0, 0, 0,
	2570, 0, 1811, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 1829, 0, 0, 0, 0, 0, 0, 1798, 1799,
	0, 0, 0, 0, 0, 0, 1781, 1782, 0, 1814,
	1815, 1816, 1825, 1826, 1827, 0, 1820, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 1812,
	0, 1804, 0, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	1800, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 1806, 1807, 1808, 1809, 0,
	0, 0, 0, 0, 0, 1789, 0, 0, 0, 0,
	1805, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 0, 0,
	0, 0, 0, 1822, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 1811, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	1828, 0, 1829, 0, 0, 0, 0, 0, 0, 1798,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 1796, 1802, 1824, 1801, 1797, 1830, 1794, 1792, 1793,
	1785, 1786, 1787, 1788, 1790, 1791, 0, 0, 0, 0,
	4635, 0, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 1782, 0, 1814, 1815, 1816, 1825, 1826, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 1812, 0, 0, 0, 0, 1810, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1805, 0, 0, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 1781, 1782, 1783, 1814, 1815, 1816, 1825,
	1826, 1827, 0, 0, 0, 1803, 0, 0, 1823, 0,
	0, 0, 0, 0, 1800, 1818, 1812, 0, 0, 0,
	0, 0, 0, 1784, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	1807, 1808, 1809, 0, 0, 0, 0, 0, 0, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 1796, 1802, 1824, 1801, 1797, 0, 1794, 1792,
	1793, 1785, 1786, 1787, 1788, 1790, 1791, 1822, 0, 0,
	1832, 4631, 0, 0, 0, 0, 0, 1811, 1813, 0,
	0, 0, 1806, 1807, 1808, 1809, 0, 0, 0, 0,
	0, 0, 1789, 0, 1828, 0, 1829, 0, 0, 0,
	0, 0, 0, 1798, 1799, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 0, 0, 0, 0, 0, 0, 0, 0,
	1822, 0, 0, 1832, 0, 0, 1804, 0, 0, 0,
	1811, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 1829,
	0, 0, 0, 0, 0, 0, 1798, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 0, 0, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 1804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1805, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1781, 1782, 0,
	1814, 1815, 1816, 1825, 1826, 1827, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 1818,
	1812, 0, 0, 0, 0, 1810, 0, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 1805, 0,
	0, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1803, 0, 0, 1823, 0, 0, 0, 0,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 1821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 1796, 1802, 1824, 1801,
	1797, 0, 1794, 1792, 1793, 1785, 1786, 1787, 1788, 1790,
	1791, 0, 0, 0, 0, 4546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 1807, 1808, 1809,
	0, 0, 0, 0, 0, 0, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 1796,
	1802, 1824, 1801, 1797, 0, 1794, 1792, 1793, 1785, 1786,
	1787, 1788, 1790, 1791, 1822, 0, 0, 1832, 4507, 0,
	0, 0, 0, 0, 1811, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 1829, 0, 0, 0, 0, 0, 0,
	1798, 1799, 0, 0, 0, 0, 0, 0, 1781, 1782,
	0, 1814, 1815, 1816, 1825, 1826, 1827, 0, 1820, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1818, 1812, 0, 1804, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 1783, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 1803, 0, 0, 0, 0, 0, 0,
	0, 0, 1800, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 1806, 1807, 1808,
	1809, 0, 0, 0, 0, 0, 0, 1789, 0, 0,
	0, 0, 1805, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 1822, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 1811, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 1828, 0, 1829, 0, 0, 0, 0, 0,
	0, 1798, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 1796, 1802, 1824, 1801, 1797, 1830, 1794,
	1792, 1793, 1785, 1786, 1787, 1788, 1790, 1791, 0, 0,
	0, 0, 4506, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 1782, 0, 1814, 1815, 1816, 1825, 1826,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1818, 1812, 0, 0, 0, 0,
	1810, 0, 1784, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1805, 0, 0, 0, 0, 1837, 0,
	0, 0, 0, 0, 0, 1781, 1782, 1783, 1814, 1815,
	1816, 1825, 1826, 1827, 0, 0, 0, 1803, 0, 0,
	1823, 0, 0, 0, 0, 0, 1800, 1818, 1812, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1803, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 1807, 1808, 1809, 0, 0, 0, 0, 0,
	0, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 1796, 1802, 1824, 1801, 1797, 0,
	1794, 1792, 1793, 1785, 1786, 1787, 1788, 1790, 1791, 1822,
	0, 0, 1832, 4317, 0, 0, 0, 0, 0, 1811,
	1813, 0, 0, 0, 1806, 1807, 1808, 1809, 0, 0,
	0, 0, 0, 0, 1789, 0, 1828, 0, 1829, 0,
	0, 0, 0, 0, 0, 1798, 1799, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 1832, 0, 0, 1804, 0,
	0, 0, 1811, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 1829, 0, 0, 0, 0, 0, 0, 1798, 1799,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 0, 0, 0, 1820, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 1804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1805, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	1782, 0, 1814, 1815, 1816, 1825, 1826, 1827, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 1818, 1812, 0, 0, 0, 0, 1810, 0, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	1805, 0, 0, 0, 0, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1803, 0, 0, 1823, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 1796, 1802,
	1824, 1801, 1797, 0, 1794, 1792, 1793, 1785, 1786, 1787,
	1788, 1790, 1791, 0, 0, 0, 0, 4151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 1807,
	1808, 1809, 0, 0, 0, 0, 0, 0, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 1796, 1802, 1824, 1801, 1797, 0, 1794, 1792, 1793,
	1785, 1786, 1787, 1788, 1790, 1791, 1822, 0, 0, 1832,
	4081, 0, 0, 0, 0, 0, 1811, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 1829, 0, 0, 0, 0,
	0, 0, 1798, 1799, 0, 0, 0, 0, 0, 0,
	1781, 1782, 0, 1814, 1815, 1816, 1825, 1826, 1827, 0,
	1820, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 1812, 0, 1804, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 1830,
	0, 0, 0, 0, 0, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 1806,
	1807, 1808, 1809, 0, 0, 0, 0, 0, 0, 1789,
	0, 0, 0, 0, 1805, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 0, 0, 0, 0, 0, 1822, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 1811, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 1828, 0, 1829, 0, 0, 0,
	0, 0, 0, 1798, 1799, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 1796, 1802, 1824, 1801, 1797,
	1830, 1794, 1792, 1793, 1785, 1786, 1787, 1788, 1790, 1791,
	0, 0, 0, 0, 4080, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 1782, 0, 1814, 1815, 1816,
	1825, 1826, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 1812, 0, 0,
	0, 0, 1810, 0, 1784, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1805, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 1781, 1782, 1783,
	1814, 1815, 1816, 1825, 1826, 1827, 0, 0, 0, 1803,
	0, 0, 1823, 0, 0, 0, 0, 0, 1800, 1818,
	1812, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 1807, 1808, 1809, 0, 0, 0,
	0, 0, 0, 1789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 1796, 1802, 1824, 1801,
	1797, 0, 1794, 1792, 1793, 1785, 1786, 1787, 1788, 1790,
	1791, 1822, 0, 0, 1832, 4079, 0, 0, 0, 0,
	0, 1811, 1813, 0, 0, 0, 1806, 1807, 1808, 1809,
	0, 0, 0, 0, 0, 0, 1789, 0, 1828, 0,
	1829, 0, 0, 0, 0, 0, 0, 1798, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 0, 0, 1832, 0, 0,
	1804, 0, 0, 0, 1811, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 1829, 0, 0, 0, 0, 0, 0,
	1798, 1799, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 0, 1820, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 1804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1805,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 1782, 0, 1814, 1815, 1816, 1825, 1826, 1827,
	0, 0, 0, 0, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 1818, 1812, 0, 0, 0, 0, 1810,
	0, 1784, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 0, 1805, 0, 0, 0, 0, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1803, 0, 0, 1823,
	0, 0, 0, 0, 0, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	1796, 1802, 1824, 1801, 1797, 0, 1794, 1792, 1793, 1785,
	1786, 1787, 1788, 1790, 1791, 0, 0, 0, 0, 3739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 1807, 1808, 1809, 0, 0, 0, 0, 0, 0,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 1796, 1802, 1824, 1801, 1797, 0, 1794,
	1792, 1793, 1785, 1786, 1787, 1788, 1790, 1791, 1822, 0,
	0, 1832, 3240, 0, 0, 0, 0, 0, 1811, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 1829, 0, 0,
	0, 0, 0, 0, 1798, 1799, 0, 0, 0, 0,
	0, 0, 1781, 1782, 0, 1814, 1815, 1816, 1825, 1826,
	1827, 0, 1820, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1818, 1812, 0, 1804, 0, 0,
	0, 0, 1784, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 0, 0, 0, 0, 0, 0, 1783, 0, 0,
	0, 1830, 0, 0, 0, 0, 0, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 1800, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 1806, 1807, 1808, 1809, 0, 0, 0, 0, 0,
	0, 1789, 0, 0, 0, 0, 1805, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 0, 0, 0, 0, 0, 1822,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 1811,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 1828, 0, 1829, 0,
	0, 0, 0, 0, 0, 1798, 1799, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1795, 1796, 1802, 1824,
	1801, 1797, 1830, 1794, 1792, 1793, 1785, 1786, 1787, 1788,
	1790, 1791, 0, 0, 0, 0, 3239, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 1782, 0, 1814,
	1815, 1816, 1825, 1826, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 1812,
	0, 0, 0, 0, 1810, 0, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1805, 0, 0,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 1781,
	1782, 1783, 1814, 1815, 1816, 1825, 1826, 1827, 0, 0,
	0, 1803, 0, 0, 1823, 0, 0, 0, 0, 0,
	1800, 1818, 1812, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 1807, 1808, 1809, 0,
	0, 0, 0, 0, 0, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 1796, 1802,
	1824, 1801, 1797, 0, 1794, 1792, 1793, 1785, 1786, 1787,
	1788, 1790, 1791, 1822, 0, 0, 1832, 3238, 0, 0,
	0, 0, 0, 1811, 1813, 0, 0, 0, 1806, 1807,
	1808, 1809, 0, 0, 0, 0, 0, 0, 1789, 4780,
	1828, 0, 1829, 0, 0, 0, 0, 0, 0, 1798,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 0, 0, 0, 1822, 0, 0, 1832,
	0, 0, 1804, 0, 0, 0, 1811, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 1829, 0, 0, 0, 0,
	0, 0, 1798, 1799, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	1820, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 1804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1805, 0, 0, 0, 0, 0, 0, 0, 0,
	4779, 0, 0, 1781, 1782, 0, 1814, 1815, 1816, 1825,
	1826, 1827, 0, 0, 0, 0, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 1818, 1812, 0, 0, 0,
	0, 1810, 0, 1784, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 1805, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1803, 0,
	0, 1823, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 1796, 1802, 1824, 1801, 1797, 0, 1794, 1792,
	1793, 1785, 1786, 1787, 1788, 1790, 1791, 0, 0, 0,
	0, 3237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 1807, 1808, 1809, 0, 0, 0, 0,
	0, 0, 1789, 0, 3302, 0, 0, 0, 3301, 0,
	0, 0, 0, 0, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 1796, 1802, 1824, 1801, 1797,
	0, 1794, 1792, 1793, 1785, 1786, 1787, 1788, 1790, 1791,
	1822, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	1811, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 1829,
	0, 0, 0, 0, 0, 0, 1798, 1799, 0, 0,
	0, 0, 0, 0, 1781, 1782, 0, 1814, 1815, 1816,
	1825, 1826, 1827, 0, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 1812, 0, 1804,
	0, 0, 3173, 0, 1784, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 1800, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 1806, 1807, 1808, 1809, 0, 0, 0,
	0, 0, 0, 1789, 0, 0, 0, 0, 1805, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1823, 0, 0, 0, 0,
	0, 1822, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 1811, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 1828, 0,
	1829, 0, 0, 0, 0, 0, 0, 1798, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 1796,
	1802, 1824, 1801, 1797, 1830, 1794, 1792, 1793, 1785, 1786,
	1787, 1788, 1790, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2717, 0, 0, 0, 0, 0, 0, 1781, 1782,
	0, 1814, 1815, 1816, 1825, 1826, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1818, 1812, 0, 0, 0, 2716, 1810, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1805,
	0, 0, 0, 0, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1803, 0, 0, 1823, 0, 0, 0,
	0, 0, 1800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 1782, 0, 1814,
	1815, 1816, 1825, 1826, 1827, 0, 0, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 1812,
	0, 0, 0, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 0, 0, 1806, 1807, 1808,
	1809, 1783, 0, 0, 0, 0, 0, 1789, 0, 0,
	0, 1803, 0, 0, 0, 0, 0, 0, 0, 1821,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	1796, 1802, 1824, 1801, 1797, 0, 1794, 1792, 1793, 1785,
	1786, 1787, 1788, 1790, 1791, 1822, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 1811, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 1829, 0, 0, 0, 0, 0,
	0, 1798, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 1807, 1808, 1809, 1820,
	0, 0, 0, 0, 0, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 1811, 1813, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 1829, 0, 0, 0, 1819, 0, 0, 1798,
	1799, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1804, 1781, 1782, 0, 1814, 1815, 1816, 1825,
	1826, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1818, 1812, 0, 0, 0,
	1810, 0, 0, 1784, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 1805, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 1819, 1064, 0, 0, 1783, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 1803, 0,
	1823, 0, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 1782, 0, 1814, 1815, 1816, 1825, 1826, 1827,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1818, 1812, 0, 0, 0, 1810, 0,
	0, 1784, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1805, 0, 0, 0, 0, 0, 1837, 0, 0,
	0, 0, 1806, 1807, 1808, 1809, 1783, 0, 0, 0,
	0, 0, 1789, 0, 0, 0, 1803, 0, 1823, 0,
	0, 0, 0, 1821, 0, 1800, 0, 0, 0, 0,
	0, 0, 0, 1795, 1796, 1802, 1824, 1801, 1797, 0,
	1794, 1792, 1793, 1785, 1786, 1787, 1788, 1790, 1791, 1836,
	1822, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	1811, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 1829,
	0, 0, 0, 0, 0, 0, 1798, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 1807, 1808, 1809, 1820, 0, 0, 0, 0, 0,
	1789, 0, 0, 0, 0, 0, 3308, 0, 0, 1804,
	0, 1821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 1796, 1802, 1824, 1801, 1797, 0, 1794, 1792,
	1793, 1785, 1786, 1787, 1788, 1790, 1791, 0, 1822, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 1811, 1813,
	0, 0, 0, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 1829, 0, 0,
	0, 1819, 0, 0, 1798, 1799, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1820, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1804, 0, 1781,
	1782, 0, 1814, 1815, 1816, 1825, 1826, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1818, 1812, 0, 0, 1810, 3303, 0, 0, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	0, 1830, 0, 0, 0, 0, 0, 0, 1805, 0,
	0, 0, 0, 0, 0, 1837, 0, 0, 0, 1819,
	0, 0, 0, 0, 1783, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 1803, 1823, 0, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	1781, 1782, 0, 1814, 1815, 1816, 1825, 1826, 1827, 3720,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 1812, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 0, 1805, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 1807,
	1808, 1809, 0, 0, 0, 0, 1837, 0, 1789, 0,
	0, 0, 0, 1823, 0, 1783, 0, 0, 1821, 0,
	0, 0, 0, 0, 0, 1803, 0, 0, 1795, 1796,
	1802, 1824, 1801, 1797, 1800, 1794, 1792, 1793, 1785, 1786,
	1787, 1788, 1790, 1791, 1836, 0, 1822, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 1811, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 1829, 0, 0, 0, 0,
	0, 0, 1798, 1799, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1820, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	1807, 1808, 1809, 0, 0, 1804, 1821, 0, 0, 1789,
	0, 0, 0, 0, 0, 0, 1795, 1796, 1802, 1824,
	1801, 1797, 0, 1794, 1792, 1793, 1785, 1786, 1787, 1788,
	1790, 1791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 1830,
	1832, 0, 0, 0, 0, 0, 0, 1811, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 0, 0,
	0, 0, 0, 0, 1828, 0, 1829, 0, 1834, 0,
	0, 0, 0, 1798, 1799, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 0, 0, 0, 0, 0, 1781, 1782, 0,
	1814, 1815, 1816, 1825, 1826, 1827, 1804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1818,
	1812, 1810, 0, 0, 3241, 0, 0, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 0, 1805, 0, 0, 0, 0, 0,
	1830, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 0, 0, 0, 0, 0, 1819, 0,
	0, 1823, 1803, 0, 0, 0, 0, 0, 0, 1834,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 3268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 0, 0, 1781, 1782, 0, 1814,
	1815, 1816, 1825, 1826, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 1812,
	0, 0, 1810, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1805, 1806, 1807, 1808, 1809,
	0, 0, 1837, 0, 0, 0, 1789, 0, 0, 0,
	0, 1783, 0, 0, 1821, 0, 0, 0, 0, 0,
	0, 1803, 1823, 0, 1795, 1796, 1802, 1824, 1801, 1797,
	1800, 1794, 1792, 1793, 1785, 1786, 1787, 1788, 1790, 1791,
	0, 0, 0, 0, 1822, 0, 0, 1832, 0, 0,
	0, 0, 0, 1836, 1811, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 1829, 0, 0, 0, 0, 0, 0,
	1798, 1799, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 0,
	0, 0, 0, 0, 0, 1806, 1807, 1808, 1809, 0,
	0, 0, 0, 1804, 0, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 1796, 1802, 1824, 1801,
	1797, 0, 1794, 1792, 1793, 1785, 1786, 1787, 1788, 1790,
	1791, 0, 0, 1822, 0, 0, 1832, 1830, 0, 0,
	0, 0, 0, 1811, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 0, 0, 0, 0,
	1828, 0, 1829, 0, 0, 0, 1834, 0, 0, 1798,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 1781, 1782, 0, 1814, 1815, 1816, 1825,
	1826, 1827, 1804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1818, 1812, 0, 0, 1810,
	0, 0, 0, 1784, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 0, 0, 0, 1830, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 0, 1819, 0, 0, 0, 1803, 1823,
	0, 0, 0, 0, 0, 1834, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 1781, 1782, 0, 1814, 1815, 1816,
	1825, 1826, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 1810, 0,
	0, 0, 0, 0, 1784, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 1805, 1806, 1807, 1808, 1809, 0, 0, 0, 0,
	1837, 0, 1789, 0, 0, 0, 0, 0, 0, 1783,
	0, 0, 1821, 0, 0, 0, 0, 0, 1823, 1803,
	0, 0, 1795, 1796, 1802, 1824, 1801, 1797, 1800, 1794,
	1792, 1793, 1785, 1786, 1787, 1788, 1790, 1791, 0, 0,
	1822, 0, 0, 1832, 0, 0, 0, 0, 0, 1836,
	1811, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 1829,
	0, 0, 0, 0, 0, 0, 1798, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 1807, 1808, 1809, 0, 0, 1804,
	0, 0, 0, 1789, 0, 0, 0, 0, 0, 0,
	0, 1821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 1796, 1802, 1824, 1801, 1797, 0, 1794, 1792,
	1793, 1785, 1786, 1787, 1788, 1790, 1791, 0, 0, 0,
	0, 1822, 0, 1830, 1832, 0, 0, 0, 0, 0,
	0, 1811, 1813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	1829, 0, 1834, 0, 0, 0, 0, 1798, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 0, 0, 0, 0, 0, 0, 0, 0, 949,
	0, 998, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 957, 0, 0, 1805, 0,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 972, 0, 955, 954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 974, 0, 0, 0, 0,
	0, 956, 0, 0, 0, 0, 959, 0, 0, 0,
	0, 1007, 0, 0, 0, 0, 1836, 0, 0, 0,
	969, 970, 0, 0, 0, 0, 0, 0, 0, 987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 999, 961, 0,
	0, 0, 0, 962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1805,
	0, 0, 0, 0, 0, 963, 0, 0, 0, 0,
	0, 0, 0, 0, 996, 0, 0, 0, 1821, 0,
	0, 0, 0, 0, 0, 0, 1823, 0, 1795, 1796,
	1802, 1824, 1801, 1797, 0, 1794, 1792, 1793, 1785, 1786,
	1787, 1788, 1790, 1791, 997, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1836, 0, 0,
	965, 0, 0, 0, 0, 0, 0, 0, 953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 966, 967, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 975, 973, 0, 0,
	0, 0, 0, 0, 968, 0, 0, 0, 984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 1004, 995, 0, 1795,
	1796, 1802, 1824, 1801, 1797, 0, 1794, 1792, 1793, 1785,
	1786, 1787, 1788, 1790, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1000, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 960, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 958, 0, 0,
	0, 991, 992, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1001, 989, 0, 0,
	0, 0, 0, 0, 0, 1005, 985, 0, 0, 978,
	976, 0, 981, 0, 0, 0, 0, 0, 982, 0,
	0, 951, 0, 1002, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 993, 0, 983,
	0, 0, 0, 0, 0, 980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1003, 0, 0, 0,
	0, 0, 0, 0, 986, 0, 0, 0, 0, 0,
	0, 0, 0, 964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 988, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 990,
}

var sqlPact = [...]int{
	12099, -1000, -1000, -1000, -1000, 154, -1000, -1000, 153, 148,
	147, 144, 141, 140, 139, 138, 136, 135, 132, -1000,
	-1000, -1000, -1000, -1000, -1000, 129, -1000, -1000, 128, -1000,
	127, 126, 125, -1000, -1000, 123, -1000, 120, -1000, -1000,
	-1000, -1000, 119, 118, 117, 93843, 93291, 94388, 2332, 114707,
	100956, 2112, 83397, 114155, 82845, 113603, 2221, 10326, 113051, 2782,
	115, -1000, 112499, 114, 113, 111, -1000, 111947, -1000, 2110,
	-1000, 110, -1000, 2433, 68980, 109, 104, 98, 2286, 96,
	-1000, 95, 92, -1000, -1000, 91, -1000, 13194, 1497, -1000,
	90, 89, -1000, 6602, 98755, 88, 83, 2566, 82, 79,
	67336, 75, 68, 2459, 2887, -1000, -1000, 2078, -1000, -1000,
	66, 62, 61, 58, 57, 55, 54, 47, 39, 36,
	35, 34, -1000, 33, 32, 31, 29, 28, -1000, 27,
	26, 25, -1000, 24, -1000, 22, 20, 19, 17, 16,
	15, 12, 11, 10, 9, 8, 7, 6, 5, 130657,
	-1000, -1000, 4, 1952, 1679, 1674, 1672, 1668, 1647, 951,
	3, 2, -8, -9, -11, -12, -13, -14, -15, -16,
	-20, -22, -24, -25, -26, -27, -30, -31, 100, -33,
	-36, -39, -41, -42, -44, -46, 2625, -1000, 1492, 1167,
	31731, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 122337, 115252,
	-47, -104, -50, -1000, 3347, 823, 55652, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 212, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 403, 2242, 721, -1000, -1000, -1000, 111402,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2330, -23,
	-1000, 2090, -1000, -1000, -1000, -1000, -1000, 719, -1000, 2329,
	306, 2294, -1000, -1000, -1000, 3400, 2480, 3790, 3789, 3788,
	3787, 3786, 121792, 1863, 3785, 2550, 3784, 3783, 3782, 3781,
	3779, 3778, 3776, -1000, 92739, 1021, 92187, 91635, 3430, 110857,
	91083, 110305, 76784, 47723, 1104, 3394, -1000, -1000, -1000, -1000,
	-1000, -1000, 115252, -1000, 1011, -1000, -1000, 3774, 3772, 2054,
	714, 100404, -1000, 1728, -1000, -1000, -1000, -1000, 888, 1189,
	33432, 33432, 33432, 209, -1000, -1000, -1000, -1000, -1000, -1000,
	3771, 3770, 3769, 3768, 3767, -1000, -1000, 82293, 24739, 81741,
	81189, 109753, 24175, 90531, 89979, 3764, 3760, 3759, 109201, 76220,
	3542, 3541, 1010, 2088, 1446, -1000, -1000, -1000, -1000, -1000,
	-1000, -67, 71182, 3574, 115252, -1000, 204, -1000, -1000, -1000,
	-1000, -1000, -1000, 47156, 940, 46589, 901, 46022, 489, -1000,
	-1000, -1000, -1000, 75656, -1000, 108649, 2474, 3756, 3753, 1124,
	3752, 3288, 1845, 3751, 1934, 1217, 3749, 3745, 3744, 3742,
	3741, 3739, 3738, 1482, 108097, 3010, 1513, 107545, 1722, 75092,
	1009, 89427, 94388, 2688, 106993, 1425, 1373, -1000, -1000, -1000,
	-1000, 3131, 2877, 2868, 1242, -1000, -1000, -1000, -1000, 59007,
	8417, 7948, -1000, -1000, 11066, 106441, 61817, 94388, 94388, -1000,
	-1000, -1000, -1000, -1000, 45455, 515, 44888, 1040, -1000, -1000,
	59569, 2961, -1000, -1000, -1000, -1000, 44321, 437, 43754, 902,
	115252, -1000, 2999, 2051, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2282, 1603, 3587, 2775, 74528, 2068, 1372, 3359, 3130,
	3129, 1478, 2077, 3128, 3737, 2654, 3119, 3114, 3082, 3081,
	3078, 1684, 2613, 702, 2611, 31164, 2984, 1741, 43187, 1724,
	1475, 3075, 3074, 3601, 2043, 2047, 2147, 80637, 3734, 3732,
	3311, 3072, 3051, 2836, 3045, -1000, 2960, 1481, -1000, -1000,
	-1000, -1000, -1000, 1436, -1000, -1000, -1000, -1000, -1000, 85032,
	-1000, -1000, 1819, -1000, -1000, 1819, -1000, -1000, -1000, -1000,
	-1000, 1330, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1492, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2037, -1000, 2048, -1000, -1000,
	2544, 3323, 3323, 3323, 3389, 372, 362, -1000, 100, -1000,
	-1000, 129985, -1000, -1000, 48290, 48290, 48290, 48290, 48290, 48290,
	48290, 48290, 2240, -1000, 711, -1000, -1000, 753, -1000, 710,
	597, 529, -1000, -1000, -1000, -1000, -1000, -1000, 709, -1000,
	-1000, -1000, -1000, -1000, -1000, 3574, -1000, 27629, -1000, -1000,
	-1000, 382, 708, 48290, -1000, -1000, 3626, 3624, 839, -1000,
	201, 907, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2994, 707, 701, -1000, 700, 698,
	697, 695, 693, -1000, 692, -1000, 672, 670, 669, 668,
	660, 656, 655, 652, -1000, 2142, -1000, -1000, -1000, -1000,
	-1000, -1000, 586, 583, 583, 583, -1000, 1000, -1000, -1000,
	-1000, 218, 582, 217, 579, 578, 576, -1000, 651, 636,
	635, 627, 622, 611, 603, 602, 601, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 998, -1000, -1000, -1000, -1000, -68,
	115252, -1000, 403, -68, -1000, -1000, 600, -1000, 35729, 35729,
	35729, -1000, -1000, 2328, 48290, -1000, 2525, -1000, -60, -60,
	857, 57317, -1000, 54522, 857, 394, 773, 62921, -1000, 2958,
	-1000, -1000, 598, 195, -1000, -1000, -1000, -1000, 25301, 2957,
	115252, 115252, 115252, 94388, 94388, 94388, 3730, 3218, 48290, -1000,
	-1000, 68426, 115252, 94933, -1000, -1000, 3522, 69530, 67881, 115252,
	2992, 72288, 3729, -1000, -1000, -1000, -1000, -1000, 3191, 3727,
	3726, 3725, -1000, 115252, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 247, 3190, -1000, -1000, 98203, 247, 3189, -1000, 247,
	3188, -1000, 97658, -1000, -1000, 2313, 3187, -1000, -1000, 249,
	3186, -1000, -1000, -1000, 248, 3185, -1000, -1000, 193, -94,
	3184, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 129985, -1000, -1000, -1000, 71736, -1000, 3321,
	-1000, -1000, 115252, -1000, 48290, -1000, 3521, 1723, 77898, 3440,
	-75, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2527, 2517,
	1117, 2351, -1000, 3228, 1707, 33432, 3276, -1000, -1000, -1000,
	-1000, -1000, 190, 25301, -1000, -1000, -1000, -1000, -1000, -1000,
	2802, 3180, 1404, -1000, 2349, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1969, 3176, -1000, 2165, 3174, 1949, -1000,
	-1000, 3435, -1000, 3308, -1000, -1000, 1688, 3173, -59, -1000,
	-1000, 2171, -1000, -1000, -1000, -1000, 2008, -1000, 1281, 3171,
	-1000, 2771, 2771, 88875, 3154, 61255, 59569, 71182, -71, -1000,
	-1000, -1000, -1000, -103, -1000, 23607, 129985, -1000, -1000, -1000,
	-1000, 1786, 129985, 812, -1000, -1000, 3169, -1000, 129985, 808,
	-1000, -1000, 3165, -1000, 2991, -1000, -1000, 2442, -1000, -1000,
	3724, -1000, -1000, 3722, -1000, 3721, 3718, 3717, -1000, 1719,
	2061, 3716, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	88330, 2322, -1000, -1000, 87226, 2988, -1000, 2439, 3438, -1000,
	87778, 1008, -1000, 942, 2437, -1000, 97113, 925, 2435, -1000,
	3715, 3426, 2711, 942, 2431, -1000, -1000, -1000, -1000, -1000,
	987, -1000, 65130, -1000, 65130, -1000, 1601, -1000, 121247, -60,
	94388, 3574, -1000, -107, -1000, -1000, -1000, 823, -1000, 58440,
	-1000, 58440, 99852, 77346, 914, 706, 66784, 129985, -1000, -1000,
	-1000, -1000, 129985, -1000, -1000, -1000, -170, 2769, -1000, 77346,
	60693, 129985, -1000, -1000, -1000, -1000, 129985, -1000, -1000, -1000,
	77346, 87226, -1000, 105889, 86681, -1000, -1000, 1477, 2560, -1000,
	-1000, -1000, 77346, 1282, 77346, 77346, 77346, -1000, 105337, -1000,
	-1000, 2084, 1681, 3312, 2041, 94388, -1000, 1888, -1000, -1000,
	-1000, 3337, 3148, 115252, -1000, -1000, 2987, -1000, 70637, 96568,
	-1000, 96023, -1000, 95478, -1000, 94388, -1000, 94388, -1000, 3714,
	3712, 3711, -1000, -1000, 3710, -1000, 3709, 3327, -1000, 774,
	42620, 129985, 3326, -1000, 3707, 3432, 2984, 129985, -1000, 3146,
	1698, 1692, 115252, -1000, -1000, 115252, -1000, 115252, -1000, -1000,
	-1000, 1518, -1000, -1000, 2524, -1000, -1000, -1000, -1000, 94388,
	94388, 94388, 94388, 1526, -1000, 42053, -1000, -1000, 3047, 3706,
	1747, -1000, 1833, -1000, 2955, 3333, -1000, 1470, 1795, -1000,
	-1000, 254, -1000, -1000, -75, -1000, 120702, -1000, 2544, -1000,
	115252, -1000, 2519, 2975, 2981, 1729, 2337, 2631, -1000, 41486,
	2599, 51692, 2347, 100, -1000, -1000, 100, 100, 32865, -1000,
	-1000, 69530, 69530, 25301, 1362, 48290, 48290, 48290, 48290, 48290,
	48290, 48290, 48290, 48290, 48290, 48290, 48290, 48290, 48290, 48290,
	48290, 48290, 48290, 48290, 48290, 48290, 48290, 48290, 48290, 48290,
	48290, 48290, 48290, 48290, 48290, 48290, 48290, 48290, 48290, 48290,
	48290, 2018, 48290, 1324, 48290, 48290, 48290, 48290, 2135, -1000,
	-1000, 1948, 449, 2026, 597, -1000, -1000, -1000, 3569, 3569,
	3569, 1343, 1343, 1343, 130363, 130363, 468, 3705, 753, -1000,
	48290, -1000, 53, 57869, 48290, 25865, -1000, 362, 12827, 2556,
	-1000, 356, 26461, -1000, -1000, -1000, 27629, 529, 40890, 48290,
	975, 129985, -1000, -1000, 1411, 3585, 23039, 3018, 2824, 596,
	782, 781, 30568, 29972, 29376, 28780, 760, 649, 48290, 48290,
	48290, 48290, 48290, 48290, 48290, 48290, -1000, -1000, 3593, -1000,
	3585, -1000, -1000, -1000, -1000, 3585, 1348, 1218, 3585, -1000,
	3585, 3585, 7649, 7649, 40323, 39756, 39189, 52259, 38622, 48290,
	28213, 38055, 37488, -1000, 115252, -68, 3520, 48290, 299, -1000,
	128747, -1000, 299, 299, 594, -112, 129985, 2766, 2766, 56207,
	2414, 2248, 2248, 2248, -1000, 857, 18466, 857, 104240, 2255,
	857, 857, 185, 192, 355, 53960, 2525, 104240, 736, 591,
	-51, -53, -54, -1000, -1000, -55, -62, -1000, -1000, 94388,
	590, 25865, 25301, 184, 1991, -114, 2624, 2623, -1000, 2622,
	2621, -1000, 2619, -1000, 1820, -117, 1268, 94388, 115252, 1415,
	3704, -90, -1000, 7260, -119, -1000, 1135, 183, 3585, -1000,
	-1000, -1000, -1000, -1000, 3702, 3698, -1000, 996, 589, 588,
	435, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 586,
	583, 583, 583, -1000, 218, 582, 217, 579, 578, 576,
	-1000, -1000, -1000, -1000, -1000, 2951, 94388, 115252, 1413, 3694,
	-103, 94933, -63, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 115252, -1000, -1000, -1000, 3693, -1000, 94388, -1000, -1000,
	94388, 247, 3159, -1000, 94388, -1000, 94388, 246, 3145, -1000,
	-1000, 115252, -1000, 94388, 94388, -1000, 115252, 115252, 115252, 77346,
	77346, 250, -1000, 94388, 877, -120, 1128, -75, -1000, -1000,
	-1000, 1819, -1000, 2033, -1000, -1000, -1000, -1000, -1000, -1000,
	1487, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 839,
	-1000, -1000, -1000, -1000, -1000, -1000, 3583, 3579, -69, -1000,
	-1000, 25301, -1000, -80, 1600, 1861, 1267, -1000, 80085, 2377,
	3310, 3687, 2694, 3298, 1585, -1000, 1517, -1000, 3410, 85032,
	3457, 3501, 1391, -1000, 2949, -1000, -1000, 887, 1740, 1780,
	1263, 1262, 85032, 2165, -1000, 69530, -1000, 2663, 3388, 1365,
	1349, 1365, 1365, 1355, -1000, 85032, 1774, 1261, 1258, 1256,
	2188, 1999, 1989, -1000, -1000, -1000, 1253, 1250, 787, 1984,
	-1000, -81, 3447, 3492, 1306, -1000, 2940, 1248, -1000, -1000,
	-1000, 3387, 94388, 25301, 1560, 1539, 1546, 1767, 1247, -70,
	-1000, 3466, 1246, 1244, -1000, 982, 5786, 3246, -1000, 77346,
	982, 982, 1940, 3140, 2758, 1659, -1000, 2768, 854, 2767,
	-1000, -1000, -1000, 854, -71, 71182, 115252, 178, -1000, 53,
	48290, 48290, 53, 48290, 53, 3419, 3113, -1000, -1000, -1000,
	-1000, -1000, 3685, 2046, 2548, -1000, -1000, 575, 2429, 2932,
	115252, 2668, -72, 94388, -1000, 70092, 3110, 72840, 2165, 2427,
	-1000, -1000, 86129, -1000, 3104, 403, 2423, -1000, 658, 3684,
	3103, -1000, 120157, -1000, 3321, 1367, 3102, 1080, 490, 3519,
	-1000, 490, 65680, -1000, 115252, -1000, -60, 6387, 78995, -122,
	-125, 354, -1000, 104792, 115252, 1079, 79540, 115252, 3264, 932,
	59569, -1000, 59569, -130, -170, 2764, 1508, 914, 914, 854,
	-1000, 854, -1000, 94388, 2978, -1000, -1000, 77346, 914, 914,
	914, -1000, -1000, -1000, -1000, 3679, 3676, 3675, 3672, -1000,
	-1000, 933, 94388, 115252, 94388, -1000, -1000, 1649, -1000, 177,
	-1000, 115252, -1000, 115252, 115252, 94388, -1000, 933, 115252, 933,
	115252, 933, 115252, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	53, -1000, -1000, 129985, -1000, 48290, -1000, -1000, 3669, 1642,
	-1000, 2977, -1000, 2976, -1000, -17, -1000, -1000, 1897, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3668, 129985, -1000, 1878,
	-1000, -1000, -1000, -1000, 94388, 94388, 94388, 94388, 115252, 3243,
	-1000, 115252, 3241, 94388, -1000, -1000, 85032, -1000, 2519, 2975,
	-1000, -1000, -1000, -1000, -1000, -1000, 1427, 2301, -1000, 2578,
	-1000, 1545, -1000, -1000, -1000, 129985, 52826, -1000, -1000, 129985,
	1841, -1000, 51125, 50558, -1000, -1000, 1744, 94388, 2633, -1000,
	2633, -102, -1000, 128373, 2576, 94388, -1000, -1000, -1000, -1000,
	-1000, 880, 638, 638, 1245, 1245, 1245, 1245, 3415, 341,
	694, 5216, 9712, 9712, 512, 512, 512, 512, 512, 9712,
	4751, 1343, 1343, 4751, 4751, 4751, 4751, 4751, 1343, 1343,
	1343, 9712, 9712, 9712, 1343, 130363, 130252, 13809, 48290, 48290,
	1233, 1941, 449, 13355, 48290, 8055, 8055, 8055, 8055, -1000,
	2040, -1000, -1000, -1000, -1000, 2929, 557, 52259, 52259, -1000,
	-1000, -1000, -1000, 27045, 48290, -1000, -1000, -1000, -1000, 36892,
	-1000, -1000, 624, -313, 353, -1000, 172, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	350, -101, 76, -1000, 48290, 48290, 48290, 348, -1000, 171,
	48290, 115252, -1000, 123500, 730, -127, -1000, -132, 1389, -1000,
	48290, -1000, -1000, 1232, -1000, 1230, 1225, 1224, -1000, 555,
	347, -1000, 167, -1000, 2244, 554, 551, 48290, -1000, -1000,
	-1000, -1000, -1000, 127685, -1000, -1000, 127311, -1000, -1000, 127060,
	-1000, -1000, 126686, -1000, -1000, -1000, -1000, -1000, 129876, 123437,
	17605, 17215, 10018, 16609, 16009, -135, 345, -137, 337, 879,
	876, 325, 322, 321, -138, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -140, 320, -1000,
	2926, -101, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	318, -1000, 317, -1000, 129609, -101, 314, 8766, -1000, 52259,
	52259, 52259, 52259, -1000, 312, -1000, 128122, -1000, 129498, 36325,
	36325, 36325, 309, 129220, 48290, -101, -143, -1000, -145, -1000,
	-1000, 478, -148, 927, 35729, 55097, 25301, -1000, 927, 927,
	48290, -1000, 48290, 2606, -1000, -1000, -1000, -1000, 2587, 2075,
	2766, 56207, -1000, -1000, -1000, -1000, 104240, -1000, 3574, 2707,
	-1000, 104240, -1000, -1000, 115252, 403, -1000, 104240, 104240, 25301,
	857, -1000, 857, 104240, 712, -1000, -1000, -1000, -1000, -1000,
	304, 63476, 76, 162, 25301, 942, -1000, -1000, 2689, 2689,
	2689, 2689, 2689, -1000, -1000, 115252, 1216, -73, -113, 2760,
	-1000, 3546, -1000, 2120, -1000, 69530, -1000, 750, 1019, 25301,
	-1000, -1000, -1000, 550, -1000, 3585, 3585, -1000, 3585, 115252,
	2918, 229, 2759, -1000, 165, 72840, 72840, 3666, -1000, -1000,
	247, -1000, 94388, 247, 247, -1000, 94388, 94388, 2313, -1000,
	249, -1000, 248, -1000, -1000, -94, -1000, 969, 33432, -1000,
	1819, -1000, -1000, 1556, -1000, 2050, -1000, 1139, -1000, -1000,
	-1000, -1000, 33432, -1000, 2136, 115252, 115252, 94388, -1000, 115252,
	-1000, 2224, 72840, -1000, 2422, 119612, 2413, 69530, 115252, -1000,
	-1000, 538, 905, 2574, 2569, 1077, 115252, 115252, 2568, 119067,
	118522, -1000, 3665, 115252, 2108, 48290, 3385, 2254, 2438, 53,
	53, -1000, 53, 53, 53, -1000, 537, 1321, 94388, 94388,
	115252, 72840, 94388, 1866, -1000, -1000, -1000, -1000, -1000, 85577,
	-1000, -1000, 3592, 3588, -1000, 1365, -1000, -1000, -1000, 1365,
	2165, 1828, 115252, 72840, 94388, 72840, -1000, -1000, 2213, 117977,
	117432, 1760, 115252, 1434, -1000, 787, 2177, 53, 53, -1000,
	53, 53, 53, 536, 25301, 1998, -1000, 3014, 115252, 3622,
	116887, 3617, 115252, 115252, 115252, 72840, 3324, 115252, 115252, 72840,
	-1000, 116342, 3537, 2037, 5786, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 73964, 1085, 115252, 1281,
	-1000, -1000, 1753, 1211, 1209, 85032, 2055, 1739, 1886, 115252,
	59569, 928, 59569, 2719, -1000, -1000, 22471, -1000, 129985, 129985,
	-1000, 129985, -1000, 70092, 115252, -1000, 1002, 115252, 79540, 904,
	3101, 64580, -103, 914, 77346, 94388, -72, 2668, 115252, -1000,
	-1000, 2165, 3100, 403, 2420, -1000, 77346, 3518, 3099, 532,
	3663, 3661, -1000, 94388, 2320, 2415, -1000, -1000, 115797, 3203,
	787, 115252, 927, 56207, 1987, -1000, 62369, 1031, 115252, 1893,
	163, -1000, -1000, -1000, -37, 115252, -1000, 772, -1000, -1000,
	6387, 6387, 914, -105, 531, -1000, 836, 834, 60131, 77346,
	-151, -1000, -1000, -1000, -1000, 2413, 94388, 115252, 1291, 2708,
	115252, -153, -1000, 161, 530, -1000, 2592, -1000, -170, -1000,
	932, 59569, 2917, 2914, -1000, -1000, 968, -1000, 1468, 914,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -61, 1882, 115252, -103, -103, -87, -73, -1000, 933,
	-1000, 933, -1000, 933, -1000, 129985, -1000, -1000, 1641, 1640,
	115252, -1000, -1000, 115252, -1000, 25301, 115252, 94388, 25301, 94388,
	2972, 2970, -1000, -1000, -1000, 115252, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1102, -1000, 1841, 2300, -1000, 529, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2497, -1000,
	-74, 32865, 859, -1000, -1000, 94388, -64, 48290, 48290, 9046,
	8979, 48290, 52259, 52259, -1000, 48290, 6185, -1000, -1000, -1000,
	-1000, -1000, 2912, 526, 48290, 69530, 6640, 5247, -1000, 302,
	11302, 4751, -1000, 48290, -1000, 577, -1000, 298, 35162, -1000,
	128845, -34, -154, -1000, 19047, -101, -159, -1000, -1000, 748,
	-1000, 3199, -1000, 48290, 129122, 2447, 2121, 1806, 1552, 3585,
	3616, 21903, -1000, 66232, 973, 2267, 126623, -1000, -1000, -1000,
	-1000, 69530, 69530, 48290, 48290, -1000, 48290, 48290, 48290, -1000,
	-1000, -1000, 3585, 867, -1000, -1000, -1000, 867, -1000, -1000,
	1365, -1000, 1365, -1000, 48290, -1000, -1000, 2911, 48290, -1000,
	69530, 69530, 52259, 52259, 52259, 52259, 52259, 52259, 52259, 52259,
	52259, 52259, 52259, 52259, 52259, 52259, 52259, 52259, 52259, 52259,
	52259, 52259, 2558, 52259, 3562, 3562, 3562, 1315, -1000, 2969,
	2911, 48290, 48290, 69530, 297, 294, 293, -1000, 48290, -101,
	-1000, -1000, 9861, 524, -1000, 2488, -1000, 2817, -1000, 48290,
	-1000, -156, -1000, 2525, -1000, -1000, 2817, 2817, -160, 129985,
	56207, 56207, -1000, 522, 48290, 2563, -1000, -1000, 729, -309,
	-1000, 833, -1000, -1000, -1000, -1000, -1000, -1000, 403, -1000,
	-1000, -1000, 159, 104240, 104240, 725, -1000, -162, -1000, -1000,
	-165, -1000, 3516, 292, 25301, -1000, 927, 2650, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -103, 115252, 115252, 1726, 2293,
	3615, -1000, 3586, 743, 724, 158, 3585, 289, 286, 281,
	-103, 115252, 115252, 1711, 115252, -1000, -1000, -1000, -1000, 247,
	-1000, -1000, -1000, 246, -1000, -1000, -1000, -1000, 2655, -1000,
	-75, -1000, -1000, -1000, 48290, -1000, -1000, 3309, 1208, 1204,
	-1000, -1000, -1000, 2888, -1000, 3098, -1000, 2406, -1000, 1035,
	-1000, 1580, -1000, 48290, 521, 2704, 518, 517, 3658, 2126,
	3657, 1078, 3097, 2313, 3093, 2313, -1000, -1000, -1000, 891,
	-1000, 129985, 2254, -1000, 516, 514, -1000, -80, 1593, 1823,
	1196, 967, -1000, -1000, -1000, -1000, 48290, 48290, 103695, -1000,
	432, 3308, -65, -1000, -1000, -1000, 1699, 1195, 1191, -1000,
	-1000, -1000, -1000, 2165, 1686, 1185, 1183, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2404, -1000, -1000, 3088, 966, -1000,
	3035, 3033, 871, 115252, -1000, 963, -1000, -1000, -1000, -1000,
	48290, -1000, -81, 1177, 3456, 2391, 94388, -1000, 2313, 3087,
	1176, -1000, 1172, -1000, -1000, -1000, 3453, 3442, 1181, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 73402, -1000, -1000,
	982, 115252, 72840, 94388, 1712, -1000, -1000, 83942, 84487, 115252,
	2758, -103, 854, -1000, 3004, 854, 928, 2910, -1000, 2640,
	946, 94388, 3656, 280, -167, -82, 69530, 3514, -1000, 2326,
	539, 94388, 863, -1000, 3574, -1000, -1000, -1000, 945, -1000,
	3429, 94388, 3511, 3085, 942, 53, 94388, 3597, -1000, -1000,
	3507, 94388, 3083, 2318, 2390, 2534, 787, 78450, 942, 2263,
	-93, -1000, 1893, 34566, 3305, -172, -1000, -1000, -1000, 927,
	65680, 56207, 48290, 3653, -173, -1000, -1000, -1000, -1000, -1000,
	101508, 101508, 77346, 77346, 77346, 914, 115252, 115252, 79540, -1000,
	-1000, 510, 115252, 115252, 509, -1000, 115252, 115252, 3652, 77346,
	-84, 499, -1000, 830, 828, 827, -1000, -1000, -1000, -1000,
	-1000, -1000, 932, -1000, -170, 59569, 53, -1000, 2284, 94388,
	-1000, 21335, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 933,
	-103, -1000, -1000, 2182, 2344, 2182, 1870, 1862, -1000, -1000,
	2298, -1000, -1000, -1000, -1000, 2629, 3318, 25301, 3446, 8055,
	48290, 48290, 5647, 5179, 1007, 8055, 48290, 48290, 69530, 17853,
	-175, 48290, 48290, -1000, 48290, 723, 129985, -1000, 3611, 48290,
	277, 274, -1000, -1000, -1000, 3577, -1000, -1000, -1000, 129985,
	48290, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 270, -1000,
	157, -1000, -1000, -1000, 122882, -1000, 48290, 269, 3384, -1000,
	267, 266, 10635, 9246, 126249, 125998, 125624, 265, -1000, -1000,
	263, 262, 129985, 2969, 129985, -1000, -1000, 791, 791, 1359,
	1359, 1359, 1359, 3562, 650, 687, 552, 955, 955, 955,
	1164, 1315, 1315, 955, 955, 955, 1315, 2903, 2543, 496,
	9574, -1000, -1000, 129985, 129985, 261, -1000, -1000, -1000, -101,
	259, 9861, -1000, 2808, 3381, 129985, -1000, 56207, 2808, 2808,
	-1000, -1000, 2075, 115252, 129985, 56207, -1000, 2707, -1000, 19626,
	-1000, 25301, -1000, -1000, -1000, -1000, 3574, -1000, 63476, -1000,
	495, -1000, 156, -1000, 2650, -1000, 826, -1000, -1000, 77346,
	77346, -103, -181, 115252, -1000, -1000, 713, 3651, 741, 25301,
	255, -1000, -1000, -1000, -103, -103, 115252, -103, -1000, -1000,
	-1000, 3259, 129985, 115252, 115252, 1466, 103150, 115252, 3067, -1000,
	1990, -1000, 1077, 125561, 56762, -1000, 56762, 115252, -1000, -1000,
	-1000, -1000, 1921, 1543, 3650, 1118, -1000, 3339, 115252, -1000,
	115252, -1000, -1000, -1000, 115252, 115252, 94388, 115252, -1000, 72840,
	3048, -182, 129985, -85, -1000, 824, -1000, 1145, -1000, 20767,
	115252, 72840, 94388, 115252, 72840, 94388, 3066, 115252, 2228, -1000,
	-1000, 3031, -1000, 3043, -184, 25301, -1000, 3609, 3606, 3065,
	3355, -1000, 115252, 3605, 115252, 94388, 3258, -1000, -1000, -1000,
	-1000, -1000, -1000, 1657, 1171, 1153, 2317, -86, 2316, 2290,
	-87, 2055, 928, -88, 493, -1000, 822, -1000, -1000, 819,
	-1000, 928, -1000, 77346, 59569, 3649, 403, -1000, 2685, -1000,
	99300, 2343, 53, -1000, 3648, 102060, 477, -1000, 2274, -1000,
	639, -1000, 2508, 72840, 2165, 53, 94388, -1000, -1000, 403,
	245, -89, -1000, 3160, 1063, 25301, 94388, 3064, 2538, 787,
	78450, -1000, 1367, 2631, -1000, -92, -1000, 422, 53, 2263,
	-1000, -93, 129985, -1000, 816, -1000, -189, -1000, -1000, 231,
	-1000, 3257, 3255, -1000, 2815, 56762, 475, 474, 115252, 3249,
	-1000, -1000, -190, 2352, 2352, 77346, 59569, 77346, -1000, 932,
	854, -1000, 2465, -1000, -1000, -1000, -1000, -1000, 25301, 1730,
	-1000, 473, 472, -1000, -1000, -1000, -1000, 3318, 8055, 8055,
	48290, 48290, 48290, 8055, 17853, -191, -1000, 8055, 8055, -101,
	-1000, -1000, 128845, -1000, -1000, -1000, 129985, -1000, 20199, 2192,
	-1000, 125187, -1000, 32865, -1000, -1000, 48290, 48290, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 52259, 2899, 471, 69530,
	-1000, -1000, 227, 956, 48290, 49991, 2525, 956, 956, -1000,
	-199, -1000, -1000, -1000, 3574, 156, -1000, -1000, 3645, 25301,
	-1000, 77346, -1000, -1000, 3643, -204, 696, -1000, 3641, -1000,
	-1000, 122, -1000, -1000, -1000, 2753, 3502, -1000, 1966, -1000,
	115252, -1000, 115252, -1000, 25301, 115252, 2831, 1214, -1000, 905,
	2567, 469, 52259, 1099, 94388, 818, 2792, 2787, -1000, 3532,
	3377, 2741, -202, -1000, 115252, 48290, 115252, -205, -207, 2373,
	-1000, -1000, 1093, 1202, 48290, 1092, -1000, -1000, -1000, 69530,
	467, 2313, 2313, -208, -210, -1000, -1000, -1000, 48290, 1152,
	115252, 33999, -1000, 3640, 3308, -1000, -1000, -1000, -1000, -1000,
	-1000, 115252, -1000, 115252, -1000, 48290, 1146, -1000, -1000, -1000,
	3604, 2313, 25301, 2313, -1000, 2313, 3355, 1115, 115252, 72840,
	94388, 1772, 1772, 2881, -1000, -1000, -1000, 2446, 2446, 77346,
	59569, -1000, -94, 928, -1000, 3499, 2681, 3639, -1000, -1000,
	-1000, -1000, 2557, -1000, -1000, 115252, 2555, 915, -1000, -213,
	-1000, 815, 814, 79540, 904, 906, -1000, -95, 464, -1000,
	805, -1000, -1000, -1000, -1000, 403, 3498, -1000, 3602, 461,
	460, 115252, 2314, 455, 25301, 3300, 787, 78450, -1000, 3203,
	1893, -1000, 2380, 115252, 3296, -1000, 2631, 449, -1000, 914,
	448, 444, 2402, 2402, -215, 56762, 56762, -216, 443, 914,
	-1000, -223, -1000, -1000, -1000, -1000, -1000, -96, -1000, 793,
	553, -1000, -1000, 94388, 94388, 48290, 48290, -1000, 8055, 8055,
	8055, -1000, 223, -1000, -1000, 2263, 3376, -1000, -97, 124936,
	124562, 979, 52259, 69530, -224, -1000, -1000, 115252, 129985, -99,
	-1000, 129985, 439, 431, 359, -1000, -1000, -1000, 513, -1000,
	-1000, -1000, 115252, 3637, -1000, 115252, 102605, 115252, -1000, -1000,
	2007, -1000, -1000, -1000, 115252, 2385, -1000, -1000, -1000, 1070,
	48290, 9574, 52259, 425, 48290, -1000, -1000, -1000, 3497, 3233,
	-1000, 2662, 2880, 1954, 56762, -1000, 3318, -1000, 124499, -1000,
	1048, 2019, -1000, -1000, -1000, -1000, 129985, 52259, 3355, 56762,
	-1000, -1000, 421, 416, 129985, 414, 790, 2892, -1000, -1000,
	-1000, -1000, -1000, 129985, 409, 3456, -1000, -1000, -1000, -1000,
	2313, 94388, -1000, -1000, -1000, 1134, -1000, -1000, -1000, -1000,
	3636, 3635, 2857, 83942, -1000, -226, -1000, -1000, 2031, 53,
	2180, 2748, -1000, 2343, 408, -1000, -1000, 2305, 2653, -1000,
	102060, 33432, 33432, 219, 3494, 906, -1000, 3566, -1000, 3237,
	3237, 48290, 3493, 53, -1000, 3597, 56762, -1000, 94388, 56762,
	2308, 2100, 2516, 78450, -1000, 2534, -1000, -1000, -229, 115252,
	1893, -1000, -1000, 77346, 77346, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1048, -231, -232, -1000,
	77346, -1000, -1000, 2465, -1000, 115252, -1000, 115252, -1000, -1000,
	-234, -237, -1000, 2059, 48290, 32865, -1000, -1000, 979, -239,
	-1000, -100, -1000, 3490, 49991, 3634, 3633, 3632, -1000, -103,
	-1000, -103, -1000, 1960, -1000, -1000, -1000, 3052, 2805, 124125,
	9574, 2491, 115252, 123874, -1000, 3472, 2871, -1000, -1000, 2681,
	407, -1000, -1000, -1000, -1000, 859, 115252, 2681, 2804, 94388,
	9574, 1068, -240, 2182, 2182, 48290, 32298, 2225, 48290, -1000,
	-1000, 3355, 115252, -1000, -1000, 115252, 2307, -1000, 2851, 3573,
	-1000, 904, -1000, 2203, 115252, -1000, 3332, -1000, 3248, -1000,
	-1000, -1000, 2685, 53, -1000, -1000, -1000, -242, 129985, 53,
	-1000, 215, -250, 1063, -253, 94388, 2035, -1000, 787, -1000,
	2538, 927, -1000, -1000, -255, -256, 1954, 1048, 2177, -258,
	-1000, -263, -264, -1000, -1000, 214, 49424, 49424, 49424, -101,
	-102, -1000, 115252, 406, -1000, -1000, -1000, -1000, -1000, 3026,
	926, -1000, 811, 1851, -21, 1064, -1000, -1000, -1000, 2177,
	115252, -1000, -1000, -1000, 924, 403, -1000, 48290, 1048, -265,
	-1000, 1029, -266, -1000, 1026, -271, -1000, 2856, -1000, -272,
	2313, -252, 233, 1772, 923, 3418, -1000, -1000, -1000, 2305,
	94388, -273, -1000, -1000, 2370, -1000, 2681, 915, -1000, -1000,
	-1000, 1048, 402, 1954, 397, 1498, 787, -1000, -1000, 1365,
	3300, 3211, 914, 914, 2681, 1954, 913, -1000, 914, -1000,
	-1000, -1000, 3150, -1000, 53393, 2324, 1853, 127748, 3150, 3150,
	-1000, -1000, 115252, 3408, -1000, 842, 841, 1504, -1000, -1000,
	-1000, -1000, -1000, -1000, 2741, -274, 3407, 2491, 129985, 2681,
	-1000, 2182, 2730, -1000, 2182, 2855, -1000, 2195, -1000, -1000,
	-1000, 2834, -1000, 2854, -1000, 1791, 3556, 2502, 390, -1000,
	115252, 1816, 1811, 3631, 2180, 2305, 1954, 56762, 2681, 56762,
	2149, -1000, 115252, -1000, 2100, 1296, -1000, -1000, 2177, 2681,
	927, 387, -1000, -1000, 1830, 3506, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 786, -1000, 3224, -1000, 1089, 2218,
	2218, 927, -1000, 770, 811, -1000, -1000, 383, -1000, 377,
	-1000, 2289, 115252, 2271, -1000, -1000, -1000, -1000, 115252, -1000,
	-1000, 3630, -1000, 904, -1000, 2681, -279, 2177, -281, -1000,
	-1000, -1000, -103, 2035, -1000, 1583, 913, 2177, -1000, 1827,
	-1000, -1000, 2259, 48857, 48290, -1000, 3549, -1000, -1000, 2572,
	-1000, -1000, 48290, 2741, 48290, 48290, -1000, 233, 64028, -294,
	-1000, 2305, 2177, 1048, 913, 1954, 1498, 65680, 927, 913,
	-1000, -1000, -1000, 129985, -1000, -1000, -1000, 129985, -1000, -295,
	-296, -1000, -105, 101508, 2309, 2502, 913, 1954, 927, 2681,
	2149, -261, -1000, 927, 2177, 1133, -301, -1000, -1000, -1000,
	-1000, 927, 2681, -1000, 2177, -1000, -1000, -1000, -1000, -1000,
	374, -1000, -1000, 2177, 913, 48290, 913, 927, -302, 927,
	-1000, 2177, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4446, 4445, 4444, 4441, 4440, 4439, 4435, 4430, 4425,
	4424, 4422, 4421, 141, 4419, 4418, 4415, 4413, 4412, 4411,
	4410, 4409, 4408, 4407, 4406, 4405, 4404, 4402, 4399, 4398,
	4397, 4393, 4391, 4387, 4379, 4377, 4376, 4373, 4372, 4370,
	4369, 4368, 4367, 4366, 4364, 4352, 4351, 4350, 4349, 4347,
	4345, 4344, 4343, 4342, 4341, 4340, 4338, 4336, 4333, 4331,
	4326, 4320, 4310, 4305, 4300, 4299, 56, 4295, 4294, 4293,
	4292, 4291, 4289, 4288, 4285, 4284, 4283, 4281, 4279, 4278,
	4276, 4275, 4274, 4271, 4270, 4264, 4262, 66, 4260, 282,
	4258, 4257, 4256, 4255, 4254, 4251, 4250, 4249, 4248, 4246,
	4244, 4243, 281, 4239, 129, 164, 4233, 4232, 3795, 4230,
	4226, 276, 4225, 4224, 4223, 4222, 286, 4219, 4217, 4216,
	4214, 4213, 4212, 4207, 4206, 4205, 4202, 4201, 100, 207,
	4200, 4195, 1500, 4194, 4191, 4189, 4185, 4180, 4178, 4177,
	4176, 4175, 4174, 252, 173, 4173, 275, 4171, 4168, 4167,
	4164, 4162, 4161, 4160, 4159, 4158, 4157, 4155, 4154, 4153,
	4152, 4150, 4149, 4148, 4141, 4140, 4139, 4138, 4133, 4132,
	4131, 4130, 4129, 4125, 4124, 4120, 4119, 4117, 4116, 4115,
	4114, 4113, 4111, 4109, 4108, 4107, 263, 168, 193, 4106,
	4104, 274, 273, 4103, 4102, 4101, 4100, 4099, 131, 4,
	38, 4092, 4091, 91, 85, 106, 107, 104, 96, 4089,
	109, 4088, 122, 68, 4085, 18, 15, 264, 243, 10854,
	241, 4083, 4082, 4081, 250, 198, 4080, 249, 4079, 4071,
	4068, 4067, 4066, 4063, 70, 50, 180, 178, 179, 177,
	25, 4061, 159, 105, 83, 64, 44, 14, 80, 215,
	22, 9, 213, 4059, 258, 12, 145, 3, 42, 4057,
	4056, 4049, 4048, 3446, 133, 4045, 269, 245, 172, 4044,
	4040, 4036, 814, 4035, 4033, 62, 4032, 188, 89, 132,
	8, 125, 4030, 150, 165, 37, 4029, 174, 57, 4024,
	161, 95, 93, 10168, 12237, 4023, 4022, 111, 73, 128,
	4566, 202, 187, 206, 137, 171, 170, 123, 212, 211,
	175, 195, 4019, 254, 4013, 3477, 81, 185, 158, 5049,
	4012, 4011, 4008, 86, 201, 103, 4007, 4006, 78, 19,
	24, 2, 6, 144, 27, 23, 1, 4004, 33, 121,
	51, 35, 4003, 31, 4002, 4000, 3997, 3996, 3995, 41,
	166, 3994, 3992, 283, 3990, 84, 55, 30, 3989, 28,
	217, 3987, 233, 136, 3985, 3984, 256, 209, 182, 3983,
	88, 235, 3982, 3981, 3980, 3979, 3978, 138, 10, 134,
	3977, 3976, 148, 3975, 53, 238, 200, 3973, 58, 3972,
	3971, 183, 97, 146, 289, 199, 231, 108, 232, 189,
	236, 3968, 3967, 3966, 221, 3965, 3964, 227, 152, 3963,
	3962, 242, 285, 102, 49, 79, 246, 82, 197, 157,
	3961, 205, 3960, 3959, 284, 181, 222, 13, 7, 87,
	135, 3958, 5, 240, 156, 229, 118, 3956, 6796, 2343,
	2759, 3953, 3952, 154, 119, 77, 120, 162, 267, 114,
	3950, 3949, 2697, 3947, 3944, 3943, 3942, 190, 3941, 3939,
	3935, 149, 151, 186, 3932, 98, 74, 52, 21, 142,
	253, 287, 117, 223, 169, 259, 3930, 3929, 3928, 194,
	3925, 76, 113, 167, 203, 268, 60, 3923, 244, 3922,
	153, 822, 71, 155, 3917, 230, 3915, 3912, 3910, 3909,
	3908, 3906, 3904, 247, 239, 3903, 3901, 3898, 45, 196,
	3895, 260, 163, 218, 110, 65, 3894, 99, 4348, 3889,
	208, 2748, 59, 266, 261, 265, 3888, 2186, 61, 3886,
	0, 14009, 8161, 11936, 13467, 3885, 3951, 3884, 3883, 3882,
	216, 147, 3881, 3880, 3879, 115, 3878, 90, 3877, 3876,
	72, 3875, 29, 17, 20, 36, 34, 791, 678, 3874,
	3872, 26, 139, 126, 3871, 279, 234, 3870, 3868, 3866,
	3864, 94, 3860, 48, 3859, 43, 3857, 3856, 54, 16,
	46, 3855, 3854, 219, 3853, 226, 255, 3852, 160, 3851,
	69, 140, 3850, 3848, 3847, 67, 63, 257, 92, 3846,
	280, 3844, 204, 3838, 3837, 32, 3836, 3834, 248, 116,
	112, 3833, 251, 143, 40, 214, 184, 225, 3829, 3828,
	176, 3826, 3825, 3824, 271, 3823, 3822, 39, 3820, 3818,
	3815, 11, 3808, 3803, 210, 3212, 3802, 3801, 47, 3799,
	192,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 51, 51, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 37, 38, 32, 32,
	33, 33, 34, 35, 35, 10, 10, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 18, 18, 39, 39,
	19, 19, 41, 41, 20, 20, 42, 42, 597, 597,
	615, 615, 23, 23, 44, 44, 24, 45, 17, 598,
	598, 598, 598, 36, 25, 46, 29, 29, 29, 29,
	29, 201, 201, 201, 201, 22, 22, 40, 40, 237,
	237, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 593, 593,
	239, 239, 238, 231, 231, 232, 232, 233, 233, 599,
	599, 240, 240, 240, 242, 242, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 492, 492, 492, 525,
	525, 524, 524, 524, 523, 523, 619, 619, 620, 620,
	620, 620, 620, 131, 131, 390, 390, 390, 55, 55,
	55, 55, 55, 588, 588, 203, 203, 203, 205, 205,
	204, 204, 204, 204, 204, 78, 78, 604, 604, 605,
	605, 603, 606, 606, 606, 202, 202, 202, 127, 127,
	127, 127, 127, 127, 128, 128, 129, 129, 206, 206,
	206, 208, 208, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 212, 16, 16, 16, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 107, 107, 527, 527, 528,
	528, 197, 197, 198, 198, 198, 198, 199, 199, 200,
	200, 200, 69, 69, 209, 209, 211, 211, 210, 210,
	210, 210, 210, 57, 57, 57, 57, 57, 57, 57,
	58, 58, 58, 58, 58, 59, 59, 59, 59, 59,
	59, 60, 60, 60, 60, 60, 60, 67, 67, 67,
	67, 67, 67, 188, 188, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 75, 75,
	75, 75, 621, 621, 621, 621, 621, 621, 621, 621,
	621, 621, 621, 621, 621, 621, 621, 621, 621, 621,
	621, 622, 622, 623, 623, 624, 624, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 84, 84, 351, 351, 314, 314, 85,
	85, 85, 86, 86, 87, 87, 71, 71, 586, 586,
	367, 367, 483, 483, 72, 594, 594, 594, 596, 596,
	595, 595, 89, 89, 389, 389, 90, 90, 90, 90,
	90, 90, 91, 91, 91, 91, 91, 91, 91, 92,
	92, 92, 92, 92, 92, 92, 92, 92, 92, 92,
	92, 92, 92, 99, 99, 99, 99, 99, 100, 100,
	100, 97, 97, 97, 94, 94, 94, 93, 93, 93,
	98, 98, 98, 585, 303, 303, 96, 96, 96, 95,
	95, 95, 368, 368, 101, 101, 101, 101, 315, 102,
	102, 102, 102, 102, 102, 102, 102, 105, 105, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 485, 485, 103, 103, 103, 450, 450, 108,
	108, 108, 405, 405, 109, 109, 109, 109, 109, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 130, 130,
	130, 130, 130, 130, 130, 130, 590, 590, 360, 360,
	266, 266, 266, 266, 120, 120, 120, 120, 121, 121,
	121, 122, 122, 193, 193, 137, 137, 137, 137, 137,
	136, 136, 136, 136, 136, 136, 61, 61, 61, 62,
	62, 63, 63, 64, 64, 65, 65, 66, 66, 66,
	66, 66, 139, 139, 616, 616, 141, 138, 138, 138,
	140, 140, 140, 140, 142, 144, 144, 144, 144, 144,
	143, 143, 143, 143, 143, 145, 145, 517, 517, 376,
	376, 515, 515, 537, 537, 516, 516, 321, 321, 321,
	321, 321, 322, 322, 322, 526, 526, 526, 526, 526,
	526, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 194, 194, 195, 196, 196, 196,
	196, 196, 171, 171, 171, 187, 187, 187, 187, 187,
	187, 187, 187, 174, 174, 174, 158, 158, 147, 147,
	147, 147, 147, 147, 147, 152, 152, 152, 152, 152,
	152, 152, 152, 148, 148, 160, 160, 160, 160, 160,
	153, 153, 154, 154, 154, 155, 155, 155, 155, 181,
	181, 157, 157, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 149, 149, 149, 149, 162, 162, 162, 162,
	412, 412, 412, 186, 186, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 184, 184, 184, 184, 184, 184, 607, 607, 608,
	608, 178, 178, 178, 178, 178, 178, 464, 464, 172,
	172, 172, 172, 177, 177, 177, 177, 180, 180, 180,
	180, 395, 395, 169, 169, 169, 170, 170, 170, 175,
	175, 176, 352, 352, 173, 173, 179, 179, 179, 179,
	150, 150, 150, 150, 150, 150, 150, 151, 151, 151,
	151, 182, 182, 168, 168, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 626, 626, 164, 164,
	164, 163, 163, 163, 163, 166, 166, 167, 167, 167,
	167, 167, 167, 165, 156, 185, 587, 587, 583, 583,
	583, 583, 583, 583, 583, 583, 584, 584, 584, 584,
	589, 589, 113, 113, 113, 113, 113, 123, 123, 123,
	123, 123, 114, 114, 114, 114, 114, 116, 116, 115,
	115, 115, 115, 79, 79, 79, 79, 79, 15, 15,
	15, 80, 80, 257, 257, 215, 215, 215, 340, 340,
	216, 216, 329, 329, 329, 329, 213, 213, 214, 214,
	81, 81, 627, 627, 627, 600, 600, 600, 601, 601,
	601, 601, 601, 601, 323, 323, 324, 324, 430, 430,
	430, 430, 430, 327, 327, 327, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 330, 330, 241, 241, 241,
	338, 339, 339, 331, 331, 337, 336, 336, 335, 335,
	334, 334, 332, 333, 333, 333, 342, 342, 341, 344,
	344, 343, 429, 546, 546, 548, 548, 548, 548, 548,
	548, 548, 550, 550, 550, 550, 550, 550, 550, 550,
	550, 550, 550, 550, 550, 550, 550, 413, 413, 628,
	628, 629, 630, 544, 544, 544, 545, 540, 540, 541,
	541, 541, 541, 541, 325, 325, 326, 326, 326, 326,
	542, 543, 358, 358, 468, 547, 547, 549, 549, 551,
	631, 631, 631, 631, 631, 631, 632, 632, 632, 428,
	428, 427, 427, 349, 349, 552, 552, 552, 552, 553,
	553, 553, 553, 553, 556, 555, 554, 554, 554, 554,
	554, 83, 83, 83, 392, 392, 391, 391, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 190, 190, 269, 269, 77, 77, 77,
	12, 12, 12, 12, 12, 12, 12, 284, 284, 13,
	13, 13, 602, 602, 602, 82, 82, 82, 82, 82,
	82, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 592, 592, 591, 591, 270, 270, 634, 634, 88,
	88, 88, 88, 88, 88, 88, 88, 486, 486, 487,
	487, 76, 76, 76, 76, 76, 414, 414, 411, 411,
	410, 410, 357, 357, 466, 466, 466, 467, 274, 274,
	275, 275, 234, 234, 234, 31, 30, 21, 21, 26,
	26, 27, 27, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 28, 28, 48, 48, 48, 48, 49, 49,
	49, 49, 52, 52, 53, 53, 47, 47, 47, 47,
	50, 50, 43, 43, 54, 54, 54, 54, 54, 609,
	611, 611, 610, 610, 614, 614, 614, 614, 614, 614,
	612, 612, 613, 613, 617, 617, 618, 618, 119, 119,
	124, 124, 124, 124, 124, 125, 125, 125, 125, 126,
	126, 126, 126, 135, 135, 189, 189, 189, 189, 189,
	189, 189, 56, 56, 56, 56, 68, 68, 68, 68,
	133, 636, 636, 636, 134, 134, 134, 635, 635, 267,
	267, 424, 424, 425, 425, 637, 637, 426, 426, 426,
	426, 426, 260, 259, 261, 261, 262, 262, 74, 74,
	74, 250, 250, 249, 251, 251, 252, 252, 247, 247,
	529, 529, 254, 254, 254, 255, 255, 243, 243, 244,
	244, 245, 245, 246, 246, 258, 258, 638, 638, 111,
	111, 111, 192, 192, 313, 313, 313, 421, 421, 421,
	350, 350, 281, 281, 423, 423, 423, 423, 388, 388,
	388, 191, 191, 365, 365, 378, 378, 379, 379, 480,
	480, 380, 117, 117, 118, 118, 132, 132, 219, 219,
	217, 217, 217, 217, 217, 217, 217, 217, 224, 224,
	225, 225, 226, 226, 227, 228, 228, 228, 228, 369,
	369, 229, 229, 229, 218, 218, 218, 220, 220, 220,
	220, 220, 220, 220, 223, 223, 223, 223, 230, 230,
	230, 222, 222, 563, 563, 563, 565, 565, 567, 567,
	566, 566, 562, 562, 564, 564, 633, 633, 394, 394,
	394, 347, 348, 345, 345, 346, 346, 355, 355, 353,
	354, 354, 356, 356, 465, 465, 465, 235, 235, 235,
	385, 385, 385, 385, 386, 386, 417, 417, 415, 415,
	415, 415, 416, 416, 418, 418, 418, 419, 419, 420,
	420, 382, 382, 383, 383, 384, 384, 384, 384, 446,
	446, 221, 221, 221, 362, 362, 362, 363, 363, 436,
	436, 436, 436, 436, 436, 436, 437, 437, 435, 435,
	435, 435, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 470, 471, 471, 364, 364, 472, 422, 422, 581,
	581, 581, 582, 582, 463, 463, 473, 473, 473, 473,
	473, 473, 461, 461, 462, 462, 481, 482, 482, 398,
	398, 398, 398, 396, 396, 399, 399, 399, 399, 399,
	397, 397, 474, 474, 474, 474, 387, 387, 475, 475,
	475, 475, 476, 477, 477, 478, 478, 431, 432, 432,
	488, 488, 488, 488, 490, 361, 361, 361, 361, 361,
	539, 538, 538, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 505, 505, 505, 505, 505, 505,
	505, 491, 491, 491, 491, 491, 495, 495, 495, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	496, 496, 501, 501, 502, 502, 502, 497, 498, 503,
	503, 503, 503, 639, 639, 507, 507, 499, 499, 499,
	499, 499, 499, 499, 499, 499, 493, 493, 493, 500,
	500, 500, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 406, 406, 408, 408, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	440, 440, 440, 440, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 557,
	557, 557, 557, 557, 557, 557, 557, 442, 442, 560,
	560, 561, 561, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 568, 568, 569, 569, 571, 571,
	572, 572, 573, 574, 574, 574, 575, 576, 576, 570,
	570, 577, 577, 577, 577, 578, 578, 579, 579, 579,
	579, 579, 580, 580, 580, 580, 580, 452, 452, 453,
	453, 459, 459, 459, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 320,
	320, 319, 271, 271, 271, 271, 271, 271, 374, 374,
	372, 372, 372, 375, 375, 373, 373, 371, 371, 370,
	370, 449, 449, 447, 447, 451, 451, 400, 400, 506,
	506, 506, 506, 506, 506, 506, 506, 401, 401, 401,
	409, 402, 402, 403, 403, 403, 403, 403, 443, 444,
	404, 404, 404, 445, 445, 454, 458, 458, 457, 456,
	456, 455, 455, 433, 433, 434, 434, 381, 381, 640,
	640, 377, 377, 479, 479, 479, 479, 317, 317, 366,
	366, 316, 316, 308, 308, 309, 309, 309, 309, 359,
	359, 460, 460, 508, 508, 509, 509, 510, 510, 511,
	511, 512, 513, 514, 448, 448, 292, 291, 278, 279,
	290, 289, 288, 277, 280, 285, 286, 287, 282, 283,
	299, 298, 297, 248, 253, 304, 305, 305, 307, 307,
	306, 306, 294, 295, 296, 484, 276, 310, 310, 311,
	311, 311, 312, 312, 312, 312, 272, 272, 273, 273,
	300, 300, 301, 302, 302, 293, 293, 293, 263, 263,
	263, 264, 264, 265, 265, 522, 522, 519, 519, 519,
	520, 520, 520, 521, 521, 521, 521, 518, 518, 518,
	518, 518, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 531, 531,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 533, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	536, 536,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 5, 6, 9,
	6, 8, 4, 4, 5, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 6,
	6, 9, 6, 9, 6, 5, 6, 5, 1, 1,
	1, 0, 6, 6, 6, 6, 6, 6, 4, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 4, 4,
	6, 5, 6, 5, 6, 4, 8, 3, 4, 2,
	3, 10, 3, 6, 4, 3, 1, 3, 2, 1,
	1, 3, 1, 3, 2, 4, 3, 2, 3, 2,
	0, 1, 1, 0, 2, 0, 7, 10, 6, 8,
	6, 6, 6, 9, 4, 3, 2, 2, 0, 1,
	3, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 3, 1, 12, 3, 1, 0, 1,
	1, 2, 3, 3, 0, 4, 6, 0, 5, 7,
	6, 8, 8, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 6, 4, 9, 7,
	12, 12, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 6, 6, 6,
	6, 6, 4, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 6, 3,
	8, 3, 4, 3, 3, 4, 3, 4, 4, 4,
	3, 5, 7, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 4, 3, 3,
	3, 3, 3, 6, 4, 4, 4, 3, 5, 3,
	3, 3, 3, 3, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 7, 3, 2, 0, 1, 3, 3,
	1, 0, 1, 2, 2, 1, 6, 5, 1, 2,
	1, 3, 2, 0, 7, 2, 5, 0, 1, 3,
	3, 1, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 3,
	5, 3, 1, 3, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 6,
	4, 7, 7, 7, 9, 10, 5, 2, 6, 4,
	7, 7, 7, 10, 5, 2, 2, 1, 1, 3,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	2, 4, 3, 2, 2, 1, 2, 1, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 1, 1, 5, 3, 2, 6,
	3, 3, 4, 4, 3, 1, 3, 3, 2, 2,
	1, 3, 3, 1, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	1, 1, 1, 2, 2, 2, 1, 3, 3, 3,
	3, 3, 2, 3, 3, 1, 1, 1, 1, 1,
	1, 2, 2, 5, 7, 3, 3, 3, 4, 4,
	6, 5, 5, 5, 3, 4, 4, 3, 4, 4,
	3, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 4, 6, 4, 2, 6, 4, 3, 2,
	3, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 4, 3, 4, 3, 3, 4, 4, 5,
	0, 1, 1, 1, 1, 3, 2, 3, 4, 3,
	4, 3, 5, 3, 4, 4, 3, 4, 5, 3,
	4, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 5, 2, 0, 3, 3, 4, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 3, 4, 5, 4,
	4, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 4, 3, 4, 4, 5, 1, 1, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 2, 3, 2, 5, 4, 2, 0, 1, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 1,
	2, 0, 1, 2, 1, 2, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 6, 5, 8, 3, 6, 6,
	3, 13, 16, 1, 0, 1, 2, 3, 0, 2,
	0, 4, 0, 4, 5, 4, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 2, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 8, 0, 1, 1, 0,
	2, 1, 0, 1, 0, 1, 1, 0, 1, 4,
	1, 0, 3, 7, 7, 1, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 2, 2, 2, 8, 4, 2,
	3, 5, 5, 5, 2, 2, 2, 2, 0, 1,
	1, 3, 4, 11, 12, 9, 5, 3, 1, 5,
	10, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 6, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 2, 2, 4, 7, 3,
	4, 6, 5, 7, 5, 5, 3, 3, 0, 2,
	2, 2, 1, 1, 1, 8, 10, 11, 7, 10,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 3, 0, 1, 8,
	11, 3, 6, 6, 5, 3, 4, 1, 0, 1,
	3, 17, 20, 16, 19, 4, 2, 0, 1, 0,
	1, 0, 1, 3, 2, 4, 2, 3, 1, 0,
	2, 0, 1, 1, 0, 9, 6, 6, 8, 6,
	8, 5, 7, 2, 6, 7, 4, 4, 5, 2,
	4, 6, 6, 8, 6, 7, 8, 9, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 6, 8, 8, 4, 7,
	3, 0, 7, 10, 1, 1, 1, 1, 2, 2,
	3, 0, 3, 0, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 13, 16,
	3, 1, 0, 4, 1, 0, 2, 2, 3, 0,
	1, 1, 4, 4, 5, 1, 0, 3, 0, 3,
	0, 3, 0, 3, 0, 4, 0, 1, 0, 6,
	7, 3, 6, 3, 1, 3, 1, 1, 4, 2,
	1, 3, 1, 3, 4, 8, 11, 5, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 6, 4, 5, 4, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 1, 2,
	6, 7, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 1, 0, 3,
	3, 5, 1, 3, 3, 4, 5, 2, 2, 0,
	2, 2, 1, 1, 1, 0, 1, 0, 2, 2,
	5, 4, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 3, 1, 3, 3, 3, 2,
	0, 4, 2, 5, 3, 2, 0, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 1, 3, 2, 4,
	4, 0, 4, 4, 3, 4, 1, 5, 3, 4,
	5, 5, 1, 5, 1, 3, 2, 0, 3, 0,
	2, 3, 1, 3, 2, 0, 3, 5, 6, 4,
	6, 4, 3, 2, 1, 0, 5, 1, 0, 2,
	2, 2, 1, 1, 0, 1, 1, 1, 1, 0,
	4, 2, 1, 2, 2, 4, 1, 3, 1, 2,
	3, 2, 4, 1, 0, 1, 0, 2, 1, 0,
	2, 5, 7, 2, 1, 2, 4, 3, 5, 0,
	1, 3, 5, 1, 2, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 6,
	6, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	3, 0, 5, 4, 1, 2, 1, 4, 1, 1,
	2, 1, 1, 1, 1, 1, 0, 1, 2, 5,
	1, 4, 2, 5, 1, 4, 3, 3, 0, 1,
	2, 4, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 1, 0, 1, 4, 1,
	3, 3, 3, 5, 2, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 598, -104, -101, -69, -67, -108, -109,
	-90, -110, -103, -130, -135, -117, -118, -119, -131, -137,
	-189, -194, -195, -196, -3, -55, -57, -70, -89, -91,
	-102, -112, -111, -113, -120, -127, -123, -107, -61, -132,
	-136, -146, -190, -191, -192, 32, 31, 100, 80, 154,
	128, 137, 202, 384, 427, 439, 398, 142, 418, 403,
	-140, -141, 457, -56, -68, -134, -133, 73, 129, 412,
	-4, -12, -16, 29, 46, -58, -59, -60, 62, -77,
	-73, -84, -78, -71, -72, -75, -621, 102, -564, -92,
	-95, -126, -625, 161, 220, -114, -115, 366, -121, -122,
	420, -124, -125, 423, 162, -63, -62, 156, -217, -219,
	-138, -139, -193, -147, -148, -149, -150, -151, -152, -153,
	-155, -181, -156, -157, -158, -159, -160, -161, -165, -184,
	-162, -163, -164, -167, -166, -168, -173, -169, -170, -171,
	-172, -174, -175, -177, -178, -179, -180, -182, -183, 462,
	-176, -185, -154, 523, 49, 477, 82, 146, 431, 21,
	-5, -6, -7, -8, -9, -10, -11, -15, -14, -54,
	-74, -76, -79, -80, -81, -88, -82, -83, -563, -93,
	-94, -97, -99, -100, -96, -98, 419, -220, -218, 595,
	538, -18, -23, -24, -19, -20, -22, -25, -21, -26,
	-27, -28, -39, -44, -45, -41, -42, -40, -43, -46,
	-47, -48, -49, -50, -51, -52, -53, -30, -36, -37,
	-31, -32, -33, -34, -35, -38, -17, -29, 559, 568,
	-223, -221, -222, -230, 449, 546, 497, 598, 598, 598,
	598, 598, 598, 598, 598, 598, 598, 598, 598, 598,
	598, 598, 598, 598, 598, 598, 598, 598, 598, -315,
	2, -294, -300, -301, -302, -293, -263, -533, -536, 4,
	-530, -534, 168, 230, 330, 21, 23, 22, 24, 25,
	26, 27, 29, 30, 41, 42, 44, 45, 46, 47,
	48, 49, 53, 55, 59, 60, 61, 62, 63, 64,
	68, 73, 74, 79, 80, 81, 82, 83, 84, 85,
	91, 88, 89, 90, 92, 94, 96, 97, 98, 99,
	100, 101, 103, 104, 105, 107, 108, 109, 117, 118,
	119, 120, 121, 123, 128, 129, 132, 127, 131, 133,
	135, 136, 137, 140, 141, 142, 144, 145, 147, 148,
	149, 151, 152, 154, 155, 156, 159, 157, 505, 158,
	160, 161, 162, 163, 166, 174, 175, 176, 181, 183,
	184, 188, 189, 190, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 203, 207, 209, 210, 211, 212, 213,
	219, 220, 222, 223, 224, 225, 226, 231, 232, 233,
	237, 234, 243, 244, 248, 249, 250, 252, 256, 257,
	258, 259, 260, 261, 263, 265, 264, 267, 270, 271,
	274, 278, 279, 283, 284, 280, 285, 286, 288, 289,
	292, 290, 293, 294, 291, 295, 297, 298, 299, 300,
	301, 302, 303, 304, 305, 306, 307, 308, 296, 311,
	309, 313, 314, 315, 328, 324, 325, 319, 320, 316,
	321, 317, 318, 322, 323, 327, 332, 333, 336, 217,
	338, 339, 342, 360, 346, 347, 348, 351, 352, 355,
	358, 359, 361, 362, 363, 364, 365, 366, 367, 368,
	369, 371, 372, 374, 375, 376, 378, 379, 380, 382,
	384, 385, 387, 388, 390, 391, 392, 393, 394, 395,
	396, 398, 400, 399, 401, 403, 405, 406, 407, 412,
	418, 414, 415, 416, 417, 419, 420, 421, 422, 423,
	425, 426, 427, 429, 430, 431, 432, 433, 435, 437,
	438, 442, 443, 459, 460, 479, 439, 440, 441, 444,
	445, 446, 447, 448, 452, 450, 451, 453, 454, 455,
	457, 458, 461, 462, 464, 465, 466, 467, 468, 469,
	470, 473, 475, 476, 477, 496, 478, 480, 484, 485,
	486, 487, 481, 482, 495, 489, 490, 492, 493, 498,
	499, 500, 501, 502, 503, 504, 506, 508, 516, 517,
	518, 520, 523, 524, 525, 526, 514, 528, 529, 532,
	533, 534, 537, 535, 536, 538, 540, 543, 544, 545,
	551, 550, 552, 555, 560, 561, 563, 564, 565, 36,
	50, 51, 54, 56, 58, 69, 70, 71, 75, 124,
	125, 153, 164, 165, 177, 191, 192, 204, 206, 214,
	215, 216, 238, 239, 241, 246, 268, 335, 337, 353,
	357, 373, 377, 381, 383, 397, 434, 471, 483, 488,
	509, 510, 511, 512, 519, 521, 546, 547, 548, 553,
	562, -315, 2, -294, 344, -287, 2, -263, -263, 384,
	28, 2, 28, 372, 451, 500, 502, 2, -590, -360,
	2, 28, -266, -263, 102, 202, 449, -287, 2, -590,
	-360, 25, 2, -263, 2, 358, 22, 27, 66, 77,
	98, 140, 163, 185, 188, -624, 360, 391, 437, 453,
	495, 506, 520, 2, 550, 289, 450, 497, 230, 120,
	525, 444, -602, 442, 443, 358, 389, 429, 205, 539,
	-267, 2, 439, -263, 289, 2, 598, 94, 279, 74,
	434, 454, -143, 517, -144, -145, 2, -142, 509, -517,
	444, 429, 311, -263, 598, 598, 598, 28, -276, -263,
	497, 230, 444, 120, 493, 598, 2, 497, 363, 550,
	450, 120, 394, 230, 525, 188, 140, 27, 444, -602,
	573, 574, 289, 126, -588, 2, -583, 4, -534, -530,
	-309, -308, 497, 503, 120, -302, -293, 588, -301, 598,
	598, 598, 2, 249, 250, 393, 392, 454, 455, 598,
	598, 598, 598, 442, 2, 163, 22, 27, 66, 93,
	98, 126, 185, 188, 349, -622, 360, 391, 453, 495,
	499, 506, 520, -601, 478, 68, 417, 444, -600, -602,
	289, 525, 140, -410, 120, 279, 200, 533, 502, 500,
	531, 132, 237, 536, 535, 598, 598, -105, 2, 595,
	32, 31, -104, -108, 142, 457, -212, 497, 242, 2,
	-263, 598, 598, 2, 249, 250, 442, 443, 598, 598,
	186, -583, 2, 598, 598, 2, 249, 250, 442, 443,
	242, 2, 68, 446, 598, 598, 598, 598, 598, 598,
	598, 598, 598, 598, 598, 598, 598, 598, 598, 598,
	598, 598, 598, 598, 598, 598, 598, 598, 598, 598,
	598, 598, 598, 598, 598, 598, 598, 598, 598, 2,
	-187, 454, 478, 211, 47, 46, 74, 28, 390, 79,
	364, 121, 126, 148, 526, 203, 230, 231, 257, 93,
	94, -412, 44, 250, 68, 249, 443, -607, 442, -464,
	498, 445, 451, 492, 261, 439, 517, 102, 540, 430,
	565, 394, 395, 490, 407, 280, 157, 187, 4, 120,
	311, 429, 456, 509, 279, 438, 367, 84, 598, -633,
	2, 497, -635, 2, 517, 517, 2, -635, 2, -635,
	2, -635, 2, -636, 517, 562, 598, 598, 598, 598,
	598, 598, 598, 598, 598, 598, 598, 598, 598, 598,
	598, 598, 598, 598, -218, -220, -219, 598, 598, 598,
	598, 598, 598, 598, -187, 454, 2, 74, 28, -353,
	-355, 530, 240, 150, 350, -217, -219, 2, -563, -515,
	2, -438, -537, -440, 586, 587, 579, 494, 67, -319,
	329, 566, -452, 126, 531, 344, -536, -441, -454, 153,
	360, 434, -375, 8, 9, 5, 6, 7, -272, -442,
	-448, 522, 167, 334, -312, 599, 10, 595, -560, -219,
	-453, 37, 206, 65, -519, -311, -273, -491, 241, -310,
	-293, -557, -558, 4, -530, -531, -520, -494, -502, -498,
	-499, -505, -263, -533, 77, 111, 112, 110, 115, 114,
	282, 281, 116, 113, 456, 539, 66, 36, 214, 215,
	246, 335, 216, 75, -559, 141, -532, 238, 239, 471,
	51, 397, 177, 125, 124, 337, 56, 54, 547, -503,
	122, 509, 510, 511, 512, 191, 192, 58, 164, 165,
	357, 381, 488, 519, 521, 204, 268, 43, 106, 187,
	236, 218, 245, 247, 251, 269, 272, 312, 326, 331,
	354, 356, 428, 463, -639, 548, 483, 69, 70, -565,
	399, -566, -287, -565, 598, 598, 600, 598, -345, -347,
	-348, 2, 28, 138, 595, 2, -469, 2, -470, -474,
	-219, 262, -473, 595, -471, 593, -294, 345, -561, 435,
	-557, -558, -272, -293, -311, 4, -530, -532, 597, -349,
	595, 120, 444, 497, 78, 230, 163, -405, 595, -263,
	28, 344, 513, 600, -346, 388, -450, 595, 344, 186,
	347, 60, 293, 2, 2, 2, 2, 2, 214, -263,
	497, 119, 2, 260, 2, 2, 2, 2, 2, 2,
	2, -368, 214, 2, -294, 550, -368, 214, 2, -368,
	214, 2, -411, 2, 87, -277, 214, 2, -263, -303,
	214, 2, -298, -300, -307, 214, 2, -305, -263, -528,
	214, 2, -527, -522, 10, -521, 5, 4, -530, -534,
	-531, -533, 77, -438, 2, -132, 2, 60, -263, 550,
	2, 2, 459, 2, 595, -143, 71, 517, 43, 454,
	-425, 2, -426, -259, -260, -261, -481, -262, 248, 387,
	396, 569, 130, 329, 565, -616, 186, 578, 513, -515,
	-515, -515, -376, 597, 2, 2, 2, 2, 2, 2,
	-474, 214, -294, 2, -291, -518, 4, -530, -534, -531,
	-535, 28, 31, 32, 33, 35, 37, 38, 39, 40,
	57, 65, 66, 72, 76, 78, 87, 93, 102, 110,
	111, 113, 112, 114, 115, 116, 126, 130, 134, 138,
	139, 143, 146, 150, 167, 169, 182, 185, 186, 202,
	205, 208, 221, 235, 240, 242, 262, 266, 273, 281,
	282, 329, 334, 340, 344, 345, 349, 350, 370, 386,
	402, 424, 449, 456, 474, 491, 497, 507, 513, 515,
	522, 530, 531, 539, 541, 549, 554, 556, 557, 558,
	559, -536, 2, -474, 214, 2, -297, 214, -474, -300,
	2, -277, 2, -290, -518, 2, -316, 214, -294, -296,
	-300, -298, 2, 2, 2, 2, -305, 2, -527, 214,
	2, 28, 28, 550, 388, 242, 513, 600, -366, -308,
	-309, -514, 8, -359, -263, 597, -438, 2, -132, -116,
	2, 182, -438, 214, 2, -132, 214, 2, -438, 214,
	2, -132, 214, 2, -604, 2, -527, 214, -263, 2,
	293, 2, 2, 520, 2, 98, 497, 119, 2, 416,
	-623, 437, 524, 2, 2, 2, 2, 2, 2, 2,
	497, -282, 2, -263, 182, 481, -305, 214, -306, 2,
	450, -634, 399, -527, 214, 2, 550, -298, 214, 2,
	-298, 230, 244, -277, 214, 2, 502, 500, 502, 500,
	186, 2, 242, 2, 242, 2, -475, 2, -476, -470,
	-477, 593, 345, -485, 2, -484, -521, 546, -105, 595,
	-105, 595, 454, 595, -527, -294, -294, -438, 2, -132,
	-116, 2, -438, 2, -132, 2, -129, -527, -128, 595,
	186, -438, 2, -132, -116, 2, -438, 2, -132, 2,
	-212, 182, 2, 120, 497, -187, 2, 182, 541, 2,
	8, 2, 221, -527, 445, 395, 174, 2, 459, 2,
	460, 74, -412, 565, 74, 186, 2, 186, 2, -395,
	2, 559, 388, 186, 2, 2, -587, 2, 344, 186,
	2, 186, 2, 186, 2, 186, 2, 186, 2, -186,
	455, 518, 496, 392, 250, 2, -132, 556, -116, 250,
	249, -438, 556, 2, -608, 182, 443, -438, 2, 516,
	259, 158, 186, -395, 2, 186, 2, 186, 2, 5,
	2, 393, 479, 2, 248, 387, 479, 2, -294, 497,
	550, 450, 120, 28, 2, 442, 2, 2, 88, 89,
	186, 2, 186, 2, 201, 186, 2, 186, 497, 565,
	2, -387, -474, -424, -425, -424, 513, -353, -355, -187,
	459, 2, -224, -385, -226, 182, -415, -416, -227, 273,
	169, 340, -228, -394, 28, 138, -394, -394, 60, 596,
	596, 11, 12, 76, 41, 586, 587, 588, 589, 180,
	590, 591, 584, 585, 583, 576, 577, 581, 254, 255,
	95, 580, 578, 86, 287, 436, 170, 171, 172, 173,
	413, 228, 34, 229, 14, 15, 16, -319, 33, 349,
	272, 566, 218, 463, 579, 17, 18, 19, 245, 247,
	331, 50, 221, -271, 360, -318, 494, 67, -438, -438,
	-438, -438, -438, -438, -438, -438, 356, 595, -381, -433,
	593, -219, 595, 595, 595, 595, -514, -219, -438, -452,
	596, -373, 595, -219, -452, -447, 595, 434, 593, 595,
	-455, -438, 5, 5, 5, 595, 597, -568, 560, 182,
	595, 595, 595, 595, 595, 595, 595, 595, 595, 595,
	595, 595, 595, 595, 595, 595, 383, -496, 595, -495,
	595, -495, -495, 551, -493, 595, 568, 561, 595, -493,
	595, 595, 595, 595, 595, 595, 595, 595, 595, 595,
	595, 595, 595, 551, 600, -565, -349, 595, -377, -479,
	-438, 588, -377, -377, 344, -370, -438, 106, -398, 251,
	312, 187, 269, 428, 236, -435, 599, -435, -463, 568,
	-219, -471, -293, -219, -473, 595, -469, -463, -106, -514,
	-89, -102, -111, -132, -146, -191, -192, 588, -294, 595,
	186, 595, 597, -518, 186, -359, -277, -304, -263, -294,
	-310, -311, -316, 2, 137, -370, -583, 525, 444, 28,
	450, -359, -266, 38, -449, -488, -489, -539, 599, -538,
	-491, -501, -497, -500, 373, 377, -520, 54, 547, -503,
	241, 4, -530, -532, 238, 239, 471, 51, 397, 177,
	125, 124, 337, 56, 509, 510, 511, 512, 191, 192,
	58, 548, 483, 69, 70, -583, 525, 444, 28, 450,
	-359, 182, -525, 2, -524, -523, 116, 456, -521, 5,
	2, 153, 2, 2, 2, -263, -240, 600, 64, 421,
	153, -368, 214, -240, 153, -240, 153, -317, 214, -316,
	-240, 153, -240, 600, 153, -240, 600, 153, 597, 600,
	153, -525, 2, -411, -517, -370, 38, -425, 2, 126,
	-523, -637, 600, 271, -322, 286, 328, 210, 345, 563,
	338, 130, -526, 5, 4, -448, -460, 126, 279, 241,
	-508, -510, 8, -509, 9, -511, 586, 587, -516, -515,
	109, 597, -518, -237, 414, 457, 359, -236, 24, 29,
	142, 232, 315, 544, 159, -335, 233, -332, 363, 153,
	475, 534, -597, -598, 441, 504, 505, 90, 338, 457,
	359, 414, 153, -391, -393, 38, 118, 315, 358, 61,
	225, 291, 292, 477, 553, 153, 457, 359, 414, 359,
	457, 24, 142, -254, -249, -598, 99, 414, 489, 386,
	-598, -239, 475, 534, -597, -598, 441, 414, -238, -337,
	-332, 363, 153, 599, 24, 142, 414, 457, 359, -619,
	-620, 29, 414, 359, -591, -284, -562, 221, 559, 153,
	-284, -284, -474, 214, -612, 182, 2, -605, -128, 263,
	5, 10, -527, -128, -366, 600, 600, -518, 588, 443,
	442, 153, 153, 153, 153, 182, 329, 2, 2, 2,
	2, 2, 188, -600, -624, 2, 2, -294, 214, -351,
	344, -586, -367, 497, -294, 182, 329, 43, -297, 214,
	2, -300, 550, -591, 329, -299, 214, -294, 38, 595,
	329, 2, -411, 2, 230, -562, 329, -475, -313, -294,
	-470, -313, 457, -287, 38, -435, -294, 596, 600, -485,
	-485, -527, -200, 559, 186, 102, 595, 595, -212, -482,
	600, -481, 221, -528, -129, -527, 417, -527, -586, -277,
	2, -294, 2, 497, 252, -527, -200, 221, -527, -527,
	-527, -517, 28, 460, 2, -186, 455, 518, 89, 460,
	2, -294, 497, 120, 230, 80, -612, 182, 2, -263,
	-589, 182, -584, 429, 444, 525, -583, -294, 120, -294,
	120, -294, 120, -294, -294, 2, 2, 2, 2, 2,
	85, 2, -132, -438, 2, 85, 2, 46, -608, 182,
	2, 516, 2, 516, 2, -263, -263, -263, 478, 271,
	-294, -294, -294, -295, -300, 498, 443, -438, 2, -626,
	2, 186, 182, 2, 497, 230, 497, 230, 120, 186,
	74, 120, 28, 497, 440, -240, 600, -267, -224, -385,
	-517, -386, -385, -225, -224, -227, 182, 396, 535, 315,
	461, 256, -416, -415, 28, -438, -420, 176, 314, -438,
	-418, -440, 586, 587, -509, -511, -369, 338, -218, -218,
	-218, -356, -465, -438, 386, 230, -490, -488, -488, -292,
	-518, 509, -438, -438, -438, -438, -438, -438, -438, -438,
	-438, -438, -438, -438, -438, -438, -438, -438, -438, -438,
	-438, -438, -438, -438, -438, -438, -438, -438, -438, -438,
	-438, -438, -438, -438, -438, -438, -438, -438, 272, 218,
	463, 50, 221, -438, 513, -438, -438, -438, -438, 309,
	329, 334, 522, 167, 532, 138, 338, -640, 491, 40,
	-445, -219, -374, 595, -459, 35, 474, 28, -452, 595,
	2, -433, -438, -434, -320, -318, -263, 586, 587, 588,
	589, 590, 591, 576, 577, 578, 14, 15, 16, 581,
	585, 583, 584, 180, 95, 580, 287, 436, 86, 170,
	171, 172, 173, 254, 255, 17, 18, 19, 34, 579,
	-371, -370, -370, 596, 549, 28, 138, 588, 2, 596,
	600, 38, 596, -438, -371, -451, -447, -370, -458, -457,
	556, -406, -407, 564, 296, 123, 212, 294, -408, 448,
	-512, 8, -518, 588, -569, 175, 205, 595, 596, 2,
	596, 2, 596, -438, 2, 596, -438, 2, 596, -438,
	2, 596, -438, 2, 596, 2, 596, 2, -438, -438,
	-438, -438, -438, -438, -438, -370, 8, -512, -512, 509,
	509, -512, -512, -512, -504, 373, 374, 375, 376, 274,
	275, 276, 277, 377, 378, 379, 380, 301, 302, 303,
	304, 297, 298, 299, 300, 305, 306, 307, 308, 196,
	197, 198, 199, 192, 193, 194, 195, -504, -400, 2,
	-506, -370, 4, 564, 296, 123, 212, 294, 448, 5,
	-400, 2, -401, 2, -438, -370, -402, -439, -440, 586,
	587, 579, -319, -452, -403, 2, -438, -371, -438, 57,
	266, 515, -404, -438, 186, -370, -370, 2, -370, 2,
	-566, 38, -370, -362, 600, 186, 38, 4, -362, -362,
	595, 596, 600, -399, 209, 290, 285, 244, -399, -469,
	-398, 251, -396, 354, -396, -396, -463, -278, 593, 601,
	-518, -463, -462, -461, 38, -287, 351, -463, -463, 597,
	596, -462, 594, -581, 595, 598, 598, 598, 598, 598,
	-294, 595, -370, -518, 597, 480, 2, 596, 245, 245,
	245, 245, 245, 435, 596, 513, -585, -303, -307, 498,
	2, 559, -104, 346, 596, 600, -361, 37, 593, 597,
	-512, 2, 2, -507, 551, 595, 595, -407, 595, 186,
	-585, -307, 498, 2, -360, 600, 513, -263, 2, -294,
	-368, -240, 153, -368, -368, -240, 600, 153, -277, -298,
	-303, -305, -307, -263, -527, -528, -240, -299, -616, 596,
	517, -426, -321, 396, 473, 415, 452, 493, 8, 9,
	8, 9, 600, -518, 600, -617, 93, 513, 78, 444,
	-256, 280, 513, -429, 214, 78, -540, -280, 93, -541,
	-263, 72, 531, 386, 185, 151, -617, 93, 386, -617,
	93, 2, 232, 93, 457, 478, 28, 60, -474, 41,
	41, 28, -615, 327, 267, 555, 186, 565, 497, 230,
	444, 513, 513, -474, -393, -488, 118, 291, 292, 60,
	-513, -508, 586, 587, -513, 60, -513, -513, -513, 559,
	-297, -474, 444, 513, 513, 513, -252, -249, 369, 405,
	405, 513, 513, -638, 578, 405, 600, 41, 41, 28,
	-615, 327, 267, 186, 513, -316, -278, 545, 42, 545,
	42, 545, 513, 42, 444, 513, 600, 42, 513, 513,
	-13, 457, 572, 419, -592, -268, 105, 321, 284, 322,
	97, 318, 96, 317, 103, 319, 104, 320, 552, 332,
	63, 316, 295, 323, -269, -270, 365, 543, 120, -527,
	-13, -13, 457, 359, 414, 153, -613, 221, 28, -602,
	221, -482, 221, -482, -308, -263, 597, -132, -438, -438,
	-132, -438, -132, 46, 153, 2, -634, 260, 595, -325,
	329, 186, -359, -483, 242, 600, -367, -583, 153, -524,
	-392, -391, 329, -299, 214, 2, 153, -349, 329, 147,
	595, 394, 2, 153, -279, 214, -264, -263, -411, -243,
	501, 153, -389, 541, -421, -132, 595, 126, 38, -421,
	-378, -379, -480, -380, -280, 595, -287, -435, -105, -484,
	596, 596, 596, -199, 348, -198, -263, 5, -212, 541,
	-324, -430, -429, -544, -545, -540, 272, 230, 531, 244,
	168, -350, -281, -280, 119, -206, 559, -128, -129, 596,
	-482, 221, 481, -200, -200, -482, -482, -294, 182, -527,
	-200, -200, -200, 2, 2, 2, 2, -395, -294, -277,
	-316, -294, 28, 597, -359, -359, -307, -303, -395, -277,
	-395, -277, -395, -277, -132, -438, 2, 454, 182, 182,
	597, -395, -352, 424, 2, 394, 120, 497, 363, 230,
	-294, -316, -294, -316, -277, 120, -277, 121, -294, -474,
	-386, -225, 345, 256, 461, -418, -419, -440, 434, 435,
	-419, 434, 435, 8, 9, 8, 9, -229, 465, 333,
	-368, 600, -234, 39, 134, 256, -294, 565, 149, -438,
	-438, 513, -640, 491, -445, 149, -438, 309, 334, 522,
	167, 532, 138, 338, 186, 595, -439, -439, 596, -372,
	-438, -438, 594, 603, 596, 597, 596, -355, 600, -353,
	-438, -370, -370, 596, 597, -370, -359, 594, 594, 600,
	596, -456, -457, 143, -438, 513, 513, 513, 513, 595,
	596, 597, -574, 355, 595, 595, -438, 596, 596, 596,
	596, 38, 600, 600, 600, 596, 600, 600, 600, 596,
	596, 596, 600, 596, 565, 565, 596, 596, 596, 596,
	600, 596, 600, 596, 186, 596, 596, -409, 370, 596,
	11, 12, 586, 587, 588, 589, 180, 590, 591, 584,
	585, 583, 576, 577, 578, 86, 287, 436, 14, 15,
	16, -319, 245, 221, -439, -439, -439, -439, 596, -443,
	-444, 186, 182, 38, -404, -404, -404, 596, 186, -370,
	596, 596, 595, -567, 289, 329, 596, -432, -431, 557,
	-479, -363, 2, -469, -289, -518, -432, -432, -370, -438,
	251, 251, -397, 541, 344, -399, -469, -462, -514, -437,
	-436, 184, 39, 134, 324, 325, 217, -462, -287, -349,
	-462, -462, -518, -463, -463, -461, 596, -582, -514, 596,
	-364, -472, -561, -355, 597, -518, -209, -562, -188, 5,
	334, -188, -188, -188, -188, -359, 513, 513, 221, 25,
	371, -488, 593, 594, 8, -518, 595, -512, -512, -512,
	-359, 186, 186, 221, 186, -524, -524, 2, -240, -368,
	-240, -240, -316, -317, -240, -240, -240, -390, 559, -515,
	-425, 529, 83, 396, 509, -515, -236, 414, -280, -280,
	-294, -304, 200, 406, -524, 329, -429, 214, -242, 329,
	-488, -288, -263, 595, -413, 561, 256, 256, 541, -280,
	-288, 256, 214, -280, 214, -288, 2, -288, -593, 396,
	339, -438, 60, -333, 278, 394, 330, -237, 414, 457,
	359, -132, -132, -132, -132, -132, 595, -616, 541, 137,
	-294, -316, -294, -304, -524, -299, 457, 359, 414, 326,
	-310, -513, -513, -391, 457, 359, 414, -304, -524, -297,
	-524, 422, 126, -248, 214, -263, -248, 214, 444, -277,
	405, 565, 45, -638, -238, -132, -132, -132, -132, -132,
	595, -278, -239, 414, 5, 214, -280, 5, -280, 214,
	5, -263, -280, -304, -524, -620, 24, 142, -280, -304,
	-524, -144, 28, -187, -268, -527, 334, 537, -277, -591,
	-284, 444, 513, 513, -474, -609, -610, 202, 427, 444,
	430, -359, -128, -203, 559, -128, -197, 226, 588, -588,
	-263, 550, -263, -323, -326, -324, -280, -215, -216, 561,
	559, 153, -314, -294, 593, -200, -527, -294, -483, -305,
	-306, 153, -349, 329, -527, 38, 153, 595, 2, 2,
	-298, 344, 329, -279, 214, -244, 144, -638, -277, -432,
	-363, -388, -423, 424, 344, -350, 546, -287, -388, -365,
	600, 186, 578, 597, -350, -478, 588, -105, -105, -200,
	600, 595, 578, 578, 595, -527, -527, 596, 600, -242,
	-294, -279, 230, 230, -286, -264, 596, 600, 597, 595,
	-208, 348, -207, 145, 258, 243, 467, 468, 469, 470,
	136, 466, -482, -206, -129, 186, 186, -64, 559, 497,
	-200, 599, 430, -263, -395, -395, -395, 454, 454, -263,
	-359, -290, -277, -294, -291, -316, 182, 182, -277, 535,
	-419, 345, 283, -465, -235, 567, -294, 599, -438, -438,
	149, 149, -438, -439, -439, -438, 149, 186, 595, -438,
	-449, 33, 33, 596, 600, -434, -438, -318, 596, 549,
	-355, -355, 596, 588, -518, 599, 596, -447, 146, -438,
	507, 296, 212, 294, -408, 294, -408, -408, -512, 5,
	-518, 588, -575, -283, 595, -263, 557, -354, 350, 596,
	-490, -488, -438, -438, -438, -438, -438, -512, -493, -493,
	-508, -508, -438, -443, -438, -490, -488, -439, -439, -439,
	-439, -439, -439, -439, -439, -439, -439, -439, -439, -439,
	-439, -439, -439, -439, -439, -439, -439, 138, 329, 338,
	-439, -444, -443, -438, -438, -488, 596, 596, 596, -370,
	-104, 595, 289, -382, 205, -438, -482, 600, -382, -382,
	596, -469, -469, 595, -438, 251, 594, 600, 602, 578,
	-349, 597, -461, -462, 594, 596, 600, 596, 600, -422,
	38, 596, -518, -432, -211, -210, 135, 53, 107, 133,
	334, -359, -359, 444, 347, 5, 8, 593, 594, 597,
	-512, 596, 596, 596, -359, -359, 444, -359, -240, -240,
	119, 315, -438, 513, 513, 60, 221, 153, 329, 543,
	-546, -541, 151, -438, 595, 230, 595, 595, 2, -231,
	-232, -233, 142, 457, 24, -618, 2, 541, 153, -240,
	153, -240, 563, -333, 595, 595, 513, 444, -256, 513,
	559, -370, -438, -201, 126, -517, -598, 599, -598, 599,
	444, 513, 513, 444, 513, 513, 329, 153, 559, 166,
	166, 565, -248, 559, -370, 513, -492, 48, 26, 329,
	-298, -240, 153, 513, 513, 525, 457, -527, 334, -13,
	-304, -524, -299, 457, 359, 414, -590, -360, -590, 202,
	-307, -613, -482, -205, 348, -204, 145, 426, 136, 258,
	223, -482, -203, 186, 242, 559, -299, 2, 596, 596,
	600, -547, 38, 342, 342, 595, -294, -85, 559, -481,
	-514, -594, 559, 43, -297, 38, 153, -591, -132, -299,
	-486, -487, 5, 38, -294, 153, 344, 329, -245, 265,
	-638, -522, -562, -355, -388, -377, 330, 91, 596, -432,
	-379, -363, -438, 2, 596, -198, -199, -527, -527, -527,
	-200, -212, -212, -430, -327, 595, -279, -264, 595, -212,
	-281, 2, -528, 600, 595, 578, 578, 578, -206, -482,
	-128, -132, 348, -294, 588, -395, -339, -338, 363, 338,
	-339, 434, 434, 345, 176, 261, -234, -278, -438, -438,
	149, 33, 33, -438, -438, -449, 596, -438, -438, -370,
	594, 5, -438, 596, 596, 8, -438, 596, 597, -576,
	-263, -438, 596, 60, 596, 596, 600, 600, 596, 596,
	596, 596, 596, 596, 596, -444, 186, 138, 338, 595,
	596, 596, -104, -446, 208, 60, -469, -446, -446, -397,
	-359, -469, -436, -278, 593, -518, -514, -472, 595, 597,
	-210, 578, -527, -527, 559, -307, 594, 2, 593, -518,
	596, -307, 119, -280, -280, 497, 434, -248, 386, -429,
	153, -548, 93, -550, 76, 168, 102, 329, 334, 531,
	386, 72, 126, 344, 402, -628, -629, -630, 38, 570,
	571, 596, -357, -466, -561, 595, -263, -357, -359, 329,
	486, 126, 344, 329, 126, 344, 554, 119, 2, 525,
	79, -280, -288, -359, -359, -294, -304, -524, 160, 596,
	600, 578, 2, 588, 588, -304, -524, -299, -304, -524,
	-297, 153, -248, 361, 166, 160, 596, -278, 5, 5,
	153, -275, 76, -280, 5, -280, -298, 119, 444, 513,
	513, 344, 344, 347, -609, -610, -203, 600, 595, 578,
	578, -203, -528, -128, 2, -349, -340, 232, -280, -545,
	-542, -543, 386, -549, -551, 168, 386, -132, 2, -214,
	-213, -263, 5, 595, -325, 348, 594, -596, 348, -595,
	117, 136, -524, -392, -132, -299, -349, 596, 600, 147,
	-414, 541, -278, -294, 153, -246, 264, -638, -522, -243,
	-417, -415, 139, 595, 344, -132, -355, 578, 596, 596,
	119, 119, 224, 152, -357, 595, 595, -359, 119, 596,
	-207, -208, -527, -128, -527, -206, -482, -65, -66, 230,
	93, 368, -291, 497, 230, 595, 595, -234, -438, -438,
	-438, 596, -355, -518, 588, -570, 363, 596, -465, -438,
	-438, -439, 186, 595, -449, 596, -571, 558, -438, -383,
	-384, -438, 432, 108, 206, -571, -571, 596, -514, 2,
	-527, 2, 513, 593, 2, 186, 221, 38, 405, -429,
	-288, -292, -285, -263, 168, 214, 334, 554, -413, 256,
	595, -439, 535, -294, 595, 2, 213, 213, 30, 60,
	-631, 130, 235, 596, 600, -467, -274, -263, -438, -467,
	596, 596, 334, 535, 334, 554, -438, 535, -488, 595,
	-240, -240, 596, 596, -438, 513, -517, 100, -515, 2,
	-598, -248, -277, -438, 513, 5, -240, -292, -240, -240,
	-275, 525, -304, -524, -299, -614, 498, 451, 526, 445,
	189, 433, -614, 182, -204, -205, -527, -128, -203, 38,
	-330, 234, 2, -547, 256, -285, 256, -627, 559, 596,
	600, 578, 578, -323, -215, -86, -87, 514, -481, 600,
	595, 578, -349, 38, 5, 595, 595, -263, 344, 595,
	-278, -258, 92, -638, -522, -244, -388, 330, -359, 93,
	-417, -445, -200, 595, 595, -328, 81, 94, 127, 213,
	190, 231, 478, 484, 28, -328, 596, -357, -357, 596,
	595, -200, 596, 600, 28, 595, 28, 595, -294, -316,
	-370, -370, 596, -355, 60, 600, 596, 596, -439, -449,
	596, -572, -573, -283, 600, 595, 595, 458, 594, -359,
	2, -359, -248, 386, -263, -550, -285, 329, 541, -438,
	-439, -265, 595, -438, 38, 126, 235, 131, 219, -428,
	-632, 101, 487, 222, -466, -234, 596, -427, 541, 402,
	-439, -275, -357, 595, 595, 595, 578, 186, 595, -492,
	-240, -298, 513, 2, 2, 186, -590, 596, -603, 400,
	-132, -334, -335, 221, 595, -329, 344, 119, 315, -213,
	-515, -515, 596, 38, -87, 9, -595, -596, -438, 38,
	-132, -486, -357, -294, -357, 344, -250, -249, 273, -522,
	-245, 596, -288, -388, -528, -528, -427, 596, 596, -528,
	-66, -359, -359, 596, 596, -577, 394, 435, 207, -370,
	-356, 596, 600, 38, -384, 2, 2, 2, 405, 153,
	209, 596, -552, 288, -263, 596, 38, 131, 219, -330,
	595, -235, -467, -330, 209, -294, -599, 541, 596, -342,
	-341, -338, -344, -343, -338, -370, -515, 100, 361, -370,
	-275, -359, -359, 344, -606, 187, -605, 5, 10, -215,
	361, -358, -468, -280, 82, 119, -340, -132, 596, -132,
	596, 596, -414, 596, -294, -247, -529, 405, 407, -638,
	-246, -432, 596, 596, -428, -427, -336, -332, 596, 596,
	596, 596, -578, -579, 50, 528, 109, -438, -578, -578,
	-573, -575, 168, 559, -553, -556, -555, 575, 464, 187,
	362, 596, 486, 553, -336, -359, 559, -349, -438, -427,
	596, 600, 546, 596, 600, 546, 596, 186, 596, -240,
	-611, 559, -240, -614, -202, 559, 46, -329, -294, 596,
	600, 385, 132, 142, -330, -627, -427, 595, -428, 595,
	-255, -254, -638, -508, -258, 139, -200, -200, -330, -428,
	-216, 559, -200, -580, 151, -579, 382, 181, 434, 382,
	181, -580, -580, -285, 55, -555, 575, -556, 575, 535,
	132, -631, 596, 55, -552, -330, -341, 221, -343, 186,
	361, 202, 186, 442, -605, 30, -257, -256, 595, -468,
	435, 435, 2, -334, -329, -428, -357, -330, -357, -251,
	-252, -253, -359, -250, 330, 535, -336, -330, -432, 109,
	205, 508, 315, 33, 578, -554, 315, 421, 64, 457,
	-554, -432, 578, -553, 595, 595, 347, -359, 348, -359,
	2, -215, -330, 596, -336, 596, -247, 457, -216, -336,
	434, 352, -579, -438, 23, 334, 126, -438, -631, -370,
	-370, -240, -199, 595, 596, -329, -336, -427, -216, -428,
	-255, -378, -432, -216, 596, 596, -199, -241, 64, 421,
	-257, -216, -428, -432, -330, -251, -432, -432, -331, -332,
	513, 596, -432, -330, -336, 595, -336, -216, -370, -216,
	-432, 596, -432, -331,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 549, 550, 552, 553, 554, 556,
	557, 559, 561, 563, 564, 565, 567, 568, 570, 571,
	572, 573, 574, 576, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	645, 647, 0, 1395, 1397, 1399, 1401, 0, 796, 0,
	36, 37, 39, 0, -2, 333, 335, 337, 0, 365,
	367, 368, 370, 372, 373, 374, 376, -2, 0, 482,
	483, 485, 487, -2, 0, 1002, 1004, 0, 634, 636,
	0, 1007, 1009, 0, 0, 656, 657, 0, 1506, -2,
	650, 652, 654, 721, 723, 725, 727, 729, 731, 733,
	735, 737, 739, 740, 742, 744, 746, 748, 750, 751,
	753, 755, 757, 758, 760, 761, 763, 765, 767, 769,
	771, 773, 775, 777, 779, 781, 783, 785, 787, -2,
	790, 791, 792, -2, -2, 0, -2, -2, -2, 1413,
	41, 43, 45, 47, 49, 51, 53, 55, 57, 59,
	426, 428, 430, 432, 434, 437, 439, 441, 1564, 489,
	491, 493, 495, 497, 499, 501, 0, -2, 1578, 0,
	0, 61, 62, 63, 64, 65, 66, 67, 68, 69,
	70, 71, 107, 108, 109, 110, 111, 112, 113, 114,
	75, 76, 77, 79, 80, 81, 82, 86, 87, 88,
	89, 90, 91, 92, 93, 94, 105, 73, 0, 0,
	1537, 1539, 1541, 1543, -2, 0, 0, 5, 9, 11,
	13, 15, 17, 19, 21, 23, 25, 27, 29, 551,
	555, 558, 560, 562, 566, 569, 575, 577, 579, 534,
	535, 538, 2272, 2290, 2291, 2292, 2295, 2296, 2297, 2298,
	2299, 2300, 2748, 2830, 2831, 2322, 2323, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
	2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346,
	2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356,
	2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366,
	2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436,
	2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446,
	2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456,
	2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466,
	2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476,
	2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486,
	2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496,
	2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516,
	2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536,
	2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546,
	2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556,
	2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566,
	2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576,
	2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586,
	2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596,
	2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606,
	2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616,
	2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626,
	2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636,
	2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646,
	2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656,
	2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666,
	2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676,
	2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686,
	2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696,
	2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706,
	2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716,
	2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726,
	2727, 536, 537, 1184, 0, 603, 601, 2257, 604, 2547,
	606, 608, 476, 477, 478, 479, 480, 481, 0, 627,
	617, 1576, 628, 630, 631, 632, 633, 598, 596, 0,
	627, 2326, 625, 1393, 1394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 488, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 405, 1242, 1243, 1244,
	1378, 1379, 2593, 1420, 0, 234, 646, -2, -2, -2,
	2713, -2, 678, -2, 690, 693, 694, 685, 2717, 0,
	2596, 2580, -2, 697, 1396, 1398, 1400, 794, 795, 2276,
	0, 0, 0, 0, 0, 38, 40, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 244, -2, -2, -2,
	-2, 0, 0, 2641, 2378, 2225, 2292, 2228, 2223, 334,
	336, 338, 339, 0, 0, 0, 0, 0, 0, 366,
	369, 371, 375, -2, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 1063, 1055, 1056,
	1300, 0, 0, 0, -2, 484, 486, 539, 540, 0,
	1565, 1565, 547, 548, -2, 0, 0, 0, 0, 304,
	292, 1003, 1005, 1006, 0, 0, 0, 0, 635, 637,
	0, 0, 273, 1008, 1010, 1011, 0, 0, 0, 0,
	0, 306, 0, 0, 651, 653, 655, 722, 724, 726,
	728, 730, 732, 734, 736, 738, 741, 743, 745, 747,
	749, 752, 754, 756, 759, 762, 764, 766, 768, 770,
	772, 774, 776, 778, 780, 782, 784, 786, 788, 789,
	802, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, -2, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 899, 0, 0, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, -2, 983, 0, 0, 805, 807,
	808, 809, 810, 0, 872, 897, 898, 907, 793, 0,
	1224, 1566, 1422, 1403, 1417, 1422, 1405, 1406, 1407, 1408,
	1409, 1414, 1416, 1410, 1411, 1412, 42, 44, 46, 48,
	50, 52, 54, 56, 58, 60, 427, 429, 431, 433,
	435, 438, 440, 442, -2, 1535, 1536, 490, 492, 494,
	496, 498, 500, 502, 638, 0, 640, 0, 806, -2,
	0, 1570, 1570, 1570, 0, 0, 1536, 1534, 0, 643,
	644, 701, 702, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 2099, 1927, 0, 703, -2, 1960, 1962, 2688,
	2520, 2713, 2098, 1964, 1965, 1966, 1967, 1968, 0, 1970,
	1971, 1972, 1973, 1974, 1975, 0, 1977, 0, 1982, 1983,
	1984, 0, 2695, 2202, 2286, -2, 0, 0, 2701, 2282,
	0, 2065, 2000, -2, -2, 2309, 2288, 1771, 1772, 1773,
	1774, 1775, -2, -2, 2731, 2004, 2005, 2006, 2007, 2008,
	2009, 2010, 2011, 2012, 2013, 2014, 0, 2676, 2696, 2697,
	2702, 2704, 2698, 2685, 2025, 2391, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1798,
	1807, -2, -2, -2, -2, -2, -2, -2, 2689, 2690,
	2707, 2710, 2716, 2721, 2722, 2694, 2703, 2730, 2732, 2733,
	2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743,
	2744, 2745, 2746, 2747, 1799, -2, -2, -2, -2, 1553,
	2560, 1556, 1184, 1554, 1538, 1540, 0, 1542, 0, 0,
	0, 1547, 1573, 1571, 0, 1622, 1551, 1552, 1641, 1641,
	1665, 0, 1646, 0, 1665, 1565, 1692, 0, 1652, 2585,
	2001, 2002, 0, 2292, 2287, -2, -2, 2728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 599, 0, 605,
	607, 0, 0, 0, 626, 1575, 0, 0, 0, 0,
	0, 0, 0, 408, 409, 410, 411, 412, 2696, 0,
	0, 0, 417, 0, 419, 420, 421, 422, 423, 424,
	425, 203, 2696, 507, 532, 0, 203, 2696, 510, 203,
	2696, 513, 0, 516, 1298, 203, 2696, 519, 2253, 203,
	2696, 522, 524, 2261, 203, 2696, 528, 2268, 2266, 529,
	2696, 531, 309, 307, 308, 2305, 2306, 2313, 2314, 2315,
	2316, 2729, 2731, 1389, 1390, 1391, 1392, 0, 1419, 1299,
	648, 649, 0, 673, 0, 677, 2684, -2, 0, 2605,
	-2, 681, 1423, 1427, 1428, 1429, 1430, 1431, 0, 0,
	0, 0, 1436, 0, 0, 0, 0, 674, 675, 688,
	689, 695, 698, 0, 797, 798, 799, 800, 801, 72,
	0, 2696, 1692, 74, 0, 2247, 2317, 2318, 2319, 2320,
	2321, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757,
	2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767,
	2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777,
	2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787,
	2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797,
	2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807,
	2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817,
	2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827,
	2828, 2829, 78, 0, 2696, 83, 0, 2696, 0, -2,
	95, 0, 106, 0, 2250, 115, 0, 2696, 0, 2222,
	-2, 0, 215, 293, 294, 295, 0, 1030, -2, 2696,
	1236, 1238, 1238, 0, -2, 0, 0, 0, 993, 2219,
	2224, 994, 2243, 995, 2229, 0, 340, 341, 342, 343,
	344, 0, 345, 2696, 347, 348, 0, 350, 351, 2696,
	353, 354, 0, 356, 0, 256, 257, 2696, 379, 381,
	0, 383, 384, 0, 386, 0, 0, 0, 390, -2,
	406, 0, 403, 393, 394, 396, 397, 398, 399, 400,
	0, 446, 444, 2258, 0, 0, -2, 2696, 0, 1027,
	0, 0, 1278, -2, 2696, 1229, 0, 1285, 2696, 1281,
	0, -2, 0, 1563, 2696, 1440, 1059, 1060, 1061, 1062,
	1704, 473, 0, 1471, 0, 1473, 0, 1492, 1698, 1641,
	0, 0, 1703, 0, -2, 592, 2275, -2, 542, 0,
	543, 0, -2, 0, 321, 0, 0, 1012, 1013, 1014,
	1015, 1016, 1019, 1020, 1021, 1022, 1678, 274, 276, 0,
	0, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	0, 0, 658, 0, 0, 803, 804, 0, 0, 815,
	816, 817, 0, 321, 2597, 2556, 2412, 824, 0, 827,
	830, -2, 0, 0, 0, 0, 834, 0, 839, 840,
	841, 0, -2, 0, 848, 850, 1001, 852, 0, 0,
	854, 0, 858, 0, 861, 0, 863, 0, 865, -2,
	-2, -2, 873, 874, -2, 879, -2, 0, 883, -2,
	0, 886, 0, 889, -2, 0, 899, 895, 896, 0,
	0, 0, 0, 915, 916, 0, 925, 0, 928, 929,
	930, 0, 934, 935, 0, 937, 938, 939, 940, 0,
	2668, 2602, 2378, 0, 946, -2, 952, 954, 0, -2,
	0, 970, 0, 974, 0, 0, 982, 0, 0, 811,
	812, 203, 1696, 1402, -2, 1404, 0, -2, 0, 639,
	0, 642, 1595, 1521, 1518, 0, 1592, 1593, 1522, 0,
	0, 0, 1529, 0, 1568, 1569, 0, 0, 0, 1508,
	1509, 0, 0, 0, 0, 2104, 2105, 2106, 2107, 2120,
	2108, 2109, 2119, 2117, 2118, 2110, 2111, 2116, 2130, 2131,
	2121, 2122, 2112, 2125, 2123, 2124, 2126, 2127, 2128, 2129,
	0, 0, 2135, 0, 2113, 2114, 2115, 2143, 0, 0,
	2144, 0, 2146, 0, 2136, 2132, 2133, 2134, 0, 1906,
	1908, 2210, 0, 0, 0, 2142, 2137, 2138, 1844, 1845,
	1846, 1847, 1848, 1881, 1885, 1886, 0, 0, 1961, 2207,
	2206, 1963, 0, 0, 2158, 0, 1976, -2, 0, 2099,
	2153, 0, 0, 1985, 1986, 1987, 0, 0, 2158, 0,
	0, 2201, 1997, 1998, 1836, 0, 0, 2067, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 1784, 0, 1786,
	0, 1787, 1788, 1795, 1808, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 2182, -2, 0,
	0, 0, 0, 1800, 0, 1555, 0, 0, 1626, 2211,
	2215, 2216, 1626, 1626, 0, 0, 2159, 1689, 1689, 0,
	0, 1684, 1684, 1684, 1682, 1665, 0, 1665, 1675, 0,
	1665, 1665, 0, -2, 1646, 0, 0, 1675, 0, 1659,
	580, 582, 584, 586, 587, 588, 590, 1693, 1694, 0,
	0, 0, 0, 2293, 0, 0, 0, 0, 2265, 0,
	0, 2278, 0, 362, 0, 0, 0, 2651, 2596, 0,
	-2, 610, 629, 1565, 0, 2161, 1719, 1723, 0, 1725,
	1726, 1727, 1728, 1729, 0, 0, 1720, -2, 1796, 1798,
	1819, 2310, 2311, 2312, 1779, 1780, 1781, 1782, 1783, 1791,
	1778, 1778, 1778, 1789, 1818, 1810, 1818, 1814, 1764, 1765,
	1766, 1801, 1802, 1803, 1804, 0, 2651, 2596, 0, -2,
	619, 0, 0, 1503, 219, 221, 222, 223, 224, 225,
	407, 0, 414, 415, 416, 0, 503, 0, 201, 202,
	0, 203, 2696, 508, 0, 511, 0, 203, 2696, 2217,
	517, 0, 520, 0, 0, 526, 0, 0, 0, 0,
	0, 203, 1505, 0, 0, 0, 0, -2, 683, 691,
	692, 0, 1425, 0, 1432, 712, 713, 714, 1434, 1435,
	0, 1437, 686, 715, 716, 717, 718, 719, 720, 0,
	2231, 2232, 2233, 2234, 2237, 2238, 0, 0, 684, 705,
	687, 0, 699, 116, 1375, 0, 0, 159, 0, 1375,
	1375, 0, 0, 0, 0, 186, 0, 1098, 0, 0,
	0, 0, 131, 144, 155, 128, 129, 0, 0, 0,
	0, 0, 0, 84, 1206, 0, 1209, 0, 0, 0,
	0, 0, 0, 0, 1222, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 103, 143, 0, 0, 1468, 0,
	138, 118, 0, 0, 131, 145, 157, 0, 190, 192,
	1095, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	226, 0, 0, 0, 1230, 0, 0, 0, 1562, 0,
	0, 0, 0, 2696, 1373, 0, 1358, 0, 1678, 2461,
	-2, -2, 274, 1678, 992, 0, 0, 2293, 2227, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 385, 387,
	388, 389, 0, 1277, 0, 395, 436, 1155, 2696, 0,
	0, 463, 458, 0, 460, 0, 0, 0, 1205, 2696,
	1203, 2262, 0, 1227, 0, 1184, 2696, 2260, 0, 0,
	0, 1286, 2302, 1295, 1299, 1458, 0, 475, 0, 1474,
	1476, 0, 0, 1699, 0, 1701, 1641, 1565, 0, 0,
	0, 0, 297, 0, 0, 0, 0, 0, 0, 280,
	0, 1677, 0, 0, 1678, 274, 2571, 321, 321, 1678,
	660, 1678, 662, 0, 0, 818, 819, 0, 321, 321,
	321, 825, 826, 828, 829, -2, -2, -2, -2, 831,
	832, 922, 0, 0, 0, 921, 842, 0, 844, 847,
	851, 0, 986, 2580, 2596, 2651, 999, 922, 2378, 922,
	2378, 922, 2378, 862, 864, 867, 910, 918, 878, 885,
	0, 880, 884, 887, 890, 0, 892, 900, -2, 0,
	902, 0, 904, 0, 906, 922, 923, 926, 933, 936,
	941, 942, 943, 944, 2273, 945, -2, 949, 950, 0,
	961, 966, 967, 963, 0, 0, 0, 0, 0, 0,
	977, 978, 0, 0, 985, 1223, 0, 1415, 1595, 1521,
	641, 1512, 1594, 1513, 1520, 1523, 0, 0, 1525, 0,
	1527, 0, 1590, 1591, 1598, 1599, 0, 1609, 1610, 1602,
	0, -2, 0, 0, 1605, 1606, 1531, 0, 1548, 1549,
	1550, 1579, 1582, 1314, 0, 2830, 1840, 1714, 1841, 1842,
	2246, 0, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, -2, -2, -2, -2, -2, -2, -2, -2,
	1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876,
	1877, -2, -2, -2, 1882, 1883, 1884, -2, 2145, 2147,
	0, 2210, 0, -2, 0, -2, -2, -2, -2, 1903,
	0, 1905, 1910, 1912, 1914, 0, 0, 0, 0, 2209,
	1924, 2193, 2194, 0, 0, 2101, 2102, 2103, 1909, 0,
	1928, 2208, 2205, 0, 0, 2139, 0, 2104, 2105, 2106,
	2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	0, 2157, 1578, 1989, 0, 0, 0, 0, 1996, 1981,
	2155, 0, 2154, 0, 0, 0, 2165, 0, 2200, 2196,
	0, 2244, 1835, 1822, 1823, 1824, 1825, 1826, 1827, 1837,
	0, 2241, 2279, 2285, 2075, 0, 0, 0, 2026, 2027,
	2028, 2029, 2030, 0, 2032, 2033, 0, 2035, 2036, 0,
	2038, 2039, 0, 2041, 2042, 2043, 2044, 2045, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 0, 0, 2047,
	0, 2168, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 2049, 0, 2051, 2159, 2179, 0, 0, 1929, 0,
	0, 0, 0, 2099, 0, 2054, 2159, 2187, 0, 0,
	0, 0, 0, 2159, 0, 2192, 0, 2061, 0, 2063,
	1557, 0, 0, 1709, 0, 0, 0, 2214, 1709, 1709,
	0, 1621, 0, 0, 1685, 1686, 1687, 1688, 0, 0,
	1689, 0, 1679, 1683, 1680, 1681, 1675, 1638, 0, 0,
	2248, 1675, 1644, 1674, 0, 1184, 1664, 1675, 1675, 0,
	-2, 1648, 1665, 0, 0, 581, 583, 585, 589, 591,
	0, 0, 1578, -2, 0, -2, 323, 1183, 0, 0,
	0, 0, 0, 600, 602, 0, 0, 523, 0, 0,
	616, 0, 594, 0, 597, 0, 1710, 1713, 0, 0,
	1724, 1730, 1731, 0, -2, 0, 0, 1820, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 418, 533,
	203, 505, 0, 203, 203, 514, 0, 0, 203, 525,
	203, 2269, 203, 2267, 310, 530, 1504, 237, 0, 676,
	0, 1424, 1433, 0, 709, 0, 711, 0, 2235, 2239,
	2236, 2240, 0, 700, 0, 0, 0, 0, 1374, 0,
	1321, 0, 0, 163, 2696, 0, 205, 0, 0, 1148,
	2254, 0, 1138, 0, 0, 2398, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 130, 0, 0, 0, 0,
	0, 0, 0, 0, 1207, 1208, 1210, 1217, 1219, 0,
	1213, 2242, 0, 0, 1214, 0, 1216, 1218, 1220, 0,
	0, 0, 0, 0, 0, 0, 97, 104, 0, 0,
	0, 0, 0, 0, 1467, 1468, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 2221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1232, 0, 0, 0, 1273, 1271, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 0, 0, 0, -2,
	1234, 1235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 312, 2220, 2230, 0, 1017, 1018, 346,
	349, 352, 355, 243, 0, 391, 0, 0, 1065, 1040,
	0, 0, 445, 321, 0, 0, 459, 463, 2271, 1025,
	1201, 1204, 0, 1184, 2696, 1250, 0, 0, 0, 0,
	0, 0, 1284, 0, 0, 2696, 2249, 2301, 2302, 1460,
	1468, 0, 1709, 0, 1490, 1477, 0, 0, 0, 1490,
	1494, 1495, 1497, 1498, 0, 0, 1700, 1706, 541, 593,
	1565, 1565, 321, 319, 2523, 317, 314, 316, 0, 0,
	0, 1066, 1068, 1069, 1070, 205, 0, 2302, 1138, 2450,
	2302, 0, 1480, 1482, 0, 268, 0, 277, 1678, 275,
	280, 0, 0, 0, 457, 659, 664, 813, 0, 321,
	821, 822, 823, 869, 912, 920, 965, 833, 835, 836,
	837, 0, 0, 0, 1000, 996, 997, 998, 853, 922,
	856, 922, 859, 922, 882, 888, 894, 901, 0, 0,
	0, 914, 931, 0, 948, 0, 0, 0, 0, 0,
	0, 0, 971, 972, 973, 975, 980, 979, 984, 1697,
	1516, 1517, 1519, 0, 1528, 0, 0, 1604, -2, -2,
	1603, 1607, 1608, -2, -2, -2, -2, 1524, 0, 1533,
	1530, 0, 1589, 1312, 1313, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1925, 0, -2, 1904, 1907, 1911,
	1913, 1915, 0, 0, 0, 0, 0, 0, 2148, 0,
	2150, 1926, 2203, 2206, 2141, 0, 2097, 0, 0, 1577,
	1578, 1578, 0, 1995, 0, 2156, 0, 2163, 2164, 0,
	1988, 0, 2197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1999, 0, 0, 0, 0, 2031, 2034, 2037,
	2040, 0, 0, 0, 0, 2020, 0, 0, 0, 2024,
	1790, 1776, 0, 1818, 1816, 1817, 1811, 1818, 1815, 1768,
	0, 1767, 0, 2046, 0, 2048, 2050, 0, 0, 2052,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1932, 1933, 1934, 1954, 2053, 2185,
	2186, 0, 0, 0, 0, 0, 0, 2059, 0, 2191,
	2060, 2062, 1565, 0, 1558, 0, 1623, 1612, 1708, 0,
	2212, 1678, 1625, 1627, 2213, 2251, 1612, 1612, 0, 2160,
	0, 0, 1669, 0, 0, 0, 1671, 1642, 0, 0,
	1636, 0, 1631, 1632, 1633, 1634, 1635, 1643, 1184, 1673,
	1645, 1649, 2279, 0, 1675, 0, 1660, 0, 1662, 1695,
	0, 1654, 1657, 0, 0, 2294, 1709, 0, 357, 363,
	364, 358, 359, 360, 361, 609, 0, 0, 0, 0,
	0, 2162, 0, 1715, 0, 1721, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 220, 1502, 413, 504, 203,
	509, 512, 2218, 203, 518, 521, 527, 233, 0, 672,
	-2, 707, 708, 710, 0, 706, 160, 1375, 0, 0,
	1317, 1319, 1323, 1329, 1332, 0, 165, 2696, 177, 0,
	1114, 0, 2252, 0, 0, 0, 0, 0, 0, 1377,
	0, 0, 2696, 203, 2696, 203, 180, 182, 185, 0,
	189, 187, 0, 1102, 0, 0, 1105, 117, 1375, 0,
	0, 120, 124, 132, 133, 136, 0, 0, 0, 142,
	0, 0, 0, 1334, 1338, 1346, 0, 0, 0, 1211,
	1212, 1215, 1221, 85, 0, 0, 0, 1342, 1344, 1350,
	96, 1446, 1447, 98, 2696, 2263, 100, 2696, 0, 1316,
	0, 0, 0, 0, 191, 122, 126, 134, 135, 137,
	0, 1352, 119, 0, 218, 0, 0, 208, 203, 2696,
	0, 210, 0, 211, 212, 227, 0, 0, 0, 1028,
	1029, 1239, 1240, 1241, 1272, 1225, 1226, 0, 1237, 1231,
	0, 0, 0, 0, 0, 1354, 1355, 0, 0, 0,
	1373, 1370, 1678, 239, 0, 1678, 247, 0, 2226, 0,
	378, 0, 0, 0, 0, 1064, 1166, 0, 1035, 0,
	0, 0, 451, 447, 0, 456, 462, 461, 467, -2,
	0, 0, 0, 0, -2, 0, 0, 1288, 1282, 1283,
	0, 0, 0, 0, 2696, 1462, 1468, 0, 1563, 1578,
	474, 1469, 1490, 0, 0, 0, 1479, 1475, 1472, 1709,
	0, 0, 0, 0, 0, 1702, 1705, 544, 545, 296,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 1071,
	1075, 0, 2302, 2302, 0, 2256, 0, 0, 0, 0,
	278, 0, 281, 0, 0, 0, 286, 287, 288, 289,
	290, 291, 280, 270, 1678, 0, 0, 661, 0, 0,
	820, 0, 843, 846, 855, 857, 860, 903, 905, 922,
	932, 955, 956, 1092, 0, 1092, 0, 0, 976, 1526,
	0, 1601, 1532, 1583, 1584, 0, 1314, 0, 1843, 1888,
	0, 0, -2, 0, 0, 1892, 0, 0, 0, -2,
	0, 0, 0, 2149, 2151, 0, 2205, 2140, 1990, 0,
	0, 0, 1994, 1978, 1979, 0, 2100, 2166, 2195, 2199,
	0, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 0, 2245,
	2280, 2284, 2073, 2074, 2078, 2259, 0, 0, 0, 2003,
	0, 0, 0, 0, 0, 0, 0, 0, 1809, 1813,
	0, 0, 2167, 2178, 2180, 1930, 1931, 1935, 1936, 1937,
	1938, 1939, 1940, 1941, 1942, 1943, 1944, -2, -2, -2,
	1948, 1949, 1950, -2, -2, -2, 1955, 0, 0, 0,
	2181, 2183, 2184, 2188, 2189, 0, 2056, 2057, 2058, 2190,
	0, 1565, 1559, 1620, 0, 1707, 1624, 0, 1620, 1620,
	1572, 1667, 0, 0, 1691, 0, 1639, 0, 1640, 0,
	1672, 0, 1647, 1650, 1651, 1661, 0, 1653, 0, 1656,
	0, 1990, -2, 322, 324, 326, 0, 329, 330, 0,
	0, 612, 613, 0, 611, 595, 0, 0, 1717, 0,
	0, 1793, 1797, 1821, 621, 622, 0, 620, 506, 515,
	235, 0, 1676, 0, 0, 0, 0, 0, 0, 204,
	1112, 1147, 0, 0, 0, 1137, 0, 0, 1153, 167,
	168, 169, 0, 0, 0, 0, 178, 0, 0, 175,
	0, 184, 188, 1099, 0, 0, 0, 0, 1322, 0,
	0, 0, 139, 140, 141, 0, 146, 0, 147, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1452,
	1453, 0, 1443, 0, 0, 0, 206, 0, 0, 0,
	1311, 229, 0, 0, 0, 0, 0, 1275, 1276, 1233,
	1335, 1339, 1347, 0, 0, 0, 0, 627, 0, 632,
	1372, 0, 247, 245, 0, 248, 0, 251, 252, 0,
	254, 247, 241, 0, 0, 0, 1184, 392, 1038, 1154,
	0, 1156, 0, 1036, 0, 0, 1155, 443, 0, 450,
	0, 464, 0, 0, 1205, 0, 0, 1228, 1248, 1184,
	0, 1287, 1289, 0, 1297, 0, 0, 0, 1464, 1468,
	0, 1457, 1458, 1597, 1470, 1488, -2, 0, 0, 1578,
	1496, 1493, 1499, 1500, 0, 318, 0, 313, 315, 0,
	299, 0, 0, 1067, 1072, 0, 0, 0, 0, 0,
	1481, 1483, 0, 0, 0, 0, 0, 0, 269, 280,
	1678, 305, 0, 814, 838, 913, 957, 1091, 0, 0,
	959, 0, 0, 1600, 1587, 1588, 1585, 1314, 1890, 1894,
	0, 0, 0, 1896, -2, 0, 1918, -2, -2, 2152,
	2204, 1969, 1578, 1991, 1993, 1980, 2198, 1838, 0, 2080,
	2077, 0, 2064, 0, 2015, 2016, 0, 0, 2019, 2021,
	2022, 2023, 1777, 1770, 1769, 2177, 0, 0, 0, 0,
	2055, 1560, 0, 2069, 0, 0, 1628, 2069, 2069, 1668,
	0, 1670, 1637, 1629, 0, 2280, 1663, 1655, 0, 0,
	327, 0, 331, 332, 0, 0, 1711, 1716, 0, 1722,
	1792, 0, 236, 161, 162, 1326, 1330, 1327, 0, 164,
	0, 1113, 0, 1116, 0, 0, 0, 0, 1123, 1138,
	0, 0, 0, 0, 0, 0, 1140, 0, 1139, 0,
	0, 1170, 0, 1302, 1309, 0, -2, 0, 0, 0,
	171, 194, 0, 0, 0, 0, 197, 1376, 173, 0,
	0, 203, 203, 0, 0, 1318, 1320, 1333, 0, 0,
	0, 0, 149, 0, 0, 1336, 1340, 1348, 1343, 1345,
	1351, 0, 101, 0, 1454, 0, 0, 1353, 216, 217,
	0, 203, 0, 203, 209, 203, 1311, 0, 0, 0,
	0, 0, 0, 0, 1356, 1357, 238, 0, 0, 0,
	0, 240, 311, 247, 380, 0, 1086, 0, 1166, 1158,
	1159, 1160, 0, 1165, 1167, 0, 0, 1052, 1037, 0,
	1048, 0, 0, 1065, 1040, 0, 448, 465, 0, 468,
	0, 471, 1026, 1202, 1245, 1184, 0, 1279, 0, 0,
	0, 0, 0, 0, 0, 1466, 1468, 0, 1459, 1460,
	1490, 1596, 0, 0, 0, 1478, 1597, 0, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	282, 0, 283, 284, 285, 271, 272, 663, 665, 0,
	0, 671, 1090, 0, 0, 0, 0, 1586, 1898, -2,
	-2, 1919, 0, 2281, 2283, 1578, 0, 2066, 1580, 0,
	0, -2, 0, 0, 0, 1561, 1544, 0, 1619, 1611,
	1613, 1615, 2583, 2373, 2695, 1545, 1546, 1690, 0, 1658,
	328, 614, 0, 0, 1718, 0, 0, 0, 1328, 166,
	0, 1117, 1118, 2255, 1120, 0, 1122, 1124, 1125, 1126,
	0, 1129, 0, 2304, 0, 1134, 1135, 1136, 0, 0,
	1149, 1171, 0, 1180, 0, 1304, 1314, 1308, 0, 1306,
	1182, 0, 170, 196, 172, 198, 193, 0, 1311, 0,
	174, 183, 0, 0, 121, 0, 0, 2367, 152, 150,
	148, 99, 1315, 123, 0, 218, 228, 1310, 230, 213,
	203, 0, 1337, 1341, 1349, 0, 1364, 1365, 1366, 1367,
	0, 0, 0, 0, 249, 0, 250, 253, 0, 0,
	1101, 0, 1039, 1157, 0, 1168, 1169, 1042, 0, 1041,
	0, 0, 0, 0, 0, 449, 452, 0, 455, 0,
	0, 0, 0, 0, 1290, 1288, 0, 1296, 0, 0,
	0, 1442, 0, 0, 1461, 1462, 472, 1484, 0, 0,
	1490, 1501, 298, 0, 0, 1073, 1076, 1077, 1078, 1079,
	1080, 1081, 1082, 1083, 1084, 1074, 1182, 0, 0, 1146,
	0, 303, 279, 0, 667, 0, 669, 0, 958, 960,
	0, 0, 1992, 2084, 0, 0, 2017, 2018, -2, 0,
	1958, 2068, 2070, 0, 0, 0, 0, 0, 1630, 615,
	1712, 623, 1324, 0, 1331, 1115, 1119, 0, 0, 0,
	1130, 1188, 0, 0, 1141, 0, 0, 1174, 1175, 1086,
	0, 1176, 1177, 1178, 1303, 1589, 1309, 1086, 0, 0,
	195, 200, 0, 0, 0, 0, 0, 0, 0, 207,
	231, 1311, 0, 1368, 1369, 0, 0, 246, 264, 0,
	1246, 1040, 1100, 0, 0, 1050, 0, 1053, 0, 1049,
	1046, 1047, 1038, 0, 453, 454, 469, 0, 470, 0,
	1249, 0, 0, 1297, 0, 0, 1449, 1441, 1468, 1463,
	1464, 1709, 1487, 1491, 0, 0, 1180, 1182, 1097, 0,
	666, 0, 0, 968, 969, 0, 0, 0, 0, 2079,
	1581, 1959, 0, 0, 1614, 1616, 1617, 1618, 1325, 0,
	0, 1128, 1193, 0, 0, 0, 1142, 1172, 1173, 1097,
	0, 1307, 1305, 1151, 0, 1184, 176, 0, 1182, 0,
	1106, 0, 0, 1109, 0, 0, 153, 2367, 151, 0,
	203, 1361, 203, 0, 267, 0, 261, 259, 260, 1042,
	0, 0, 1162, 1164, 0, 1054, 1086, 1052, 466, 1247,
	1280, 1182, 0, 1180, 0, 1456, 1468, 1450, 1451, 0,
	1466, 0, 321, 321, 1086, 1180, 1040, 1096, 321, 668,
	670, 2076, 2096, 2085, -2, 2654, 2374, 0, 2096, 2096,
	2071, 2072, 0, 0, 1131, 1189, 1190, 0, 1185, 1186,
	1187, 2303, 1132, 1133, 1170, 0, 0, 1188, 199, 1086,
	1103, 0, 0, 1104, 0, 0, 156, 0, 158, 232,
	1359, 0, 1362, 0, 255, 0, 0, 1034, 0, 1161,
	0, 0, 0, 0, 1101, 1042, 1180, 0, 1086, 0,
	1445, 1455, 0, 1465, 1442, 0, 300, 301, 1097, 1086,
	1709, 0, 302, 2081, 0, 0, 2087, 2088, 2089, 2090,
	2091, 2082, 2083, 1121, 0, 1191, 0, 1192, 0, 0,
	0, 1709, 1179, 0, 1193, 181, 1107, 0, 1110, 0,
	154, 0, 0, 0, 262, 263, 1031, 1033, 0, 1163,
	1043, 0, 1045, 1040, 1051, 1086, 0, 1097, 0, 1438,
	1444, 1448, 2264, 1449, 1485, 0, 1040, 1097, 1145, 0,
	2093, 2094, 0, 0, 0, 1194, 0, 1197, 1198, 0,
	1195, 1150, 0, 1170, 0, 0, 1360, 203, 0, 0,
	1044, 1042, 1097, 1182, 1040, 1180, 1456, 0, 1709, 1040,
	2092, 2095, 2086, 1127, 1196, 1199, 1200, 1181, 1152, 0,
	0, 1363, 265, 0, 1089, 1034, 1040, 1180, 1709, 1086,
	1445, 1709, 1143, 1709, 1094, 0, 0, 1085, 1087, 1088,
	1032, 1709, 1086, 1293, 1097, 1439, 1486, 1144, 1108, 1093,
	0, 266, 1291, 1097, 1040, 0, 1040, 1709, 0, 1709,
	1294, 1094, 1292, 1111,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 584, 3, 590, 585, 3,
	595, 596, 588, 586, 600, 587, 597, 589, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 603, 3,
	576, 578, 577, 581, 599, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 593, 3, 594, 591, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 601, 583, 602, 579,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 580, 57919, 582,
	57920, 592, 57921, 598, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1468
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1473
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1475
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1478
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1479
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1480
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1481
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1483
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1485
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1495
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1504
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1506
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1509
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1510
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1511
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1512
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1514
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1515
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1516
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1517
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1617
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1635
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1639
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1643
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1670
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1674
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1680
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[5].union.dataPlacement(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1690
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1697
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1707
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1714
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1724
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1764
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1796
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1800
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1804
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1814
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1820
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1829
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1850
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1858
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1868
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1872
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1881
		{
		}
	case 131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1882
		{
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1886
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1895
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1907
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1912
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1919
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1931
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1938
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1946
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1951
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1955
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1960
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1966
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1974
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1985
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1995
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2005
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2014
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2025
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2031
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 154:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2051
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2057
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2062
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2083
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2087
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2094
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2104
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2109
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2119
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2129
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2134
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2153
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2158
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2189
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2196
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2199
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2205
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2220
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2227
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2245
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2257
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2265
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2270
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2280
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2288
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = nil
		}
	case 195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2302
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2308
		{
			sqlVAL.union.val = true
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2312
		{
			sqlVAL.union.val = false
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2322
		{
			sqlVAL.union.val = nil
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2333
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2337
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2343
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2372
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2383
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2431
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2440
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2444
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2447
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2451
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2465
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2480
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2482
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2487
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2494
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2502
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2533
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2575
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2608
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2617
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2621
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2625
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2641
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2652
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2769
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2786
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2796
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2804
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2808
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2812
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = nil
		}
	case 268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2877
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2886
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2896
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2903
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2921
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2932
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2947
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2968
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2972
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2976
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2980
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2988
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3000
		{
			return unimplemented(sqllex, "alter function")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3004
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3008
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3045
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3050
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3054
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3060
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3065
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3070
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3075
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3080
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3084
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3103
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3111
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3139
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3143
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3147
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = nil
		}
	case 322:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3187
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3201
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3207
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3211
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3217
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3221
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3229
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3233
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3237
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3241
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3245
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3253
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3254
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3255
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3256
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3276
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3280
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3283
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3310
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3312
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3319
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3329
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3346
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3355
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3359
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3363
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3367
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3371
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3384
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3387
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3391
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3396
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3408
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3410
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3411
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3414
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3415
		{
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3416
		{
			return helpWith(sqllex, "CREATE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3423
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3429
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3430
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3433
		{
			return unimplemented(sqllex, "create access method")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3434
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3435
		{
			return unimplemented(sqllex, "create cast")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3436
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3437
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3438
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3439
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3440
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3441
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3442
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3443
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3444
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3445
		{
			return unimplemented(sqllex, "create publication")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3446
		{
			return unimplemented(sqllex, "create rule")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3447
		{
			return unimplemented(sqllex, "create server")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3448
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3449
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3450
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3451
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3454
		{
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3455
		{
		}
	case 403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3458
		{
		}
	case 404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3459
		{
		}
	case 405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3462
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3463
		{
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3466
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3467
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3468
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3469
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3470
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3471
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3472
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3473
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3474
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3475
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3476
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3477
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3478
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3479
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3480
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3481
		{
			return unimplemented(sqllex, "drop server")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3482
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3483
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3487
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3488
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3489
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3490
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3493
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3494
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3495
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3506
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3514
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3518
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3522
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3528
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3532
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3541
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3548
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3554
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3560
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3564
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3575
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3587
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3602
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3610
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3634
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3641
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3645
		{

			sqlVAL.union.val = nil
		}
	case 464:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3673
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3677
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3681
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3692
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3718
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3728
		{
			return helpWith(sqllex, "DELETE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3731
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3732
		{
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3740
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3744
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3745
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3746
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3747
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3756
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3757
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3758
		{
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3759
		{
			return helpWith(sqllex, "DROP")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3762
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3763
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3764
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3765
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3766
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3767
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3768
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3780
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3784
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3801
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3816
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3824
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3828
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3831
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3848
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3864
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3879
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3886
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3894
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3901
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3905
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3915
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3939
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3947
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3951
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3954
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3958
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3963
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3981
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3983
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3988
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3992
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4015
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4022
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4024
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4032
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4040
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4048
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4056
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4067
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4075
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4078
		{
			return helpWith(sqllex, "DELETE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4080
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4082
		{
			return helpWith(sqllex, "INSERT")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4085
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4087
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4090
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4095
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4096
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4097
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4102
		{
			return helpWith(sqllex, "DELETE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4103
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4104
		{
			return helpWith(sqllex, "INSERT")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4106
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4110
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4111
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4115
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4119
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 594:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4129
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4137
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4149
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4153
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4170
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4178
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4186
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4200
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4204
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4234
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4238
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4242
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4246
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4250
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4260
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4264
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4275
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4278
		{
			return helpWith(sqllex, "GRANT")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4309
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4313
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4327
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4338
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4341
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4350
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{
			return helpWith(sqllex, "RESET")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4379
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4391
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4394
		{
			return helpWith(sqllex, "RESET")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4402
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4405
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4416
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4419
		{
			return helpWith(sqllex, "USE")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4424
		{
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4425
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4426
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4430
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4431
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4432
		{
			return helpWith(sqllex, "USE")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4448
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4466
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4484
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4492
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4528
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4532
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4546
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4556
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4581
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4600
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4603
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4608
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4612
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4631
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4635
		{
			return unimplemented(sqllex, "set from current")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4639
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4644
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4653
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4658
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4663
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4671
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4676
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4687
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4693
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4735
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4743
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4751
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = tree.Low
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4761
		{
			sqlVAL.union.val = tree.Normal
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = tree.High
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4789
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4793
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4808
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4809
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4810
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4811
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4812
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4813
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4814
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4818
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4819
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4820
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4821
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4822
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4825
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4826
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4828
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4830
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4832
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4833
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4834
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4835
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4836
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4838
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4839
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4840
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4842
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4843
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4844
		{
			return helpWith(sqllex, "SHOW")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4847
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4852
		{
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4853
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4856
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4860
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4865
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4870
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4875
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4880
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4891
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4903
		{
			sqlVAL.str = "client_encoding"
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			sqlVAL.str = "timezone"
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4922
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4926
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4930
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4941
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4949
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4971
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4980
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4989
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4998
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5006
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5020
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5023
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5025
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5028
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5037
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5045
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5048
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5064
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5071
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5082
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5098
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5105
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5109
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5128
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5135
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5138
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5151
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5159
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5167
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5170
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5176
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5180
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5183
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5185
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5189
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5192
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5200
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5203
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5205
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5208
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5216
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5219
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5224
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5228
		{
			sqlVAL.union.val = true
		}
	case 871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5230
		{
			sqlVAL.union.val = true
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = false
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5260
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5261
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5262
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5264
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5276
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5279
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5289
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5305
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5306
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5316
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5322
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5330
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5332
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5338
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5346
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 899:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5370
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5372
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5375
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5377
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5381
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5384
		{
			sqlVAL.union.val = true
		}
	case 908:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = false
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5393
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5396
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5401
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5409
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5432
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5442
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5447
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = true
		}
	case 922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5451
		{
			sqlVAL.union.val = false
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5462
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5465
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5472
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5476
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5479
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5486
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5490
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5494
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5505
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5519
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5527
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5532
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5537
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5541
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5551
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5555
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5560
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5565
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5570
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5575
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5578
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5588
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5592
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5594
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5598
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5609
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5620
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5630
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5638
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5646
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5654
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5661
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5667
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5669
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5672
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5677
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5681
		{
		}
	case 968:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5690
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5704
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5713
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5722
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5725
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5734
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5754
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5766
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5772
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5779
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5784
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5788
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5794
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5801
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5808
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5813
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5933
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5937
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5941
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5984
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5993
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6001
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6025
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6042
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6043
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6044
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6054
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6055
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6056
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6074
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6083
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6088
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6092
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6115
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6123
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6151
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6158
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6186
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6225
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6241
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6263
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{

			sqlVAL.union.val = nil
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6276
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6282
		{
			sqlVAL.str = ""
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6286
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6292
		{
			sqlVAL.union.val = nil
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6305
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6309
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6313
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6323
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6333
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6339
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6353
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6368
		{
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6369
		{
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6370
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6389
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6397
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6403
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6419
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6425
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6451
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6462
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6464
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6465
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6468
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6469
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6475
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6491
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6496
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6514
		{
			sqlVAL.str = ""
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6547
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6599
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6619
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6625
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6639
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6650
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6672
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6676
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6710
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6714
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6743
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6753
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6757
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6761
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6770
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6776
		{

			sqlVAL.union.val = true
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.union.val = false
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6786
		{
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6790
		{
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6793
		{
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6797
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6838
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6868
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6893
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6904
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6921
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6931
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6946
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6953
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6974
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6996
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7011
		{
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7012
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7013
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7014
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7015
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7016
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7038
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7050
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7080
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7084
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7088
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7123
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7145
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7153
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7172
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7181
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7189
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7200
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7205
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7215
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7217
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7219
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7221
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7224
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7227
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7229
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7231
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7242
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7250
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7260
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7264
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7267
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7301
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.str = ""
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.union.val = true
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7335
		{

			sqlVAL.union.val = true
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = false
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7350
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7364
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7376
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7388
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7398
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7408
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7489
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = nil
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7518
		{
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7519
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7544
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7546
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7548
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7550
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7552
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7554
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7562
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7592
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7610
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7629
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7646
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7663
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7667
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = false
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = true
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = false
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = true
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = false
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7721
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7727
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7733
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7741
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7765
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.str = ""
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7769
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.str = ""
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7788
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7794
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7800
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7806
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7820
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7945
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7957
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7997
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8031
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8037
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8049
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8055
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8069
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8075
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8134
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = true
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = false
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8178
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = tree.Types
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8194
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8198
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8222
		{
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8223
		{
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8226
		{
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8227
		{
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8238
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8256
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8265
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8286
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8288
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8294
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8315
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8323
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8334
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8338
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8339
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8340
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8359
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8364
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8377
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8382
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8391
		{
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8392
		{
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8393
		{
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8403
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8410
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8413
		{
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8414
		{
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8432
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8442
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8455
		{
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8457
		{
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8461
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8550
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.str = ""
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8560
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8573
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8578
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8595
		{

		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8610
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.str = ""
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8635
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.str = ""
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.str = ""
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.str = ""
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8665
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8678
		{
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8679
		{
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8708
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8726
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8730
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8739
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8768
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8788
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8792
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8815
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8819
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8857
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8869
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8886
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8889
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8910
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8925
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8972
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9024
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9029
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9033
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9069
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9104
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9105
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9106
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9155
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9167
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9204
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9211
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9227
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9232
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = true
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = false
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9280
		{
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9281
		{
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = nil
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9294
		{
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9295
		{
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = true
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = false
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = false
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = true
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9324
		{
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9325
		{
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9328
		{
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9329
		{
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9360
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9370
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9391
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9396
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9422
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9455
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9510
		{
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9511
		{
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9514
		{
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9515
		{
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9549
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9550
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9551
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9581
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9583
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9598
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9620
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9625
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9630
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9646
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9653
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9658
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9677
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9685
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9717
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9727
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9762
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9773
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9803
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9836
		{
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9838
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = nil
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9842
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9851
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9857
		{
			sqlVAL.union.val = true
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = false
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.str = tree.AstFull
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.str = tree.AstRight
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.str = tree.AstInner
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9955
		{
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9956
		{
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.str = tree.AstHash
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.str = ""
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10025
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10030
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10048
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10054
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10060
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10070
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = true
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = false
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10090
		{
			sqlVAL.union.val = true
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10094
		{
			sqlVAL.union.val = false
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10119
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10132
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10140
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10141
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10159
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10161
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10169
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10182
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10189
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10198
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10238
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10250
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10251
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = types.Geography
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10290
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10300
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10308
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10334
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10342
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = nil
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = types.Int2
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = types.Int
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = types.Float4
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = types.Float
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10385
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10393
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10401
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = types.Bool
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10415
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = types.Float
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10434
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10440
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10456
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10462
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = types.String
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = true
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = false
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = types.Date
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10511
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10519
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10533
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10542
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10550
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10567
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = true
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = false
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = false
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = types.Interval
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10591
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10675
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10690
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10696
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = nil
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10720
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10757
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10765
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10780
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10785
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10789
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10797
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10901
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10909
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10929
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10937
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11050
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11052
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11064
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11068
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11084
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11088
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11092
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11116
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11138
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11154
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11162
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11166
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11170
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11174
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11246
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11254
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11290
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11298
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11350
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11355
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11357
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11361
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11365
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11369
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11373
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11377
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11381
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11390
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11405
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11411
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11420
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11435
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11443
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11446
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11447
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11455
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11459
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11462
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11471
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11537
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11564
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11568
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11572
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11582
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11586
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11594
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11604
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11612
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11616
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11620
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11632
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11636
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11640
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11652
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11659
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11662
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11667
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11669
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11673
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11676
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11682
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11685
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11687
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11694
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11703
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11708
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11710
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11713
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11718
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11723
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11725
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11728
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11730
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11734
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11737
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11738
		{
			return unimplemented(sqllex, "treat")
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11744
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11759
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11761
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11764
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11791
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11795
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11805
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11811
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11819
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11823
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.str = ""
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11860
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11870
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11900
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11913
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11941
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11960
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11981
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11999
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12003
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12010
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12026
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12030
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12046
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12047
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12049
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12051
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12053
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12056
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12057
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12060
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12061
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12062
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12064
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12065
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12069
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12070
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12072
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12073
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12074
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12076
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12077
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12078
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12079
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12081
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12086
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12110
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12139
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12164
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12174
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12178
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12191
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12195
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12211
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12235
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12258
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12262
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12266
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12272
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12279
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12300
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12304
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12308
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12312
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12316
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12322
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12328
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12334
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12348
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12367
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12371
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12377
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12383
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12387
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12394
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12400
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12404
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12411
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12417
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12421
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12426
		{
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12427
		{
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12431
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12435
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12441
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12476
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12480
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12499
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12507
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12530
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12539
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12543
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12547
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12557
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12561
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12576
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12580
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12592
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12596
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12605
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12616
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12625
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12633
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12650
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12735
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12743
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12747
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12753
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12757
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12765
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12792
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12799
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12803
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12807
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12821
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12825
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12829
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12842
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12851
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12869
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12882
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12889
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12914
		{
			sqlVAL.str = ""
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12920
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12924
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
