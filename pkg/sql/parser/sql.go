// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:906
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14096

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1641,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	263, 428,
	-2, 0,
	-1, 74,
	245, 254,
	525, 254,
	-2, 0,
	-1, 88,
	234, 1374,
	247, 1374,
	263, 424,
	398, 424,
	409, 1123,
	449, 424,
	462, 1123,
	510, 1123,
	536, 424,
	562, 1123,
	-2, 0,
	-1, 94,
	133, 1641,
	240, 1641,
	547, 1641,
	548, 1641,
	-2, 0,
	-1, 112,
	152, 1612,
	172, 1612,
	185, 1612,
	243, 1612,
	276, 1612,
	348, 1612,
	359, 1612,
	542, 1612,
	-2, 1583,
	-1, 153,
	160, 959,
	262, 959,
	401, 920,
	467, 920,
	509, 920,
	528, 959,
	530, 920,
	-2, 0,
	-1, 157,
	4, 1643,
	21, 1643,
	22, 1643,
	23, 1643,
	24, 1643,
	25, 1643,
	26, 1643,
	27, 1643,
	29, 1643,
	30, 1643,
	36, 1643,
	41, 1643,
	42, 1643,
	44, 1643,
	45, 1643,
	46, 1643,
	47, 1643,
	48, 1643,
	49, 1643,
	50, 1643,
	51, 1643,
	53, 1643,
	54, 1643,
	55, 1643,
	56, 1643,
	58, 1643,
	59, 1643,
	60, 1643,
	61, 1643,
	62, 1643,
	63, 1643,
	64, 1643,
	68, 1643,
	69, 1643,
	70, 1643,
	71, 1643,
	73, 1643,
	74, 1643,
	75, 1643,
	79, 1643,
	80, 1643,
	81, 1643,
	82, 1643,
	83, 1643,
	84, 1643,
	85, 1643,
	88, 1643,
	89, 1643,
	90, 1643,
	91, 1643,
	92, 1643,
	94, 1643,
	96, 1643,
	97, 1643,
	98, 1643,
	99, 1643,
	100, 1643,
	101, 1643,
	103, 1643,
	104, 1643,
	105, 1643,
	107, 1643,
	108, 1643,
	109, 1643,
	117, 1643,
	118, 1643,
	119, 1643,
	120, 1643,
	121, 1643,
	123, 1643,
	124, 1643,
	125, 1643,
	126, 1643,
	128, 1643,
	129, 1643,
	130, 1643,
	132, 1643,
	133, 1643,
	134, 1643,
	136, 1643,
	137, 1643,
	138, 1643,
	141, 1643,
	142, 1643,
	143, 1643,
	145, 1643,
	146, 1643,
	147, 1643,
	149, 1643,
	150, 1643,
	151, 1643,
	153, 1643,
	154, 1643,
	155, 1643,
	156, 1643,
	157, 1643,
	158, 1643,
	159, 1643,
	160, 1643,
	161, 1643,
	162, 1643,
	163, 1643,
	164, 1643,
	165, 1643,
	166, 1643,
	167, 1643,
	168, 1643,
	169, 1643,
	171, 1643,
	177, 1643,
	178, 1643,
	179, 1643,
	180, 1643,
	184, 1643,
	186, 1643,
	187, 1643,
	188, 1643,
	192, 1643,
	193, 1643,
	194, 1643,
	195, 1643,
	196, 1643,
	197, 1643,
	198, 1643,
	199, 1643,
	200, 1643,
	201, 1643,
	202, 1643,
	203, 1643,
	204, 1643,
	205, 1643,
	207, 1643,
	208, 1643,
	210, 1643,
	211, 1643,
	213, 1643,
	214, 1643,
	215, 1643,
	216, 1643,
	217, 1643,
	218, 1643,
	219, 1643,
	220, 1643,
	221, 1643,
	223, 1643,
	224, 1643,
	226, 1643,
	227, 1643,
	228, 1643,
	229, 1643,
	230, 1643,
	234, 1643,
	235, 1643,
	236, 1643,
	237, 1643,
	240, 1643,
	241, 1643,
	242, 1643,
	244, 1643,
	246, 1643,
	247, 1643,
	249, 1643,
	251, 1643,
	252, 1643,
	253, 1643,
	255, 1643,
	259, 1643,
	260, 1643,
	261, 1643,
	262, 1643,
	263, 1643,
	264, 1643,
	266, 1643,
	267, 1643,
	268, 1643,
	270, 1643,
	271, 1643,
	273, 1643,
	274, 1643,
	277, 1643,
	278, 1643,
	279, 1643,
	280, 1643,
	281, 1643,
	282, 1643,
	283, 1643,
	286, 1643,
	287, 1643,
	288, 1643,
	289, 1643,
	291, 1643,
	292, 1643,
	293, 1643,
	294, 1643,
	295, 1643,
	296, 1643,
	297, 1643,
	298, 1643,
	299, 1643,
	300, 1643,
	301, 1643,
	302, 1643,
	303, 1643,
	304, 1643,
	305, 1643,
	306, 1643,
	307, 1643,
	308, 1643,
	309, 1643,
	310, 1643,
	311, 1643,
	312, 1643,
	314, 1643,
	316, 1643,
	317, 1643,
	318, 1643,
	319, 1643,
	320, 1643,
	321, 1643,
	322, 1643,
	323, 1643,
	324, 1643,
	325, 1643,
	326, 1643,
	327, 1643,
	328, 1643,
	329, 1643,
	330, 1643,
	331, 1643,
	332, 1643,
	334, 1643,
	335, 1643,
	337, 1643,
	339, 1643,
	340, 1643,
	341, 1643,
	343, 1643,
	344, 1643,
	345, 1643,
	346, 1643,
	347, 1643,
	350, 1643,
	352, 1643,
	354, 1643,
	355, 1643,
	356, 1643,
	357, 1643,
	360, 1643,
	361, 1643,
	362, 1643,
	364, 1643,
	366, 1643,
	367, 1643,
	368, 1643,
	369, 1643,
	370, 1643,
	371, 1643,
	372, 1643,
	373, 1643,
	374, 1643,
	375, 1643,
	376, 1643,
	377, 1643,
	378, 1643,
	380, 1643,
	381, 1643,
	382, 1643,
	383, 1643,
	384, 1643,
	385, 1643,
	386, 1643,
	387, 1643,
	388, 1643,
	389, 1643,
	390, 1643,
	391, 1643,
	392, 1643,
	393, 1643,
	394, 1643,
	396, 1643,
	397, 1643,
	399, 1643,
	400, 1643,
	401, 1643,
	402, 1643,
	403, 1643,
	404, 1643,
	405, 1643,
	406, 1643,
	407, 1643,
	408, 1643,
	409, 1643,
	410, 1643,
	411, 1643,
	413, 1643,
	415, 1643,
	416, 1643,
	417, 1643,
	423, 1643,
	424, 1643,
	426, 1643,
	427, 1643,
	428, 1643,
	429, 1643,
	430, 1643,
	431, 1643,
	432, 1643,
	433, 1643,
	434, 1643,
	435, 1643,
	437, 1643,
	438, 1643,
	439, 1643,
	441, 1643,
	442, 1643,
	443, 1643,
	444, 1643,
	445, 1643,
	446, 1643,
	447, 1643,
	449, 1643,
	450, 1643,
	451, 1643,
	452, 1643,
	453, 1643,
	454, 1643,
	455, 1643,
	456, 1643,
	457, 1643,
	458, 1643,
	459, 1643,
	460, 1643,
	462, 1643,
	463, 1643,
	464, 1643,
	465, 1643,
	466, 1643,
	467, 1643,
	469, 1643,
	470, 1643,
	471, 1643,
	472, 1643,
	473, 1643,
	474, 1643,
	476, 1643,
	477, 1643,
	478, 1643,
	479, 1643,
	480, 1643,
	481, 1643,
	482, 1643,
	483, 1643,
	485, 1643,
	487, 1643,
	488, 1643,
	489, 1643,
	490, 1643,
	491, 1643,
	492, 1643,
	493, 1643,
	494, 1643,
	495, 1643,
	496, 1643,
	497, 1643,
	498, 1643,
	499, 1643,
	500, 1643,
	501, 1643,
	502, 1643,
	503, 1643,
	505, 1643,
	506, 1643,
	508, 1643,
	509, 1643,
	511, 1643,
	512, 1643,
	513, 1643,
	514, 1643,
	515, 1643,
	516, 1643,
	517, 1643,
	518, 1643,
	520, 1643,
	521, 1643,
	522, 1643,
	523, 1643,
	524, 1643,
	526, 1643,
	528, 1643,
	529, 1643,
	530, 1643,
	531, 1643,
	532, 1643,
	533, 1643,
	535, 1643,
	536, 1643,
	537, 1643,
	538, 1643,
	540, 1643,
	541, 1643,
	544, 1643,
	545, 1643,
	546, 1643,
	547, 1643,
	548, 1643,
	549, 1643,
	550, 1643,
	552, 1643,
	555, 1643,
	556, 1643,
	557, 1643,
	558, 1643,
	559, 1643,
	560, 1643,
	562, 1643,
	563, 1643,
	564, 1643,
	565, 1643,
	566, 1643,
	567, 1643,
	568, 1643,
	573, 1643,
	574, 1643,
	575, 1643,
	576, 1643,
	577, 1643,
	578, 1643,
	-2, 0,
	-1, 158,
	1, 1491,
	131, 1491,
	251, 1491,
	336, 1491,
	396, 1491,
	405, 1491,
	582, 1491,
	612, 1491,
	-2, 0,
	-1, 160,
	1, 1491,
	612, 1491,
	-2, 0,
	-1, 161,
	1, 1491,
	612, 1491,
	-2, 0,
	-1, 162,
	1, 1491,
	525, 1491,
	612, 1491,
	-2, 0,
	-1, 194,
	152, 1611,
	172, 1611,
	185, 1611,
	243, 1611,
	276, 1611,
	348, 1611,
	359, 1611,
	542, 1611,
	-2, 1586,
	-1, 241,
	4, 1650,
	5, 1650,
	6, 1650,
	7, 1650,
	8, 1650,
	9, 1650,
	10, 1650,
	21, 1650,
	22, 1650,
	23, 1650,
	24, 1650,
	25, 1650,
	26, 1650,
	27, 1650,
	29, 1650,
	30, 1650,
	36, 1650,
	37, 1650,
	41, 1650,
	42, 1650,
	43, 1650,
	44, 1650,
	45, 1650,
	46, 1650,
	47, 1650,
	48, 1650,
	49, 1650,
	50, 1650,
	51, 1650,
	53, 1650,
	54, 1650,
	55, 1650,
	56, 1650,
	58, 1650,
	59, 1650,
	60, 1650,
	61, 1650,
	62, 1650,
	63, 1650,
	64, 1650,
	65, 1650,
	66, 1650,
	67, 1650,
	68, 1650,
	69, 1650,
	70, 1650,
	71, 1650,
	73, 1650,
	74, 1650,
	75, 1650,
	77, 1650,
	79, 1650,
	80, 1650,
	81, 1650,
	82, 1650,
	83, 1650,
	84, 1650,
	85, 1650,
	88, 1650,
	89, 1650,
	90, 1650,
	91, 1650,
	92, 1650,
	94, 1650,
	96, 1650,
	97, 1650,
	98, 1650,
	99, 1650,
	100, 1650,
	101, 1650,
	103, 1650,
	104, 1650,
	105, 1650,
	106, 1650,
	107, 1650,
	108, 1650,
	109, 1650,
	110, 1650,
	111, 1650,
	112, 1650,
	113, 1650,
	114, 1650,
	115, 1650,
	116, 1650,
	117, 1650,
	118, 1650,
	119, 1650,
	120, 1650,
	121, 1650,
	122, 1650,
	123, 1650,
	124, 1650,
	125, 1650,
	126, 1650,
	127, 1650,
	128, 1650,
	129, 1650,
	130, 1650,
	132, 1650,
	133, 1650,
	134, 1650,
	136, 1650,
	137, 1650,
	138, 1650,
	141, 1650,
	142, 1650,
	143, 1650,
	145, 1650,
	146, 1650,
	147, 1650,
	149, 1650,
	150, 1650,
	151, 1650,
	153, 1650,
	154, 1650,
	155, 1650,
	156, 1650,
	157, 1650,
	158, 1650,
	159, 1650,
	160, 1650,
	161, 1650,
	162, 1650,
	163, 1650,
	164, 1650,
	165, 1650,
	166, 1650,
	167, 1650,
	168, 1650,
	169, 1650,
	170, 1650,
	171, 1650,
	177, 1650,
	178, 1650,
	179, 1650,
	180, 1650,
	184, 1650,
	186, 1650,
	187, 1650,
	188, 1650,
	191, 1650,
	192, 1650,
	193, 1650,
	194, 1650,
	195, 1650,
	196, 1650,
	197, 1650,
	198, 1650,
	199, 1650,
	200, 1650,
	201, 1650,
	202, 1650,
	203, 1650,
	204, 1650,
	205, 1650,
	207, 1650,
	208, 1650,
	210, 1650,
	211, 1650,
	213, 1650,
	214, 1650,
	215, 1650,
	216, 1650,
	217, 1650,
	218, 1650,
	219, 1650,
	220, 1650,
	221, 1650,
	222, 1650,
	223, 1650,
	224, 1650,
	226, 1650,
	227, 1650,
	228, 1650,
	229, 1650,
	230, 1650,
	234, 1650,
	235, 1650,
	236, 1650,
	237, 1650,
	239, 1650,
	240, 1650,
	241, 1650,
	242, 1650,
	244, 1650,
	246, 1650,
	247, 1650,
	248, 1650,
	249, 1650,
	250, 1650,
	251, 1650,
	252, 1650,
	253, 1650,
	254, 1650,
	255, 1650,
	259, 1650,
	260, 1650,
	261, 1650,
	262, 1650,
	263, 1650,
	264, 1650,
	266, 1650,
	267, 1650,
	268, 1650,
	270, 1650,
	271, 1650,
	272, 1650,
	273, 1650,
	274, 1650,
	275, 1650,
	277, 1650,
	278, 1650,
	279, 1650,
	280, 1650,
	281, 1650,
	282, 1650,
	283, 1650,
	284, 1650,
	285, 1650,
	286, 1650,
	287, 1650,
	288, 1650,
	289, 1650,
	291, 1650,
	292, 1650,
	293, 1650,
	294, 1650,
	295, 1650,
	296, 1650,
	297, 1650,
	298, 1650,
	299, 1650,
	300, 1650,
	301, 1650,
	302, 1650,
	303, 1650,
	304, 1650,
	305, 1650,
	306, 1650,
	307, 1650,
	308, 1650,
	309, 1650,
	310, 1650,
	311, 1650,
	312, 1650,
	314, 1650,
	315, 1650,
	316, 1650,
	317, 1650,
	318, 1650,
	319, 1650,
	320, 1650,
	321, 1650,
	322, 1650,
	323, 1650,
	324, 1650,
	325, 1650,
	326, 1650,
	327, 1650,
	328, 1650,
	329, 1650,
	330, 1650,
	331, 1650,
	332, 1650,
	333, 1650,
	334, 1650,
	335, 1650,
	336, 1650,
	337, 1650,
	338, 1650,
	339, 1650,
	340, 1650,
	341, 1650,
	342, 1650,
	343, 1650,
	344, 1650,
	345, 1650,
	346, 1650,
	347, 1650,
	350, 1650,
	352, 1650,
	355, 1650,
	356, 1650,
	357, 1650,
	360, 1650,
	361, 1650,
	362, 1650,
	363, 1650,
	364, 1650,
	365, 1650,
	366, 1650,
	367, 1650,
	368, 1650,
	369, 1650,
	370, 1650,
	371, 1650,
	372, 1650,
	373, 1650,
	374, 1650,
	375, 1650,
	376, 1650,
	377, 1650,
	378, 1650,
	380, 1650,
	381, 1650,
	382, 1650,
	383, 1650,
	384, 1650,
	385, 1650,
	386, 1650,
	387, 1650,
	388, 1650,
	389, 1650,
	390, 1650,
	391, 1650,
	392, 1650,
	393, 1650,
	394, 1650,
	396, 1650,
	397, 1650,
	399, 1650,
	400, 1650,
	401, 1650,
	402, 1650,
	403, 1650,
	404, 1650,
	405, 1650,
	406, 1650,
	407, 1650,
	408, 1650,
	409, 1650,
	410, 1650,
	411, 1650,
	413, 1650,
	415, 1650,
	416, 1650,
	417, 1650,
	423, 1650,
	424, 1650,
	426, 1650,
	427, 1650,
	428, 1650,
	429, 1650,
	430, 1650,
	431, 1650,
	432, 1650,
	433, 1650,
	434, 1650,
	435, 1650,
	437, 1650,
	438, 1650,
	439, 1650,
	440, 1650,
	441, 1650,
	442, 1650,
	443, 1650,
	444, 1650,
	445, 1650,
	446, 1650,
	447, 1650,
	449, 1650,
	450, 1650,
	451, 1650,
	452, 1650,
	453, 1650,
	454, 1650,
	455, 1650,
	456, 1650,
	457, 1650,
	458, 1650,
	459, 1650,
	460, 1650,
	462, 1650,
	463, 1650,
	464, 1650,
	465, 1650,
	466, 1650,
	467, 1650,
	468, 1650,
	469, 1650,
	470, 1650,
	471, 1650,
	472, 1650,
	473, 1650,
	474, 1650,
	475, 1650,
	476, 1650,
	477, 1650,
	478, 1650,
	479, 1650,
	480, 1650,
	481, 1650,
	482, 1650,
	483, 1650,
	485, 1650,
	487, 1650,
	488, 1650,
	489, 1650,
	490, 1650,
	491, 1650,
	492, 1650,
	493, 1650,
	494, 1650,
	495, 1650,
	496, 1650,
	497, 1650,
	498, 1650,
	499, 1650,
	500, 1650,
	501, 1650,
	502, 1650,
	503, 1650,
	505, 1650,
	506, 1650,
	507, 1650,
	508, 1650,
	509, 1650,
	511, 1650,
	512, 1650,
	513, 1650,
	514, 1650,
	515, 1650,
	516, 1650,
	517, 1650,
	518, 1650,
	520, 1650,
	521, 1650,
	522, 1650,
	523, 1650,
	524, 1650,
	526, 1650,
	528, 1650,
	529, 1650,
	530, 1650,
	531, 1650,
	532, 1650,
	533, 1650,
	534, 1650,
	535, 1650,
	536, 1650,
	537, 1650,
	538, 1650,
	540, 1650,
	541, 1650,
	543, 1650,
	544, 1650,
	545, 1650,
	546, 1650,
	547, 1650,
	548, 1650,
	549, 1650,
	550, 1650,
	551, 1650,
	552, 1650,
	555, 1650,
	556, 1650,
	557, 1650,
	558, 1650,
	559, 1650,
	560, 1650,
	562, 1650,
	563, 1650,
	564, 1650,
	565, 1650,
	566, 1650,
	567, 1650,
	568, 1650,
	573, 1650,
	574, 1650,
	575, 1650,
	576, 1650,
	577, 1650,
	578, 1650,
	579, 1650,
	592, 1650,
	599, 1650,
	600, 1650,
	601, 1650,
	609, 1650,
	613, 1650,
	-2, 0,
	-1, 762,
	4, 1372,
	21, 1372,
	22, 1372,
	23, 1372,
	24, 1372,
	25, 1372,
	26, 1372,
	27, 1372,
	29, 1372,
	30, 1372,
	36, 1372,
	41, 1372,
	42, 1372,
	44, 1372,
	45, 1372,
	46, 1372,
	47, 1372,
	48, 1372,
	49, 1372,
	50, 1372,
	51, 1372,
	53, 1372,
	54, 1372,
	55, 1372,
	56, 1372,
	58, 1372,
	59, 1372,
	60, 1372,
	61, 1372,
	62, 1372,
	63, 1372,
	64, 1372,
	68, 1372,
	69, 1372,
	70, 1372,
	71, 1372,
	73, 1372,
	74, 1372,
	75, 1372,
	79, 1372,
	80, 1372,
	81, 1372,
	82, 1372,
	83, 1372,
	84, 1372,
	85, 1372,
	88, 1372,
	89, 1372,
	90, 1372,
	91, 1372,
	92, 1372,
	94, 1372,
	96, 1372,
	97, 1372,
	98, 1372,
	99, 1372,
	100, 1372,
	101, 1372,
	103, 1372,
	104, 1372,
	105, 1372,
	107, 1372,
	108, 1372,
	109, 1372,
	117, 1372,
	118, 1372,
	119, 1372,
	120, 1372,
	121, 1372,
	123, 1372,
	124, 1372,
	125, 1372,
	126, 1372,
	128, 1372,
	129, 1372,
	130, 1372,
	132, 1372,
	133, 1372,
	134, 1372,
	136, 1372,
	137, 1372,
	138, 1372,
	141, 1372,
	142, 1372,
	143, 1372,
	145, 1372,
	146, 1372,
	147, 1372,
	149, 1372,
	150, 1372,
	151, 1372,
	153, 1372,
	154, 1372,
	155, 1372,
	156, 1372,
	157, 1372,
	158, 1372,
	159, 1372,
	160, 1372,
	161, 1372,
	162, 1372,
	163, 1372,
	164, 1372,
	165, 1372,
	166, 1372,
	167, 1372,
	168, 1372,
	169, 1372,
	171, 1372,
	177, 1372,
	178, 1372,
	179, 1372,
	180, 1372,
	184, 1372,
	186, 1372,
	187, 1372,
	188, 1372,
	192, 1372,
	193, 1372,
	194, 1372,
	195, 1372,
	196, 1372,
	197, 1372,
	198, 1372,
	199, 1372,
	200, 1372,
	201, 1372,
	202, 1372,
	203, 1372,
	204, 1372,
	205, 1372,
	207, 1372,
	208, 1372,
	210, 1372,
	211, 1372,
	213, 1372,
	214, 1372,
	215, 1372,
	216, 1372,
	217, 1372,
	218, 1372,
	219, 1372,
	220, 1372,
	221, 1372,
	223, 1372,
	224, 1372,
	226, 1372,
	227, 1372,
	228, 1372,
	229, 1372,
	230, 1372,
	234, 1372,
	235, 1372,
	236, 1372,
	237, 1372,
	240, 1372,
	241, 1372,
	242, 1372,
	244, 1372,
	246, 1372,
	247, 1372,
	249, 1372,
	251, 1372,
	252, 1372,
	253, 1372,
	255, 1372,
	259, 1372,
	260, 1372,
	261, 1372,
	262, 1372,
	263, 1372,
	264, 1372,
	266, 1372,
	267, 1372,
	268, 1372,
	270, 1372,
	271, 1372,
	273, 1372,
	274, 1372,
	277, 1372,
	278, 1372,
	279, 1372,
	280, 1372,
	281, 1372,
	282, 1372,
	283, 1372,
	286, 1372,
	287, 1372,
	288, 1372,
	289, 1372,
	291, 1372,
	292, 1372,
	293, 1372,
	294, 1372,
	295, 1372,
	296, 1372,
	297, 1372,
	298, 1372,
	299, 1372,
	300, 1372,
	301, 1372,
	302, 1372,
	303, 1372,
	304, 1372,
	305, 1372,
	306, 1372,
	307, 1372,
	308, 1372,
	309, 1372,
	310, 1372,
	311, 1372,
	312, 1372,
	314, 1372,
	316, 1372,
	317, 1372,
	318, 1372,
	319, 1372,
	320, 1372,
	321, 1372,
	322, 1372,
	323, 1372,
	324, 1372,
	325, 1372,
	326, 1372,
	327, 1372,
	328, 1372,
	329, 1372,
	330, 1372,
	331, 1372,
	332, 1372,
	334, 1372,
	335, 1372,
	337, 1372,
	339, 1372,
	340, 1372,
	341, 1372,
	343, 1372,
	344, 1372,
	345, 1372,
	346, 1372,
	347, 1372,
	350, 1372,
	352, 1372,
	355, 1372,
	356, 1372,
	357, 1372,
	360, 1372,
	361, 1372,
	362, 1372,
	364, 1372,
	366, 1372,
	367, 1372,
	368, 1372,
	369, 1372,
	370, 1372,
	371, 1372,
	372, 1372,
	373, 1372,
	374, 1372,
	375, 1372,
	376, 1372,
	377, 1372,
	378, 1372,
	380, 1372,
	381, 1372,
	382, 1372,
	383, 1372,
	384, 1372,
	385, 1372,
	386, 1372,
	387, 1372,
	388, 1372,
	389, 1372,
	390, 1372,
	391, 1372,
	392, 1372,
	393, 1372,
	394, 1372,
	396, 1372,
	397, 1372,
	399, 1372,
	400, 1372,
	401, 1372,
	402, 1372,
	403, 1372,
	404, 1372,
	405, 1372,
	406, 1372,
	407, 1372,
	408, 1372,
	409, 1372,
	410, 1372,
	411, 1372,
	413, 1372,
	415, 1372,
	416, 1372,
	417, 1372,
	423, 1372,
	424, 1372,
	426, 1372,
	427, 1372,
	428, 1372,
	429, 1372,
	430, 1372,
	431, 1372,
	432, 1372,
	433, 1372,
	434, 1372,
	435, 1372,
	437, 1372,
	438, 1372,
	439, 1372,
	441, 1372,
	442, 1372,
	443, 1372,
	444, 1372,
	445, 1372,
	446, 1372,
	447, 1372,
	449, 1372,
	450, 1372,
	451, 1372,
	452, 1372,
	453, 1372,
	454, 1372,
	455, 1372,
	456, 1372,
	457, 1372,
	458, 1372,
	459, 1372,
	460, 1372,
	462, 1372,
	463, 1372,
	464, 1372,
	465, 1372,
	466, 1372,
	467, 1372,
	469, 1372,
	470, 1372,
	471, 1372,
	472, 1372,
	473, 1372,
	474, 1372,
	476, 1372,
	477, 1372,
	478, 1372,
	479, 1372,
	480, 1372,
	481, 1372,
	482, 1372,
	483, 1372,
	485, 1372,
	487, 1372,
	488, 1372,
	489, 1372,
	490, 1372,
	491, 1372,
	492, 1372,
	493, 1372,
	494, 1372,
	495, 1372,
	496, 1372,
	497, 1372,
	498, 1372,
	499, 1372,
	500, 1372,
	501, 1372,
	502, 1372,
	503, 1372,
	505, 1372,
	506, 1372,
	508, 1372,
	509, 1372,
	511, 1372,
	512, 1372,
	513, 1372,
	514, 1372,
	515, 1372,
	516, 1372,
	517, 1372,
	518, 1372,
	520, 1372,
	521, 1372,
	522, 1372,
	523, 1372,
	524, 1372,
	526, 1372,
	528, 1372,
	529, 1372,
	530, 1372,
	531, 1372,
	532, 1372,
	533, 1372,
	535, 1372,
	536, 1372,
	537, 1372,
	538, 1372,
	540, 1372,
	541, 1372,
	544, 1372,
	545, 1372,
	546, 1372,
	547, 1372,
	548, 1372,
	549, 1372,
	550, 1372,
	552, 1372,
	555, 1372,
	556, 1372,
	557, 1372,
	558, 1372,
	559, 1372,
	560, 1372,
	562, 1372,
	563, 1372,
	564, 1372,
	565, 1372,
	566, 1372,
	567, 1372,
	568, 1372,
	573, 1372,
	574, 1372,
	575, 1372,
	576, 1372,
	577, 1372,
	578, 1372,
	-2, 0,
	-1, 781,
	190, 2442,
	525, 2442,
	591, 2442,
	611, 2442,
	-2, 0,
	-1, 782,
	190, 2429,
	525, 2429,
	591, 2429,
	611, 2429,
	-2, 0,
	-1, 784,
	190, 2698,
	525, 2698,
	591, 2698,
	611, 2698,
	-2, 0,
	-1, 787,
	190, 2554,
	525, 2554,
	591, 2554,
	611, 2554,
	-2, 0,
	-1, 788,
	190, 2740,
	525, 2740,
	591, 2740,
	611, 2740,
	-2, 0,
	-1, 796,
	190, 2581,
	525, 2581,
	591, 2581,
	611, 2581,
	-2, 741,
	-1, 833,
	611, 2378,
	614, 2378,
	-2, 1041,
	-1, 834,
	611, 2380,
	614, 2380,
	-2, 1042,
	-1, 835,
	611, 2379,
	614, 2379,
	-2, 1043,
	-1, 836,
	614, 2304,
	-2, 1044,
	-1, 861,
	185, 273,
	-2, 0,
	-1, 885,
	43, 2351,
	-2, 0,
	-1, 886,
	562, 1350,
	-2, 1124,
	-1, 902,
	4, 1784,
	21, 1784,
	22, 1784,
	23, 1784,
	24, 1784,
	25, 1784,
	26, 1784,
	27, 1784,
	29, 1784,
	30, 1784,
	36, 1784,
	41, 1784,
	42, 1784,
	44, 1784,
	45, 1784,
	46, 1784,
	47, 1784,
	48, 1784,
	49, 1784,
	50, 1784,
	51, 1784,
	53, 1784,
	54, 1784,
	55, 1784,
	56, 1784,
	58, 1784,
	59, 1784,
	60, 1784,
	61, 1784,
	62, 1784,
	63, 1784,
	64, 1784,
	68, 1784,
	69, 1784,
	70, 1784,
	71, 1784,
	73, 1784,
	74, 1784,
	75, 1784,
	79, 1784,
	80, 1784,
	81, 1784,
	82, 1784,
	83, 1784,
	84, 1784,
	85, 1784,
	88, 1784,
	89, 1784,
	90, 1784,
	91, 1784,
	92, 1784,
	94, 1784,
	96, 1784,
	97, 1784,
	98, 1784,
	99, 1784,
	100, 1784,
	101, 1784,
	103, 1784,
	104, 1784,
	105, 1784,
	107, 1784,
	108, 1784,
	109, 1784,
	117, 1784,
	118, 1784,
	119, 1784,
	120, 1784,
	121, 1784,
	123, 1784,
	124, 1784,
	125, 1784,
	126, 1784,
	128, 1784,
	129, 1784,
	130, 1784,
	132, 1784,
	133, 1784,
	134, 1784,
	136, 1784,
	137, 1784,
	138, 1784,
	141, 1784,
	142, 1784,
	143, 1784,
	145, 1784,
	146, 1784,
	147, 1784,
	149, 1784,
	150, 1784,
	151, 1784,
	153, 1784,
	154, 1784,
	155, 1784,
	156, 1784,
	157, 1784,
	158, 1784,
	159, 1784,
	160, 1784,
	161, 1784,
	162, 1784,
	163, 1784,
	164, 1784,
	165, 1784,
	166, 1784,
	167, 1784,
	168, 1784,
	169, 1784,
	171, 1784,
	177, 1784,
	178, 1784,
	179, 1784,
	180, 1784,
	184, 1784,
	186, 1784,
	187, 1784,
	188, 1784,
	192, 1784,
	193, 1784,
	194, 1784,
	195, 1784,
	196, 1784,
	197, 1784,
	198, 1784,
	199, 1784,
	200, 1784,
	201, 1784,
	202, 1784,
	203, 1784,
	204, 1784,
	205, 1784,
	207, 1784,
	208, 1784,
	210, 1784,
	211, 1784,
	213, 1784,
	214, 1784,
	215, 1784,
	216, 1784,
	217, 1784,
	218, 1784,
	219, 1784,
	220, 1784,
	221, 1784,
	223, 1784,
	224, 1784,
	226, 1784,
	227, 1784,
	228, 1784,
	229, 1784,
	230, 1784,
	234, 1784,
	235, 1784,
	236, 1784,
	237, 1784,
	240, 1784,
	241, 1784,
	242, 1784,
	244, 1784,
	246, 1784,
	247, 1784,
	249, 1784,
	251, 1784,
	252, 1784,
	253, 1784,
	255, 1784,
	259, 1784,
	260, 1784,
	261, 1784,
	262, 1784,
	263, 1784,
	264, 1784,
	266, 1784,
	267, 1784,
	268, 1784,
	270, 1784,
	271, 1784,
	273, 1784,
	274, 1784,
	277, 1784,
	278, 1784,
	279, 1784,
	280, 1784,
	281, 1784,
	282, 1784,
	283, 1784,
	286, 1784,
	287, 1784,
	288, 1784,
	289, 1784,
	291, 1784,
	292, 1784,
	293, 1784,
	294, 1784,
	295, 1784,
	296, 1784,
	297, 1784,
	298, 1784,
	299, 1784,
	300, 1784,
	301, 1784,
	302, 1784,
	303, 1784,
	304, 1784,
	305, 1784,
	306, 1784,
	307, 1784,
	308, 1784,
	309, 1784,
	310, 1784,
	311, 1784,
	312, 1784,
	314, 1784,
	316, 1784,
	317, 1784,
	318, 1784,
	319, 1784,
	320, 1784,
	321, 1784,
	322, 1784,
	323, 1784,
	324, 1784,
	325, 1784,
	326, 1784,
	327, 1784,
	328, 1784,
	329, 1784,
	330, 1784,
	331, 1784,
	332, 1784,
	334, 1784,
	335, 1784,
	337, 1784,
	339, 1784,
	340, 1784,
	341, 1784,
	343, 1784,
	344, 1784,
	345, 1784,
	346, 1784,
	347, 1784,
	350, 1784,
	352, 1784,
	355, 1784,
	356, 1784,
	357, 1784,
	360, 1784,
	361, 1784,
	362, 1784,
	364, 1784,
	366, 1784,
	367, 1784,
	368, 1784,
	369, 1784,
	370, 1784,
	371, 1784,
	372, 1784,
	373, 1784,
	374, 1784,
	375, 1784,
	376, 1784,
	377, 1784,
	378, 1784,
	380, 1784,
	381, 1784,
	382, 1784,
	383, 1784,
	384, 1784,
	385, 1784,
	386, 1784,
	387, 1784,
	388, 1784,
	389, 1784,
	390, 1784,
	391, 1784,
	392, 1784,
	393, 1784,
	394, 1784,
	396, 1784,
	397, 1784,
	399, 1784,
	400, 1784,
	401, 1784,
	402, 1784,
	403, 1784,
	404, 1784,
	405, 1784,
	406, 1784,
	407, 1784,
	408, 1784,
	409, 1784,
	410, 1784,
	411, 1784,
	413, 1784,
	415, 1784,
	416, 1784,
	417, 1784,
	423, 1784,
	424, 1784,
	426, 1784,
	427, 1784,
	428, 1784,
	429, 1784,
	430, 1784,
	431, 1784,
	432, 1784,
	433, 1784,
	434, 1784,
	435, 1784,
	437, 1784,
	438, 1784,
	439, 1784,
	441, 1784,
	442, 1784,
	443, 1784,
	444, 1784,
	445, 1784,
	446, 1784,
	447, 1784,
	449, 1784,
	450, 1784,
	451, 1784,
	452, 1784,
	453, 1784,
	454, 1784,
	455, 1784,
	456, 1784,
	457, 1784,
	458, 1784,
	459, 1784,
	460, 1784,
	462, 1784,
	463, 1784,
	464, 1784,
	465, 1784,
	466, 1784,
	467, 1784,
	469, 1784,
	470, 1784,
	471, 1784,
	472, 1784,
	473, 1784,
	474, 1784,
	476, 1784,
	477, 1784,
	478, 1784,
	479, 1784,
	480, 1784,
	481, 1784,
	482, 1784,
	483, 1784,
	485, 1784,
	487, 1784,
	488, 1784,
	489, 1784,
	490, 1784,
	491, 1784,
	492, 1784,
	493, 1784,
	494, 1784,
	495, 1784,
	496, 1784,
	497, 1784,
	498, 1784,
	499, 1784,
	500, 1784,
	501, 1784,
	502, 1784,
	503, 1784,
	505, 1784,
	506, 1784,
	508, 1784,
	509, 1784,
	511, 1784,
	512, 1784,
	513, 1784,
	514, 1784,
	515, 1784,
	516, 1784,
	517, 1784,
	518, 1784,
	520, 1784,
	521, 1784,
	522, 1784,
	523, 1784,
	524, 1784,
	526, 1784,
	528, 1784,
	529, 1784,
	530, 1784,
	531, 1784,
	532, 1784,
	533, 1784,
	535, 1784,
	536, 1784,
	537, 1784,
	538, 1784,
	540, 1784,
	541, 1784,
	544, 1784,
	545, 1784,
	546, 1784,
	547, 1784,
	548, 1784,
	549, 1784,
	550, 1784,
	552, 1784,
	555, 1784,
	556, 1784,
	557, 1784,
	558, 1784,
	559, 1784,
	560, 1784,
	562, 1784,
	563, 1784,
	564, 1784,
	565, 1784,
	566, 1784,
	567, 1784,
	568, 1784,
	573, 1784,
	574, 1784,
	575, 1784,
	576, 1784,
	577, 1784,
	578, 1784,
	-2, 0,
	-1, 912,
	263, 428,
	-2, 0,
	-1, 990,
	401, 921,
	467, 921,
	509, 921,
	530, 921,
	-2, 0,
	-1, 991,
	401, 920,
	467, 920,
	509, 920,
	530, 920,
	-2, 852,
	-1, 995,
	1, 973,
	608, 973,
	610, 973,
	612, 973,
	-2, 0,
	-1, 997,
	1, 895,
	608, 895,
	610, 895,
	612, 895,
	-2, 0,
	-1, 998,
	1, 899,
	608, 899,
	610, 899,
	612, 899,
	-2, 0,
	-1, 999,
	1, 1040,
	185, 1040,
	608, 1040,
	610, 1040,
	612, 1040,
	-2, 0,
	-1, 1007,
	1, 926,
	608, 926,
	610, 926,
	612, 926,
	-2, 0,
	-1, 1014,
	1, 973,
	608, 973,
	610, 973,
	612, 973,
	-2, 0,
	-1, 1015,
	1, 975,
	608, 975,
	610, 975,
	612, 975,
	-2, 0,
	-1, 1016,
	1, 978,
	608, 978,
	610, 978,
	612, 978,
	-2, 0,
	-1, 1022,
	1, 1004,
	608, 1004,
	610, 1004,
	612, 1004,
	-2, 0,
	-1, 1023,
	1, 1006,
	608, 1006,
	610, 1006,
	612, 1006,
	-2, 0,
	-1, 1028,
	1, 1034,
	608, 1034,
	610, 1034,
	612, 1034,
	-2, 0,
	-1, 1082,
	172, 1654,
	185, 1654,
	276, 1654,
	348, 1654,
	-2, 1590,
	-1, 1098,
	172, 1653,
	185, 1653,
	276, 1653,
	348, 1653,
	-2, 1587,
	-1, 1125,
	611, 2377,
	-2, 749,
	-1, 1154,
	5, 2369,
	609, 2367,
	-2, 2358,
	-1, 1162,
	5, 2390,
	609, 2387,
	-2, 2378,
	-1, 1163,
	5, 2391,
	609, 2388,
	-2, 2379,
	-1, 1171,
	611, 2375,
	-2, 2357,
	-1, 1172,
	609, 2825,
	-2, 2376,
	-1, 1195,
	609, 2824,
	-2, 2392,
	-1, 1196,
	5, 1859,
	-2, 2795,
	-1, 1197,
	5, 1860,
	-2, 2796,
	-1, 1198,
	5, 1861,
	-2, 2810,
	-1, 1199,
	5, 1862,
	-2, 2774,
	-1, 1200,
	5, 1863,
	-2, 2808,
	-1, 1201,
	5, 1871,
	-2, 2787,
	-1, 1202,
	5, 1858,
	-2, 2783,
	-1, 1203,
	5, 1858,
	-2, 2782,
	-1, 1204,
	5, 1858,
	-2, 2801,
	-1, 1205,
	5, 1869,
	-2, 2776,
	-1, 1206,
	5, 1874,
	-2, 2775,
	-1, 1207,
	5, 1876,
	-2, 2820,
	-1, 1210,
	5, 1898,
	-2, 2813,
	-1, 1211,
	5, 1890,
	-2, 2814,
	-1, 1212,
	5, 1898,
	-2, 2815,
	-1, 1213,
	5, 1894,
	-2, 2816,
	-1, 1214,
	5, 1844,
	-2, 2788,
	-1, 1215,
	5, 1845,
	-2, 2789,
	-1, 1216,
	5, 1846,
	-2, 2777,
	-1, 1244,
	5, 1881,
	-2, 2821,
	-1, 1245,
	5, 1882,
	-2, 2811,
	-1, 1246,
	5, 1883,
	563, 1883,
	-2, 2778,
	-1, 1247,
	5, 1884,
	563, 1884,
	-2, 2779,
	-1, 1284,
	609, 2387,
	-2, 2378,
	-1, 1285,
	609, 2388,
	-2, 2379,
	-1, 1383,
	190, 2740,
	525, 2740,
	591, 2740,
	611, 2740,
	-2, 0,
	-1, 1388,
	1, 725,
	612, 725,
	-2, 1499,
	-1, 1518,
	368, 2352,
	426, 2352,
	469, 2352,
	601, 2352,
	-2, 2342,
	-1, 1524,
	190, 133,
	270, 133,
	334, 133,
	568, 133,
	-2, 2736,
	-1, 1525,
	190, 134,
	270, 134,
	334, 134,
	568, 134,
	-2, 2487,
	-1, 1526,
	190, 135,
	270, 135,
	334, 135,
	568, 135,
	-2, 2660,
	-1, 1532,
	613, 2352,
	-2, 2354,
	-1, 1552,
	1, 1347,
	431, 1304,
	469, 1304,
	585, 1304,
	608, 1347,
	610, 1347,
	612, 1347,
	-2, 1639,
	-1, 1558,
	206, 1444,
	225, 1444,
	439, 1444,
	-2, 0,
	-1, 1606,
	409, 1123,
	562, 1123,
	-2, 423,
	-1, 1623,
	43, 2350,
	-2, 1086,
	-1, 1630,
	1, 1347,
	608, 1347,
	610, 1347,
	612, 1347,
	-2, 1639,
	-1, 1638,
	4, 1372,
	21, 1372,
	22, 1372,
	23, 1372,
	24, 1372,
	25, 1372,
	26, 1372,
	27, 1372,
	29, 1372,
	30, 1372,
	36, 1372,
	41, 1372,
	42, 1372,
	44, 1372,
	45, 1372,
	46, 1372,
	47, 1372,
	48, 1372,
	49, 1372,
	50, 1372,
	51, 1372,
	53, 1372,
	54, 1372,
	55, 1372,
	56, 1372,
	58, 1372,
	59, 1372,
	60, 1372,
	61, 1372,
	62, 1372,
	63, 1372,
	64, 1372,
	68, 1372,
	69, 1372,
	70, 1372,
	71, 1372,
	73, 1372,
	74, 1372,
	75, 1372,
	79, 1372,
	80, 1372,
	81, 1372,
	82, 1372,
	83, 1372,
	84, 1372,
	85, 1372,
	88, 1372,
	89, 1372,
	90, 1372,
	91, 1372,
	92, 1372,
	94, 1372,
	96, 1372,
	97, 1372,
	98, 1372,
	99, 1372,
	100, 1372,
	101, 1372,
	103, 1372,
	104, 1372,
	105, 1372,
	107, 1372,
	108, 1372,
	109, 1372,
	117, 1372,
	118, 1372,
	119, 1372,
	120, 1372,
	121, 1372,
	123, 1372,
	124, 1372,
	125, 1372,
	126, 1372,
	128, 1372,
	129, 1372,
	130, 1372,
	132, 1372,
	133, 1372,
	134, 1372,
	136, 1372,
	137, 1372,
	138, 1372,
	141, 1372,
	142, 1372,
	143, 1372,
	145, 1372,
	146, 1372,
	147, 1372,
	149, 1372,
	150, 1372,
	151, 1372,
	153, 1372,
	154, 1372,
	155, 1372,
	156, 1372,
	157, 1372,
	158, 1372,
	159, 1372,
	160, 1372,
	161, 1372,
	162, 1372,
	163, 1372,
	164, 1372,
	165, 1372,
	166, 1372,
	167, 1372,
	168, 1372,
	169, 1372,
	177, 1372,
	178, 1372,
	179, 1372,
	180, 1372,
	184, 1372,
	186, 1372,
	187, 1372,
	188, 1372,
	192, 1372,
	193, 1372,
	194, 1372,
	195, 1372,
	196, 1372,
	197, 1372,
	198, 1372,
	199, 1372,
	200, 1372,
	201, 1372,
	202, 1372,
	203, 1372,
	204, 1372,
	205, 1372,
	207, 1372,
	208, 1372,
	210, 1372,
	211, 1372,
	213, 1372,
	214, 1372,
	215, 1372,
	216, 1372,
	217, 1372,
	218, 1372,
	219, 1372,
	220, 1372,
	221, 1372,
	223, 1372,
	224, 1372,
	226, 1372,
	227, 1372,
	228, 1372,
	229, 1372,
	230, 1372,
	235, 1372,
	236, 1372,
	237, 1372,
	240, 1372,
	241, 1372,
	242, 1372,
	244, 1372,
	246, 1372,
	247, 1372,
	249, 1372,
	251, 1372,
	252, 1372,
	253, 1372,
	255, 1372,
	259, 1372,
	260, 1372,
	261, 1372,
	262, 1372,
	263, 1372,
	264, 1372,
	266, 1372,
	267, 1372,
	268, 1372,
	270, 1372,
	271, 1372,
	273, 1372,
	274, 1372,
	277, 1372,
	278, 1372,
	279, 1372,
	280, 1372,
	281, 1372,
	282, 1372,
	283, 1372,
	286, 1372,
	287, 1372,
	288, 1372,
	289, 1372,
	291, 1372,
	292, 1372,
	293, 1372,
	294, 1372,
	295, 1372,
	296, 1372,
	297, 1372,
	298, 1372,
	299, 1372,
	300, 1372,
	301, 1372,
	302, 1372,
	303, 1372,
	304, 1372,
	305, 1372,
	306, 1372,
	307, 1372,
	308, 1372,
	309, 1372,
	310, 1372,
	311, 1372,
	312, 1372,
	314, 1372,
	316, 1372,
	317, 1372,
	318, 1372,
	319, 1372,
	320, 1372,
	321, 1372,
	322, 1372,
	323, 1372,
	324, 1372,
	325, 1372,
	326, 1372,
	327, 1372,
	328, 1372,
	329, 1372,
	330, 1372,
	331, 1372,
	332, 1372,
	334, 1372,
	335, 1372,
	339, 1372,
	340, 1372,
	341, 1372,
	343, 1372,
	344, 1372,
	345, 1372,
	346, 1372,
	347, 1372,
	350, 1372,
	352, 1372,
	353, 1372,
	355, 1372,
	356, 1372,
	357, 1372,
	360, 1372,
	361, 1372,
	362, 1372,
	364, 1372,
	366, 1372,
	367, 1372,
	368, 1372,
	369, 1372,
	370, 1372,
	371, 1372,
	372, 1372,
	373, 1372,
	374, 1372,
	375, 1372,
	376, 1372,
	377, 1372,
	378, 1372,
	380, 1372,
	381, 1372,
	382, 1372,
	383, 1372,
	384, 1372,
	385, 1372,
	386, 1372,
	387, 1372,
	388, 1372,
	389, 1372,
	390, 1372,
	391, 1372,
	392, 1372,
	393, 1372,
	394, 1372,
	396, 1372,
	397, 1372,
	399, 1372,
	400, 1372,
	401, 1372,
	402, 1372,
	403, 1372,
	404, 1372,
	405, 1372,
	406, 1372,
	407, 1372,
	408, 1372,
	409, 1372,
	410, 1372,
	411, 1372,
	413, 1372,
	415, 1372,
	416, 1372,
	417, 1372,
	423, 1372,
	424, 1372,
	426, 1372,
	427, 1372,
	428, 1372,
	429, 1372,
	430, 1372,
	431, 1372,
	432, 1372,
	433, 1372,
	434, 1372,
	435, 1372,
	437, 1372,
	438, 1372,
	439, 1372,
	441, 1372,
	442, 1372,
	443, 1372,
	444, 1372,
	445, 1372,
	446, 1372,
	447, 1372,
	449, 1372,
	450, 1372,
	451, 1372,
	452, 1372,
	453, 1372,
	454, 1372,
	455, 1372,
	456, 1372,
	457, 1372,
	458, 1372,
	459, 1372,
	460, 1372,
	462, 1372,
	463, 1372,
	464, 1372,
	465, 1372,
	466, 1372,
	467, 1372,
	469, 1372,
	470, 1372,
	471, 1372,
	472, 1372,
	473, 1372,
	474, 1372,
	476, 1372,
	477, 1372,
	478, 1372,
	479, 1372,
	480, 1372,
	481, 1372,
	482, 1372,
	483, 1372,
	485, 1372,
	487, 1372,
	488, 1372,
	489, 1372,
	490, 1372,
	491, 1372,
	492, 1372,
	493, 1372,
	494, 1372,
	495, 1372,
	496, 1372,
	497, 1372,
	498, 1372,
	499, 1372,
	500, 1372,
	501, 1372,
	502, 1372,
	503, 1372,
	505, 1372,
	506, 1372,
	508, 1372,
	509, 1372,
	511, 1372,
	512, 1372,
	513, 1372,
	514, 1372,
	515, 1372,
	516, 1372,
	517, 1372,
	518, 1372,
	520, 1372,
	521, 1372,
	522, 1372,
	523, 1372,
	524, 1372,
	526, 1372,
	528, 1372,
	529, 1372,
	530, 1372,
	531, 1372,
	532, 1372,
	533, 1372,
	535, 1372,
	536, 1372,
	537, 1372,
	538, 1372,
	540, 1372,
	541, 1372,
	544, 1372,
	545, 1372,
	546, 1372,
	547, 1372,
	548, 1372,
	549, 1372,
	550, 1372,
	552, 1372,
	555, 1372,
	556, 1372,
	557, 1372,
	558, 1372,
	559, 1372,
	560, 1372,
	562, 1372,
	563, 1372,
	564, 1372,
	565, 1372,
	566, 1372,
	567, 1372,
	568, 1372,
	573, 1372,
	574, 1372,
	575, 1372,
	576, 1372,
	577, 1372,
	578, 1372,
	-2, 0,
	-1, 1661,
	1, 568,
	608, 568,
	610, 568,
	612, 568,
	-2, 1610,
	-1, 1664,
	4, 2819,
	11, 2819,
	12, 2819,
	14, 2819,
	15, 2819,
	16, 2819,
	17, 2819,
	18, 2819,
	19, 2819,
	21, 2819,
	22, 2819,
	23, 2819,
	24, 2819,
	25, 2819,
	26, 2819,
	27, 2819,
	29, 2819,
	30, 2819,
	33, 2819,
	34, 2819,
	36, 2819,
	38, 2819,
	41, 2819,
	42, 2819,
	44, 2819,
	45, 2819,
	46, 2819,
	47, 2819,
	48, 2819,
	49, 2819,
	50, 2819,
	51, 2819,
	53, 2819,
	54, 2819,
	55, 2819,
	56, 2819,
	58, 2819,
	59, 2819,
	60, 2819,
	61, 2819,
	62, 2819,
	63, 2819,
	64, 2819,
	67, 2819,
	68, 2819,
	69, 2819,
	70, 2819,
	71, 2819,
	73, 2819,
	74, 2819,
	75, 2819,
	76, 2819,
	79, 2819,
	80, 2819,
	81, 2819,
	82, 2819,
	83, 2819,
	84, 2819,
	85, 2819,
	86, 2819,
	88, 2819,
	89, 2819,
	90, 2819,
	91, 2819,
	92, 2819,
	94, 2819,
	95, 2819,
	96, 2819,
	97, 2819,
	98, 2819,
	99, 2819,
	100, 2819,
	101, 2819,
	103, 2819,
	104, 2819,
	105, 2819,
	106, 2819,
	107, 2819,
	108, 2819,
	109, 2819,
	117, 2819,
	118, 2819,
	119, 2819,
	120, 2819,
	121, 2819,
	123, 2819,
	124, 2819,
	125, 2819,
	126, 2819,
	128, 2819,
	129, 2819,
	130, 2819,
	132, 2819,
	133, 2819,
	134, 2819,
	136, 2819,
	137, 2819,
	138, 2819,
	141, 2819,
	142, 2819,
	143, 2819,
	145, 2819,
	146, 2819,
	147, 2819,
	149, 2819,
	150, 2819,
	151, 2819,
	153, 2819,
	154, 2819,
	155, 2819,
	156, 2819,
	157, 2819,
	158, 2819,
	159, 2819,
	160, 2819,
	161, 2819,
	162, 2819,
	163, 2819,
	164, 2819,
	165, 2819,
	166, 2819,
	167, 2819,
	168, 2819,
	169, 2819,
	173, 2819,
	174, 2819,
	175, 2819,
	176, 2819,
	177, 2819,
	178, 2819,
	179, 2819,
	180, 2819,
	183, 2819,
	184, 2819,
	186, 2819,
	187, 2819,
	188, 2819,
	191, 2819,
	192, 2819,
	193, 2819,
	194, 2819,
	195, 2819,
	196, 2819,
	197, 2819,
	198, 2819,
	199, 2819,
	200, 2819,
	201, 2819,
	202, 2819,
	203, 2819,
	204, 2819,
	205, 2819,
	207, 2819,
	208, 2819,
	210, 2819,
	211, 2819,
	213, 2819,
	214, 2819,
	215, 2819,
	216, 2819,
	217, 2819,
	218, 2819,
	219, 2819,
	220, 2819,
	221, 2819,
	222, 2819,
	223, 2819,
	224, 2819,
	225, 2819,
	226, 2819,
	227, 2819,
	228, 2819,
	229, 2819,
	230, 2819,
	232, 2819,
	233, 2819,
	235, 2819,
	236, 2819,
	237, 2819,
	239, 2819,
	240, 2819,
	241, 2819,
	242, 2819,
	244, 2819,
	246, 2819,
	247, 2819,
	248, 2819,
	249, 2819,
	250, 2819,
	251, 2819,
	252, 2819,
	253, 2819,
	254, 2819,
	255, 2819,
	257, 2819,
	258, 2819,
	259, 2819,
	260, 2819,
	261, 2819,
	262, 2819,
	263, 2819,
	264, 2819,
	266, 2819,
	267, 2819,
	268, 2819,
	270, 2819,
	271, 2819,
	272, 2819,
	273, 2819,
	274, 2819,
	275, 2819,
	277, 2819,
	278, 2819,
	279, 2819,
	280, 2819,
	281, 2819,
	282, 2819,
	283, 2819,
	286, 2819,
	287, 2819,
	288, 2819,
	289, 2819,
	290, 2819,
	291, 2819,
	292, 2819,
	293, 2819,
	294, 2819,
	295, 2819,
	296, 2819,
	297, 2819,
	298, 2819,
	299, 2819,
	300, 2819,
	301, 2819,
	302, 2819,
	303, 2819,
	304, 2819,
	305, 2819,
	306, 2819,
	307, 2819,
	308, 2819,
	309, 2819,
	310, 2819,
	311, 2819,
	312, 2819,
	314, 2819,
	315, 2819,
	316, 2819,
	317, 2819,
	318, 2819,
	319, 2819,
	320, 2819,
	321, 2819,
	322, 2819,
	323, 2819,
	324, 2819,
	325, 2819,
	326, 2819,
	327, 2819,
	328, 2819,
	329, 2819,
	330, 2819,
	331, 2819,
	332, 2819,
	334, 2819,
	335, 2819,
	338, 2819,
	339, 2819,
	340, 2819,
	341, 2819,
	343, 2819,
	344, 2819,
	345, 2819,
	346, 2819,
	347, 2819,
	350, 2819,
	352, 2819,
	355, 2819,
	356, 2819,
	357, 2819,
	358, 2819,
	360, 2819,
	361, 2819,
	362, 2819,
	364, 2819,
	366, 2819,
	367, 2819,
	368, 2819,
	369, 2819,
	370, 2819,
	371, 2819,
	372, 2819,
	373, 2819,
	374, 2819,
	375, 2819,
	376, 2819,
	377, 2819,
	378, 2819,
	380, 2819,
	381, 2819,
	382, 2819,
	383, 2819,
	384, 2819,
	385, 2819,
	386, 2819,
	387, 2819,
	388, 2819,
	389, 2819,
	390, 2819,
	391, 2819,
	392, 2819,
	393, 2819,
	394, 2819,
	396, 2819,
	397, 2819,
	399, 2819,
	400, 2819,
	401, 2819,
	402, 2819,
	403, 2819,
	404, 2819,
	405, 2819,
	406, 2819,
	407, 2819,
	408, 2819,
	409, 2819,
	410, 2819,
	411, 2819,
	413, 2819,
	415, 2819,
	416, 2819,
	417, 2819,
	423, 2819,
	424, 2819,
	425, 2819,
	426, 2819,
	427, 2819,
	428, 2819,
	429, 2819,
	430, 2819,
	431, 2819,
	432, 2819,
	433, 2819,
	434, 2819,
	435, 2819,
	437, 2819,
	438, 2819,
	439, 2819,
	440, 2819,
	441, 2819,
	442, 2819,
	443, 2819,
	444, 2819,
	445, 2819,
	446, 2819,
	447, 2819,
	448, 2819,
	449, 2819,
	450, 2819,
	451, 2819,
	452, 2819,
	453, 2819,
	454, 2819,
	455, 2819,
	456, 2819,
	457, 2819,
	458, 2819,
	459, 2819,
	460, 2819,
	462, 2819,
	463, 2819,
	464, 2819,
	465, 2819,
	466, 2819,
	467, 2819,
	469, 2819,
	470, 2819,
	471, 2819,
	472, 2819,
	473, 2819,
	474, 2819,
	475, 2819,
	476, 2819,
	477, 2819,
	478, 2819,
	479, 2819,
	480, 2819,
	481, 2819,
	482, 2819,
	483, 2819,
	485, 2819,
	487, 2819,
	488, 2819,
	489, 2819,
	490, 2819,
	491, 2819,
	492, 2819,
	493, 2819,
	494, 2819,
	495, 2819,
	496, 2819,
	497, 2819,
	498, 2819,
	499, 2819,
	500, 2819,
	501, 2819,
	502, 2819,
	503, 2819,
	505, 2819,
	506, 2819,
	507, 2819,
	508, 2819,
	509, 2819,
	511, 2819,
	512, 2819,
	513, 2819,
	514, 2819,
	515, 2819,
	516, 2819,
	517, 2819,
	518, 2819,
	520, 2819,
	521, 2819,
	522, 2819,
	523, 2819,
	524, 2819,
	526, 2819,
	528, 2819,
	529, 2819,
	530, 2819,
	531, 2819,
	532, 2819,
	533, 2819,
	535, 2819,
	536, 2819,
	537, 2819,
	538, 2819,
	540, 2819,
	541, 2819,
	544, 2819,
	545, 2819,
	546, 2819,
	547, 2819,
	548, 2819,
	549, 2819,
	550, 2819,
	552, 2819,
	555, 2819,
	556, 2819,
	557, 2819,
	558, 2819,
	559, 2819,
	560, 2819,
	562, 2819,
	563, 2819,
	564, 2819,
	565, 2819,
	566, 2819,
	567, 2819,
	568, 2819,
	573, 2819,
	574, 2819,
	575, 2819,
	576, 2819,
	577, 2819,
	578, 2819,
	579, 2819,
	581, 2819,
	589, 2819,
	590, 2819,
	591, 2819,
	592, 2819,
	593, 2819,
	594, 2819,
	596, 2819,
	597, 2819,
	598, 2819,
	599, 2819,
	600, 2819,
	601, 2819,
	602, 2819,
	603, 2819,
	604, 2819,
	607, 2819,
	610, 2819,
	611, 2819,
	613, 2819,
	614, 2819,
	-2, 0,
	-1, 1669,
	190, 2698,
	525, 2698,
	591, 2698,
	611, 2698,
	-2, 0,
	-1, 1723,
	401, 921,
	467, 921,
	509, 921,
	530, 921,
	-2, 0,
	-1, 1734,
	1, 1444,
	608, 1444,
	610, 1444,
	612, 1444,
	-2, 0,
	-1, 1751,
	1, 916,
	608, 916,
	610, 916,
	612, 916,
	-2, 0,
	-1, 1752,
	1, 960,
	608, 960,
	610, 960,
	612, 960,
	-2, 0,
	-1, 1753,
	1, 968,
	608, 968,
	610, 968,
	612, 968,
	-2, 0,
	-1, 1756,
	1, 925,
	608, 925,
	610, 925,
	612, 925,
	-2, 0,
	-1, 1758,
	1, 931,
	608, 931,
	610, 931,
	612, 931,
	-2, 0,
	-1, 1761,
	1, 927,
	608, 927,
	610, 927,
	612, 927,
	-2, 0,
	-1, 1766,
	1, 941,
	608, 941,
	610, 941,
	612, 941,
	-2, 0,
	-1, 1797,
	1, 2681,
	608, 2681,
	610, 2681,
	611, 2681,
	612, 2681,
	-2, 0,
	-1, 1801,
	1, 1015,
	608, 1015,
	610, 1015,
	612, 1015,
	-2, 0,
	-1, 1818,
	1, 1494,
	612, 1494,
	-2, 1499,
	-1, 1821,
	172, 1653,
	185, 1653,
	276, 1653,
	348, 1653,
	-2, 1591,
	-1, 1921,
	152, 1612,
	172, 1612,
	185, 1612,
	243, 1612,
	276, 1612,
	348, 1612,
	359, 1612,
	542, 1612,
	-2, 2063,
	-1, 1982,
	610, 2238,
	-2, 0,
	-1, 2017,
	152, 1612,
	172, 1612,
	185, 1612,
	243, 1612,
	276, 1612,
	348, 1612,
	359, 1612,
	542, 1612,
	-2, 1745,
	-1, 2057,
	525, 2695,
	611, 2695,
	614, 2695,
	-2, 0,
	-1, 2074,
	609, 1886,
	-2, 1874,
	-1, 2106,
	190, 2695,
	611, 2695,
	614, 2695,
	-2, 0,
	-1, 2149,
	1, 727,
	612, 727,
	-2, 1499,
	-1, 2303,
	225, 268,
	-2, 2386,
	-1, 2304,
	225, 269,
	-2, 323,
	-1, 2415,
	1, 918,
	608, 918,
	610, 918,
	612, 918,
	-2, 0,
	-1, 2416,
	1, 962,
	608, 962,
	610, 962,
	612, 962,
	-2, 0,
	-1, 2417,
	1, 970,
	608, 970,
	610, 970,
	612, 970,
	-2, 0,
	-1, 2418,
	1, 1017,
	608, 1017,
	610, 1017,
	612, 1017,
	-2, 0,
	-1, 2459,
	1, 943,
	608, 943,
	610, 943,
	612, 943,
	-2, 0,
	-1, 2479,
	1, 1000,
	608, 1000,
	610, 1000,
	612, 1000,
	-2, 0,
	-1, 2526,
	446, 1680,
	447, 1680,
	-2, 1919,
	-1, 2557,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1939,
	-1, 2558,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1940,
	-1, 2559,
	95, 0,
	257, 0,
	258, 0,
	593, 0,
	594, 0,
	-2, 1941,
	-1, 2560,
	95, 0,
	257, 0,
	258, 0,
	593, 0,
	594, 0,
	-2, 1942,
	-1, 2561,
	95, 0,
	257, 0,
	258, 0,
	593, 0,
	594, 0,
	-2, 1943,
	-1, 2562,
	95, 0,
	257, 0,
	258, 0,
	593, 0,
	594, 0,
	-2, 1944,
	-1, 2563,
	95, 0,
	257, 0,
	258, 0,
	593, 0,
	594, 0,
	-2, 1945,
	-1, 2564,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1946,
	-1, 2576,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1958,
	-1, 2577,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1959,
	-1, 2578,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 1960,
	-1, 2582,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1967,
	-1, 2588,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1971,
	-1, 2590,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1979,
	-1, 2591,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1980,
	-1, 2592,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1981,
	-1, 2593,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1982,
	-1, 2767,
	5, 2390,
	190, 2249,
	609, 2387,
	-2, 2378,
	-1, 2768,
	190, 2250,
	-2, 2770,
	-1, 2769,
	190, 2251,
	-2, 2580,
	-1, 2770,
	190, 2252,
	-2, 2460,
	-1, 2771,
	190, 2253,
	-2, 2518,
	-1, 2772,
	190, 2254,
	-2, 2565,
	-1, 2773,
	190, 2255,
	-2, 2693,
	-1, 2774,
	190, 2256,
	-2, 2046,
	-1, 2845,
	1, 1746,
	2, 1746,
	106, 1746,
	152, 1746,
	172, 1746,
	185, 1746,
	191, 1746,
	209, 1746,
	212, 1746,
	239, 1746,
	243, 1746,
	254, 1746,
	272, 1746,
	276, 1746,
	315, 1746,
	348, 1746,
	353, 1746,
	359, 1746,
	436, 1746,
	440, 1746,
	542, 1746,
	553, 1746,
	570, 1746,
	571, 1746,
	572, 1746,
	582, 1746,
	608, 1746,
	610, 1746,
	612, 1746,
	614, 1746,
	-2, 1745,
	-1, 2858,
	609, 2359,
	-2, 2373,
	-1, 2860,
	1, 340,
	570, 340,
	-2, 1639,
	-1, 2890,
	609, 1885,
	-2, 1875,
	-1, 3092,
	1, 1347,
	431, 1304,
	469, 1304,
	585, 1304,
	608, 1347,
	610, 1347,
	612, 1347,
	-2, 1639,
	-1, 3270,
	354, 1683,
	-2, 2809,
	-1, 3271,
	354, 1684,
	-2, 2678,
	-1, 3275,
	446, 2315,
	447, 2315,
	-2, 2044,
	-1, 3276,
	446, 2319,
	447, 2319,
	-2, 2045,
	-1, 3277,
	446, 2316,
	447, 2316,
	-2, 2044,
	-1, 3278,
	446, 2320,
	447, 2320,
	-2, 2045,
	-1, 3291,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1969,
	-1, 3292,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1973,
	-1, 3298,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1975,
	-1, 3525,
	1, 722,
	608, 722,
	610, 722,
	612, 722,
	-2, 1499,
	-1, 3712,
	43, 2350,
	-2, 1087,
	-1, 3717,
	1, 1347,
	608, 1347,
	610, 1347,
	612, 1347,
	-2, 1639,
	-1, 3824,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 1977,
	-1, 3831,
	248, 0,
	250, 0,
	338, 0,
	-2, 1996,
	-1, 3899,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 2025,
	-1, 3900,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 2026,
	-1, 3901,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 2027,
	-1, 3905,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 2031,
	-1, 3906,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 2032,
	-1, 3907,
	14, 0,
	15, 0,
	16, 0,
	589, 0,
	590, 0,
	591, 0,
	-2, 2033,
	-1, 3955,
	609, 2360,
	-2, 2374,
	-1, 4155,
	611, 2926,
	-2, 1565,
	-1, 4212,
	248, 0,
	250, 0,
	338, 0,
	-2, 1997,
	-1, 4215,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 2000,
	-1, 4216,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 2002,
	-1, 4327,
	611, 2375,
	-2, 1382,
	-1, 4487,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 2001,
	-1, 4488,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 2003,
	-1, 4499,
	248, 0,
	-2, 2036,
	-1, 4686,
	248, 0,
	-2, 2037,
	-1, 4906,
	50, 0,
	222, 0,
	275, 0,
	475, 0,
	579, 0,
	592, 0,
	-2, 2773,
}

const sqlPrivate = 57344

const sqlLast = 139260

var sqlAct = [...]int{
	277, 5024, 4841, 5097, 3178, 3429, 4726, 4734, 3165, 3024,
	4840, 4968, 4952, 1364, 4555, 4905, 4892, 4778, 4918, 5038,
	3700, 4195, 4797, 1567, 4874, 4852, 4831, 2300, 4855, 4919,
	4537, 4655, 4920, 4632, 2999, 2198, 4977, 3701, 4619, 4603,
	4916, 4690, 3864, 4447, 2378, 2956, 3965, 4442, 3816, 4403,
	4376, 1161, 4436, 4904, 4560, 4508, 2536, 4147, 3734, 3135,
	3549, 1277, 4476, 2390, 1288, 4427, 4139, 1356, 1542, 4429,
	4763, 4638, 4324, 3552, 4066, 835, 1108, 3284, 2957, 3190,
	1354, 1830, 4304, 2800, 4452, 3612, 4094, 2605, 3039, 2388,
	3728, 721, 4113, 3685, 4096, 2207, 3674, 2544, 1687, 4323,
	2061, 793, 4504, 835, 3555, 2386, 3765, 1099, 1422, 3767,
	3154, 3124, 3149, 3537, 3692, 2062, 3689, 3538, 1165, 3667,
	3690, 2537, 3151, 3666, 1515, 2023, 3482, 2872, 3958, 3475,
	3539, 3412, 3444, 3452, 1685, 1731, 1361, 914, 4194, 3185,
	3180, 3435, 3166, 3433, 2289, 4251, 732, 3099, 2287, 2283,
	2235, 4953, 3576, 3925, 910, 4, 1992, 2351, 1107, 184,
	3411, 2685, 2838, 2219, 2541, 1929, 832, 4691, 2618, 3268,
	1899, 1968, 1359, 905, 2288, 2683, 3184, 1625, 789, 2840,
	3128, 3063, 2281, 2131, 830, 2256, 2275, 2190, 2263, 2186,
	1158, 3136, 1818, 2129, 1403, 271, 1993, 1333, 1163, 2674,
	2818, 2525, 2602, 270, 2176, 2508, 1662, 836, 2506, 2873,
	1154, 766, 2338, 2012, 2837, 1268, 837, 2278, 3159, 1544,
	2337, 1628, 2981, 2982, 2041, 984, 3693, 2797, 4798, 708,
	2942, 1390, 2677, 730, 1271, 2901, 2002, 2808, 2998, 2009,
	1963, 2827, 2763, 1250, 1285, 1913, 2729, 1831, 194, 2507,
	1832, 2509, 774, 184, 195, 1344, 111, 2655, 1766, 2297,
	785, 1653, 1208, 1751, 1267, 2364, 1562, 1523, 1660, 931,
	841, 2118, 1347, 4969, 2530, 1139, 5025, 725, 844, 44,
	43, 41, 32, 30, 28, 825, 886, 749, 722, 1248,
	734, 1273, 1837, 3321, 1817, 1280, 3315, 1573, 841, 1005,
	887, 3939, 2120, 3940, 2120, 163, 844, 3431, 3966, 4914,
	1566, 2120, 1757, 73, 2120, 46, 45, 2120, 5108, 5100,
	2120, 5088, 2817, 3753, 5087, 2817, 4528, 5057, 2817, 1103,
	74, 4559, 5055, 158, 4998, 4954, 4559, 4944, 2309, 4955,
	4942, 2817, 4525, 4939, 2817, 4936, 79, 4940, 4902, 4937,
	2141, 3743, 2309, 3744, 4901, 4900, 4890, 67, 2309, 3195,
	4559, 4888, 4522, 4883, 48, 4559, 160, 4641, 4878, 4877,
	4278, 4850, 4559, 4559, 1160, 4559, 4817, 4810, 1103, 4809,
	2881, 2817, 1697, 2817, 47, 1265, 88, 4802, 4777, 4774,
	4756, 2309, 2309, 4559, 4393, 4688, 4669, 4634, 4578, 2881,
	4176, 3996, 2309, 4577, 4566, 4565, 4558, 2309, 2309, 4559,
	4559, 1399, 2141, 50, 68, 1251, 1251, 4515, 1092, 4489,
	4463, 2309, 51, 2881, 3195, 3492, 3510, 57, 3753, 1845,
	1846, 4460, 161, 1083, 4371, 3753, 2903, 4351, 2817, 1082,
	49, 2817, 110, 2387, 1399, 1254, 4214, 1255, 94, 107,
	2881, 2138, 1876, 1104, 1283, 3162, 4163, 4157, 4110, 1848,
	3760, 3760, 4111, 4027, 3995, 3950, 94, 4028, 3996, 3951,
	3948, 3932, 1303, 3507, 3949, 2817, 3929, 1678, 3848, 3844,
	3759, 2309, 2309, 2817, 3760, 1901, 2877, 3428, 3423, 1098,
	52, 2817, 2817, 3422, 1847, 1575, 3373, 2817, 3371, 3363,
	3374, 3361, 3372, 3364, 1867, 2817, 3332, 3194, 95, 3330,
	2817, 3195, 2141, 1864, 2138, 3331, 906, 3176, 3175, 2810,
	2926, 2374, 2374, 1587, 2817, 2141, 1252, 2880, 2141, 2870,
	2862, 2881, 2816, 2817, 2309, 2373, 2817, 3283, 1311, 2374,
	2817, 4818, 4692, 73, 4683, 909, 908, 4671, 4641, 3195,
	3929, 2809, 4440, 4393, 2138, 4352, 4176, 4112, 3031, 2941,
	74, 1304, 2212, 2155, 2119, 1575, 1581, 2135, 3130, 4208,
	3382, 3383, 1304, 2308, 3049, 2939, 79, 1988, 1561, 4045,
	3819, 3792, 2010, 3745, 2817, 2268, 1733, 2854, 2853, 2852,
	2851, 1870, 1871, 1872, 1873, 2850, 1256, 1253, 1091, 241,
	1090, 1853, 1089, 3746, 1566, 1088, 241, 1087, 1086, 1845,
	1846, 1085, 1081, 1080, 1079, 1078, 88, 2680, 1279, 1077,
	1076, 1075, 1074, 1073, 1072, 3241, 2712, 1071, 1070, 1069,
	1068, 4454, 1067, 3320, 1066, 1574, 1065, 1064, 1063, 1848,
	1062, 2631, 2632, 2633, 2650, 2651, 2652, 1044, 243, 982,
	1875, 1877, 981, 980, 979, 243, 978, 912, 977, 99,
	1575, 2653, 976, 975, 974, 973, 972, 971, 970, 969,
	49, 2121, 110, 2121, 1847, 1862, 1863, 53, 94, 107,
	2121, 968, 967, 2121, 966, 965, 2121, 964, 963, 2121,
	962, 961, 56, 960, 1901, 2451, 242, 59, 959, 958,
	957, 956, 955, 242, 954, 3382, 3383, 69, 1868, 953,
	2681, 952, 951, 2643, 58, 192, 102, 235, 950, 106,
	949, 948, 2639, 54, 947, 936, 236, 162, 935, 1701,
	934, 4929, 929, 2138, 928, 55, 921, 920, 95, 1586,
	1845, 1846, 3388, 919, 904, 241, 903, 196, 1137, 860,
	2138, 859, 858, 62, 196, 857, 848, 4269, 153, 847,
	846, 845, 809, 241, 2710, 800, 2138, 1366, 1163, 799,
	1848, 241, 798, 780, 159, 4226, 153, 3743, 265, 264,
	263, 1853, 1580, 262, 261, 260, 259, 1898, 258, 241,
	257, 2682, 256, 2679, 243, 1163, 1163, 1163, 1682, 255,
	2644, 2645, 2646, 2647, 254, 1847, 253, 252, 251, 250,
	2638, 249, 243, 1425, 248, 247, 246, 1163, 1575, 157,
	243, 245, 244, 1163, 1547, 2949, 1366, 3975, 3944, 3761,
	3478, 1372, 3426, 3343, 197, 3326, 3317, 3221, 243, 1552,
	3109, 241, 242, 1874, 4456, 2885, 2859, 2696, 2844, 3398,
	1304, 1163, 2141, 1163, 2913, 1163, 235, 2694, 3144, 2498,
	242, 2119, 1547, 2949, 2138, 236, 1869, 2135, 242, 193,
	2501, 1407, 1408, 1409, 235, 2184, 3427, 3388, 1394, 1759,
	2140, 2013, 235, 236, 2648, 2649, 242, 1971, 1366, 99,
	243, 236, 2036, 196, 1970, 4928, 3, 2138, 1940, 1533,
	235, 1630, 1812, 1569, 1845, 1846, 1971, 1411, 1547, 236,
	1844, 196, 1853, 1970, 1287, 1547, 4925, 2641, 4903, 196,
	4695, 4887, 1974, 4550, 1163, 1900, 1163, 1876, 1898, 3382,
	3383, 1547, 4782, 4680, 1848, 4503, 241, 3161, 242, 1264,
	1163, 1969, 1163, 2809, 4674, 192, 102, 4672, 4461, 106,
	4439, 4284, 235, 4249, 2684, 4248, 4242, 4241, 1338, 1341,
	1901, 236, 1304, 4240, 4233, 1565, 1386, 4232, 1931, 1847,
	1634, 1637, 4230, 4225, 1351, 241, 1845, 1846, 4222, 4221,
	4123, 1388, 241, 913, 3398, 243, 4109, 3979, 153, 196,
	1547, 3978, 1281, 3977, 3382, 3383, 3954, 1550, 4033, 1876,
	3920, 1528, 3382, 3383, 3397, 3919, 1848, 3399, 3918, 3840,
	1163, 1865, 1861, 1163, 1858, 1856, 1857, 1849, 1850, 1851,
	1852, 1854, 1855, 3835, 243, 241, 3473, 1418, 1938, 1512,
	1517, 243, 1901, 242, 841, 3419, 2947, 3410, 3381, 3378,
	3377, 1847, 844, 3375, 3370, 1380, 1564, 235, 3369, 157,
	3368, 3365, 3362, 3342, 3325, 1563, 236, 3318, 1623, 1933,
	3382, 3383, 3316, 1898, 197, 1106, 3177, 184, 184, 2845,
	2667, 2678, 242, 1844, 243, 2642, 1853, 1931, 2316, 242,
	2314, 1702, 1665, 1667, 196, 4043, 235, 1843, 1520, 2354,
	5103, 5046, 5045, 235, 241, 236, 4967, 4965, 1898, 193,
	4455, 3388, 236, 2894, 1289, 3866, 3382, 3383, 4842, 3400,
	3401, 3402, 3146, 4124, 1163, 1163, 1163, 1163, 1163, 1163,
	1163, 1163, 242, 907, 4761, 1875, 1877, 1663, 4210, 1932,
	196, 1930, 4746, 4742, 1900, 4741, 235, 4740, 1394, 4720,
	4719, 1394, 3399, 243, 4717, 236, 4694, 1163, 1853, 3424,
	1775, 2946, 4693, 1163, 241, 3393, 3391, 3392, 3384, 3385,
	3386, 3387, 3389, 3390, 1104, 1640, 3388, 1656, 3499, 4667,
	2608, 4653, 4650, 196, 3388, 4649, 4642, 4630, 4629, 4574,
	4545, 3397, 4501, 1868, 4484, 4483, 4423, 4419, 241, 2946,
	1822, 242, 4416, 4394, 4268, 4247, 4177, 1875, 1877, 1851,
	1852, 1854, 1855, 243, 4031, 235, 3470, 4697, 3398, 4030,
	4011, 1707, 4010, 4008, 236, 2946, 2628, 2629, 2630, 2654,
	2640, 2634, 1677, 2636, 2637, 2635, 2622, 2623, 2624, 2625,
	2626, 2627, 3388, 4696, 2711, 3935, 4426, 243, 1696, 4124,
	2614, 3923, 196, 3830, 1918, 3762, 3754, 3720, 3631, 3587,
	3554, 242, 3501, 3347, 3346, 1868, 3341, 241, 1163, 1163,
	1163, 1816, 1898, 3307, 1163, 235, 3123, 2974, 1977, 1976,
	1920, 1285, 1975, 1285, 236, 1972, 1964, 1962, 3388, 2892,
	2891, 3398, 2856, 2849, 2815, 242, 2692, 1898, 1425, 1917,
	241, 1724, 3392, 3384, 3385, 3386, 3387, 3389, 3390, 235,
	1163, 2035, 196, 835, 1366, 1760, 243, 1991, 236, 2079,
	835, 1986, 1366, 2039, 1366, 1985, 1990, 1984, 3145, 1823,
	1983, 1982, 1280, 1981, 1280, 1980, 1979, 1978, 1849, 1850,
	1851, 1852, 1854, 1855, 1898, 1959, 196, 1958, 4280, 243,
	1957, 1869, 1956, 3404, 1955, 1954, 1819, 1999, 1953, 1827,
	1952, 1826, 1951, 1950, 242, 1949, 1083, 1948, 1947, 1946,
	1898, 1945, 1082, 1944, 1933, 1919, 3399, 1916, 235, 2047,
	1911, 1654, 2709, 1379, 1366, 1308, 1821, 236, 3382, 3383,
	1163, 1299, 4218, 2052, 1973, 3398, 3974, 242, 3947, 3938,
	3329, 2847, 4523, 2883, 1840, 1841, 1845, 1846, 4282, 3973,
	1900, 235, 1659, 1104, 1163, 196, 1932, 3497, 1914, 2175,
	236, 4354, 1425, 1869, 2020, 1996, 1997, 3749, 1898, 3382,
	3383, 2201, 2175, 2031, 1404, 3025, 1848, 2073, 5037, 1251,
	2167, 2166, 2175, 184, 2175, 2177, 1406, 2173, 196, 3399,
	2058, 4750, 4743, 4643, 1965, 1966, 1399, 4459, 2108, 4397,
	2110, 4396, 4395, 4353, 4271, 2695, 4183, 4182, 4181, 4180,
	4179, 1847, 4178, 2147, 1898, 2693, 3997, 3942, 3941, 2053,
	3764, 3763, 1900, 1394, 3003, 3756, 2102, 3755, 2046, 2146,
	2182, 1283, 3651, 1283, 2044, 4921, 4994, 2021, 4992, 1858,
	1856, 1857, 1849, 1850, 1851, 1852, 1854, 1855, 841, 4127,
	2246, 4917, 1405, 2013, 2045, 841, 844, 2018, 2011, 1399,
	2143, 3817, 4057, 844, 3393, 3391, 3392, 3384, 3385, 3386,
	3387, 3389, 3390, 4639, 241, 4675, 1971, 1723, 4673, 1104,
	4549, 2265, 1954, 1970, 1954, 2123, 1814, 3367, 3061, 1989,
	3366, 3289, 2985, 3399, 1402, 2161, 1263, 4026, 3621, 3556,
	3388, 1060, 2290, 2170, 2030, 2029, 2028, 2026, 2025, 2024,
	1547, 1547, 2015, 2040, 1849, 1850, 1851, 1852, 1854, 1855,
	1425, 2076, 3703, 243, 3702, 2407, 2149, 4712, 1776, 1399,
	1942, 4117, 2059, 4713, 3386, 3387, 3389, 3390, 3391, 3392,
	3384, 3385, 3386, 3387, 3389, 3390, 4713, 1061, 2379, 1732,
	4633, 4950, 4437, 3590, 3191, 3675, 4383, 1733, 2291, 4131,
	2125, 2212, 4106, 2127, 4063, 4054, 2242, 4036, 2250, 2132,
	3335, 242, 3789, 2134, 2260, 3523, 2384, 2322, 2137, 4505,
	3431, 2145, 1939, 4926, 3868, 235, 2675, 2890, 1987, 1967,
	2680, 2983, 3027, 3683, 236, 1279, 2348, 1279, 3384, 3385,
	3386, 3387, 3389, 3390, 2245, 1658, 1633, 3398, 2301, 2306,
	2355, 1557, 1375, 1337, 3046, 4941, 4938, 1547, 3739, 1547,
	2172, 1547, 196, 4569, 2252, 4541, 3043, 2178, 2168, 3041,
	4002, 4735, 4443, 2210, 3394, 3395, 3396, 1690, 2206, 1547,
	1547, 3393, 3391, 3392, 3384, 3385, 3386, 3387, 3389, 3390,
	4927, 4849, 3559, 1547, 4021, 2255, 2255, 2218, 2171, 3158,
	3658, 4996, 4338, 899, 2237, 1547, 3220, 1547, 1547, 1547,
	4335, 4995, 1711, 1659, 4572, 4568, 4547, 3101, 5029, 3811,
	2293, 2294, 4974, 2681, 4076, 1040, 1898, 4598, 2255, 4340,
	3527, 835, 1608, 2479, 1600, 2476, 2927, 2253, 5099, 2240,
	4319, 1058, 2344, 4751, 2465, 1056, 4591, 841, 1054, 1406,
	2406, 1052, 1049, 1163, 2463, 844, 1774, 2162, 3498, 1564,
	2212, 4580, 4386, 2295, 4385, 4074, 4073, 1559, 1563, 2349,
	2212, 2150, 4065, 4051, 4312, 2361, 1400, 4050, 4048, 2243,
	2251, 4047, 4035, 3994, 2239, 39, 2259, 2236, 1163, 2477,
	3993, 3664, 4075, 3663, 2945, 3623, 2945, 3491, 3340, 3339,
	3338, 2382, 3337, 3155, 2682, 3399, 2679, 3293, 3529, 2943,
	900, 2943, 2411, 3059, 2392, 1405, 2478, 3058, 2307, 1609,
	3048, 3037, 3029, 2238, 1163, 2369, 1163, 3019, 1156, 4313,
	3018, 3013, 2210, 1163, 3012, 3011, 2079, 2079, 1425, 1773,
	1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163,
	1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163,
	1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163,
	1163, 1163, 1163, 1163, 1163, 1163, 1663, 1163, 1663, 1163,
	1163, 1163, 1163, 2329, 2358, 2330, 2371, 772, 4570, 2291,
	4542, 2990, 2989, 2950, 1389, 1709, 1396, 2436, 772, 2363,
	1400, 2871, 1656, 2518, 2366, 1163, 2366, 2367, 3619, 1163,
	1163, 3556, 2379, 1104, 2398, 1104, 2505, 1163, 2589, 4334,
	1380, 1163, 2516, 1163, 1163, 2375, 841, 2376, 5030, 2254,
	2254, 1425, 4975, 1102, 844, 2211, 4336, 1163, 1163, 1163,
	1163, 1772, 1820, 1163, 1163, 1163, 1163, 1163, 1163, 1163,
	1163, 2542, 2543, 2884, 2073, 2073, 3384, 3385, 3386, 3387,
	3389, 3390, 2254, 3007, 2208, 2725, 1658, 2684, 2399, 1163,
	1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 2415, 1855,
	1406, 1401, 1163, 2514, 2426, 2724, 2546, 3304, 2516, 807,
	3000, 3001, 2656, 2657, 1285, 4289, 2898, 4608, 2204, 2875,
	4355, 1425, 3390, 3000, 3001, 4482, 2656, 2672, 3589, 1281,
	1285, 1281, 1604, 3000, 3001, 2179, 2180, 2459, 3302, 4296,
	1396, 1725, 1046, 1400, 1101, 2328, 1163, 1425, 2209, 1323,
	2529, 5032, 1646, 2720, 1645, 2675, 2987, 2001, 4308, 2959,
	720, 1397, 2266, 3790, 4309, 1280, 1405, 1560, 2234, 2514,
	1398, 2488, 2766, 2766, 2780, 4314, 2656, 2205, 2247, 2801,
	2803, 1280, 2504, 2502, 2503, 2807, 715, 2934, 2517, 2510,
	1644, 3620, 1643, 1704, 2496, 2249, 1083, 2500, 2620, 1083,
	1083, 2403, 2533, 4295, 2678, 2534, 2535, 2220, 2671, 2832,
	1810, 1617, 2604, 2604, 2211, 2248, 2262, 4311, 2076, 2076,
	3198, 1622, 1813, 805, 2861, 1401, 2244, 3236, 4728, 2857,
	2224, 2246, 2031, 2874, 4315, 4995, 2722, 902, 901, 771,
	4005, 2723, 2005, 2261, 2726, 2973, 2727, 2728, 1785, 2469,
	771, 5033, 1366, 1366, 2512, 2824, 2515, 3045, 1733, 1721,
	1103, 2457, 1755, 1396, 4332, 2921, 2612, 3266, 2616, 2241,
	4337, 2020, 2420, 2610, 2414, 3281, 2962, 2257, 1251, 1733,
	3299, 1825, 2897, 1104, 1378, 1397, 5061, 2221, 5031, 3044,
	2008, 3799, 2972, 1104, 1398, 1425, 2491, 1104, 2423, 3798,
	2669, 3042, 2248, 2368, 3040, 2003, 3238, 2209, 3526, 2900,
	3300, 1705, 3857, 2823, 3305, 3247, 2684, 2919, 4018, 2305,
	945, 4703, 2515, 2006, 1283, 2878, 2916, 1771, 2416, 184,
	2513, 2079, 2775, 2831, 2762, 2836, 2258, 2886, 2842, 2843,
	1283, 2896, 2805, 4384, 2813, 2814, 2846, 1399, 1401, 773,
	2792, 2825, 1755, 4730, 1394, 4049, 4086, 3854, 2829, 2830,
	773, 4032, 5035, 2944, 2018, 4310, 2004, 4046, 5041, 4609,
	1754, 3982, 3969, 3382, 3383, 1973, 3400, 3401, 3402, 1425,
	4923, 4607, 3670, 1710, 2600, 2245, 1104, 4605, 1050, 2922,
	2464, 2417, 1050, 1547, 1789, 1050, 2513, 2225, 1051, 1050,
	2462, 4481, 3662, 1366, 3446, 4320, 4321, 1768, 1397, 5007,
	2490, 3280, 2424, 2924, 4087, 2598, 3092, 1398, 1752, 1629,
	2893, 2918, 2951, 3617, 1163, 1163, 3606, 1163, 2586, 3250,
	2907, 3047, 2986, 3010, 2910, 4604, 2911, 4016, 3855, 1965,
	1966, 2988, 2497, 1100, 5016, 806, 2993, 2487, 3397, 2073,
	2948, 2925, 835, 5015, 1366, 2902, 2917, 4085, 2313, 2312,
	1754, 2869, 4606, 2226, 2227, 3008, 897, 3134, 896, 2191,
	3127, 1399, 1627, 4330, 2192, 2684, 3023, 3598, 5063, 2930,
	4982, 1753, 2961, 849, 3607, 1547, 3273, 3274, 1279, 2222,
	4333, 2007, 2992, 4200, 4199, 808, 2928, 3793, 1547, 804,
	1547, 2932, 3301, 3671, 1279, 2908, 1547, 4814, 3668, 856,
	2120, 2912, 3303, 3736, 3244, 2266, 2915, 3104, 1547, 1606,
	3543, 1121, 3106, 1603, 3169, 2923, 3142, 3605, 2954, 2977,
	3017, 2286, 3096, 2964, 2967, 3599, 2223, 3186, 2933, 716,
	1322, 3054, 1366, 2991, 1366, 3388, 1708, 4826, 1032, 3060,
	4532, 3026, 3201, 3202, 3093, 3094, 3009, 2594, 3737, 2931,
	4924, 3038, 5034, 3208, 3209, 3210, 1163, 3249, 4894, 3634,
	4895, 2232, 1096, 4736, 3002, 3004, 3005, 3006, 3597, 1629,
	3016, 2595, 3021, 3015, 4758, 3028, 3014, 2596, 2193, 2285,
	3097, 2601, 3035, 2076, 1399, 3189, 3192, 2269, 3246, 937,
	2584, 2684, 2276, 2587, 3445, 3051, 2197, 3188, 3196, 3528,
	3052, 3053, 3224, 1783, 841, 3203, 3138, 3204, 3132, 922,
	3102, 717, 844, 770, 5039, 938, 1564, 4729, 3183, 2233,
	2960, 1734, 1163, 3095, 3193, 3107, 4331, 1558, 1163, 1163,
	3199, 3736, 184, 1786, 2215, 927, 1306, 841, 3571, 2249,
	1047, 1960, 3398, 2583, 2945, 844, 2782, 3173, 4960, 2228,
	3171, 3121, 3131, 4413, 1033, 4922, 3495, 3215, 4961, 2965,
	2247, 718, 2231, 719, 1371, 2266, 3295, 2603, 3222, 4981,
	3223, 2194, 2199, 3226, 3655, 3228, 2489, 3230, 2422, 3232,
	3233, 3174, 3577, 1032, 1163, 1163, 3164, 4196, 2202, 4812,
	1163, 1706, 2216, 2458, 1663, 3248, 3570, 4494, 5005, 4860,
	946, 4478, 3242, 1163, 1163, 2860, 2270, 1096, 3218, 1163,
	1163, 4365, 3172, 5059, 2611, 1163, 3153, 2005, 1720, 1722,
	739, 1898, 3544, 850, 851, 2229, 2666, 5040, 1784, 1910,
	4319, 3669, 2419, 4813, 2413, 2214, 3345, 2828, 3579, 3102,
	1824, 5064, 1103, 1377, 2841, 3225, 3870, 1572, 5048, 1579,
	4430, 1585, 4425, 4017, 4190, 2195, 4520, 4099, 4389, 3970,
	1163, 1163, 1163, 5042, 4312, 2008, 1163, 4097, 4305, 2597,
	4431, 1312, 3252, 3022, 3254, 3296, 1163, 1310, 1787, 2599,
	2826, 4201, 3813, 3264, 1739, 4303, 4779, 4866, 1834, 4599,
	3328, 4796, 4652, 1163, 4307, 3272, 3217, 4388, 2006, 1033,
	3399, 1038, 1037, 3583, 3578, 4387, 4145, 2202, 3724, 3509,
	3263, 3227, 3262, 3229, 2868, 3231, 2336, 3261, 1998, 4313,
	1676, 1309, 1681, 3267, 1834, 1302, 2529, 707, 4122, 1835,
	3282, 5069, 4197, 2532, 2213, 2163, 1695, 1829, 1700, 939,
	940, 3909, 4477, 2585, 3323, 3324, 3483, 2001, 1034, 3327,
	4101, 4567, 1281, 4245, 4661, 3550, 4710, 3777, 4146, 923,
	924, 3581, 4780, 4306, 3255, 3319, 2200, 3257, 1281, 2121,
	3775, 4069, 853, 852, 1788, 4052, 4980, 4414, 4003, 4001,
	3768, 4100, 3725, 1293, 3716, 1163, 1163, 1163, 1163, 3294,
	3546, 3143, 1833, 3137, 2160, 1163, 1163, 1163, 1295, 3057,
	1163, 3125, 3853, 1758, 3582, 2362, 2356, 1112, 2350, 4959,
	1163, 1285, 1425, 2342, 2321, 2320, 1163, 4646, 1163, 3438,
	3439, 1597, 2994, 1314, 3924, 1290, 2522, 1285, 1833, 779,
	4099, 2273, 2005, 3960, 4832, 3814, 2949, 854, 855, 3990,
	4097, 3394, 3395, 3396, 4799, 1425, 1038, 1037, 3393, 3391,
	3392, 3384, 3385, 3386, 3387, 3389, 3390, 1285, 2470, 2156,
	1425, 2966, 1280, 3779, 1835, 1104, 2007, 1834, 4148, 2158,
	4448, 1296, 1366, 3334, 3122, 1035, 1325, 4772, 1280, 3770,
	2008, 4625, 2079, 3421, 4623, 4479, 1425, 3961, 4202, 2271,
	4428, 2196, 2404, 1034, 3769, 2003, 1366, 1297, 4544, 3440,
	1835, 2819, 1036, 3562, 1366, 3463, 2396, 3558, 1280, 3557,
	3287, 3265, 3937, 2006, 3962, 2159, 3959, 3511, 3476, 3443,
	3442, 1762, 1761, 4101, 2385, 2318, 1163, 1756, 4308, 3964,
	4764, 2867, 2272, 2866, 4309, 2822, 4105, 2865, 3910, 1294,
	1163, 941, 942, 4765, 2201, 4314, 5068, 2864, 3911, 2863,
	3778, 1366, 1652, 1910, 4100, 1039, 2004, 2079, 4098, 3450,
	4246, 925, 926, 4781, 3545, 3477, 2523, 3129, 3448, 1638,
	1101, 1833, 4556, 4203, 1163, 3472, 2821, 4766, 1650, 4404,
	2201, 2820, 1639, 944, 4723, 2970, 4118, 4311, 3534, 3535,
	1366, 3485, 3486, 3487, 3488, 4009, 2360, 3496, 2995, 2996,
	2073, 3678, 3524, 3595, 4315, 3481, 3432, 4627, 3490, 3998,
	3560, 3469, 1366, 3564, 1366, 5002, 3530, 1394, 4645, 3462,
	1035, 1283, 3416, 3417, 3418, 3609, 3447, 3611, 4530, 4529,
	1163, 1163, 3505, 1540, 2265, 1740, 3622, 1283, 1425, 3561,
	3991, 2265, 3566, 4768, 2284, 3568, 3449, 1036, 3100, 1366,
	4095, 3461, 4838, 3502, 3503, 3786, 3504, 3464, 3465, 3467,
	1366, 3468, 3645, 3508, 3493, 3197, 4767, 1283, 3105, 3103,
	2027, 1592, 3553, 3653, 3547, 2073, 2389, 2290, 4539, 4557,
	4626, 2007, 1714, 3484, 4769, 4552, 4724, 3637, 4551, 3639,
	1547, 3635, 3643, 4846, 4829, 4252, 3649, 3517, 3926, 2691,
	1039, 3615, 4275, 1366, 1547, 3574, 1547, 3514, 3518, 1806,
	1425, 3776, 3771, 3772, 3773, 3774, 4868, 835, 1547, 778,
	3525, 4521, 3963, 5006, 1671, 4540, 3632, 2483, 5004, 3531,
	1547, 4098, 4943, 4754, 1808, 4310, 1805, 3610, 4744, 2690,
	1686, 1803, 1366, 4839, 2076, 1780, 4527, 2067, 3596, 1778,
	4500, 1750, 4286, 1748, 1746, 3717, 4244, 1744, 4104, 1285,
	1742, 1291, 3413, 3732, 1736, 3730, 4915, 3580, 3829, 3688,
	3787, 3592, 3542, 3708, 3999, 4320, 4321, 4725, 1730, 3513,
	3588, 3784, 3515, 3516, 1547, 1279, 1728, 3519, 3601, 3520,
	3624, 3521, 1648, 3506, 3376, 1651, 1547, 3306, 1547, 1715,
	3604, 1279, 3673, 3715, 3676, 3126, 3036, 3186, 2045, 3030,
	1280, 2984, 2895, 3594, 2492, 1292, 3186, 2395, 2380, 2076,
	3627, 1649, 3752, 3741, 3633, 2038, 943, 2034, 1809, 3723,
	3454, 1279, 1689, 4611, 2461, 3608, 3646, 2428, 3650, 3672,
	3017, 3660, 3602, 3414, 3654, 2282, 3603, 1425, 3809, 3808,
	1425, 1829, 3791, 2299, 3240, 3239, 3206, 2511, 1767, 2431,
	2341, 2319, 2109, 2107, 1943, 1703, 3726, 3661, 3801, 1621,
	4366, 4056, 3644, 4055, 4370, 4350, 3782, 1048, 4828, 4446,
	3729, 4375, 4363, 3652, 1163, 4301, 4300, 2164, 4144, 4978,
	1163, 1163, 3618, 4135, 1163, 1163, 1163, 4072, 1163, 3780,
	2992, 3680, 3733, 4053, 3636, 3785, 3712, 1163, 2079, 4024,
	2485, 3713, 841, 3711, 3665, 2484, 1163, 3850, 4022, 4000,
	844, 1163, 1807, 3719, 1804, 4275, 3455, 1425, 3714, 1802,
	3704, 4441, 3783, 1779, 184, 184, 1163, 1777, 3738, 1749,
	4770, 1747, 1745, 3740, 1425, 1743, 4771, 3747, 1741, 3750,
	3751, 3156, 1735, 3148, 2079, 2079, 1163, 1163, 3806, 1163,
	1163, 1163, 3141, 3795, 3659, 3796, 1729, 3797, 3133, 1283,
	3118, 3117, 3098, 2914, 1727, 2909, 2317, 1163, 3453, 3460,
	1647, 1163, 2315, 2079, 2079, 1163, 1163, 1163, 1163, 1163,
	1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163,
	1163, 1163, 1163, 1163, 1163, 3815, 1163, 3882, 3832, 3883,
	2292, 2267, 3459, 2230, 1163, 1163, 2079, 2460, 1104, 2217,
	2427, 1163, 2203, 2142, 2139, 2136, 2073, 2133, 2128, 3731,
	3842, 3843, 1163, 2126, 3807, 2122, 2298, 3812, 1053, 1055,
	1057, 2113, 2279, 1285, 1285, 3647, 4973, 1163, 4899, 1260,
	2276, 4430, 1838, 2051, 3285, 4996, 4722, 2152, 2153, 2495,
	3258, 3256, 3091, 4880, 4790, 4462, 4382, 4290, 3187, 2542,
	3873, 4431, 2073, 2073, 2183, 1261, 1602, 4663, 2971, 1425,
	4656, 2945, 4156, 2212, 3837, 2945, 3956, 2418, 3839, 1800,
	1801, 2359, 1366, 1366, 1280, 1280, 2943, 3849, 2542, 3888,
	2968, 2073, 2073, 3860, 3921, 2493, 1345, 1366, 1366, 1346,
	835, 1366, 2455, 3865, 3856, 3858, 3859, 2450, 3872, 4879,
	3804, 3456, 3457, 3458, 2425, 4341, 3879, 3943, 4377, 3810,
	1163, 3917, 1726, 1279, 2073, 1845, 1846, 3880, 4682, 3928,
	3885, 3881, 2975, 3913, 1845, 1846, 4554, 3887, 4253, 4068,
	3286, 2494, 4231, 3575, 2976, 1163, 2997, 2452, 1923, 1281,
	1842, 2280, 1928, 1839, 3648, 1848, 1373, 1313, 4990, 4132,
	2076, 4067, 266, 3914, 2976, 1281, 1346, 4951, 3116, 3922,
	2151, 2343, 1384, 184, 3933, 3934, 1262, 3043, 1163, 1163,
	3041, 1346, 3930, 3931, 3050, 3034, 3032, 2980, 2978, 4837,
	1847, 4819, 4789, 4783, 4721, 1281, 4647, 3020, 3033, 1847,
	2979, 4618, 4531, 4142, 4134, 4121, 2076, 2076, 3953, 704,
	3718, 3163, 2806, 2148, 1163, 1163, 2060, 5036, 3967, 3968,
	3945, 4004, 1163, 4870, 4553, 1556, 1555, 1097, 4871, 3494,
	2284, 5067, 4785, 3980, 3981, 2076, 2076, 3987, 1171, 3382,
	3383, 1566, 1547, 1283, 1283, 4223, 1547, 4870, 5009, 1547,
	1845, 1846, 4871, 3976, 1366, 2937, 2938, 2935, 2936, 1713,
	2686, 4037, 3972, 2937, 2935, 1712, 3983, 4083, 2076, 2721,
	4141, 4648, 4592, 3946, 2067, 2067, 4379, 4042, 4044, 2079,
	1782, 4041, 4374, 1781, 273, 273, 273, 4373, 710, 711,
	4219, 726, 710, 726, 737, 841, 3971, 777, 4058, 3861,
	3641, 797, 3638, 844, 1937, 4064, 803, 1936, 4070, 3260,
	2499, 5052, 5017, 273, 4885, 4823, 4822, 4821, 4029, 4753,
	4752, 1547, 4699, 4621, 4034, 4584, 4524, 1163, 4091, 4149,
	4518, 4421, 4401, 4339, 918, 1285, 1163, 4281, 4158, 4172,
	4077, 273, 4162, 4108, 4114, 4020, 1547, 1547, 1547, 4165,
	4088, 4089, 4012, 1547, 1547, 1547, 3722, 3721, 2992, 3567,
	3512, 3245, 3237, 3214, 4103, 3213, 3212, 3211, 3147, 4093,
	3120, 3119, 4102, 2969, 2905, 1547, 3988, 1547, 2899, 3169,
	3989, 2888, 2887, 1425, 4153, 4128, 1280, 2876, 2615, 4150,
	3054, 2486, 2456, 4169, 3553, 2449, 3186, 2073, 4116, 2448,
	2447, 2446, 4081, 2445, 2357, 2331, 2327, 1279, 1279, 4092,
	1425, 4120, 4084, 1163, 1163, 2326, 4173, 2325, 2324, 1163,
	1163, 2079, 2323, 4129, 1163, 1163, 4023, 1163, 4025, 4133,
	4152, 4107, 1163, 2116, 2115, 2114, 2112, 2050, 2049, 1799,
	1798, 1737, 1616, 1163, 1615, 1614, 1613, 1612, 1611, 1610,
	4184, 1605, 1601, 1599, 1598, 4187, 4136, 1537, 1536, 1163,
	1535, 1416, 1415, 1414, 1413, 1412, 4151, 4138, 1376, 1332,
	2377, 1331, 1330, 4186, 710, 710, 4159, 4082, 4160, 4185,
	1329, 1328, 273, 4154, 4164, 1327, 4204, 4170, 2391, 2393,
	4171, 1326, 1324, 1319, 1318, 1317, 1316, 1281, 4205, 1315,
	1243, 4071, 2397, 911, 8, 2154, 1059, 1045, 4727, 4318,
	4217, 4188, 4317, 4316, 2405, 2482, 2408, 2409, 2410, 93,
	1285, 4213, 1607, 873, 87, 2274, 4193, 4019, 1285, 1011,
	4867, 4757, 1425, 1425, 1590, 1425, 4198, 881, 4848, 2073,
	4130, 2076, 1285, 3569, 3062, 1283, 2430, 1738, 2432, 4258,
	3471, 2848, 4811, 1547, 1547, 4227, 3344, 4689, 4493, 2689,
	1941, 3425, 89, 1147, 1193, 4412, 1425, 4411, 4302, 4006,
	3691, 1280, 4408, 4407, 2064, 2066, 1111, 1428, 4893, 1280,
	2165, 5058, 1153, 2181, 2174, 2889, 2765, 1170, 1163, 1167,
	2068, 2070, 1169, 1280, 1168, 2069, 1961, 1166, 2063, 1285,
	4140, 1285, 3167, 3476, 4276, 4277, 3748, 4243, 1657, 1655,
	1013, 2169, 2609, 2673, 3333, 1934, 1127, 1149, 2670, 1307,
	4261, 4263, 1138, 1126, 3451, 4329, 1366, 4279, 3430, 4291,
	4292, 3735, 3952, 2521, 891, 3379, 1425, 2676, 1366, 4349,
	4285, 1366, 1298, 4288, 4345, 4346, 2789, 2781, 2777, 2067,
	1280, 4358, 1280, 1163, 4361, 3522, 1425, 4257, 4342, 3157,
	4325, 4254, 4325, 4260, 4294, 4266, 4255, 4256, 4250, 4259,
	1815, 4267, 184, 4507, 1912, 4297, 4270, 3168, 1811, 1410,
	1131, 4274, 2607, 2076, 1925, 3311, 2531, 3742, 4343, 3474,
	2882, 4873, 3869, 3243, 2335, 1547, 1547, 1259, 3110, 1258,
	4328, 3113, 4287, 3115, 4293, 1305, 1257, 4854, 4378, 1279,
	4380, 4299, 4851, 2264, 4415, 3686, 3687, 2157, 2929, 2619,
	3705, 1143, 1531, 1366, 2474, 3802, 3436, 4119, 1618, 4364,
	1283, 802, 4561, 1155, 1897, 1425, 4432, 3087, 1283, 3086,
	1547, 4716, 1395, 1393, 4372, 1392, 4381, 4405, 4449, 4344,
	3160, 1391, 1283, 3160, 5026, 3056, 2277, 4015, 4399, 4014,
	4013, 240, 4402, 3279, 1836, 1828, 4362, 2835, 237, 1547,
	1547, 1547, 1547, 1547, 1547, 239, 238, 3573, 3957, 3480,
	4392, 1281, 1281, 4433, 4949, 4039, 3677, 1425, 23, 4398,
	22, 21, 116, 4438, 4400, 42, 4359, 20, 155, 1163,
	1163, 1163, 4391, 133, 152, 151, 4390, 125, 4450, 1283,
	150, 1283, 149, 148, 147, 154, 4406, 1425, 146, 4410,
	4417, 145, 1163, 4444, 4453, 1163, 1163, 4424, 4422, 140,
	144, 4418, 143, 142, 141, 1163, 3234, 139, 2079, 137,
	138, 132, 136, 1163, 1163, 135, 134, 131, 4348, 130,
	129, 128, 4451, 127, 126, 4472, 4458, 124, 156, 123,
	1425, 4357, 1547, 122, 4360, 121, 120, 119, 4467, 118,
	117, 790, 4471, 4485, 4465, 791, 4464, 1366, 61, 60,
	115, 113, 4473, 4435, 4474, 114, 19, 40, 14, 65,
	66, 18, 13, 35, 1279, 4480, 1425, 92, 105, 104,
	103, 36, 1279, 101, 1163, 100, 34, 17, 16, 15,
	98, 97, 2613, 96, 33, 31, 1279, 1163, 4490, 11,
	9, 37, 2022, 12, 5, 189, 1163, 188, 1923, 191,
	187, 2079, 190, 91, 186, 185, 90, 29, 4502, 10,
	181, 1163, 4637, 4496, 1163, 4126, 82, 183, 4513, 4514,
	182, 1300, 180, 179, 178, 83, 2073, 80, 1163, 177,
	269, 1163, 86, 176, 81, 4534, 85, 4535, 1425, 84,
	27, 6, 4564, 1279, 64, 1279, 1366, 7, 4516, 4475,
	4517, 3788, 108, 2788, 109, 1321, 1547, 1547, 1547, 4601,
	38, 78, 77, 4536, 76, 75, 2201, 273, 26, 273,
	273, 63, 1350, 273, 1360, 4543, 25, 1285, 173, 221,
	220, 4533, 219, 4526, 218, 1374, 217, 216, 4610, 215,
	4583, 214, 4597, 797, 209, 213, 797, 211, 210, 4620,
	212, 208, 231, 4631, 4624, 4636, 230, 1425, 224, 4586,
	1547, 223, 4585, 229, 4581, 228, 4573, 227, 4657, 2073,
	273, 226, 273, 273, 1350, 225, 273, 273, 1280, 3688,
	222, 234, 207, 1360, 206, 4594, 205, 203, 4325, 4662,
	199, 4613, 202, 204, 1163, 1163, 201, 273, 4612, 1568,
	200, 198, 3055, 1281, 233, 4615, 4616, 4617, 4622, 232,
	4644, 1163, 2079, 72, 171, 1588, 4666, 172, 4668, 71,
	2076, 4660, 1595, 170, 169, 4640, 4628, 4635, 4658, 168,
	167, 166, 165, 1366, 164, 70, 1366, 175, 1366, 1366,
	174, 1620, 24, 2, 1360, 4654, 1, 0, 273, 273,
	4453, 1350, 4659, 4664, 4602, 0, 1163, 4665, 1163, 0,
	1163, 0, 0, 0, 4670, 0, 0, 0, 0, 0,
	1285, 0, 797, 0, 273, 273, 0, 4678, 4679, 0,
	4709, 0, 0, 1163, 0, 1285, 1683, 0, 0, 0,
	0, 0, 4711, 0, 0, 0, 0, 1691, 0, 0,
	0, 0, 918, 0, 0, 0, 0, 0, 0, 0,
	0, 4681, 4687, 2076, 0, 3200, 0, 0, 0, 4600,
	0, 1280, 0, 4707, 4575, 4576, 4704, 3207, 4708, 0,
	2073, 4325, 0, 0, 4738, 0, 1280, 1283, 0, 0,
	1285, 1285, 4731, 0, 0, 0, 4325, 0, 4587, 4732,
	4760, 0, 0, 2526, 1163, 0, 0, 0, 4593, 0,
	4595, 1285, 4596, 0, 1285, 0, 0, 0, 1547, 4698,
	0, 0, 4700, 4762, 4701, 4702, 4677, 4747, 1547, 0,
	273, 0, 0, 0, 4739, 0, 0, 0, 1281, 4749,
	0, 1280, 1280, 1163, 1163, 0, 1281, 0, 0, 0,
	0, 4325, 4325, 1163, 273, 0, 0, 4807, 4773, 4808,
	1281, 0, 1280, 4755, 0, 1280, 0, 0, 4787, 4784,
	0, 4786, 4325, 0, 0, 4325, 4792, 4801, 0, 0,
	2067, 0, 0, 4804, 0, 0, 4800, 4640, 0, 4775,
	4776, 4805, 0, 0, 4806, 0, 0, 4803, 0, 0,
	4816, 0, 0, 1163, 1163, 4824, 0, 1163, 4820, 0,
	4793, 1547, 1366, 4795, 0, 1366, 0, 1281, 0, 1281,
	0, 0, 4853, 4856, 2076, 0, 4815, 0, 4827, 0,
	1283, 4825, 4845, 0, 3584, 3585, 0, 3586, 4872, 4835,
	4836, 4843, 4876, 0, 0, 1283, 4869, 0, 4844, 2783,
	0, 1279, 0, 0, 0, 2067, 0, 0, 0, 0,
	4862, 0, 0, 0, 0, 0, 0, 4875, 4898, 4896,
	0, 0, 0, 1163, 1163, 1163, 0, 0, 0, 0,
	4858, 0, 0, 0, 0, 0, 4857, 0, 3628, 3629,
	4861, 3630, 4881, 0, 0, 0, 0, 0, 0, 0,
	1283, 1283, 4889, 0, 4886, 4897, 0, 0, 0, 4863,
	1163, 0, 0, 0, 0, 4930, 0, 0, 4935, 0,
	4912, 1283, 4913, 0, 1283, 0, 4931, 4910, 4911, 4748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4956, 2201, 4957, 0, 4932, 4864, 4958,
	0, 4865, 0, 0, 0, 0, 4964, 4966, 710, 0,
	0, 0, 0, 4970, 0, 0, 4948, 1163, 0, 0,
	0, 4946, 4933, 0, 0, 1366, 4963, 4620, 0, 273,
	4962, 273, 4979, 0, 0, 273, 0, 0, 0, 4972,
	0, 4971, 0, 2788, 1279, 0, 4997, 0, 1568, 1350,
	2042, 273, 0, 273, 2048, 4976, 4988, 4985, 4986, 1279,
	4993, 273, 4991, 726, 4989, 0, 0, 0, 273, 4853,
	4999, 0, 4856, 5001, 5013, 0, 1285, 5012, 1285, 5003,
	0, 5020, 0, 5000, 2117, 0, 0, 5022, 0, 5008,
	5011, 5019, 0, 5018, 0, 0, 273, 0, 0, 0,
	1423, 0, 5010, 273, 5027, 5028, 5014, 0, 0, 0,
	0, 4875, 0, 0, 1279, 1279, 0, 1366, 0, 0,
	0, 0, 0, 0, 2788, 2788, 5043, 1280, 5044, 1280,
	5051, 0, 0, 0, 5050, 1279, 797, 4325, 1279, 4325,
	0, 5054, 0, 0, 0, 0, 5053, 1163, 1163, 0,
	5062, 0, 0, 0, 0, 5060, 1163, 1163, 0, 0,
	5049, 4987, 5065, 5074, 0, 5076, 0, 0, 0, 5070,
	5056, 0, 5081, 5080, 5082, 5021, 5078, 5023, 5086, 5083,
	5085, 0, 5084, 0, 0, 0, 0, 3169, 0, 0,
	5089, 0, 0, 5090, 1366, 5091, 5095, 5092, 5077, 0,
	5098, 5096, 5079, 5093, 0, 0, 0, 5094, 0, 73,
	0, 2191, 0, 5101, 1163, 0, 2192, 3169, 5105, 0,
	5107, 5098, 5109, 0, 0, 0, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5071,
	5072, 5102, 79, 0, 4945, 1355, 0, 4947, 0, 5104,
	0, 0, 0, 5047, 0, 0, 2067, 0, 0, 3308,
	3309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 0, 0, 2191, 0,
	0, 0, 88, 2192, 0, 0, 1283, 0, 1283, 0,
	0, 0, 0, 0, 0, 1518, 0, 5106, 1532, 1355,
	0, 0, 2067, 2067, 0, 0, 2788, 2788, 2788, 2788,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	273, 0, 0, 912, 0, 0, 0, 0, 0, 0,
	2193, 2067, 2067, 0, 0, 0, 49, 0, 110, 0,
	0, 0, 0, 0, 94, 107, 0, 0, 2197, 0,
	3382, 3383, 0, 3400, 3401, 3402, 0, 0, 0, 0,
	0, 0, 0, 0, 2067, 0, 0, 0, 0, 0,
	1355, 1355, 4209, 0, 1118, 0, 273, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 2193, 0, 0,
	0, 0, 0, 0, 95, 0, 0, 0, 273, 3656,
	273, 275, 0, 0, 710, 2197, 273, 0, 1281, 0,
	0, 0, 0, 2194, 2199, 3397, 0, 0, 797, 5073,
	0, 0, 918, 1281, 0, 0, 0, 3681, 0, 3269,
	0, 3406, 3407, 3408, 3409, 0, 0, 0, 0, 3709,
	1279, 0, 1279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 1350, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 797,
	0, 0, 0, 0, 0, 0, 273, 0, 1281, 1281,
	2194, 2199, 0, 0, 2429, 0, 0, 0, 0, 273,
	273, 0, 273, 3758, 273, 0, 273, 2195, 273, 1281,
	0, 0, 1281, 0, 0, 3781, 0, 1094, 0, 1032,
	2783, 2783, 3388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2466, 0, 0, 2467, 0, 2468, 0,
	0, 0, 0, 1096, 0, 0, 0, 0, 0, 0,
	273, 273, 273, 273, 0, 99, 0, 0, 0, 2202,
	0, 0, 0, 0, 0, 0, 0, 0, 3382, 3383,
	0, 3400, 3401, 3402, 2195, 2037, 0, 0, 0, 777,
	0, 0, 0, 797, 0, 0, 0, 3404, 0, 1095,
	3834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1125,
	0, 192, 102, 3532, 0, 106, 0, 0, 2200, 0,
	0, 0, 2189, 0, 4137, 0, 2202, 0, 0, 3398,
	0, 0, 0, 0, 0, 1033, 0, 2067, 0, 0,
	0, 241, 0, 3397, 0, 0, 0, 0, 0, 913,
	0, 0, 0, 0, 153, 0, 3533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2621, 0, 0, 0,
	2187, 0, 0, 0, 0, 2200, 0, 0, 0, 0,
	243, 0, 0, 4189, 0, 0, 0, 0, 0, 2185,
	0, 0, 2783, 2783, 2783, 2783, 0, 0, 1898, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 2188, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	3388, 0, 0, 2196, 0, 0, 0, 710, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 273, 0, 0, 193, 0, 0, 3777, 0,
	0, 710, 0, 0, 0, 1532, 0, 0, 273, 2067,
	710, 3775, 1038, 1037, 0, 0, 0, 3399, 0, 196,
	0, 3768, 273, 0, 3382, 3383, 0, 3400, 3401, 3402,
	0, 0, 0, 0, 0, 3404, 0, 0, 0, 0,
	2196, 0, 0, 273, 1360, 0, 2788, 2788, 0, 0,
	0, 0, 0, 0, 1281, 1532, 1281, 3382, 3383, 1034,
	3400, 3401, 3402, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3398, 0, 3833,
	0, 0, 0, 0, 0, 0, 0, 2310, 0, 0,
	0, 0, 273, 1360, 0, 0, 726, 0, 726, 3397,
	0, 0, 2904, 0, 3779, 0, 0, 0, 273, 0,
	0, 273, 0, 0, 0, 273, 0, 273, 0, 0,
	3770, 0, 1350, 0, 273, 273, 0, 1360, 1360, 2920,
	0, 0, 3397, 0, 273, 3769, 2788, 2788, 2788, 2788,
	2788, 2788, 2788, 2788, 2788, 2788, 2788, 2788, 2788, 2788,
	2788, 2788, 2788, 2788, 2788, 2788, 1898, 2788, 3394, 3395,
	3396, 0, 0, 0, 0, 3393, 3391, 3392, 3384, 3385,
	3386, 3387, 3389, 3390, 0, 0, 0, 0, 0, 0,
	2958, 3825, 3826, 0, 0, 0, 1035, 0, 0, 0,
	0, 3778, 273, 0, 0, 0, 3388, 4368, 0, 0,
	0, 0, 0, 0, 0, 4078, 273, 0, 4079, 0,
	0, 1093, 0, 1036, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3388,
	797, 3766, 0, 0, 0, 3399, 0, 0, 3405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 4420, 0, 0,
	0, 3404, 0, 0, 0, 0, 1039, 0, 273, 273,
	4434, 3889, 3890, 3891, 3892, 3893, 3894, 3895, 3896, 3897,
	3898, 3899, 3900, 3901, 3902, 3903, 3904, 3905, 3906, 3907,
	3908, 0, 3912, 4457, 3404, 0, 0, 273, 3108, 0,
	0, 0, 0, 3398, 0, 4166, 4167, 4168, 0, 0,
	0, 0, 2391, 4174, 4175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1568, 0, 0, 273, 0,
	273, 0, 0, 0, 0, 0, 3398, 273, 2347, 0,
	0, 0, 0, 0, 0, 0, 0, 3152, 0, 0,
	0, 0, 3776, 3771, 3772, 3773, 3774, 2958, 0, 710,
	0, 0, 3080, 0, 0, 2545, 0, 0, 3181, 918,
	2958, 0, 0, 0, 0, 0, 3394, 3395, 3396, 0,
	0, 0, 1898, 3393, 3391, 3392, 3384, 3385, 3386, 3387,
	3389, 3390, 273, 0, 0, 3070, 3068, 0, 0, 0,
	0, 0, 3072, 3074, 3064, 0, 0, 0, 0, 0,
	0, 273, 1350, 273, 0, 1898, 0, 0, 0, 0,
	0, 0, 0, 1360, 273, 0, 2067, 1350, 0, 1350,
	0, 1350, 0, 0, 0, 0, 1125, 1125, 1125, 0,
	0, 0, 2783, 2783, 0, 3088, 0, 0, 0, 0,
	0, 0, 0, 0, 1509, 0, 0, 0, 2687, 0,
	0, 3399, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 273, 273, 273,
	1350, 0, 0, 1350, 0, 273, 0, 0, 0, 0,
	273, 0, 0, 0, 3399, 0, 0, 0, 0, 0,
	0, 0, 0, 3382, 3383, 2475, 3400, 3401, 3402, 0,
	0, 0, 4272, 4273, 0, 0, 0, 0, 0, 2067,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 2783, 2783, 2783, 2783, 2783, 2783, 2783, 2783,
	2783, 2783, 2783, 2783, 2783, 2783, 2783, 2783, 2783, 2783,
	2783, 2783, 0, 2783, 2858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3397, 0,
	0, 0, 0, 0, 0, 0, 3066, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3082, 0, 0,
	0, 0, 3394, 3395, 3396, 0, 0, 0, 0, 3393,
	3391, 3392, 3384, 3385, 3386, 3387, 3389, 3390, 0, 0,
	3081, 3071, 3069, 3073, 3075, 3065, 3067, 3083, 3085, 0,
	0, 0, 0, 0, 0, 3394, 3395, 3396, 3077, 3079,
	0, 0, 3393, 3391, 3392, 3384, 3385, 3386, 3387, 3389,
	3390, 0, 0, 0, 2391, 1568, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 1846, 3089, 0, 3388, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 0, 0, 0, 0,
	0, 1848, 2940, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4745, 0, 1901, 4466, 0,
	4468, 4469, 4470, 0, 0, 0, 1847, 0, 0, 0,
	3404, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 4759, 1864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3398, 4791, 0, 0, 0, 0, 3084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3828, 0, 0, 1355, 273, 0, 0, 0, 0,
	710, 4519, 0, 0, 0, 710, 0, 0, 710, 0,
	0, 710, 710, 1870, 1871, 1872, 1873, 710, 0, 0,
	0, 0, 0, 1853, 0, 273, 1355, 1355, 0, 0,
	0, 0, 0, 0, 3090, 1845, 1846, 273, 0, 0,
	0, 1898, 0, 3076, 3078, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 1875, 1877, 0, 0, 0, 0, 273, 0,
	0, 0, 273, 273, 0, 0, 0, 0, 0, 0,
	0, 1901, 0, 0, 0, 0, 0, 1862, 1863, 4882,
	1847, 0, 0, 0, 0, 4884, 0, 0, 0, 1509,
	1867, 2958, 2958, 273, 0, 3540, 2042, 0, 0, 1864,
	3399, 1518, 2958, 0, 2048, 4614, 0, 0, 0, 0,
	1868, 0, 0, 2958, 2048, 0, 2958, 2048, 0, 0,
	2048, 0, 0, 3540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 273, 273, 2042, 1532, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3823, 2788, 0, 0, 2042,
	0, 273, 0, 3614, 3614, 0, 0, 0, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 1871, 1872,
	1873, 0, 0, 0, 0, 0, 0, 1853, 0, 1898,
	2958, 0, 2958, 0, 3642, 2958, 2042, 0, 0, 2958,
	0, 0, 0, 0, 0, 1125, 0, 2042, 0, 0,
	797, 0, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2788, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1875, 1877, 0, 0,
	1350, 3394, 3395, 3396, 0, 1874, 0, 273, 3393, 3391,
	3392, 3384, 3385, 3386, 3387, 3389, 3390, 0, 0, 0,
	0, 1862, 1863, 0, 0, 273, 0, 3682, 1869, 0,
	0, 3684, 2958, 0, 0, 273, 0, 0, 0, 273,
	0, 0, 1360, 0, 0, 0, 0, 1881, 0, 0,
	0, 4499, 0, 0, 1868, 1532, 0, 273, 0, 0,
	0, 0, 3152, 1881, 0, 1350, 1355, 273, 0, 0,
	2958, 0, 710, 0, 0, 0, 0, 0, 0, 2958,
	0, 0, 0, 0, 0, 0, 0, 1900, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1532,
	4546, 1532, 0, 0, 0, 0, 0, 0, 0, 0,
	3794, 1509, 0, 1898, 0, 0, 0, 2391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3800, 0, 0, 1568, 0, 0, 1350, 273, 0, 273,
	0, 0, 0, 0, 0, 1350, 0, 0, 0, 0,
	0, 0, 2788, 1865, 1861, 0, 1858, 1856, 1857, 1849,
	1850, 1851, 1852, 1854, 1855, 0, 0, 0, 0, 1874,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 1881,
	0, 0, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 1881, 2788,
	0, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	1845, 1846, 0, 1878, 1879, 1880, 1889, 1890, 1891, 0,
	0, 0, 0, 0, 2788, 0, 0, 0, 0, 3437,
	0, 0, 1882, 1876, 3867, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 1895,
	0, 1900, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3466, 0, 0, 0, 1901, 0, 1881, 0,
	0, 0, 0, 0, 1881, 1847, 0, 3479, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 4686, 0, 0,
	0, 0, 2783, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 3500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2000, 0, 0, 0, 0, 0, 0,
	0, 273, 273, 0, 4715, 0, 0, 1865, 1861, 0,
	1858, 1856, 1857, 1849, 1850, 1851, 1852, 1854, 1855, 0,
	0, 0, 0, 0, 0, 0, 710, 710, 0, 4737,
	0, 2783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 1871, 1872, 1873, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 1509,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 1845, 1846, 1881, 1881, 1881,
	1881, 1881, 1881, 1881, 1881, 0, 0, 0, 0, 0,
	0, 1886, 0, 0, 1896, 0, 0, 1881, 1876, 0,
	0, 1875, 1877, 0, 0, 1848, 0, 0, 0, 0,
	1881, 0, 0, 0, 0, 0, 0, 1892, 0, 1893,
	0, 0, 0, 0, 0, 0, 1862, 1863, 0, 0,
	0, 1901, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 0, 0, 1884, 0, 0, 0, 797, 0,
	0, 0, 1509, 0, 0, 0, 2787, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 0,
	0, 3614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1110, 0, 0, 1532, 1532, 273, 3479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1894, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 1846, 2783, 0,
	0, 2042, 1509, 273, 0, 0, 0, 726, 726, 1360,
	0, 0, 0, 0, 0, 0, 0, 0, 1898, 1876,
	0, 0, 273, 0, 0, 0, 1848, 1853, 1509, 0,
	0, 0, 0, 273, 3152, 0, 0, 3152, 2048, 0,
	0, 0, 0, 273, 0, 2783, 0, 0, 1532, 0,
	0, 0, 1901, 273, 0, 0, 0, 0, 273, 0,
	0, 1847, 0, 273, 0, 0, 0, 0, 0, 0,
	2783, 1867, 0, 2347, 1874, 0, 1875, 1877, 0, 0,
	0, 0, 2958, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 3181, 3181, 0, 0, 0, 1869, 918, 2958,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3803, 0, 0, 1423, 0, 1845,
	1846, 0, 0, 0, 1887, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 1900, 0, 1870, 1871,
	1872, 1873, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 1901, 1509, 0, 0, 0,
	0, 0, 0, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4228, 0, 0, 0, 1355,
	0, 3862, 0, 1898, 0, 0, 0, 1875, 1877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 1860,
	1866, 1888, 1865, 1861, 0, 1858, 1856, 1857, 1849, 1850,
	1851, 1852, 1854, 1855, 0, 0, 0, 0, 0, 0,
	1509, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 1568, 1868, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 1853, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1360, 0,
	0, 1532, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1360, 0, 273, 1360, 0, 0, 0, 0, 0,
	0, 0, 2958, 2958, 0, 3540, 0, 0, 3614, 2958,
	1875, 1877, 0, 0, 0, 0, 3955, 4327, 0, 4327,
	1568, 1900, 0, 0, 1898, 0, 0, 0, 0, 0,
	0, 2958, 0, 2048, 0, 0, 0, 3540, 0, 1568,
	1568, 273, 2042, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2042, 0, 273, 2042, 0,
	273, 0, 3614, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 0,
	1874, 2958, 0, 2958, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 1881, 0, 0, 0, 0,
	0, 1856, 1857, 1849, 1850, 1851, 1852, 1854, 1855, 0,
	2958, 2958, 0, 0, 0, 0, 3152, 3152, 0, 0,
	0, 0, 0, 3540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 1881, 0, 1898, 0, 1881,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 1900, 1881, 2758, 2759, 2760, 2761, 2754, 2755,
	2756, 2757, 1881, 1881, 1881, 1881, 1881, 1881, 1881, 1881,
	1881, 1881, 1881, 1881, 1881, 1881, 1881, 1881, 1881, 1881,
	1881, 1881, 1881, 1881, 1881, 1881, 1881, 1881, 1881, 1881,
	1881, 1881, 1881, 1881, 1881, 1881, 1881, 1881, 0, 0,
	0, 1369, 0, 1881, 0, 1881, 1881, 1881, 1881, 0,
	0, 0, 0, 0, 0, 0, 1869, 2787, 2787, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1110, 1110,
	1110, 0, 1881, 0, 0, 2734, 2735, 2736, 2737, 0,
	0, 1858, 1856, 1857, 1849, 1850, 1851, 1852, 1854, 1855,
	1522, 0, 0, 0, 0, 0, 1538, 0, 2746, 2747,
	2748, 2749, 2742, 2743, 2744, 2745, 2750, 2751, 2752, 2753,
	0, 0, 0, 0, 0, 1900, 0, 0, 0, 0,
	0, 0, 0, 1881, 1570, 0, 1576, 0, 1582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2958,
	2048, 0, 2048, 0, 0, 4538, 0, 0, 0, 0,
	0, 0, 0, 1881, 273, 0, 1881, 0, 0, 1881,
	0, 0, 1881, 0, 4562, 0, 4562, 0, 1881, 1881,
	1881, 1881, 1881, 1881, 1881, 0, 0, 0, 0, 0,
	2730, 2731, 2732, 2733, 2738, 2739, 2740, 2741, 0, 0,
	0, 797, 0, 0, 0, 0, 0, 1674, 1355, 1679,
	0, 0, 3614, 0, 1350, 0, 1857, 1849, 1850, 1851,
	1852, 1854, 1855, 1693, 0, 1698, 0, 0, 0, 0,
	0, 0, 0, 2042, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 3403, 0, 2787,
	2787, 2787, 2787, 0, 0, 0, 1881, 0, 1881, 0,
	0, 0, 4538, 1881, 0, 4327, 0, 0, 1568, 0,
	0, 0, 2958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2347, 0, 0, 0, 0,
	0, 0, 4651, 1763, 0, 0, 1769, 0, 0, 0,
	0, 0, 0, 0, 1568, 0, 0, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 4265, 0, 0, 0, 0, 0, 0, 0,
	273, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1509, 0, 0, 0,
	0, 1845, 1846, 4283, 3867, 0, 0, 1889, 1890, 1891,
	0, 1509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 0, 0, 0, 3614,
	4706, 1848, 0, 0, 0, 0, 0, 1509, 4538, 0,
	1895, 0, 0, 0, 0, 0, 0, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 0, 0, 1901, 4327, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 4327, 0, 0, 1867, 1125, 0, 0,
	1922, 0, 0, 0, 0, 1864, 1935, 0, 0, 0,
	0, 1125, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4327, 4327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4327,
	0, 273, 4327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2048, 1870, 1871, 1872, 1873, 0, 0, 0,
	0, 0, 1568, 1853, 1568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1509,
	0, 1994, 1994, 1994, 0, 0, 0, 0, 0, 0,
	73, 0, 1360, 0, 0, 1355, 0, 0, 0, 0,
	0, 0, 1886, 0, 0, 1896, 4833, 74, 0, 0,
	0, 0, 1875, 1877, 1423, 0, 1881, 1881, 0, 1881,
	0, 0, 4562, 79, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 1863, 0,
	0, 0, 0, 0, 4491, 0, 0, 0, 0, 0,
	2958, 1509, 0, 0, 0, 1884, 0, 0, 0, 0,
	0, 0, 2347, 88, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 1355, 4491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 912, 0, 0, 3867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	0, 0, 0, 2545, 0, 94, 107, 1110, 0, 0,
	0, 1568, 0, 0, 0, 0, 0, 0, 0, 0,
	1881, 0, 0, 0, 0, 0, 0, 0, 0, 1898,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 95, 0, 0, 1509, 0,
	0, 1509, 0, 0, 0, 2545, 1881, 1881, 0, 2787,
	2787, 0, 0, 1881, 4538, 1874, 0, 0, 0, 0,
	0, 0, 0, 3403, 3403, 0, 0, 1881, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 1881, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 2958, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 4327, 1887, 4327, 0, 0, 1568,
	0, 0, 0, 0, 0, 0, 0, 0, 1509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1509, 0, 1900, 0, 2787,
	2787, 2787, 2787, 2787, 2787, 2787, 2787, 2787, 2787, 2787,
	2787, 2787, 2787, 2787, 2787, 2787, 2787, 2787, 2787, 0,
	2787, 3403, 3403, 3403, 3403, 0, 2879, 0, 0, 0,
	2958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 99, 3181, 0, 0,
	0, 0, 0, 0, 0, 0, 1881, 0, 0, 0,
	2958, 0, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 0, 0, 0, 3181, 0, 0, 0, 0, 0,
	0, 0, 1888, 1865, 1861, 0, 1858, 1856, 1857, 1849,
	1850, 1851, 1852, 1854, 1855, 0, 0, 0, 0, 0,
	0, 0, 192, 102, 0, 0, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1509, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	913, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 2453, 0, 0, 0,
	0, 0, 0, 1532, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 2480, 0, 0, 0, 0, 0, 0, 0, 0,
	1881, 1881, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2520, 0, 2524,
	0, 0, 0, 0, 0, 0, 2538, 0, 0, 0,
	196, 0, 0, 2547, 2548, 2549, 2550, 2551, 2552, 2553,
	2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563,
	2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573,
	2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 1355,
	2588, 0, 2590, 2591, 2592, 2593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1159, 0,
	1922, 0, 0, 0, 2668, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2698, 2701, 2704, 2707, 0, 0, 2713, 2714, 2715, 2716,
	2717, 2718, 2719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 272, 272, 0, 0, 0,
	0, 0, 0, 0, 2779, 0, 2791, 2793, 2798, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 810, 0, 842, 0, 1881, 1881, 0, 0, 1881,
	3403, 3403, 1881, 0, 1509, 0, 1881, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 821, 0, 0, 0,
	0, 842, 0, 0, 0, 0, 1881, 0, 0, 0,
	0, 1509, 0, 0, 0, 823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	1881, 1881, 1881, 1881, 0, 0, 0, 822, 0, 1881,
	0, 1881, 0, 0, 3403, 3403, 3403, 3403, 3403, 3403,
	3403, 3403, 3403, 3403, 3403, 3403, 3403, 3403, 3403, 3403,
	3403, 3403, 3403, 3403, 0, 0, 0, 3403, 0, 0,
	1881, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 0, 815,
	0, 1881, 0, 0, 0, 0, 829, 0, 0, 0,
	0, 1845, 1846, 0, 1878, 1879, 1880, 1889, 1890, 1891,
	820, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 1876, 0, 0, 0, 0, 0,
	0, 1848, 0, 1509, 1509, 0, 1509, 0, 0, 0,
	1895, 0, 1282, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1901, 0, 0,
	0, 819, 1881, 0, 0, 0, 1847, 1509, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 772, 0,
	0, 0, 0, 0, 0, 1864, 0, 0, 0, 1125,
	0, 0, 0, 1881, 0, 1195, 0, 0, 0, 0,
	0, 0, 0, 817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 1881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1509, 0, 0,
	0, 828, 0, 1870, 1871, 1872, 1873, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3111, 3112, 0,
	3114, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1886, 0, 0, 1896, 1881, 0, 0, 0,
	0, 0, 1875, 1877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1509, 0, 1892, 0,
	1893, 812, 0, 0, 0, 0, 0, 1862, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 1881, 0, 0, 1884, 1881, 1881, 0, 0,
	1881, 1881, 816, 0, 0, 1881, 73, 0, 0, 1881,
	1868, 0, 0, 0, 1881, 0, 0, 0, 1509, 1845,
	1846, 0, 0, 74, 0, 0, 0, 0, 0, 2787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	771, 0, 1876, 0, 0, 0, 0, 0, 1509, 1848,
	0, 0, 0, 0, 0, 824, 0, 0, 1894, 3235,
	0, 814, 0, 0, 0, 0, 0, 0, 0, 1286,
	0, 0, 0, 0, 0, 1901, 0, 0, 1883, 88,
	0, 0, 1845, 1846, 1847, 0, 0, 0, 0, 1898,
	0, 1509, 0, 0, 1867, 0, 0, 0, 2787, 0,
	0, 0, 0, 1864, 0, 1876, 0, 0, 0, 811,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	912, 0, 0, 0, 0, 0, 0, 1509, 0, 0,
	0, 1902, 1903, 49, 0, 110, 818, 0, 1901, 0,
	0, 94, 107, 0, 0, 1874, 0, 1847, 0, 0,
	773, 0, 0, 0, 1881, 0, 0, 1867, 0, 3822,
	0, 813, 0, 0, 0, 0, 1864, 0, 1869, 0,
	0, 0, 0, 0, 0, 1125, 0, 0, 0, 0,
	0, 1870, 1871, 1872, 1873, 826, 827, 3291, 3292, 0,
	0, 1853, 0, 3298, 0, 1887, 0, 0, 0, 1509,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3312, 3313, 0, 0, 0, 0, 2668, 0,
	0, 0, 3297, 0, 0, 0, 0, 1900, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1875, 1877, 0, 0, 1870, 1871, 1872, 1873, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 3322, 0, 1862, 1863, 0, 1509, 0,
	0, 1881, 1881, 1881, 0, 0, 0, 0, 0, 3336,
	0, 0, 1881, 1881, 3403, 2787, 0, 272, 0, 272,
	272, 1881, 0, 272, 1881, 0, 3348, 0, 1868, 1885,
	0, 0, 0, 1875, 1877, 0, 0, 0, 0, 1859,
	1860, 1866, 1888, 1865, 1861, 0, 1858, 1856, 1857, 1849,
	1850, 1851, 1852, 1854, 1855, 0, 0, 0, 1862, 1863,
	4236, 3403, 2787, 73, 4235, 0, 0, 0, 0, 0,
	272, 0, 272, 272, 0, 0, 272, 272, 1881, 0,
	74, 0, 99, 0, 0, 0, 1881, 2787, 0, 0,
	0, 1868, 0, 0, 1881, 0, 79, 842, 0, 0,
	0, 0, 0, 1881, 0, 1881, 0, 1898, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2798, 2798,
	2798, 0, 0, 0, 0, 0, 88, 0, 192, 102,
	0, 0, 106, 1994, 0, 0, 0, 0, 272, 272,
	0, 3441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 0, 0, 241, 0,
	1898, 0, 0, 0, 272, 272, 913, 912, 0, 0,
	0, 153, 0, 0, 0, 0, 1869, 0, 0, 0,
	49, 0, 110, 0, 0, 0, 0, 0, 94, 107,
	0, 3403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 1874, 0, 0, 1881,
	3403, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 1900, 0, 0, 0, 1869,
	0, 0, 3403, 0, 0, 0, 0, 197, 95, 1110,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 1110, 0, 0, 0, 0, 0, 235,
	272, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 193, 73, 0, 1125, 0, 0, 0, 0,
	0, 0, 1275, 1881, 272, 0, 0, 3572, 1900, 0,
	74, 0, 0, 0, 0, 0, 1668, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 1865, 1861, 0, 1858, 1856, 1857, 1849, 1850, 1851,
	1852, 1854, 1855, 0, 0, 0, 0, 0, 268, 268,
	706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3625, 3626, 0, 88, 0, 1286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 1861, 0, 1858, 1856, 1857,
	1849, 1850, 1851, 1852, 1854, 1855, 0, 912, 0, 99,
	0, 0, 0, 0, 0, 0, 0, 1286, 0, 0,
	0, 0, 110, 0, 1881, 0, 0, 0, 94, 107,
	0, 0, 0, 0, 0, 0, 0, 1845, 1846, 0,
	1878, 1879, 1880, 1889, 1890, 1891, 0, 0, 0, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	1876, 0, 0, 1286, 0, 192, 102, 1848, 0, 106,
	1286, 0, 0, 0, 0, 0, 1895, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1286, 0, 95, 0,
	0, 0, 0, 1901, 0, 241, 0, 0, 0, 0,
	0, 0, 1847, 913, 0, 0, 0, 0, 153, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 2016,
	0, 1282, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 1286, 0, 0, 0, 0,
	0, 272, 2016, 272, 0, 0, 0, 0, 0, 0,
	0, 842, 0, 0, 0, 0, 0, 0, 842, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 272, 0, 0, 1870,
	1871, 1872, 1873, 272, 0, 0, 235, 0, 0, 1853,
	0, 0, 0, 0, 0, 236, 0, 2538, 0, 193,
	0, 0, 0, 3820, 3821, 0, 0, 3824, 0, 0,
	0, 3827, 0, 0, 0, 0, 0, 0, 0, 99,
	3831, 0, 0, 1666, 0, 0, 0, 0, 1886, 3838,
	0, 1896, 0, 0, 3441, 0, 0, 0, 1875, 1877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3851,
	0, 0, 0, 0, 1892, 0, 1893, 0, 0, 0,
	0, 0, 757, 1862, 1863, 0, 0, 0, 0, 3874,
	3875, 0, 3876, 3877, 3878, 192, 102, 0, 0, 106,
	0, 1884, 740, 0, 0, 0, 0, 741, 0, 0,
	3884, 0, 0, 0, 3886, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 913, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 0, 742, 3915, 3916, 0,
	0, 0, 0, 0, 0, 0, 0, 743, 0, 0,
	0, 0, 0, 0, 1894, 3927, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 744, 0,
	3936, 0, 0, 0, 1883, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1898, 0, 0, 0, 157,
	763, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 272, 0, 0, 0,
	842, 745, 242, 0, 0, 0, 1286, 0, 1286, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 1286, 0, 236, 746, 0, 0, 193,
	0, 1874, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3992, 2080, 0, 0, 0, 0, 747,
	0, 0, 748, 196, 1869, 0, 272, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 272, 0, 4007, 772,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 1887, 0, 0, 0, 0, 0, 0, 272, 0,
	272, 0, 0, 0, 762, 0, 272, 0, 0, 0,
	0, 0, 4038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1900, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4059, 4060, 0,
	0, 0, 272, 0, 0, 272, 0, 1286, 0, 0,
	0, 0, 759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 842,
	272, 0, 272, 0, 272, 1885, 272, 0, 272, 0,
	0, 0, 0, 0, 0, 1859, 1860, 1866, 1888, 1865,
	1861, 0, 1858, 1856, 1857, 1849, 1850, 1851, 1852, 1854,
	1855, 0, 0, 0, 0, 0, 3357, 0, 0, 0,
	3358, 0, 0, 0, 0, 0, 0, 769, 0, 750,
	272, 272, 272, 272, 0, 0, 0, 0, 0, 0,
	0, 1336, 0, 1336, 1336, 0, 0, 0, 0, 0,
	1994, 0, 0, 0, 0, 0, 0, 0, 770, 4161,
	751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1420, 1286, 1286, 0, 0, 0,
	1530, 771, 0, 0, 0, 1286, 0, 0, 0, 752,
	0, 0, 0, 0, 767, 768, 765, 0, 0, 0,
	0, 0, 760, 0, 0, 753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4206, 4207, 0, 0,
	0, 0, 4211, 4212, 0, 0, 0, 4215, 4216, 0,
	0, 0, 0, 0, 0, 4220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4224, 0, 754, 0,
	761, 0, 0, 0, 0, 0, 0, 0, 755, 0,
	0, 0, 4229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 756, 0, 0, 0, 0, 764, 1672, 1673,
	0, 0, 1286, 0, 1286, 0, 1286, 0, 0, 0,
	0, 773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 758, 0, 1286, 1286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1286, 0,
	0, 0, 1282, 0, 0, 0, 0, 0, 0, 0,
	1286, 0, 1286, 1286, 1286, 0, 0, 0, 1282, 0,
	0, 1845, 1846, 0, 1878, 1879, 1880, 1889, 1890, 1891,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 1876, 0, 0, 0, 0, 0,
	0, 1848, 0, 272, 0, 0, 0, 0, 0, 0,
	1895, 0, 0, 0, 1790, 0, 0, 0, 0, 0,
	0, 1110, 0, 0, 0, 0, 0, 1901, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 272, 0, 0, 1864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 272, 0, 0, 0, 272, 0, 272, 0, 0,
	0, 0, 0, 0, 272, 272, 4369, 0, 0, 0,
	0, 2080, 2080, 1286, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 1871, 1872, 1873, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 1886, 0, 0, 1896, 1286, 0, 0, 0,
	0, 0, 1875, 1877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1892, 0,
	1893, 0, 0, 0, 0, 0, 272, 1862, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 272,
	0, 0, 4486, 4487, 4488, 1884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1286,
	1868, 0, 0, 0, 0, 2538, 1286, 842, 4497, 4498,
	0, 0, 0, 0, 0, 1286, 0, 0, 0, 2032,
	0, 0, 0, 0, 0, 0, 4506, 4509, 0, 0,
	0, 0, 1286, 0, 0, 2043, 0, 1530, 272, 0,
	842, 0, 0, 0, 0, 0, 0, 272, 1894, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1883, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1898,
	1336, 0, 0, 0, 0, 0, 0, 1530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4563, 0, 272, 0, 0, 0, 0, 0, 0, 4571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 272, 4579, 0, 0, 1110, 0, 0,
	0, 0, 0, 0, 272, 1874, 0, 0, 0, 0,
	0, 4588, 0, 0, 4590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 1846,
	0, 1878, 1879, 1880, 1889, 1890, 1891, 0, 0, 0,
	1286, 0, 0, 0, 0, 1887, 272, 272, 272, 272,
	1882, 1876, 0, 0, 0, 272, 0, 0, 1848, 0,
	272, 0, 0, 0, 0, 0, 0, 1895, 0, 0,
	0, 0, 0, 0, 0, 0, 2080, 1900, 0, 0,
	0, 0, 0, 0, 1901, 0, 0, 0, 0, 0,
	0, 272, 0, 1847, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	1860, 1866, 1888, 1865, 1861, 0, 1858, 1856, 1857, 1849,
	1850, 1851, 1852, 1854, 1855, 0, 0, 0, 0, 4714,
	2664, 0, 0, 4718, 2665, 0, 0, 0, 0, 0,
	1870, 1871, 1872, 1873, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2333, 0, 0, 0, 2340, 0, 0, 0, 0, 0,
	1286, 0, 0, 0, 0, 0, 2353, 0, 0, 1886,
	0, 0, 1896, 1286, 0, 1286, 0, 0, 0, 1875,
	1877, 1286, 2365, 0, 2365, 0, 0, 0, 0, 0,
	2372, 0, 0, 1286, 0, 1892, 0, 1893, 0, 0,
	0, 0, 0, 0, 1862, 1863, 0, 4788, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2340, 1868, 0, 2401,
	0, 0, 0, 0, 0, 0, 0, 2538, 0, 0,
	0, 0, 0, 0, 0, 0, 4509, 0, 0, 0,
	2421, 0, 0, 1845, 1846, 0, 1878, 1879, 1880, 1889,
	1890, 1891, 0, 0, 2437, 0, 2439, 0, 2441, 0,
	2443, 0, 2444, 0, 0, 1894, 1876, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 1282,
	0, 0, 1895, 0, 0, 1883, 0, 1110, 0, 0,
	0, 0, 0, 0, 0, 1282, 1898, 0, 0, 1901,
	0, 0, 0, 0, 2471, 2472, 2473, 0, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 2016, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 0, 0, 4909, 4909, 4909, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 272, 0,
	0, 0, 272, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4934, 0, 0, 0, 0, 0, 0,
	0, 0, 1887, 0, 0, 1870, 1871, 1872, 1873, 0,
	0, 0, 0, 272, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1900, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4909, 0, 0, 0, 1886, 272, 272, 1896, 0, 272,
	0, 0, 0, 0, 1875, 1877, 2016, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1892, 272, 1893, 0, 0, 0, 0, 0, 0, 1862,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 1884, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 1860, 1866, 1888,
	1865, 1861, 1868, 1858, 1856, 1857, 1849, 1850, 1851, 1852,
	1854, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4234, 0, 0, 0, 0, 2855, 0, 0, 0,
	0, 1148, 112, 0, 0, 0, 1172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	1894, 0, 0, 0, 0, 0, 1286, 1286, 0, 0,
	4909, 5066, 0, 0, 0, 842, 0, 0, 0, 0,
	0, 0, 1286, 0, 0, 272, 0, 0, 0, 272,
	0, 1898, 274, 274, 274, 0, 0, 0, 0, 0,
	1286, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 1286, 0, 0, 1286, 0, 1282, 0, 0,
	0, 274, 2906, 0, 0, 1336, 0, 0, 0, 1336,
	0, 1336, 0, 0, 0, 0, 112, 2080, 0, 0,
	0, 1286, 0, 0, 0, 0, 0, 1874, 2353, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 1845, 1846, 0, 1878,
	1879, 1880, 1889, 1890, 1891, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1887, 1882, 1876,
	0, 0, 0, 0, 0, 0, 1848, 272, 0, 272,
	0, 0, 2080, 0, 0, 1895, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1084, 0, 0, 1900,
	0, 0, 1901, 0, 0, 0, 0, 0, 1105, 0,
	0, 1847, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2340, 2340, 0, 1269, 0, 0, 0, 0,
	0, 0, 0, 1286, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 1860, 1866, 1888, 1865, 1861, 0, 1858, 1856,
	1857, 1849, 1850, 1851, 1852, 1854, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 1871,
	1872, 1873, 2340, 0, 0, 1286, 0, 0, 1853, 0,
	0, 2353, 0, 0, 0, 0, 0, 0, 0, 1286,
	0, 1286, 0, 0, 0, 1286, 0, 0, 0, 0,
	0, 0, 0, 1286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1286, 0, 1886, 0, 0,
	1896, 0, 0, 0, 0, 0, 0, 1875, 1877, 0,
	0, 1282, 1282, 0, 0, 0, 3205, 0, 0, 0,
	0, 0, 0, 1892, 1286, 1893, 0, 0, 0, 0,
	0, 0, 1862, 1863, 0, 3216, 0, 3219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1286,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1286, 0, 1286, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3251, 1530, 3253, 1530, 0, 0, 0, 0, 0, 3259,
	0, 0, 1286, 1894, 0, 1286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1883, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1898, 1336, 0, 0, 0, 0,
	0, 0, 0, 3288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2080, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1286, 0, 0, 0, 0, 0, 0, 0,
	1874, 0, 0, 0, 0, 0, 272, 0, 0, 1286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2080,
	2080, 0, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2080, 2080,
	1887, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 1845, 1846, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 2080, 1900, 272, 0, 0, 0, 0, 272, 1876,
	0, 0, 0, 272, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1286, 1286,
	0, 0, 0, 1282, 0, 0, 0, 0, 0, 0,
	0, 0, 1901, 0, 0, 0, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 1286, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 1885, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 1859, 1860, 1866, 1888, 1865, 1861,
	0, 1858, 1856, 1857, 1849, 1850, 1851, 1852, 1854, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3290, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 274, 274, 0,
	112, 274, 0, 0, 0, 0, 0, 0, 1870, 1871,
	1872, 1873, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 1429,
	274, 274, 0, 0, 274, 274, 0, 0, 0, 0,
	1429, 3489, 0, 0, 0, 0, 0, 1875, 1877, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 1282, 0,
	0, 0, 0, 112, 0, 112, 1282, 112, 0, 0,
	0, 0, 1862, 1863, 0, 0, 0, 1286, 1429, 0,
	2016, 1286, 1336, 0, 1286, 0, 1530, 1530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 274, 274, 0, 0,
	0, 0, 0, 272, 2080, 0, 0, 3536, 0, 1105,
	112, 112, 0, 0, 1429, 0, 0, 0, 0, 0,
	0, 1429, 274, 274, 0, 0, 112, 2016, 112, 2016,
	0, 0, 0, 0, 0, 0, 0, 1429, 0, 0,
	0, 0, 112, 0, 112, 0, 1286, 0, 0, 3591,
	3593, 272, 0, 2353, 0, 0, 0, 0, 0, 0,
	1286, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	272, 1286, 1286, 1286, 1898, 0, 0, 0, 1286, 1286,
	1286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 1429, 0, 0, 0,
	1286, 0, 1286, 0, 0, 0, 0, 0, 1286, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	1874, 0, 0, 0, 0, 1286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2080, 0, 0, 0,
	0, 0, 274, 1869, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3706,
	0, 0, 0, 3710, 0, 0, 0, 0, 0, 0,
	757, 0, 0, 0, 0, 0, 0, 0, 0, 1084,
	0, 0, 1900, 0, 0, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 0, 741, 0, 0, 0, 0,
	1915, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1286, 0, 0, 1921, 0,
	0, 0, 1927, 1286, 0, 0, 0, 1286, 1286, 0,
	1286, 0, 0, 0, 742, 0, 0, 1286, 0, 0,
	0, 0, 0, 0, 0, 743, 0, 0, 1286, 1286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1286, 0, 0, 0, 0, 744, 0, 1865, 1861,
	0, 1858, 1856, 1857, 1849, 1850, 1851, 1852, 1854, 1855,
	0, 3805, 0, 1530, 0, 0, 0, 0, 763, 0,
	0, 0, 0, 0, 1286, 0, 1286, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3818, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1286, 0, 0, 746, 0, 0, 0, 0, 0,
	0, 0, 2014, 0, 2017, 0, 112, 0, 0, 0,
	0, 1286, 0, 274, 0, 0, 0, 747, 0, 0,
	748, 0, 0, 0, 1429, 0, 0, 0, 0, 274,
	274, 274, 0, 0, 0, 272, 0, 772, 0, 274,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	1286, 1286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 762, 0, 0, 2016, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	1286, 0, 0, 0, 0, 1286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	759, 0, 0, 0, 1286, 1286, 1286, 1286, 1286, 1286,
	272, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1286, 0, 0, 0, 0, 0, 1429, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2080, 0, 0, 0, 750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2016, 0,
	0, 0, 278, 0, 0, 1286, 0, 1286, 0, 0,
	0, 0, 0, 2016, 0, 0, 770, 0, 751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 1286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 771,
	0, 0, 0, 0, 0, 0, 0, 752, 2016, 2016,
	0, 0, 767, 768, 765, 0, 2080, 834, 0, 0,
	760, 0, 0, 753, 274, 0, 1429, 1429, 274, 2016,
	0, 272, 2016, 0, 0, 0, 1429, 0, 0, 0,
	0, 0, 0, 0, 0, 834, 0, 0, 0, 0,
	0, 0, 0, 1286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 754, 0, 761, 0,
	0, 1286, 1286, 1286, 0, 0, 755, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 2353, 274, 0,
	756, 0, 1286, 0, 274, 764, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 2353, 0, 0, 773,
	0, 0, 0, 0, 0, 272, 274, 4115, 274, 0,
	758, 0, 1286, 0, 274, 1286, 0, 4125, 1105, 0,
	1105, 0, 0, 1429, 0, 1429, 0, 1429, 0, 0,
	0, 0, 2353, 0, 0, 0, 0, 4143, 0, 0,
	0, 0, 0, 0, 0, 1429, 1429, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1429,
	274, 0, 0, 274, 0, 272, 0, 2080, 0, 0,
	0, 1429, 0, 1429, 1429, 1429, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 1164, 1845,
	1846, 0, 0, 0, 0, 0, 0, 274, 274, 0,
	274, 0, 274, 4191, 274, 0, 274, 0, 0, 0,
	0, 0, 1876, 112, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 1286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1286, 0, 0, 0, 0, 1901, 0, 0, 274, 274,
	274, 274, 0, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1084,
	0, 0, 1084, 1084, 0, 1286, 1286, 0, 0, 0,
	0, 0, 0, 0, 1429, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1286, 0, 0, 1286,
	0, 0, 0, 1286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1286, 2016, 0, 2016, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2606, 0,
	0, 1870, 1871, 1872, 1873, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 1105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1921, 0,
	0, 0, 1921, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1429, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1875, 1877, 0, 0, 0, 0, 1286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1862, 1863, 0, 0, 0,
	0, 0, 0, 1845, 1846, 4347, 1878, 1879, 1880, 1889,
	1890, 1891, 0, 0, 0, 1269, 0, 0, 0, 0,
	0, 2353, 0, 0, 0, 1882, 1876, 1429, 1868, 0,
	0, 2017, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 1895, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 1429, 0, 0, 0, 0, 0, 1901,
	0, 0, 0, 0, 0, 0, 0, 0, 1847, 0,
	0, 274, 112, 0, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1898, 2353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4445, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 274,
	0, 0, 0, 274, 0, 274, 0, 0, 0, 0,
	0, 0, 274, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 1874, 0, 1870, 1871, 1872, 1873, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 1286, 0, 1286, 0, 0, 0, 0, 0, 0,
	0, 1429, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1886, 0, 0, 1896, 0, 0,
	274, 0, 0, 0, 1875, 1877, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	1892, 0, 1893, 0, 0, 1900, 0, 274, 0, 1862,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1884, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 274, 1429, 0, 0, 4548, 0,
	0, 0, 0, 0, 0, 0, 274, 274, 0, 1429,
	0, 0, 0, 0, 0, 1426, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1548, 0, 0, 0,
	0, 0, 0, 0, 112, 274, 0, 112, 0, 112,
	1894, 1865, 1861, 0, 1858, 1856, 1857, 1849, 1850, 1851,
	1852, 1854, 1855, 0, 0, 0, 0, 0, 0, 0,
	1883, 0, 0, 0, 1548, 0, 274, 0, 274, 2353,
	0, 1898, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 0, 0, 112,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 1429, 0, 0, 0, 0, 0, 0, 0, 0,
	1548, 0, 0, 0, 1429, 0, 1429, 1548, 0, 0,
	0, 0, 1429, 0, 0, 0, 0, 1874, 0, 0,
	274, 0, 0, 1548, 1429, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	1869, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 4676, 1530, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 1887, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1900,
	0, 0, 0, 0, 274, 274, 274, 274, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 1427, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 1549, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 1860, 1866, 1888, 1865, 1861, 0, 1858, 1856,
	1857, 1849, 1850, 1851, 1852, 1854, 1855, 0, 0, 2606,
	0, 0, 0, 0, 0, 0, 3360, 0, 0, 0,
	1549, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1921, 0, 0, 0, 0, 4794, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 0, 0, 0,
	0, 1845, 1846, 1549, 1878, 1879, 1880, 1889, 1890, 1891,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1549,
	0, 0, 0, 1882, 1876, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	1895, 0, 0, 0, 0, 0, 0, 0, 0, 4847,
	0, 0, 0, 0, 0, 0, 0, 1901, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 1549, 0,
	0, 0, 0, 0, 0, 1864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4891,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1426, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 834, 0, 0, 0, 0,
	0, 0, 834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1269, 1870, 1871, 1872, 1873, 0, 1429, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 1269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1429, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1886, 0, 0, 1896, 1429, 0, 0, 0,
	0, 0, 1875, 1877, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1892, 0,
	1893, 0, 1429, 0, 1426, 0, 0, 1862, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1884, 274, 0, 0, 0,
	274, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1894, 0,
	112, 112, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 274, 0, 0, 274, 1883, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 1898,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 1427, 0, 0, 0,
	0, 0, 0, 0, 112, 112, 0, 112, 0, 0,
	0, 0, 1548, 1548, 1429, 0, 0, 0, 0, 0,
	0, 0, 1426, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 1429, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	1429, 0, 1429, 0, 0, 1887, 1429, 0, 0, 0,
	0, 0, 0, 274, 1429, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 1429, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1900, 0, 1548,
	1427, 1548, 0, 1548, 0, 274, 0, 0, 0, 0,
	1269, 0, 0, 1105, 0, 0, 0, 0, 0, 0,
	0, 1548, 1548, 0, 0, 0, 0, 112, 112, 0,
	0, 0, 0, 0, 0, 1548, 0, 0, 0, 0,
	1429, 0, 0, 0, 0, 0, 0, 1548, 0, 1548,
	1548, 1548, 1429, 0, 1429, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 0, 0, 834, 0, 0, 0, 0, 0, 1859,
	1860, 1866, 1888, 1865, 1861, 0, 1858, 1856, 1857, 1849,
	1850, 1851, 1852, 1854, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 1429, 3359, 274, 1429, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 1549, 1549,
	0, 0, 0, 0, 0, 0, 0, 0, 1427, 0,
	0, 0, 0, 0, 0, 0, 1845, 1846, 0, 1878,
	1879, 1880, 1889, 1890, 1891, 0, 0, 0, 0, 0,
	1426, 0, 0, 1429, 0, 0, 0, 0, 1882, 1876,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	1429, 0, 0, 0, 0, 1895, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1901, 0, 0, 0, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 0, 1549, 0, 1549, 0, 1549,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1426, 0, 0, 112, 1549, 1549, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1549, 0, 0, 1269, 1269, 0, 0, 0, 0,
	0, 0, 0, 1549, 0, 1549, 1549, 1549, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 1871,
	1872, 1873, 0, 0, 0, 1429, 0, 0, 1853, 0,
	0, 0, 0, 1426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 1426,
	0, 0, 0, 0, 0, 0, 0, 1886, 0, 0,
	1896, 0, 0, 0, 0, 0, 0, 1875, 1877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1892, 0, 1893, 0, 0, 0, 0,
	0, 0, 1862, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 1427, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1894, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1429, 0,
	0, 0, 1429, 1883, 0, 1429, 0, 1426, 0, 0,
	0, 274, 0, 0, 1898, 0, 0, 0, 0, 1427,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 274, 0, 0, 0, 0, 274, 0, 0, 0,
	1874, 274, 0, 0, 0, 0, 0, 1429, 0, 0,
	0, 0, 0, 0, 0, 0, 1269, 0, 0, 1427,
	0, 1426, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 1429, 1429, 1429, 1548, 0, 0, 0, 1429,
	1429, 1429, 0, 0, 0, 1427, 0, 0, 0, 0,
	1887, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 1429, 0, 1429, 0, 0, 0, 274, 0, 1429,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1900, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 834, 0, 1429, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1548, 0, 1548, 0, 0, 0, 0, 0, 1548, 0,
	0, 0, 0, 0, 1885, 0, 0, 0, 0, 0,
	1548, 0, 0, 0, 1859, 1860, 1866, 1888, 1865, 1861,
	0, 1858, 1856, 1857, 1849, 1850, 1851, 1852, 1854, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3356,
	0, 0, 0, 1427, 0, 112, 0, 0, 0, 0,
	0, 1269, 0, 0, 0, 0, 0, 0, 0, 1269,
	0, 0, 0, 0, 0, 0, 0, 0, 1429, 1429,
	0, 1429, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1429,
	1429, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1429, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1427, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1549, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1429, 0, 0, 274, 0, 0, 274, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 1429, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1429, 1429, 1549, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 0, 0, 1549, 0, 1549, 0,
	0, 0, 0, 0, 1549, 0, 112, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 1549, 0, 0, 0,
	0, 1429, 274, 0, 0, 0, 1429, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1429, 1429, 1429, 1429, 1429,
	1429, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1429, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1429, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1429, 0, 1429, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1426, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 1846, 1429, 1878, 1879, 1880, 1889, 1890, 1891, 0,
	0, 0, 274, 0, 0, 0, 0, 1426, 0, 0,
	0, 0, 1882, 1876, 0, 0, 0, 0, 0, 0,
	1848, 0, 1426, 0, 0, 0, 0, 0, 0, 1895,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1901, 0, 1426, 0,
	0, 0, 0, 0, 0, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 1429, 1867, 0, 0, 0, 0,
	0, 0, 0, 274, 1864, 0, 0, 0, 0, 0,
	0, 0, 1429, 1429, 1429, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1429, 0, 0, 1429, 0, 0, 0,
	0, 2606, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 1871, 1872, 1873, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 274, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1426, 1886, 0, 0, 1896, 0, 0, 0, 0, 0,
	0, 1875, 1877, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1892, 0, 1893,
	1427, 0, 0, 0, 0, 0, 1862, 1863, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1548, 0, 1884, 0, 0, 0, 0, 0,
	0, 0, 0, 1427, 0, 0, 1548, 0, 1548, 1868,
	0, 112, 1426, 0, 0, 0, 0, 0, 1427, 834,
	1548, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 1548, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 1427, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1894, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 1883, 0, 274,
	0, 0, 0, 0, 1429, 0, 1548, 0, 1898, 0,
	0, 0, 0, 0, 1429, 0, 0, 0, 1548, 0,
	1548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 1846,
	0, 1878, 1879, 1880, 1889, 1890, 1891, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 1876, 0, 0, 1874, 0, 0, 0, 1848, 1426,
	0, 0, 1426, 0, 0, 0, 0, 1895, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 1901, 0, 0, 1429, 0, 0,
	0, 0, 0, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 1887, 0, 1427, 0, 0, 0,
	0, 0, 1864, 0, 0, 112, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 1900, 0, 0, 1426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1426, 0, 1549, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1549, 0, 1549, 0, 0, 0, 1427, 0,
	0, 0, 0, 0, 0, 0, 1549, 0, 0, 0,
	1870, 1871, 1872, 1873, 0, 0, 0, 0, 1549, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 1860,
	1866, 1888, 1865, 1861, 0, 1858, 1856, 1857, 1849, 1850,
	1851, 1852, 1854, 1855, 0, 0, 0, 0, 0, 1886,
	0, 0, 1896, 3355, 0, 0, 0, 0, 0, 1875,
	1877, 0, 1549, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1549, 1892, 1549, 1893, 0, 0,
	0, 0, 0, 0, 1862, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1426, 1884, 0, 1845, 1846, 0, 1878, 1879, 1880,
	1889, 1890, 1891, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 1427, 0, 1876, 1427, 0,
	0, 0, 834, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 1895, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1901, 0, 0, 0, 0, 1894, 0, 0, 0, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 1883, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 1898, 0, 0, 0,
	0, 0, 0, 0, 0, 1427, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1427, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 1871, 1872, 1873,
	0, 0, 0, 0, 1548, 1869, 1853, 0, 1548, 0,
	0, 1548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1887, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1886, 0, 0, 1896, 0,
	0, 0, 0, 0, 0, 1875, 1877, 0, 0, 0,
	0, 0, 0, 0, 1900, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 1863, 0, 1548, 0, 0, 0, 1427, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1548, 1548,
	1548, 0, 0, 1868, 0, 1548, 1548, 1548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 1548, 0, 1548,
	0, 0, 0, 0, 0, 1426, 1859, 1860, 1866, 1888,
	1865, 1861, 0, 1858, 1856, 1857, 1849, 1850, 1851, 1852,
	1854, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3354, 1426, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1898, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1549, 0, 0, 0, 1549, 0, 0, 1549, 0, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 1845, 1846,
	0, 1878, 1879, 1880, 1889, 1890, 1891, 0, 0, 0,
	0, 0, 0, 0, 1426, 1426, 0, 1426, 1887, 0,
	1882, 1876, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 1548, 1548, 1895, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1426, 0,
	1900, 0, 0, 0, 1901, 0, 0, 0, 0, 1549,
	0, 0, 0, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 1549, 1549, 1549, 0, 0, 0,
	0, 1549, 1549, 1549, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1549, 0, 1549, 0, 0, 1426, 0,
	0, 1427, 1885, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 1860, 1866, 1888, 1865, 1861, 1426, 1858,
	1856, 1857, 1849, 1850, 1851, 1852, 1854, 1855, 1427, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 1871, 1872, 1873, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 1548, 1548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1886,
	0, 0, 1896, 0, 0, 0, 0, 1426, 0, 1875,
	1877, 0, 1548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1892, 0, 1893, 0, 0,
	0, 0, 0, 0, 1862, 1863, 0, 0, 0, 0,
	0, 1548, 1548, 1548, 1548, 1548, 1548, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 1426,
	1427, 1427, 0, 1427, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1549, 1549, 0, 0, 0, 0, 0, 0, 1426,
	0, 0, 0, 0, 1427, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1894, 0, 0, 0, 0,
	0, 0, 0, 862, 0, 0, 0, 0, 0, 0,
	0, 0, 1426, 0, 1548, 1883, 0, 0, 0, 0,
	0, 0, 0, 864, 0, 0, 1898, 0, 865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1427, 0, 0, 0, 1426, 0,
	0, 1845, 1846, 0, 1878, 1879, 1880, 1889, 1890, 1891,
	0, 0, 0, 0, 1427, 0, 0, 866, 0, 883,
	0, 0, 0, 1882, 1876, 0, 0, 0, 0, 0,
	0, 1848, 1874, 0, 0, 0, 0, 0, 0, 0,
	1895, 0, 0, 0, 867, 0, 0, 0, 0, 868,
	0, 0, 0, 1549, 1549, 1869, 0, 1901, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	1426, 892, 0, 0, 0, 0, 1867, 0, 869, 0,
	0, 0, 1887, 0, 0, 1864, 0, 0, 1548, 1548,
	1548, 0, 890, 1427, 0, 0, 0, 0, 1549, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1900, 0, 0, 863, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1549, 1549, 1549,
	1549, 1549, 1549, 0, 0, 0, 0, 0, 0, 1426,
	870, 0, 1548, 871, 0, 1427, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 894, 0, 0, 0, 0,
	772, 0, 0, 1870, 1871, 1872, 1873, 0, 0, 0,
	0, 0, 0, 1853, 0, 1427, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 1860, 1866, 1888,
	1865, 1861, 0, 1858, 1856, 1857, 1849, 1850, 1851, 1852,
	1854, 1855, 1886, 0, 0, 1896, 0, 0, 1427, 0,
	1549, 2665, 1875, 1877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 893, 0, 0, 0, 0, 1892, 0,
	1893, 0, 0, 888, 0, 0, 0, 1862, 1863, 0,
	0, 0, 0, 0, 1427, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	874, 0, 0, 0, 0, 0, 1427, 0, 1894, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1549, 1549, 1549, 0, 1883, 0,
	1548, 875, 0, 0, 0, 0, 0, 0, 0, 1898,
	1548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 771, 0, 0, 1427, 0, 0, 1549, 0,
	0, 0, 0, 0, 0, 861, 0, 885, 0, 0,
	0, 0, 0, 0, 0, 1874, 876, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 882, 1548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 877,
	0, 0, 0, 878, 897, 1887, 896, 0, 0, 879,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 880, 0, 0, 0, 0, 889, 0,
	0, 0, 0, 0, 898, 0, 895, 1900, 0, 0,
	0, 0, 773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	1860, 1866, 1888, 1865, 1861, 0, 1858, 1856, 1857, 1849,
	1850, 1851, 1852, 1854, 1855, 0, 0, 0, 0, 0,
	4834, 0, 0, 0, 0, 0, 1549, 0, 1424, 0,
	0, 0, 0, 0, 0, 0, 1549, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 1430, 289, 290, 1431, 1432, 1433, 0, 1434,
	652, 1435, 1436, 1437, 1438, 291, 292, 1226, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 1439, 657, 301, 302, 303, 304, 305, 306, 1440,
	1441, 0, 307, 658, 659, 660, 1442, 308, 309, 661,
	1443, 1510, 1444, 310, 311, 312, 313, 314, 315, 316,
	0, 1445, 318, 319, 320, 317, 321, 1446, 322, 1549,
	323, 324, 325, 326, 327, 328, 1447, 329, 330, 331,
	1227, 332, 333, 334, 1448, 1449, 1451, 1450, 1452, 1453,
	1454, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 1455, 345, 341, 343, 1456, 346, 344, 347, 1457,
	348, 349, 350, 1458, 1459, 351, 352, 353, 1460, 354,
	355, 356, 1461, 357, 358, 359, 1462, 360, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 1463, 279, 1464, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 1465,
	378, 379, 380, 1466, 1467, 1228, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	1468, 393, 670, 1469, 671, 394, 1470, 395, 396, 397,
	398, 399, 672, 673, 674, 486, 1230, 400, 401, 1471,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 1472, 1229, 410, 675, 676, 1473, 677, 1474,
	411, 412, 1231, 678, 1232, 413, 414, 415, 1233, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 1475,
	423, 425, 424, 1476, 426, 679, 1234, 427, 428, 1235,
	1477, 429, 430, 431, 432, 433, 434, 437, 1478, 1479,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1236,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 1237, 480, 468,
	1480, 281, 1238, 482, 483, 484, 1481, 680, 485, 681,
	487, 488, 1482, 0, 489, 0, 490, 1483, 1484, 492,
	493, 494, 1485, 1486, 495, 496, 682, 1239, 497, 1240,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 1487, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 1488,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 1489, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	1490, 550, 551, 552, 1241, 553, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 1491, 575, 576, 574, 577,
	578, 579, 1492, 580, 581, 563, 564, 582, 583, 1242,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	1493, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 1494, 608,
	609, 0, 605, 596, 1495, 610, 611, 612, 613, 614,
	615, 616, 617, 1496, 618, 693, 694, 695, 696, 1497,
	627, 1498, 619, 620, 621, 697, 622, 698, 1499, 623,
	624, 625, 626, 0, 628, 629, 1500, 1501, 630, 631,
	632, 634, 635, 633, 636, 1502, 637, 1503, 0, 638,
	639, 640, 699, 700, 701, 1504, 642, 641, 643, 644,
	702, 645, 646, 1505, 1506, 1507, 1508, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1424, 0, 0, 0, 0, 0, 0,
	0, 2833, 0, 0, 0, 0, 0, 0, 0, 2834,
	282, 284, 283, 285, 286, 287, 288, 1430, 289, 290,
	1431, 1432, 1433, 0, 1434, 652, 1435, 1436, 1437, 1438,
	291, 292, 1226, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 1439, 657, 301, 302,
	303, 304, 305, 306, 1440, 1441, 0, 307, 658, 659,
	660, 1442, 308, 309, 661, 1443, 1510, 1444, 310, 311,
	312, 313, 314, 315, 316, 0, 1445, 318, 319, 320,
	317, 321, 1446, 322, 0, 323, 324, 325, 326, 327,
	328, 1447, 329, 330, 331, 1227, 332, 333, 334, 1448,
	1449, 1451, 1450, 1452, 1453, 1454, 335, 336, 337, 338,
	339, 0, 340, 342, 662, 663, 1455, 345, 341, 343,
	1456, 346, 344, 347, 1457, 348, 349, 350, 1458, 1459,
	351, 352, 353, 1460, 354, 355, 356, 1461, 357, 358,
	359, 1462, 360, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 1463,
	279, 1464, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 1465, 378, 379, 380, 1466, 1467,
	1228, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 1468, 393, 670, 1469, 671,
	394, 1470, 395, 396, 397, 398, 399, 672, 673, 674,
	486, 1230, 400, 401, 1471, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 1472, 1229, 410,
	675, 676, 1473, 677, 1474, 411, 412, 1231, 678, 1232,
	413, 414, 415, 1233, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 1475, 423, 425, 424, 1476, 426,
	679, 1234, 427, 428, 1235, 1477, 429, 430, 431, 432,
	433, 434, 437, 1478, 1479, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1236, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 1237, 480, 468, 1480, 281, 1238, 482, 483,
	484, 1481, 680, 485, 681, 487, 488, 1482, 0, 489,
	0, 490, 1483, 1484, 492, 493, 494, 1485, 1486, 495,
	496, 682, 1239, 497, 1240, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 1487, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 1488, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 1489, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 1490, 550, 551, 552, 1241,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	1491, 575, 576, 574, 577, 578, 579, 1492, 580, 581,
	563, 564, 582, 583, 1242, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 1493, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 1494, 608, 609, 0, 605, 596, 1495,
	610, 611, 612, 613, 614, 615, 616, 617, 1496, 618,
	693, 694, 695, 696, 1497, 627, 1498, 619, 620, 621,
	697, 622, 698, 1499, 623, 624, 625, 626, 0, 628,
	629, 1500, 1501, 630, 631, 632, 634, 635, 633, 636,
	1502, 637, 1503, 0, 638, 639, 640, 699, 700, 701,
	1504, 642, 641, 643, 644, 702, 645, 646, 1505, 1506,
	1507, 1508, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1424, 0, 0, 0,
	3845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3847, 282, 284, 283, 285, 286, 287, 288,
	1430, 289, 290, 1431, 1432, 1433, 0, 1434, 652, 1435,
	1436, 1437, 1438, 291, 292, 1226, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 1439,
	657, 301, 302, 303, 304, 305, 306, 1440, 1441, 0,
	307, 658, 659, 660, 1442, 308, 309, 661, 1443, 1510,
	1444, 310, 311, 312, 313, 314, 315, 316, 0, 1445,
	318, 319, 320, 317, 321, 1446, 322, 0, 323, 324,
	325, 326, 327, 328, 1447, 329, 330, 331, 1227, 332,
	333, 334, 1448, 1449, 1451, 1450, 1452, 1453, 1454, 335,
	336, 337, 338, 339, 0, 340, 342, 662, 663, 1455,
	345, 341, 343, 1456, 346, 344, 347, 1457, 348, 349,
	350, 1458, 1459, 351, 352, 353, 1460, 354, 355, 356,
	1461, 357, 358, 359, 1462, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 665,
	666, 373, 1463, 279, 1464, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 1465, 378, 379,
	380, 1466, 1467, 1228, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 1468, 393,
	670, 1469, 671, 394, 1470, 395, 396, 397, 398, 399,
	672, 673, 674, 486, 1230, 400, 401, 1471, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	1472, 1229, 410, 675, 676, 1473, 677, 1474, 411, 412,
	1231, 678, 1232, 413, 414, 415, 1233, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 1475, 423, 425,
	424, 1476, 426, 679, 1234, 427, 428, 1235, 1477, 429,
	430, 431, 432, 433, 434, 437, 1478, 1479, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1236, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 1237, 480, 468, 1480, 281,
	1238, 482, 483, 484, 1481, 680, 485, 681, 487, 488,
	1482, 0, 489, 0, 490, 1483, 1484, 492, 493, 494,
	1485, 1486, 495, 496, 682, 1239, 497, 1240, 683, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 1487, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 686, 517, 687, 518, 519, 1488, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 1489, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 1490, 550,
	551, 552, 1241, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 1491, 575, 576, 574, 577, 578, 579,
	1492, 580, 581, 563, 564, 582, 583, 1242, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 1493, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 692, 606, 607, 1494, 608, 609, 0,
	605, 596, 1495, 610, 611, 612, 613, 614, 615, 616,
	617, 1496, 618, 693, 694, 695, 696, 1497, 627, 1498,
	619, 620, 621, 697, 622, 698, 1499, 623, 624, 625,
	626, 0, 628, 629, 1500, 1501, 630, 631, 632, 634,
	635, 633, 636, 1502, 637, 1503, 0, 638, 639, 640,
	699, 700, 701, 1504, 642, 641, 643, 644, 702, 645,
	646, 1505, 1506, 1507, 1508, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1424, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4264,
	282, 284, 283, 285, 286, 287, 288, 1430, 289, 290,
	1431, 1432, 1433, 0, 1434, 652, 1435, 1436, 1437, 1438,
	291, 292, 1226, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 1439, 657, 301, 302,
	303, 304, 305, 306, 1440, 1441, 0, 307, 658, 659,
	660, 1442, 308, 309, 661, 1443, 1510, 1444, 310, 311,
	312, 313, 314, 315, 316, 0, 1445, 318, 319, 320,
	317, 321, 1446, 322, 0, 323, 324, 325, 326, 327,
	328, 1447, 329, 330, 331, 1227, 332, 333, 334, 1448,
	1449, 1451, 1450, 1452, 1453, 1454, 335, 336, 337, 338,
	339, 0, 340, 342, 662, 663, 1455, 345, 341, 343,
	1456, 346, 344, 347, 1457, 348, 349, 350, 1458, 1459,
	351, 352, 353, 1460, 354, 355, 356, 1461, 357, 358,
	359, 1462, 360, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 1463,
	279, 1464, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 1465, 378, 379, 380, 1466, 1467,
	1228, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 1468, 393, 670, 1469, 671,
	394, 1470, 395, 396, 397, 398, 399, 672, 673, 674,
	486, 1230, 400, 401, 1471, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 1472, 1229, 410,
	675, 676, 1473, 677, 1474, 411, 412, 1231, 678, 1232,
	413, 414, 415, 1233, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 1475, 423, 425, 424, 1476, 426,
	679, 1234, 427, 428, 1235, 1477, 429, 430, 431, 432,
	433, 434, 437, 1478, 1479, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1236, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 1237, 480, 468, 1480, 281, 1238, 482, 483,
	484, 1481, 680, 485, 681, 487, 488, 1482, 0, 489,
	0, 490, 1483, 1484, 492, 493, 494, 1485, 1486, 495,
	496, 682, 1239, 497, 1240, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 1487, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 1488, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 1489, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 1490, 550, 551, 552, 1241,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	1491, 575, 576, 574, 577, 578, 579, 1492, 580, 581,
	563, 564, 582, 583, 1242, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 1493, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 1494, 608, 609, 0, 605, 596, 1495,
	610, 611, 612, 613, 614, 615, 616, 617, 1496, 618,
	693, 694, 695, 696, 1497, 627, 1498, 619, 620, 621,
	697, 622, 698, 1499, 623, 624, 625, 626, 0, 628,
	629, 1500, 1501, 630, 631, 632, 634, 635, 633, 636,
	1502, 637, 1503, 0, 638, 639, 640, 699, 700, 701,
	1504, 642, 641, 643, 644, 702, 645, 646, 1505, 1506,
	1507, 1508, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1424, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4262, 282, 284, 283,
	285, 286, 287, 288, 1430, 289, 290, 1431, 1432, 1433,
	0, 1434, 652, 1435, 1436, 1437, 1438, 291, 292, 1226,
	293, 294, 295, 296, 297, 298, 653, 654, 0, 299,
	655, 300, 656, 1439, 657, 301, 302, 303, 304, 305,
	306, 1440, 1441, 0, 307, 658, 659, 660, 1442, 308,
	309, 661, 1443, 1510, 1444, 310, 311, 312, 313, 314,
	315, 316, 0, 1445, 318, 319, 320, 317, 321, 1446,
	322, 0, 323, 324, 325, 326, 327, 328, 1447, 329,
	330, 331, 1227, 332, 333, 334, 1448, 1449, 1451, 1450,
	1452, 1453, 1454, 335, 336, 337, 338, 339, 0, 340,
	342, 662, 663, 1455, 345, 341, 343, 1456, 346, 344,
	347, 1457, 348, 349, 350, 1458, 1459, 351, 352, 353,
	1460, 354, 355, 356, 1461, 357, 358, 359, 1462, 360,
	361, 664, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 665, 666, 373, 1463, 279, 1464, 0,
	0, 0, 0, 374, 375, 376, 667, 0, 0, 0,
	377, 1465, 378, 379, 380, 1466, 1467, 1228, 381, 382,
	383, 668, 669, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 1468, 393, 670, 1469, 671, 394, 1470, 395,
	396, 397, 398, 399, 672, 673, 674, 486, 1230, 400,
	401, 1471, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 1472, 1229, 410, 675, 676, 1473,
	677, 1474, 411, 412, 1231, 678, 1232, 413, 414, 415,
	1233, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 1475, 423, 425, 424, 1476, 426, 679, 1234, 427,
	428, 1235, 1477, 429, 430, 431, 432, 433, 434, 437,
	1478, 1479, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1236, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 1237,
	480, 468, 1480, 281, 1238, 482, 483, 484, 1481, 680,
	485, 681, 487, 488, 1482, 0, 489, 0, 490, 1483,
	1484, 492, 493, 494, 1485, 1486, 495, 496, 682, 1239,
	497, 1240, 683, 498, 499, 491, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 1487, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 686, 517, 687, 518,
	519, 1488, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 688, 529, 530, 532, 531, 533, 1489, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 1490, 550, 551, 552, 1241, 553, 554, 555,
	556, 557, 689, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 1491, 575, 576,
	574, 577, 578, 579, 1492, 580, 581, 563, 564, 582,
	583, 1242, 584, 585, 586, 587, 588, 589, 590, 690,
	0, 591, 1493, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 691, 599, 600, 601, 602, 692, 606, 607,
	1494, 608, 609, 0, 605, 596, 1495, 610, 611, 612,
	613, 614, 615, 616, 617, 1496, 618, 693, 694, 695,
	696, 1497, 627, 1498, 619, 620, 621, 697, 622, 698,
	1499, 623, 624, 625, 626, 0, 628, 629, 1500, 1501,
	630, 631, 632, 634, 635, 633, 636, 1502, 637, 1503,
	0, 638, 639, 640, 699, 700, 701, 1504, 642, 641,
	643, 644, 702, 645, 646, 1505, 1506, 1507, 1508, 647,
	648, 703, 649, 650, 651, 0, 0, 0, 0, 0,
	0, 1424, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4492, 282, 284,
	283, 285, 286, 287, 288, 1430, 289, 290, 1431, 1432,
	1433, 0, 1434, 652, 1435, 1436, 1437, 1438, 291, 292,
	1226, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 1439, 657, 301, 302, 303, 304,
	305, 306, 1440, 1441, 0, 307, 658, 659, 660, 1442,
	308, 309, 661, 1443, 1510, 1444, 310, 311, 312, 313,
	314, 315, 316, 0, 1445, 318, 319, 320, 317, 321,
	1446, 322, 0, 323, 324, 325, 326, 327, 328, 1447,
	329, 330, 331, 1227, 332, 333, 334, 1448, 1449, 1451,
	1450, 1452, 1453, 1454, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 1455, 345, 341, 343, 1456, 346,
	344, 347, 1457, 348, 349, 350, 1458, 1459, 351, 352,
	353, 1460, 354, 355, 356, 1461, 357, 358, 359, 1462,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 1463, 279, 1464,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 1465, 378, 379, 380, 1466, 1467, 1228, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 1468, 393, 670, 1469, 671, 394, 1470,
	395, 396, 397, 398, 399, 672, 673, 674, 486, 1230,
	400, 401, 1471, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 1472, 1229, 410, 675, 676,
	1473, 677, 1474, 411, 412, 1231, 678, 1232, 413, 414,
	415, 1233, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 1475, 423, 425, 424, 1476, 426, 679, 1234,
	427, 428, 1235, 1477, 429, 430, 431, 432, 433, 434,
	437, 1478, 1479, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1236, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1237, 480, 468, 1480, 281, 1238, 482, 483, 484, 1481,
	680, 485, 681, 487, 488, 1482, 0, 489, 0, 490,
	1483, 1484, 492, 493, 494, 1485, 1486, 495, 496, 682,
	1239, 497, 1240, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 1487, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 1488, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 1489,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 1490, 550, 551, 552, 1241, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 1491, 575,
	576, 574, 577, 578, 579, 1492, 580, 581, 563, 564,
	582, 583, 1242, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 1493, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 1494, 608, 609, 0, 605, 596, 1495, 610, 611,
	612, 613, 614, 615, 616, 617, 1496, 618, 693, 694,
	695, 696, 1497, 627, 1498, 619, 620, 621, 697, 622,
	698, 1499, 623, 624, 625, 626, 0, 628, 629, 1500,
	1501, 630, 631, 632, 634, 635, 633, 636, 1502, 637,
	1503, 0, 638, 639, 640, 699, 700, 701, 1504, 642,
	641, 643, 644, 702, 645, 646, 1505, 1506, 1507, 1508,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 1424, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4356, 282,
	284, 283, 285, 286, 287, 288, 1430, 289, 290, 1431,
	1432, 1433, 0, 1434, 652, 1435, 1436, 1437, 1438, 291,
	292, 1226, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 1439, 657, 301, 302, 303,
	304, 305, 306, 1440, 1441, 0, 307, 658, 659, 660,
	1442, 308, 309, 661, 1443, 1510, 1444, 310, 311, 312,
	313, 314, 315, 316, 0, 1445, 318, 319, 320, 317,
	321, 1446, 322, 0, 323, 324, 325, 326, 327, 328,
	1447, 329, 330, 331, 1227, 332, 333, 334, 1448, 1449,
	1451, 1450, 1452, 1453, 1454, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 1455, 345, 341, 343, 1456,
	346, 344, 347, 1457, 348, 349, 350, 1458, 1459, 351,
	352, 353, 1460, 354, 355, 356, 1461, 357, 358, 359,
	1462, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 1463, 279,
	1464, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 1465, 378, 379, 380, 1466, 1467, 1228,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 1468, 393, 670, 1469, 671, 394,
	1470, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	1230, 400, 401, 1471, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 1472, 1229, 410, 675,
	676, 1473, 677, 1474, 411, 412, 1231, 678, 1232, 413,
	414, 415, 1233, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 1475, 423, 425, 424, 1476, 426, 679,
	1234, 427, 428, 1235, 1477, 429, 430, 431, 432, 433,
	434, 437, 1478, 1479, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1236, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 1237, 480, 468, 1480, 281, 1238, 482, 483, 484,
	1481, 680, 485, 681, 487, 488, 1482, 0, 489, 0,
	490, 1483, 1484, 492, 493, 494, 1485, 1486, 495, 496,
	682, 1239, 497, 1240, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 1487, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 1488, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	1489, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 1490, 550, 551, 552, 1241, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 1491,
	575, 576, 574, 577, 578, 579, 1492, 580, 581, 563,
	564, 582, 583, 1242, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 1493, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 1494, 608, 609, 0, 605, 596, 1495, 610,
	611, 612, 613, 614, 615, 616, 617, 1496, 618, 693,
	694, 695, 696, 1497, 627, 1498, 619, 620, 621, 697,
	622, 698, 1499, 623, 624, 625, 626, 0, 628, 629,
	1500, 1501, 630, 631, 632, 634, 635, 633, 636, 1502,
	637, 1503, 0, 638, 639, 640, 699, 700, 701, 1504,
	642, 641, 643, 644, 702, 645, 646, 1505, 1506, 1507,
	1508, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 1424, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4192,
	282, 284, 283, 285, 286, 287, 288, 1430, 289, 290,
	1431, 1432, 1433, 0, 1434, 652, 1435, 1436, 1437, 1438,
	291, 292, 1226, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 1439, 657, 301, 302,
	303, 304, 305, 306, 1440, 1441, 0, 307, 658, 659,
	660, 1442, 308, 309, 661, 1443, 1510, 1444, 310, 311,
	312, 313, 314, 315, 316, 0, 1445, 318, 319, 320,
	317, 321, 1446, 322, 0, 323, 324, 325, 326, 327,
	328, 1447, 329, 330, 331, 1227, 332, 333, 334, 1448,
	1449, 1451, 1450, 1452, 1453, 1454, 335, 336, 337, 338,
	339, 0, 340, 342, 662, 663, 1455, 345, 341, 343,
	1456, 346, 344, 347, 1457, 348, 349, 350, 1458, 1459,
	351, 352, 353, 1460, 354, 355, 356, 1461, 357, 358,
	359, 1462, 360, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 1463,
	279, 1464, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 1465, 378, 379, 380, 1466, 1467,
	1228, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 1468, 393, 670, 1469, 671,
	394, 1470, 395, 396, 397, 398, 399, 672, 673, 674,
	486, 1230, 400, 401, 1471, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 1472, 1229, 410,
	675, 676, 1473, 677, 1474, 411, 412, 1231, 678, 1232,
	413, 414, 415, 1233, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 1475, 423, 425, 424, 1476, 426,
	679, 1234, 427, 428, 1235, 1477, 429, 430, 431, 432,
	433, 434, 437, 1478, 1479, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1236, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 1237, 480, 468, 1480, 281, 1238, 482, 483,
	484, 1481, 680, 485, 681, 487, 488, 1482, 0, 489,
	0, 490, 1483, 1484, 492, 493, 494, 1485, 1486, 495,
	496, 682, 1239, 497, 1240, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 1487, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 1488, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 1489, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 1490, 550, 551, 552, 1241,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	1491, 575, 576, 574, 577, 578, 579, 1492, 580, 581,
	563, 564, 582, 583, 1242, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 1493, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 1494, 608, 609, 0, 605, 596, 1495,
	610, 611, 612, 613, 614, 615, 616, 617, 1496, 618,
	693, 694, 695, 696, 1497, 627, 1498, 619, 620, 621,
	697, 622, 698, 1499, 623, 624, 625, 626, 0, 628,
	629, 1500, 1501, 630, 631, 632, 634, 635, 633, 636,
	1502, 637, 1503, 0, 638, 639, 640, 699, 700, 701,
	1504, 642, 641, 643, 644, 702, 645, 646, 1505, 1506,
	1507, 1508, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 1424, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3863, 282, 284, 283, 285, 286, 287, 288, 1430, 289,
	290, 1431, 1432, 1433, 0, 1434, 652, 1435, 1436, 1437,
	1438, 291, 292, 1226, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 1439, 657, 301,
	302, 303, 304, 305, 306, 1440, 1441, 0, 307, 658,
	659, 660, 1442, 308, 309, 661, 1443, 1510, 1444, 310,
	311, 312, 313, 314, 315, 316, 0, 1445, 318, 319,
	320, 317, 321, 1446, 322, 0, 323, 324, 325, 326,
	327, 328, 1447, 329, 330, 331, 1227, 332, 333, 334,
	1448, 1449, 1451, 1450, 1452, 1453, 1454, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 1455, 345, 341,
	343, 1456, 346, 344, 347, 1457, 348, 349, 350, 1458,
	1459, 351, 352, 353, 1460, 354, 355, 356, 1461, 357,
	358, 359, 1462, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	1463, 279, 1464, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 1465, 378, 379, 380, 1466,
	1467, 1228, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 1468, 393, 670, 1469,
	671, 394, 1470, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 1230, 400, 401, 1471, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 1472, 1229,
	410, 675, 676, 1473, 677, 1474, 411, 412, 1231, 678,
	1232, 413, 414, 415, 1233, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 1475, 423, 425, 424, 1476,
	426, 679, 1234, 427, 428, 1235, 1477, 429, 430, 431,
	432, 433, 434, 437, 1478, 1479, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1236, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 1237, 480, 468, 1480, 281, 1238, 482,
	483, 484, 1481, 680, 485, 681, 487, 488, 1482, 0,
	489, 0, 490, 1483, 1484, 492, 493, 494, 1485, 1486,
	495, 496, 682, 1239, 497, 1240, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 1487,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 1488, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 1489, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 1490, 550, 551, 552,
	1241, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 1491, 575, 576, 574, 577, 578, 579, 1492, 580,
	581, 563, 564, 582, 583, 1242, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 1493, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 1494, 608, 609, 0, 605, 596,
	1495, 610, 611, 612, 613, 614, 615, 616, 617, 1496,
	618, 693, 694, 695, 696, 1497, 627, 1498, 619, 620,
	621, 697, 622, 698, 1499, 623, 624, 625, 626, 0,
	628, 629, 1500, 1501, 630, 631, 632, 634, 635, 633,
	636, 1502, 637, 1503, 0, 638, 639, 640, 699, 700,
	701, 1504, 642, 641, 643, 644, 702, 645, 646, 1505,
	1506, 1507, 1508, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 1424, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3679, 282, 284, 283, 285, 286, 287, 288, 1430,
	289, 290, 1431, 1432, 1433, 0, 1434, 652, 1435, 1436,
	1437, 1438, 291, 292, 1226, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 1439, 657,
	301, 302, 303, 304, 305, 306, 1440, 1441, 0, 307,
	658, 659, 660, 1442, 308, 309, 661, 1443, 1510, 1444,
	310, 311, 312, 313, 314, 315, 316, 0, 1445, 318,
	319, 320, 317, 321, 1446, 322, 0, 323, 324, 325,
	326, 327, 328, 1447, 329, 330, 331, 1227, 332, 333,
	334, 1448, 1449, 1451, 1450, 1452, 1453, 1454, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 1455, 345,
	341, 343, 1456, 346, 344, 347, 1457, 348, 349, 350,
	1458, 1459, 351, 352, 353, 1460, 354, 355, 356, 1461,
	357, 358, 359, 1462, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 1463, 279, 1464, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 1465, 378, 379, 380,
	1466, 1467, 1228, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 1468, 393, 670,
	1469, 671, 394, 1470, 395, 396, 397, 398, 399, 672,
	673, 674, 486, 1230, 400, 401, 1471, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 1472,
	1229, 410, 675, 676, 1473, 677, 1474, 411, 412, 1231,
	678, 1232, 413, 414, 415, 1233, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 1475, 423, 425, 424,
	1476, 426, 679, 1234, 427, 428, 1235, 1477, 429, 430,
	431, 432, 433, 434, 437, 1478, 1479, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1236, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 1237, 480, 468, 1480, 281, 1238,
	482, 483, 484, 1481, 680, 485, 681, 487, 488, 1482,
	0, 489, 0, 490, 1483, 1484, 492, 493, 494, 1485,
	1486, 495, 496, 682, 1239, 497, 1240, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	1487, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 1488, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 1489, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 1490, 550, 551,
	552, 1241, 553, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 1491, 575, 576, 574, 577, 578, 579, 1492,
	580, 581, 563, 564, 582, 583, 1242, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 1493, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 1494, 608, 609, 0, 605,
	596, 1495, 610, 611, 612, 613, 614, 615, 616, 617,
	1496, 618, 693, 694, 695, 696, 1497, 627, 1498, 619,
	620, 621, 697, 622, 698, 1499, 623, 624, 625, 626,
	0, 628, 629, 1500, 1501, 630, 631, 632, 634, 635,
	633, 636, 1502, 637, 1503, 0, 638, 639, 640, 699,
	700, 701, 1504, 642, 641, 643, 644, 702, 645, 646,
	1505, 1506, 1507, 1508, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 1424, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2688, 282, 284, 283, 285, 286, 287, 288,
	1430, 289, 290, 1431, 1432, 1433, 0, 1434, 652, 1435,
	1436, 1437, 1438, 291, 292, 1226, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 1439,
	657, 301, 302, 303, 304, 305, 306, 1440, 1441, 0,
	307, 658, 659, 660, 1442, 308, 309, 661, 1443, 1510,
	1444, 310, 311, 312, 313, 314, 315, 316, 0, 1445,
	318, 319, 320, 317, 321, 1446, 322, 0, 323, 324,
	325, 326, 327, 328, 1447, 329, 330, 331, 1227, 332,
	333, 334, 1448, 1449, 1451, 1450, 1452, 1453, 1454, 335,
	336, 337, 338, 339, 0, 340, 342, 662, 663, 1455,
	345, 341, 343, 1456, 346, 344, 347, 1457, 348, 349,
	350, 1458, 1459, 351, 352, 353, 1460, 354, 355, 356,
	1461, 357, 358, 359, 1462, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 665,
	666, 373, 1463, 279, 1464, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 1465, 378, 379,
	380, 1466, 1467, 1228, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 1468, 393,
	670, 1469, 671, 394, 1470, 395, 396, 397, 398, 399,
	672, 673, 674, 486, 1230, 400, 401, 1471, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	1472, 1229, 410, 675, 676, 1473, 677, 1474, 411, 412,
	1231, 678, 1232, 413, 414, 415, 1233, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 1475, 423, 425,
	424, 1476, 426, 679, 1234, 427, 428, 1235, 1477, 429,
	430, 431, 432, 433, 434, 437, 1478, 1479, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1236, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 1237, 480, 468, 1480, 281,
	1238, 482, 483, 484, 1481, 680, 485, 681, 487, 488,
	1482, 0, 489, 0, 490, 1483, 1484, 492, 493, 494,
	1485, 1486, 495, 496, 682, 1239, 497, 1240, 683, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 1487, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 686, 517, 687, 518, 519, 1488, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 1489, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 1490, 550,
	551, 552, 1241, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 1491, 575, 576, 574, 577, 578, 579,
	1492, 580, 581, 563, 564, 582, 583, 1242, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 1493, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 692, 606, 607, 1494, 608, 609, 0,
	605, 596, 1495, 610, 611, 612, 613, 614, 615, 616,
	617, 1496, 618, 693, 694, 695, 696, 1497, 627, 1498,
	619, 620, 621, 697, 622, 698, 1499, 623, 624, 625,
	626, 0, 628, 629, 1500, 1501, 630, 631, 632, 634,
	635, 633, 636, 1502, 637, 1503, 0, 638, 639, 640,
	699, 700, 701, 1504, 642, 641, 643, 644, 702, 645,
	646, 1505, 1506, 1507, 1508, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 1421, 0, 1424, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2311, 282, 284, 283, 285, 286, 287,
	288, 1430, 289, 290, 1431, 1432, 1433, 0, 1434, 652,
	1435, 1436, 1437, 1438, 291, 292, 1226, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	1439, 657, 301, 302, 303, 304, 305, 306, 1440, 1441,
	0, 307, 658, 659, 660, 1442, 308, 309, 661, 1443,
	1510, 1444, 310, 311, 312, 313, 314, 315, 316, 0,
	1445, 318, 319, 320, 317, 321, 1446, 322, 0, 323,
	324, 325, 326, 327, 328, 1447, 329, 330, 331, 1227,
	332, 333, 334, 1448, 1449, 1451, 1450, 1452, 1453, 1454,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	1455, 345, 341, 343, 1456, 346, 344, 347, 1457, 348,
	349, 350, 1458, 1459, 351, 352, 353, 1460, 354, 355,
	356, 1461, 357, 358, 359, 1462, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 1463, 279, 1464, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 1465, 378,
	379, 380, 1466, 1467, 1228, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 1468,
	393, 670, 1469, 671, 394, 1470, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 1230, 400, 401, 1471, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 1472, 1229, 410, 675, 676, 1473, 677, 1474, 411,
	412, 1231, 678, 1232, 413, 414, 415, 1233, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 1475, 423,
	425, 424, 1476, 426, 679, 1234, 427, 428, 1235, 1477,
	429, 430, 431, 432, 433, 434, 437, 1478, 1479, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1236, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 1237, 480, 468, 1480,
	281, 1238, 482, 483, 484, 1481, 680, 485, 681, 487,
	488, 1482, 0, 489, 0, 490, 1483, 1484, 492, 493,
	494, 1485, 1486, 495, 496, 682, 1239, 497, 1240, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 1487, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 1488, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 1489, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 1490,
	550, 551, 552, 1241, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 1491, 575, 576, 574, 577, 578,
	579, 1492, 580, 581, 563, 564, 582, 583, 1242, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 1493,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 1494, 608, 609,
	0, 605, 596, 1495, 610, 611, 612, 613, 614, 615,
	616, 617, 1496, 618, 693, 694, 695, 696, 1497, 627,
	1498, 619, 620, 621, 697, 622, 698, 1499, 623, 624,
	625, 626, 0, 628, 629, 1500, 1501, 630, 631, 632,
	634, 635, 633, 636, 1502, 637, 1503, 0, 638, 639,
	640, 699, 700, 701, 1504, 642, 641, 643, 644, 702,
	645, 646, 1505, 1506, 1507, 1508, 647, 648, 703, 649,
	650, 651, 1424, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 1430, 289, 290, 1431,
	1432, 1433, 0, 1434, 652, 1435, 1436, 1437, 1438, 291,
	292, 1226, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 1439, 657, 301, 302, 303,
	304, 305, 306, 1440, 1441, 0, 307, 658, 659, 660,
	1442, 308, 309, 661, 1443, 1510, 1444, 310, 311, 312,
	313, 314, 315, 316, 0, 1445, 318, 319, 320, 317,
	321, 1446, 322, 0, 323, 324, 325, 326, 327, 328,
	1447, 329, 330, 331, 1227, 332, 333, 334, 1448, 1449,
	1451, 1450, 1452, 1453, 1454, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 1455, 345, 341, 343, 1456,
	346, 344, 347, 1457, 348, 349, 350, 1458, 1459, 351,
	352, 353, 1460, 354, 355, 356, 1461, 357, 358, 359,
	1462, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 1463, 279,
	1464, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 1465, 378, 379, 380, 1466, 1467, 1228,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 1468, 393, 670, 1469, 671, 394,
	1470, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	1230, 400, 401, 1471, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 1472, 1229, 410, 675,
	676, 1473, 677, 1474, 411, 412, 1231, 678, 1232, 413,
	414, 415, 1233, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 1475, 423, 425, 424, 1476, 426, 679,
	1234, 427, 428, 1235, 1477, 429, 430, 431, 432, 433,
	434, 437, 1478, 1479, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1236, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 1237, 480, 468, 1480, 281, 1238, 482, 483, 484,
	1481, 680, 485, 681, 487, 488, 1482, 0, 489, 0,
	490, 1483, 1484, 492, 493, 494, 1485, 1486, 495, 496,
	682, 1239, 497, 1240, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 1487, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 1488, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	1489, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 1490, 550, 551, 552, 1241, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 1491,
	575, 576, 574, 577, 578, 579, 1492, 580, 581, 563,
	564, 582, 583, 1242, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 1493, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 1494, 608, 609, 0, 605, 596, 1495, 610,
	611, 612, 613, 614, 615, 616, 617, 1496, 618, 693,
	694, 695, 696, 1497, 627, 1498, 619, 620, 621, 697,
	622, 698, 1499, 623, 624, 625, 626, 0, 628, 629,
	1500, 1501, 630, 631, 632, 634, 635, 633, 636, 1502,
	637, 1503, 0, 638, 639, 640, 699, 700, 701, 1504,
	642, 641, 643, 644, 702, 645, 646, 1505, 1506, 1507,
	1508, 647, 648, 703, 649, 650, 651, 2663, 0, 1162,
	1134, 1135, 1136, 1132, 1133, 1145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 2660, 289, 290, 0, 0, 0, 0,
	0, 1186, 1150, 0, 0, 0, 291, 292, 1226, 293,
	294, 295, 296, 297, 298, 653, 1199, 0, 299, 1206,
	300, 1205, 0, 1216, 301, 302, 303, 304, 305, 306,
	1152, 1185, 1117, 307, 1246, 1247, 660, 0, 308, 309,
	1192, 0, 1173, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1227, 332, 333, 334, 1176, 1174, 1175, 1182, 1178,
	1177, 1181, 335, 336, 337, 338, 339, 1209, 340, 342,
	1203, 1202, 1122, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 2661, 0, 351, 1194, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	1128, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1217, 1218, 373, 1141, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 1201, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1228, 381, 382, 383,
	1214, 1215, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1224, 0, 1151, 394, 0, 395, 396,
	397, 398, 399, 1187, 1188, 1191, 486, 1230, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1229, 410, 1196, 1197, 0, 1157,
	0, 411, 412, 1231, 1189, 1232, 413, 414, 415, 1233,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 1225, 1234, 427, 428,
	1235, 0, 429, 430, 431, 432, 433, 434, 437, 1180,
	1179, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1236, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 1237, 480,
	468, 1119, 281, 1238, 482, 483, 484, 1142, 1190, 485,
	1204, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 1239, 497,
	1240, 1219, 498, 499, 1129, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 1220, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 1200, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 1241, 553, 554, 555, 556,
	557, 1130, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 1183, 580, 581, 563, 564, 582, 583,
	1242, 584, 585, 586, 587, 588, 589, 590, 1198, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 1245, 599, 600, 601, 602, 1221, 606, 607, 0,
	608, 609, 1116, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 1210, 1211, 1212, 1213,
	0, 627, 0, 619, 620, 621, 1222, 622, 1223, 1140,
	623, 624, 625, 626, 0, 628, 629, 0, 1123, 630,
	631, 632, 634, 635, 633, 636, 1184, 637, 0, 0,
	638, 639, 640, 699, 1207, 1244, 2659, 642, 641, 643,
	644, 702, 645, 646, 0, 0, 0, 0, 647, 648,
	703, 649, 650, 651, 1120, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1115, 0, 0,
	0, 0, 0, 0, 1113, 1114, 2662, 0, 0, 0,
	0, 0, 0, 0, 1146, 2658, 0, 1106, 1144, 1162,
	1134, 1135, 1136, 1132, 1133, 1145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 1186, 1150, 0, 0, 0, 291, 292, 1226, 293,
	294, 295, 296, 297, 298, 653, 1199, 0, 299, 1206,
	300, 1205, 0, 1216, 301, 302, 303, 304, 305, 306,
	1152, 1185, 1117, 307, 1246, 1247, 660, 0, 308, 309,
	1192, 0, 1173, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1227, 332, 333, 334, 1176, 1174, 1175, 1182, 1178,
	1177, 1181, 335, 336, 337, 338, 339, 1209, 340, 342,
	1203, 1202, 1122, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1194, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	1128, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1217, 1218, 373, 1141, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 1201, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1228, 381, 382, 383,
	1214, 1215, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1224, 0, 1151, 394, 0, 395, 396,
	397, 398, 399, 1187, 1188, 1191, 486, 1230, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1229, 410, 1196, 1197, 0, 1157,
	0, 411, 412, 1231, 1189, 1232, 413, 414, 415, 1233,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 1225, 1234, 427, 428,
	1235, 0, 429, 430, 431, 432, 433, 434, 437, 1180,
	1179, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1236, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 1237, 480,
	468, 1119, 281, 1238, 482, 483, 484, 1142, 1190, 485,
	1204, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 1239, 497,
	1240, 1219, 498, 499, 1129, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 1220, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 1200, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 1241, 553, 554, 555, 556,
	557, 1130, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 241, 575, 576, 574,
	577, 578, 579, 1183, 580, 581, 563, 564, 582, 583,
	1242, 584, 585, 586, 587, 588, 589, 590, 1198, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 1245, 599, 600, 601, 602, 1221, 606, 607, 0,
	608, 609, 1116, 605, 596, 243, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 1210, 1211, 1212, 1213,
	0, 627, 0, 619, 620, 621, 1222, 622, 1223, 1140,
	623, 624, 625, 626, 0, 628, 629, 0, 1123, 630,
	631, 632, 634, 635, 633, 636, 1184, 637, 0, 0,
	638, 639, 640, 1664, 1207, 1244, 0, 642, 641, 643,
	644, 702, 645, 646, 0, 0, 0, 235, 647, 648,
	703, 649, 650, 651, 1120, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1115, 0, 0,
	0, 0, 0, 0, 1113, 1114, 1162, 1134, 1135, 1136,
	1132, 1133, 1145, 0, 1926, 1924, 0, 0, 1144, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 1186, 1150,
	0, 0, 0, 291, 292, 1226, 293, 294, 295, 296,
	297, 298, 653, 1199, 0, 299, 1206, 300, 1205, 0,
	1216, 301, 302, 303, 304, 305, 306, 1152, 1185, 1117,
	307, 1246, 1247, 660, 0, 308, 309, 1192, 0, 1173,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1227, 332,
	333, 334, 1176, 1174, 1175, 1182, 1178, 1177, 1181, 335,
	336, 337, 338, 339, 1209, 340, 342, 1203, 1202, 1122,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1194, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 1128, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1217,
	1218, 373, 1141, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 1201, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1228, 381, 382, 383, 1214, 1215, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1224, 0, 1151, 394, 0, 395, 396, 397, 398, 399,
	1187, 1188, 1191, 486, 1230, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1229, 410, 1196, 1197, 0, 1157, 0, 411, 412,
	1231, 1189, 1232, 413, 414, 415, 1233, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 1225, 1234, 427, 428, 1235, 0, 429,
	430, 431, 432, 433, 434, 437, 1180, 1179, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1236, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 1237, 480, 468, 1119, 281,
	1238, 482, 483, 484, 1142, 1190, 485, 1204, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 1239, 497, 1240, 1219, 498,
	499, 1129, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 1220, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 1200, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 1241, 553, 554, 555, 556, 557, 1130, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 241, 575, 576, 574, 577, 578, 579,
	1183, 580, 581, 563, 564, 582, 583, 1242, 584, 585,
	586, 587, 588, 589, 590, 1198, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 1245, 599,
	600, 601, 602, 1221, 606, 607, 0, 608, 609, 1116,
	605, 596, 243, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 1210, 1211, 1212, 1213, 0, 627, 0,
	619, 620, 621, 1222, 622, 1223, 1140, 623, 624, 625,
	626, 0, 628, 629, 0, 1123, 630, 631, 632, 634,
	635, 633, 636, 1184, 637, 0, 0, 638, 639, 640,
	1664, 1207, 1244, 0, 642, 641, 643, 644, 702, 645,
	646, 0, 0, 0, 235, 647, 648, 703, 649, 650,
	651, 1120, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1115, 0, 0, 0, 0, 0,
	0, 1113, 1114, 1162, 1134, 1135, 1136, 1132, 1133, 1145,
	0, 1926, 3310, 0, 0, 1144, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 1186, 1150, 0, 0, 0,
	291, 292, 1226, 293, 294, 295, 296, 297, 298, 653,
	1199, 0, 299, 1206, 300, 1205, 0, 1216, 301, 302,
	303, 304, 305, 306, 1152, 1185, 1117, 307, 1246, 1247,
	660, 0, 308, 309, 1192, 0, 1173, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1227, 332, 333, 334, 1176,
	1174, 1175, 1182, 1178, 1177, 1181, 335, 336, 337, 338,
	339, 1209, 340, 342, 1203, 1202, 1122, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1194, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 1128, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1217, 1218, 373, 1141,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 1201,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1228, 381, 382, 383, 1214, 1215, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1224, 0, 1151,
	394, 0, 395, 396, 397, 398, 399, 1187, 1188, 1191,
	486, 1230, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1229, 410,
	1196, 1197, 0, 1157, 0, 411, 412, 1231, 1189, 1232,
	413, 414, 415, 1233, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1225, 1234, 427, 428, 1235, 0, 429, 430, 431, 432,
	433, 434, 437, 1180, 1179, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1236, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 1237, 480, 468, 1119, 281, 1238, 482, 483,
	484, 1142, 1190, 485, 1204, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 1239, 497, 1240, 1219, 498, 499, 1129, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 1220,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 1200, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 1241,
	553, 554, 555, 556, 557, 1130, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	241, 575, 576, 574, 577, 578, 579, 1183, 580, 581,
	563, 564, 582, 583, 1242, 584, 585, 586, 587, 588,
	589, 590, 1198, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 1245, 599, 600, 601, 602,
	1221, 606, 607, 0, 608, 609, 1116, 605, 596, 243,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	1210, 1211, 1212, 1213, 0, 627, 0, 619, 620, 621,
	1222, 622, 1223, 1140, 623, 624, 625, 626, 0, 628,
	629, 0, 1123, 630, 631, 632, 634, 635, 633, 636,
	1184, 637, 0, 0, 638, 639, 640, 1664, 1207, 1244,
	0, 642, 641, 643, 644, 702, 645, 646, 0, 0,
	0, 235, 647, 648, 703, 649, 650, 651, 1120, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1115, 0, 0, 0, 0, 0, 0, 1113, 1114,
	1162, 1134, 1135, 1136, 1132, 1133, 1145, 0, 1926, 1924,
	0, 0, 1144, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 1186, 1150, 0, 0, 0, 291, 292, 1226,
	293, 294, 295, 296, 297, 298, 653, 1199, 0, 299,
	1206, 300, 1205, 2794, 1216, 301, 302, 303, 304, 305,
	306, 1152, 1185, 1117, 307, 1246, 1247, 660, 0, 308,
	309, 1192, 0, 1173, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1227, 332, 333, 334, 1176, 1174, 1175, 1182,
	1178, 1177, 1181, 335, 336, 337, 338, 339, 1209, 340,
	342, 1203, 1202, 1122, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1194, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 1128, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1217, 1218, 373, 1141, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 1201, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 2799, 1228, 381, 382,
	383, 1214, 1215, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1224, 0, 1151, 394, 0, 395,
	396, 397, 398, 399, 1187, 1188, 1191, 486, 1230, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1229, 410, 1196, 1197, 0,
	1157, 0, 411, 412, 1231, 1189, 1232, 413, 414, 415,
	1233, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 2795, 426, 1225, 1234, 427,
	428, 1235, 0, 429, 430, 431, 432, 433, 434, 437,
	1180, 1179, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1236, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 1237,
	480, 468, 1119, 281, 1238, 482, 483, 484, 1142, 1190,
	485, 1204, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 1239,
	497, 1240, 1219, 498, 499, 1129, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 1220, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 1200, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 1241, 553, 554, 555,
	556, 557, 1130, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 0, 575, 576,
	574, 577, 578, 579, 1183, 580, 581, 563, 564, 582,
	583, 1242, 584, 585, 586, 587, 588, 589, 590, 1198,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 1245, 599, 600, 601, 602, 1221, 606, 607,
	0, 608, 609, 1116, 605, 596, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 1210, 1211, 1212,
	1213, 0, 627, 2796, 619, 620, 621, 1222, 622, 1223,
	1140, 623, 624, 625, 626, 0, 628, 629, 0, 1123,
	630, 631, 632, 634, 635, 633, 636, 1184, 637, 0,
	0, 638, 639, 640, 699, 1207, 1244, 0, 642, 641,
	643, 644, 702, 645, 646, 0, 0, 0, 0, 647,
	648, 703, 649, 650, 651, 1120, 0, 0, 0, 2708,
	0, 1162, 1134, 1135, 1136, 1132, 1133, 1145, 1115, 0,
	0, 0, 0, 0, 0, 1113, 1114, 0, 282, 284,
	283, 285, 286, 287, 288, 1146, 289, 290, 0, 1144,
	0, 0, 0, 1186, 1150, 0, 0, 0, 291, 292,
	1226, 293, 294, 295, 296, 297, 298, 653, 1199, 0,
	299, 1206, 300, 1205, 0, 1216, 301, 302, 303, 304,
	305, 306, 1152, 1185, 1117, 307, 1246, 1247, 660, 0,
	308, 309, 1192, 0, 1173, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1227, 332, 333, 334, 1176, 1174, 1175,
	1182, 1178, 1177, 1181, 335, 336, 337, 338, 339, 1209,
	340, 342, 1203, 1202, 1122, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1194,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1128, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1217, 1218, 373, 1141, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1201, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1228, 381,
	382, 383, 1214, 1215, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1224, 0, 1151, 394, 0,
	395, 396, 397, 398, 399, 1187, 1188, 1191, 486, 1230,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1229, 410, 1196, 1197,
	0, 1157, 0, 411, 412, 1231, 1189, 1232, 413, 414,
	415, 1233, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1225, 1234,
	427, 428, 1235, 0, 429, 430, 431, 432, 433, 434,
	437, 1180, 1179, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1236, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1237, 480, 468, 1119, 281, 1238, 482, 483, 484, 1142,
	1190, 485, 1204, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	1239, 497, 1240, 1219, 498, 499, 1129, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 1220, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 1200, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1241, 553, 554,
	555, 556, 557, 1130, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 1183, 580, 581, 563, 564,
	582, 583, 1242, 584, 585, 586, 587, 588, 589, 590,
	1198, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 1245, 599, 600, 601, 602, 1221, 606,
	607, 0, 608, 609, 1116, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 1210, 1211,
	1212, 1213, 0, 627, 0, 619, 620, 621, 1222, 622,
	1223, 1140, 623, 624, 625, 626, 0, 628, 629, 0,
	1123, 630, 631, 632, 634, 635, 633, 636, 1184, 637,
	0, 0, 638, 639, 640, 699, 1207, 1244, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1120, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1115,
	0, 0, 0, 0, 0, 0, 1113, 1114, 0, 0,
	0, 0, 0, 0, 0, 0, 1146, 2706, 0, 2705,
	1144, 1162, 1134, 1135, 1136, 1132, 1133, 1145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 1186, 1150, 0, 0, 0, 291, 292,
	1226, 293, 294, 295, 296, 297, 298, 653, 1199, 0,
	299, 1206, 300, 1205, 0, 1216, 301, 302, 303, 304,
	305, 306, 1152, 1185, 1117, 307, 1246, 1247, 660, 0,
	308, 309, 1192, 0, 1173, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1227, 332, 333, 334, 1176, 1174, 1175,
	1182, 1178, 1177, 1181, 335, 336, 337, 338, 339, 1209,
	340, 342, 1203, 1202, 1122, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1194,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1128, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1217, 1218, 373, 1141, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1201, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1228, 381,
	382, 383, 1214, 1215, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1224, 0, 1151, 394, 0,
	395, 396, 397, 398, 399, 1187, 1188, 1191, 486, 1230,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1229, 410, 1196, 1197,
	0, 1157, 0, 411, 412, 1231, 1189, 1232, 413, 414,
	415, 1233, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1225, 1234,
	427, 428, 1235, 0, 429, 430, 431, 432, 433, 434,
	437, 1180, 1179, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1236, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1237, 480, 468, 1119, 281, 1238, 482, 483, 484, 1142,
	1190, 485, 1204, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	1239, 497, 1240, 1219, 498, 499, 1129, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 1220, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 1200, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1241, 553, 554,
	555, 556, 557, 1130, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 1183, 580, 581, 563, 564,
	582, 583, 1242, 584, 585, 586, 587, 588, 589, 590,
	1198, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 1245, 599, 600, 601, 602, 1221, 606,
	607, 0, 608, 609, 1116, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 1210, 1211,
	1212, 1213, 0, 627, 0, 619, 620, 621, 1222, 622,
	1223, 1140, 623, 624, 625, 626, 0, 628, 629, 0,
	1123, 630, 631, 632, 634, 635, 633, 636, 1184, 637,
	0, 0, 638, 639, 640, 699, 1207, 1244, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1120, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1115,
	0, 0, 0, 0, 0, 0, 1113, 1114, 0, 0,
	0, 0, 0, 0, 0, 0, 1146, 2703, 0, 2702,
	1144, 1162, 1134, 1135, 1136, 1132, 1133, 1145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 1186, 1150, 0, 0, 0, 291, 292,
	1226, 293, 294, 295, 296, 297, 298, 653, 1199, 0,
	299, 1206, 300, 1205, 0, 1216, 301, 302, 303, 304,
	305, 306, 1152, 1185, 1117, 307, 1246, 1247, 660, 0,
	308, 309, 1192, 0, 1173, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1227, 332, 333, 334, 1176, 1174, 1175,
	1182, 1178, 1177, 1181, 335, 336, 337, 338, 339, 1209,
	340, 342, 1203, 1202, 1122, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1194,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1128, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1217, 1218, 373, 1141, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1201, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1228, 381,
	382, 383, 1214, 1215, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1224, 0, 1151, 394, 0,
	395, 396, 397, 398, 399, 1187, 1188, 1191, 486, 1230,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1229, 410, 1196, 1197,
	0, 1157, 0, 411, 412, 1231, 1189, 1232, 413, 414,
	415, 1233, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1225, 1234,
	427, 428, 1235, 0, 429, 430, 431, 432, 433, 434,
	437, 1180, 1179, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1236, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1237, 480, 468, 1119, 281, 1238, 482, 483, 484, 1142,
	1190, 485, 1204, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	1239, 497, 1240, 1219, 498, 499, 1129, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 1220, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 1200, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1241, 553, 554,
	555, 556, 557, 1130, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 1183, 580, 581, 563, 564,
	582, 583, 1242, 584, 585, 586, 587, 588, 589, 590,
	1198, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 1245, 599, 600, 601, 602, 1221, 606,
	607, 0, 608, 609, 1116, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 1210, 1211,
	1212, 1213, 0, 627, 0, 619, 620, 621, 1222, 622,
	1223, 1140, 623, 624, 625, 626, 0, 628, 629, 0,
	1123, 630, 631, 632, 634, 635, 633, 636, 1184, 637,
	0, 0, 638, 639, 640, 699, 1207, 1244, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1120, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1115,
	0, 0, 0, 0, 0, 0, 1113, 1114, 0, 0,
	0, 0, 0, 0, 0, 0, 1146, 2700, 0, 2699,
	1144, 1162, 1134, 1135, 1136, 1132, 1133, 1145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 1186, 1150, 0, 0, 0, 291, 292,
	1226, 293, 294, 295, 296, 297, 298, 653, 1199, 0,
	299, 1206, 300, 1205, 0, 1216, 301, 302, 303, 304,
	305, 306, 1152, 1185, 1117, 307, 1246, 1247, 660, 0,
	308, 309, 1192, 0, 1173, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1227, 332, 333, 334, 1176, 1174, 1175,
	1182, 1178, 1177, 1181, 335, 336, 337, 338, 339, 1209,
	340, 342, 1203, 1202, 1122, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1194,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1128, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1217, 1218, 373, 1141, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1201, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1228, 381,
	382, 383, 1214, 1215, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1224, 0, 1151, 394, 0,
	395, 396, 397, 398, 399, 1187, 1188, 1191, 486, 1230,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1229, 410, 1196, 1197,
	0, 1157, 0, 411, 412, 1231, 1189, 1232, 413, 414,
	415, 1233, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1225, 1234,
	427, 428, 1235, 0, 429, 430, 431, 432, 433, 434,
	437, 1180, 1179, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1236, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1237, 480, 468, 1119, 281, 1238, 482, 483, 484, 1142,
	1190, 485, 1204, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	1239, 497, 1240, 1219, 498, 499, 1129, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 1220, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 1200, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1241, 553, 554,
	555, 556, 557, 1130, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 1183, 580, 581, 563, 564,
	582, 583, 1242, 584, 585, 586, 587, 588, 589, 590,
	1198, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 1245, 599, 600, 601, 602, 1221, 606,
	607, 0, 608, 609, 1116, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 1210, 1211,
	1212, 1213, 0, 627, 0, 619, 620, 621, 1222, 622,
	1223, 1140, 623, 624, 625, 626, 0, 628, 629, 0,
	1123, 630, 631, 632, 634, 635, 633, 636, 1184, 637,
	0, 0, 638, 639, 640, 699, 1207, 1244, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1120, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1115,
	0, 0, 0, 0, 0, 0, 1113, 1114, 0, 0,
	0, 0, 0, 0, 0, 0, 1146, 2697, 0, 1765,
	1144, 1162, 1134, 1135, 1136, 1132, 1133, 1145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 1186, 1150, 0, 0, 0, 291, 292,
	1226, 293, 294, 295, 296, 297, 298, 653, 1199, 0,
	299, 1206, 300, 1205, 0, 1216, 301, 302, 303, 304,
	305, 306, 1152, 1185, 1117, 307, 1246, 1247, 660, 0,
	308, 309, 1192, 0, 1173, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1227, 332, 333, 334, 1176, 1174, 1175,
	1182, 1178, 1177, 1181, 335, 336, 337, 338, 339, 1209,
	340, 342, 1203, 1202, 1122, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1194,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1128, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1217, 1218, 373, 1141, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1201, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1228, 381,
	382, 383, 1214, 1215, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1224, 0, 1151, 394, 0,
	395, 396, 397, 398, 399, 1187, 1188, 1191, 486, 1230,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1229, 410, 1196, 1197,
	0, 1157, 0, 411, 412, 1231, 1189, 1232, 413, 414,
	415, 1233, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1225, 1234,
	427, 428, 1235, 0, 429, 430, 431, 432, 433, 434,
	437, 1180, 1179, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1236, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1237, 480, 468, 1119, 281, 1238, 482, 483, 484, 1142,
	1190, 485, 1204, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	1239, 497, 1240, 1219, 498, 499, 1129, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 1220, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 1200, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1241, 553, 554,
	555, 556, 557, 1130, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 1183, 580, 581, 563, 564,
	582, 583, 1242, 584, 585, 586, 587, 588, 589, 590,
	1198, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 1245, 599, 600, 601, 602, 1221, 606,
	607, 0, 608, 609, 1116, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 1210, 1211,
	1212, 1213, 0, 627, 0, 619, 620, 621, 1222, 622,
	1223, 1140, 623, 624, 625, 626, 0, 628, 629, 0,
	1123, 630, 631, 632, 634, 635, 633, 636, 1184, 637,
	0, 0, 638, 639, 640, 699, 1207, 1244, 0, 642,
	641, 643, 644, 702, 645, 646, 1764, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1120, 0, 0, 0,
	1109, 0, 1162, 1134, 1135, 1136, 1132, 1133, 1145, 1115,
	0, 0, 0, 0, 0, 0, 1113, 1114, 0, 282,
	284, 283, 285, 286, 287, 288, 1146, 289, 290, 0,
	1144, 0, 0, 0, 1186, 1150, 0, 0, 0, 291,
	292, 1226, 293, 294, 295, 296, 297, 298, 653, 1199,
	0, 299, 1206, 300, 1205, 0, 1216, 301, 302, 303,
	304, 305, 306, 1152, 1185, 1117, 307, 1246, 1247, 660,
	0, 308, 309, 1192, 0, 1173, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1227, 332, 333, 334, 1176, 1174,
	1175, 1182, 1178, 1177, 1181, 335, 336, 337, 338, 339,
	1209, 340, 342, 1203, 1202, 1122, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1194, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 1128, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 1217, 1218, 373, 1141, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 1201, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1228,
	381, 382, 383, 1214, 1215, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 1224, 0, 1151, 394,
	0, 395, 396, 397, 398, 399, 1187, 1188, 1191, 486,
	1230, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 1229, 410, 1196,
	1197, 0, 1157, 0, 411, 412, 1231, 1189, 1232, 413,
	414, 415, 1233, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 1225,
	1234, 427, 428, 1235, 0, 429, 430, 431, 432, 433,
	434, 437, 1180, 1179, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1236, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 1237, 480, 468, 1119, 281, 1238, 482, 483, 484,
	1142, 1190, 485, 1204, 487, 488, 0, 0, 489, 0,
	490, 1124, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 1239, 497, 1240, 1219, 498, 499, 1129, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 1220, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 1200, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 1241, 553,
	554, 555, 556, 557, 1130, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 1183, 580, 581, 563,
	564, 582, 583, 1242, 584, 585, 586, 587, 588, 589,
	590, 1198, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 1245, 599, 600, 601, 602, 1221,
	606, 607, 0, 608, 609, 1116, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 1210,
	1211, 1212, 1213, 0, 627, 0, 619, 620, 621, 1222,
	622, 1223, 1140, 623, 624, 625, 626, 0, 628, 629,
	0, 1123, 630, 631, 632, 634, 635, 633, 636, 1184,
	637, 0, 0, 638, 639, 640, 699, 1207, 1244, 0,
	642, 641, 643, 644, 702, 645, 646, 0, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 1120, 0, 0,
	0, 0, 0, 1162, 1134, 1135, 1136, 1132, 1133, 1145,
	1115, 0, 0, 0, 0, 0, 0, 1113, 1114, 0,
	282, 284, 283, 285, 286, 287, 288, 1146, 289, 290,
	0, 1144, 0, 0, 0, 1186, 1150, 0, 0, 0,
	291, 292, 1226, 293, 294, 295, 296, 297, 298, 653,
	1199, 0, 299, 1206, 300, 1205, 0, 1216, 301, 302,
	303, 304, 305, 306, 1152, 1185, 1117, 307, 1246, 1247,
	660, 0, 308, 309, 1192, 0, 1173, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 4859,
	328, 0, 329, 330, 331, 1227, 332, 333, 334, 1176,
	1174, 1175, 1182, 1178, 1177, 1181, 335, 336, 337, 338,
	339, 1209, 340, 342, 1203, 1202, 1122, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1194, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 1128, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1217, 1218, 373, 1141,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 1201,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1228, 381, 382, 383, 1214, 1215, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1224, 0, 1151,
	394, 0, 395, 396, 397, 398, 399, 1187, 1188, 1191,
	486, 1230, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1229, 410,
	1196, 1197, 0, 1157, 0, 411, 412, 1231, 1189, 1232,
	413, 414, 415, 1233, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1225, 1234, 427, 428, 1235, 0, 429, 430, 431, 432,
	433, 434, 437, 1180, 1179, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1236, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 1237, 480, 468, 1119, 281, 1238, 482, 483,
	484, 1142, 1190, 485, 1204, 487, 488, 0, 0, 489,
	0, 490, 1124, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 1239, 497, 1240, 1219, 498, 499, 1129, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 1220,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 1200, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 1241,
	553, 554, 555, 556, 557, 1130, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 1183, 580, 581,
	563, 564, 582, 583, 1242, 584, 585, 586, 587, 588,
	589, 590, 1198, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 1245, 599, 600, 601, 602,
	1221, 606, 607, 0, 608, 609, 1116, 605, 596, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	1210, 1211, 1212, 1213, 0, 627, 0, 619, 620, 621,
	1222, 622, 1223, 1140, 623, 624, 625, 626, 0, 628,
	629, 0, 1123, 630, 631, 632, 634, 635, 633, 636,
	1184, 637, 0, 0, 638, 639, 640, 699, 1207, 1244,
	0, 642, 641, 643, 644, 702, 645, 646, 0, 0,
	0, 0, 647, 648, 703, 649, 650, 651, 1120, 0,
	0, 0, 0, 0, 1162, 1134, 1135, 1136, 1132, 1133,
	1145, 1115, 0, 0, 0, 0, 0, 0, 1113, 1114,
	0, 282, 284, 283, 285, 286, 287, 288, 1146, 289,
	290, 0, 1144, 0, 0, 0, 1186, 1150, 0, 0,
	0, 291, 292, 1226, 293, 294, 295, 296, 297, 298,
	653, 1199, 0, 299, 1206, 300, 1205, 0, 1216, 301,
	302, 303, 304, 305, 306, 1152, 1185, 1117, 307, 1246,
	1247, 660, 0, 308, 309, 1192, 0, 1173, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1227, 332, 333, 334,
	1176, 1174, 1175, 1182, 1178, 1177, 1181, 335, 336, 337,
	338, 339, 1209, 340, 342, 1203, 1202, 1122, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1194, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 1128, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1217, 1218, 373,
	1141, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	1201, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1228, 381, 382, 383, 1214, 1215, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1224, 0,
	1151, 394, 0, 395, 396, 397, 398, 399, 1187, 1188,
	1191, 486, 1230, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 2540, 407, 408, 409, 0, 1229,
	410, 1196, 1197, 0, 1157, 0, 411, 412, 1231, 1189,
	1232, 413, 414, 415, 1233, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1225, 1234, 427, 428, 1235, 0, 429, 430, 431,
	432, 433, 434, 437, 1180, 1179, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1236, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 1237, 480, 468, 1119, 281, 1238, 482,
	483, 484, 1142, 1190, 485, 1204, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 1239, 497, 1240, 1219, 498, 499, 1129,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	1220, 517, 687, 518, 519, 2539, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 1200, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	1241, 553, 554, 555, 556, 557, 1130, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 1183, 580,
	581, 563, 564, 582, 583, 1242, 584, 585, 586, 587,
	588, 589, 590, 1198, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 1245, 599, 600, 601,
	602, 1221, 606, 607, 0, 608, 609, 1116, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 1210, 1211, 1212, 1213, 0, 627, 0, 619, 620,
	621, 1222, 622, 1223, 1140, 623, 624, 625, 626, 0,
	628, 629, 0, 1123, 630, 631, 632, 634, 635, 633,
	636, 1184, 637, 0, 0, 638, 639, 640, 699, 1207,
	1244, 0, 642, 641, 643, 644, 702, 645, 646, 0,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 1120,
	0, 0, 0, 0, 0, 1162, 1134, 1135, 1136, 1132,
	1133, 1145, 1115, 0, 0, 0, 0, 0, 0, 1113,
	1114, 0, 282, 284, 283, 285, 286, 287, 288, 1146,
	289, 290, 0, 1144, 0, 0, 0, 1186, 1150, 0,
	0, 0, 291, 292, 1226, 293, 294, 295, 296, 297,
	298, 653, 1199, 0, 299, 1206, 300, 1205, 0, 1216,
	301, 302, 303, 304, 305, 306, 1152, 1185, 1117, 307,
	1246, 1247, 660, 0, 308, 309, 1192, 0, 1173, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 4582, 328, 0, 329, 330, 331, 1227, 332, 333,
	334, 1176, 1174, 1175, 1182, 1178, 1177, 1181, 335, 336,
	337, 338, 339, 1209, 340, 342, 1203, 1202, 1122, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1194, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 1128, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 1217, 1218,
	373, 1141, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 1201, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1228, 381, 382, 383, 1214, 1215, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 1224,
	0, 1151, 394, 0, 395, 396, 397, 398, 399, 1187,
	1188, 1191, 486, 1230, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	1229, 410, 1196, 1197, 0, 1157, 0, 411, 412, 1231,
	1189, 1232, 413, 414, 415, 1233, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 1225, 1234, 427, 428, 1235, 0, 429, 430,
	431, 432, 433, 434, 437, 1180, 1179, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1236, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 1237, 480, 468, 1119, 281, 1238,
	482, 483, 484, 1142, 1190, 485, 1204, 487, 488, 0,
	0, 489, 0, 490, 1124, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 1239, 497, 1240, 1219, 498, 499,
	1129, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 1220, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 1200, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 1241, 553, 554, 555, 556, 557, 1130, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 1183,
	580, 581, 563, 564, 582, 583, 1242, 584, 585, 586,
	587, 588, 589, 590, 1198, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 1245, 599, 600,
	601, 602, 1221, 606, 607, 0, 608, 609, 1116, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 1210, 1211, 1212, 1213, 0, 627, 0, 619,
	620, 621, 1222, 622, 1223, 1140, 623, 624, 625, 626,
	0, 628, 629, 0, 1123, 630, 631, 632, 634, 635,
	633, 636, 1184, 637, 0, 0, 638, 639, 640, 699,
	1207, 1244, 0, 642, 641, 643, 644, 702, 645, 646,
	0, 0, 0, 0, 647, 648, 703, 649, 650, 651,
	1120, 0, 0, 0, 0, 0, 1162, 1134, 1135, 1136,
	1132, 1133, 1145, 1115, 0, 0, 0, 0, 0, 0,
	1113, 1114, 0, 282, 284, 283, 285, 286, 287, 288,
	1146, 289, 290, 0, 1144, 0, 0, 0, 1186, 1150,
	0, 0, 0, 291, 292, 1226, 293, 294, 295, 296,
	297, 298, 653, 1199, 0, 299, 1206, 300, 1205, 0,
	1216, 301, 302, 303, 304, 305, 306, 1152, 1185, 1117,
	307, 1246, 1247, 660, 0, 308, 309, 1192, 0, 1173,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1227, 332,
	333, 334, 1176, 1174, 1175, 1182, 1178, 1177, 1181, 335,
	336, 337, 338, 339, 1209, 340, 342, 1203, 1202, 1122,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1194, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 1128, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1217,
	1218, 373, 1141, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 1201, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1228, 381, 382, 383, 1214, 1215, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1224, 0, 1151, 394, 0, 395, 396, 397, 398, 399,
	1187, 1188, 1191, 486, 1230, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1229, 410, 1196, 1197, 0, 1157, 0, 411, 412,
	1231, 1189, 1232, 413, 414, 415, 1233, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 1225, 1234, 427, 428, 1235, 0, 429,
	430, 431, 432, 433, 434, 437, 1180, 1179, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1236, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 1237, 480, 468, 1119, 281,
	1238, 482, 483, 484, 1142, 1190, 485, 1204, 487, 488,
	0, 0, 489, 0, 490, 1124, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 1239, 497, 1240, 1219, 498,
	499, 1129, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 1220, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 1200, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 1241, 553, 554, 555, 556, 557, 1130, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 0, 575, 576, 574, 577, 578, 579,
	1183, 580, 581, 563, 564, 582, 583, 1242, 584, 585,
	586, 587, 588, 589, 590, 1198, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 1245, 599,
	600, 601, 602, 1221, 606, 607, 0, 608, 609, 1116,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 1210, 1211, 1212, 1213, 0, 627, 0,
	619, 620, 621, 1222, 622, 1223, 1140, 623, 624, 625,
	626, 0, 628, 629, 0, 1123, 630, 631, 632, 634,
	635, 633, 636, 1184, 637, 0, 0, 638, 639, 640,
	699, 1207, 1244, 0, 642, 641, 643, 644, 702, 645,
	646, 0, 0, 0, 0, 647, 648, 703, 649, 650,
	651, 1120, 0, 0, 0, 0, 0, 1162, 1134, 1135,
	1136, 1132, 1133, 1145, 1115, 0, 0, 0, 0, 0,
	0, 1113, 1114, 0, 282, 284, 283, 285, 286, 287,
	288, 1146, 289, 290, 0, 1144, 0, 0, 0, 1186,
	1150, 0, 0, 0, 291, 292, 1226, 293, 294, 295,
	296, 297, 298, 653, 1199, 0, 299, 1206, 300, 1205,
	0, 1216, 301, 302, 303, 304, 305, 306, 1152, 1185,
	1117, 307, 1246, 1247, 660, 0, 308, 309, 1192, 0,
	1173, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1227,
	332, 333, 334, 1176, 1174, 1175, 1182, 1178, 1177, 1181,
	335, 336, 337, 338, 339, 1209, 340, 342, 1203, 1202,
	1122, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1194, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1128, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1217, 1218, 373, 1141, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1201, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1228, 381, 382, 383, 1214, 1215,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1224, 0, 1151, 394, 0, 395, 396, 397, 398,
	399, 1187, 1188, 1191, 486, 1230, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1229, 410, 1196, 1197, 0, 1157, 0, 411,
	412, 1231, 1189, 1232, 413, 414, 415, 1233, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1225, 1234, 427, 428, 1235, 0,
	429, 430, 431, 432, 433, 434, 437, 1180, 1179, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1236, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 1237, 480, 468, 1119,
	4155, 1238, 482, 483, 484, 1142, 1190, 485, 1204, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 1239, 497, 1240, 1219,
	498, 499, 1129, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 1220, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 1200,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 1241, 553, 554, 555, 556, 557, 1130,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 1183, 580, 581, 563, 564, 582, 583, 1242, 584,
	585, 586, 587, 588, 589, 590, 1198, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 1245,
	599, 600, 601, 602, 1221, 606, 607, 0, 608, 609,
	1116, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 1210, 1211, 1212, 1213, 0, 627,
	0, 619, 620, 621, 1222, 622, 1223, 1140, 623, 624,
	625, 626, 0, 628, 629, 0, 1123, 630, 631, 632,
	634, 635, 633, 636, 1184, 637, 0, 0, 638, 639,
	640, 699, 1207, 1244, 0, 642, 641, 643, 644, 702,
	645, 646, 0, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 1120, 0, 0, 0, 0, 0, 1162, 1134,
	1135, 1136, 1132, 1133, 1145, 1115, 0, 0, 0, 0,
	0, 0, 1113, 1114, 1995, 282, 284, 283, 285, 286,
	287, 288, 1146, 289, 290, 0, 1144, 0, 0, 0,
	1186, 1150, 0, 0, 0, 291, 292, 1226, 293, 294,
	295, 296, 297, 298, 653, 1199, 0, 299, 1206, 300,
	1205, 0, 1216, 301, 302, 303, 304, 305, 306, 1152,
	1185, 1117, 307, 1246, 1247, 660, 0, 308, 309, 1192,
	0, 1173, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1227, 332, 333, 334, 1176, 1174, 1175, 1182, 1178, 1177,
	1181, 335, 336, 337, 338, 339, 1209, 340, 342, 1203,
	1202, 1122, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1194, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 1128,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 1217, 1218, 373, 1141, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 1201, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1228, 381, 382, 383, 1214,
	1215, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 1224, 0, 1151, 394, 0, 395, 396, 397,
	398, 399, 1187, 1188, 1191, 486, 1230, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 1229, 410, 1196, 1197, 0, 1157, 0,
	411, 412, 1231, 1189, 1232, 413, 414, 415, 1233, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 1225, 1234, 427, 428, 1235,
	0, 429, 430, 431, 432, 433, 434, 437, 1180, 1179,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1236,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 1237, 480, 468,
	1119, 281, 1238, 482, 483, 484, 1142, 1190, 485, 1204,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 1239, 497, 1240,
	1219, 498, 499, 1129, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 1220, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	1200, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 1241, 553, 554, 555, 556, 557,
	1130, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 1183, 580, 581, 563, 564, 582, 583, 1242,
	584, 585, 586, 587, 588, 589, 590, 1198, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	1245, 599, 600, 601, 602, 1221, 606, 607, 0, 608,
	609, 1116, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 1210, 1211, 1212, 1213, 0,
	627, 0, 619, 620, 621, 1222, 622, 1223, 1140, 623,
	624, 625, 626, 0, 628, 629, 0, 1123, 630, 631,
	632, 634, 635, 633, 636, 1184, 637, 0, 0, 638,
	639, 640, 699, 1207, 1244, 3841, 642, 641, 643, 644,
	702, 645, 646, 0, 0, 0, 0, 647, 648, 703,
	649, 650, 651, 1120, 0, 0, 0, 0, 0, 1162,
	1134, 1135, 1136, 1132, 1133, 1145, 1115, 0, 0, 0,
	0, 0, 0, 1113, 1114, 0, 282, 284, 283, 285,
	286, 287, 288, 1146, 289, 290, 0, 1144, 0, 0,
	0, 1186, 1150, 0, 0, 0, 291, 292, 1226, 293,
	294, 295, 296, 297, 298, 653, 1199, 0, 299, 1206,
	300, 1205, 0, 1216, 301, 302, 303, 304, 305, 306,
	1152, 1185, 1117, 307, 1246, 1247, 660, 0, 308, 309,
	1192, 0, 1173, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1227, 332, 333, 334, 1176, 1174, 1175, 1182, 1178,
	1177, 1181, 335, 336, 337, 338, 339, 1209, 340, 342,
	1203, 1202, 1122, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1194, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	1128, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1217, 1218, 373, 1141, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 1201, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1228, 381, 382, 383,
	1214, 1215, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1224, 0, 1151, 394, 0, 395, 396,
	397, 398, 399, 1187, 1188, 1191, 486, 1230, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1229, 410, 1196, 1197, 0, 1157,
	0, 411, 412, 1231, 1189, 1232, 413, 414, 415, 1233,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 1225, 1234, 427, 428,
	1235, 0, 429, 430, 431, 432, 433, 434, 437, 1180,
	1179, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1236, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 1237, 480,
	468, 1119, 281, 1238, 482, 483, 484, 1142, 1190, 485,
	1204, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 1239, 497,
	1240, 1219, 498, 499, 1129, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 1220, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 1200, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 1241, 553, 554, 555, 556,
	557, 1130, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 1183, 580, 581, 563, 564, 582, 583,
	1242, 584, 585, 586, 587, 588, 589, 590, 1198, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 1245, 599, 600, 601, 602, 1221, 606, 607, 0,
	608, 609, 1116, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 1210, 1211, 1212, 1213,
	0, 627, 0, 619, 620, 621, 1222, 622, 1223, 1140,
	623, 624, 625, 626, 0, 628, 629, 0, 1123, 630,
	631, 632, 634, 635, 633, 636, 1184, 637, 0, 0,
	638, 639, 640, 699, 1207, 1244, 0, 642, 641, 643,
	644, 702, 645, 646, 0, 0, 0, 0, 647, 648,
	703, 649, 650, 651, 1120, 0, 0, 0, 0, 0,
	1162, 1134, 1135, 1136, 1132, 1133, 1145, 1115, 0, 0,
	0, 0, 0, 0, 1113, 1114, 1995, 282, 284, 283,
	285, 286, 287, 288, 1146, 289, 290, 0, 1144, 0,
	0, 0, 1186, 1150, 0, 0, 0, 291, 292, 1226,
	293, 294, 295, 296, 297, 298, 653, 1199, 0, 299,
	1206, 300, 1205, 0, 1216, 301, 302, 303, 304, 305,
	306, 1152, 1185, 1117, 307, 1246, 1247, 660, 0, 308,
	309, 1192, 0, 1173, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1227, 332, 333, 334, 1176, 1174, 1175, 1182,
	1178, 1177, 1181, 335, 336, 337, 338, 339, 1209, 340,
	342, 1203, 1202, 1122, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1194, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 1128, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1217, 1218, 373, 1141, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 1201, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 2799, 1228, 381, 382,
	383, 1214, 1215, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1224, 0, 1151, 394, 0, 395,
	396, 397, 398, 399, 1187, 1188, 1191, 486, 1230, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1229, 410, 1196, 1197, 0,
	1157, 0, 411, 412, 1231, 1189, 1232, 413, 414, 415,
	1233, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 1225, 1234, 427,
	428, 1235, 0, 429, 430, 431, 432, 433, 434, 437,
	1180, 1179, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1236, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 1237,
	480, 468, 1119, 281, 1238, 482, 483, 484, 1142, 1190,
	485, 1204, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 1239,
	497, 1240, 1219, 498, 499, 1129, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 1220, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 1200, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 1241, 553, 554, 555,
	556, 557, 1130, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 0, 575, 576,
	574, 577, 578, 579, 1183, 580, 581, 563, 564, 582,
	583, 1242, 584, 585, 586, 587, 588, 589, 590, 1198,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 1245, 599, 600, 601, 602, 1221, 606, 607,
	0, 608, 609, 1116, 605, 596, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 1210, 1211, 1212,
	1213, 0, 627, 0, 619, 620, 621, 1222, 622, 1223,
	1140, 623, 624, 625, 626, 0, 628, 629, 0, 1123,
	630, 631, 632, 634, 635, 633, 636, 1184, 637, 0,
	0, 638, 639, 640, 699, 1207, 1244, 0, 642, 641,
	643, 644, 702, 645, 646, 0, 0, 0, 0, 647,
	648, 703, 649, 650, 651, 1120, 0, 0, 0, 0,
	0, 1162, 1134, 1135, 1136, 1132, 1133, 1145, 1115, 0,
	0, 0, 0, 0, 0, 1113, 1114, 0, 282, 284,
	283, 285, 286, 287, 288, 1146, 289, 290, 0, 1144,
	0, 0, 0, 1186, 1150, 0, 0, 0, 291, 292,
	1226, 293, 294, 295, 296, 297, 298, 653, 1199, 0,
	299, 1206, 300, 1205, 0, 1216, 301, 302, 303, 304,
	305, 306, 1152, 1185, 1117, 307, 1246, 1247, 660, 0,
	308, 309, 1192, 0, 1173, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1227, 332, 333, 334, 1176, 1174, 1175,
	1182, 1178, 1177, 1181, 335, 336, 337, 338, 339, 1209,
	340, 342, 1203, 1202, 1122, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1194,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1128, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1217, 1218, 373, 1141, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1201, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1228, 381,
	382, 383, 1214, 1215, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1224, 0, 1151, 394, 0,
	395, 396, 397, 398, 399, 1187, 1188, 1191, 486, 1230,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1229, 410, 1196, 1197,
	0, 1157, 0, 411, 412, 1231, 1189, 1232, 413, 414,
	415, 1233, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1225, 1234,
	427, 428, 1235, 0, 429, 430, 431, 432, 433, 434,
	437, 1180, 1179, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1236, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1237, 480, 468, 1119, 281, 1238, 482, 483, 484, 1142,
	1190, 485, 1204, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	1239, 497, 1240, 1219, 498, 499, 1129, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 1220, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 1200, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1241, 553, 554,
	555, 556, 557, 1130, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 1183, 580, 581, 563, 564,
	582, 583, 1242, 584, 585, 586, 587, 588, 589, 590,
	1198, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 1245, 599, 600, 601, 602, 1221, 606,
	607, 0, 608, 609, 1116, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 1210, 1211,
	1212, 1213, 0, 627, 0, 619, 620, 621, 1222, 622,
	1223, 1140, 623, 624, 625, 626, 0, 628, 629, 0,
	1123, 630, 631, 632, 634, 635, 633, 636, 1184, 637,
	0, 0, 638, 639, 640, 699, 1207, 1244, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1120, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1115,
	0, 0, 0, 0, 0, 0, 1113, 1114, 0, 0,
	0, 0, 0, 0, 0, 0, 1146, 1924, 0, 2804,
	1144, 1162, 1134, 1135, 1136, 1132, 1133, 1145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 1186, 1150, 0, 0, 0, 291, 292,
	1226, 293, 294, 295, 296, 297, 298, 653, 1199, 0,
	299, 1206, 300, 1205, 0, 1216, 301, 302, 303, 304,
	305, 306, 1152, 1185, 1117, 307, 1246, 1247, 660, 0,
	308, 309, 1192, 0, 1173, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1227, 332, 333, 334, 1176, 1174, 1175,
	1182, 1178, 1177, 1181, 335, 336, 337, 338, 339, 1209,
	340, 342, 1203, 1202, 1122, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1194,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1128, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1217, 1218, 373, 1141, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1201, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1228, 381,
	382, 383, 1214, 1215, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1224, 0, 1151, 394, 0,
	395, 396, 397, 398, 399, 1187, 1188, 1191, 486, 1230,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1229, 410, 1196, 1197,
	0, 1157, 0, 411, 412, 1231, 1189, 1232, 413, 414,
	415, 1233, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1225, 1234,
	427, 428, 1235, 0, 429, 430, 431, 432, 433, 434,
	437, 1180, 1179, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1236, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1237, 480, 468, 1119, 281, 1238, 482, 483, 484, 1142,
	1190, 485, 1204, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	1239, 497, 1240, 1219, 498, 499, 1129, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 1220, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 1200, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1241, 553, 554,
	555, 556, 557, 1130, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 1183, 580, 581, 563, 564,
	582, 583, 1242, 584, 585, 586, 587, 588, 589, 590,
	1198, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 1245, 599, 600, 601, 602, 1221, 606,
	607, 0, 608, 609, 1116, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 1210, 1211,
	1212, 1213, 0, 627, 0, 619, 620, 621, 1222, 622,
	1223, 1140, 623, 624, 625, 626, 0, 628, 629, 0,
	1123, 630, 631, 632, 634, 635, 633, 636, 1184, 637,
	0, 0, 638, 639, 640, 699, 1207, 1244, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1120, 0, 0, 0,
	2802, 0, 1162, 1134, 1135, 1136, 1132, 1133, 1145, 1115,
	0, 0, 0, 0, 0, 0, 1113, 1114, 0, 282,
	284, 283, 285, 286, 287, 288, 1146, 289, 290, 0,
	1144, 0, 0, 0, 1186, 1150, 0, 0, 0, 291,
	292, 1226, 293, 294, 295, 296, 297, 298, 653, 1199,
	0, 299, 1206, 300, 1205, 0, 1216, 301, 302, 303,
	304, 305, 306, 1152, 1185, 1117, 307, 1246, 1247, 660,
	0, 308, 309, 1192, 0, 1173, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1227, 332, 333, 334, 1176, 1174,
	1175, 1182, 1178, 1177, 1181, 335, 336, 337, 338, 339,
	1209, 340, 342, 1203, 1202, 1122, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1194, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 1128, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 1217, 1218, 373, 1141, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 1201, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1228,
	381, 382, 383, 1214, 1215, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 1224, 0, 1151, 394,
	0, 395, 396, 397, 398, 399, 1187, 1188, 1191, 486,
	1230, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 1229, 410, 1196,
	1197, 0, 1157, 0, 411, 412, 1231, 1189, 1232, 413,
	414, 415, 1233, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 1225,
	1234, 427, 428, 1235, 0, 429, 430, 431, 432, 433,
	434, 437, 1180, 1179, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1236, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 1237, 480, 468, 1119, 281, 1238, 482, 483, 484,
	1142, 1190, 485, 1204, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 1239, 497, 1240, 1219, 498, 499, 1129, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 1220, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 1200, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 1241, 553,
	554, 555, 556, 557, 1130, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 1183, 580, 581, 563,
	564, 582, 583, 1242, 584, 585, 586, 587, 588, 589,
	590, 1198, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 1245, 599, 600, 601, 602, 1221,
	606, 607, 0, 608, 609, 1116, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 1210,
	1211, 1212, 1213, 0, 627, 0, 619, 620, 621, 1222,
	622, 1223, 1140, 623, 624, 625, 626, 0, 628, 629,
	0, 1123, 630, 631, 632, 634, 635, 633, 636, 1184,
	637, 0, 0, 638, 639, 640, 699, 1207, 1244, 0,
	642, 641, 643, 644, 702, 645, 646, 0, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 1120, 0, 0,
	0, 2790, 0, 1162, 1134, 1135, 1136, 1132, 1133, 1145,
	1115, 0, 0, 0, 0, 0, 0, 1113, 1114, 0,
	282, 284, 283, 285, 286, 287, 288, 1146, 289, 290,
	0, 1144, 0, 0, 0, 1186, 1150, 0, 0, 0,
	291, 292, 1226, 293, 294, 295, 296, 297, 298, 653,
	1199, 0, 299, 1206, 300, 1205, 0, 1216, 301, 302,
	303, 304, 305, 306, 1152, 1185, 1117, 307, 1246, 1247,
	660, 0, 308, 309, 1192, 0, 1173, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1227, 332, 333, 334, 1176,
	1174, 1175, 1182, 1178, 1177, 1181, 335, 336, 337, 338,
	339, 1209, 340, 342, 1203, 1202, 1122, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1194, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 1128, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1217, 1218, 373, 1141,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 1201,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1228, 381, 382, 383, 1214, 1215, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1224, 0, 1151,
	394, 0, 395, 396, 397, 398, 399, 1187, 1188, 1191,
	486, 1230, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1229, 410,
	1196, 1197, 0, 1157, 0, 411, 412, 1231, 1189, 1232,
	413, 414, 415, 1233, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1225, 1234, 427, 428, 1235, 0, 429, 430, 431, 432,
	433, 434, 437, 1180, 1179, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1236, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 1237, 480, 468, 1119, 281, 1238, 482, 483,
	484, 1142, 1190, 485, 1204, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 1239, 497, 1240, 1219, 498, 499, 1129, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 1220,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 1200, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 1241,
	553, 554, 555, 556, 557, 1130, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 1183, 580, 581,
	563, 564, 582, 583, 1242, 584, 585, 586, 587, 588,
	589, 590, 1198, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 1245, 599, 600, 601, 602,
	1221, 606, 607, 0, 608, 609, 1116, 605, 596, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	1210, 1211, 1212, 1213, 0, 627, 0, 619, 620, 621,
	1222, 622, 1223, 1140, 623, 624, 625, 626, 0, 628,
	629, 0, 1123, 630, 631, 632, 634, 635, 633, 636,
	1184, 637, 0, 0, 638, 639, 640, 699, 1207, 1244,
	0, 642, 641, 643, 644, 702, 645, 646, 0, 0,
	0, 0, 647, 648, 703, 649, 650, 651, 1120, 0,
	0, 0, 2778, 0, 1162, 1134, 1135, 1136, 1132, 1133,
	1145, 1115, 0, 0, 0, 0, 0, 0, 1113, 1114,
	0, 282, 284, 283, 285, 286, 287, 288, 1146, 289,
	290, 0, 1144, 0, 0, 0, 1186, 1150, 0, 0,
	0, 291, 292, 1226, 293, 294, 295, 296, 297, 298,
	653, 1199, 0, 299, 1206, 300, 1205, 0, 1216, 301,
	302, 303, 304, 305, 306, 1152, 1185, 1117, 307, 1246,
	1247, 660, 0, 308, 309, 1192, 0, 1173, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1227, 332, 333, 334,
	1176, 1174, 1175, 1182, 1178, 1177, 1181, 335, 336, 337,
	338, 339, 1209, 340, 342, 1203, 1202, 1122, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1194, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 1128, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1217, 1218, 373,
	1141, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	1201, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1228, 381, 382, 383, 1214, 1215, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1224, 0,
	1151, 394, 0, 395, 396, 397, 398, 399, 1187, 1188,
	1191, 486, 1230, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1229,
	410, 1196, 1197, 0, 1157, 0, 411, 412, 1231, 1189,
	1232, 413, 414, 415, 1233, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1225, 1234, 427, 428, 1235, 0, 429, 430, 431,
	432, 433, 434, 437, 1180, 1179, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1236, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 1237, 480, 468, 1119, 281, 1238, 482,
	483, 484, 1142, 1190, 485, 1204, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 1239, 497, 1240, 1219, 498, 499, 1129,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	1220, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 1200, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	1241, 553, 554, 555, 556, 557, 1130, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 1183, 580,
	581, 563, 564, 582, 583, 1242, 584, 585, 586, 587,
	588, 589, 590, 1198, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 1245, 599, 600, 601,
	602, 1221, 606, 607, 0, 608, 609, 1116, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 1210, 1211, 1212, 1213, 0, 627, 0, 619, 620,
	621, 1222, 622, 1223, 1140, 623, 624, 625, 626, 0,
	628, 629, 0, 1123, 630, 631, 632, 634, 635, 633,
	636, 1184, 637, 0, 0, 638, 639, 640, 699, 1207,
	1244, 0, 642, 641, 643, 644, 702, 645, 646, 0,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 1120,
	0, 0, 0, 2776, 0, 2767, 2774, 1135, 1136, 1132,
	1133, 1145, 1115, 0, 0, 0, 0, 0, 0, 1113,
	1114, 0, 282, 284, 283, 285, 286, 287, 288, 1146,
	289, 290, 0, 1144, 0, 0, 0, 1186, 1150, 0,
	0, 0, 291, 292, 1226, 293, 294, 295, 296, 297,
	298, 653, 1199, 0, 299, 1206, 300, 1205, 0, 1216,
	301, 302, 303, 304, 305, 306, 1152, 1185, 1117, 307,
	1246, 1247, 660, 0, 308, 309, 1192, 0, 1173, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1227, 332, 333,
	334, 1176, 1174, 1175, 1182, 1178, 1177, 1181, 335, 336,
	337, 338, 339, 1209, 2770, 342, 1203, 1202, 1122, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1194, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 1128, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 1217, 1218,
	373, 1141, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 1201, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1228, 381, 382, 383, 1214, 1215, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 1224,
	0, 1151, 394, 0, 395, 396, 397, 2771, 399, 1187,
	1188, 1191, 486, 1230, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	1229, 410, 1196, 1197, 0, 1157, 0, 411, 412, 1231,
	1189, 1232, 413, 414, 415, 1233, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 1225, 1234, 427, 428, 1235, 0, 429, 430,
	431, 432, 433, 434, 437, 1180, 1179, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 2772, 447,
	2769, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1236, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 1237, 480, 468, 1119, 281, 1238,
	482, 483, 484, 1142, 1190, 485, 1204, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 1239, 497, 1240, 1219, 498, 499,
	1129, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 1220, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 1200, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 1241, 553, 554, 555, 556, 557, 1130, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 2773, 0, 575, 576, 574, 577, 578, 579, 1183,
	580, 581, 563, 564, 582, 583, 1242, 584, 585, 586,
	587, 588, 589, 590, 1198, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 1245, 599, 600,
	601, 602, 1221, 606, 607, 0, 608, 609, 1116, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 1210, 1211, 1212, 1213, 0, 627, 0, 619,
	620, 621, 1222, 622, 1223, 1140, 623, 624, 625, 626,
	0, 628, 629, 0, 1123, 630, 631, 632, 634, 635,
	633, 636, 1184, 637, 0, 0, 638, 639, 640, 699,
	1207, 1244, 0, 642, 641, 643, 644, 702, 645, 646,
	0, 0, 0, 0, 647, 648, 703, 649, 2768, 651,
	1120, 0, 0, 0, 2764, 0, 2767, 2774, 1135, 1136,
	1132, 1133, 1145, 1115, 0, 0, 0, 0, 0, 0,
	1113, 1114, 0, 282, 284, 283, 285, 286, 287, 288,
	1146, 289, 290, 0, 1144, 0, 0, 0, 1186, 1150,
	0, 0, 0, 291, 292, 1226, 293, 294, 295, 296,
	297, 298, 653, 1199, 0, 299, 1206, 300, 1205, 0,
	1216, 301, 302, 303, 304, 305, 306, 1152, 1185, 1117,
	307, 1246, 1247, 660, 0, 308, 309, 1192, 0, 1173,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1227, 332,
	333, 334, 1176, 1174, 1175, 1182, 1178, 1177, 1181, 335,
	336, 337, 338, 339, 1209, 2770, 342, 1203, 1202, 1122,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1194, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 1128, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1217,
	1218, 373, 1141, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 1201, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1228, 381, 382, 383, 1214, 1215, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1224, 0, 1151, 394, 0, 395, 396, 397, 2771, 399,
	1187, 1188, 1191, 486, 1230, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1229, 410, 1196, 1197, 0, 1157, 0, 411, 412,
	1231, 1189, 1232, 413, 414, 415, 1233, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 1225, 1234, 427, 428, 1235, 0, 429,
	430, 431, 432, 433, 434, 437, 1180, 1179, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 2772,
	447, 2769, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1236, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 1237, 480, 468, 1119, 281,
	1238, 482, 483, 484, 1142, 1190, 485, 1204, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 1239, 497, 1240, 1219, 498,
	499, 1129, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 1220, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 1200, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 1241, 553, 554, 555, 556, 557, 1130, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 2773, 0, 575, 576, 574, 577, 578, 579,
	1183, 580, 581, 563, 564, 582, 583, 1242, 584, 585,
	586, 587, 588, 589, 590, 1198, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 1245, 599,
	600, 601, 602, 1221, 606, 607, 0, 608, 609, 1116,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 1210, 1211, 1212, 1213, 0, 627, 0,
	619, 620, 621, 1222, 622, 1223, 1140, 623, 624, 625,
	626, 0, 628, 629, 0, 1123, 630, 631, 632, 634,
	635, 633, 636, 1184, 637, 0, 0, 638, 639, 640,
	699, 1207, 1244, 0, 642, 641, 643, 644, 702, 645,
	646, 0, 0, 0, 0, 647, 648, 703, 649, 2768,
	651, 1120, 0, 0, 0, 0, 0, 1162, 1134, 1135,
	1136, 1132, 1133, 1145, 1115, 0, 0, 0, 0, 0,
	0, 1113, 1114, 0, 282, 284, 283, 285, 286, 287,
	288, 1146, 289, 290, 0, 1144, 0, 0, 0, 1186,
	1150, 0, 0, 0, 291, 292, 1226, 293, 294, 295,
	296, 297, 298, 653, 1199, 0, 299, 1206, 300, 1205,
	0, 1216, 301, 302, 303, 304, 305, 306, 1152, 1185,
	1117, 307, 1246, 1247, 660, 0, 308, 309, 1192, 0,
	1173, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1227,
	332, 333, 334, 1176, 1174, 1175, 1182, 1178, 1177, 1181,
	335, 336, 337, 338, 339, 1209, 340, 342, 1203, 1202,
	1122, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1194, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1128, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1217, 1218, 373, 1141, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1201, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1228, 381, 382, 383, 1214, 1215,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1224, 0, 1151, 394, 0, 395, 396, 397, 398,
	399, 1187, 1188, 1191, 486, 1230, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1229, 410, 1196, 1197, 0, 1157, 0, 411,
	412, 1231, 1189, 1232, 413, 414, 415, 1233, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1225, 1234, 427, 428, 1235, 0,
	429, 430, 431, 432, 433, 434, 437, 1180, 1179, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1236, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 1237, 480, 468, 1119,
	281, 1238, 482, 483, 484, 1142, 1190, 485, 1204, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 1239, 497, 1240, 1219,
	498, 499, 1129, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 1220, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 1200,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 1241, 553, 554, 555, 556, 557, 1130,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 1183, 580, 581, 563, 564, 582, 583, 1242, 584,
	585, 586, 587, 588, 589, 590, 1198, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 1245,
	599, 600, 601, 602, 1221, 606, 607, 0, 608, 609,
	1116, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 1210, 1211, 1212, 1213, 0, 627,
	0, 619, 620, 621, 1222, 622, 1223, 1140, 623, 624,
	625, 626, 0, 628, 629, 0, 1123, 630, 631, 632,
	634, 635, 633, 636, 1184, 637, 0, 0, 638, 639,
	640, 699, 1207, 1244, 0, 642, 641, 643, 644, 702,
	645, 646, 0, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 1120, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1115, 0, 0, 0, 0,
	0, 0, 1113, 1114, 0, 0, 0, 0, 0, 0,
	1932, 0, 1146, 0, 0, 0, 1144, 1162, 1134, 1135,
	1136, 1132, 1133, 1145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 2519, 289, 290, 0, 0, 0, 0, 0, 1186,
	1150, 0, 0, 0, 291, 292, 1226, 293, 294, 295,
	296, 297, 298, 653, 1199, 0, 299, 1206, 300, 1205,
	0, 1216, 301, 302, 303, 304, 305, 306, 1152, 1185,
	1117, 307, 1246, 1247, 660, 0, 308, 309, 1192, 0,
	1173, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1227,
	332, 333, 334, 1176, 1174, 1175, 1182, 1178, 1177, 1181,
	335, 336, 337, 338, 339, 1209, 340, 342, 1203, 1202,
	1122, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1194, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1128, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1217, 1218, 373, 1141, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1201, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1228, 381, 382, 383, 1214, 1215,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1224, 0, 1151, 394, 0, 395, 396, 397, 398,
	399, 1187, 1188, 1191, 486, 1230, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1229, 410, 1196, 1197, 0, 1157, 0, 411,
	412, 1231, 1189, 1232, 413, 414, 415, 1233, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1225, 1234, 427, 428, 1235, 0,
	429, 430, 431, 432, 433, 434, 437, 1180, 1179, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1236, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 1237, 480, 468, 1119,
	281, 1238, 482, 483, 484, 1142, 1190, 485, 1204, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 1239, 497, 1240, 1219,
	498, 499, 1129, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 1220, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 1200,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 1241, 553, 554, 555, 556, 557, 1130,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 1183, 580, 581, 563, 564, 582, 583, 1242, 584,
	585, 586, 587, 588, 589, 590, 1198, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 1245,
	599, 600, 601, 602, 1221, 606, 607, 0, 608, 609,
	1116, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 1210, 1211, 1212, 1213, 0, 627,
	0, 619, 620, 621, 1222, 622, 1223, 1140, 623, 624,
	625, 626, 0, 628, 629, 0, 1123, 630, 631, 632,
	634, 635, 633, 636, 1184, 637, 0, 0, 638, 639,
	640, 699, 1207, 1244, 0, 642, 641, 643, 644, 702,
	645, 646, 0, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 1120, 0, 0, 0, 2481, 0, 1162, 1134,
	1135, 1136, 1132, 1133, 1145, 1115, 0, 0, 0, 0,
	0, 0, 1113, 1114, 0, 282, 284, 283, 285, 286,
	287, 288, 1146, 289, 290, 0, 1144, 0, 0, 0,
	1186, 1150, 0, 0, 0, 291, 292, 1226, 293, 294,
	295, 296, 297, 298, 653, 1199, 0, 299, 1206, 300,
	1205, 0, 1216, 301, 302, 303, 304, 305, 306, 1152,
	1185, 1117, 307, 1246, 1247, 660, 0, 308, 309, 1192,
	0, 1173, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1227, 332, 333, 334, 1176, 1174, 1175, 1182, 1178, 1177,
	1181, 335, 336, 337, 338, 339, 1209, 340, 342, 1203,
	1202, 1122, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1194, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 1128,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 1217, 1218, 373, 1141, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 1201, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1228, 381, 382, 383, 1214,
	1215, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 1224, 0, 1151, 394, 0, 395, 396, 397,
	398, 399, 1187, 1188, 1191, 486, 1230, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 1229, 410, 1196, 1197, 0, 1157, 0,
	411, 412, 1231, 1189, 1232, 413, 414, 415, 1233, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 1225, 1234, 427, 428, 1235,
	0, 429, 430, 431, 432, 433, 434, 437, 1180, 1179,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1236,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 1237, 480, 468,
	1119, 281, 1238, 482, 483, 484, 1142, 1190, 485, 1204,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 1239, 497, 1240,
	1219, 498, 499, 1129, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 1220, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	1200, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 1241, 553, 554, 555, 556, 557,
	1130, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 1183, 580, 581, 563, 564, 582, 583, 1242,
	584, 585, 586, 587, 588, 589, 590, 1198, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	1245, 599, 600, 601, 602, 1221, 606, 607, 0, 608,
	609, 1116, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 1210, 1211, 1212, 1213, 0,
	627, 0, 619, 620, 621, 1222, 622, 1223, 1140, 623,
	624, 625, 626, 0, 628, 629, 0, 1123, 630, 631,
	632, 634, 635, 633, 636, 1184, 637, 0, 0, 638,
	639, 640, 699, 1207, 1244, 0, 642, 641, 643, 644,
	702, 645, 646, 0, 0, 0, 0, 647, 648, 703,
	649, 650, 651, 1120, 0, 0, 0, 2454, 0, 1162,
	1134, 1135, 1136, 1132, 1133, 1145, 1115, 0, 0, 0,
	0, 0, 0, 1113, 1114, 0, 282, 284, 283, 285,
	286, 287, 288, 1146, 289, 290, 0, 1144, 0, 0,
	0, 1186, 1150, 0, 0, 0, 291, 292, 1226, 293,
	294, 295, 296, 297, 298, 653, 1199, 0, 299, 1206,
	300, 1205, 0, 1216, 301, 302, 303, 304, 305, 306,
	1152, 1185, 1117, 307, 1246, 1247, 660, 0, 308, 309,
	1192, 0, 1173, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1227, 332, 333, 334, 1176, 1174, 1175, 1182, 1178,
	1177, 1181, 335, 336, 337, 338, 339, 1209, 340, 342,
	1203, 1202, 1122, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1194, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	1128, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1217, 1218, 373, 1141, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 1201, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1228, 381, 382, 383,
	1214, 1215, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1224, 0, 1151, 394, 0, 395, 396,
	397, 398, 399, 1187, 1188, 1191, 486, 1230, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1229, 410, 1196, 1197, 0, 1157,
	0, 411, 412, 1231, 1189, 1232, 413, 414, 415, 1233,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 1225, 1234, 427, 428,
	1235, 0, 429, 430, 431, 432, 433, 434, 437, 1180,
	1179, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1236, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 1237, 480,
	468, 1119, 281, 1238, 482, 483, 484, 1142, 1190, 485,
	1204, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 1239, 497,
	1240, 1219, 498, 499, 1129, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 1220, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 1200, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 1241, 553, 554, 555, 556,
	557, 1130, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 1183, 580, 581, 563, 564, 582, 583,
	1242, 584, 585, 586, 587, 588, 589, 590, 1198, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 1245, 599, 600, 601, 602, 1221, 606, 607, 0,
	608, 609, 1116, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 1210, 1211, 1212, 1213,
	0, 627, 0, 619, 620, 621, 1222, 622, 1223, 1140,
	623, 624, 625, 626, 0, 628, 629, 0, 1123, 630,
	631, 632, 634, 635, 633, 636, 1184, 637, 0, 0,
	638, 639, 640, 699, 1207, 1244, 0, 642, 641, 643,
	644, 702, 645, 646, 0, 0, 0, 0, 647, 648,
	703, 649, 650, 651, 1120, 0, 0, 0, 1770, 0,
	1162, 1134, 1135, 1136, 1132, 1133, 1145, 1115, 0, 0,
	0, 0, 0, 0, 1113, 1114, 0, 282, 284, 283,
	285, 286, 287, 288, 1146, 289, 290, 0, 1144, 0,
	0, 0, 1186, 1150, 0, 0, 0, 291, 292, 1226,
	293, 294, 295, 296, 297, 298, 653, 1199, 0, 299,
	1206, 300, 1205, 0, 1216, 301, 302, 303, 304, 305,
	306, 1152, 1185, 1117, 307, 1246, 1247, 660, 0, 308,
	309, 1192, 0, 1173, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1227, 332, 333, 334, 1176, 1174, 1175, 1182,
	1178, 1177, 1181, 335, 336, 337, 338, 339, 1209, 340,
	342, 1203, 1202, 1122, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1194, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 1128, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1217, 1218, 373, 1141, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 1201, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 1228, 381, 382,
	383, 1214, 1215, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1224, 0, 1151, 394, 0, 395,
	396, 397, 398, 399, 1187, 1188, 1191, 486, 1230, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1229, 410, 1196, 1197, 0,
	1157, 0, 411, 412, 1231, 1189, 1232, 413, 414, 415,
	1233, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 1225, 1234, 427,
	428, 1235, 0, 429, 430, 431, 432, 433, 434, 437,
	1180, 1179, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1236, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 1237,
	480, 468, 1119, 281, 1238, 482, 483, 484, 1142, 1190,
	485, 1204, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 1239,
	497, 1240, 1219, 498, 499, 1129, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 1220, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 1200, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 1241, 553, 554, 555,
	556, 557, 1130, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 0, 575, 576,
	574, 577, 578, 579, 1183, 580, 581, 563, 564, 582,
	583, 1242, 584, 585, 586, 587, 588, 589, 590, 1198,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 1245, 599, 600, 601, 602, 1221, 606, 607,
	0, 608, 609, 1116, 605, 596, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 1210, 1211, 1212,
	1213, 0, 627, 0, 619, 620, 621, 1222, 622, 1223,
	1140, 623, 624, 625, 626, 0, 628, 629, 0, 1123,
	630, 631, 632, 634, 635, 633, 636, 1184, 637, 0,
	0, 638, 639, 640, 699, 1207, 1244, 0, 642, 641,
	643, 644, 702, 645, 646, 0, 0, 0, 0, 647,
	648, 703, 649, 650, 651, 1120, 0, 0, 0, 1699,
	0, 1162, 1134, 1135, 1136, 1132, 1133, 1145, 1115, 0,
	0, 0, 0, 0, 0, 1113, 1114, 0, 282, 284,
	283, 285, 286, 287, 288, 1146, 289, 290, 0, 1144,
	0, 0, 0, 1186, 1150, 0, 0, 0, 291, 292,
	1226, 293, 294, 295, 296, 297, 298, 653, 1199, 0,
	299, 1206, 300, 1205, 0, 1216, 301, 302, 303, 304,
	305, 306, 1152, 1185, 1117, 307, 1246, 1247, 660, 0,
	308, 309, 1192, 0, 1173, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1227, 332, 333, 334, 1176, 1174, 1175,
	1182, 1178, 1177, 1181, 335, 336, 337, 338, 339, 1209,
	340, 342, 1203, 1202, 1122, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1194,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1128, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1217, 1218, 373, 1141, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1201, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1228, 381,
	382, 383, 1214, 1215, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1224, 0, 1151, 394, 0,
	395, 396, 397, 398, 399, 1187, 1188, 1191, 486, 1230,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1229, 410, 1196, 1197,
	0, 1157, 0, 411, 412, 1231, 1189, 1232, 413, 414,
	415, 1233, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1225, 1234,
	427, 428, 1235, 0, 429, 430, 431, 432, 433, 434,
	437, 1180, 1179, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1236, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1237, 480, 468, 1119, 281, 1238, 482, 483, 484, 1142,
	1190, 485, 1204, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	1239, 497, 1240, 1219, 498, 499, 1129, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 1220, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 1200, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1241, 553, 554,
	555, 556, 557, 1130, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 1183, 580, 581, 563, 564,
	582, 583, 1242, 584, 585, 586, 587, 588, 589, 590,
	1198, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 1245, 599, 600, 601, 602, 1221, 606,
	607, 0, 608, 609, 1116, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 1210, 1211,
	1212, 1213, 0, 627, 0, 619, 620, 621, 1222, 622,
	1223, 1140, 623, 624, 625, 626, 0, 628, 629, 0,
	1123, 630, 631, 632, 634, 635, 633, 636, 1184, 637,
	0, 0, 638, 639, 640, 699, 1207, 1244, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1120, 0, 0, 0,
	1694, 0, 1162, 1134, 1135, 1136, 1132, 1133, 1145, 1115,
	0, 0, 0, 0, 0, 0, 1113, 1114, 0, 282,
	284, 283, 285, 286, 287, 288, 1146, 289, 290, 0,
	1144, 0, 0, 0, 1186, 1150, 0, 0, 0, 291,
	292, 1226, 293, 294, 295, 296, 297, 298, 653, 1199,
	0, 299, 1206, 300, 1205, 0, 1216, 301, 302, 303,
	304, 305, 306, 1152, 1185, 1117, 307, 1246, 1247, 660,
	0, 308, 309, 1192, 0, 1173, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1227, 332, 333, 334, 1176, 1174,
	1175, 1182, 1178, 1177, 1181, 335, 336, 337, 338, 339,
	1209, 340, 342, 1203, 1202, 1122, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1194, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 1128, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 1217, 1218, 373, 1141, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 1201, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1228,
	381, 382, 383, 1214, 1215, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 1224, 0, 1151, 394,
	0, 395, 396, 397, 398, 399, 1187, 1188, 1191, 486,
	1230, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 1229, 410, 1196,
	1197, 0, 1157, 0, 411, 412, 1231, 1189, 1232, 413,
	414, 415, 1233, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 1225,
	1234, 427, 428, 1235, 0, 429, 430, 431, 432, 433,
	434, 437, 1180, 1179, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1236, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 1237, 480, 468, 1119, 281, 1238, 482, 483, 484,
	1142, 1190, 485, 1204, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 1239, 497, 1240, 1219, 498, 499, 1129, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 1220, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 1200, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 1241, 553,
	554, 555, 556, 557, 1130, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 1183, 580, 581, 563,
	564, 582, 583, 1242, 584, 585, 586, 587, 588, 589,
	590, 1198, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 1245, 599, 600, 601, 602, 1221,
	606, 607, 0, 608, 609, 1116, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 1210,
	1211, 1212, 1213, 0, 627, 0, 619, 620, 621, 1222,
	622, 1223, 1140, 623, 624, 625, 626, 0, 628, 629,
	0, 1123, 630, 631, 632, 634, 635, 633, 636, 1184,
	637, 0, 0, 638, 639, 640, 699, 1207, 1244, 0,
	642, 641, 643, 644, 702, 645, 646, 0, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 1120, 0, 0,
	0, 1680, 0, 1162, 1134, 1135, 1136, 1132, 1133, 1145,
	1115, 0, 0, 0, 0, 0, 0, 1113, 1114, 0,
	282, 284, 283, 285, 286, 287, 288, 1146, 289, 290,
	0, 1144, 0, 0, 0, 1186, 1150, 0, 0, 0,
	291, 292, 1226, 293, 294, 295, 296, 297, 298, 653,
	1199, 0, 299, 1206, 300, 1205, 0, 1216, 301, 302,
	303, 304, 305, 306, 1152, 1185, 1117, 307, 1246, 1247,
	660, 0, 308, 309, 1192, 0, 1173, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1227, 332, 333, 334, 1176,
	1174, 1175, 1182, 1178, 1177, 1181, 335, 336, 337, 338,
	339, 1209, 340, 342, 1203, 1202, 1122, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1194, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 1128, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1217, 1218, 373, 1141,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 1201,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1228, 381, 382, 383, 1214, 1215, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1224, 0, 1151,
	394, 0, 395, 396, 397, 398, 399, 1187, 1188, 1191,
	486, 1230, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1229, 410,
	1196, 1197, 0, 1157, 0, 411, 412, 1231, 1189, 1232,
	413, 414, 415, 1233, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1225, 1234, 427, 428, 1235, 0, 429, 430, 431, 432,
	433, 434, 437, 1180, 1179, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1236, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 1237, 480, 468, 1119, 281, 1238, 482, 483,
	484, 1142, 1190, 485, 1204, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 1239, 497, 1240, 1219, 498, 499, 1129, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 1220,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 1200, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 1241,
	553, 554, 555, 556, 557, 1130, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 1183, 580, 581,
	563, 564, 582, 583, 1242, 584, 585, 586, 587, 588,
	589, 590, 1198, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 1245, 599, 600, 601, 602,
	1221, 606, 607, 0, 608, 609, 1116, 605, 596, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	1210, 1211, 1212, 1213, 0, 627, 0, 619, 620, 621,
	1222, 622, 1223, 1140, 623, 624, 625, 626, 0, 628,
	629, 0, 1123, 630, 631, 632, 634, 635, 633, 636,
	1184, 637, 0, 0, 638, 639, 640, 699, 1207, 1244,
	0, 642, 641, 643, 644, 702, 645, 646, 0, 0,
	0, 0, 647, 648, 703, 649, 650, 651, 1120, 0,
	0, 0, 1675, 0, 1162, 1134, 1135, 1136, 1132, 1133,
	1145, 1115, 0, 0, 0, 0, 0, 0, 1113, 1114,
	0, 282, 284, 283, 285, 286, 287, 288, 1146, 289,
	290, 0, 1144, 0, 0, 0, 1186, 1150, 0, 0,
	0, 291, 292, 1226, 293, 294, 295, 296, 297, 298,
	653, 1199, 0, 299, 1206, 300, 1205, 0, 1216, 301,
	302, 303, 304, 305, 306, 1152, 1185, 1117, 307, 1246,
	1247, 660, 0, 308, 309, 1192, 0, 1173, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1227, 332, 333, 334,
	1176, 1174, 1175, 1182, 1178, 1177, 1181, 335, 336, 337,
	338, 339, 1209, 340, 342, 1203, 1202, 1122, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1194, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 1128, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1217, 1218, 373,
	1141, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	1201, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1228, 381, 382, 383, 1214, 1215, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1224, 0,
	1151, 394, 0, 395, 396, 397, 398, 399, 1187, 1188,
	1191, 486, 1230, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1229,
	410, 1196, 1197, 0, 1157, 0, 411, 412, 1231, 1189,
	1232, 413, 414, 415, 1233, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1225, 1234, 427, 428, 1235, 0, 429, 430, 431,
	432, 433, 434, 437, 1180, 1179, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1236, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 1237, 480, 468, 1119, 281, 1238, 482,
	483, 484, 1142, 1190, 485, 1204, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 1239, 497, 1240, 1219, 498, 499, 1129,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	1220, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 1200, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	1241, 553, 554, 555, 556, 557, 1130, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 1183, 580,
	581, 563, 564, 582, 583, 1242, 584, 585, 586, 587,
	588, 589, 590, 1198, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 1245, 599, 600, 601,
	602, 1221, 606, 607, 0, 608, 609, 1116, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 1210, 1211, 1212, 1213, 0, 627, 0, 619, 620,
	621, 1222, 622, 1223, 1140, 623, 624, 625, 626, 0,
	628, 629, 0, 1123, 630, 631, 632, 634, 635, 633,
	636, 1184, 637, 0, 0, 638, 639, 640, 699, 1207,
	1244, 0, 642, 641, 643, 644, 702, 645, 646, 0,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 1120,
	0, 0, 0, 1584, 0, 1162, 1134, 1135, 1136, 1132,
	1133, 1145, 1115, 0, 0, 0, 0, 0, 0, 1113,
	1114, 0, 282, 284, 283, 285, 286, 287, 288, 1146,
	289, 290, 0, 1144, 0, 0, 0, 1186, 1150, 0,
	0, 0, 291, 292, 1226, 293, 294, 295, 296, 297,
	298, 653, 1199, 0, 299, 1206, 300, 1205, 0, 1216,
	301, 302, 303, 304, 305, 306, 1152, 1185, 1117, 307,
	1246, 1247, 660, 0, 308, 309, 1192, 0, 1173, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1227, 332, 333,
	334, 1176, 1174, 1175, 1182, 1178, 1177, 1181, 335, 336,
	337, 338, 339, 1209, 340, 342, 1203, 1202, 1122, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1194, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 1128, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 1217, 1218,
	373, 1141, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 1201, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1228, 381, 382, 383, 1214, 1215, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 1224,
	0, 1151, 394, 0, 395, 396, 397, 398, 399, 1583,
	1188, 1191, 486, 1230, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	1229, 410, 1196, 1197, 0, 1157, 0, 411, 412, 1231,
	1189, 1232, 413, 414, 415, 1233, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 1225, 1234, 427, 428, 1235, 0, 429, 430,
	431, 432, 433, 434, 437, 1180, 1179, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1236, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 1237, 480, 468, 1119, 281, 1238,
	482, 483, 484, 1142, 1190, 485, 1204, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 1239, 497, 1240, 1219, 498, 499,
	1129, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 1220, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 1200, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 1241, 553, 554, 555, 556, 557, 1130, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 1183,
	580, 581, 563, 564, 582, 583, 1242, 584, 585, 586,
	587, 588, 589, 590, 1198, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 1245, 599, 600,
	601, 602, 1221, 606, 607, 0, 608, 609, 1116, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 1210, 1211, 1212, 1213, 0, 627, 0, 619,
	620, 621, 1222, 622, 1223, 1140, 623, 624, 625, 626,
	0, 628, 629, 0, 1123, 630, 631, 632, 634, 635,
	633, 636, 1184, 637, 0, 0, 638, 639, 640, 699,
	1207, 1244, 0, 642, 641, 643, 644, 702, 645, 646,
	0, 0, 0, 0, 647, 648, 703, 649, 650, 651,
	1120, 0, 0, 0, 1578, 0, 1162, 1134, 1135, 1136,
	1132, 1133, 1145, 1115, 0, 0, 0, 0, 0, 0,
	1113, 1114, 0, 282, 284, 283, 285, 286, 287, 288,
	1146, 289, 290, 0, 1144, 0, 0, 0, 1186, 1150,
	0, 0, 0, 291, 292, 1226, 293, 294, 295, 296,
	297, 298, 653, 1199, 0, 299, 1206, 300, 1205, 0,
	1216, 301, 302, 303, 304, 305, 306, 1152, 1185, 1117,
	307, 1246, 1247, 660, 0, 308, 309, 1192, 0, 1173,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1227, 332,
	333, 334, 1176, 1174, 1175, 1182, 1178, 1177, 1181, 335,
	336, 337, 338, 339, 1209, 340, 342, 1203, 1202, 1122,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1194, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 1128, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1217,
	1218, 373, 1141, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 1201, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1228, 381, 382, 383, 1214, 1215, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1224, 0, 1151, 394, 0, 395, 396, 397, 398, 399,
	1577, 1188, 1191, 486, 1230, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1229, 410, 1196, 1197, 0, 1157, 0, 411, 412,
	1231, 1189, 1232, 413, 414, 415, 1233, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 1225, 1234, 427, 428, 1235, 0, 429,
	430, 431, 432, 433, 434, 437, 1180, 1179, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1236, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 1237, 480, 468, 1119, 281,
	1238, 482, 483, 484, 1142, 1190, 485, 1204, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 1239, 497, 1240, 1219, 498,
	499, 1129, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 1220, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 1200, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 1241, 553, 554, 555, 556, 557, 1130, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 0, 575, 576, 574, 577, 578, 579,
	1183, 580, 581, 563, 564, 582, 583, 1242, 584, 585,
	586, 587, 588, 589, 590, 1198, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 1245, 599,
	600, 601, 602, 1221, 606, 607, 0, 608, 609, 1116,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 1210, 1211, 1212, 1213, 0, 627, 0,
	619, 620, 621, 1222, 622, 1223, 1140, 623, 624, 625,
	626, 0, 628, 629, 0, 1123, 630, 631, 632, 634,
	635, 633, 636, 1184, 637, 0, 0, 638, 639, 640,
	699, 1207, 1244, 0, 642, 641, 643, 644, 702, 645,
	646, 0, 0, 0, 0, 647, 648, 703, 649, 650,
	651, 1120, 0, 0, 0, 1571, 0, 1162, 1134, 1135,
	1136, 1132, 1133, 1145, 1115, 0, 0, 0, 0, 0,
	0, 1113, 1114, 0, 282, 284, 283, 285, 286, 287,
	288, 1146, 289, 290, 0, 1144, 0, 0, 0, 1186,
	1150, 0, 0, 0, 291, 292, 1226, 293, 294, 295,
	296, 297, 298, 653, 1199, 0, 299, 1206, 300, 1205,
	0, 1216, 301, 302, 303, 304, 305, 306, 1152, 1185,
	1117, 307, 1246, 1247, 660, 0, 308, 309, 1192, 0,
	1173, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1227,
	332, 333, 334, 1176, 1174, 1175, 1182, 1178, 1177, 1181,
	335, 336, 337, 338, 339, 1209, 340, 342, 1203, 1202,
	1122, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1194, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1128, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1217, 1218, 373, 1141, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1201, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1228, 381, 382, 383, 1214, 1215,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1224, 0, 1151, 394, 0, 395, 396, 397, 398,
	399, 1187, 1188, 1191, 486, 1230, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1229, 410, 1196, 1197, 0, 1157, 0, 411,
	412, 1231, 1189, 1232, 413, 414, 415, 1233, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1225, 1234, 427, 428, 1235, 0,
	429, 430, 431, 432, 433, 434, 437, 1180, 1179, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1236, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 1237, 480, 468, 1119,
	281, 1238, 482, 483, 484, 1142, 1190, 485, 1204, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 1239, 497, 1240, 1219,
	498, 499, 1129, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 1220, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 1200,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 1241, 553, 554, 555, 556, 557, 1130,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 1183, 580, 581, 563, 564, 582, 583, 1242, 584,
	585, 586, 587, 588, 589, 590, 1198, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 1245,
	599, 600, 601, 602, 1221, 606, 607, 0, 608, 609,
	1116, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 1210, 1211, 1212, 1213, 0, 627,
	0, 619, 620, 621, 1222, 622, 1223, 1140, 623, 624,
	625, 626, 0, 628, 629, 0, 1123, 630, 631, 632,
	634, 635, 633, 636, 1184, 637, 0, 0, 638, 639,
	640, 699, 1207, 1244, 0, 642, 641, 643, 644, 702,
	645, 646, 0, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 1120, 0, 0, 0, 1539, 0, 1162, 1134,
	1135, 1136, 1132, 1133, 1145, 1115, 0, 0, 0, 0,
	0, 0, 1113, 1114, 0, 282, 284, 283, 285, 286,
	287, 288, 1146, 289, 290, 0, 1144, 0, 0, 0,
	1186, 1150, 0, 0, 0, 291, 292, 1226, 293, 294,
	295, 296, 297, 298, 653, 1199, 0, 299, 1206, 300,
	1205, 0, 1216, 301, 302, 303, 304, 305, 306, 1152,
	1185, 1117, 307, 1246, 1247, 660, 0, 308, 309, 1192,
	0, 1173, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1227, 332, 333, 334, 1176, 1174, 1175, 1182, 1178, 1177,
	1181, 335, 336, 337, 338, 339, 1209, 340, 342, 1203,
	1202, 1122, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1194, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 1128,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 1217, 1218, 373, 1141, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 1201, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1228, 381, 382, 383, 1214,
	1215, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 1224, 0, 1151, 394, 0, 395, 396, 397,
	398, 399, 1187, 1188, 1191, 486, 1230, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 1229, 410, 1196, 1197, 0, 1157, 0,
	411, 412, 1231, 1189, 1232, 413, 414, 415, 1233, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 1225, 1234, 427, 428, 1235,
	0, 429, 430, 431, 432, 433, 434, 437, 1180, 1179,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1236,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 1237, 480, 468,
	1119, 281, 1238, 482, 483, 484, 1142, 1190, 485, 1204,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 1239, 497, 1240,
	1219, 498, 499, 1129, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 1220, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	1200, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 1241, 553, 554, 555, 556, 557,
	1130, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 1183, 580, 581, 563, 564, 582, 583, 1242,
	584, 585, 586, 587, 588, 589, 590, 1198, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	1245, 599, 600, 601, 602, 1221, 606, 607, 0, 608,
	609, 1116, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 1210, 1211, 1212, 1213, 0,
	627, 0, 619, 620, 621, 1222, 622, 1223, 1140, 623,
	624, 625, 626, 0, 628, 629, 0, 1123, 630, 631,
	632, 634, 635, 633, 636, 1184, 637, 0, 0, 638,
	639, 640, 699, 1207, 1244, 0, 642, 641, 643, 644,
	702, 645, 646, 0, 0, 0, 0, 647, 648, 703,
	649, 650, 651, 1120, 0, 0, 0, 1521, 0, 1162,
	1134, 1135, 1136, 1132, 1133, 1145, 1115, 0, 0, 0,
	0, 0, 0, 1113, 1114, 0, 282, 284, 283, 285,
	286, 287, 288, 1146, 289, 290, 0, 1144, 0, 0,
	0, 1186, 1150, 0, 0, 0, 291, 292, 1226, 293,
	294, 295, 296, 297, 298, 653, 1199, 0, 299, 1206,
	300, 1205, 0, 1216, 301, 302, 303, 304, 305, 306,
	1152, 1185, 1117, 307, 1246, 1247, 660, 0, 308, 309,
	1192, 0, 1173, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1227, 332, 333, 334, 1176, 1174, 1175, 1182, 1178,
	1177, 1181, 335, 336, 337, 338, 339, 1209, 340, 342,
	1203, 1202, 1122, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1194, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	1128, 362, 363, 364, 366, 368, 365, 1525, 369, 370,
	371, 372, 1217, 1218, 373, 1141, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 1201, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1228, 381, 382, 383,
	1214, 1215, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1224, 0, 1151, 394, 0, 395, 396,
	397, 398, 399, 1187, 1188, 1191, 486, 1230, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1229, 410, 1196, 1197, 0, 1157,
	0, 411, 412, 1231, 1189, 1232, 413, 414, 415, 1233,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 1225, 1234, 427, 428,
	1235, 0, 429, 430, 431, 432, 433, 434, 437, 1180,
	1179, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1236, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 1237, 480,
	468, 1119, 281, 1238, 482, 483, 484, 1142, 1190, 485,
	1204, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 1239, 497,
	1240, 1219, 498, 499, 1129, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 1220, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 1200, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 1526,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 1241, 553, 554, 555, 556,
	557, 1130, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 1183, 580, 581, 563, 564, 582, 583,
	1242, 584, 585, 586, 587, 588, 589, 590, 1198, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 1245, 599, 600, 601, 602, 1221, 606, 607, 0,
	608, 609, 1116, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 1524, 617, 0, 618, 1210, 1211, 1212, 1213,
	0, 627, 0, 619, 620, 621, 1222, 622, 1223, 1140,
	623, 624, 625, 626, 0, 628, 629, 0, 1123, 630,
	631, 632, 634, 635, 633, 636, 1184, 637, 0, 0,
	638, 639, 640, 699, 1207, 1244, 0, 642, 641, 643,
	644, 702, 645, 646, 0, 0, 0, 0, 647, 648,
	703, 649, 650, 651, 1120, 0, 0, 0, 1370, 0,
	1162, 1134, 1135, 1136, 1132, 1133, 1145, 1115, 0, 0,
	0, 0, 0, 0, 1113, 1114, 0, 282, 284, 283,
	285, 286, 287, 288, 1146, 289, 290, 0, 1144, 0,
	0, 0, 1186, 1150, 0, 0, 0, 291, 292, 1226,
	293, 294, 295, 296, 297, 298, 653, 1199, 0, 299,
	1206, 300, 1205, 0, 1216, 301, 302, 303, 304, 305,
	306, 1152, 1185, 1117, 307, 1246, 1247, 660, 0, 308,
	309, 1192, 0, 1173, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1227, 332, 333, 334, 1176, 1174, 1175, 1182,
	1178, 1177, 1181, 335, 336, 337, 338, 339, 1209, 340,
	342, 1203, 1202, 1122, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1194, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 1128, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1217, 1218, 373, 1141, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 1201, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 1228, 381, 382,
	383, 1214, 1215, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1224, 0, 1151, 394, 0, 395,
	396, 397, 398, 399, 1187, 1188, 1191, 486, 1230, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1229, 410, 1196, 1197, 0,
	1157, 0, 411, 412, 1231, 1189, 1232, 413, 414, 415,
	1233, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 1225, 1234, 427,
	428, 1235, 0, 429, 430, 431, 432, 433, 434, 437,
	1180, 1179, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1236, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 1237,
	480, 468, 1119, 281, 1238, 482, 483, 484, 1142, 1190,
	485, 1204, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 1239,
	497, 1240, 1219, 498, 499, 1129, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 1220, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 1200, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 1241, 553, 554, 555,
	556, 557, 1130, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 0, 575, 576,
	574, 577, 578, 579, 1183, 580, 581, 563, 564, 582,
	583, 1242, 584, 585, 586, 587, 588, 589, 590, 1198,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 1245, 599, 600, 601, 602, 1221, 606, 607,
	0, 608, 609, 1116, 605, 596, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 1210, 1211, 1212,
	1213, 0, 627, 0, 619, 620, 621, 1222, 622, 1223,
	1140, 623, 624, 625, 626, 0, 628, 629, 0, 1123,
	630, 631, 632, 634, 635, 633, 636, 1184, 637, 0,
	0, 638, 639, 640, 699, 1207, 1244, 0, 642, 641,
	643, 644, 702, 645, 646, 0, 0, 0, 0, 647,
	648, 703, 649, 650, 651, 1120, 0, 0, 0, 0,
	0, 1162, 1134, 1135, 1136, 1132, 1133, 1145, 1115, 0,
	0, 0, 0, 0, 0, 1113, 1114, 0, 282, 284,
	283, 285, 286, 287, 288, 1146, 289, 290, 0, 1144,
	0, 0, 0, 1186, 1150, 0, 0, 0, 291, 292,
	1226, 293, 294, 295, 296, 297, 298, 653, 1199, 0,
	299, 1206, 300, 1205, 0, 1216, 301, 302, 303, 304,
	305, 306, 1152, 1185, 1117, 307, 1246, 1247, 660, 0,
	308, 309, 1192, 0, 1173, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1227, 332, 333, 334, 1176, 1174, 1175,
	1182, 1178, 1177, 1181, 335, 336, 337, 338, 339, 1209,
	340, 342, 1203, 1202, 1122, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1194,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1128, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1217, 1218, 373, 1141, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1201, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1228, 381,
	382, 383, 1214, 1215, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1224, 0, 1151, 394, 0,
	395, 396, 397, 398, 399, 1187, 1188, 1191, 486, 1230,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1229, 410, 1196, 1197,
	0, 1157, 0, 411, 412, 1231, 1189, 1232, 413, 414,
	415, 1233, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1225, 1234,
	427, 428, 1235, 0, 429, 430, 431, 432, 433, 434,
	437, 1180, 1179, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1236, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1237, 480, 468, 1119, 281, 1238, 482, 483, 484, 1142,
	1190, 485, 1204, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	1239, 497, 1240, 1219, 498, 499, 1129, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 1220, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 1200, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1241, 553, 554,
	555, 556, 557, 1130, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 1183, 580, 581, 563, 564,
	582, 583, 1242, 584, 585, 586, 587, 588, 589, 590,
	1198, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 1245, 599, 600, 601, 602, 1221, 606,
	607, 0, 608, 609, 1116, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 1210, 1211,
	1212, 1213, 0, 627, 0, 619, 620, 621, 1222, 622,
	1223, 1140, 623, 624, 625, 626, 0, 628, 629, 0,
	1123, 630, 631, 632, 634, 635, 633, 636, 1184, 637,
	0, 0, 638, 639, 640, 699, 1207, 1244, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1120, 0, 0, 0,
	0, 0, 1162, 1134, 1135, 1136, 1132, 1133, 1145, 1115,
	0, 0, 0, 0, 0, 0, 1113, 1114, 0, 282,
	284, 283, 285, 286, 287, 288, 1146, 289, 290, 0,
	1144, 0, 0, 0, 1186, 1150, 0, 0, 0, 291,
	292, 1226, 293, 294, 295, 296, 297, 298, 653, 1199,
	0, 299, 1206, 300, 1205, 0, 1216, 301, 302, 303,
	304, 305, 306, 1152, 1185, 1117, 307, 1246, 1247, 660,
	0, 308, 309, 1192, 0, 1173, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1227, 332, 333, 4908, 1176, 1174,
	1175, 1182, 1178, 1177, 1181, 335, 336, 337, 338, 339,
	1209, 340, 342, 1203, 1202, 1122, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1194, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 1128, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 1217, 1218, 373, 1141, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 1201, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1228,
	381, 382, 383, 1214, 1215, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 1224, 0, 1151, 394,
	0, 395, 396, 397, 398, 399, 1187, 1188, 1191, 486,
	1230, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 1229, 410, 1196,
	1197, 0, 1157, 0, 411, 412, 1231, 1189, 1232, 413,
	414, 415, 1233, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 1225,
	1234, 427, 428, 1235, 0, 429, 430, 431, 432, 433,
	434, 437, 1180, 1179, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1236, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 1237, 480, 468, 1119, 281, 1238, 482, 483, 484,
	1142, 1190, 485, 1204, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 1239, 497, 1240, 1219, 498, 499, 1129, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 1220, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 1200, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 1241, 553,
	554, 555, 556, 557, 1130, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 1183, 580, 581, 563,
	564, 582, 583, 1242, 584, 585, 586, 587, 588, 589,
	590, 1198, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 1245, 599, 600, 601, 602, 1221,
	606, 607, 0, 608, 609, 1116, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 1210,
	1211, 1212, 1213, 0, 627, 0, 619, 620, 621, 1222,
	622, 1223, 1140, 623, 624, 625, 626, 0, 4907, 629,
	0, 1123, 630, 631, 632, 634, 635, 633, 636, 1184,
	637, 0, 0, 638, 639, 640, 699, 1207, 1244, 0,
	642, 641, 643, 644, 702, 645, 646, 0, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 1120, 0, 0,
	0, 0, 0, 1162, 1134, 1135, 1136, 1132, 1133, 1145,
	1115, 0, 0, 0, 0, 0, 0, 1113, 1114, 0,
	282, 284, 283, 285, 286, 287, 288, 1146, 289, 290,
	0, 1144, 0, 0, 0, 1186, 1150, 0, 0, 0,
	291, 292, 1226, 293, 294, 295, 296, 297, 298, 4906,
	1199, 0, 299, 1206, 300, 1205, 0, 1216, 301, 302,
	303, 304, 305, 306, 1152, 1185, 1117, 307, 1246, 1247,
	660, 0, 308, 309, 1192, 0, 1173, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1227, 332, 333, 4908, 1176,
	1174, 1175, 1182, 1178, 1177, 1181, 335, 336, 337, 338,
	339, 1209, 340, 342, 1203, 1202, 1122, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1194, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 1128, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1217, 1218, 373, 1141,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 1201,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1228, 381, 382, 383, 1214, 1215, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1224, 0, 1151,
	394, 0, 395, 396, 397, 398, 399, 1187, 1188, 1191,
	486, 1230, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1229, 410,
	1196, 1197, 0, 1157, 0, 411, 412, 1231, 1189, 1232,
	413, 414, 415, 1233, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1225, 1234, 427, 428, 1235, 0, 429, 430, 431, 432,
	433, 434, 437, 1180, 1179, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1236, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 1237, 480, 468, 1119, 281, 1238, 482, 483,
	484, 1142, 1190, 485, 1204, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 1239, 497, 1240, 1219, 498, 499, 1129, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 1220,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 1200, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 1241,
	553, 554, 555, 556, 557, 1130, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 1183, 580, 581,
	563, 564, 582, 583, 1242, 584, 585, 586, 587, 588,
	589, 590, 1198, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 1245, 599, 600, 601, 602,
	1221, 606, 607, 0, 608, 609, 1116, 605, 596, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	1210, 1211, 1212, 1213, 0, 627, 0, 619, 620, 621,
	1222, 622, 1223, 1140, 623, 624, 625, 626, 0, 4907,
	629, 0, 1123, 630, 631, 632, 634, 635, 633, 636,
	1184, 637, 0, 0, 638, 639, 640, 699, 1207, 1244,
	0, 642, 641, 643, 644, 702, 645, 646, 0, 0,
	0, 0, 647, 648, 703, 649, 650, 651, 1120, 0,
	0, 0, 0, 0, 1162, 1134, 1135, 1136, 1132, 1133,
	1145, 1115, 0, 0, 0, 0, 0, 0, 1113, 1114,
	0, 282, 284, 283, 285, 286, 287, 288, 1146, 289,
	290, 0, 1144, 0, 0, 0, 1186, 1150, 0, 0,
	0, 291, 292, 1226, 293, 294, 295, 296, 297, 298,
	653, 1199, 0, 299, 1206, 300, 1205, 0, 1216, 301,
	302, 303, 304, 305, 306, 1152, 1185, 1117, 307, 1246,
	1247, 660, 0, 308, 309, 1192, 0, 1173, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1227, 332, 4511, 334,
	1176, 1174, 1175, 1182, 1178, 1177, 1181, 335, 336, 337,
	338, 339, 1209, 340, 342, 1203, 1202, 1122, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1194, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 1128, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1217, 1218, 373,
	1141, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	1201, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1228, 381, 382, 383, 1214, 1215, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1224, 0,
	4512, 394, 0, 395, 396, 397, 398, 399, 1187, 1188,
	1191, 486, 1230, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1229,
	410, 1196, 1197, 0, 1157, 0, 411, 412, 1231, 1189,
	1232, 413, 414, 415, 1233, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1225, 1234, 427, 428, 1235, 0, 429, 430, 431,
	432, 433, 434, 437, 1180, 1179, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1236, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 1237, 480, 468, 1119, 281, 1238, 482,
	483, 484, 1142, 1190, 485, 1204, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 1239, 497, 1240, 1219, 498, 499, 1129,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	1220, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 1200, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	1241, 553, 554, 555, 4510, 557, 1130, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 1183, 580,
	581, 563, 564, 582, 583, 1242, 584, 585, 586, 587,
	588, 589, 590, 1198, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 1245, 599, 600, 601,
	602, 1221, 606, 607, 0, 608, 609, 1116, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 1210, 1211, 1212, 1213, 0, 627, 0, 619, 620,
	621, 1222, 622, 1223, 1140, 623, 624, 625, 626, 0,
	628, 629, 0, 1123, 630, 631, 632, 634, 635, 633,
	636, 1184, 637, 0, 0, 638, 639, 640, 699, 1207,
	1244, 0, 642, 641, 643, 644, 702, 645, 646, 0,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 1120,
	0, 0, 0, 0, 0, 1162, 1134, 1135, 1136, 3277,
	3278, 1145, 1115, 0, 0, 0, 0, 0, 0, 1113,
	1114, 0, 282, 284, 283, 285, 286, 287, 288, 1146,
	289, 290, 0, 1144, 0, 0, 0, 1186, 1150, 0,
	0, 0, 291, 292, 1226, 293, 294, 295, 296, 297,
	298, 653, 1199, 0, 299, 1206, 300, 1205, 0, 1216,
	301, 302, 303, 304, 305, 306, 1152, 1185, 1117, 307,
	1246, 1247, 660, 0, 308, 309, 1192, 0, 1173, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1227, 332, 333,
	334, 1176, 1174, 1175, 1182, 1178, 1177, 1181, 335, 336,
	337, 338, 339, 1209, 340, 342, 1203, 1202, 1122, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1194, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 1128, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 1217, 1218,
	373, 1141, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 1201, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1228, 381, 382, 383, 1214, 1215, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 1224,
	0, 1151, 394, 0, 395, 396, 397, 398, 399, 1187,
	1188, 1191, 486, 1230, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	1229, 410, 1196, 1197, 0, 1157, 0, 411, 412, 1231,
	1189, 1232, 413, 414, 415, 1233, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 1225, 1234, 427, 428, 1235, 0, 429, 430,
	431, 432, 433, 434, 437, 1180, 1179, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1236, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 1237, 480, 468, 1119, 281, 1238,
	482, 483, 484, 1142, 1190, 485, 1204, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 1239, 497, 1240, 1219, 498, 499,
	1129, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 1220, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 1200, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 1241, 553, 554, 555, 556, 557, 1130, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 1183,
	580, 581, 563, 564, 582, 583, 1242, 584, 585, 586,
	587, 588, 589, 590, 1198, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 1245, 599, 600,
	601, 602, 1221, 606, 607, 0, 608, 609, 1116, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 1210, 1211, 1212, 1213, 0, 627, 0, 619,
	620, 621, 1222, 622, 1223, 1140, 623, 624, 625, 626,
	0, 628, 629, 0, 1123, 630, 631, 632, 634, 635,
	633, 636, 1184, 637, 0, 0, 638, 639, 640, 699,
	1207, 1244, 0, 642, 641, 643, 644, 702, 645, 646,
	0, 0, 0, 0, 647, 648, 703, 649, 650, 651,
	1120, 0, 0, 0, 0, 0, 1162, 1134, 1135, 1136,
	3275, 3276, 1145, 1115, 0, 0, 0, 0, 0, 0,
	1113, 1114, 0, 282, 284, 283, 285, 286, 287, 288,
	1146, 289, 290, 0, 1144, 0, 0, 0, 1186, 1150,
	0, 0, 0, 291, 292, 1226, 293, 294, 295, 296,
	297, 298, 653, 1199, 0, 299, 1206, 300, 1205, 0,
	1216, 301, 302, 303, 304, 305, 306, 1152, 1185, 1117,
	307, 1246, 1247, 660, 0, 308, 309, 1192, 0, 1173,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1227, 332,
	333, 334, 1176, 1174, 1175, 1182, 1178, 1177, 1181, 335,
	336, 337, 338, 339, 1209, 340, 342, 1203, 1202, 1122,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1194, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 1128, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1217,
	1218, 373, 1141, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 1201, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1228, 381, 382, 383, 1214, 1215, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1224, 0, 1151, 394, 0, 395, 396, 397, 398, 399,
	1187, 1188, 1191, 486, 1230, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1229, 410, 1196, 1197, 0, 1157, 0, 411, 412,
	1231, 1189, 1232, 413, 414, 415, 1233, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 1225, 1234, 427, 428, 1235, 0, 429,
	430, 431, 432, 433, 434, 437, 1180, 1179, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1236, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 1237, 480, 468, 1119, 281,
	1238, 482, 483, 484, 1142, 1190, 485, 1204, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 1239, 497, 1240, 1219, 498,
	499, 1129, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 1220, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 1200, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 1241, 553, 554, 555, 556, 557, 1130, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 0, 575, 576, 574, 577, 578, 579,
	1183, 580, 581, 563, 564, 582, 583, 1242, 584, 585,
	586, 587, 588, 589, 590, 1198, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 1245, 599,
	600, 601, 602, 1221, 606, 607, 0, 608, 609, 1116,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 1210, 1211, 1212, 1213, 0, 627, 0,
	619, 620, 621, 1222, 622, 1223, 1140, 623, 624, 625,
	626, 0, 628, 629, 0, 1123, 630, 631, 632, 634,
	635, 633, 636, 1184, 637, 0, 0, 638, 639, 640,
	699, 1207, 1244, 0, 642, 641, 643, 644, 702, 645,
	646, 0, 0, 0, 0, 647, 648, 703, 649, 650,
	651, 1120, 0, 0, 0, 0, 0, 1162, 1134, 1135,
	1136, 1132, 1133, 1145, 1115, 0, 0, 0, 0, 0,
	0, 1113, 1114, 0, 282, 284, 283, 285, 286, 287,
	288, 1146, 289, 290, 0, 1144, 0, 0, 0, 1186,
	1150, 0, 0, 0, 291, 292, 1226, 293, 294, 295,
	296, 297, 298, 653, 1199, 0, 299, 1206, 300, 1205,
	0, 1216, 301, 302, 303, 304, 305, 306, 1152, 1185,
	1117, 307, 1246, 1247, 660, 0, 308, 309, 1192, 0,
	1173, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1227,
	332, 333, 334, 1176, 1174, 1175, 1182, 1178, 1177, 1181,
	335, 336, 337, 338, 339, 1209, 340, 342, 1203, 1202,
	1122, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1194, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1128, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1217, 1218, 373, 1141, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1201, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1228, 381, 382, 383, 1214, 1215,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1224, 0, 1151, 394, 0, 395, 396, 397, 398,
	399, 1187, 1188, 1191, 486, 1230, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1229, 410, 1196, 1197, 0, 1157, 0, 411,
	412, 1231, 1189, 1232, 413, 414, 415, 1233, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1225, 1234, 427, 428, 1235, 0,
	429, 430, 431, 432, 433, 434, 437, 1180, 1179, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1236, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 1237, 480, 468, 1119,
	281, 1238, 482, 483, 484, 1142, 1190, 485, 1204, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 1239, 497, 1240, 1219,
	498, 499, 1129, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 1220, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 1200,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 1241, 553, 554, 555, 556, 557, 1130,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 1183, 580, 581, 563, 564, 582, 583, 1242, 584,
	585, 586, 587, 588, 589, 590, 1198, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 1245,
	599, 600, 601, 602, 1221, 606, 607, 0, 608, 609,
	1116, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 1210, 1211, 1212, 1213, 0, 627,
	0, 619, 620, 621, 1222, 622, 1223, 1140, 623, 624,
	625, 626, 0, 628, 629, 0, 1123, 630, 631, 632,
	634, 635, 633, 636, 1184, 637, 0, 0, 638, 639,
	640, 699, 1207, 1244, 0, 642, 641, 643, 644, 702,
	645, 646, 0, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 1120, 0, 0, 0, 0, 0, 1162, 1134,
	1135, 1136, 1132, 1133, 1145, 1115, 0, 0, 0, 0,
	0, 0, 2527, 2528, 0, 282, 284, 283, 285, 286,
	287, 288, 1146, 289, 290, 0, 1144, 0, 0, 0,
	1186, 1150, 0, 0, 0, 291, 292, 1226, 293, 294,
	295, 296, 297, 298, 653, 1199, 0, 299, 1206, 300,
	1205, 0, 1216, 301, 302, 303, 304, 305, 306, 1152,
	1185, 0, 307, 1246, 1247, 660, 0, 308, 309, 1192,
	0, 1173, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1227, 332, 333, 334, 1176, 1174, 1175, 1182, 1178, 1177,
	1181, 335, 336, 337, 338, 339, 1209, 340, 342, 1203,
	1202, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1194, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 1128,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 1217, 1218, 373, 1141, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 1201, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1228, 381, 382, 383, 1214,
	1215, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 1224, 0, 1151, 394, 0, 395, 396, 397,
	398, 399, 1187, 1188, 1191, 486, 1230, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 1229, 410, 1196, 1197, 0, 1157, 0,
	411, 412, 1231, 1189, 1232, 413, 414, 415, 1233, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 1225, 1234, 427, 428, 1235,
	0, 429, 430, 431, 432, 433, 434, 437, 1180, 1179,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1236,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 1237, 480, 468,
	0, 281, 1238, 482, 483, 484, 1142, 1190, 485, 1204,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 1239, 497, 1240,
	1219, 498, 499, 1129, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 1220, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	1200, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 1241, 553, 554, 555, 556, 557,
	1130, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 1183, 580, 581, 563, 564, 582, 583, 1242,
	584, 585, 586, 587, 588, 589, 590, 1198, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	1245, 599, 600, 601, 602, 1221, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 1210, 1211, 1212, 1213, 0,
	627, 0, 619, 620, 621, 1222, 622, 1223, 1140, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 1184, 637, 0, 0, 638,
	639, 640, 699, 1207, 1244, 0, 642, 641, 643, 644,
	702, 645, 646, 0, 0, 0, 0, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 1162,
	1134, 1135, 1136, 1132, 1133, 1145, 2786, 0, 0, 0,
	0, 0, 0, 2784, 2785, 0, 282, 284, 283, 285,
	286, 287, 288, 1146, 289, 290, 0, 1144, 0, 0,
	0, 1186, 1150, 0, 0, 0, 291, 292, 1226, 293,
	294, 295, 296, 297, 298, 653, 1199, 0, 299, 1206,
	300, 1205, 0, 1216, 301, 302, 303, 304, 305, 306,
	1152, 1185, 0, 307, 1246, 1247, 660, 0, 308, 309,
	1192, 0, 1173, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1227, 332, 333, 334, 1176, 1174, 1175, 1182, 1178,
	1177, 1181, 335, 336, 337, 338, 339, 1209, 340, 342,
	1203, 1202, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1194, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	1128, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1217, 1218, 373, 1141, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 1201, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1228, 381, 382, 383,
	1214, 1215, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1224, 0, 1151, 394, 0, 395, 396,
	397, 398, 399, 1187, 1188, 1191, 486, 1230, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1229, 410, 1196, 1197, 0, 1157,
	0, 411, 412, 1231, 1189, 1232, 413, 414, 415, 1233,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 1225, 1234, 427, 428,
	1235, 0, 429, 430, 431, 432, 433, 434, 437, 1180,
	1179, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1236, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 1237, 480,
	468, 0, 281, 1238, 482, 483, 484, 1142, 1190, 485,
	1204, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 1239, 497,
	1240, 1219, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 1220, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 1200, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 1241, 553, 554, 555, 556,
	557, 3270, 3271, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 1183, 580, 581, 563, 564, 582, 583,
	1242, 584, 585, 586, 587, 588, 589, 590, 1198, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 1245, 599, 600, 601, 602, 1221, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 1210, 1211, 1212, 1213,
	0, 627, 0, 619, 620, 621, 1222, 622, 1223, 1140,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 1184, 637, 0, 0,
	638, 639, 640, 699, 1207, 1244, 0, 642, 641, 643,
	644, 702, 645, 646, 0, 0, 0, 0, 647, 648,
	703, 649, 650, 651, 0, 0, 0, 0, 0, 0,
	1162, 1134, 1135, 1136, 1132, 1133, 1145, 0, 0, 0,
	0, 0, 0, 0, 2179, 2180, 0, 282, 284, 283,
	285, 286, 287, 288, 1146, 289, 290, 0, 1144, 0,
	0, 0, 1186, 1150, 0, 0, 0, 291, 292, 1226,
	293, 294, 295, 296, 297, 298, 0, 1199, 0, 299,
	1206, 300, 1205, 0, 1216, 301, 302, 303, 304, 305,
	306, 1152, 1185, 1117, 307, 1246, 1247, 660, 0, 308,
	309, 1192, 0, 1173, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1227, 332, 333, 4908, 1176, 1174, 1175, 1182,
	1178, 1177, 1181, 335, 336, 337, 338, 339, 1209, 340,
	342, 1203, 1202, 1122, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1194, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 1128, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1217, 1218, 373, 1141, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 1201, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 1228, 381, 382,
	383, 1214, 1215, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1224, 0, 1151, 394, 0, 395,
	396, 397, 398, 399, 1187, 1188, 1191, 486, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1229, 410, 1196, 1197, 0,
	1157, 0, 411, 412, 0, 1189, 0, 413, 414, 415,
	1233, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 1225, 1234, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	1180, 1179, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1236, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 1237,
	480, 468, 1119, 281, 0, 482, 483, 484, 1142, 1190,
	485, 1204, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 1239,
	497, 1240, 1219, 498, 499, 1129, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 1220, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 1200, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 1241, 553, 554, 555,
	556, 557, 1130, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 0, 575, 576,
	574, 577, 578, 579, 1183, 580, 581, 563, 564, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 1198,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 1245, 599, 600, 601, 602, 1221, 606, 607,
	0, 608, 609, 1116, 605, 596, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 1210, 1211, 1212,
	1213, 0, 627, 0, 619, 620, 621, 1222, 622, 1223,
	1140, 623, 624, 625, 626, 0, 4907, 629, 0, 1123,
	630, 631, 632, 634, 635, 633, 636, 1184, 637, 0,
	0, 638, 639, 640, 699, 1207, 1244, 0, 642, 641,
	643, 644, 702, 645, 646, 0, 0, 0, 0, 647,
	648, 703, 649, 650, 651, 0, 0, 0, 0, 1106,
	0, 1284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1113, 1114, 0, 282, 284,
	283, 285, 286, 287, 288, 1146, 289, 290, 0, 1144,
	0, 0, 0, 1186, 0, 0, 0, 0, 291, 292,
	1226, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 1185, 0, 307, 658, 659, 660, 0,
	308, 309, 1192, 0, 1173, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1227, 332, 333, 334, 1176, 1174, 1175,
	1182, 1178, 1177, 1181, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1217, 1218, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1228, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1224, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 1187, 1188, 1191, 486, 1230,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1229, 410, 675, 676,
	0, 677, 0, 411, 412, 1231, 1189, 1232, 413, 414,
	415, 1233, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 1270, 423, 425, 424, 0, 426, 1225, 1234,
	427, 428, 1235, 0, 429, 430, 431, 432, 433, 434,
	437, 1180, 1179, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1236, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1237, 480, 468, 0, 281, 1238, 482, 483, 484, 0,
	1190, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 1276, 492, 493, 494, 0, 0, 495, 496, 682,
	1239, 497, 1240, 1219, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 1220, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1241, 553, 554,
	555, 556, 557, 689, 1278, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 241, 575,
	576, 574, 577, 578, 579, 1183, 580, 581, 563, 564,
	582, 583, 1242, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 1221, 606,
	607, 0, 608, 609, 0, 605, 596, 243, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 1222, 622,
	1223, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 1184, 637,
	0, 0, 638, 639, 640, 1664, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 235,
	647, 648, 703, 649, 650, 651, 1284, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 1274, 0, 2019, 0, 1186, 0,
	0, 0, 0, 291, 292, 1226, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 0,
	657, 301, 302, 303, 304, 305, 306, 0, 1185, 0,
	307, 658, 659, 660, 0, 308, 309, 1192, 0, 1173,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1227, 332,
	333, 334, 1176, 1174, 1175, 1182, 1178, 1177, 1181, 335,
	336, 337, 338, 339, 0, 340, 342, 662, 663, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1217,
	1218, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1228, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1224, 0, 671, 394, 0, 395, 396, 397, 398, 399,
	1187, 1188, 1191, 486, 1230, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1229, 410, 675, 676, 0, 677, 0, 411, 412,
	1231, 1189, 1232, 413, 414, 415, 1233, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 1270, 423, 425,
	424, 0, 426, 1225, 1234, 427, 428, 1235, 0, 429,
	430, 431, 432, 433, 434, 437, 1180, 1179, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1236, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 1237, 480, 468, 0, 281,
	1238, 482, 483, 484, 0, 1190, 485, 681, 487, 488,
	0, 0, 489, 0, 490, 0, 1276, 492, 493, 494,
	0, 0, 495, 496, 682, 1239, 497, 1240, 1219, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 1220, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 1241, 553, 554, 555, 556, 557, 689, 1278,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 241, 575, 576, 574, 577, 578, 579,
	1183, 580, 581, 563, 564, 582, 583, 1242, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 1221, 606, 607, 0, 608, 609, 0,
	605, 596, 243, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 693, 694, 695, 696, 0, 627, 0,
	619, 620, 621, 1222, 622, 1223, 0, 623, 624, 625,
	626, 0, 628, 629, 0, 0, 630, 631, 632, 634,
	635, 633, 636, 1184, 637, 0, 0, 638, 639, 640,
	1664, 700, 701, 0, 642, 641, 643, 644, 702, 645,
	646, 0, 0, 0, 235, 647, 648, 703, 649, 650,
	651, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3434, 0, 1284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1274,
	0, 2019, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 1186, 0, 0,
	0, 0, 291, 292, 1226, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 1185, 0, 307,
	658, 659, 660, 0, 308, 309, 1192, 0, 1173, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1227, 332, 333,
	334, 1176, 1174, 1175, 1182, 1178, 1177, 1181, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 1217, 1218,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1228, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 1224,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 1187,
	1188, 1191, 486, 1230, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	1229, 410, 675, 676, 0, 677, 0, 411, 412, 1231,
	1189, 1232, 413, 414, 415, 1233, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 1270, 423, 425, 424,
	0, 426, 1225, 1234, 427, 428, 1235, 0, 429, 430,
	431, 432, 433, 434, 437, 1180, 1179, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1236, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 1237, 480, 468, 0, 281, 1238,
	482, 483, 484, 0, 1190, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 1276, 492, 493, 494, 0,
	0, 495, 496, 682, 1239, 497, 1240, 1219, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 1220, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 1241, 553, 554, 555, 556, 557, 689, 1278, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 1183,
	580, 581, 563, 564, 582, 583, 1242, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 1221, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 1222, 622, 1223, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 1184, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	0, 0, 0, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1266, 0, 1284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1274, 0,
	1272, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 1186, 0, 0, 0,
	0, 291, 292, 1226, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 1185, 0, 307, 658,
	659, 660, 0, 308, 309, 1192, 0, 1173, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1227, 332, 333, 334,
	1176, 1174, 1175, 1182, 1178, 1177, 1181, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1217, 1218, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1228, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1224, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 1187, 1188,
	1191, 486, 1230, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1229,
	410, 675, 676, 0, 677, 0, 411, 412, 1231, 1189,
	1232, 413, 414, 415, 1233, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 1270, 423, 425, 424, 0,
	426, 1225, 1234, 427, 428, 1235, 0, 429, 430, 431,
	432, 433, 434, 437, 1180, 1179, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1236, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 1237, 480, 468, 0, 281, 1238, 482,
	483, 484, 0, 1190, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 1276, 492, 493, 494, 0, 0,
	495, 496, 682, 1239, 497, 1240, 1219, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	1220, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	1241, 553, 554, 555, 556, 557, 689, 1278, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 1183, 580,
	581, 563, 564, 582, 583, 1242, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 1221, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 1222, 622, 1223, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 1184, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 0,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 1284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 1274, 0, 1272,
	0, 1186, 0, 0, 0, 0, 291, 292, 1226, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 1185, 0, 307, 658, 659, 660, 0, 308, 309,
	1192, 0, 1173, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1227, 332, 333, 334, 1176, 1174, 1175, 1182, 1178,
	1177, 1181, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1217, 1218, 373, 0, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1228, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1224, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 1187, 1188, 1191, 486, 1230, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1229, 410, 675, 676, 0, 677,
	0, 411, 412, 1231, 1189, 1232, 413, 414, 415, 1233,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	1270, 423, 425, 424, 0, 426, 1225, 1234, 427, 428,
	1235, 0, 429, 430, 431, 432, 433, 434, 437, 1180,
	1179, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1236, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 1237, 480,
	468, 0, 281, 1238, 482, 483, 484, 0, 1190, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 1276,
	492, 493, 494, 0, 0, 495, 496, 682, 1239, 497,
	1240, 1219, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 1220, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 1241, 553, 554, 555, 556,
	557, 689, 1278, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 1183, 580, 581, 563, 564, 582, 583,
	1242, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 1221, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 1222, 622, 1223, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 1184, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 0, 0, 0, 0, 647, 648,
	703, 649, 650, 651, 1284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 1274, 0, 1272, 0, 1186, 0, 0, 0,
	0, 291, 292, 1226, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 1185, 0, 307, 658,
	659, 660, 0, 308, 309, 1192, 0, 1173, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1227, 332, 333, 334,
	1176, 1174, 1175, 1182, 1178, 1177, 1181, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1217, 1218, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1228, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1224, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 1187, 1188,
	1191, 486, 1230, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1229,
	410, 675, 676, 0, 677, 0, 411, 412, 1231, 1189,
	1232, 413, 414, 415, 1233, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1225, 1234, 427, 428, 1235, 0, 429, 430, 431,
	432, 433, 434, 437, 1180, 1179, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1236, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 1237, 480, 468, 0, 281, 1238, 482,
	483, 484, 0, 1190, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 1239, 497, 1240, 1219, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	1220, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	1241, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 1183, 580,
	581, 563, 564, 582, 583, 1242, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 1221, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 1222, 622, 1223, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 1184, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 0,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 1284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 4326,
	0, 1186, 0, 0, 0, 0, 291, 292, 1226, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 1185, 0, 307, 658, 659, 660, 0, 308, 309,
	1192, 0, 1173, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1227, 332, 333, 334, 1176, 1174, 1175, 1182, 1178,
	1177, 1181, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1217, 1218, 373, 0, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1228, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1224, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 1187, 1188, 1191, 486, 1230, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1229, 410, 675, 676, 0, 677,
	0, 411, 412, 1231, 1189, 1232, 413, 414, 415, 1233,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 1225, 1234, 427, 428,
	1235, 0, 429, 430, 431, 432, 433, 434, 437, 1180,
	1179, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1236, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 1237, 480,
	468, 0, 281, 1238, 482, 483, 484, 0, 1190, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 1239, 497,
	1240, 1219, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 1220, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 1241, 553, 554, 555, 556,
	557, 689, 1278, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 1183, 580, 581, 563, 564, 582, 583,
	1242, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 1221, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 1222, 622, 1223, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 1184, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 0, 276, 0, 0, 647, 648,
	703, 649, 650, 651, 0, 2631, 2632, 2633, 2650, 2651,
	2652, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 2653, 0, 652, 0, 0,
	0, 0, 291, 292, 1916, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 1901, 307,
	658, 659, 660, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 2643, 0, 318,
	319, 320, 317, 321, 0, 322, 2639, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 0, 0, 2644, 2645, 2646, 2647, 374, 375,
	376, 667, 0, 0, 2638, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 672,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 2648, 2649,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 2641, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 0, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 553, 554, 555, 556, 557, 689, 558, 2642,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 1900, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	0, 0, 0, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 1106, 0, 1546,
	2628, 2629, 2630, 2654, 2640, 2634, 0, 2636, 2637, 2635,
	2622, 2623, 2624, 2625, 2626, 2627, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 652, 0, 0, 0, 0, 291, 292, 1226, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 309,
	661, 0, 1510, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1227, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1228, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 672, 673, 674, 486, 1230, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 1229, 410, 675, 676, 0, 677,
	0, 411, 412, 1231, 678, 1232, 413, 414, 415, 1233,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 1234, 427, 428,
	1235, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1236, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 1237, 480,
	468, 0, 0, 1238, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 1239, 497,
	1240, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 1241, 553, 554, 555, 556,
	557, 689, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 241, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	1242, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 243, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 1664, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 0, 0, 0, 235, 647, 648,
	703, 649, 650, 651, 0, 1661, 236, 1546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 196, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 1226, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	1510, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1227,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1228, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 1230, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 1229, 410, 675, 676, 0, 677, 0, 411,
	412, 1231, 678, 1232, 413, 414, 415, 1233, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 1234, 427, 428, 1235, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1236, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 1237, 480, 468, 0,
	0, 1238, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 1239, 497, 1240, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 1241, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 241, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 1242, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 243, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 1664, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 0, 0, 0, 235, 647, 648, 703, 649,
	650, 651, 1546, 1545, 236, 0, 0, 0, 1543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 196, 0, 652, 0, 0, 0, 0, 291,
	292, 1226, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 1510, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1227, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1228,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	1230, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 1229, 410, 675,
	676, 0, 677, 0, 411, 412, 1231, 678, 1232, 413,
	414, 415, 1233, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	1234, 427, 428, 1235, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1236, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 1237, 480, 468, 0, 0, 1238, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 1239, 497, 1240, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 1241, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 1242, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 0, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 1546, 1545, 0,
	0, 0, 0, 1543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 1688, 0, 652,
	0, 0, 0, 0, 291, 292, 1226, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	1510, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1227,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1228, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 1230, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 1229, 410, 675, 676, 0, 677, 0, 411,
	412, 1231, 678, 1232, 413, 414, 415, 1233, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 1234, 427, 428, 1235, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1236, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 1237, 480, 468, 0,
	0, 1238, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 1239, 497, 1240, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 1241, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 1242, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 0, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 1546, 1545, 0, 0, 0, 0, 1543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 3757, 0, 652, 0, 0, 0, 0, 291,
	292, 1226, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 1510, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1227, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1228,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	1230, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 1229, 410, 675,
	676, 0, 677, 0, 411, 412, 1231, 678, 1232, 413,
	414, 415, 1233, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	1234, 427, 428, 1235, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1236, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 1237, 480, 468, 0, 0, 1238, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 1239, 497, 1240, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 2394, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 1241, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 1242, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 0, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 1546, 2303, 0,
	0, 0, 0, 2304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 1688, 0, 652,
	0, 0, 0, 0, 291, 292, 1226, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	1510, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1227,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1228, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 1230, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 1229, 410, 675, 676, 0, 677, 0, 411,
	412, 1231, 678, 1232, 413, 414, 415, 1233, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 2302,
	425, 424, 0, 426, 679, 1234, 427, 428, 1235, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1236, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 1237, 480, 468, 0,
	0, 1238, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 1239, 497, 1240, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 1241, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 1242, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 0, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 1546, 1545, 0, 0, 0, 0, 1543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 1688, 0, 652, 0, 0, 0, 0, 291,
	292, 1226, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 1510, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1227, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1228,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	1230, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 1229, 410, 675,
	676, 0, 677, 0, 411, 412, 1231, 678, 1232, 413,
	414, 415, 1233, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	1234, 427, 428, 1235, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1236, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 1237, 480, 468, 0, 0, 1238, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 1239, 497, 1240, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 1241, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 1242, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 0, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 1106, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 1670, 0, 0,
	0, 652, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 309,
	661, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 672, 673, 674, 486, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 675, 676, 0, 677,
	0, 411, 412, 0, 678, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 0, 480,
	468, 0, 0, 0, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 0, 497,
	0, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 0, 553, 554, 555, 556,
	557, 689, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 241, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 243, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 1664, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 0, 276, 0, 235, 647, 648,
	703, 649, 650, 651, 0, 0, 236, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 652, 0, 0,
	0, 0, 291, 292, 196, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	658, 659, 660, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 672,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 281, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 553, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	0, 276, 3182, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	2033, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 672, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 0, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 5075, 0, 1186, 0,
	0, 0, 0, 291, 292, 1226, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 0,
	657, 301, 302, 303, 304, 305, 306, 0, 1185, 0,
	307, 658, 659, 660, 0, 308, 309, 1192, 0, 1173,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1227, 332,
	333, 334, 1176, 1174, 1175, 1182, 1178, 1177, 1181, 335,
	336, 337, 338, 339, 0, 340, 342, 662, 663, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1217,
	1218, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1228, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1224, 0, 671, 394, 0, 395, 396, 397, 398, 399,
	1187, 1188, 1191, 486, 1230, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1229, 410, 675, 676, 0, 677, 0, 411, 412,
	1231, 1189, 1232, 413, 414, 415, 1233, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 1225, 1234, 427, 428, 1235, 0, 429,
	430, 431, 432, 433, 434, 437, 1180, 1179, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1236, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 1237, 480, 468, 0, 281,
	1238, 482, 483, 484, 0, 1190, 485, 681, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 1239, 497, 1240, 1219, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 1220, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 1241, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 0, 575, 576, 574, 577, 578, 579,
	1183, 580, 581, 563, 564, 582, 583, 1242, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 1221, 606, 607, 0, 608, 609, 0,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 693, 694, 695, 696, 0, 627, 0,
	619, 620, 621, 1222, 622, 1223, 0, 623, 624, 625,
	626, 0, 628, 629, 0, 0, 630, 631, 632, 634,
	635, 633, 636, 1184, 637, 0, 0, 638, 639, 640,
	699, 700, 701, 0, 642, 641, 643, 644, 702, 645,
	646, 276, 0, 0, 0, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 672, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 281, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 276, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	652, 0, 0, 0, 3707, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 0, 657, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 658, 659, 660, 0, 308, 309, 661,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 0, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 670, 0, 671, 394, 0, 395, 396, 397,
	398, 399, 672, 673, 674, 486, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 0, 410, 675, 676, 0, 677, 0,
	411, 412, 0, 678, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 679, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 0, 480, 468,
	0, 281, 0, 482, 483, 484, 0, 680, 485, 681,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 0, 497, 0,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 0, 553, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 0, 580, 581, 563, 564, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 693, 694, 695, 696, 0,
	627, 0, 619, 620, 621, 697, 622, 698, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 699, 700, 701, 0, 642, 641, 643, 644,
	702, 645, 646, 0, 0, 276, 0, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 652, 0, 0,
	0, 1658, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	658, 659, 660, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 672,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 0, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 553, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	0, 276, 0, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	3170, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 672, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 0, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 276, 0, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 3866, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 0, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 933, 0, 833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 2381, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	840, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	930, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 281, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 932, 0, 605, 596,
	838, 610, 611, 612, 613, 614, 839, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 2078,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 843, 0, 0, 0, 0, 291, 292, 1226, 293,
	294, 295, 296, 297, 298, 0, 2084, 0, 299, 2074,
	300, 2090, 0, 2097, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 2100, 2101, 0, 0, 308, 309,
	0, 0, 1510, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1227, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 1209, 340, 342,
	2088, 2087, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1194, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	0, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 0, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 2086, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1228, 381, 382, 383,
	2095, 2096, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 0, 0, 0, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 486, 1230, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 1229, 410, 2081, 2082, 0, 2077,
	0, 411, 412, 1231, 0, 1232, 413, 414, 415, 1233,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 0, 1234, 427, 428,
	1235, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1236, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 1237, 480,
	468, 0, 0, 1238, 482, 483, 484, 0, 0, 485,
	2089, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 0, 1239, 497,
	1240, 0, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 2071, 511, 512,
	513, 2072, 514, 515, 516, 0, 517, 0, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 2085, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 1241, 553, 554, 555, 556,
	557, 0, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	1242, 584, 585, 586, 587, 588, 589, 590, 2083, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 2099, 599, 600, 601, 602, 0, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 2091, 2092, 2093, 2094,
	0, 627, 0, 619, 620, 621, 0, 622, 0, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 0, 2075, 2098, 0, 642, 641, 643,
	644, 0, 645, 646, 0, 0, 0, 0, 647, 648,
	0, 649, 650, 651, 833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 3986, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 2065, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	840, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 281, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 3985, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	838, 610, 611, 612, 613, 614, 839, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 3984, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 0,
	833, 0, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 2105, 289, 290, 0, 0, 0,
	0, 843, 652, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 653, 654, 0, 299,
	655, 300, 656, 0, 657, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 658, 659, 660, 0, 308,
	309, 661, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 840, 339, 0, 340,
	342, 662, 663, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 664, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 665, 666, 373, 0, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 667, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 668, 669, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 670, 0, 671, 394, 0, 395,
	396, 397, 398, 399, 672, 673, 674, 486, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 0, 410, 675, 676, 0,
	677, 0, 411, 412, 0, 678, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 679, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 0,
	480, 468, 0, 281, 0, 482, 483, 484, 0, 680,
	485, 681, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 0,
	497, 0, 683, 498, 499, 491, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 686, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 688, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 0, 553, 554, 555,
	556, 557, 689, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 2104, 570, 571, 572, 573, 0, 2106, 576,
	574, 577, 578, 579, 0, 580, 581, 563, 564, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 690,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 691, 599, 600, 601, 602, 692, 606, 607,
	0, 608, 609, 0, 605, 596, 838, 610, 611, 612,
	613, 614, 839, 616, 617, 0, 618, 693, 694, 695,
	696, 0, 627, 0, 619, 620, 621, 697, 622, 698,
	0, 623, 624, 2103, 626, 0, 628, 629, 0, 0,
	630, 631, 632, 634, 635, 633, 636, 0, 637, 0,
	0, 638, 639, 640, 699, 700, 701, 0, 642, 641,
	643, 644, 702, 645, 646, 0, 833, 0, 0, 647,
	648, 703, 649, 650, 651, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	2056, 289, 290, 0, 0, 0, 0, 843, 652, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 0,
	657, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 658, 659, 660, 0, 308, 309, 661, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 840, 339, 0, 340, 342, 662, 663, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 665,
	666, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	670, 0, 671, 394, 0, 395, 396, 397, 398, 399,
	672, 673, 674, 486, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 0, 410, 675, 676, 0, 677, 0, 411, 412,
	0, 678, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 679, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 0, 480, 468, 0, 281,
	0, 482, 483, 484, 0, 680, 485, 681, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 0, 497, 0, 683, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 686, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 0, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 2055, 570,
	571, 572, 573, 0, 2057, 576, 574, 577, 578, 579,
	0, 580, 581, 563, 564, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 692, 606, 607, 0, 608, 609, 0,
	605, 596, 838, 610, 611, 612, 613, 614, 839, 616,
	617, 0, 618, 693, 694, 695, 696, 0, 627, 0,
	619, 620, 621, 697, 622, 698, 0, 623, 624, 2054,
	626, 0, 628, 629, 0, 0, 630, 631, 632, 634,
	635, 633, 636, 0, 637, 0, 0, 638, 639, 640,
	699, 700, 701, 0, 642, 641, 643, 644, 702, 645,
	646, 831, 0, 833, 0, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 843, 0, 652, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 0, 657, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 658, 659,
	660, 0, 308, 309, 661, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 840,
	339, 0, 340, 342, 662, 663, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 0,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 670, 0, 671,
	394, 0, 395, 396, 397, 398, 399, 672, 673, 674,
	486, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 0, 410,
	675, 676, 0, 677, 0, 411, 412, 0, 678, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	679, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 0, 480, 468, 0, 281, 0, 482, 483,
	484, 0, 680, 485, 681, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 0, 497, 0, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 0,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 0, 580, 581,
	563, 564, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 0, 608, 609, 0, 605, 596, 838,
	610, 611, 612, 613, 614, 839, 616, 617, 0, 618,
	693, 694, 695, 696, 0, 627, 0, 619, 620, 621,
	697, 622, 698, 0, 623, 624, 625, 626, 0, 628,
	629, 0, 0, 630, 631, 632, 634, 635, 633, 636,
	0, 637, 0, 0, 638, 639, 640, 699, 700, 701,
	0, 642, 641, 643, 644, 702, 645, 646, 0, 833,
	0, 0, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	843, 652, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 309,
	661, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 840, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 672, 673, 674, 486, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 0, 410, 675, 676, 0, 677,
	0, 411, 412, 0, 678, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 0, 480,
	468, 0, 281, 0, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 0, 497,
	0, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 0, 553, 554, 555, 556,
	557, 689, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 838, 610, 611, 612, 613,
	614, 839, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 0, 833, 0, 0, 647, 648,
	703, 649, 650, 651, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 843, 652, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	658, 659, 660, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 840, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 672,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 281, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 2433, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 2434, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 0, 605,
	596, 838, 610, 611, 612, 613, 614, 839, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 2435, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	0, 276, 0, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 843, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 672, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 281, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 1546, 1545, 0, 0, 0, 0, 1543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 843, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 1226, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 1510, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1227, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1228,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	1230, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 1229, 410, 675,
	676, 0, 677, 0, 411, 412, 1231, 678, 1232, 413,
	414, 415, 1233, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	1234, 427, 428, 1235, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1236, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 1237, 480, 468, 0, 0, 1238, 482, 483, 484,
	4080, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 1239, 497, 1240, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 1241, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 1242, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 0, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 1546, 1545, 0,
	0, 0, 0, 1543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 1226, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	1510, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1227,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1228, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 1230, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 1229, 410, 675, 676, 0, 677, 0, 411,
	412, 1231, 678, 1232, 413, 414, 415, 1233, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 1234, 427, 428, 1235, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1236, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 1237, 480, 468, 0,
	0, 1238, 482, 483, 484, 3657, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 1239, 497, 1240, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 1241, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 1242, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 0, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 1719, 0, 1546, 1545, 0, 0, 0, 0,
	1543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 1226, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 1510, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1227, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 279, 0, 0, 0, 0, 0, 1718, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1228, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 1230, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 1229,
	410, 675, 676, 0, 677, 0, 411, 412, 1231, 678,
	1232, 413, 414, 415, 1233, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 1234, 427, 428, 1235, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1236, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 1237, 480, 468, 0, 0, 1238, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 1239, 497, 1240, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 1717, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	1241, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 1716, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 1242, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 0,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 1591,
	0, 1546, 1545, 0, 0, 0, 0, 1543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	1226, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 1510, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1227, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1228, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 1593, 673, 674, 486, 1230,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 1229, 410, 675, 676,
	0, 677, 0, 411, 412, 1231, 678, 1232, 413, 414,
	415, 1233, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 1234,
	427, 428, 1235, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1236, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	1237, 480, 468, 0, 0, 1238, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	1239, 497, 1240, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 1241, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 1242, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 0, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 1541, 0, 1546, 1545,
	0, 0, 0, 0, 1543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	652, 0, 0, 0, 0, 291, 292, 1226, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 0, 657, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 658, 659, 660, 0, 308, 309, 661,
	0, 1510, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1227, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 0, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1228, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 670, 0, 671, 394, 0, 395, 396, 397,
	398, 399, 672, 673, 674, 486, 1230, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 1229, 410, 675, 676, 0, 677, 0,
	411, 412, 1231, 678, 1232, 413, 414, 415, 1233, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 679, 1234, 427, 428, 1235,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1236,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 1237, 480, 468,
	0, 0, 1238, 482, 483, 484, 0, 680, 485, 681,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 1239, 497, 1240,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 1241, 553, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 0, 580, 581, 563, 564, 582, 583, 1242,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 693, 694, 695, 696, 0,
	627, 0, 619, 620, 621, 697, 622, 698, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 699, 700, 701, 0, 642, 641, 643, 644,
	702, 645, 646, 0, 0, 0, 0, 647, 648, 703,
	649, 650, 651, 1546, 1545, 0, 0, 0, 0, 1543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 652, 0, 0, 0, 0,
	291, 292, 1226, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 0, 657, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 658, 659,
	660, 0, 308, 309, 661, 0, 1510, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1227, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 662, 663, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 0,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1228, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 670, 0, 671,
	394, 0, 395, 396, 397, 398, 399, 672, 673, 674,
	486, 1230, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 1229, 410,
	675, 676, 0, 677, 0, 411, 412, 1231, 678, 1232,
	413, 414, 415, 1233, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	679, 1234, 427, 428, 1235, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1236, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 1237, 480, 468, 0, 0, 1238, 482, 483,
	484, 0, 680, 485, 681, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 1239, 497, 1240, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 1241,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 0, 580, 581,
	563, 564, 582, 583, 1242, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 0, 608, 609, 0, 605, 596, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	693, 694, 695, 696, 0, 627, 0, 619, 620, 621,
	697, 622, 698, 0, 623, 624, 625, 626, 0, 628,
	629, 0, 0, 630, 631, 632, 634, 635, 633, 636,
	0, 637, 0, 0, 638, 639, 640, 699, 700, 701,
	0, 642, 641, 643, 644, 702, 645, 646, 1546, 1545,
	0, 0, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	652, 0, 0, 0, 0, 291, 292, 1226, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 0, 657, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 658, 659, 660, 0, 308, 309, 661,
	0, 1510, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1227, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 0, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1228, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 670, 0, 671, 394, 0, 395, 396, 397,
	398, 399, 672, 673, 674, 486, 1230, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 1229, 410, 675, 676, 0, 677, 0,
	411, 412, 1231, 678, 1232, 413, 414, 415, 1233, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 679, 1234, 427, 428, 1235,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1236,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 1237, 480, 468,
	0, 0, 1238, 482, 483, 484, 0, 680, 485, 681,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 1239, 497, 1240,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 1241, 553, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 0, 580, 581, 563, 564, 582, 583, 1242,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 693, 694, 695, 696, 0,
	627, 0, 619, 620, 621, 697, 622, 698, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 699, 700, 701, 0, 642, 641, 643, 644,
	702, 645, 646, 1546, 0, 0, 0, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 652, 0, 0, 0, 0,
	291, 292, 1226, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 0, 657, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 658, 659,
	660, 0, 308, 309, 661, 0, 1510, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1227, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 662, 663, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 0,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1228, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 670, 0, 671,
	394, 0, 395, 396, 397, 398, 399, 672, 673, 674,
	486, 1230, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 1229, 410,
	675, 676, 0, 677, 0, 411, 412, 1231, 678, 1232,
	413, 414, 415, 1233, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	679, 1234, 427, 428, 1235, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1236, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 1237, 480, 468, 0, 0, 1238, 482, 483,
	484, 0, 680, 485, 681, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 1239, 497, 1240, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 1241,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 0, 580, 581,
	563, 564, 582, 583, 1242, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 0, 608, 609, 0, 605, 596, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	693, 694, 695, 696, 0, 627, 0, 619, 620, 621,
	697, 622, 698, 0, 623, 624, 625, 626, 0, 628,
	629, 0, 0, 630, 631, 632, 634, 635, 633, 636,
	0, 637, 0, 0, 638, 639, 640, 699, 700, 701,
	0, 642, 641, 643, 644, 702, 645, 646, 276, 0,
	0, 0, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	652, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 0, 657, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 658, 659, 660, 2959, 308, 309, 661,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 3699, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 2963, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 0, 3698, 0, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 0,
	378, 379, 380, 2962, 0, 0, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 670, 0, 671, 394, 0, 395, 396, 397,
	398, 399, 672, 673, 674, 486, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 3695, 407,
	408, 409, 0, 0, 410, 675, 676, 0, 677, 0,
	411, 3697, 0, 678, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 679, 0, 427, 428, 3694,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 0, 480, 468,
	0, 0, 0, 482, 483, 484, 0, 680, 485, 681,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 0, 497, 0,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 2961,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 0, 553, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 0, 580, 581, 563, 564, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 693, 694, 695, 696, 0,
	627, 0, 619, 620, 621, 697, 622, 698, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 3696, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 699, 700, 701, 0, 642, 641, 643, 644,
	702, 645, 646, 276, 0, 0, 0, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 652, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 0, 657, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 658, 659,
	660, 2959, 308, 309, 661, 0, 0, 2953, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 2955, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 662, 663, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 2963, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 0, 378, 379, 380, 2962, 0,
	0, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 670, 0, 671,
	394, 0, 395, 396, 397, 398, 399, 2952, 673, 674,
	486, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	675, 676, 0, 677, 0, 411, 412, 0, 678, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	679, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 0, 480, 468, 0, 0, 0, 482, 483,
	484, 0, 680, 485, 681, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 0, 497, 0, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 2961, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 0,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 0, 580, 581,
	563, 564, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 0, 608, 609, 0, 605, 596, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	693, 694, 695, 696, 0, 627, 0, 619, 620, 621,
	697, 622, 698, 0, 623, 624, 625, 626, 0, 628,
	629, 0, 2960, 630, 631, 632, 634, 635, 633, 636,
	0, 637, 0, 0, 638, 639, 640, 699, 700, 701,
	0, 642, 641, 643, 644, 702, 645, 646, 1796, 0,
	276, 0, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 1795, 289, 290, 0, 0, 0,
	0, 0, 652, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 653, 654, 0, 299,
	655, 300, 656, 0, 657, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 658, 659, 660, 0, 308,
	309, 661, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 1794, 339, 0, 340,
	342, 662, 663, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 664, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 665, 666, 373, 0, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 667, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 668, 669, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 670, 0, 671, 394, 0, 395,
	396, 397, 398, 399, 672, 673, 674, 486, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 0, 410, 675, 676, 0,
	677, 0, 411, 412, 0, 678, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 679, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 0,
	480, 468, 0, 281, 0, 482, 483, 484, 0, 680,
	485, 681, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 0,
	497, 0, 683, 498, 499, 491, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 686, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 688, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 0, 553, 554, 555,
	556, 557, 689, 558, 0, 559, 560, 566, 567, 568,
	1797, 562, 569, 570, 571, 572, 573, 0, 1793, 576,
	574, 577, 578, 579, 0, 580, 581, 563, 564, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 690,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 691, 599, 600, 601, 602, 692, 606, 607,
	0, 608, 609, 0, 605, 596, 1791, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 693, 694, 695,
	696, 0, 627, 0, 619, 620, 621, 697, 622, 698,
	0, 623, 624, 625, 626, 0, 628, 629, 0, 0,
	630, 631, 632, 634, 635, 633, 636, 0, 637, 0,
	0, 638, 639, 640, 699, 700, 701, 0, 1792, 641,
	643, 644, 702, 645, 646, 1514, 0, 276, 0, 647,
	648, 703, 649, 650, 651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 1516, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	281, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 1276, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 1511, 0, 276, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 1513, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 281, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 1276, 492, 493, 494, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 1417,
	0, 276, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 1419, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 281, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 1276, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 736, 0, 276, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 735,
	287, 288, 724, 289, 290, 0, 0, 0, 0, 0,
	652, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 0, 657, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 658, 659, 660, 0, 308, 309, 661,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 727, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	733, 393, 670, 0, 671, 394, 0, 395, 396, 397,
	398, 399, 672, 673, 674, 486, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 675, 676, 0, 677, 0,
	411, 412, 0, 678, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 679, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 0, 480, 468,
	0, 0, 0, 482, 483, 484, 0, 680, 485, 681,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 0, 497, 0,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 0, 553, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 729, 575, 576, 574, 577,
	578, 579, 0, 580, 581, 563, 564, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 693, 694, 695, 696, 0,
	627, 0, 619, 620, 621, 697, 622, 698, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 699, 700, 701, 0, 642, 641, 643, 644,
	702, 645, 646, 723, 0, 276, 0, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 724,
	289, 290, 0, 0, 0, 0, 0, 652, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	658, 659, 660, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 727, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 728, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 672,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 0, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 553, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 729, 575, 576, 574, 577, 578, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	276, 0, 0, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 724, 289, 290, 0, 0, 0,
	0, 0, 652, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 653, 654, 0, 299,
	655, 300, 656, 0, 657, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 658, 659, 660, 0, 308,
	309, 661, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 727, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 662, 663, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 664, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 665, 666, 373, 0, 0, 0, 0,
	0, 0, 0, 374, 375, 376, 667, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 668, 669, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 728, 393, 670, 0, 671, 394, 0, 395,
	396, 397, 398, 399, 672, 673, 674, 486, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 675, 676, 0,
	677, 0, 411, 412, 0, 678, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 679, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 0,
	480, 468, 0, 0, 0, 482, 483, 484, 0, 680,
	485, 681, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 0,
	497, 0, 683, 498, 499, 491, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 686, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 688, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 0, 553, 554, 555,
	556, 557, 689, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 729, 575, 576,
	574, 577, 578, 579, 0, 580, 581, 563, 564, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 690,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 691, 599, 600, 601, 602, 692, 606, 607,
	0, 608, 609, 0, 605, 596, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 693, 694, 695,
	696, 0, 627, 0, 619, 620, 621, 697, 622, 698,
	0, 623, 624, 625, 626, 0, 628, 629, 0, 0,
	630, 631, 632, 634, 635, 633, 636, 0, 637, 0,
	0, 638, 639, 640, 699, 700, 701, 0, 642, 641,
	643, 644, 702, 645, 646, 276, 0, 0, 0, 647,
	648, 703, 649, 650, 651, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 724,
	289, 290, 0, 0, 0, 0, 0, 652, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	658, 659, 660, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 727, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 4090, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 672,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 0, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 553, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 729, 575, 576, 574, 577, 578, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	276, 0, 0, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 652, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 653, 654, 0, 299,
	655, 300, 656, 0, 657, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 658, 659, 660, 0, 308,
	309, 661, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 662, 663, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 664, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 665, 666, 373, 0, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 667, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 668, 669, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 670, 0, 671, 394, 0, 395,
	396, 397, 398, 399, 672, 673, 674, 486, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 0, 410, 675, 676, 0,
	677, 0, 411, 412, 0, 678, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 679, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 0,
	480, 468, 0, 281, 0, 482, 483, 484, 0, 680,
	485, 681, 487, 488, 0, 0, 489, 0, 490, 0,
	1276, 492, 493, 494, 0, 0, 495, 496, 682, 0,
	497, 0, 683, 498, 499, 491, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 686, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 688, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 0, 553, 554, 555,
	556, 557, 689, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 0, 575, 576,
	574, 577, 578, 579, 0, 580, 581, 563, 564, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 690,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 691, 599, 600, 601, 602, 692, 606, 607,
	0, 608, 609, 0, 605, 596, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 693, 694, 695,
	696, 0, 627, 0, 619, 620, 621, 697, 622, 698,
	0, 623, 624, 625, 626, 0, 628, 629, 0, 0,
	630, 631, 632, 634, 635, 633, 636, 0, 637, 0,
	0, 638, 639, 640, 699, 700, 701, 0, 642, 641,
	643, 644, 702, 645, 646, 276, 0, 0, 0, 647,
	648, 703, 649, 650, 651, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 652, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	658, 659, 660, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 672,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 3600, 480, 468, 0, 281, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 553, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	3140, 0, 276, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 3139, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 281, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 276, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	281, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 2339, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 2402, 0, 276, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 281, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 2346,
	0, 276, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 2345, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 281, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 2332, 0, 276, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	652, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 0, 657, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 658, 659, 660, 0, 308, 309, 661,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 0, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 670, 0, 671, 394, 0, 395, 396, 397,
	398, 399, 2334, 673, 674, 486, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 0, 410, 675, 676, 0, 677, 0,
	411, 412, 0, 678, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 679, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 0, 480, 468,
	0, 281, 0, 482, 483, 484, 0, 680, 485, 681,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 0, 497, 0,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 0, 553, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 0, 580, 581, 563, 564, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 693, 694, 695, 696, 0,
	627, 0, 619, 620, 621, 697, 622, 698, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 699, 700, 701, 0, 642, 641, 643, 644,
	702, 645, 646, 276, 0, 0, 0, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 652, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 0, 657, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 658, 659,
	660, 0, 308, 309, 661, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 662, 663, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 0,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 670, 0, 671,
	394, 0, 395, 396, 397, 398, 399, 2296, 673, 674,
	486, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 0, 410,
	675, 676, 0, 677, 0, 411, 412, 0, 678, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	679, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 0, 480, 468, 0, 281, 0, 482, 483,
	484, 0, 680, 485, 681, 487, 488, 0, 0, 489,
	0, 490, 0, 1276, 492, 493, 494, 0, 0, 495,
	496, 682, 0, 497, 0, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 0,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 0, 580, 581,
	563, 564, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 0, 608, 609, 0, 605, 596, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	693, 694, 695, 696, 0, 627, 0, 619, 620, 621,
	697, 622, 698, 0, 623, 624, 625, 626, 0, 628,
	629, 0, 0, 630, 631, 632, 634, 635, 633, 636,
	0, 637, 0, 0, 638, 639, 640, 699, 700, 701,
	0, 642, 641, 643, 644, 702, 645, 646, 1636, 0,
	276, 0, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 652, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 653, 654, 0, 299,
	655, 300, 656, 0, 657, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 658, 659, 660, 0, 308,
	309, 661, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 662, 663, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 664, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 665, 666, 373, 0, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 667, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 668, 669, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 670, 0, 671, 394, 0, 395,
	396, 397, 398, 399, 1635, 673, 674, 486, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 0, 410, 675, 676, 0,
	677, 0, 411, 412, 0, 678, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 679, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 0,
	480, 468, 0, 281, 0, 482, 483, 484, 0, 680,
	485, 681, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 0,
	497, 0, 683, 498, 499, 491, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 686, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 688, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 0, 553, 554, 555,
	556, 557, 689, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 0, 575, 576,
	574, 577, 578, 579, 0, 580, 581, 563, 564, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 690,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 691, 599, 600, 601, 602, 692, 606, 607,
	0, 608, 609, 0, 605, 596, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 693, 694, 695,
	696, 0, 627, 0, 619, 620, 621, 697, 622, 698,
	0, 623, 624, 625, 626, 0, 628, 629, 0, 0,
	630, 631, 632, 634, 635, 633, 636, 0, 637, 0,
	0, 638, 639, 640, 699, 700, 701, 0, 642, 641,
	643, 644, 702, 645, 646, 1534, 0, 276, 0, 647,
	648, 703, 649, 650, 651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	281, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 1527, 0, 276, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 1529, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 281, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 1353,
	0, 276, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 1352, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 281, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 1343, 0, 276, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	652, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 0, 657, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 658, 659, 660, 0, 308, 309, 661,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 0, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 670, 0, 671, 394, 0, 395, 396, 397,
	398, 399, 1342, 673, 674, 486, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 0, 410, 675, 676, 0, 677, 0,
	411, 412, 0, 678, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 679, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 0, 480, 468,
	0, 281, 0, 482, 483, 484, 0, 680, 485, 681,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 0, 497, 0,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 0, 553, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 0, 580, 581, 563, 564, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 693, 694, 695, 696, 0,
	627, 0, 619, 620, 621, 697, 622, 698, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 699, 700, 701, 0, 642, 641, 643, 644,
	702, 645, 646, 1340, 0, 276, 0, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 652, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	658, 659, 660, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 1339,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 281, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 553, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	1335, 0, 276, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 1334, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 281, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 705, 0, 276,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 652, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 309,
	661, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 672, 673, 674, 486, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 0, 410, 675, 676, 0, 677,
	0, 411, 412, 0, 678, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 0, 480,
	468, 0, 281, 0, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 0, 497,
	0, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 0, 553, 554, 555, 556,
	557, 689, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 267, 0, 276, 0, 647, 648,
	703, 649, 650, 651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 652, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 0,
	657, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 658, 659, 660, 0, 308, 309, 661, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 662, 663, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 665,
	666, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	670, 0, 671, 394, 0, 395, 396, 397, 398, 399,
	672, 673, 674, 486, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 0, 410, 675, 676, 0, 677, 0, 411, 412,
	0, 678, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 679, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 0, 480, 468, 0, 281,
	0, 482, 483, 484, 0, 680, 485, 681, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 0, 497, 0, 683, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 686, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 0, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 0, 575, 576, 574, 577, 578, 579,
	0, 580, 581, 563, 564, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 692, 606, 607, 0, 608, 609, 0,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 693, 694, 695, 696, 0, 627, 0,
	619, 620, 621, 697, 622, 698, 0, 623, 624, 625,
	626, 0, 628, 629, 0, 0, 630, 631, 632, 634,
	635, 633, 636, 0, 637, 0, 0, 638, 639, 640,
	699, 700, 701, 0, 642, 641, 643, 644, 702, 645,
	646, 276, 0, 0, 0, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 672, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 281, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 276, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 652, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 0,
	657, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 658, 659, 660, 0, 308, 309, 661, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 727, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 662, 663, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 665,
	666, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 728, 393,
	670, 0, 671, 394, 0, 395, 396, 397, 398, 399,
	672, 673, 674, 486, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 675, 676, 0, 677, 0, 411, 412,
	0, 678, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 679, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 0, 480, 468, 0, 0,
	0, 482, 483, 484, 0, 680, 485, 681, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 0, 497, 0, 683, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 686, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 0, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 729, 575, 576, 574, 577, 578, 579,
	0, 580, 581, 563, 564, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 692, 606, 607, 0, 608, 609, 0,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 693, 694, 695, 696, 0, 627, 0,
	619, 620, 621, 697, 622, 698, 0, 623, 624, 625,
	626, 0, 628, 629, 0, 0, 630, 631, 632, 634,
	635, 633, 636, 0, 637, 0, 0, 638, 639, 640,
	699, 700, 701, 0, 642, 641, 643, 644, 702, 645,
	646, 276, 0, 0, 0, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 2442, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 672, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 281, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 276, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 652, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 0,
	657, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 658, 659, 660, 0, 308, 309, 661, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 2440, 339, 0, 340, 342, 662, 663, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 665,
	666, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	670, 0, 671, 394, 0, 395, 396, 397, 398, 399,
	672, 673, 674, 486, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 0, 410, 675, 676, 0, 677, 0, 411, 412,
	0, 678, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 679, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 0, 480, 468, 0, 281,
	0, 482, 483, 484, 0, 680, 485, 681, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 0, 497, 0, 683, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 686, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 0, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 0, 575, 576, 574, 577, 578, 579,
	0, 580, 581, 563, 564, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 692, 606, 607, 0, 608, 609, 0,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 693, 694, 695, 696, 0, 627, 0,
	619, 620, 621, 697, 622, 698, 0, 623, 624, 625,
	626, 0, 628, 629, 0, 0, 630, 631, 632, 634,
	635, 633, 636, 0, 637, 0, 0, 638, 639, 640,
	699, 700, 701, 0, 642, 641, 643, 644, 702, 645,
	646, 276, 0, 0, 0, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 2438, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 672, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 281, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 276, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 652, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 0,
	657, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 658, 659, 660, 0, 308, 309, 661, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 662, 663, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 665,
	666, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	670, 0, 671, 394, 0, 395, 396, 397, 398, 399,
	2352, 673, 674, 486, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 0, 410, 675, 676, 0, 677, 0, 411, 412,
	0, 678, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 679, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 0, 480, 468, 0, 281,
	0, 482, 483, 484, 0, 680, 485, 681, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 0, 497, 0, 683, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 686, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 0, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 0, 575, 576, 574, 577, 578, 579,
	0, 580, 581, 563, 564, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 692, 606, 607, 0, 608, 609, 0,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 693, 694, 695, 696, 0, 627, 0,
	619, 620, 621, 697, 622, 698, 0, 623, 624, 625,
	626, 0, 628, 629, 0, 0, 630, 631, 632, 634,
	635, 633, 636, 0, 637, 0, 0, 638, 639, 640,
	699, 700, 701, 0, 642, 641, 643, 644, 702, 645,
	646, 276, 0, 0, 0, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 2130, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 281, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 276, 0, 0, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 652, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 0,
	657, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 658, 659, 660, 0, 308, 309, 661, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 662, 663, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 665,
	666, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	670, 0, 671, 394, 0, 395, 396, 397, 398, 399,
	2124, 673, 674, 486, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 0, 410, 675, 676, 0, 677, 0, 411, 412,
	0, 678, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 679, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 0, 480, 468, 0, 281,
	0, 482, 483, 484, 0, 680, 485, 681, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 0, 497, 0, 683, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 686, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 0, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 0, 575, 576, 574, 577, 578, 579,
	0, 580, 581, 563, 564, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 692, 606, 607, 0, 608, 609, 0,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 693, 694, 695, 696, 0, 627, 0,
	619, 620, 621, 697, 622, 698, 0, 623, 624, 625,
	626, 0, 628, 629, 0, 0, 630, 631, 632, 634,
	635, 633, 636, 0, 637, 0, 0, 638, 639, 640,
	699, 700, 701, 0, 642, 641, 643, 644, 702, 645,
	646, 917, 0, 276, 0, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 652, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 0, 657, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 658, 659,
	660, 0, 308, 309, 661, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 662, 663, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 670, 0, 671,
	394, 0, 395, 396, 397, 398, 399, 672, 673, 674,
	486, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	675, 676, 0, 677, 916, 411, 412, 0, 678, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	679, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 0, 480, 468, 0, 0, 0, 482, 483,
	484, 0, 680, 485, 681, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 0, 497, 0, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 0,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 0, 580, 581,
	563, 564, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 0, 608, 609, 0, 605, 596, 915,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	693, 694, 695, 696, 0, 627, 0, 619, 620, 621,
	697, 622, 698, 0, 623, 624, 625, 626, 0, 628,
	629, 0, 0, 630, 631, 632, 634, 635, 633, 636,
	0, 637, 0, 0, 638, 639, 640, 699, 700, 701,
	0, 642, 641, 643, 644, 702, 645, 646, 276, 0,
	0, 0, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	652, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 0, 657, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 658, 659, 660, 0, 308, 309, 661,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 0, 3698, 0, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 670, 0, 671, 394, 0, 395, 396, 397,
	398, 399, 672, 673, 674, 486, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 675, 676, 0, 677, 0,
	411, 412, 0, 678, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 679, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 0, 480, 468,
	0, 0, 0, 482, 483, 484, 0, 680, 485, 681,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 0, 497, 0,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 4409,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 0, 553, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 0, 580, 581, 563, 564, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 693, 694, 695, 696, 0,
	627, 0, 619, 620, 621, 697, 622, 698, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 699, 700, 701, 0, 642, 641, 643, 644,
	702, 645, 646, 1381, 0, 276, 0, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 652, 0, 0,
	0, 0, 291, 292, 1384, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	658, 659, 1382, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 672,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 796, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 0, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 795, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 794, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 1385, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 792, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	1381, 0, 276, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 1384, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 1382,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 796, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 795,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 794, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 1385, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 792,
	694, 695, 696, 0, 627, 0, 619, 1383, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 714, 0, 276,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 713, 289, 290, 0, 0, 0, 0,
	0, 652, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 309,
	661, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 672, 673, 674, 486, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 675, 676, 0, 677,
	0, 411, 412, 0, 678, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 0, 480,
	468, 0, 0, 0, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 0, 497,
	0, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 712, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 0, 553, 554, 555, 556,
	557, 689, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 276, 3182, 0, 0, 647, 648,
	703, 649, 650, 651, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 0, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 276,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 652, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 309,
	661, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 672, 673, 674, 486, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 675, 676, 0, 677,
	0, 411, 412, 0, 678, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 0, 480,
	468, 0, 0, 0, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 0, 497,
	0, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 518, 519,
	4705, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 0, 553, 554, 555, 556,
	557, 689, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 276, 3541, 0, 0, 647, 648,
	703, 649, 650, 651, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 0, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 276,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 652, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 309,
	661, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 672, 673, 674, 486, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 675, 676, 0, 677,
	0, 411, 412, 0, 678, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 0, 480,
	468, 0, 0, 0, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 0, 497,
	0, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 518, 519,
	4298, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 0, 553, 554, 555, 556,
	557, 689, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 276, 0, 0, 0, 647, 648,
	703, 649, 650, 651, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 4040, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 0, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 276,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 652, 0, 2839, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 309,
	661, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 672, 673, 674, 486, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 675, 676, 0, 677,
	0, 411, 412, 0, 678, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 0, 480,
	468, 0, 0, 0, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 0, 497,
	0, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 0, 553, 554, 555, 556,
	557, 689, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 276, 3182, 0, 0, 647, 648,
	703, 649, 650, 651, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 0, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 3179, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 276,
	0, 0, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 652, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 309,
	661, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 672, 673, 674, 486, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 675, 676, 0, 677,
	0, 411, 412, 0, 678, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 0, 480,
	468, 0, 0, 0, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 0, 497,
	0, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 518, 519,
	2249, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 0, 795, 554, 555, 556,
	557, 689, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 794, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 792, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 276, 0, 0, 0, 647, 648,
	703, 649, 650, 651, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 2412, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 0, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 2400,
	0, 276, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 672, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 0, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 1692, 0, 276, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	652, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 0, 657, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 658, 659, 660, 0, 308, 309, 661,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 670, 0, 671, 394, 0, 395, 396, 397,
	398, 399, 672, 673, 674, 486, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 675, 676, 0, 677, 0,
	411, 412, 0, 678, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 679, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 0, 480, 468,
	0, 0, 0, 482, 483, 484, 0, 680, 485, 681,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 0, 497, 0,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 0, 553, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 0, 580, 581, 563, 564, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 693, 694, 695, 696, 0,
	627, 0, 619, 620, 621, 697, 622, 698, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 699, 700, 701, 0, 642, 641, 643, 644,
	702, 645, 646, 1684, 0, 276, 0, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 652, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	658, 659, 660, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 672,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 0, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 553, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	786, 0, 276, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 782, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	787, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 796, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 795,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 794, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 1669, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 792,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 1642, 0, 276,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 652, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 309,
	661, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 1641, 673, 674, 486, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 675, 676, 0, 677,
	0, 411, 412, 0, 678, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 0, 480,
	468, 0, 0, 0, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 0, 497,
	0, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 0, 553, 554, 555, 556,
	557, 689, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 569, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 578, 579, 0, 580, 581, 563, 564, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 693, 694, 695, 696,
	0, 627, 0, 619, 620, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 1626, 0, 276, 0, 647, 648,
	703, 649, 650, 651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 652, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 0,
	657, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 658, 659, 660, 0, 308, 309, 661, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 662, 663, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 665,
	666, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	670, 0, 671, 394, 0, 395, 396, 397, 398, 399,
	1624, 673, 674, 486, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 675, 676, 0, 677, 0, 411, 412,
	0, 678, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 679, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 0, 480, 468, 0, 0,
	0, 482, 483, 484, 0, 680, 485, 681, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 0, 497, 0, 683, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 686, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 0, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 566, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 0, 575, 576, 574, 577, 578, 579,
	0, 580, 581, 563, 564, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 692, 606, 607, 0, 608, 609, 0,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 693, 694, 695, 696, 0, 627, 0,
	619, 620, 621, 697, 622, 698, 0, 623, 624, 625,
	626, 0, 628, 629, 0, 0, 630, 631, 632, 634,
	635, 633, 636, 0, 637, 0, 0, 638, 639, 640,
	699, 700, 701, 0, 642, 641, 643, 644, 702, 645,
	646, 1619, 0, 276, 0, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 652, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 0, 657, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 658, 659,
	660, 0, 308, 309, 661, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 662, 663, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 670, 0, 671,
	394, 0, 395, 396, 397, 398, 399, 672, 673, 674,
	486, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	675, 676, 0, 677, 0, 411, 412, 0, 678, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	679, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 0, 480, 468, 0, 0, 0, 482, 483,
	484, 0, 680, 485, 681, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 0, 497, 0, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 0,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 0, 580, 581,
	563, 564, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 0, 608, 609, 0, 605, 596, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	693, 694, 695, 696, 0, 627, 0, 619, 620, 621,
	697, 622, 698, 0, 623, 624, 625, 626, 0, 628,
	629, 0, 0, 630, 631, 632, 634, 635, 633, 636,
	0, 637, 0, 0, 638, 639, 640, 699, 700, 701,
	0, 642, 641, 643, 644, 702, 645, 646, 1596, 0,
	276, 0, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 652, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 653, 654, 0, 299,
	655, 300, 656, 0, 657, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 658, 659, 660, 0, 308,
	309, 661, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 662, 663, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 664, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 665, 666, 373, 0, 0, 0, 0,
	0, 0, 0, 374, 375, 376, 667, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 668, 669, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 670, 0, 671, 394, 0, 395,
	396, 397, 398, 399, 1594, 673, 674, 486, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 675, 676, 0,
	677, 0, 411, 412, 0, 678, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 679, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 0,
	480, 468, 0, 0, 0, 482, 483, 484, 0, 680,
	485, 681, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 0,
	497, 0, 683, 498, 499, 491, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 686, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 688, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 0, 553, 554, 555,
	556, 557, 689, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 0, 575, 576,
	574, 577, 578, 579, 0, 580, 581, 563, 564, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 690,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 691, 599, 600, 601, 602, 692, 606, 607,
	0, 608, 609, 0, 605, 596, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 693, 694, 695,
	696, 0, 627, 0, 619, 620, 621, 697, 622, 698,
	0, 623, 624, 625, 626, 0, 628, 629, 0, 0,
	630, 631, 632, 634, 635, 633, 636, 0, 637, 0,
	0, 638, 639, 640, 699, 700, 701, 0, 642, 641,
	643, 644, 702, 645, 646, 1589, 0, 276, 0, 647,
	648, 703, 649, 650, 651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 1551, 0, 276, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	653, 654, 0, 299, 655, 300, 656, 0, 657, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 658,
	659, 660, 0, 308, 309, 661, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 662, 663, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 664, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 665, 666, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	667, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 668, 669, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 670, 0,
	671, 394, 0, 395, 396, 397, 398, 399, 672, 673,
	674, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 675, 676, 0, 677, 0, 411, 412, 0, 678,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 679, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 0, 0, 482,
	483, 484, 0, 680, 485, 681, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 682, 0, 497, 0, 683, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 684, 511, 512, 513, 685, 514, 515, 516,
	686, 517, 687, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 688, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 689, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 0, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 690, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 691, 599, 600, 601,
	602, 692, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 693, 694, 695, 696, 0, 627, 0, 619, 620,
	621, 697, 622, 698, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 699, 700,
	701, 0, 642, 641, 643, 644, 702, 645, 646, 1519,
	0, 276, 0, 647, 648, 703, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 653, 654, 0,
	299, 655, 300, 656, 0, 657, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 658, 659, 660, 0,
	308, 309, 661, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 662, 663, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 664, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 665, 666, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 667, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 668, 669, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 670, 0, 671, 394, 0,
	395, 396, 397, 398, 399, 672, 673, 674, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 675, 676,
	0, 677, 0, 411, 412, 0, 678, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 679, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 0, 0, 482, 483, 484, 0,
	680, 485, 681, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 682,
	0, 497, 0, 683, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 684,
	511, 512, 513, 685, 514, 515, 516, 686, 517, 687,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 688, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 689, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 0, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	690, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 691, 599, 600, 601, 602, 692, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 693, 694,
	695, 696, 0, 627, 0, 619, 620, 621, 697, 622,
	698, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 699, 700, 701, 0, 642,
	641, 643, 644, 702, 645, 646, 1387, 0, 276, 0,
	647, 648, 703, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	652, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 653, 654, 0, 299, 655, 300,
	656, 0, 657, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 658, 659, 660, 0, 308, 309, 661,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 662,
	663, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 664,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 665, 666, 373, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 376, 667, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 668,
	669, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 670, 0, 671, 394, 0, 395, 396, 397,
	398, 399, 672, 673, 674, 486, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 675, 676, 0, 677, 0,
	411, 412, 0, 678, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 679, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 0, 480, 468,
	0, 0, 0, 482, 483, 484, 0, 680, 485, 681,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 682, 0, 497, 0,
	683, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 684, 511, 512, 513,
	685, 514, 515, 516, 686, 517, 687, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	688, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 0, 795, 554, 555, 556, 557,
	689, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	794, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 0, 580, 581, 563, 564, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 690, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	691, 599, 600, 601, 602, 692, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 792, 694, 695, 696, 0,
	627, 0, 619, 620, 621, 697, 622, 698, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 699, 700, 701, 0, 642, 641, 643, 644,
	702, 645, 646, 1358, 0, 276, 0, 647, 648, 703,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 652, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 653, 654, 0, 299, 655, 300, 656, 0, 657,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	658, 659, 660, 0, 308, 309, 661, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 662, 663, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 664, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 665, 666,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 667, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 668, 669, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 670,
	0, 671, 394, 0, 395, 396, 397, 398, 399, 1357,
	673, 674, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 675, 676, 0, 677, 0, 411, 412, 0,
	678, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 679, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 0, 0,
	482, 483, 484, 0, 680, 485, 681, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 682, 0, 497, 0, 683, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 684, 511, 512, 513, 685, 514, 515,
	516, 686, 517, 687, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 688, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 553, 554, 555, 556, 557, 689, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 0,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 690, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 691, 599, 600,
	601, 602, 692, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 693, 694, 695, 696, 0, 627, 0, 619,
	620, 621, 697, 622, 698, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 699,
	700, 701, 0, 642, 641, 643, 644, 702, 645, 646,
	1349, 0, 276, 0, 647, 648, 703, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 1348, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 276, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 1301, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 276, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 801, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 786, 0, 276,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 652, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 653, 654, 0, 299, 655,
	300, 656, 0, 657, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 658, 659, 660, 0, 308, 782,
	661, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 781,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	662, 663, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	664, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 665, 666, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 667, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	668, 669, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 670, 0, 671, 394, 0, 395, 396,
	397, 398, 399, 672, 673, 674, 486, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 675, 676, 0, 677,
	0, 411, 412, 0, 678, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 679, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 787, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 796,
	0, 463, 464, 465, 466, 467, 474, 476, 477, 472,
	473, 475, 478, 479, 481, 469, 470, 471, 0, 480,
	468, 0, 0, 0, 482, 483, 484, 0, 680, 485,
	681, 487, 488, 0, 0, 489, 0, 490, 0, 0,
	492, 493, 494, 0, 0, 495, 496, 682, 0, 497,
	0, 683, 498, 499, 491, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 509, 510, 684, 511, 512,
	513, 685, 514, 515, 516, 686, 517, 687, 518, 519,
	0, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	528, 688, 529, 530, 532, 531, 533, 0, 534, 0,
	535, 536, 537, 0, 0, 0, 0, 0, 538, 540,
	0, 541, 542, 543, 544, 539, 545, 546, 547, 548,
	549, 0, 550, 551, 552, 0, 795, 554, 555, 556,
	557, 783, 558, 0, 559, 560, 566, 567, 568, 561,
	562, 794, 570, 571, 572, 573, 0, 575, 576, 574,
	577, 784, 579, 0, 580, 581, 563, 564, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 690, 0,
	591, 0, 592, 593, 594, 595, 597, 565, 598, 603,
	604, 691, 599, 600, 601, 602, 692, 606, 607, 0,
	608, 609, 0, 605, 596, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 618, 792, 694, 695, 696,
	0, 627, 0, 619, 788, 621, 697, 622, 698, 0,
	623, 624, 625, 626, 0, 628, 629, 0, 0, 630,
	631, 632, 634, 635, 633, 636, 0, 637, 0, 0,
	638, 639, 640, 699, 700, 701, 0, 642, 641, 643,
	644, 702, 645, 646, 775, 0, 276, 0, 647, 648,
	703, 649, 650, 651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 652, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 653, 654, 0, 299, 655, 300, 656, 0,
	657, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 658, 659, 660, 0, 308, 309, 661, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 662, 663, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 664, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 665,
	666, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 667, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 668, 669, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	670, 0, 671, 394, 0, 395, 396, 397, 398, 399,
	672, 673, 674, 486, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 675, 676, 0, 677, 0, 411, 412,
	0, 678, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 679, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 467, 474, 476, 477, 472, 473, 475, 478,
	479, 481, 469, 470, 471, 0, 480, 468, 0, 0,
	0, 482, 483, 484, 0, 680, 485, 681, 487, 488,
	0, 0, 489, 0, 490, 0, 0, 492, 493, 494,
	0, 0, 495, 496, 682, 0, 497, 0, 683, 498,
	499, 491, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 509, 510, 684, 511, 512, 513, 685, 514,
	515, 516, 686, 517, 687, 518, 519, 0, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 528, 688, 529,
	530, 532, 531, 533, 0, 534, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 538, 540, 0, 541, 542,
	543, 544, 539, 545, 546, 547, 548, 549, 0, 550,
	551, 552, 0, 553, 554, 555, 556, 557, 689, 558,
	0, 559, 560, 776, 567, 568, 561, 562, 569, 570,
	571, 572, 573, 0, 575, 576, 574, 577, 578, 579,
	0, 580, 581, 563, 564, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 690, 0, 591, 0, 592,
	593, 594, 595, 597, 565, 598, 603, 604, 691, 599,
	600, 601, 602, 692, 606, 607, 0, 608, 609, 0,
	605, 596, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 618, 693, 694, 695, 696, 0, 627, 0,
	619, 620, 621, 697, 622, 698, 0, 623, 624, 625,
	626, 0, 628, 629, 0, 0, 630, 631, 632, 634,
	635, 633, 636, 0, 637, 0, 0, 638, 639, 640,
	699, 700, 701, 0, 642, 641, 643, 644, 702, 645,
	646, 738, 0, 276, 0, 647, 648, 703, 649, 650,
	651, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 652, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 653,
	654, 0, 299, 655, 300, 656, 0, 657, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 658, 659,
	660, 0, 308, 309, 661, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 662, 663, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 664, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 665, 666, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 667,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 668, 669, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 670, 0, 671,
	394, 0, 395, 396, 397, 398, 399, 672, 673, 674,
	486, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	675, 676, 0, 677, 0, 411, 412, 0, 678, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	679, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 467,
	474, 476, 477, 472, 473, 475, 478, 479, 481, 469,
	470, 471, 0, 480, 468, 0, 0, 0, 482, 483,
	484, 0, 680, 485, 681, 487, 488, 0, 0, 489,
	0, 490, 0, 0, 492, 493, 494, 0, 0, 495,
	496, 682, 0, 497, 0, 683, 498, 499, 491, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 509,
	510, 684, 511, 512, 513, 685, 514, 515, 516, 686,
	517, 687, 518, 519, 0, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 528, 688, 529, 530, 532, 531,
	533, 0, 534, 0, 535, 536, 537, 0, 0, 0,
	0, 0, 538, 540, 0, 541, 542, 543, 544, 539,
	545, 546, 547, 548, 549, 0, 550, 551, 552, 0,
	553, 554, 555, 556, 557, 689, 558, 0, 559, 560,
	566, 567, 568, 561, 562, 569, 570, 571, 572, 573,
	0, 575, 576, 574, 577, 578, 579, 0, 580, 581,
	563, 564, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 690, 0, 591, 0, 592, 593, 594, 595,
	597, 565, 598, 603, 604, 691, 599, 600, 601, 602,
	692, 606, 607, 0, 608, 609, 0, 605, 596, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 618,
	693, 694, 695, 696, 0, 627, 0, 619, 620, 621,
	697, 622, 698, 0, 623, 624, 625, 626, 0, 628,
	629, 0, 0, 630, 631, 632, 634, 635, 633, 636,
	0, 637, 0, 0, 638, 639, 640, 699, 700, 701,
	0, 642, 641, 643, 644, 702, 645, 646, 731, 0,
	276, 0, 647, 648, 703, 649, 650, 651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 652, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 653, 654, 0, 299,
	655, 300, 656, 0, 657, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 658, 659, 660, 0, 308,
	309, 661, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 662, 663, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 664, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 665, 666, 373, 0, 0, 0, 0,
	0, 0, 0, 374, 375, 376, 667, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 668, 669, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 670, 0, 671, 394, 0, 395,
	396, 397, 398, 399, 672, 673, 674, 486, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 675, 676, 0,
	677, 0, 411, 412, 0, 678, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 679, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 467, 474, 476, 477,
	472, 473, 475, 478, 479, 481, 469, 470, 471, 0,
	480, 468, 0, 0, 0, 482, 483, 484, 0, 680,
	485, 681, 487, 488, 0, 0, 489, 0, 490, 0,
	0, 492, 493, 494, 0, 0, 495, 496, 682, 0,
	497, 0, 683, 498, 499, 491, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 509, 510, 684, 511,
	512, 513, 685, 514, 515, 516, 686, 517, 687, 518,
	519, 0, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 528, 688, 529, 530, 532, 531, 533, 0, 534,
	0, 535, 536, 537, 0, 0, 0, 0, 0, 538,
	540, 0, 541, 542, 543, 544, 539, 545, 546, 547,
	548, 549, 0, 550, 551, 552, 0, 553, 554, 555,
	556, 557, 689, 558, 0, 559, 560, 566, 567, 568,
	561, 562, 569, 570, 571, 572, 573, 0, 575, 576,
	574, 577, 578, 579, 0, 580, 581, 563, 564, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 690,
	0, 591, 0, 592, 593, 594, 595, 597, 565, 598,
	603, 604, 691, 599, 600, 601, 602, 692, 606, 607,
	0, 608, 609, 0, 605, 596, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 618, 693, 694, 695,
	696, 0, 627, 0, 619, 620, 621, 697, 622, 698,
	0, 623, 624, 625, 626, 0, 628, 629, 0, 0,
	630, 631, 632, 634, 635, 633, 636, 0, 637, 0,
	0, 638, 639, 640, 699, 700, 701, 0, 642, 641,
	643, 644, 702, 645, 646, 709, 0, 276, 0, 647,
	648, 703, 649, 650, 651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 276, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 276, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 3727, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 276, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 795,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 794, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 792,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 276, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 3640, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 276, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 3616, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 276, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 3613, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 276, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 3565, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 276, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 3563, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 276, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 3551, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 276, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 3548, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 276, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 3150, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 276, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 776, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 276, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 2370, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 0, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 276, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 394, 0, 395, 396, 397, 398,
	399, 1320, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	558, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 276, 0, 0, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 653, 654,
	0, 299, 655, 300, 656, 0, 657, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 658, 659, 660,
	0, 308, 309, 661, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 662, 663, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 664, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 665, 666, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 667, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 668, 669, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 670, 0, 671, 394,
	0, 395, 396, 397, 398, 399, 672, 673, 674, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 675,
	676, 0, 677, 0, 411, 412, 0, 678, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 679,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 680, 485, 681, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	682, 0, 497, 0, 683, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	684, 511, 512, 513, 685, 514, 515, 516, 686, 517,
	687, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 688, 529, 530, 1249, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 689, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 0, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 690, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 691, 599, 600, 601, 602, 692,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 693,
	694, 695, 696, 0, 627, 0, 619, 620, 621, 697,
	622, 698, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 699, 700, 701, 0,
	642, 641, 643, 644, 702, 645, 646, 276, 0, 0,
	0, 647, 648, 703, 649, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 653, 654, 0, 299, 655, 300, 656,
	0, 657, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 658, 659, 660, 0, 308, 309, 661, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 662, 663,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 664, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	665, 666, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 667, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 668, 669,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 670, 0, 671, 0, 0, 395, 396, 397, 398,
	399, 672, 673, 674, 486, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 675, 676, 0, 677, 0, 411,
	412, 0, 678, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 679, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 467, 474, 476, 477, 472, 473, 475,
	478, 479, 481, 469, 470, 471, 0, 480, 468, 0,
	0, 0, 482, 483, 484, 0, 680, 485, 681, 487,
	488, 0, 0, 489, 0, 490, 0, 0, 492, 493,
	494, 0, 0, 495, 496, 682, 0, 497, 0, 683,
	498, 499, 491, 500, 501, 0, 503, 504, 505, 506,
	507, 508, 0, 509, 510, 684, 511, 512, 513, 685,
	514, 515, 516, 686, 517, 687, 518, 519, 0, 520,
	521, 0, 522, 523, 524, 525, 0, 527, 528, 688,
	529, 530, 532, 531, 533, 0, 534, 0, 535, 536,
	537, 0, 0, 0, 0, 0, 538, 540, 0, 541,
	542, 543, 544, 539, 545, 546, 547, 548, 549, 0,
	550, 551, 552, 0, 553, 554, 555, 556, 557, 689,
	0, 0, 559, 560, 566, 567, 568, 561, 562, 569,
	570, 571, 572, 573, 0, 575, 576, 574, 577, 578,
	579, 0, 580, 581, 563, 564, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 690, 0, 591, 0,
	592, 593, 594, 595, 597, 565, 598, 603, 604, 691,
	599, 600, 601, 602, 692, 606, 607, 0, 608, 609,
	0, 605, 596, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 618, 693, 694, 695, 696, 0, 627,
	0, 619, 620, 621, 697, 622, 698, 0, 623, 624,
	625, 626, 0, 628, 629, 0, 0, 630, 631, 632,
	634, 635, 633, 636, 0, 637, 0, 0, 638, 639,
	640, 699, 700, 701, 0, 642, 641, 643, 644, 702,
	645, 646, 1632, 0, 1365, 0, 647, 648, 703, 649,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 0, 300, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 0,
	0, 0, 0, 308, 309, 0, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 1367, 335, 336, 337,
	338, 339, 0, 340, 342, 0, 0, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 0, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 0, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	0, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 0, 0, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 0, 0,
	0, 394, 0, 395, 396, 397, 398, 399, 1631, 0,
	0, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 0, 0, 0, 0, 0, 411, 412, 0, 0,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 0, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 0, 0, 482,
	483, 484, 0, 0, 485, 0, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 0, 0, 497, 0, 0, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 0, 514, 515, 516,
	0, 517, 0, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 0, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 0, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 1368, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 0, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 0, 599, 600, 601,
	602, 0, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 0, 0, 0, 0, 0, 627, 0, 619, 620,
	621, 0, 622, 0, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 0, 0,
	0, 0, 642, 641, 643, 644, 0, 645, 646, 1554,
	0, 1365, 0, 647, 648, 0, 649, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 0, 300, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 0, 0, 0, 0,
	308, 309, 0, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 1367, 335, 336, 337, 338, 339, 0,
	340, 342, 0, 0, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 0, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 0, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 0, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 0, 0, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 0, 0, 0, 394, 0,
	395, 396, 397, 398, 399, 1553, 0, 0, 486, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 0, 0,
	0, 0, 0, 411, 412, 0, 0, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 0, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 467, 474, 476,
	477, 472, 473, 475, 478, 479, 481, 469, 470, 471,
	0, 480, 468, 0, 0, 0, 482, 483, 484, 0,
	0, 485, 0, 487, 488, 0, 0, 489, 0, 490,
	0, 0, 492, 493, 494, 0, 0, 495, 496, 0,
	0, 497, 0, 0, 498, 499, 491, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 509, 510, 0,
	511, 512, 513, 0, 514, 515, 516, 0, 517, 0,
	518, 519, 0, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 528, 0, 529, 530, 532, 531, 533, 0,
	534, 0, 535, 536, 537, 0, 0, 0, 0, 0,
	538, 540, 0, 541, 542, 543, 544, 539, 545, 546,
	547, 548, 549, 0, 550, 551, 552, 0, 553, 554,
	555, 556, 557, 0, 558, 0, 559, 560, 566, 567,
	568, 561, 562, 569, 570, 571, 572, 573, 0, 575,
	576, 574, 577, 578, 579, 1368, 580, 581, 563, 564,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	0, 0, 591, 0, 592, 593, 594, 595, 597, 565,
	598, 603, 604, 0, 599, 600, 601, 602, 0, 606,
	607, 0, 608, 609, 0, 605, 596, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 618, 0, 0,
	0, 0, 0, 627, 0, 619, 620, 621, 0, 622,
	0, 0, 623, 624, 625, 626, 0, 628, 629, 0,
	0, 630, 631, 632, 634, 635, 633, 636, 0, 637,
	0, 0, 638, 639, 640, 0, 0, 0, 0, 642,
	641, 643, 644, 0, 645, 646, 1363, 0, 1365, 0,
	647, 648, 0, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 0, 300,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 0, 0, 0, 0, 308, 309, 0,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	1367, 335, 336, 337, 338, 339, 0, 340, 342, 0,
	0, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 0,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 0, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 376, 0, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 0,
	0, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 0, 0, 0, 394, 0, 395, 396, 397,
	398, 399, 1362, 0, 0, 486, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 0, 0, 0, 0, 0,
	411, 412, 0, 0, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 0, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 467, 474, 476, 477, 472, 473,
	475, 478, 479, 481, 469, 470, 471, 0, 480, 468,
	0, 0, 0, 482, 483, 484, 0, 0, 485, 0,
	487, 488, 0, 0, 489, 0, 490, 0, 0, 492,
	493, 494, 0, 0, 495, 496, 0, 0, 497, 0,
	0, 498, 499, 491, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 509, 510, 0, 511, 512, 513,
	0, 514, 515, 516, 0, 517, 0, 518, 519, 0,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 528,
	0, 529, 530, 532, 531, 533, 0, 534, 0, 535,
	536, 537, 0, 0, 0, 0, 0, 538, 540, 0,
	541, 542, 543, 544, 539, 545, 546, 547, 548, 549,
	0, 550, 551, 552, 0, 553, 554, 555, 556, 557,
	0, 558, 0, 559, 560, 566, 567, 568, 561, 562,
	569, 570, 571, 572, 573, 0, 575, 576, 574, 577,
	578, 579, 1368, 580, 581, 563, 564, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 0, 0, 591,
	0, 592, 593, 594, 595, 597, 565, 598, 603, 604,
	0, 599, 600, 601, 602, 0, 606, 607, 0, 608,
	609, 0, 605, 596, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 618, 0, 0, 0, 0, 0,
	627, 0, 619, 620, 621, 0, 622, 0, 0, 623,
	624, 625, 626, 0, 628, 629, 0, 0, 630, 631,
	632, 634, 635, 633, 636, 0, 637, 0, 0, 638,
	639, 640, 0, 0, 0, 0, 642, 641, 643, 644,
	0, 645, 646, 2144, 0, 1365, 0, 647, 648, 0,
	649, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 0, 300, 0, 0, 0,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	0, 0, 0, 0, 308, 309, 0, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 1367, 335, 336,
	337, 338, 339, 0, 340, 342, 0, 0, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 0, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 0, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 0, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 0, 0, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 0,
	0, 0, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 486, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 0, 0, 0, 0, 0, 411, 412, 0,
	0, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 0, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 467, 474, 476, 477, 472, 473, 475, 478, 479,
	481, 469, 470, 471, 0, 480, 468, 0, 0, 0,
	482, 483, 484, 0, 0, 485, 0, 487, 488, 0,
	0, 489, 0, 490, 0, 0, 492, 493, 494, 0,
	0, 495, 496, 0, 0, 497, 0, 0, 498, 499,
	491, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 509, 510, 0, 511, 512, 513, 0, 514, 515,
	516, 0, 517, 0, 518, 519, 0, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 528, 0, 529, 530,
	532, 531, 533, 0, 534, 0, 535, 536, 537, 0,
	0, 0, 0, 0, 538, 540, 0, 541, 542, 543,
	544, 539, 545, 546, 547, 548, 549, 0, 550, 551,
	552, 0, 553, 554, 555, 556, 557, 0, 558, 0,
	559, 560, 566, 567, 568, 561, 562, 569, 570, 571,
	572, 573, 0, 575, 576, 574, 577, 578, 579, 1368,
	580, 581, 563, 564, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 0, 0, 591, 0, 592, 593,
	594, 595, 597, 565, 598, 603, 604, 0, 599, 600,
	601, 602, 0, 606, 607, 0, 608, 609, 0, 605,
	596, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 618, 0, 0, 0, 0, 0, 627, 0, 619,
	620, 621, 0, 622, 0, 0, 623, 624, 625, 626,
	0, 628, 629, 0, 0, 630, 631, 632, 634, 635,
	633, 636, 0, 637, 0, 0, 638, 639, 640, 0,
	0, 0, 0, 642, 641, 643, 644, 0, 645, 646,
	2111, 0, 1365, 0, 647, 648, 0, 649, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 0, 300, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 0, 0, 0,
	0, 308, 309, 0, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 1367, 335, 336, 337, 338, 339,
	0, 340, 342, 0, 0, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 0, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 0, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 0, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 0, 0, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 0, 0, 0, 394,
	0, 395, 396, 397, 398, 399, 0, 0, 0, 486,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 0,
	0, 0, 0, 0, 411, 412, 0, 0, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 0,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 467, 474,
	476, 477, 472, 473, 475, 478, 479, 481, 469, 470,
	471, 0, 480, 468, 0, 0, 0, 482, 483, 484,
	0, 0, 485, 0, 487, 488, 0, 0, 489, 0,
	490, 0, 0, 492, 493, 494, 0, 0, 495, 496,
	0, 0, 497, 0, 0, 498, 499, 491, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 509, 510,
	0, 511, 512, 513, 0, 514, 515, 516, 0, 517,
	0, 518, 519, 0, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 528, 0, 529, 530, 532, 531, 533,
	0, 534, 0, 535, 536, 537, 0, 0, 0, 0,
	0, 538, 540, 0, 541, 542, 543, 544, 539, 545,
	546, 547, 548, 549, 0, 550, 551, 552, 0, 553,
	554, 555, 556, 557, 0, 558, 0, 559, 560, 566,
	567, 568, 561, 562, 569, 570, 571, 572, 573, 0,
	575, 576, 574, 577, 578, 579, 1368, 580, 581, 563,
	564, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 0, 0, 591, 0, 592, 593, 594, 595, 597,
	565, 598, 603, 604, 0, 599, 600, 601, 602, 0,
	606, 607, 0, 608, 609, 0, 605, 596, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 618, 0,
	0, 0, 0, 0, 627, 0, 619, 620, 621, 0,
	622, 0, 0, 623, 624, 625, 626, 0, 628, 629,
	0, 0, 630, 631, 632, 634, 635, 633, 636, 0,
	637, 0, 0, 638, 639, 640, 0, 0, 0, 0,
	642, 641, 643, 644, 1365, 645, 646, 0, 0, 0,
	0, 647, 648, 0, 649, 650, 651, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 0, 300, 0, 0, 0, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 0,
	0, 0, 0, 308, 309, 0, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 1367, 335, 336, 337,
	338, 339, 0, 340, 342, 0, 0, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 0, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 0, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	0, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 0, 0, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 0, 0,
	0, 394, 0, 395, 396, 397, 398, 399, 0, 0,
	0, 486, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 0, 0, 0, 0, 0, 411, 412, 0, 0,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 0, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	467, 474, 476, 477, 472, 473, 475, 478, 479, 481,
	469, 470, 471, 0, 480, 468, 0, 0, 0, 482,
	483, 484, 0, 0, 485, 0, 487, 488, 0, 0,
	489, 0, 490, 0, 0, 492, 493, 494, 0, 0,
	495, 496, 0, 0, 497, 0, 0, 498, 499, 491,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	509, 510, 0, 511, 512, 513, 0, 514, 515, 516,
	0, 517, 0, 518, 519, 0, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 528, 0, 529, 530, 532,
	531, 533, 0, 534, 0, 535, 536, 537, 0, 0,
	0, 0, 0, 538, 540, 0, 541, 542, 543, 544,
	539, 545, 546, 547, 548, 549, 0, 550, 551, 552,
	0, 553, 554, 555, 556, 557, 0, 558, 0, 559,
	560, 566, 567, 568, 561, 562, 569, 570, 571, 572,
	573, 0, 575, 576, 574, 577, 578, 579, 1368, 580,
	581, 563, 564, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 0, 0, 591, 0, 592, 593, 594,
	595, 597, 565, 598, 603, 604, 0, 599, 600, 601,
	602, 0, 606, 607, 0, 608, 609, 0, 605, 596,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	618, 0, 0, 0, 0, 0, 627, 0, 619, 620,
	621, 0, 622, 0, 0, 623, 624, 625, 626, 0,
	628, 629, 0, 0, 630, 631, 632, 634, 635, 633,
	636, 0, 637, 0, 0, 638, 639, 640, 0, 0,
	0, 0, 642, 641, 643, 644, 0, 645, 646, 0,
	0, 0, 0, 647, 648, 0, 649, 650, 651, 1845,
	1846, 0, 1878, 1879, 1880, 1889, 1890, 1891, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 1876, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 1845, 1846, 1895, 1878,
	1879, 1880, 1889, 1890, 1891, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1901, 0, 0, 1882, 1876,
	0, 0, 0, 0, 1847, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 1867, 1895, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 1901, 0, 0, 0, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 1871, 1872, 1873, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 1871,
	1872, 1873, 0, 0, 0, 0, 0, 0, 1853, 0,
	1886, 0, 0, 1896, 0, 0, 0, 0, 0, 0,
	1875, 1877, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1892, 0, 1893, 0,
	0, 0, 0, 0, 0, 1862, 1863, 1886, 0, 0,
	1896, 0, 0, 0, 0, 0, 0, 1875, 1877, 0,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1892, 0, 1893, 0, 0, 1868, 0,
	0, 0, 1862, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1894, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1883, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1898, 0, 0,
	0, 0, 0, 1894, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1883, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1898, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 1845, 1846, 0,
	1878, 1879, 1880, 1889, 1890, 1891, 0, 0, 0, 0,
	1874, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	1876, 0, 0, 1887, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 1869, 1845, 1846, 1895, 1878, 1879, 1880,
	1889, 1890, 1891, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1901, 0, 1900, 1882, 1876, 0, 0,
	1887, 0, 1847, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 1867, 1895, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 0,
	1901, 0, 1900, 0, 0, 0, 0, 0, 0, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 1860, 1866,
	1888, 1865, 1861, 0, 1858, 1856, 1857, 1849, 1850, 1851,
	1852, 1854, 1855, 0, 0, 0, 0, 0, 4830, 1870,
	1871, 1872, 1873, 0, 1885, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 1859, 1860, 1866, 1888, 1865, 1861,
	0, 1858, 1856, 1857, 1849, 1850, 1851, 1852, 1854, 1855,
	0, 0, 0, 0, 0, 4733, 1870, 1871, 1872, 1873,
	0, 0, 0, 0, 0, 0, 1853, 0, 1886, 0,
	0, 1896, 0, 0, 0, 0, 0, 0, 1875, 1877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1892, 0, 1893, 0, 0, 0,
	0, 0, 0, 1862, 1863, 1886, 0, 0, 1896, 0,
	0, 0, 0, 0, 0, 1875, 1877, 0, 0, 0,
	0, 1884, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1892, 0, 1893, 0, 0, 1868, 0, 0, 0,
	1862, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1894, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1883, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1898, 0, 0, 0, 0,
	0, 1894, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1898, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 1845, 1846, 0, 1878, 1879,
	1880, 1889, 1890, 1891, 0, 0, 0, 0, 1874, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 1876, 0,
	0, 1887, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 1869, 1845, 1846, 1895, 1878, 1879, 1880, 1889, 1890,
	1891, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1901, 0, 1900, 1882, 1876, 0, 0, 1887, 0,
	1847, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	1867, 1895, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 1901, 0,
	1900, 0, 0, 0, 0, 0, 0, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 1885, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 1860, 1866, 1888, 1865,
	1861, 0, 1858, 1856, 1857, 1849, 1850, 1851, 1852, 1854,
	1855, 0, 0, 0, 0, 0, 4685, 1870, 1871, 1872,
	1873, 0, 1885, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 1859, 1860, 1866, 1888, 1865, 1861, 0, 1858,
	1856, 1857, 1849, 1850, 1851, 1852, 1854, 1855, 0, 0,
	0, 0, 0, 4684, 1870, 1871, 1872, 1873, 0, 0,
	0, 0, 0, 0, 1853, 0, 1886, 0, 0, 1896,
	0, 0, 0, 0, 0, 0, 1875, 1877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1892, 0, 1893, 0, 0, 0, 0, 0,
	0, 1862, 1863, 1886, 0, 0, 1896, 0, 0, 0,
	0, 0, 0, 1875, 1877, 0, 0, 0, 0, 1884,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1892,
	0, 1893, 0, 0, 1868, 0, 0, 0, 1862, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1894, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1883, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1898, 0, 0, 0, 0, 0, 1894,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1883,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1898, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 1845, 1846, 0, 1878, 1879, 1880, 1889,
	1890, 1891, 0, 0, 0, 0, 1874, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 1876, 0, 0, 1887,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 1869,
	1845, 1846, 1895, 1878, 1879, 1880, 1889, 1890, 1891, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1901,
	0, 1900, 1882, 1876, 0, 0, 1887, 0, 1847, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 1867, 1895,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 1901, 0, 1900, 0,
	0, 0, 0, 0, 0, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 1885, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 1860, 1866, 1888, 1865, 1861, 0,
	1858, 1856, 1857, 1849, 1850, 1851, 1852, 1854, 1855, 0,
	0, 0, 0, 0, 4495, 1870, 1871, 1872, 1873, 0,
	1885, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	1859, 1860, 1866, 1888, 1865, 1861, 0, 1858, 1856, 1857,
	1849, 1850, 1851, 1852, 1854, 1855, 0, 0, 0, 0,
	0, 4322, 1870, 1871, 1872, 1873, 0, 0, 0, 0,
	0, 0, 1853, 0, 1886, 0, 0, 1896, 0, 0,
	0, 0, 0, 0, 1875, 1877, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1892, 0, 1893, 0, 0, 0, 0, 0, 0, 1862,
	1863, 1886, 0, 0, 1896, 0, 0, 0, 0, 0,
	0, 1875, 1877, 0, 0, 0, 0, 1884, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1892, 0, 1893,
	0, 0, 1868, 0, 0, 0, 1862, 1863, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1884, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1894, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1883, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1898, 0, 0, 0, 0, 0, 1894, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1883, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1898, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 1845, 1846, 0, 1878, 1879, 1880, 1889, 1890, 1891,
	0, 0, 0, 0, 1874, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 1876, 0, 0, 1887, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 1869, 1845, 1846,
	1895, 1878, 1879, 1880, 1889, 1890, 1891, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1901, 0, 1900,
	1882, 1876, 0, 0, 1887, 0, 1847, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 1867, 1895, 0, 0,
	0, 0, 0, 0, 0, 1864, 0, 0, 0, 0,
	0, 0, 0, 0, 1901, 0, 1900, 0, 0, 0,
	0, 0, 0, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 1860, 1866, 1888, 1865, 1861, 0, 1858, 1856,
	1857, 1849, 1850, 1851, 1852, 1854, 1855, 0, 0, 0,
	0, 0, 4239, 1870, 1871, 1872, 1873, 0, 1885, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 1859, 1860,
	1866, 1888, 1865, 1861, 0, 1858, 1856, 1857, 1849, 1850,
	1851, 1852, 1854, 1855, 0, 0, 0, 0, 0, 4238,
	1870, 1871, 1872, 1873, 0, 0, 0, 0, 0, 0,
	1853, 0, 1886, 0, 0, 1896, 0, 0, 0, 0,
	0, 0, 1875, 1877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1892, 0,
	1893, 0, 0, 0, 0, 0, 0, 1862, 1863, 1886,
	0, 0, 1896, 0, 0, 0, 0, 0, 0, 1875,
	1877, 0, 0, 0, 0, 1884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1892, 0, 1893, 0, 0,
	1868, 0, 0, 0, 1862, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1894, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1883, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1898,
	0, 0, 0, 0, 0, 1894, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1883, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1898, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 1845,
	1846, 0, 1878, 1879, 1880, 1889, 1890, 1891, 0, 0,
	0, 0, 1874, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 1876, 0, 0, 1887, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 1869, 1845, 1846, 1895, 1878,
	1879, 1880, 1889, 1890, 1891, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1901, 0, 1900, 1882, 1876,
	0, 0, 1887, 0, 1847, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 1867, 1895, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 1901, 0, 1900, 0, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	1860, 1866, 1888, 1865, 1861, 0, 1858, 1856, 1857, 1849,
	1850, 1851, 1852, 1854, 1855, 0, 0, 0, 0, 0,
	4237, 1870, 1871, 1872, 1873, 0, 1885, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 1859, 1860, 1866, 1888,
	1865, 1861, 0, 1858, 1856, 1857, 1849, 1850, 1851, 1852,
	1854, 1855, 0, 0, 0, 0, 0, 3871, 1870, 1871,
	1872, 1873, 0, 0, 0, 0, 0, 0, 1853, 0,
	1886, 0, 0, 1896, 0, 0, 0, 0, 0, 0,
	1875, 1877, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1892, 0, 1893, 0,
	0, 0, 0, 0, 0, 1862, 1863, 1886, 0, 0,
	1896, 0, 0, 0, 0, 0, 0, 1875, 1877, 0,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1892, 0, 1893, 0, 0, 1868, 0,
	0, 0, 1862, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1894, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1883, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1898, 0, 0,
	0, 0, 0, 1894, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1883, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1898, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 1845, 1846, 0,
	1878, 1879, 1880, 1889, 1890, 1891, 0, 0, 0, 0,
	1874, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	1876, 0, 0, 1887, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 1869, 1845, 1846, 1895, 1878, 1879, 1880,
	1889, 1890, 1891, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1901, 0, 1900, 1882, 1876, 0, 0,
	1887, 0, 1847, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 1867, 1895, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 0,
	1901, 0, 1900, 0, 0, 0, 0, 0, 0, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 1860, 1866,
	1888, 1865, 1861, 0, 1858, 1856, 1857, 1849, 1850, 1851,
	1852, 1854, 1855, 0, 0, 0, 0, 0, 3352, 1870,
	1871, 1872, 1873, 0, 1885, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 1859, 1860, 1866, 1888, 1865, 1861,
	0, 1858, 1856, 1857, 1849, 1850, 1851, 1852, 1854, 1855,
	0, 0, 0, 0, 0, 3351, 1870, 1871, 1872, 1873,
	0, 0, 0, 0, 0, 0, 1853, 0, 1886, 0,
	0, 1896, 0, 0, 0, 0, 0, 0, 1875, 1877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1892, 0, 1893, 0, 0, 0,
	0, 0, 0, 1862, 1863, 1886, 0, 0, 1896, 0,
	0, 0, 0, 0, 0, 1875, 1877, 0, 0, 0,
	0, 1884, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1892, 0, 1893, 0, 0, 1868, 0, 0, 0,
	1862, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1894, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1883, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1898, 0, 0, 0, 0,
	0, 1894, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1898, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 1845, 1846, 0, 1878, 1879,
	1880, 1889, 1890, 1891, 0, 0, 0, 0, 1874, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 1876, 0,
	0, 1887, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 1869, 0, 0, 1895, 0, 0, 0, 0, 1845,
	1846, 0, 1878, 1879, 1880, 1889, 1890, 1891, 0, 0,
	0, 1901, 0, 1900, 0, 0, 0, 0, 1887, 0,
	1847, 1882, 1876, 0, 0, 0, 0, 0, 0, 1848,
	1867, 0, 0, 0, 0, 0, 0, 0, 1895, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1900, 0, 0, 0, 0, 1901, 0, 0, 0, 0,
	0, 0, 0, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 2212, 0,
	0, 0, 0, 1864, 0, 1885, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 1860, 1866, 1888, 1865,
	1861, 0, 1858, 1856, 1857, 1849, 1850, 1851, 1852, 1854,
	1855, 0, 0, 0, 0, 0, 3350, 1870, 1871, 1872,
	1873, 0, 1885, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 1859, 1860, 1866, 1888, 1865, 1861, 0, 1858,
	1856, 1857, 1849, 1850, 1851, 1852, 1854, 1855, 0, 0,
	2210, 0, 0, 3349, 0, 0, 0, 0, 0, 0,
	0, 1870, 1871, 1872, 1873, 0, 1886, 0, 0, 1896,
	0, 1853, 0, 0, 0, 0, 1875, 1877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1892, 0, 1893, 0, 0, 0, 0, 0,
	0, 1862, 1863, 0, 0, 0, 0, 0, 0, 0,
	1886, 0, 0, 1896, 0, 0, 0, 0, 0, 1884,
	1875, 1877, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 1892, 0, 1893, 0,
	0, 0, 0, 0, 0, 1862, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 1894, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1883, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1898, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1894, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1883, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1898, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 1845, 1846, 0, 1878, 1879, 1880, 1889,
	1890, 1891, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2211, 1874, 0, 1882, 1876, 0, 0, 1887,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 1895, 0, 1845, 1846, 1869, 1878, 1879, 1880,
	1889, 1890, 1891, 0, 0, 0, 0, 0, 0, 1901,
	0, 1900, 0, 0, 0, 0, 1882, 1876, 1847, 0,
	0, 0, 0, 1887, 1848, 0, 0, 0, 1867, 0,
	0, 0, 0, 1895, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1901, 0, 0, 0, 0, 1900, 0, 0, 0, 1847,
	0, 0, 0, 0, 0, 2209, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 1885, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 1860, 1866, 1888, 1865, 1861, 0,
	1858, 1856, 1857, 1849, 1850, 1851, 1852, 1854, 1855, 0,
	0, 0, 3314, 0, 0, 1870, 1871, 1872, 1873, 0,
	0, 0, 0, 0, 0, 1853, 4984, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 1860, 1866,
	1888, 1865, 1861, 0, 1858, 1856, 1857, 1849, 1850, 1851,
	1852, 1854, 1855, 0, 0, 0, 1870, 1871, 1872, 1873,
	0, 0, 0, 0, 1886, 0, 1853, 1896, 3414, 0,
	0, 0, 0, 3413, 1875, 1877, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1892, 0, 1893, 0, 0, 0, 0, 0, 0, 1862,
	1863, 0, 0, 0, 0, 1886, 0, 0, 1896, 0,
	0, 0, 0, 0, 0, 1875, 1877, 1884, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1892, 1868, 1893, 0, 0, 0, 0, 0, 0,
	1862, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	1894, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1883, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1898, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1894, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4983, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1898, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 1846,
	1869, 1878, 1879, 1880, 1889, 1890, 1891, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1874, 0,
	1882, 1876, 0, 0, 0, 0, 3285, 1887, 1848, 0,
	0, 0, 2812, 0, 0, 0, 0, 1895, 0, 1845,
	1846, 1869, 1878, 1879, 1880, 1889, 1890, 1891, 0, 0,
	0, 0, 0, 0, 1901, 0, 0, 0, 0, 1900,
	0, 1882, 1876, 1847, 0, 0, 2811, 0, 1887, 1848,
	0, 0, 0, 1867, 0, 0, 0, 0, 1895, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1901, 0, 0, 0, 0,
	1900, 0, 0, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 3286, 1864, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 1860, 1866, 1888, 1865, 1861, 0, 1858, 1856,
	1857, 1849, 1850, 1851, 1852, 1854, 1855, 0, 0, 0,
	1870, 1871, 1872, 1873, 0, 0, 0, 0, 0, 0,
	1853, 0, 1885, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 1860, 1866, 1888, 1865, 1861, 0, 1858,
	1856, 1857, 1849, 1850, 1851, 1852, 1854, 1855, 0, 0,
	0, 1870, 1871, 1872, 1873, 0, 0, 0, 0, 1886,
	0, 1853, 1896, 0, 0, 0, 0, 0, 0, 1875,
	1877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1892, 0, 1893, 0, 0,
	0, 0, 0, 0, 1862, 1863, 0, 0, 0, 0,
	1886, 0, 0, 1896, 0, 0, 0, 0, 0, 0,
	1875, 1877, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1892, 1868, 1893, 0,
	0, 0, 0, 0, 0, 1862, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 1894, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1883, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1898, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1894, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1883, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1898, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 1846, 1869, 1878, 1879, 1880, 1889,
	1890, 1891, 0, 0, 0, 0, 2279, 0, 0, 0,
	0, 0, 0, 1874, 0, 1882, 1876, 0, 0, 0,
	0, 0, 1887, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 1895, 0, 1845, 1846, 1869, 1878, 1879, 1880,
	1889, 1890, 1891, 0, 0, 0, 0, 0, 0, 1901,
	0, 0, 0, 0, 1900, 0, 1882, 1876, 1847, 0,
	0, 0, 0, 1887, 1848, 0, 0, 0, 1867, 0,
	0, 0, 0, 1895, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1901, 0, 0, 0, 0, 1900, 0, 0, 0, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 2280, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 1860, 1866, 1888,
	1865, 1861, 0, 1858, 1856, 1857, 1849, 1850, 1851, 1852,
	1854, 1855, 0, 0, 0, 1870, 1871, 1872, 1873, 0,
	0, 0, 0, 0, 0, 1853, 0, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 1860, 1866,
	1888, 1865, 1861, 0, 1858, 1856, 1857, 1849, 1850, 1851,
	1852, 1854, 1855, 0, 0, 0, 1870, 1871, 1872, 1873,
	0, 0, 0, 0, 1886, 0, 1853, 1896, 4589, 0,
	0, 0, 0, 0, 1875, 1877, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1892, 0, 1893, 0, 0, 0, 0, 0, 0, 1862,
	1863, 0, 0, 0, 0, 1886, 0, 0, 1896, 0,
	0, 0, 0, 0, 0, 1875, 1877, 1884, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1892, 1868, 1893, 0, 0, 0, 0, 0, 0,
	1862, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	1894, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1883, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1898, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1894, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1898, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 1846,
	1869, 1878, 1879, 1880, 1889, 1890, 1891, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1874, 0,
	1882, 1876, 0, 0, 0, 0, 0, 1887, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 1895, 0, 1845,
	1846, 1869, 1878, 1879, 1880, 1889, 1890, 1891, 0, 0,
	0, 0, 0, 0, 1901, 0, 0, 0, 0, 1900,
	0, 1882, 1876, 1847, 0, 0, 0, 0, 1887, 1848,
	0, 0, 0, 1867, 0, 0, 0, 0, 1895, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1901, 0, 0, 0, 0,
	1900, 0, 0, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 1860, 1866, 1888, 1865, 1861, 0, 1858, 1856,
	1857, 1849, 1850, 1851, 1852, 1854, 1855, 0, 0, 0,
	1870, 1871, 1872, 1873, 0, 0, 0, 0, 0, 0,
	1853, 0, 1885, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 1860, 1866, 1888, 1865, 1861, 0, 1858,
	1856, 1857, 1849, 1850, 1851, 1852, 1854, 1855, 0, 0,
	0, 1870, 1871, 1872, 1873, 0, 0, 0, 0, 1886,
	0, 1853, 1896, 0, 0, 0, 0, 0, 0, 1875,
	1877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1892, 0, 1893, 0, 0,
	0, 0, 0, 0, 1862, 1863, 0, 0, 0, 0,
	1886, 0, 0, 1896, 0, 0, 0, 0, 0, 0,
	1875, 1877, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1892, 1868, 1893, 0,
	0, 0, 0, 0, 0, 1862, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 1894, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1883, 1103, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1898, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1894, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1883, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1898, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 1846, 1869, 1878, 1879, 1880, 1889,
	1890, 1891, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 1882, 1876, 0, 0, 0,
	0, 0, 1887, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 1895, 0, 1845, 1846, 1869, 1878, 1879, 1880,
	1889, 1890, 1891, 0, 0, 0, 0, 0, 0, 1901,
	0, 0, 0, 0, 1900, 0, 1882, 1876, 1847, 0,
	0, 0, 0, 1887, 1848, 0, 0, 0, 1867, 0,
	0, 0, 0, 1895, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1901, 0, 0, 0, 0, 1900, 0, 0, 0, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 4367, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 1860, 1866, 1888,
	1865, 1861, 0, 1858, 1856, 1857, 1849, 1850, 1851, 1852,
	1854, 1855, 0, 0, 0, 1870, 1871, 1872, 1873, 0,
	0, 0, 0, 0, 0, 1853, 0, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 1860, 1866,
	1888, 1865, 1861, 0, 1858, 1856, 1857, 1849, 1850, 1851,
	1852, 1854, 1855, 0, 0, 0, 1870, 1871, 1872, 1873,
	0, 0, 0, 0, 1886, 0, 1853, 1896, 4061, 0,
	0, 0, 0, 0, 1875, 1877, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1892, 0, 1893, 0, 0, 0, 0, 0, 0, 1862,
	1863, 0, 0, 0, 0, 1886, 0, 0, 1896, 0,
	0, 0, 0, 0, 0, 1875, 1877, 1884, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1892, 1868, 1893, 0, 0, 0, 0, 0, 0,
	1862, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	1894, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1883, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1898, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1894, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1898, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 1846,
	1869, 1878, 1879, 1880, 1889, 1890, 1891, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1874, 0,
	1882, 1876, 0, 0, 0, 0, 0, 1887, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 1895, 0, 1845,
	1846, 1869, 1878, 1879, 1880, 1889, 1890, 1891, 0, 0,
	0, 0, 0, 0, 1901, 0, 0, 0, 0, 1900,
	0, 1882, 1876, 1847, 0, 0, 0, 0, 1887, 1848,
	0, 0, 0, 1867, 0, 0, 0, 4062, 1895, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1901, 0, 0, 0, 0,
	1900, 0, 0, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 1860, 1866, 1888, 1865, 1861, 0, 1858, 1856,
	1857, 1849, 1850, 1851, 1852, 1854, 1855, 0, 0, 0,
	1870, 1871, 1872, 1873, 0, 0, 0, 0, 0, 0,
	1853, 0, 1885, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 1860, 1866, 1888, 1865, 1861, 0, 1858,
	1856, 1857, 1849, 1850, 1851, 1852, 1854, 1855, 0, 0,
	0, 1870, 1871, 1872, 1873, 0, 0, 0, 0, 1886,
	0, 1853, 1896, 0, 0, 0, 0, 0, 3420, 1875,
	1877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1892, 0, 1893, 0, 0,
	0, 0, 0, 0, 1862, 1863, 0, 0, 0, 0,
	1886, 0, 0, 1896, 0, 0, 0, 0, 0, 0,
	1875, 1877, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1892, 1868, 1893, 0,
	0, 0, 0, 0, 0, 1862, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 1894, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1883, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1898, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1894, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1883, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1898, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 1846, 1869, 1878, 1879, 1880, 1889,
	1890, 1891, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 1882, 1876, 0, 0, 0,
	3415, 0, 1887, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 1895, 0, 1845, 1846, 1869, 1878, 1879, 1880,
	1889, 1890, 1891, 0, 0, 0, 0, 0, 0, 1901,
	0, 0, 0, 0, 1900, 0, 1882, 1876, 1847, 0,
	0, 0, 0, 1887, 1848, 0, 3852, 0, 1867, 0,
	0, 0, 0, 1895, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1901, 0, 0, 0, 0, 1900, 0, 0, 0, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 1860, 1866, 1888,
	1865, 1861, 0, 1858, 1856, 1857, 1849, 1850, 1851, 1852,
	1854, 1855, 0, 0, 0, 1870, 1871, 1872, 1873, 0,
	0, 0, 0, 0, 0, 1853, 0, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 1860, 1866,
	1888, 1865, 1861, 0, 1858, 1856, 1857, 1849, 1850, 1851,
	1852, 1854, 1855, 0, 0, 0, 1870, 1871, 1872, 1873,
	0, 0, 0, 0, 1886, 0, 1853, 1896, 0, 0,
	0, 0, 0, 0, 1875, 1877, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1892, 0, 1893, 0, 0, 0, 0, 0, 0, 1862,
	1863, 0, 0, 0, 0, 1886, 0, 0, 1896, 0,
	0, 0, 0, 0, 0, 1875, 1877, 1884, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1892, 1868, 1893, 0, 0, 0, 0, 0, 0,
	1862, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	1894, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1883, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1898, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1894, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1898, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3380, 0, 0, 0, 0, 1874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 1846,
	1869, 1878, 1879, 1880, 1889, 1890, 1891, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1874, 0,
	1882, 1876, 0, 0, 0, 3353, 0, 1887, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 1895, 0, 1845,
	1846, 1869, 1878, 1879, 1880, 1889, 1890, 1891, 0, 0,
	0, 0, 0, 0, 1901, 0, 0, 0, 0, 1900,
	0, 1882, 1876, 1847, 0, 0, 0, 0, 1887, 1848,
	0, 0, 0, 1867, 0, 0, 0, 0, 1895, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1901, 0, 0, 0, 0,
	1900, 0, 0, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 1860, 1866, 1888, 1865, 1861, 0, 1858, 1856,
	1857, 1849, 1850, 1851, 1852, 1854, 1855, 0, 0, 0,
	1870, 1871, 1872, 1873, 0, 0, 0, 0, 0, 0,
	1853, 0, 1885, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 1860, 1866, 1888, 1865, 1861, 0, 1858,
	1856, 1857, 1849, 1850, 1851, 1852, 1854, 1855, 0, 0,
	0, 1870, 1871, 1872, 1873, 0, 0, 0, 0, 1886,
	0, 1853, 1896, 0, 0, 0, 0, 0, 0, 1875,
	1877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1892, 0, 1893, 0, 0,
	0, 0, 0, 0, 1862, 1863, 0, 0, 0, 0,
	1886, 0, 0, 1896, 0, 0, 0, 0, 0, 0,
	1875, 1877, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1892, 1868, 1893, 0,
	0, 0, 0, 0, 0, 1862, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 1894, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1883, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1898, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1894, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1883, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1898, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 1846, 1869, 1878, 1879, 1880, 1889,
	1890, 1891, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 1882, 1876, 0, 0, 0,
	0, 0, 1887, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 1895, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1901,
	0, 0, 0, 0, 1900, 0, 0, 0, 1847, 0,
	0, 0, 0, 1887, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1900, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 1860, 1866, 1888,
	1865, 1861, 0, 1858, 1856, 1857, 1849, 1850, 1851, 1852,
	1854, 1855, 0, 0, 0, 1870, 1871, 1872, 1873, 0,
	2383, 0, 0, 0, 0, 1853, 0, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 1860, 1866,
	1888, 1865, 1861, 0, 1858, 1856, 1857, 1849, 1850, 1851,
	1852, 1854, 1855, 983, 0, 1032, 0, 0, 0, 0,
	0, 0, 0, 0, 1886, 0, 0, 1896, 0, 0,
	0, 0, 0, 0, 1875, 1877, 0, 0, 0, 991,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1892, 0, 1893, 0, 0, 1006, 0, 989, 988, 1862,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1884, 0, 1008,
	0, 0, 0, 0, 0, 990, 0, 0, 0, 0,
	993, 0, 1868, 0, 0, 1043, 0, 0, 0, 0,
	0, 0, 0, 0, 1003, 1004, 0, 0, 0, 0,
	0, 0, 0, 1021, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1033, 995, 0, 0, 0, 0, 0, 996, 0,
	1894, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1883, 997, 0, 0, 0, 0, 0, 0, 0, 0,
	1030, 1898, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1031, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 999, 0,
	0, 0, 0, 0, 0, 0, 987, 1874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1000, 1001, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1009, 1007, 0, 0, 0, 0, 0,
	0, 1002, 0, 0, 0, 1018, 0, 1887, 1038, 1037,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1040, 1029, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1900,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 994, 0, 0, 1042, 0, 0,
	0, 1859, 1860, 1866, 1888, 1865, 1861, 0, 1858, 1856,
	1857, 1849, 1850, 1851, 1852, 1854, 1855, 0, 0, 0,
	992, 0, 0, 0, 1025, 1026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1035, 1023, 0, 0, 0, 0, 0, 0,
	0, 1041, 1019, 0, 0, 1012, 1010, 0, 1015, 0,
	0, 0, 0, 0, 1016, 0, 0, 985, 0, 1036,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1027, 0, 1017, 0, 0, 0,
	0, 0, 1014, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1039, 0, 0, 0, 0, 0, 0, 0,
	1020, 0, 0, 0, 0, 0, 0, 0, 0, 998,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1022, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1024,
}

var sqlPact = [...]int{
	284, -1000, -1000, -1000, -1000, 210, -1000, -1000, 209, 204,
	203, 202, 199, 197, 196, 195, 194, 192, 187, -1000,
	-1000, -1000, -1000, -1000, -1000, 180, -1000, -1000, 178, -1000,
	176, 174, 173, -1000, -1000, 172, -1000, 171, -1000, -1000,
	-1000, -1000, 168, 167, 166, 94142, 93575, 94707, 2374, 118483,
	101495, 2048, 83381, 117916, 82814, 117349, 2253, 10430, 116782, 2827,
	161, -1000, 116215, 160, 157, 153, -1000, 115648, -1000, 1879,
	-1000, 150, -1000, 9079, 72559, 149, 148, 147, 144, 2371,
	143, -1000, 140, 139, -1000, -1000, 137, -1000, 17831, 1580,
	-1000, 134, 132, -1000, 514, 99229, 131, 125, 124, 2507,
	122, 120, 69720, 118, 116, 113, 2487, 2981, -1000, -1000,
	2142, -1000, -1000, 112, 109, 108, 106, 100, 99, 97,
	92, 90, 89, 88, 87, 86, -1000, 81, 79, 78,
	76, 75, -1000, 73, 72, 70, -1000, 69, -1000, 57,
	56, 55, 54, 53, 52, 51, 50, 46, 44, 42,
	41, 40, 37, 138681, -1000, -1000, 35, 2030, 1760, 1759,
	1756, 1753, 1749, 1022, 28, 26, 25, 24, 22, 20,
	18, 17, 16, 15, 12, 11, 10, 9, 8, 7,
	3, 2, 1, 0, 138, -1, -4, -5, -7, -10,
	-12, -14, 5405, 3609, -1000, 1791, 1063, 32068, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 126958, 119048, -15, -167, -16,
	-1000, 3447, 937, 57700, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 303, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 495, 2705, 772, -1000,
	-1000, -1000, 115083, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2372, -53, -1000, 2139, -1000, -1000, -1000, -1000, -1000,
	766, -1000, 2368, 2321, 348, 2315, -1000, -1000, -1000, 3507,
	2527, 3907, 3904, 3903, 3902, 3901, 126393, 1920, 3900, 2613,
	3899, 3893, 3889, 3888, 3880, 3879, 3877, -1000, 93008, 1101,
	92441, 91874, 3504, 114518, 91307, 113951, 129224, 49556, 829, 3506,
	-1000, -1000, -1000, -1000, -1000, -1000, 119048, -1000, 1100, -1000,
	-1000, 3876, 2172, 764, 100928, -1000, -1000, 113384, 1902, -1000,
	-1000, -1000, 966, 1234, 34392, 34392, 34392, 296, -1000, -1000,
	-1000, -1000, -1000, -1000, 3873, 3872, 3871, 3870, 3869, -1000,
	-1000, 82247, 24913, 81680, 81113, 112817, 48975, 90740, 90173, 3868,
	3866, 3865, 48394, 77144, 112250, 128657, 3608, 3607, 1099, 2130,
	1532, -1000, -1000, -1000, -1000, -1000, -1000, -36, 74257, 3643,
	119048, -1000, 292, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	47813, 633, 47232, 564, 46651, 521, 111683, -1000, -1000, -1000,
	-1000, 76567, -1000, 111116, 2525, 3862, 3861, 1212, 3860, 3378,
	1903, 3859, 1981, 1293, 3857, 3856, 3855, 3854, 3853, 3852,
	3850, 1591, 110549, 3084, 1617, 109982, 1900, 128090, 1094, 89606,
	94707, 2735, 109415, 1567, 1529, -1000, -1000, -1000, -1000, 3190,
	2976, 2950, 1369, -1000, -1000, -1000, -1000, 61153, 9784, 9457,
	-1000, -1000, 13188, 108848, 64028, 94707, 94707, -1000, -1000, -1000,
	-1000, -1000, -1000, 46070, 475, 45489, 796, 108281, -1000, -1000,
	61728, 3042, 1135, -1000, -1000, -1000, -1000, -1000, 107714, 44908,
	380, 44327, 727, 119048, -1000, 3080, 2081, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2434, 1720, 3667, 2857, 75990,
	2147, 1453, 3458, 3184, 3176, 1597, 2124, 3162, 3849, 2682,
	3158, 3155, 3152, 3151, 3149, 1841, 2674, 310, 2669, 31487,
	3073, 1842, 43746, 1689, 1576, 3147, 3143, 3688, 2101, 2136,
	2282, 80546, 3848, 3847, 3401, 3139, 3134, 2904, 3132, -1000,
	3038, 1590, 291, -1000, -1000, -1000, -1000, -1000, -1000, 1534,
	-1000, -1000, -1000, -1000, -1000, 85076, -1000, -1000, 1655, -1000,
	-1000, 1655, -1000, -1000, -1000, -1000, -1000, 1427, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1791, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2579, -1000, 2169, -1000, -1000, -1000, 2552,
	3424, 3424, 3424, 3500, 477, 463, -1000, 138, -1000, -1000,
	138472, -1000, -1000, 50137, 50137, 50137, 50137, 50137, 50137, 50137,
	50137, 2264, -1000, 761, -1000, -1000, 801, -1000, 758, 680,
	635, -1000, -1000, -1000, -1000, -1000, -1000, 756, -1000, -1000,
	-1000, -1000, -1000, -1000, 3643, -1000, 27869, -1000, -1000, -1000,
	522, 755, 50137, -1000, -1000, 3712, 3709, 1023, -1000, 287,
	1007, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3079, 754, 752, -1000, 750, 749, 748,
	746, 744, -1000, 743, -1000, 741, 739, 736, 735, 733,
	731, 728, 726, -1000, 2149, -1000, -1000, -1000, -1000, -1000,
	-1000, 668, 667, 667, 667, -1000, 1076, -1000, -1000, -1000,
	332, 666, 313, 663, 660, 659, -1000, 718, 717, 716,
	714, 712, 711, 708, 706, 702, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1075, -1000, -1000, -1000, -1000, -37, 119048,
	-1000, 495, -37, -1000, -1000, 698, -1000, 36135, 36135, 36135,
	-1000, -1000, 2365, 50137, -1000, 2641, -1000, -31, -31, 922,
	59425, -1000, 56522, 922, 302, 822, 65171, -1000, 3037, -1000,
	-1000, 692, 281, -1000, -1000, -1000, -1000, 25488, 3035, 119048,
	119048, 119048, 94707, 94707, 94707, 119048, 3846, 3845, 3315, 50137,
	-1000, -1000, 71992, 130920, 95272, -1000, -1000, 3588, 70285, 71426,
	3078, 130920, 3077, 130358, 3844, -1000, -1000, -1000, -1000, -1000,
	3286, 3843, 3842, 3841, -1000, 119048, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 247, 3280, -1000, -1000, 98662, 247, 3278,
	-1000, 247, 3273, -1000, 98097, -1000, -1000, 2336, 3272, -1000,
	-1000, 253, 3270, -1000, -1000, -1000, 250, 3269, -1000, -1000,
	269, -102, 3268, -1000, -1000, -1000, -1000, -1000, -1000, 138472,
	-1000, -1000, -1000, 129791, -1000, 3422, -1000, 119048, -1000, 50137,
	-1000, -1000, 3585, 1779, 3453, 3539, -1000, -1000, -51, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2585, 2580, 1191, 2389,
	-1000, 3156, 1426, 34392, 3365, -1000, -1000, -1000, -1000, -1000,
	264, 25488, -1000, -1000, -1000, -1000, -1000, -1000, 5144, 3267,
	1521, -1000, 2388, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2166, 3264, -1000, 2059, 3258, 2093, -1000, -1000,
	1690, -1000, 134598, 1404, -1000, -1000, -1000, -1000, 1680, 3256,
	-28, -1000, -1000, 2463, -1000, -1000, -1000, -1000, 135862, -1000,
	3020, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2053, -1000, 1327, 3255, -1000, 2852, 2852, 89039, 3251, 63453,
	61728, 74257, -41, -1000, -1000, -1000, -1000, -133, -1000, 24332,
	138472, -1000, -1000, -1000, -1000, 1894, 138472, 925, -1000, -1000,
	3227, -1000, 138472, 923, -1000, -1000, 3221, -1000, 2672, -1000,
	3076, -1000, -1000, 2479, 2478, 1055, -1000, 3830, -1000, -1000,
	3826, -1000, 3825, 3823, 3814, -1000, 1843, 2115, 3813, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 88474, 2363, -1000,
	-1000, 86773, 3075, -1000, 2477, 3538, -1000, 87907, 1084, -1000,
	1036, 2472, -1000, 97532, 1051, 2470, -1000, 3812, 3489, 2762,
	1036, 2469, -1000, -1000, -1000, -1000, -1000, 1048, -1000, 67444,
	-1000, 67444, -1000, 1724, -1000, 125828, -31, 94707, 3643, -1000,
	-75, -1000, -1000, -1000, 937, -1000, 60575, -1000, 60575, 100361,
	77719, 1026, 3028, 69143, 138078, -1000, 1054, -1000, -1000, 138472,
	-1000, -1000, -1000, 2671, -1000, -171, 2851, -1000, 77719, 62878,
	3027, 2653, -1000, 138472, -1000, -1000, -1000, -1000, 138472, -1000,
	-1000, -1000, 77719, 86773, -1000, 107147, 87340, -1000, -1000, 1581,
	2637, -1000, -1000, -1000, 77719, 1350, 77719, 77719, 77719, -1000,
	106580, -1000, -1000, 2162, 1751, 3398, 2160, 94707, -1000, 2068,
	-1000, -1000, -1000, 3444, 3235, 119048, -1000, -1000, 3074, -1000,
	73691, 96967, -1000, 96402, -1000, 95837, -1000, 94707, -1000, 94707,
	-1000, 3811, 3809, 3808, -1000, -1000, 3807, -1000, 3803, 3432,
	-1000, 693, 43165, 138472, 3427, -1000, 3800, 2105, 3073, 138472,
	-1000, 3232, 1762, 1752, 119048, -1000, -1000, 119048, -1000, 119048,
	-1000, -1000, -1000, 1648, -1000, -1000, 2584, -1000, -1000, -1000,
	-1000, 94707, 94707, 94707, 94707, 1288, -1000, 42584, -1000, -1000,
	3125, 3799, 1827, -1000, 2066, -1000, 3024, 3431, -1000, 1574,
	1880, 248, 3716, -1000, -1000, 256, -1000, -1000, -51, -1000,
	125263, -1000, 2552, -1000, 119048, -1000, 2516, 3066, 3072, 1739,
	2381, 2695, -1000, 42003, 2647, 53623, 2387, 138, -1000, -1000,
	138, 138, 33230, -1000, -1000, 70285, 70285, 25488, 1475, 50137,
	50137, 50137, 50137, 50137, 50137, 50137, 50137, 50137, 50137, 50137,
	50137, 50137, 50137, 50137, 50137, 50137, 50137, 50137, 50137, 50137,
	50137, 50137, 50137, 50137, 50137, 50137, 50137, 50137, 50137, 50137,
	50137, 50137, 50137, 50137, 50137, 2268, 50137, 1403, 50137, 50137,
	50137, 50137, 2135, -1000, -1000, 2063, 561, 2128, 680, -1000,
	-1000, -1000, 3649, 3649, 3649, 729, 729, 729, 11772, 11772,
	631, 3796, 801, -1000, 50137, -1000, 145, 59991, 50137, 26065,
	-1000, 463, 11020, 2588, -1000, 460, 26675, -1000, -1000, -1000,
	27869, 635, 41393, 50137, 1067, 138472, -1000, -1000, 1517, 3662,
	23751, 2961, 2890, 677, 855, 845, 30877, 30267, 29657, 29047,
	762, 624, 50137, 50137, 50137, 50137, 50137, 50137, 50137, 50137,
	-1000, -1000, 3671, -1000, 3662, -1000, -1000, -1000, -1000, 3662,
	1474, 1454, 3662, -1000, 3662, 3662, 7608, 7608, 40812, 40231,
	39650, 54204, 39069, 50137, 28466, 38488, 37907, -1000, 119048, -37,
	3584, 50137, 329, -1000, 135468, -1000, 329, 329, 675, -78,
	138472, 2688, 2688, 58275, 2426, 2274, 2274, 2274, -1000, 922,
	18484, 922, 104885, 2284, 922, 922, 237, 300, 459, 55947,
	2641, 104885, 783, 674, -17, -22, -23, -1000, -1000, -24,
	-25, -1000, -1000, 94707, 673, 26065, 25488, 235, 2112, -80,
	2701, 2699, -1000, 2689, 2685, -1000, 2683, 2361, -1000, -1000,
	-1000, 1904, -81, 1386, 94707, 119048, 1498, 3795, -86, -1000,
	8321, -83, -1000, 1356, 234, 3662, -1000, -1000, -1000, -1000,
	-1000, 3790, 3789, -1000, 1074, 671, 670, 494, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 668, 667, 667, 667,
	-1000, 332, 666, 313, 663, 660, 659, -1000, -1000, -1000,
	-1000, -1000, 3022, 94707, 119048, 1495, 3786, 83946, -102, 95272,
	-89, -1000, -1000, 119048, -1000, -1000, -1000, 3782, -1000, 94707,
	-1000, -1000, 94707, 247, 3220, -1000, 94707, -1000, 94707, 240,
	3218, -1000, -1000, 119048, -1000, 94707, 94707, -1000, 119048, 119048,
	119048, 130920, 130920, 238, -1000, 94707, 911, -90, 1217, -51,
	-1000, -1000, -1000, -1000, 1655, -1000, 1964, -1000, -1000, -1000,
	-1000, -1000, -1000, 1571, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1023, -1000, -1000, -1000, -1000, -1000, -1000, 3659,
	3657, -39, -1000, -1000, 25488, -1000, -55, 1728, 580, 1378,
	-1000, 79979, 2466, 3407, 3781, 2749, 3385, 1713, -1000, 1644,
	658, -1000, 3514, 85076, 3557, 3569, 1371, -1000, 3021, -1000,
	-1000, -1000, 964, 1812, 1875, 1377, 1376, 85076, 2059, -1000,
	70285, -1000, 2704, 3496, 1424, 1414, 1424, 1424, 1401, -1000,
	85076, 1867, 1320, 1319, 1316, -1000, -1000, 2061, 2058, -1000,
	-1000, 106015, -1000, 1315, 1312, 3579, 2579, 2239, 834, 2026,
	-1000, 1372, 1307, 3019, -1000, -1000, -56, 3555, 3567, 1371,
	-1000, 3016, 1306, -1000, -1000, -1000, 3494, 94707, 25488, 1637,
	1634, 1622, 1865, 1305, -40, -1000, 3552, 3418, -1000, 86773,
	86773, 3616, 77719, -1000, 2481, 1302, 1298, -1000, 1069, 5959,
	3342, -1000, 130920, 1069, 1069, 2054, 3217, 2823, 1699, -1000,
	2844, 864, 2843, -1000, -1000, -1000, 864, -41, 74257, 119048,
	229, -1000, 145, 50137, 50137, 145, 50137, 145, -1000, 3532,
	3216, 3215, 3779, -1000, -1000, -1000, -1000, -1000, 3778, 2060,
	2611, -1000, -1000, 657, 2465, 3015, 119048, 2722, -46, 94707,
	-1000, 73125, 3213, 130920, 2059, 2457, -1000, -1000, 86208, -1000,
	3207, 495, 2455, -1000, 709, 3776, 3198, -1000, 124698, -1000,
	3422, 1299, 3196, 1156, 328, 3583, -1000, 328, 68011, -1000,
	119048, -1000, -31, 5070, 78849, -92, -93, 456, -1000, 105450,
	119048, 119048, 3349, 2090, 2078, -1000, 1032, 61728, -1000, 61728,
	-103, -1000, -171, 2840, 1616, 61728, -1000, 1026, 1026, 864,
	-1000, 864, -1000, 94707, 3071, -1000, -1000, 77719, 1026, 1026,
	1026, -1000, -1000, -1000, -1000, 3775, 3774, 3773, 3771, -1000,
	-1000, 1035, 94707, 119048, 94707, -1000, -1000, 1688, -1000, 226,
	-1000, 130920, -1000, 130920, 119048, 94707, -1000, 1035, 119048, 1035,
	119048, 1035, 119048, 1035, 1035, -1000, -1000, -1000, -1000, -1000,
	145, -1000, -1000, 138472, -1000, 50137, -1000, -1000, 1626, 3770,
	1730, -1000, 3070, -1000, 3069, -1000, 14, -1000, -1000, 1968,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3769,
	138472, -1000, 2085, -1000, -1000, -1000, -1000, 94707, 94707, 94707,
	94707, 119048, 3341, -1000, 119048, 3339, 94707, -1000, 3715, -1000,
	-1000, 85076, -1000, 2516, 3066, -1000, -1000, -1000, -1000, -1000,
	-1000, 1673, 2329, -1000, 2652, -1000, 1684, -1000, -1000, -1000,
	138472, 54785, -1000, -1000, 138472, 1930, -1000, 53042, 52461, -1000,
	-1000, 1824, 94707, 2727, -1000, 2727, -77, -1000, 135427, 2651,
	94707, -1000, -1000, -1000, -1000, -1000, 963, 598, 598, 1385,
	1385, 1385, 1385, 3524, 7418, 965, 7154, 8140, 8140, 7295,
	7295, 7295, 7295, 7295, 8140, 893, 729, 729, 893, 893,
	893, 893, 893, 729, 729, 729, 8140, 8140, 8140, 729,
	11772, 6959, 12695, 50137, 50137, 1292, 2062, 561, 9551, 50137,
	13818, 13818, 13818, 13818, -1000, 1858, -1000, -1000, -1000, -1000,
	3007, 654, 54204, 54204, -1000, -1000, -1000, -1000, 27272, 50137,
	-1000, -1000, -1000, -1000, 37297, -1000, -1000, 134554, -321, 452,
	-1000, 225, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 447, -74, 19, -1000, 50137,
	50137, 50137, 444, -1000, 224, 50137, 119048, -1000, 17487, 782,
	-99, -1000, -104, 1476, -1000, 50137, -1000, -1000, 1287, -1000,
	1285, 1284, 1283, -1000, 647, 443, -1000, 222, -1000, 2272,
	645, 644, 50137, -1000, -1000, -1000, -1000, -1000, 134153, -1000,
	-1000, 134116, -1000, -1000, 133715, -1000, -1000, 133678, -1000, -1000,
	-1000, -1000, -1000, 138037, 16777, 16389, 15395, 10176, 14730, 14072,
	-109, 442, -111, 441, 962, 959, 440, 438, 434, -112,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -114, 433, -1000, 3004, -74, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 430, -1000, 429, -1000, 137643,
	-74, 428, 5673, -1000, 54204, 54204, 54204, 54204, -1000, 427,
	-1000, 135033, -1000, 137602, 36716, 36716, 36716, 425, 137208, 50137,
	-74, -117, -1000, -122, -1000, -1000, 540, -123, 1060, 36135,
	57111, 25488, -1000, 1060, 1060, 50137, -1000, 50137, 2666, -1000,
	-1000, -1000, -1000, 2665, 1941, 2688, 58275, -1000, -1000, -1000,
	-1000, 104885, -1000, 3643, 3191, -1000, 104885, -1000, -1000, 119048,
	495, -1000, 104885, 104885, 25488, 922, -1000, 922, 104885, 596,
	-1000, -1000, -1000, -1000, -1000, 416, 66312, 19, 219, 25488,
	1036, -1000, -1000, 2741, 2741, 2741, 2741, 2741, 94707, -1000,
	-1000, 130920, 1282, -47, -100, 2839, -1000, 3614, -1000, 2176,
	-1000, 70285, -1000, 800, 1160, 25488, -1000, -1000, -1000, 643,
	-1000, 3662, 3662, -1000, 3662, 130920, 3003, 283, 2838, -1000,
	2356, -42, 236, 130920, 3768, -1000, -1000, 247, -1000, 94707,
	247, 247, -1000, 94707, 94707, 2336, -1000, 253, -1000, 250,
	-1000, -1000, -102, -1000, 1053, 34392, -1000, 1655, -1000, -1000,
	1657, -1000, 2094, -1000, 1297, -1000, -1000, -1000, -1000, 34392,
	-1000, 5077, 119048, 119048, 94707, -1000, 103190, 119048, -1000, 2206,
	130920, -1000, 2454, 124133, 2419, 123568, 70285, -1000, -1000, 641,
	975, 2650, 2648, 1149, 119048, 119048, 2644, 123003, 122438, -1000,
	3767, 119048, 2191, 50137, 103190, 3493, 2301, 2335, 145, 145,
	-1000, 145, -1000, -1000, 640, 1465, 94707, 94707, 119048, 130920,
	94707, 1999, -1000, -1000, -1000, -1000, -1000, 85641, -1000, -1000,
	3666, 3665, -1000, 1424, -1000, -1000, -1000, 1424, 2059, 1948,
	119048, 130920, 94707, 130920, 121873, 121308, -1000, -1000, 1857, 119048,
	-1000, -1000, -1000, -1000, 1503, -1000, 834, 1280, 3000, 50137,
	50137, 2193, 145, 145, -1000, 145, 639, 25488, 2033, -1000,
	3086, 119048, 3707, 120743, 3705, 119048, 119048, 119048, 130920, 3421,
	119048, -1000, -1000, -1000, -1000, 3616, -1000, 891, 119048, 130920,
	-1000, 120178, 5959, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2200, 75413,
	1161, 119048, 1327, -1000, -1000, 1836, 1278, 1276, 85076, 2192,
	1816, 1951, 130920, 61728, 1033, 61728, 2772, -1000, -1000, 23170,
	-1000, 138472, 138472, -1000, 138472, -1000, 73125, 77719, 119048, -1000,
	-1000, 1081, 119048, 79414, 1000, 3175, 66877, -133, 1026, 77719,
	94707, -46, 2722, 119048, -1000, -1000, 2059, 3173, 495, 2448,
	-1000, 130920, 3582, 3168, 638, 3765, 3764, -1000, 94707, 2355,
	2446, -1000, -1000, 119613, 3135, 834, 119048, 1060, 58275, 2095,
	-1000, 64605, 1110, 119048, 1967, 163, -1000, -1000, -1000, -8,
	119048, -1000, 816, -1000, -1000, 5070, 5070, 1026, -186, 637,
	-1000, 886, 884, 62303, -130, -1000, 218, 636, 880, 879,
	-1000, 5534, -1000, -171, -1000, 77719, 1032, 61728, 2991, -171,
	2830, 2980, -1000, -1000, 1050, -1000, 1543, 1026, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -32,
	1945, 119048, -102, -102, -60, -47, -1000, 1035, -1000, 1035,
	-1000, 1035, -1000, -1000, -1000, 138472, -1000, -1000, -1000, 1723,
	1715, 119048, -1000, -1000, 119048, -1000, 25488, 119048, 94707, 25488,
	94707, 3064, 3063, -1000, -1000, -1000, 119048, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1182, -1000, 1930, 2328, -1000,
	635, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2549, -1000, -50, 33230, 931, -1000, -1000, 94707, -33, 50137,
	50137, 9488, 6504, 50137, 54204, 54204, -1000, 50137, 6320, -1000,
	-1000, -1000, -1000, -1000, 2978, 634, 50137, 70285, 5706, 5447,
	-1000, 413, 12215, 893, -1000, 50137, -1000, 627, -1000, 399,
	35554, -1000, 136297, -30, -131, -1000, 19079, -74, -132, -1000,
	-1000, 799, -1000, 3169, -1000, 50137, 137167, 2503, 2031, 1905,
	1746, 3662, 3704, 22589, -1000, 68577, 1064, 2287, 133277, -1000,
	-1000, -1000, -1000, 70285, 70285, 50137, 50137, -1000, 50137, 50137,
	50137, -1000, -1000, -1000, 3662, 952, -1000, -1000, -1000, 952,
	-1000, -1000, 1424, -1000, 1424, -1000, 50137, -1000, -1000, 2972,
	50137, -1000, 70285, 70285, 54204, 54204, 54204, 54204, 54204, 54204,
	54204, 54204, 54204, 54204, 54204, 54204, 54204, 54204, 54204, 54204,
	54204, 54204, 54204, 54204, 2602, 54204, 3638, 3638, 3638, 1049,
	-1000, 3058, 2972, 50137, 50137, 70285, 398, 395, 390, -1000,
	50137, -74, -1000, -1000, 10014, 632, -1000, 2532, -1000, 2889,
	-1000, 50137, -1000, -138, -1000, 2641, -1000, -1000, 2889, 2889,
	-139, 138472, 58275, 58275, -1000, 626, 50137, 2658, -1000, -1000,
	781, -313, -1000, 877, -1000, -1000, -1000, -1000, -1000, -1000,
	876, -1000, 495, -1000, -1000, -1000, 217, 104885, 104885, 780,
	-1000, -140, -1000, -1000, -145, -1000, 3580, 386, 25488, -1000,
	1060, 2780, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2681,
	-264, 130920, 130920, 1806, 2303, 3701, -1000, 3664, 792, 778,
	216, 3662, 383, 381, 377, -102, 130920, 130920, 1805, 70860,
	130920, -1000, -1000, -1000, 247, -1000, -1000, -1000, 240, -1000,
	-1000, -1000, -1000, 2720, -1000, -51, -1000, -1000, -1000, 50137,
	-1000, -1000, 3403, 606, 1275, 1268, -1000, -146, -1000, 875,
	-1000, -1000, -1000, -1000, 2949, -1000, 3164, -1000, 2443, -1000,
	1125, 2442, 1977, -1000, 50137, 604, 2761, 603, 601, 3760,
	2184, 3753, 1151, 3163, 2336, 3154, 2336, -1000, -1000, -1000,
	971, -1000, 138472, -147, -1000, 2301, -1000, 600, 595, -1000,
	-55, 1726, 542, 1267, 1045, -1000, -1000, 50137, 50137, 104320,
	-1000, 472, 3393, -34, -1000, -1000, -1000, 1801, 1266, 1263,
	-1000, -1000, -1000, -1000, 2059, 1789, 1262, 1258, -1000, -1000,
	-1000, -1000, -1000, 2439, -1000, -1000, 3148, 1043, -1000, 3104,
	3102, 934, 119048, 50137, 50137, 136773, 136732, -1000, 1042, -1000,
	-1000, 50137, -1000, -56, 1257, 3523, 2435, 94707, -1000, 2336,
	3142, 1251, -1000, 1250, -1000, -1000, -1000, 3548, 3545, 1265,
	3616, 61728, -1000, -1000, -1000, 77719, -1000, -1000, 74838, -1000,
	-1000, 1069, 119048, 130920, 94707, 1878, -1000, -1000, 83946, 84511,
	119048, 2823, -102, 864, -1000, 2693, 864, 1033, 2968, -1000,
	2691, -1000, 1040, 94707, 3751, 376, -152, -57, 70285, -1000,
	-1000, -1000, -1000, 2419, 94707, 119048, 1347, 2752, 119048, 119048,
	3577, -1000, 2378, 630, 94707, 927, -1000, 3643, -1000, -1000,
	-1000, 1037, -1000, 3526, 94707, 3576, 3138, 1036, 145, 94707,
	3675, -1000, -1000, 3575, 94707, 3133, 2353, 2422, 2600, 834,
	78284, 1036, 2283, -64, -1000, 1967, 34973, 3391, -153, -1000,
	-1000, -1000, 1060, 68011, 58275, 50137, 3750, -154, -1000, -1000,
	-1000, -1000, -1000, 102060, 102060, 77719, 77719, 77719, 1026, 119048,
	119048, 3747, 77719, 77719, 77719, -58, 587, -1000, 871, 869,
	868, -1000, -1000, -1000, -1000, -1000, -1000, 867, 866, 865,
	1032, -1000, -1000, -171, 61728, 1032, 61728, 145, -1000, 2297,
	94707, -1000, 22008, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1035, -133, -1000, -1000, -1000, 2215, 2386, 2215, 1938, 1937,
	-1000, -1000, 2327, -1000, -1000, -1000, -1000, 2709, 3415, 25488,
	3533, 13818, 50137, 50137, 418, 5229, 1095, 13818, 50137, 50137,
	70285, 17043, -164, 50137, 50137, -1000, 50137, 774, 138472, -1000,
	3695, 50137, 369, 368, -1000, -1000, -1000, 3647, -1000, -1000,
	-1000, 138472, 50137, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	363, -1000, 164, -1000, -1000, -1000, 127523, -1000, 50137, 362,
	3492, -1000, 357, 354, 11467, 9200, 133240, 132839, 132802, 353,
	-1000, -1000, 347, 346, 138472, 3058, 138472, -1000, -1000, 983,
	983, 1408, 1408, 1408, 1408, 3638, 694, 1367, 991, 918,
	918, 918, 559, 1049, 1049, 918, 918, 918, 1049, 2966,
	2614, 586, 6152, -1000, -1000, 138472, 138472, 345, -1000, -1000,
	-1000, -74, 343, 10014, -1000, 2883, 3488, 138472, -1000, 58275,
	2883, 2883, -1000, -1000, 1941, 119048, 138472, 58275, -1000, 3191,
	-1000, 20259, 19672, -1000, 25488, -1000, -1000, -1000, -1000, 3643,
	-1000, 66312, -1000, 585, -1000, 146, -1000, 2780, -1000, 863,
	-1000, -1000, 77719, 77719, 2741, -1000, 2896, -264, -202, 119048,
	-1000, -1000, 730, 3745, 791, 25488, 341, -1000, -1000, -1000,
	-102, -102, 119048, 2962, 94707, 119048, 1494, -102, -1000, -1000,
	-1000, 3348, 138472, 119048, 119048, -1000, 103190, 34392, 1583, 103755,
	119048, 3131, -1000, 3130, -1000, 1149, 2592, 132401, 58850, -1000,
	58850, 119048, -1000, -1000, -1000, -1000, 2027, 1593, 3741, 1202,
	-1000, 3446, 119048, -1000, 119048, -1000, -1000, -1000, 103190, -1000,
	119048, 119048, 94707, 119048, -1000, 130920, 3112, -173, 138472, -59,
	-1000, 862, -1000, 1409, -1000, 21427, 119048, 130920, 94707, 119048,
	130920, 94707, 3127, 119048, 2241, -1000, -1000, 3101, -1000, 138472,
	136338, 145, 50137, 3111, -176, 25488, -1000, 3692, 3687, 3126,
	3452, -1000, 119048, 3681, 119048, 94707, 3347, 1034, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1777, 1249, 1247, 2352, 2344,
	2302, -60, 2192, 1033, -61, 584, -1000, 861, -1000, -1000,
	860, 858, 1033, -1000, 77719, 61728, 3740, 495, -1000, 2743,
	-1000, 99794, 79414, 2382, -1000, -1000, 583, 119048, 119048, 578,
	-1000, 145, -1000, 3739, 103190, 577, -1000, 2295, -1000, 628,
	-1000, 2533, 130920, 2059, 145, 94707, -1000, 1030, 495, 340,
	-62, -1000, 3182, 1129, 25488, 94707, 3124, 2603, 834, 78284,
	-1000, 1299, 2695, -1000, -63, -1000, 491, 145, 2283, -1000,
	-64, 138472, -1000, 856, -1000, -179, -1000, -1000, 338, -1000,
	3346, -1000, -1000, -190, -1000, -1000, 2633, 2633, 77719, 61728,
	77719, 77719, 77719, 61728, -1000, 1032, 864, -1000, -171, -1000,
	2508, -1000, -1000, -1000, -1000, -1000, 25488, 1781, -1000, 576,
	575, -1000, -1000, -1000, -1000, 3415, 13818, 13818, 50137, 50137,
	50137, 13818, 17043, -191, -1000, 13818, 13818, -74, -1000, -1000,
	136297, -1000, -1000, -1000, 138472, -1000, 20846, 2225, -1000, 132364,
	-1000, 33230, -1000, -1000, 50137, 50137, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 54204, 2960, 573, 70285, -1000, -1000,
	325, 1058, 50137, 51880, 2641, 1058, 1058, -1000, -193, -1000,
	-1000, -1000, 3643, -1000, 3643, 146, -1000, -1000, 3738, 25488,
	-1000, 77719, -1000, -1000, -1000, 2300, -1000, -1000, 3119, -163,
	785, -1000, 3734, -1000, -1000, 152, 130920, 2956, 136, 2804,
	-1000, -1000, -1000, -1000, -1000, 2803, 3574, -1000, 2025, -1000,
	119048, 119048, -1000, 119048, -1000, 25488, 119048, 2907, 1333, -1000,
	975, 2639, 571, 54204, 1179, 94707, 921, 2871, 2868, -1000,
	3604, 3486, 2841, -204, -1000, 119048, 50137, 119048, -205, -206,
	2409, -1000, -1000, 1178, 1331, 50137, 1177, -1000, -1000, -1000,
	70285, 570, 2336, 2336, -1000, -207, -212, -1000, -1000, -1000,
	50137, 1246, 119048, 33811, -1000, 3733, 3393, -1000, -1000, -1000,
	-1000, -1000, -1000, 119048, -1000, 119048, -1000, 50137, -1000, 135903,
	50137, 1231, -1000, -1000, -1000, 3677, 2336, 25488, 2336, -1000,
	2336, 3452, 1200, 2337, 119048, 130920, 94707, 1814, 1814, 3048,
	-1000, -1000, -1000, 2520, 2520, 77719, 61728, 61728, -1000, -65,
	1033, -1000, 3573, 2216, 3731, -1000, -1000, -1000, -1000, 2625,
	-1000, -1000, -1000, 119048, 2622, 2853, 58850, 569, 568, 119048,
	1028, -1000, -213, 79414, 1000, 997, -1000, -66, 567, -1000,
	852, -1000, -1000, -1000, -1000, 495, -1000, 2698, 3568, -1000,
	3676, 566, 563, 119048, 2339, 562, 25488, 3388, 834, 78284,
	-1000, 3135, 1967, -1000, 2417, 119048, 3384, -1000, 2695, 561,
	-1000, 1026, 560, 1026, -1000, -214, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1032, -67, -1000, 919, 916, -1000,
	-1000, 94707, 94707, 50137, 50137, -1000, 13818, 13818, 13818, -1000,
	323, -1000, -1000, 2283, 3478, -1000, -70, 131963, 131926, 2252,
	54204, 70285, -215, -1000, -1000, 119048, 138472, -72, -1000, 138472,
	543, 537, 450, -1000, -1000, -1000, 625, 599, -1000, -1000,
	-1000, -1000, 130920, 3730, -1000, 130920, -102, 130920, 130920, 1755,
	102625, 119048, -1000, -1000, 1977, 1712, -1000, -1000, -1000, 119048,
	2420, -1000, -1000, -1000, 1024, 50137, 6152, 54204, 535, 50137,
	-1000, 531, 530, 3566, 3329, -1000, 2746, 2954, 2017, 58850,
	-1000, 3415, -1000, 131525, -1000, 1128, 2051, -1000, -1000, -1000,
	-1000, 138472, 54204, 3452, 58850, -1000, -1000, 528, 526, 138472,
	524, 851, 2948, -1000, -1000, -1000, -1000, -1000, 138472, 145,
	138472, 523, 3523, -1000, -1000, -1000, -1000, 2336, 94707, 850,
	-1000, -1000, -1000, 1228, -1000, -1000, -1000, -1000, 3728, 3727,
	2943, 83946, -1000, -220, -1000, -1000, -1000, 2064, 145, 1000,
	-1000, -1000, 2382, 515, -1000, 1011, 2849, 2849, -221, 58850,
	58850, -222, 2333, 2643, -1000, 322, 3565, 997, -1000, 3633,
	-1000, 3334, 3334, 50137, 3564, 3345, -1000, 145, -1000, 3675,
	58850, -1000, 94707, 58850, 2338, 2144, 2568, 78284, -1000, 2600,
	-1000, -1000, -223, 119048, 1967, -1000, -1000, 77719, -1000, -1000,
	-1000, 2508, -1000, 119048, -1000, 119048, -1000, -1000, -231, -233,
	-1000, 2186, 50137, 33230, -1000, -1000, 2252, -234, -1000, -73,
	-1000, 3563, 51880, 3725, 3724, 3723, -1000, -1000, -264, -1000,
	-102, -102, -102, 119048, -1000, 2022, -1000, 2419, -1000, -1000,
	3123, -1000, 2881, 504, 131488, 6152, 2543, 119048, 17870, 2059,
	2059, -1000, 3561, 2920, -1000, -1000, 2193, 499, -1000, -1000,
	-1000, -1000, 931, 119048, 1011, 2880, 94707, 6152, 1148, -239,
	2215, 2215, 50137, 32649, 2229, -1000, 50137, -1000, -1000, 3452,
	61728, 130920, -1000, -1000, 130920, 2334, -1000, 2925, 3652, -1000,
	2333, 119048, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1128, -241, -242, -1000, -1000, 3437,
	-1000, 3344, 2743, 145, -1000, -1000, -1000, -247, 138472, 145,
	3722, 1030, 311, -249, 1129, -254, 94707, 2043, -1000, 834,
	-1000, 2603, 1060, 3308, -1000, -255, -1000, -256, -262, -1000,
	-1000, 308, 51299, 51299, 51299, -74, -77, -1000, 119048, 496,
	-1000, -1000, -1000, -1000, -1000, 119, -1000, -1000, 2995, 920,
	-1000, 897, 2079, 306, 1134, 285, 121, -1000, -1000, -1000,
	2841, -1000, 119048, -1000, -1000, -1000, 920, 495, -1000, 50137,
	1128, -265, -1000, 1108, -267, -1000, 1107, -270, -1000, 2942,
	-1000, -273, 2336, -1000, -264, 238, 1814, 1029, 3531, -1000,
	-1000, -1000, 2553, -275, -1000, -1000, 2017, 1128, 2193, 2415,
	-1000, 2216, 1028, -1000, -1000, -1000, -1000, -1000, 1128, 488,
	2017, 487, 1603, 834, -1000, -1000, 1424, 3388, 3306, 1395,
	1026, -1000, -1000, -1000, 3136, -1000, 55366, 2385, 1924, 134992,
	3136, 3136, -1000, -1000, 130920, 119048, 1011, 3513, -1000, 900,
	898, 1578, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1060, -276, -1000, 2543, 138472, 1011, -1000, 2215, 2790, -1000,
	2215, 2938, -1000, 2228, -1000, -1000, -1000, -1000, 2933, -1000,
	1845, 3628, -1000, -1000, 1011, 119048, 2193, 2017, 1011, 1896,
	1887, 3720, 1000, 2333, 2017, 58850, 2193, 58850, 2182, -1000,
	119048, -1000, 2144, 1391, -1000, 1709, -1000, -1000, 1932, 3594,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -102, -1000, -1000,
	837, -1000, 3322, -1000, 1174, 2194, 2194, -1000, -1000, 897,
	-1000, -1000, 483, -1000, 482, -1000, 130920, 2291, -1000, -1000,
	-1000, -1000, 1011, 2193, 1060, -1000, 3719, -1000, 2333, -1000,
	2193, -278, 1011, -283, 2245, -1000, -1000, -133, 2043, -1000,
	1707, 68011, 1922, -1000, -1000, 2280, 50718, 50137, -1000, 3618,
	-1000, -1000, 2604, -1000, 2841, 50137, 50137, 238, 65737, 1060,
	1011, -1000, -1000, 2553, 1011, 1128, 1060, 2017, -1000, 834,
	1603, 68011, -263, -1000, -1000, -1000, 138472, -1000, -1000, -1000,
	-1000, -286, -289, -1000, -186, 102060, -1000, 1060, -1000, 1060,
	2017, -1000, 2193, 130920, 2182, -263, -1000, 2193, 1223, -291,
	-1000, -1000, 2193, 1011, -1000, -1000, -1000, -1000, -1000, 481,
	-1000, 1011, 1060, 50137, 1060, -1000, -292, -1000, 2193, -1000,
}

var sqlPgo = [...]int{
	0, 4536, 4533, 4532, 4530, 4527, 4525, 4524, 4522, 4521,
	4520, 4519, 4514, 4513, 4509, 150, 4507, 4504, 4503, 4499,
	4494, 4491, 4490, 4486, 4483, 4482, 4480, 4477, 4476, 4474,
	4472, 4471, 4470, 4465, 4461, 4457, 4455, 4453, 4451, 4448,
	4446, 4442, 4441, 4440, 4438, 4437, 4435, 4434, 4431, 4429,
	4427, 4426, 4424, 4422, 4420, 4419, 4418, 4416, 4411, 4408,
	4405, 4404, 4402, 4401, 4400, 4394, 4392, 4391, 4389, 62,
	4387, 4384, 4381, 4380, 4379, 4376, 4374, 4373, 4372, 4369,
	4367, 4365, 4364, 4363, 4362, 4360, 4357, 4356, 4355, 4352,
	71, 4350, 284, 4349, 4347, 4346, 4345, 4344, 4343, 4342,
	4340, 4339, 4337, 4335, 4334, 283, 4333, 154, 173, 4332,
	4331, 3913, 4330, 4329, 282, 4325, 4324, 4323, 4321, 4320,
	297, 4319, 4318, 4317, 4316, 4315, 4313, 4311, 4310, 4309,
	4308, 4307, 4303, 98, 134, 4302, 4301, 1795, 4300, 4299,
	4298, 4297, 4296, 4295, 4291, 4290, 4289, 4288, 4285, 260,
	178, 4281, 281, 4280, 4279, 4277, 4276, 4275, 4273, 4269,
	4268, 4267, 4264, 4263, 4261, 4260, 4259, 4257, 4256, 4255,
	4252, 4251, 4250, 4249, 4247, 4244, 4243, 4242, 4240, 4239,
	4231, 4228, 4225, 4224, 4223, 4222, 4220, 4217, 4215, 4214,
	4213, 4208, 263, 225, 126, 4207, 4205, 280, 279, 4202,
	4201, 4200, 4198, 4196, 140, 4, 44, 4195, 4194, 96,
	94, 86, 79, 109, 106, 4189, 128, 4188, 137, 130,
	4187, 117, 113, 20, 37, 256, 254, 12091, 248, 4186,
	4185, 4178, 251, 205, 4175, 250, 4174, 4173, 4171, 4170,
	4169, 4167, 77, 48, 217, 4166, 4165, 149, 182, 187,
	189, 188, 185, 271, 60, 110, 90, 57, 43, 16,
	85, 228, 22, 1, 276, 4164, 273, 11, 151, 12,
	31, 4161, 4155, 4153, 4152, 3648, 122, 4151, 277, 252,
	181, 4149, 4147, 4144, 748, 4143, 4142, 50, 4141, 272,
	88, 112, 45, 139, 4138, 167, 174, 30, 4137, 179,
	73, 4136, 4135, 108, 97, 9008, 10052, 4134, 4132, 124,
	80, 157, 4370, 203, 195, 209, 224, 172, 177, 67,
	216, 207, 190, 210, 4131, 265, 4130, 3572, 183, 193,
	170, 5264, 4129, 4128, 4127, 93, 4126, 111, 4125, 4124,
	70, 17, 3, 2, 152, 38, 35, 10, 4123, 21,
	138, 49, 25, 4122, 28, 4117, 4116, 4115, 4109, 52,
	4107, 64, 176, 4104, 4103, 293, 4102, 107, 56, 99,
	4101, 23, 235, 4100, 237, 143, 4099, 4097, 266, 212,
	197, 4096, 83, 257, 4095, 4094, 4092, 4090, 4089, 4088,
	156, 8, 142, 4087, 4084, 153, 4083, 55, 249, 208,
	4080, 58, 4069, 4065, 191, 59, 163, 292, 135, 241,
	132, 236, 200, 242, 4058, 4057, 4056, 227, 4052, 4047,
	232, 175, 4045, 4044, 255, 299, 104, 47, 81, 247,
	84, 201, 169, 4043, 218, 4042, 4041, 294, 192, 231,
	40, 7, 6, 120, 116, 4038, 5, 245, 168, 239,
	133, 4034, 7083, 2546, 2807, 4033, 4032, 160, 131, 87,
	145, 165, 275, 100, 4029, 4028, 2411, 4027, 4026, 4025,
	4024, 199, 4023, 4022, 4021, 162, 214, 213, 4020, 121,
	72, 54, 24, 141, 264, 291, 129, 234, 215, 261,
	4019, 4018, 4016, 196, 4012, 89, 105, 180, 206, 268,
	66, 4010, 115, 4008, 164, 1838, 74, 171, 4007, 240,
	4006, 4005, 4004, 4002, 4001, 4000, 3999, 262, 246, 3997,
	3996, 3995, 34, 204, 3994, 274, 161, 238, 125, 76,
	3993, 101, 4177, 3992, 118, 219, 68, 13, 3991, 136,
	3990, 2209, 63, 3988, 0, 13828, 9305, 12096, 13572, 3987,
	5301, 3986, 3985, 3984, 226, 78, 3983, 3982, 3980, 114,
	3979, 92, 3978, 3977, 82, 3975, 26, 18, 19, 32,
	29, 374, 51, 3974, 3973, 61, 144, 158, 3972, 289,
	243, 3971, 3970, 3969, 3968, 102, 3967, 41, 3966, 42,
	3965, 3962, 53, 15, 36, 3961, 3960, 166, 3958, 127,
	220, 3957, 184, 3956, 91, 148, 3954, 3953, 3950, 69,
	65, 267, 222, 223, 95, 3948, 286, 3947, 211, 3944,
	3941, 27, 3940, 3939, 258, 123, 119, 46, 259, 147,
	39, 194, 230, 3937, 3935, 186, 3934, 3933, 3932, 287,
	3929, 3925, 33, 3923, 3922, 3919, 14, 3918, 3917, 221,
	3277, 3916, 3915, 9, 3910, 202,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 13, 13, 9, 9,
	9, 9, 10, 10, 10, 10, 10, 53, 53, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	39, 41, 40, 34, 34, 35, 35, 36, 37, 37,
	12, 12, 12, 8, 8, 8, 8, 8, 8, 8,
	8, 21, 21, 42, 42, 22, 22, 44, 44, 23,
	23, 45, 45, 611, 611, 611, 612, 612, 613, 613,
	613, 26, 47, 19, 20, 20, 20, 20, 614, 614,
	614, 614, 38, 27, 48, 31, 31, 31, 31, 31,
	207, 207, 207, 207, 25, 25, 43, 43, 250, 250,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	607, 607, 252, 252, 251, 239, 239, 240, 240, 241,
	241, 615, 615, 253, 253, 253, 254, 254, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 506, 506,
	506, 537, 537, 537, 537, 539, 539, 634, 634, 635,
	635, 635, 635, 635, 136, 136, 403, 403, 403, 57,
	57, 57, 57, 57, 602, 602, 209, 209, 209, 211,
	211, 210, 210, 210, 210, 210, 81, 81, 621, 621,
	620, 619, 619, 619, 622, 622, 622, 208, 208, 208,
	132, 132, 132, 132, 132, 132, 132, 132, 133, 133,
	134, 134, 212, 212, 212, 214, 214, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 218,
	18, 18, 18, 115, 115, 115, 115, 115, 115, 115,
	110, 110, 541, 541, 542, 542, 203, 203, 204, 204,
	204, 204, 205, 205, 206, 206, 206, 72, 72, 215,
	215, 217, 217, 216, 216, 216, 216, 216, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 60, 60, 60,
	60, 60, 61, 61, 61, 61, 61, 61, 62, 62,
	62, 62, 62, 62, 63, 63, 70, 70, 70, 70,
	70, 70, 70, 70, 194, 194, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 78,
	78, 78, 78, 78, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 637, 637, 638, 638, 639, 639, 640,
	640, 640, 640, 640, 640, 640, 640, 640, 640, 640,
	640, 640, 640, 640, 640, 640, 640, 640, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 87, 87, 363, 363, 326,
	326, 88, 88, 88, 89, 89, 90, 90, 74, 74,
	600, 600, 379, 379, 497, 497, 75, 608, 608, 608,
	610, 610, 609, 609, 92, 92, 402, 402, 93, 93,
	93, 93, 93, 93, 94, 94, 94, 94, 94, 94,
	94, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 102, 102, 102, 102, 102,
	103, 103, 103, 100, 100, 100, 97, 97, 97, 96,
	96, 96, 101, 101, 101, 599, 315, 315, 99, 99,
	99, 98, 98, 98, 380, 380, 104, 104, 104, 104,
	327, 105, 105, 105, 105, 105, 105, 105, 105, 108,
	108, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 499, 499, 4, 4, 245, 245,
	244, 244, 5, 5, 5, 248, 248, 247, 246, 106,
	106, 106, 464, 464, 111, 111, 111, 418, 418, 112,
	112, 112, 112, 112, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 604, 604, 372, 372, 278,
	278, 278, 278, 124, 124, 124, 124, 125, 125, 125,
	125, 126, 126, 199, 199, 142, 142, 142, 142, 141,
	141, 141, 141, 141, 141, 141, 141, 64, 64, 64,
	65, 65, 66, 66, 67, 67, 68, 68, 69, 69,
	69, 69, 69, 145, 145, 631, 631, 147, 144, 144,
	144, 144, 144, 143, 143, 146, 146, 146, 146, 148,
	150, 150, 150, 150, 150, 149, 149, 149, 149, 149,
	151, 151, 531, 531, 388, 388, 529, 529, 551, 551,
	530, 530, 333, 333, 333, 333, 333, 334, 334, 334,
	540, 540, 540, 540, 540, 540, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 200,
	200, 201, 202, 202, 202, 202, 202, 177, 177, 177,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 389, 389, 180, 180, 180, 164, 164, 153, 153,
	153, 153, 153, 153, 153, 158, 158, 158, 158, 158,
	158, 158, 158, 154, 154, 166, 166, 166, 166, 166,
	159, 159, 160, 160, 160, 161, 161, 161, 161, 187,
	187, 163, 163, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 155, 155, 155, 155, 168, 168, 168, 168,
	425, 425, 425, 192, 192, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 190, 190, 190, 190, 190, 190, 623, 623, 624,
	624, 624, 184, 184, 184, 184, 184, 184, 478, 478,
	178, 178, 178, 178, 183, 183, 183, 183, 186, 186,
	186, 186, 408, 408, 175, 175, 175, 176, 176, 176,
	181, 181, 182, 364, 364, 179, 179, 185, 185, 185,
	185, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	157, 157, 157, 157, 188, 188, 174, 174, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 641,
	641, 170, 170, 170, 169, 169, 169, 169, 172, 172,
	173, 173, 173, 173, 173, 173, 171, 162, 191, 601,
	601, 597, 597, 597, 597, 597, 597, 597, 597, 598,
	598, 598, 598, 603, 603, 116, 116, 116, 116, 116,
	116, 116, 127, 127, 127, 127, 127, 127, 127, 130,
	130, 117, 117, 117, 117, 117, 117, 117, 120, 120,
	118, 118, 118, 118, 119, 119, 82, 82, 82, 82,
	82, 17, 17, 17, 83, 83, 269, 269, 223, 223,
	223, 351, 351, 224, 224, 341, 341, 341, 341, 219,
	219, 220, 220, 221, 222, 222, 84, 84, 642, 642,
	642, 616, 616, 616, 617, 617, 617, 617, 617, 617,
	335, 335, 336, 336, 444, 444, 444, 444, 444, 339,
	339, 339, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 349, 350, 350, 342, 342, 348, 347, 347, 346,
	346, 345, 345, 343, 344, 344, 344, 353, 353, 352,
	355, 355, 354, 443, 560, 560, 562, 562, 562, 562,
	562, 562, 562, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	426, 426, 643, 643, 644, 645, 558, 558, 558, 559,
	554, 554, 555, 555, 555, 555, 555, 337, 337, 338,
	338, 338, 338, 556, 557, 370, 370, 482, 561, 561,
	563, 563, 565, 646, 646, 646, 646, 646, 646, 647,
	647, 647, 442, 442, 441, 441, 440, 440, 361, 361,
	566, 566, 566, 566, 567, 567, 567, 567, 567, 570,
	569, 568, 568, 568, 568, 568, 86, 86, 86, 405,
	405, 404, 404, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 196, 196,
	281, 281, 281, 80, 80, 80, 14, 14, 14, 14,
	14, 14, 14, 296, 296, 15, 15, 15, 618, 618,
	618, 85, 85, 85, 85, 85, 85, 359, 359, 359,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 606, 606, 605, 605, 282, 282,
	649, 649, 91, 91, 91, 91, 91, 91, 91, 91,
	500, 500, 501, 501, 79, 79, 79, 79, 79, 427,
	427, 424, 424, 423, 423, 369, 369, 480, 480, 480,
	481, 286, 286, 287, 287, 242, 242, 242, 33, 32,
	24, 24, 28, 28, 29, 29, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 30, 30, 50, 50, 50,
	50, 51, 51, 51, 51, 54, 54, 55, 55, 49,
	49, 49, 49, 52, 52, 46, 46, 56, 56, 56,
	56, 56, 625, 627, 627, 626, 626, 630, 630, 630,
	630, 630, 630, 628, 628, 629, 629, 632, 632, 633,
	633, 123, 123, 128, 128, 128, 128, 128, 129, 129,
	129, 129, 131, 131, 131, 131, 140, 140, 195, 195,
	195, 195, 195, 195, 195, 58, 58, 58, 58, 71,
	71, 71, 71, 138, 651, 651, 651, 139, 139, 139,
	650, 650, 279, 279, 437, 437, 438, 438, 652, 652,
	439, 439, 439, 439, 439, 272, 271, 273, 273, 274,
	274, 77, 77, 77, 262, 262, 261, 263, 263, 264,
	264, 259, 259, 543, 543, 266, 266, 266, 267, 267,
	255, 255, 256, 256, 257, 257, 258, 258, 270, 270,
	538, 538, 653, 653, 114, 114, 114, 198, 198, 325,
	325, 325, 434, 434, 434, 362, 362, 293, 293, 436,
	436, 436, 436, 436, 401, 401, 401, 197, 197, 377,
	377, 391, 391, 392, 392, 494, 494, 393, 121, 121,
	122, 122, 137, 137, 227, 227, 225, 225, 225, 225,
	225, 225, 225, 225, 232, 232, 233, 233, 234, 234,
	235, 236, 236, 236, 236, 381, 381, 237, 237, 237,
	226, 226, 226, 228, 228, 228, 228, 228, 228, 228,
	231, 231, 231, 231, 238, 238, 238, 230, 230, 577,
	577, 577, 579, 579, 581, 581, 580, 580, 576, 576,
	578, 578, 648, 648, 407, 407, 407, 358, 360, 356,
	356, 357, 357, 367, 367, 365, 366, 366, 368, 368,
	479, 479, 479, 243, 243, 243, 398, 398, 398, 398,
	399, 399, 430, 430, 428, 428, 428, 428, 429, 429,
	431, 431, 431, 432, 432, 433, 433, 395, 395, 396,
	396, 397, 397, 397, 397, 460, 460, 229, 229, 229,
	374, 374, 374, 375, 375, 450, 450, 450, 450, 450,
	450, 450, 450, 450, 450, 450, 451, 451, 449, 449,
	449, 449, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 484, 485, 485, 376, 376, 486, 435, 435, 595,
	595, 595, 596, 596, 477, 477, 487, 487, 487, 487,
	487, 487, 475, 475, 476, 476, 495, 496, 496, 411,
	411, 411, 411, 409, 409, 412, 412, 412, 412, 412,
	410, 410, 488, 488, 488, 488, 400, 400, 489, 489,
	489, 489, 490, 491, 491, 492, 492, 445, 446, 446,
	502, 502, 502, 502, 504, 373, 373, 373, 373, 373,
	553, 552, 552, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 519, 519, 519, 519, 519, 519,
	519, 505, 505, 505, 505, 505, 509, 509, 509, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	510, 510, 515, 515, 516, 516, 516, 511, 512, 517,
	517, 517, 517, 654, 654, 521, 521, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 507, 507, 507, 514,
	514, 514, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 419, 419, 421, 421, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	454, 454, 454, 454, 455, 455, 455, 455, 455, 455,
	455, 455, 455, 455, 455, 455, 455, 455, 455, 455,
	455, 455, 455, 455, 455, 455, 455, 455, 455, 571,
	571, 571, 571, 571, 571, 571, 571, 456, 456, 574,
	574, 575, 575, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 582, 582, 583, 583, 585, 585,
	586, 586, 587, 588, 588, 588, 589, 590, 590, 584,
	584, 591, 591, 591, 591, 592, 592, 593, 593, 593,
	593, 593, 594, 594, 594, 594, 594, 466, 466, 467,
	467, 473, 473, 473, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 332,
	332, 331, 283, 283, 283, 283, 283, 283, 386, 386,
	384, 384, 384, 387, 387, 385, 385, 383, 383, 382,
	382, 463, 463, 461, 461, 465, 465, 413, 413, 520,
	520, 520, 520, 520, 520, 520, 520, 414, 414, 414,
	422, 415, 415, 416, 416, 416, 416, 416, 457, 458,
	417, 417, 417, 459, 459, 468, 472, 472, 471, 470,
	470, 469, 469, 447, 447, 448, 448, 394, 394, 655,
	655, 390, 390, 493, 493, 493, 493, 329, 329, 378,
	378, 328, 328, 320, 320, 321, 321, 321, 321, 371,
	371, 474, 474, 522, 522, 523, 523, 524, 524, 525,
	525, 526, 527, 528, 462, 462, 304, 303, 290, 291,
	302, 301, 300, 289, 292, 297, 298, 299, 294, 295,
	311, 310, 309, 260, 265, 316, 317, 317, 319, 319,
	318, 318, 306, 307, 308, 498, 288, 322, 322, 323,
	323, 323, 324, 324, 324, 324, 284, 284, 285, 285,
	312, 312, 313, 314, 314, 305, 305, 305, 275, 275,
	275, 276, 276, 277, 277, 536, 536, 533, 533, 533,
	534, 534, 534, 535, 535, 535, 535, 532, 532, 532,
	532, 532, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 548, 548, 548, 548, 548, 548, 548, 548,
	548, 548, 548, 548, 548, 548, 548, 548, 548, 548,
	548, 548, 548, 548, 548, 548, 548, 548, 548, 548,
	548, 548, 548, 548, 548, 548, 548, 548, 548, 548,
	548, 548, 548, 548, 548, 548, 548, 548, 548, 548,
	548, 548, 548, 548, 545, 545, 546, 546, 546, 546,
	546, 546, 546, 546, 546, 546, 546, 546, 546, 546,
	546, 546, 546, 546, 547, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 550, 550,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 3, 4, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	6, 4, 4, 6, 9, 6, 8, 4, 4, 5,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 6, 4, 6, 6, 9, 6, 9, 6,
	5, 6, 5, 1, 1, 1, 1, 1, 1, 0,
	1, 6, 6, 4, 8, 7, 10, 9, 4, 4,
	4, 3, 4, 4, 4, 7, 7, 9, 8, 9,
	5, 3, 5, 7, 4, 12, 4, 12, 1, 3,
	5, 5, 2, 5, 3, 6, 4, 4, 4, 6,
	5, 6, 5, 6, 4, 8, 3, 8, 4, 2,
	3, 10, 3, 6, 4, 3, 1, 3, 4, 4,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 3, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 3, 12, 3, 1, 1,
	2, 1, 4, 0, 3, 3, 0, 4, 6, 0,
	5, 7, 6, 8, 7, 9, 8, 2, 1, 3,
	1, 3, 2, 5, 0, 1, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 1,
	3, 3, 3, 6, 4, 9, 7, 12, 9, 2,
	7, 2, 1, 1, 1, 3, 3, 0, 3, 1,
	3, 1, 1, 3, 2, 5, 0, 7, 5, 2,
	0, 1, 2, 3, 1, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 4, 3, 6, 6, 6, 6,
	6, 8, 4, 4, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 6,
	3, 8, 5, 3, 4, 3, 3, 4, 3, 4,
	4, 4, 3, 5, 7, 3, 3, 4, 3, 3,
	3, 3, 3, 2, 0, 1, 0, 1, 0, 4,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 1,
	2, 1, 2, 1, 2, 7, 3, 2, 0, 1,
	3, 3, 1, 0, 1, 2, 2, 1, 6, 5,
	1, 2, 1, 3, 2, 0, 7, 2, 5, 0,
	1, 3, 3, 1, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 6, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 1, 1, 3, 4, 6,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 3, 4, 3, 1, 2,
	2, 2, 4, 6, 3, 1, 2, 2, 7, 5,
	7, 2, 3, 0, 3, 5, 2, 3, 0, 2,
	3, 2, 3, 2, 7, 4, 7, 8, 8, 9,
	11, 5, 2, 6, 9, 4, 7, 7, 10, 7,
	10, 10, 13, 5, 2, 2, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	2, 4, 3, 2, 2, 1, 2, 1, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 3,
	5, 4, 6, 4, 3, 0, 1, 3, 2, 4,
	2, 4, 1, 6, 3, 1, 1, 5, 3, 3,
	2, 2, 6, 3, 3, 3, 3, 4, 4, 3,
	1, 3, 3, 2, 2, 1, 3, 3, 3, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 1, 1, 1, 2, 2,
	2, 1, 3, 3, 3, 3, 3, 2, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 3, 5, 7, 3, 3, 3, 4, 4,
	6, 5, 5, 5, 3, 4, 4, 3, 4, 4,
	3, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 4, 6, 4, 2, 6, 4, 3, 2,
	3, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 5, 3, 5, 3, 3, 4, 4, 5,
	0, 1, 1, 1, 1, 3, 2, 3, 4, 3,
	4, 3, 5, 3, 4, 4, 3, 4, 5, 3,
	4, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 3, 5, 4, 6, 4, 6, 4, 1, 0,
	3, 4, 4, 5, 7, 5, 3, 3, 3, 4,
	4, 5, 2, 0, 4, 2, 3, 4, 2, 3,
	3, 3, 5, 2, 0, 3, 3, 4, 3, 3,
	3, 3, 4, 4, 4, 4, 4, 4, 4, 3,
	4, 5, 4, 4, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 4, 3, 4, 4, 5, 1,
	1, 10, 10, 3, 5, 5, 5, 3, 5, 6,
	4, 4, 5, 5, 2, 3, 2, 5, 4, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 1, 2, 0, 1, 2, 1, 2, 1,
	2, 2, 1, 2, 1, 2, 1, 2, 2, 4,
	3, 3, 7, 3, 3, 7, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 3, 3, 6, 5, 8,
	3, 6, 6, 3, 12, 15, 1, 0, 1, 2,
	3, 0, 2, 0, 4, 0, 4, 5, 4, 1,
	1, 1, 3, 3, 1, 3, 10, 13, 0, 2,
	3, 1, 1, 0, 1, 2, 2, 2, 2, 1,
	1, 0, 1, 3, 1, 1, 1, 2, 3, 3,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 0, 1, 0, 1, 1, 0, 1,
	4, 1, 0, 3, 7, 7, 1, 1, 3, 7,
	1, 3, 11, 3, 2, 0, 3, 1, 2, 2,
	3, 2, 6, 2, 1, 2, 2, 3, 6, 4,
	2, 3, 5, 5, 5, 2, 5, 5, 2, 2,
	2, 0, 1, 1, 3, 4, 10, 11, 9, 5,
	3, 1, 5, 9, 7, 11, 3, 3, 0, 2,
	4, 3, 3, 1, 6, 1, 3, 1, 2, 0,
	1, 2, 3, 0, 1, 3, 3, 2, 2, 1,
	1, 1, 4, 0, 3, 0, 4, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 4, 2,
	3, 2, 2, 4, 7, 3, 4, 6, 5, 7,
	5, 5, 3, 3, 0, 2, 2, 2, 1, 1,
	1, 8, 10, 11, 8, 11, 5, 4, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 11, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 16, 19, 15, 18, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 5, 7, 2, 6, 7, 4,
	4, 5, 2, 4, 6, 6, 8, 6, 7, 8,
	9, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 6, 8,
	8, 4, 7, 3, 0, 7, 10, 1, 1, 1,
	1, 2, 2, 3, 0, 3, 0, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	2, 14, 16, 3, 1, 0, 4, 1, 0, 2,
	2, 3, 0, 1, 1, 4, 4, 5, 1, 0,
	3, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 4,
	8, 11, 7, 10, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 6, 4,
	5, 4, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 3, 2, 4,
	4, 0, 4, 4, 3, 4, 1, 5, 3, 4,
	5, 5, 1, 5, 1, 3, 2, 0, 3, 0,
	2, 3, 1, 3, 2, 0, 3, 5, 6, 4,
	6, 4, 3, 2, 1, 0, 5, 1, 0, 2,
	2, 2, 1, 1, 0, 1, 1, 1, 1, 0,
	4, 2, 1, 2, 2, 4, 1, 3, 1, 2,
	3, 2, 4, 1, 0, 1, 0, 2, 1, 0,
	2, 5, 7, 2, 1, 2, 4, 3, 5, 0,
	1, 3, 5, 1, 2, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 6,
	6, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	3, 0, 5, 4, 1, 2, 1, 4, 1, 1,
	2, 1, 1, 1, 1, 1, 0, 1, 2, 5,
	1, 4, 2, 5, 1, 4, 3, 3, 0, 1,
	2, 4, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 1, 0, 1, 4, 1,
	3, 3, 3, 5, 2, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 612, -107, -104, -72, -70, -111, -112,
	-93, -113, -106, -135, -140, -121, -122, -123, -136, -142,
	-195, -200, -201, -202, -3, -57, -59, -73, -92, -94,
	-105, -115, -114, -116, -124, -132, -127, -110, -64, -137,
	-141, -152, -196, -197, -198, 32, 31, 100, 80, 156,
	129, 138, 206, 393, 439, 451, 408, 143, 430, 413,
	-146, -147, 469, -58, -71, -139, -138, 73, 130, 423,
	-6, -14, -18, 29, 46, -60, -61, -62, -63, 62,
	-80, -76, -87, -81, -74, -75, -78, -636, 102, -578,
	-95, -98, -131, -640, 164, 224, -117, -118, -119, 375,
	-125, -126, 432, -128, -129, -130, 435, 165, -66, -65,
	158, -225, -227, -144, -143, -145, -199, -153, -154, -155,
	-156, -157, -158, -159, -161, -187, -162, -163, -164, -165,
	-166, -167, -171, -190, -168, -169, -170, -173, -172, -174,
	-179, -175, -176, -177, -178, -180, -181, -183, -184, -185,
	-186, -188, -189, 474, -182, -191, -160, 535, 49, 490,
	82, 148, 443, 21, -7, -8, -9, -10, -11, -12,
	-13, -17, -16, -56, -4, -5, -77, -79, -82, -83,
	-84, -91, -85, -86, -577, -96, -97, -100, -102, -103,
	-99, -101, 431, 585, -228, -226, 609, 550, -21, -26,
	-22, -23, -25, -27, -24, -28, -29, -30, -42, -47,
	-44, -45, -43, -46, -48, -49, -50, -51, -52, -53,
	-54, -55, -32, -38, -39, -33, -34, -35, -36, -37,
	-40, -41, -19, -20, -31, 572, 581, -231, -229, -230,
	-238, 461, 558, 510, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, -327, 2, -306, -312,
	-313, -314, -305, -275, -547, -550, 4, -544, -548, 171,
	234, 337, 21, 23, 22, 24, 25, 26, 27, 29,
	30, 41, 42, 44, 45, 46, 47, 48, 49, 53,
	55, 59, 60, 61, 62, 63, 64, 68, 73, 74,
	79, 80, 81, 82, 83, 84, 85, 91, 88, 89,
	90, 92, 94, 96, 97, 98, 99, 100, 101, 103,
	104, 105, 107, 108, 109, 117, 118, 119, 120, 121,
	123, 129, 124, 130, 133, 128, 132, 134, 136, 137,
	138, 141, 142, 143, 145, 146, 147, 149, 150, 151,
	153, 154, 156, 157, 158, 161, 159, 162, 160, 163,
	164, 165, 166, 169, 177, 178, 179, 184, 186, 187,
	188, 192, 193, 194, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 207, 211, 213, 214, 215, 216, 217,
	223, 224, 226, 227, 228, 229, 230, 235, 236, 237,
	240, 246, 247, 251, 252, 253, 255, 259, 260, 261,
	262, 263, 264, 266, 268, 267, 270, 273, 274, 277,
	278, 279, 280, 281, 282, 286, 287, 283, 288, 289,
	291, 292, 295, 293, 296, 297, 294, 298, 300, 301,
	302, 303, 304, 305, 306, 307, 308, 309, 310, 311,
	299, 314, 312, 316, 317, 318, 319, 320, 335, 330,
	331, 332, 324, 325, 321, 326, 322, 323, 327, 328,
	334, 329, 339, 340, 341, 344, 221, 346, 347, 350,
	352, 369, 355, 356, 357, 360, 361, 364, 367, 368,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 380,
	381, 383, 384, 385, 387, 388, 389, 391, 393, 394,
	396, 397, 399, 400, 401, 402, 403, 404, 405, 407,
	408, 410, 409, 411, 413, 415, 416, 417, 423, 430,
	424, 426, 427, 428, 429, 431, 432, 433, 434, 435,
	437, 438, 439, 441, 442, 443, 444, 445, 447, 449,
	450, 454, 455, 471, 472, 492, 451, 452, 453, 456,
	457, 458, 459, 460, 464, 462, 463, 465, 466, 467,
	469, 470, 473, 474, 476, 477, 478, 479, 480, 481,
	482, 485, 487, 488, 489, 490, 509, 491, 493, 497,
	498, 499, 500, 494, 495, 508, 502, 503, 505, 506,
	511, 512, 513, 514, 515, 516, 517, 518, 520, 528,
	529, 530, 532, 535, 536, 537, 538, 526, 540, 541,
	544, 545, 546, 549, 547, 548, 550, 552, 555, 556,
	557, 563, 562, 564, 565, 567, 568, 573, 574, 576,
	577, 578, 36, 50, 51, 54, 56, 58, 69, 70,
	71, 75, 125, 126, 155, 167, 168, 180, 195, 196,
	208, 210, 218, 219, 220, 241, 242, 244, 249, 271,
	343, 345, 362, 366, 382, 386, 390, 392, 406, 446,
	483, 496, 501, 521, 522, 523, 524, 531, 533, 558,
	559, 560, 566, 575, -327, 2, -306, 353, -299, 2,
	-275, -275, 393, 28, 2, 28, 381, 463, 513, 515,
	2, -604, -372, 2, 28, -278, -275, 102, 206, 461,
	-299, 2, -604, 206, -372, 25, 2, -275, 2, 367,
	22, 27, 66, 77, 98, 141, 166, 189, 192, -639,
	369, 400, 449, 465, 508, 518, 532, 2, 562, 292,
	462, 510, 234, 120, 537, 456, -618, 454, 455, 367,
	398, 441, 209, 551, -279, 2, 451, -275, 292, 2,
	612, 94, 74, 446, 466, -149, 2, 282, 529, -150,
	-151, -148, 521, -531, 456, 441, 314, -275, 612, 612,
	612, 28, -288, -275, 510, 234, 456, 120, 506, 612,
	2, 510, 372, 562, 462, 120, 403, 234, 537, 192,
	141, 27, 68, 46, 456, -618, 586, 587, 292, 127,
	-602, 2, -597, 4, -548, -544, -321, -320, 510, 516,
	120, -314, -305, 601, -313, 612, 612, 612, 612, 2,
	252, 253, 402, 401, 466, 467, 28, 612, 612, 612,
	612, 454, 2, 166, 22, 27, 66, 93, 98, 127,
	189, 192, 358, -637, 369, 400, 465, 508, 512, 518,
	532, -617, 491, 68, 429, 456, -616, -618, 292, 537,
	141, -423, 120, 282, 204, 545, 515, 513, 543, 133,
	240, 548, 547, 612, 612, -108, 2, 609, 32, 31,
	-107, -111, 143, 469, -218, 510, 245, 2, -275, 612,
	612, 612, 2, 252, 253, 454, 455, 28, 612, 612,
	190, -597, 506, 2, 612, 612, 612, 2, 28, 252,
	253, 454, 455, 245, 2, 68, 458, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 2, -193, 466, 491, 215, 47, 46,
	74, 28, 399, 79, 373, 121, 127, 150, 538, 207,
	234, 235, 260, 93, 94, -425, 44, 253, 68, 252,
	455, -623, 454, -478, 511, 457, 463, 505, 264, 451,
	529, 102, 552, 442, 578, 403, 404, 503, 417, 283,
	159, 191, 4, 120, 314, 441, 468, 268, 267, 521,
	282, 450, 376, 84, 612, -648, 2, 510, -650, 2,
	529, 529, 2, -650, 2, -650, 2, -650, 2, -651,
	529, 575, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, -226, -228, -227, 612, 612, 612, 612, 612,
	612, 612, -193, 466, 2, 74, 28, 28, -365, -367,
	542, 243, 152, 359, -225, -227, 2, -577, -529, 2,
	-452, -551, -454, 599, 600, 592, 507, 67, -331, 336,
	579, -466, 127, 543, 353, -550, -455, -468, 155, 369,
	446, -387, 8, 9, 5, 6, 7, -284, -456, -462,
	534, 170, 342, -324, 613, 10, 609, -574, -227, -467,
	37, 210, 65, -533, -323, -285, -505, 244, -322, -305,
	-571, -572, 4, -544, -545, -534, -508, -516, -512, -513,
	-519, -275, -547, 77, 111, 112, 110, 115, 114, 285,
	284, 116, 113, 468, 551, 66, 36, 218, 219, 249,
	343, 220, 75, -573, 142, -546, 241, 242, 483, 51,
	406, 180, 126, 125, 345, 56, 54, 559, -517, 122,
	521, 522, 523, 524, 195, 196, 58, 167, 168, 366,
	390, 501, 531, 533, 208, 271, 43, 106, 191, 239,
	222, 248, 250, 254, 272, 275, 315, 333, 338, 363,
	365, 440, 475, -654, 560, 496, 69, 70, -579, 409,
	-580, -299, -579, 612, 612, 614, 612, -356, -358, -360,
	2, 28, 139, 609, 2, -483, 2, -484, -488, -227,
	265, -487, 609, -485, 607, -306, 354, -575, 447, -571,
	-572, -284, -305, -323, 4, -544, -546, 611, -361, 609,
	120, 456, 510, 78, 234, 93, 166, 192, -418, 609,
	-275, 28, 353, 525, 614, -357, 397, -464, 609, 353,
	356, 190, 356, 60, 296, 2, 2, 2, 2, 2,
	218, -275, 510, 119, 2, 263, 2, 2, 2, 2,
	2, 2, 2, -380, 218, 2, -306, 562, -380, 218,
	2, -380, 218, 2, -424, 2, 87, -289, 218, 2,
	-275, -315, 218, 2, -310, -312, -319, 218, 2, -317,
	-275, -539, 218, 2, -537, 4, -544, 116, 468, -452,
	2, -137, 2, 60, -275, 562, 2, 471, 2, 609,
	-149, 2, 71, 529, 43, 466, -150, 2, -438, 2,
	-439, -271, -272, -273, -495, -274, 251, 396, 405, 582,
	131, 336, 578, -631, 190, 591, 525, -529, -529, -529,
	-388, 611, 2, 2, 2, 2, 2, 2, -488, 218,
	-306, 2, -303, -532, 4, -544, -548, -545, -549, -547,
	28, 31, 32, 33, 35, 37, 38, 39, 40, 57,
	65, 66, 72, 76, 78, 87, 93, 102, 110, 111,
	113, 112, 114, 115, 116, 127, 131, 135, 139, 140,
	144, 148, 152, 170, 172, 185, 189, 190, 206, 209,
	212, 225, 238, 243, 245, 265, 269, 276, 284, 285,
	336, 342, 348, 353, 354, 358, 359, 379, 395, 412,
	436, 461, 468, 486, 504, 510, 519, 525, 527, 534,
	542, 543, 551, 553, 561, 569, 570, 571, 572, -550,
	77, 2, -488, 218, 2, -309, 218, -488, -312, 2,
	-289, 2, -452, -611, 517, 162, 424, 2, -328, 218,
	-306, -308, -312, -310, 2, 2, 2, 2, -452, 2,
	-541, 2, -536, 10, -535, 5, 4, -544, -548, -545,
	-317, 2, -537, 218, 2, 28, 28, 562, 397, 245,
	525, 614, -378, -320, -321, -528, 8, -371, -275, 611,
	-452, 2, -137, -120, 2, 185, -452, 218, 2, -137,
	218, 2, -452, 218, 2, -137, 218, 2, -275, 2,
	-619, 2, -541, 218, 218, -275, 2, 296, 2, 2,
	532, 2, 98, 510, 119, 2, 428, -638, 449, 536,
	2, 2, 2, 2, 2, 2, 2, 510, -294, 2,
	-275, 185, 494, -317, 218, -318, 2, 462, -649, 409,
	-537, 218, 2, 562, -310, 218, 2, -310, 234, 247,
	-289, 218, 2, 515, 513, 515, 513, 190, 2, 245,
	2, 245, 2, -489, 2, -490, -484, -491, 607, 354,
	-499, 2, -498, -535, 558, -108, 609, -108, 609, 466,
	609, -541, -306, -306, -452, 2, -137, -120, 2, -452,
	2, -137, 2, -275, 2, -134, -541, -133, 609, 190,
	552, -275, 2, -452, 2, -137, -120, 2, -452, 2,
	-137, 2, -218, 185, 2, 120, 510, -193, 2, 185,
	553, 2, 8, 2, 225, -541, 457, 404, 177, 2,
	471, 2, 472, 74, -425, 578, 74, 190, 2, 190,
	2, -408, 2, 572, 397, 190, 2, 2, -601, 2,
	353, 190, 2, 190, 2, 190, 2, 190, 2, 190,
	2, -192, 467, 530, 509, 401, 253, 2, -137, 569,
	-120, 253, 252, -452, 569, 2, -624, 185, 455, -452,
	2, 528, 262, 160, 190, -408, 2, 190, 2, 190,
	2, 5, 2, 402, 492, 2, 251, 396, 492, 2,
	-306, 510, 562, 462, 120, 28, 2, 454, 2, 2,
	88, 89, 190, 2, 190, 2, 205, 190, 2, 190,
	510, -389, 611, 578, 2, -400, -488, -437, -438, -437,
	525, -365, -367, -193, 471, 2, -232, -398, -234, 185,
	-428, -429, -235, 276, 172, 348, -236, -407, 28, 139,
	-407, -407, 60, 610, 610, 11, 12, 76, 41, 599,
	600, 601, 602, 183, 603, 604, 597, 598, 596, 589,
	590, 594, 257, 258, 95, 593, 591, 86, 290, 448,
	173, 174, 175, 176, 425, 232, 34, 233, 14, 15,
	16, -331, 33, 358, 275, 579, 222, 475, 592, 17,
	18, 19, 248, 250, 338, 50, 225, -283, 369, -330,
	507, 67, -452, -452, -452, -452, -452, -452, -452, -452,
	365, 609, -394, -447, 607, -227, 609, 609, 609, 609,
	-528, -227, -452, -466, 610, -385, 609, -227, -466, -461,
	609, 446, 607, 609, -469, -452, 5, 5, 5, 609,
	611, -582, 573, 185, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	392, -510, 609, -509, 609, -509, -509, 563, -507, 609,
	581, 574, 609, -507, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 563, 614, -579,
	-361, 609, -390, -493, -452, 601, -390, -390, 353, -382,
	-452, 106, -411, 254, 315, 191, 272, 440, 239, -449,
	613, -449, -477, 581, -227, -485, -305, -227, -487, 609,
	-483, -477, -109, -528, -92, -105, -114, -137, -152, -197,
	-198, 601, -306, 609, 190, 609, 611, -532, 190, -371,
	-289, -316, -275, -306, -322, -323, -328, -300, -275, 2,
	2, 138, -382, -597, 537, 456, 28, 462, -539, -278,
	38, -463, -502, -503, -553, 613, -552, -505, -515, -511,
	-514, 382, 386, -534, 54, 559, -517, 244, 4, -544,
	-546, 241, 242, 483, 51, 406, 180, 126, 125, 345,
	56, 521, 522, 523, 524, 195, 196, 58, 560, 496,
	69, 70, -597, 537, 456, 28, 462, 185, -539, 185,
	-539, 2, 2, 155, 2, 2, 2, -275, -253, 614,
	64, 433, 155, -380, 218, -253, 155, -253, 155, -329,
	218, -328, -253, 155, -253, 614, 155, -253, 614, 155,
	611, 614, 155, -539, 2, -424, -531, -382, 38, -438,
	2, 127, 4, 5, -652, 614, 274, -334, 289, 335,
	214, 354, 576, 346, 131, -540, 5, 4, -462, -474,
	127, 282, 244, -522, -524, 8, -523, 9, -525, 599,
	600, -530, -529, 109, 611, -532, -250, 426, 469, 368,
	-249, 24, 29, 143, 236, 320, 556, 161, -346, 237,
	431, -343, 372, 155, 487, 546, -611, -614, 453, 517,
	162, 424, 90, 346, 469, 368, 426, 155, -404, -406,
	38, 118, 320, 367, 61, 228, 294, 295, 490, 566,
	155, 469, 368, 426, 368, -15, -264, 24, 143, -266,
	-261, 469, -614, 99, 426, 585, 431, 378, 502, 395,
	-614, -611, 270, -613, 568, 334, -252, 487, 546, -611,
	-614, 453, 426, -251, -348, -343, 372, 155, 613, 24,
	143, 426, 469, 368, -634, -635, 29, -245, -244, 24,
	143, -248, 225, -247, 24, 426, 368, -605, -296, -576,
	225, 572, 155, -296, -296, -488, 218, -628, 185, 2,
	-621, -133, 266, 5, 10, -541, -133, -378, 614, 614,
	-532, 601, 455, 454, 155, 155, 155, 155, 253, 185,
	336, 336, 572, 2, 2, 2, 2, 2, 192, -616,
	-639, 2, 2, -306, 218, -363, 353, -600, -379, 510,
	-306, 185, 336, 43, -309, 218, 2, -312, 562, -605,
	336, -311, 218, -306, 38, 609, 336, 2, -424, 2,
	234, -576, 336, -489, -325, -306, -484, -325, 469, -299,
	38, -449, -306, 610, 614, -499, -499, -541, -206, 572,
	190, 609, -218, 572, 572, 253, -496, 614, -495, 225,
	-542, -541, -134, -541, 429, 190, 253, -541, -600, -289,
	2, -306, 2, 510, 255, -541, -206, 225, -541, -541,
	-541, -531, 28, 472, 2, -192, 467, 530, 89, 472,
	2, -306, 510, 120, 234, 80, -628, 185, 2, -275,
	-603, 185, -598, 441, 456, 537, -597, -306, 120, -306,
	120, -306, 120, -306, -306, 2, 2, 2, 2, 2,
	85, 2, -137, -452, 2, 85, 2, 46, 488, -624,
	185, 2, 528, 2, 528, 2, -275, -275, -275, 491,
	274, -306, -306, -306, -307, -312, 457, 511, 538, 455,
	-452, 2, -641, 2, 190, 185, 2, 510, 234, 510,
	234, 120, 190, 74, 120, 28, 510, 452, 611, 4,
	-253, 614, -279, -232, -398, -531, -399, -398, -233, -232,
	-235, 185, 405, 547, 320, 473, 259, -429, -428, 28,
	-452, -433, 179, 319, -452, -431, -454, 599, 600, -523,
	-525, -381, 346, -226, -226, -226, -368, -479, -452, 395,
	234, -504, -502, -502, -304, -532, 521, -452, -452, -452,
	-452, -452, -452, -452, -452, -452, -452, -452, -452, -452,
	-452, -452, -452, -452, -452, -452, -452, -452, -452, -452,
	-452, -452, -452, -452, -452, -452, -452, -452, -452, -452,
	-452, -452, -452, 275, 222, 475, 50, 225, -452, 525,
	-452, -452, -452, -452, 312, 336, 342, 534, 170, 544,
	139, 346, -655, 504, 40, -459, -227, -386, 609, -473,
	35, 486, 28, -466, 609, 2, -447, -452, -448, -332,
	-330, -275, 599, 600, 601, 602, 603, 604, 589, 590,
	591, 14, 15, 16, 594, 598, 596, 597, 183, 95,
	593, 290, 448, 86, 173, 174, 175, 176, 257, 258,
	17, 18, 19, 34, 592, -383, -382, -382, 610, 561,
	28, 139, 601, 2, 610, 614, 38, 610, -452, -383,
	-465, -461, -382, -472, -471, 569, -419, -420, 577, 299,
	123, 216, 297, -421, 460, -526, 8, -532, 601, -583,
	178, 209, 609, 610, 2, 610, 2, 610, -452, 2,
	610, -452, 2, 610, -452, 2, 610, -452, 2, 610,
	2, 610, 2, -452, -452, -452, -452, -452, -452, -452,
	-382, 8, -526, -526, 521, 521, -526, -526, -526, -518,
	382, 383, 384, 385, 277, 278, 279, 280, 386, 387,
	388, 389, 304, 305, 306, 307, 300, 301, 302, 303,
	308, 309, 310, 311, 200, 201, 202, 203, 196, 197,
	198, 199, -518, -413, 2, -520, -382, 4, 577, 299,
	123, 216, 297, 460, 5, -413, 2, -414, 2, -452,
	-382, -415, -453, -454, 599, 600, 592, -331, -466, -416,
	2, -452, -383, -452, 57, 269, 527, -417, -452, 190,
	-382, -382, 2, -382, 2, -580, 38, -382, -374, 614,
	190, 38, 4, -374, -374, 609, 610, 614, -412, 213,
	293, 288, 247, -412, -483, -411, 254, -409, 363, -409,
	-409, -477, -290, 607, 615, -532, -477, -476, -475, 38,
	-299, 360, -477, -477, 611, 610, -476, 608, -595, 609,
	612, 612, 612, 612, 612, -306, 609, -382, -532, 611,
	493, 2, 610, 248, 248, 248, 248, 248, 353, 447,
	610, 525, -599, -315, -319, 511, 2, 572, -107, 355,
	610, 614, -373, 37, 607, 611, -526, 2, 2, -521,
	563, 609, 609, -420, 609, 190, -599, -319, 511, 2,
	-604, -372, -372, 525, -275, 2, -306, -380, -253, 155,
	-380, -380, -253, 614, 155, -289, -310, -315, -317, -319,
	-275, -537, -539, -253, -311, -631, 610, 529, -439, -333,
	405, 485, 427, 464, 506, 8, 9, 8, 9, 614,
	-532, 614, -632, 93, 525, 78, 609, 456, -268, 283,
	525, -443, 218, 78, -554, 93, -292, -555, -275, 72,
	543, 395, 189, 153, -632, 93, 395, -632, 93, 2,
	236, 93, 469, 491, 609, 28, 60, -488, 41, 41,
	28, -612, -613, 270, 190, 578, 510, 234, 456, 525,
	525, -488, -406, -502, 118, 294, 295, 60, -527, -522,
	599, 600, -527, 60, -527, -527, -527, 572, -309, -488,
	456, 525, 525, 525, 415, 415, -261, -150, 525, 525,
	28, -193, 434, 127, -653, 591, 415, 270, -613, 525,
	190, 614, 41, 41, 28, -612, 190, 525, -328, -290,
	557, 42, 557, 42, 557, 525, 42, 456, 525, 614,
	42, -244, -600, -600, -247, -541, -246, 318, 525, 525,
	-15, 469, -606, -280, 105, 326, 287, 327, 97, 323,
	96, 322, 103, 324, 104, 325, 564, 339, 565, 340,
	63, 321, 298, 328, 489, 329, -281, -282, 146, 374,
	555, 120, -537, -15, -15, 469, 368, 426, 155, -629,
	225, 28, -618, 225, -496, 225, -496, -320, -275, 611,
	-137, -452, -452, -137, -452, -137, 46, 155, 155, 2,
	2, -649, 263, 609, -337, 336, 190, -371, -497, 245,
	614, -379, -597, 155, -537, -405, -404, 336, -311, 218,
	2, 155, -361, 336, 149, 609, 403, 2, 155, -291,
	218, -276, -275, -424, -255, 514, 155, -402, 553, -434,
	-137, 609, 127, 38, -434, -391, -392, -494, -393, -292,
	609, -299, -449, -108, -498, 610, 610, 610, -205, 357,
	-204, -275, 5, -218, -362, -293, -292, 119, 407, 407,
	-212, 572, -133, -134, 610, 614, -496, 225, 494, -134,
	-541, -206, -206, -496, -496, -306, 185, -541, -206, -206,
	-206, 2, 2, 2, 2, -408, -306, -289, -328, -306,
	28, 611, -539, -539, -319, -315, -408, -289, -408, -289,
	-408, -289, -408, -408, -137, -452, 491, 2, 466, 185,
	185, 611, -408, -364, 436, 2, 403, 120, 510, 372,
	234, -306, -328, -306, -328, -289, 120, -289, 121, -306,
	4, -488, -399, -233, 354, 259, 473, -431, -432, -454,
	446, 447, -432, 446, 447, 8, 9, 8, 9, -237,
	477, 341, -380, 614, -242, 39, 135, 259, -306, 578,
	151, -452, -452, 525, -655, 504, -459, 151, -452, 312,
	342, 534, 170, 544, 139, 346, 190, 609, -453, -453,
	610, -384, -452, -452, 608, 617, 610, 611, 610, -367,
	614, -365, -452, -382, -382, 610, 611, -382, -371, 608,
	608, 614, 610, -470, -471, 144, -452, 525, 525, 525,
	525, 609, 610, 611, -588, 364, 609, 609, -452, 610,
	610, 610, 610, 38, 614, 614, 614, 610, 614, 614,
	614, 610, 610, 610, 614, 610, 578, 578, 610, 610,
	610, 610, 614, 610, 614, 610, 190, 610, 610, -422,
	379, 610, 11, 12, 599, 600, 601, 602, 183, 603,
	604, 597, 598, 596, 589, 590, 591, 86, 290, 448,
	14, 15, 16, -331, 248, 225, -453, -453, -453, -453,
	610, -457, -458, 190, 185, 38, -417, -417, -417, 610,
	190, -382, 610, 610, 609, -581, 292, 336, 610, -446,
	-445, 570, -493, -375, 2, -483, -301, -532, -446, -446,
	-382, -452, 254, 254, -410, 553, 353, -412, -483, -476,
	-528, -451, -450, 187, 39, 135, 330, 331, 332, 221,
	188, -476, -299, -361, -476, -476, -532, -477, -477, -475,
	610, -596, -528, 610, -376, -486, -575, -367, 611, -532,
	-215, -576, -194, 5, 342, -194, -194, -194, -194, -306,
	-539, 525, 525, 225, 25, 380, -502, 607, 608, 8,
	-532, 609, -526, -526, -526, -539, 190, 190, 225, 353,
	190, -537, 2, -253, -380, -253, -253, -328, -329, -253,
	-253, -253, -403, 572, -529, -438, 541, 83, 405, 521,
	-529, -249, 426, 469, -292, -292, -306, -222, -221, -219,
	-275, 5, -316, 204, 416, -537, 336, -443, 218, -254,
	336, 218, -300, -502, 609, -426, 574, 259, 259, 553,
	-292, -300, 259, 218, -292, 218, -300, 2, -300, -607,
	405, 347, -452, -220, -219, 60, -344, 281, 403, 337,
	-250, 426, 469, 368, -137, -137, -137, 609, -631, 553,
	138, -306, -328, -306, -316, -537, -311, 469, 368, 426,
	333, -322, -527, -527, -404, 469, 368, 426, -316, -537,
	-309, -537, -260, 218, -275, -260, 218, 456, -289, 415,
	578, 45, -653, 525, 190, -452, -452, -251, -137, -137,
	-137, 609, -290, -252, 426, 5, 218, -292, 5, -292,
	218, 5, -275, -292, -316, -537, -635, 24, 143, -292,
	-248, 591, -316, -537, -280, 374, -541, 342, 549, -289,
	-605, -296, 456, 525, 525, -488, -625, -626, 206, 439,
	456, 442, -539, -133, -209, 572, -133, -203, 229, 601,
	-602, -541, -275, 562, -275, -335, -338, -336, -292, -444,
	-443, -558, -559, -554, 275, 234, 543, 247, 171, 93,
	-223, -224, 574, 572, 155, -326, -306, 607, -206, -541,
	-306, -497, -317, -318, 155, -361, 336, -537, 38, 155,
	609, 2, 2, -310, 353, 336, -291, 218, -256, 145,
	-653, -289, -446, -375, -401, -436, 436, 353, -362, 558,
	-299, -401, -377, 614, 190, 591, 611, -362, -492, 601,
	-108, -108, -206, 614, 609, 591, 591, 609, -541, 610,
	614, 611, 609, 591, 591, -214, 357, -213, 147, 261,
	246, 479, 480, 481, 482, 137, 478, 124, 317, 230,
	-496, -541, -212, -134, 190, -496, 225, 190, -67, 572,
	510, -206, 613, 442, -275, -408, -408, -408, 466, 466,
	-275, -371, -302, -532, -289, -306, -303, -328, 185, 185,
	-289, 547, -432, 354, 286, -479, -243, 580, -306, 613,
	-452, -452, 151, 151, -452, -453, -453, -452, 151, 190,
	609, -452, -463, 33, 33, 610, 614, -448, -452, -330,
	610, 561, -367, -367, 610, 601, -532, 613, 610, -461,
	148, -452, 519, 299, 216, 297, -421, 297, -421, -421,
	-526, 5, -532, 601, -589, -295, 609, -275, 570, -366,
	359, 610, -504, -502, -452, -452, -452, -452, -452, -526,
	-507, -507, -522, -522, -452, -457, -452, -504, -502, -453,
	-453, -453, -453, -453, -453, -453, -453, -453, -453, -453,
	-453, -453, -453, -453, -453, -453, -453, -453, -453, 139,
	336, 346, -453, -458, -457, -452, -452, -502, 610, 610,
	610, -382, -107, 609, 292, -395, 209, -452, -496, 614,
	-395, -395, 610, -483, -483, 609, -452, 254, 608, 614,
	616, 591, 591, -361, 611, -475, -476, 608, 610, 614,
	610, 614, -435, 38, 610, -532, -446, -217, -216, 136,
	53, 107, 134, 342, 248, -627, 572, -539, -539, 456,
	356, 5, 8, 607, 608, 611, -526, 610, 610, 610,
	-539, -539, 456, -597, 537, 456, 28, -539, -253, -253,
	119, 320, -452, 525, 525, 610, 614, 591, 60, 225,
	155, 336, 555, 336, -555, 153, -560, -452, 609, 234,
	609, 609, 2, -239, -240, -241, 143, 469, 24, -633,
	2, 553, 155, -253, 155, -253, 576, 610, 614, -344,
	609, 609, 525, 456, -268, 525, 572, -382, -452, -207,
	127, -531, -614, 613, -614, 613, 456, 525, 525, 456,
	525, 525, 336, 155, 572, 169, 169, 578, -260, -452,
	-452, 185, 525, 572, -382, 525, -506, 48, 26, 336,
	-310, -253, 155, 525, 525, 537, 469, -133, -541, -541,
	342, -15, -316, -537, -311, 469, 368, 426, -604, -604,
	206, -319, -629, -496, -211, 357, -210, 147, 438, 137,
	261, 230, -496, -209, 190, 245, 572, -311, 2, 610,
	610, 614, 614, -561, -254, -306, -291, 234, 234, -298,
	-276, 38, 350, 350, 609, -306, -88, 572, -495, -528,
	-608, 572, 43, -309, 38, 155, -605, -137, -311, -500,
	-501, 5, 38, -306, 155, 353, 336, -257, 268, -653,
	-536, -576, -367, -401, -390, 337, 91, 610, -446, -392,
	-375, -452, 2, 610, -204, -205, -541, -541, -541, -206,
	-218, -293, 2, -542, -541, -541, 614, 609, 591, 591,
	591, 591, 591, 591, -212, -496, -133, -212, -134, -137,
	357, -306, 601, -408, -350, -349, 372, 346, -350, 446,
	446, 354, 179, 264, -242, -290, -452, -452, 151, 33,
	33, -452, -452, -463, 610, -452, -452, -382, 608, 5,
	-452, 610, 610, 8, -452, 610, 611, -590, -275, -452,
	610, 60, 610, 610, 614, 614, 610, 610, 610, 610,
	610, 610, 610, -458, 190, 139, 346, 609, 610, 610,
	-107, -460, 212, 60, -483, -460, -460, -410, -371, -483,
	-450, -290, 607, -290, 607, -532, -528, -486, 609, 611,
	-216, 591, -541, -541, -194, 206, -627, -627, 572, -319,
	608, 2, 607, -532, 610, -319, 190, -599, -319, 511,
	119, -292, -292, -221, -529, 510, 446, -260, 395, -443,
	155, 155, -562, 93, -564, 76, 171, 102, 336, 342,
	543, 395, 72, 127, 353, 412, -643, -644, -645, 38,
	583, 584, 610, -369, -480, -575, 609, -275, -369, -371,
	336, 499, 127, 353, 336, 127, 353, 567, 119, 2,
	537, 79, -292, -300, -219, -371, -371, -306, -316, -537,
	163, 610, 614, 591, 2, 601, 601, -316, -537, -311,
	-316, -537, -309, 155, -260, 370, 169, 525, -137, -452,
	163, 610, -290, 5, 5, 155, -287, 76, -292, 5,
	-292, -310, 119, 572, 456, 525, 525, 353, 353, 356,
	-625, -626, -209, 614, 609, 591, 591, 591, -209, -542,
	-133, 2, -361, -351, 236, -292, -559, -556, -557, 395,
	-444, -563, -565, 171, 395, -339, 609, -291, -276, 609,
	-137, 2, -222, 609, -337, 357, 608, -610, 357, -609,
	117, 137, -537, -405, -137, -311, -359, 572, -361, 610,
	614, 149, -427, 553, -290, -306, 155, -258, 267, -653,
	-536, -255, -430, -428, 140, 609, 353, -137, -367, 591,
	610, 610, 119, 610, -213, -214, -541, -133, -541, -541,
	-541, -133, -212, -496, -496, -68, -69, 234, 93, 377,
	-303, 510, 234, 609, 609, -242, -452, -452, -452, 610,
	-367, -532, 601, -584, 372, 610, -479, -452, -452, -453,
	190, 609, -463, 610, -585, 571, -452, -396, -397, -452,
	444, 108, 210, -585, -585, 610, -528, -528, 2, -541,
	356, 2, 525, 607, 2, 190, -539, 190, 190, 225,
	225, 38, 415, -443, -300, -300, -304, -297, -275, 171,
	218, 342, 567, -426, 259, 609, -453, 547, -306, 609,
	2, 217, 217, 30, 60, -646, 131, 238, 610, 614,
	-481, -286, -275, -452, -481, 610, 610, 342, 547, 342,
	567, -452, 547, -502, 609, -253, -253, 610, 610, -452,
	525, -531, 100, -529, 2, -614, -260, -289, -452, 185,
	-452, 525, 5, -253, -304, -253, -253, -287, 537, 352,
	-316, -537, -311, -630, 511, 463, 538, 457, 193, 445,
	-630, 185, -210, -211, -541, -133, -133, -209, 38, -345,
	-346, 2, -561, 259, -297, 259, 227, 154, -369, 609,
	609, -371, -642, 572, 610, -335, -223, -89, -90, 526,
	-495, 614, 609, 591, -361, 320, 119, 38, 5, 609,
	609, -275, 353, 609, -290, -270, 92, -653, -536, -256,
	-401, 337, -371, 93, -430, -459, -206, 609, -206, 610,
	-212, 614, 28, 609, 28, 609, -306, -328, -382, -382,
	610, -367, 60, 614, 610, 610, -453, -463, 610, -586,
	-587, -295, 614, 609, 609, 470, 608, 608, -539, 2,
	-539, -539, -539, 456, -260, 395, -275, -555, -564, -297,
	336, -224, 553, 572, -452, -453, -277, 609, -452, 609,
	609, 38, 127, 238, 132, 223, -442, -647, 101, 500,
	226, -480, -242, 610, -441, 553, 412, -453, -287, -369,
	609, 609, 609, 591, 190, -137, 609, -506, -253, -310,
	591, 525, 2, 2, 190, -604, 610, -620, 410, -137,
	-223, 609, -224, -340, 81, 94, 128, 217, 194, 235,
	491, 497, 28, -340, 610, -369, -369, 610, -341, 353,
	119, 320, 610, 38, -90, 9, -609, -610, -452, 38,
	119, -137, -500, -369, -306, -369, 353, -262, -261, 276,
	-536, -257, 610, -300, -401, -542, -69, -371, -371, 610,
	610, -591, 403, 447, 211, -382, -368, 610, 614, 38,
	-397, 2, 2, 2, -627, -319, 415, -254, 155, 213,
	610, -566, 291, -275, 610, -405, -405, 38, 132, 223,
	-347, -343, 609, -243, -481, -224, 213, -306, -615, 553,
	610, -353, -352, -349, -355, -354, -349, -382, -529, 100,
	370, -382, -287, -133, -539, -539, 353, -622, 191, -621,
	5, 10, -341, -370, -482, -292, -441, 610, 610, 82,
	119, -351, -137, 610, -137, 2, -359, 610, 610, -427,
	610, -306, -259, -543, 415, 417, -653, -258, -446, 140,
	610, 610, 610, 610, -592, -593, 50, 540, 109, -452,
	-592, -592, -587, -589, 190, 171, -440, 581, -567, -570,
	-569, 588, 476, 191, 371, 610, 499, 566, 610, 610,
	-646, -371, -440, -361, -452, -441, 610, 614, 558, 610,
	614, 558, 610, 190, 610, -253, -627, -253, -630, -208,
	572, 46, -269, -268, 610, 614, -442, -441, -347, 394,
	133, 143, -345, -642, -441, 609, -442, 609, -267, -266,
	-653, -522, -270, 140, 337, 547, -206, -594, 153, -593,
	391, 184, 446, 391, 184, -594, -594, -539, -297, -224,
	55, -569, 588, -570, 588, 547, 133, -446, 610, -566,
	-224, -352, 225, -354, 190, 370, 190, 454, -621, 30,
	-224, -482, -347, -442, -224, 447, 447, 2, -223, -341,
	-442, -369, -347, -369, -263, -264, -265, -371, -262, 337,
	547, 469, 109, 209, 520, 320, 33, 591, -568, 320,
	433, 64, 469, -568, -567, 609, 609, -539, 357, -224,
	-347, -446, 2, -341, -347, 610, -224, 610, -538, 368,
	-259, 469, -391, 446, 361, -593, -452, 23, 342, 127,
	-646, -382, -382, -253, -205, 609, -446, -224, -269, -224,
	-441, -446, -442, -653, -267, -391, -446, 610, 610, -205,
	-446, -446, -442, -347, -537, -263, -446, -342, -343, 525,
	610, -347, -224, 609, -224, -446, -382, -446, 610, -342,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 571, 572, 574, 575, 576, 578,
	579, 581, 583, 585, 586, 587, 589, 590, 592, 593,
	594, 595, 596, 598, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	685, 687, 0, 1468, 1470, 1472, 1474, 0, 841, 0,
	36, 37, 39, 0, -2, 348, 350, 352, 354, 0,
	386, 388, 389, 391, 393, 394, 395, 397, -2, 0,
	504, 505, 507, 509, -2, 0, 1055, 1057, 1059, 0,
	673, 675, 0, 1062, 1064, 1066, 0, 0, 697, 698,
	0, 1582, -2, 689, 691, 693, 695, 766, 768, 770,
	772, 774, 776, 778, 780, 782, 784, 785, 787, 789,
	791, 793, 795, 796, 798, 800, 802, 803, 805, 806,
	808, 810, 812, 814, 816, 818, 820, 822, 824, 826,
	828, 830, 832, -2, 835, 836, 837, -2, -2, 0,
	-2, -2, -2, 1486, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 61, 63, 448, 450, 452, 454,
	456, 459, 461, 463, 1640, 511, 513, 515, 517, 519,
	521, 523, 0, 0, -2, 1654, 0, 0, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 113, 114,
	115, 116, 117, 118, 119, 78, 79, 80, 82, 83,
	84, 85, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 110, 111, 76, 0, 0, 1613, 1615, 1617,
	1619, -2, 0, 0, 5, 9, 11, 13, 15, 17,
	19, 21, 23, 25, 27, 29, 573, 577, 580, 582,
	584, 588, 591, 597, 599, 601, 556, 557, 560, 2352,
	2370, 2371, 2372, 2375, 2376, 2377, 2378, 2379, 2380, 2844,
	2925, 2926, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409,
	2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419,
	2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429,
	2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439,
	2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449,
	2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459,
	2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469,
	2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479,
	2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489,
	2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499,
	2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509,
	2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519,
	2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529,
	2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539,
	2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549,
	2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559,
	2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569,
	2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579,
	2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589,
	2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599,
	2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609,
	2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619,
	2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629,
	2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639,
	2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649,
	2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659,
	2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669,
	2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679,
	2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689,
	2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699,
	2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709,
	2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719,
	2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729,
	2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739,
	2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749,
	2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759,
	2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769,
	2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779,
	2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789,
	2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799,
	2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809,
	2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819,
	2820, 2821, 2822, 2823, 558, 559, 1249, 0, 638, 636,
	2337, 639, 2638, 641, 643, 498, 499, 500, 501, 502,
	503, 0, 666, 652, 1652, 667, 669, 670, 671, 672,
	633, 631, 0, 671, 666, 2406, 664, 1466, 1467, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 510, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	427, 1308, 1309, 1310, 1451, 1452, 2686, 1493, 0, 245,
	686, -2, -2, 2809, -2, 720, 721, -2, -2, 735,
	739, 730, 2813, 0, 2689, 2673, -2, 742, 1469, 1471,
	1473, 839, 840, 2356, 0, 0, 0, 0, 0, 38,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 255, -2, -2, -2, -2, 0, 0, 2735,
	2458, 2305, 2372, 2308, 2303, 349, 351, 353, 355, 356,
	0, 0, 0, 0, 0, 0, 0, 387, 390, 392,
	396, -2, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 1129, 1121, 1122, 1373, 0,
	0, 0, -2, 506, 508, 561, 562, 0, 1641, 1641,
	569, 570, -2, 0, 0, 0, 0, 319, 309, 1056,
	1058, 1060, 1061, 0, 0, 0, 0, 0, 674, 676,
	0, 0, 2729, 287, 1063, 1065, 1067, 1068, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 690, 692, 694,
	696, 767, 769, 771, 773, 775, 777, 779, 781, 783,
	786, 788, 790, 792, 794, 797, 799, 801, 804, 807,
	809, 811, 813, 815, 817, 819, 821, 823, 825, 827,
	829, 831, 833, 834, 847, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, -2, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	949, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, -2, 1036,
	0, 0, 850, 853, 854, 855, 856, 857, 858, 0,
	922, 947, 948, 958, 838, 0, 1289, 1642, 1495, 1476,
	1490, 1495, 1478, 1479, 1480, 1481, 1482, 1487, 1489, 1483,
	1484, 1485, 42, 44, 46, 48, 50, 52, 54, 56,
	58, 60, 62, 64, 449, 451, 453, 455, 457, 460,
	462, 464, -2, 1611, 1612, 512, 514, 516, 518, 520,
	522, 524, 677, 0, 680, 0, 852, 679, -2, 0,
	1646, 1646, 1646, 0, 0, 1612, 1610, 0, 683, 684,
	746, 747, 1919, 0, 0, 0, 0, 0, 0, 0,
	0, 2179, 2007, 0, 748, -2, 2040, 2042, 2784, 2611,
	2809, 2178, 2044, 2045, 2046, 2047, 2048, 0, 2050, 2051,
	2052, 2053, 2054, 2055, 0, 2057, 0, 2062, 2063, 2064,
	0, 2791, 2282, 2366, -2, 0, 0, 2797, 2362, 0,
	2145, 2080, -2, -2, 2389, 2368, 1851, 1852, 1853, 1854,
	1855, -2, -2, 2827, 2084, 2085, 2086, 2087, 2088, 2089,
	2090, 2091, 2092, 2093, 2094, 0, 2772, 2792, 2793, 2798,
	2800, 2794, 2781, 2105, 2472, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1878, 1887,
	-2, -2, -2, -2, -2, -2, -2, 2785, 2786, 2803,
	2806, 2812, 2817, 2818, 2790, 2799, 2826, 2828, 2829, 2830,
	2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840,
	2841, 2842, 2843, 1879, -2, -2, -2, -2, 1629, 2652,
	1632, 1249, 1630, 1614, 1616, 0, 1618, 0, 0, 0,
	1623, 1649, 1647, 0, 1698, 1627, 1628, 1721, 1721, 1745,
	0, 1726, 0, 1745, 1641, 1772, 0, 1732, 2678, 2081,
	2082, 0, 2372, 2367, -2, -2, 2824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 634, 0,
	640, 642, 0, 0, 0, 665, 1651, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 431, 432, 433, 434,
	2792, 0, 0, 0, 439, 0, 441, 442, 443, 444,
	445, 446, 447, 215, 2792, 529, 554, 0, 215, 2792,
	532, 215, 2792, 535, 0, 538, 1371, 215, 2792, 541,
	2333, 215, 2792, 544, 546, 2341, 215, 2792, 550, 2348,
	2346, 551, 0, 553, 235, 231, 232, 233, 234, 1462,
	1463, 1464, 1465, 0, 1492, 1372, 688, 0, 714, 0,
	718, 719, 2780, -2, 0, 2698, 723, 724, -2, 726,
	1496, 1500, 1501, 1502, 1503, 1504, 0, 0, 0, 0,
	1509, 0, 0, 0, 0, 715, 716, 733, 734, 740,
	743, 0, 842, 843, 844, 845, 846, 75, 0, 2792,
	1772, 77, 0, 2327, 2397, 2398, 2399, 2400, 2401, 2825,
	2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854,
	2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864,
	2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874,
	2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884,
	2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894,
	2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904,
	2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914,
	2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923, 2924,
	2827, 81, 0, 2792, 86, 0, 2792, 0, -2, 99,
	0, 112, 0, 139, -2, -2, -2, 120, 0, 2792,
	0, 2302, -2, 0, 227, 310, 311, 312, 0, 617,
	0, 624, 322, 323, 2385, 2386, 2393, 2394, 2395, 2396,
	0, 1093, -2, 0, 1302, 1304, 1304, 0, -2, 0,
	0, 0, 1046, 2299, 2304, 1047, 2323, 1048, 2309, 0,
	357, 358, 359, 360, 361, 0, 362, 2792, 364, 365,
	0, 367, 368, 2792, 370, 371, 0, 373, 0, 375,
	0, 267, 271, 2792, 2792, 400, 403, 0, 405, 406,
	0, 408, 0, 0, 0, 412, -2, 428, 0, 425,
	415, 416, 418, 419, 420, 421, 422, 0, 468, 466,
	2338, 0, 0, -2, 2792, 0, 1090, 0, 0, 1351,
	-2, 0, 1295, 0, 1358, 2792, 1354, 0, -2, 0,
	1639, 2792, 1513, 1125, 1126, 1127, 1128, 1784, 495, 0,
	1546, 0, 1548, 0, 1568, 1778, 1721, 0, 0, 1783,
	0, -2, 614, 2355, -2, 564, 0, 565, 0, -2,
	0, 336, 0, 0, 1071, 1073, 1074, 1076, 1077, 1080,
	1081, 1082, 1083, 0, 1085, 1758, 288, 290, 0, 0,
	0, 0, 1070, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 0, 0, 699, 0, 0, 848, 849, 0,
	0, 865, 866, 867, 0, 336, 2690, 2647, 2494, 874,
	0, 877, 880, -2, 0, 0, 0, 0, 884, 0,
	889, 890, 891, 0, -2, 0, 898, 900, 1054, 902,
	0, 0, 904, 0, 908, 0, 911, 0, 913, 0,
	915, -2, -2, -2, 923, 924, -2, 929, -2, 0,
	933, -2, 0, 936, 0, 939, -2, 0, 949, 945,
	946, 0, 0, 0, 0, 966, 967, 0, 976, 0,
	979, 980, 981, 0, 985, 986, 0, 988, 989, 990,
	991, 0, 2762, 2695, 2458, 0, 999, -2, 1005, 1007,
	0, -2, 0, 1023, 0, 1027, 0, 0, 1035, 0,
	0, 851, 0, 859, 860, 215, 1776, 1475, -2, 1477,
	0, -2, 0, 678, 0, 682, 1671, 1597, 1594, 0,
	1668, 1669, 1598, 0, 0, 0, 1605, 0, 1644, 1645,
	0, 0, 0, 1584, 1585, 0, 0, 0, 0, 2184,
	2185, 2186, 2187, 2200, 2188, 2189, 2199, 2197, 2198, 2190,
	2191, 2196, 2210, 2211, 2201, 2202, 2192, 2205, 2203, 2204,
	2206, 2207, 2208, 2209, 0, 0, 2215, 0, 2193, 2194,
	2195, 2223, 0, 0, 2224, 0, 2226, 0, 2216, 2212,
	2213, 2214, 0, 1986, 1988, 2290, 0, 0, 0, 2222,
	2217, 2218, 1924, 1925, 1926, 1927, 1928, 1961, 1965, 1966,
	0, 0, 2041, 2287, 2286, 2043, 0, 0, 2238, 0,
	2056, -2, 0, 2179, 2233, 0, 0, 2065, 2066, 2067,
	0, 0, 2238, 0, 0, 2281, 2077, 2078, 1916, 0,
	0, 2147, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 1864, 0, 1866, 0, 1867, 1868, 1875, 1888, 0,
	0, 0, 0, 1892, 0, 0, 0, 0, 0, 0,
	0, 2262, -2, 0, 0, 0, 0, 1880, 0, 1631,
	0, 0, 1702, 2291, 2295, 2296, 1702, 1702, 0, 0,
	2239, 1769, 1769, 0, 0, 1764, 1764, 1764, 1762, 1745,
	0, 1745, 1755, 0, 1745, 1745, 0, -2, 1726, 0,
	0, 1755, 0, 1739, 602, 604, 606, 608, 609, 610,
	612, 1773, 1774, 0, 0, 0, 0, 2373, 0, 0,
	0, 0, 2345, 0, 0, 2358, 0, 0, 2332, 382,
	383, 0, 0, 0, 2745, 2689, 0, -2, 645, 668,
	1641, 0, 2241, 1799, 1803, 0, 1805, 1806, 1807, 1808,
	1809, 0, 0, 1800, -2, 1876, 1878, 1899, 2390, 2391,
	2392, 1859, 1860, 1861, 1862, 1863, 1871, 1858, 1858, 1858,
	1869, 1898, 1890, 1898, 1894, 1844, 1845, 1846, 1881, 1882,
	1883, 1884, 0, 2745, 2689, 0, -2, 0, 655, 0,
	0, 1579, 429, 0, 436, 437, 438, 0, 525, 0,
	213, 214, 0, 215, 2792, 530, 0, 533, 0, 215,
	2792, 2297, 539, 0, 542, 0, 0, 548, 0, 0,
	0, 0, 0, 215, 1581, 0, 0, 0, 0, -2,
	728, 736, 737, 738, 0, 1498, 0, 1505, 757, 758,
	759, 1507, 1508, 0, 1510, 731, 760, 761, 762, 763,
	764, 765, 0, 2311, 2312, 2313, 2314, 2317, 2318, 0,
	0, 729, 750, 732, 0, 744, 121, 1448, 0, 0,
	168, 0, 1448, 1448, 0, 0, 0, 0, 196, 0,
	0, 1159, 0, 0, 0, 0, 139, 153, 164, 133,
	134, 135, 0, 0, 0, 0, 0, 0, 87, 1271,
	0, 1274, 0, 0, 0, 0, 0, 0, 0, 1287,
	0, 0, 0, 0, 0, 101, 102, 0, 0, 107,
	108, 0, 152, 0, 0, 0, 0, 0, 1543, 0,
	143, 139, 0, 0, 138, 140, 123, 0, 0, 139,
	154, 166, 0, 202, 204, 1156, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 237, 0, 616, 618, 0,
	0, 622, 0, 625, 0, 0, 0, 1296, 0, 0,
	0, 1638, 0, 0, 0, 0, 2792, 1446, 0, 1431,
	0, 1758, 2543, -2, -2, 288, 1758, 1045, 0, 0,
	2373, 2307, 0, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 0, 404, 407, 409, 410, 411, 0, 1350,
	0, 417, 458, 1218, 2792, 0, 0, 485, 480, 0,
	482, 0, 0, 0, 1270, 2792, 1268, 2342, 0, 1293,
	0, 1249, 2792, 2340, 0, 0, 0, 1359, 2382, 1368,
	1372, 1531, 0, 497, 0, 1549, 1551, 0, 0, 1779,
	0, 1781, 1721, 1641, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 1084, 294, 0, 1757, 0,
	0, 324, 1758, 288, 2664, 0, 1069, 336, 336, 1758,
	701, 1758, 703, 0, 0, 868, 869, 0, 336, 336,
	336, 875, 876, 878, 879, -2, -2, -2, -2, 881,
	882, 973, 0, 0, 0, 972, 892, 0, 894, 897,
	901, 0, 1039, 2673, 2689, 2745, 1052, 973, 2458, 973,
	2458, 973, 2458, 973, 973, 917, 961, 969, 928, 935,
	0, 930, 934, 937, 940, 0, 942, 950, 0, -2,
	0, 953, 0, 955, 0, 957, 973, 974, 977, 984,
	987, 992, 993, 994, 995, 2353, 996, 997, 998, -2,
	1002, 1003, 0, 1014, 1019, 1020, 1016, 0, 0, 0,
	0, 0, 0, 1030, 1031, 0, 0, 1038, 0, 861,
	1288, 0, 1488, 1671, 1597, 681, 1588, 1670, 1589, 1596,
	1599, 0, 0, 1601, 0, 1603, 0, 1666, 1667, 1674,
	1675, 0, 1685, 1686, 1678, 0, -2, 0, 0, 1681,
	1682, 1607, 0, 1624, 1625, 1626, 1655, 1658, 1387, 0,
	2925, 1920, 1794, 1921, 1922, 2326, 0, 1929, 1930, 1931,
	1932, 1933, 1934, 1935, 1936, 1937, 1938, -2, -2, -2,
	-2, -2, -2, -2, -2, 1947, 1948, 1949, 1950, 1951,
	1952, 1953, 1954, 1955, 1956, 1957, -2, -2, -2, 1962,
	1963, 1964, -2, 2225, 2227, 0, 2290, 0, -2, 0,
	-2, -2, -2, -2, 1983, 0, 1985, 1990, 1992, 1994,
	0, 0, 0, 0, 2289, 2004, 2273, 2274, 0, 0,
	2181, 2182, 2183, 1989, 0, 2008, 2288, 2285, 0, 0,
	2219, 0, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191,
	2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201,
	2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211,
	2212, 2213, 2214, 2215, 2216, 0, 2237, 1654, 2069, 0,
	0, 0, 0, 2076, 2061, 2235, 0, 2234, 0, 0,
	0, 2245, 0, 2280, 2276, 0, 2324, 1915, 1902, 1903,
	1904, 1905, 1906, 1907, 1917, 0, 2321, 2359, 2365, 2155,
	0, 0, 0, 2106, 2107, 2108, 2109, 2110, 0, 2112,
	2113, 0, 2115, 2116, 0, 2118, 2119, 0, 2121, 2122,
	2123, 2124, 2125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821,
	1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831,
	1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841,
	1842, 1843, 0, 0, 2127, 0, 2248, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 2129, 0, 2131, 2239,
	2259, 0, 0, 2009, 0, 0, 0, 0, 2179, 0,
	2134, 2239, 2267, 0, 0, 0, 0, 0, 2239, 0,
	2272, 0, 2141, 0, 2143, 1633, 0, 0, 1789, 0,
	0, 0, 2294, 1789, 1789, 0, 1697, 0, 0, 1765,
	1766, 1767, 1768, 0, 0, 1769, 0, 1759, 1763, 1760,
	1761, 1755, 1718, 0, 0, 2328, 1755, 1724, 1754, 0,
	1249, 1744, 1755, 1755, 0, -2, 1728, 1745, 0, 0,
	603, 605, 607, 611, 613, 0, 0, 1654, -2, 0,
	-2, 338, 1248, 0, 0, 0, 0, 0, 0, 635,
	637, 0, 0, 545, 0, 0, 651, 0, 629, 0,
	632, 0, 1790, 1793, 0, 0, 1804, 1810, 1811, 0,
	-2, 0, 0, 1900, 0, 0, 0, 0, 0, 663,
	0, 666, 0, 0, 0, 440, 555, 215, 527, 0,
	215, 215, 536, 0, 0, 215, 547, 215, 2349, 215,
	2347, 236, 552, 1580, 248, 0, 717, 0, 1497, 1506,
	0, 754, 0, 756, 0, 2315, 2319, 2316, 2320, 0,
	745, 0, 0, 0, 0, 1447, 0, 0, 1394, 0,
	0, 172, 2792, 0, 217, 0, 0, 1211, 2334, 0,
	1201, 0, 0, 2480, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	130, 0, 136, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 1272, 1273, 1275, 1282, 1284, 0, 1278, 2322,
	0, 0, 1279, 0, 1281, 1283, 1285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 1305, 0, 0,
	1306, 1307, 1519, 1520, 0, 1542, 1543, 0, 0, 0,
	0, 0, 0, 0, 132, 0, 0, 0, 0, 2301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 619, 620, 621, 626, 0, 627, 0, 0, 0,
	1298, 0, 1346, 1344, 1320, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 0, 0,
	0, 0, -2, 1300, 1301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 327, 2300, 2310, 0,
	1078, 1079, 363, 366, 369, 372, 254, 0, 0, 402,
	413, 0, 0, 1131, 1103, 0, 0, 467, 336, 0,
	0, 481, 485, 2351, 1088, 1266, 1269, 0, 1249, 2792,
	1316, 0, 0, 0, 0, 0, 0, 1357, 0, 0,
	2792, 2329, 2381, 2382, 1533, 1543, 0, 1789, 0, 1566,
	1552, 0, 0, 0, 1566, 1570, 1571, 1573, 1574, 0,
	0, 1780, 1786, 563, 615, 1641, 1641, 336, 334, 2614,
	332, 329, 331, 0, 0, 1555, 1557, 0, 0, 0,
	280, 0, 291, 1758, 289, 0, 294, 0, 0, 1758,
	288, 0, 479, 700, 705, 863, 0, 336, 871, 872,
	873, 919, 963, 971, 1018, 883, 885, 886, 887, 0,
	0, 0, 1053, 1049, 1050, 1051, 903, 973, 906, 973,
	909, 973, 912, 914, 932, 938, 951, 944, 952, 0,
	0, 0, 965, 982, 0, 1001, 0, 0, 0, 0,
	0, 0, 0, 1024, 1025, 1026, 1028, 1033, 1032, 1037,
	862, 1777, 1592, 1593, 1595, 0, 1604, 0, 0, 1680,
	-2, -2, 1679, 1683, 1684, -2, -2, -2, -2, 1600,
	0, 1609, 1606, 0, 1665, 1385, 1386, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 2005, 0, -2, 1984,
	1987, 1991, 1993, 1995, 0, 0, 0, 0, 0, 0,
	2228, 0, 2230, 2006, 2283, 2286, 2221, 0, 2177, 0,
	0, 1653, 1654, 1654, 0, 2075, 0, 2236, 0, 2243,
	2244, 0, 2068, 0, 2277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2079, 0, 0, 0, 0, 2111,
	2114, 2117, 2120, 0, 0, 0, 0, 2100, 0, 0,
	0, 2104, 1870, 1856, 0, 1898, 1896, 1897, 1891, 1898,
	1895, 1848, 0, 1847, 0, 2126, 0, 2128, 2130, 0,
	0, 2132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2012, 2013, 2014, 2034,
	2133, 2265, 2266, 0, 0, 0, 0, 0, 0, 2139,
	0, 2271, 2140, 2142, 1641, 0, 1634, 0, 1699, 1688,
	1788, 0, 2292, 1758, 1701, 1703, 2293, 2331, 1688, 1688,
	0, 2240, 0, 0, 1749, 0, 0, 0, 1751, 1722,
	0, 0, 1716, 0, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1723, 1249, 1753, 1725, 1729, 2359, 0, 1755, 0,
	1740, 0, 1742, 1775, 0, 1734, 1737, 0, 0, 2374,
	1789, 0, 376, 384, 385, 377, 378, 379, 380, 0,
	1434, 0, 0, 0, 0, 0, 2242, 0, 1795, 0,
	1801, 0, 0, 0, 0, 653, 0, 0, 0, 0,
	0, 1578, 435, 526, 215, 531, 534, 2298, 215, 540,
	543, 549, 244, 0, 713, -2, 752, 753, 755, 0,
	751, 169, 1448, 0, 0, 0, 1390, 0, 1114, 0,
	1109, 1110, 1392, 1396, 1402, 1405, 0, 174, 2792, 186,
	0, 2792, 0, 1175, 0, 0, 0, 0, 0, 0,
	1450, 0, 0, 2792, 215, 2792, 215, 190, 192, 195,
	0, 201, 197, 0, 1111, 0, 1163, 0, 0, 1166,
	122, 1448, 0, 0, 125, 129, 141, 0, 0, 0,
	151, 0, 0, 0, 1407, 1411, 1419, 0, 0, 0,
	1276, 1277, 1280, 1286, 88, 0, 0, 0, 1415, 1417,
	1423, 100, 103, 2792, 2343, 105, 2792, 0, 1389, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 127, 131,
	142, 0, 1425, 124, 0, 230, 0, 0, 220, 215,
	2792, 0, 222, 0, 223, 224, 238, 0, 0, 0,
	623, 0, 1091, 1092, 1345, 0, 1291, 1292, 0, 1303,
	1297, 0, 0, 0, 0, 0, 1427, 1428, 0, 0,
	0, 1446, 1443, 1758, 250, 0, 1758, 258, 0, 2306,
	0, 272, 399, 0, 0, 0, 0, 1130, 1229, 1132,
	1134, 1135, 1136, 217, 0, 2382, 1201, 2532, 2382, 0,
	0, 1098, 0, 0, 0, 473, 469, 0, 478, 484,
	483, 489, -2, 0, 0, 0, 0, -2, 0, 0,
	1361, 1355, 1356, 0, 0, 0, 0, 2792, 1535, 1543,
	0, 1639, 1654, 496, 1544, 1566, 0, 0, 0, 1554,
	1550, 1547, 1789, 0, 0, 0, 0, 0, 1782, 1785,
	566, 567, 313, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 292, 0, 295, 0, 0,
	0, 300, 301, 302, 303, 304, 305, 0, 0, 0,
	294, 325, 282, 1758, 0, 294, 0, 0, 702, 0,
	0, 870, 0, 893, 896, 905, 907, 910, 954, 956,
	973, 983, 1008, 2330, 1009, 1153, 0, 1153, 0, 0,
	1029, 1602, 0, 1677, 1608, 1659, 1660, 0, 1387, 0,
	1923, 1968, 0, 0, -2, 0, 0, 1972, 0, 0,
	0, -2, 0, 0, 0, 2229, 2231, 0, 2285, 2220,
	2070, 0, 0, 0, 2074, 2058, 2059, 0, 2180, 2246,
	2275, 2279, 0, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	0, 2325, 2360, 2364, 2153, 2154, 2158, 2339, 0, 0,
	0, 2083, 0, 0, 0, 0, 0, 0, 0, 0,
	1889, 1893, 0, 0, 2247, 2258, 2260, 2010, 2011, 2015,
	2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, -2,
	-2, -2, 2028, 2029, 2030, -2, -2, -2, 2035, 0,
	0, 0, 2261, 2263, 2264, 2268, 2269, 0, 2136, 2137,
	2138, 2270, 0, 1641, 1635, 1696, 0, 1787, 1700, 0,
	1696, 1696, 1648, 1747, 0, 0, 1771, 0, 1719, 0,
	1720, 0, 0, 1752, 0, 1727, 1730, 1731, 1741, 0,
	1733, 0, 1736, 0, 2070, -2, 337, 339, 341, 0,
	344, 345, 0, 0, 0, 644, 0, 1434, 1434, 0,
	646, 630, 0, 0, 1797, 0, 0, 1873, 1877, 1901,
	657, 659, 0, 0, 2745, 2689, 0, 656, 528, 537,
	246, 0, 1756, 0, 0, 198, 0, 0, 0, 0,
	0, 0, 216, 0, 1210, 0, 1173, 0, 0, 1200,
	0, 0, 1216, 176, 177, 178, 0, 0, 0, 0,
	188, 0, 0, 184, 0, 194, 200, 199, 0, 1160,
	0, 0, 0, 0, 1395, 0, 0, 0, 148, 149,
	150, 0, 155, 0, 156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1525, 1526, 0, 1516, 145,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	1384, 240, 0, 0, 0, 0, 0, 0, 1290, 1348,
	1349, 1299, 1408, 1412, 1420, 0, 0, 0, 0, 0,
	671, 1445, 0, 258, 256, 0, 259, 0, 262, 263,
	0, 0, 258, 252, 0, 0, 0, 1249, 414, 1101,
	1217, 0, 0, 1219, 1137, 1141, 0, 2382, 2382, 0,
	2336, 0, 1099, 0, 0, 1218, 465, 0, 472, 0,
	486, 0, 0, 1270, 0, 0, 1294, 1319, 1249, 0,
	1360, 1362, 0, 1370, 0, 0, 0, 1537, 1543, 0,
	1530, 1531, 1673, 1545, 1564, -2, 0, 0, 1654, 1572,
	1569, 1575, 1576, 0, 333, 0, 328, 330, 0, 316,
	0, 1556, 1558, 0, 1072, 1075, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 294, 1758, 284, 1758, 320,
	0, 864, 888, 964, 1010, 1152, 0, 0, 1012, 0,
	0, 1676, 1663, 1664, 1661, 1387, 1970, 1974, 0, 0,
	0, 1976, -2, 0, 1998, -2, -2, 2232, 2284, 2049,
	1654, 2071, 2073, 2060, 2278, 1918, 0, 2160, 2157, 0,
	2144, 0, 2095, 2096, 0, 0, 2099, 2101, 2102, 2103,
	1857, 1850, 1849, 2257, 0, 0, 0, 0, 2135, 1636,
	0, 2149, 0, 0, 1704, 2149, 2149, 1748, 0, 1750,
	1717, 1705, 0, 1714, 0, 2360, 1743, 1735, 0, 0,
	342, 0, 346, 347, 381, 0, 647, 648, 0, 0,
	1791, 1796, 0, 1802, 1872, 0, 0, 0, 0, 0,
	247, 170, 171, 1115, 1113, 1399, 1403, 1400, 0, 173,
	0, 0, 1174, 0, 1177, 0, 0, 0, 0, 1184,
	1201, 0, 0, 0, 0, 0, 0, 1203, 0, 1202,
	0, 0, 1233, 0, 1375, 1382, 0, -2, 0, 0,
	0, 180, 206, 0, 0, 0, 0, 209, 1449, 182,
	0, 0, 215, 215, 1112, 0, 0, 1391, 1393, 1406,
	0, 0, 0, 0, 158, 0, 0, 1409, 1413, 1421,
	1416, 1418, 1424, 0, 106, 0, 1527, 0, 144, 0,
	0, 0, 1426, 228, 229, 0, 215, 0, 215, 221,
	215, 1384, 0, 0, 0, 0, 0, 0, 0, 0,
	1429, 1430, 249, 0, 0, 0, 0, 0, 251, 326,
	258, 401, 0, 1162, 0, 1229, 1221, 1222, 1223, 0,
	1133, 1228, 1230, 0, 0, 1138, 0, 0, 0, 0,
	1118, 1100, 0, 1131, 1103, 0, 470, 487, 0, 490,
	0, 493, 1089, 1267, 1311, 1249, 1314, 0, 0, 1352,
	0, 0, 0, 0, 0, 0, 0, 1539, 1543, 0,
	1532, 1533, 1566, 1672, 0, 0, 0, 1553, 1673, 0,
	335, 336, 0, 336, 296, 0, 297, 298, 299, 306,
	307, 308, 283, 286, 294, 704, 706, 0, 0, 712,
	1151, 0, 0, 0, 0, 1662, 1978, -2, -2, 1999,
	0, 2361, 2363, 1654, 0, 2146, 1656, 0, 0, -2,
	0, 0, 0, 1637, 1620, 0, 1695, 1687, 1689, 1691,
	2676, 2453, 2791, 1621, 1622, 1770, 0, 0, 1738, 343,
	1433, 649, 0, 0, 1798, 0, 654, 0, 0, 0,
	0, 0, 1401, 175, 0, 0, 1178, 1179, 2335, 1181,
	0, 1183, 1185, 1186, 1103, 0, 1190, 0, 2384, 0,
	1195, 1198, 1199, 0, 0, 1212, 1234, 0, 1243, 0,
	1377, 1387, 1381, 0, 1379, 1245, 0, 179, 208, 181,
	210, 205, 0, 1384, 0, 183, 193, 0, 0, 126,
	0, 0, 2447, 161, 159, 157, 104, 1388, 147, 0,
	128, 0, 230, 239, 1383, 241, 225, 215, 0, 0,
	1410, 1414, 1422, 0, 1437, 1438, 1439, 1440, 0, 0,
	0, 0, 260, 0, 261, 264, 265, 0, 0, 1103,
	1161, 1102, 1220, 0, 1231, 1103, 0, 0, 0, 0,
	0, 0, 1105, 0, 1104, 0, 0, 471, 474, 0,
	477, 0, 0, 0, 0, 0, 1318, 0, 1363, 1361,
	0, 1369, 0, 0, 0, 1515, 0, 0, 1534, 1535,
	494, 1559, 0, 0, 1566, 1577, 315, 0, 318, 293,
	285, 0, 708, 0, 710, 0, 1011, 1013, 0, 0,
	2072, 2164, 0, 0, 2097, 2098, -2, 0, 2038, 2148,
	2150, 0, 0, 0, 0, 0, 1706, 1715, 1434, 1792,
	661, 658, 660, 0, 1397, 0, 1404, 217, 1176, 1180,
	0, 1187, 0, 0, 0, 1191, 1253, 0, 0, 1270,
	1270, 1204, 0, 0, 1237, 1238, 1158, 0, 1239, 1240,
	1241, 1376, 1665, 1382, 1103, 0, 0, 207, 212, 0,
	0, 0, 0, 0, 0, 146, 0, 219, 242, 1384,
	0, 0, 1441, 1442, 0, 0, 257, 276, 0, 1312,
	1105, 0, 1232, 1139, 1142, 1143, 1144, 1145, 1146, 1147,
	1148, 1149, 1150, 1140, 1245, 0, 0, 1209, 1116, 0,
	1119, 0, 1101, 0, 475, 476, 491, 0, 492, 0,
	0, 1319, 0, 0, 1370, 0, 0, 1522, 1514, 1543,
	1536, 1537, 1789, 0, 1567, 0, 707, 0, 0, 1021,
	1022, 0, 0, 0, 0, 2159, 1657, 2039, 0, 0,
	1690, 1692, 1693, 1694, 650, 0, 1398, 187, 0, 1247,
	1189, 1258, 0, 0, 0, 0, 0, 1205, 1235, 1236,
	1233, 1157, 0, 1380, 1378, 1214, 1247, 1249, 185, 0,
	1245, 0, 1167, 0, 0, 1170, 0, 0, 162, 2447,
	160, 0, 215, 628, 1434, 215, 0, 279, 0, 270,
	268, 269, 1097, 0, 1225, 1227, 1243, 1245, 1158, 0,
	1120, 1162, 1118, 488, 1313, 1317, 1315, 1353, 1245, 0,
	1243, 0, 1529, 1543, 1523, 1524, 0, 1539, 0, 0,
	336, 709, 711, 2156, 2176, 2165, -2, 2748, 2454, 0,
	2176, 2176, 2151, 2152, 0, 0, 1103, 0, 1192, 1254,
	1255, 0, 1250, 1251, 1252, 2383, 1193, 1194, 1196, 1197,
	1789, 0, 1244, 1253, 211, 1103, 1164, 0, 0, 1165,
	0, 0, 165, 0, 167, 243, 1432, 1435, 0, 266,
	0, 0, 1094, 1096, 1103, 0, 1158, 1243, 1103, 0,
	0, 0, 1103, 1105, 1243, 0, 1158, 0, 1518, 1528,
	0, 1538, 1515, 0, 1562, 0, 317, 2161, 0, 0,
	2167, 2168, 2169, 2170, 2171, 2162, 2163, 662, 1182, 1188,
	0, 1256, 0, 1257, 0, 0, 0, 1213, 1242, 1258,
	191, 1168, 0, 1171, 0, 163, 0, 0, 274, 275,
	1224, 1226, 1103, 1158, 1789, 1106, 0, 1108, 1105, 1117,
	1158, 0, 1103, 0, 1541, 1517, 1521, 2344, 1522, 1560,
	0, 0, 0, 2173, 2174, 0, 0, 0, 1259, 0,
	1262, 1263, 0, 1260, 1233, 0, 0, 215, 0, 1789,
	1103, 1208, 1107, 1097, 1103, 1245, 1789, 1243, 1511, 1543,
	1529, 0, 1789, 2172, 2175, 2166, 1246, 1261, 1264, 1265,
	1215, 0, 0, 1436, 277, 0, 1206, 1789, 1095, 1789,
	1243, 1366, 1158, 0, 1518, 1789, 1563, 1155, 0, 0,
	1207, 1364, 1158, 1103, 1540, 1512, 1561, 1169, 1154, 0,
	278, 1103, 1789, 0, 1789, 1367, 0, 1365, 1155, 1172,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 597, 3, 603, 598, 3,
	609, 610, 601, 599, 614, 600, 611, 602, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 617, 3,
	589, 591, 590, 594, 613, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 607, 3, 608, 604, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 615, 596, 616, 592,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 593, 57932, 595, 57933, 605, 57934, 606,
	57935, 612, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1520
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1531
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1532
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1533
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1534
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1535
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1536
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1537
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1538
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1539
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1540
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1547
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1556
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1558
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1561
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1562
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1563
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1564
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1565
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1566
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1567
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1568
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1569
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1570
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1571
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1572
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1633
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1659
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1673
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 86:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1692
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1696
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1700
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1732
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1743
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1755
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1765
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1772
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1799
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1808
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1815
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1844
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1876
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1900
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1909
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1920
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1924
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1930
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1938
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1948
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1952
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1964
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1970
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1974
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1979
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1985
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1997
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2018
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2038
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2058
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2080
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2089
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2094
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2100
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2108
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2119
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 155:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2129
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2139
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 157:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2148
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2159
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 159:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2165
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2173
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 163:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2185
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2191
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2196
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2207
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2211
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2217
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2221
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2248
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2268
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2278
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2283
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2287
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2301
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2313
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2323
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2331
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2341
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2344
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2350
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 191:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2357
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2365
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2372
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2402
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2409
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2415
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2427
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2431
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2437
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = nil
		}
	case 207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2455
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2459
		{
			sqlVAL.union.val = nil
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2465
		{
			sqlVAL.union.val = true
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2469
		{
			sqlVAL.union.val = false
		}
	case 211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2479
		{
			sqlVAL.union.val = nil
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2486
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2490
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2494
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2500
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 218:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2540
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2551
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2579
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2588
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2597
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2601
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2604
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2608
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2642
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2688
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2696
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2700
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 249:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2743
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2765
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2785
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2793
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2805
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2820
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2845
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2927
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2938
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2947
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2963
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2967
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2971
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2980
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2988
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3002
		{
			sqlVAL.union.val = nil
		}
	case 280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3040
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3049
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3059
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3078
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3097
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3104
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3108
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3112
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3118
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3137
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3169
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3173
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3181
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3197
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3201
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3212
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3216
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3220
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3257
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3266
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3272
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3277
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3282
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3286
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3303
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3306
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3314
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3322
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3326
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3332
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3346
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3350
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3354
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3364
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3374
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3378
		{
			sqlVAL.union.val = nil
		}
	case 337:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3390
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3404
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3420
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3424
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3432
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3436
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3440
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3444
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3448
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3456
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3457
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3458
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3459
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3460
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3470
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3478
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3480
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3487
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3506
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3514
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3516
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3542
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3552
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3567
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3570
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3586
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3599
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3607
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3608
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3612
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3617
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3629
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3631
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3632
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3635
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3636
		{
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3637
		{
			return helpWith(sqllex, "CREATE")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3647
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3651
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3654
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3657
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3660
		{
			return unimplemented(sqllex, "create access method")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3661
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3662
		{
			return unimplemented(sqllex, "create cast")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3663
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3664
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3665
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3666
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3667
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3668
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3669
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3670
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3672
		{
			return unimplemented(sqllex, "create publication")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3673
		{
			return unimplemented(sqllex, "create rule")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3674
		{
			return unimplemented(sqllex, "create server")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3675
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3676
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3677
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3678
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3681
		{
		}
	case 424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3682
		{
		}
	case 425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3685
		{
		}
	case 426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3686
		{
		}
	case 427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3689
		{
		}
	case 428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3690
		{
		}
	case 429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3693
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3694
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3695
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3696
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3697
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3698
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3699
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3700
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3701
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3702
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3703
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3704
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3705
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3706
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3707
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3708
		{
			return unimplemented(sqllex, "drop server")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3709
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3710
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3711
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3714
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3715
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3716
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3717
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3718
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3720
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3721
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3722
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3723
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3733
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3745
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3749
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3759
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3768
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3775
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3791
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3802
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3837
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3861
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3872
		{

			sqlVAL.union.val = nil
		}
	case 486:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3889
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3900
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 488:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3904
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3908
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3915
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3919
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3955
		{
			return helpWith(sqllex, "DELETE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3958
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3959
		{
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3970
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3971
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3973
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3974
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3983
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3984
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3985
		{
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3986
		{
			return helpWith(sqllex, "DROP")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3989
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3990
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3991
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3992
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3993
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3994
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3995
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4003
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4007
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4011
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4020
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4028
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4036
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4040
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4043
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4051
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4058
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4066
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4075
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4083
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4091
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4099
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4106
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4113
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4121
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4138
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4142
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4151
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4166
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4178
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4181
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4185
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4190
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4203
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4210
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4215
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4242
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4249
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4251
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4259
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4267
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4275
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4283
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4294
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4302
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4305
		{
			return helpWith(sqllex, "DELETE")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4307
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4308
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4309
		{
			return helpWith(sqllex, "INSERT")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4312
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4314
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4322
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4323
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4324
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4329
		{
			return helpWith(sqllex, "DELETE")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4330
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4331
		{
			return helpWith(sqllex, "INSERT")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4333
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4337
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4338
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4356
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4362
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4366
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.targetList(),
			}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4403
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4410
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4417
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4425
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4439
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4460
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4468
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4472
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4493
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4501
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4519
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4523
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4527
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4531
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4534
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4557
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4584
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4588
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4600
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4603
		{
			return helpWith(sqllex, "GRANT")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4626
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4630
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4634
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4638
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4642
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4646
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4650
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4661
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4672
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4684
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4696
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4699
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4709
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4737
		{
			return helpWith(sqllex, "RESET")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4738
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4746
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4750
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4754
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4757
		{
			return helpWith(sqllex, "RESET")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4768
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4779
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4782
		{
			return helpWith(sqllex, "USE")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4787
		{
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4788
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4792
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4793
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4794
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4795
		{
			return helpWith(sqllex, "USE")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4811
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4826
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4829
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4855
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4859
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4863
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4869
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4873
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4891
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4906
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4919
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4938
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4940
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4943
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4946
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4960
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4965
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4982
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4985
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4987
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4990
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4994
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5013
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5017
		{
			return unimplemented(sqllex, "set from current")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5021
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5026
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5035
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5040
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5044
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5056
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5061
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5072
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5082
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5089
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5114
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5120
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5124
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5128
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5132
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5136
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5142
		{
			sqlVAL.union.val = tree.Low
		}
	case 758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5146
		{
			sqlVAL.union.val = tree.Normal
		}
	case 759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5150
		{
			sqlVAL.union.val = tree.High
		}
	case 760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5161
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5165
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5169
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5174
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5178
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5193
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5194
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5195
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5196
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5197
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5198
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5199
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5200
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5201
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5203
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5204
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5205
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5206
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5207
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5209
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5210
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5211
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5213
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5215
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5216
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5217
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5218
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5219
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5220
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5221
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5222
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5223
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5224
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5225
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5226
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5227
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5228
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5229
		{
			return helpWith(sqllex, "SHOW")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5232
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5237
		{
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5238
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5241
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5245
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5250
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5255
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5260
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5265
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5275
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5276
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5277
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5292
		{
			sqlVAL.str = "client_encoding"
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5298
		{
			sqlVAL.str = "timezone"
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5299
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5303
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5307
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5327
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5331
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5342
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5350
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5364
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5372
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5381
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5390
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5399
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5407
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5417
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5421
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5424
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5429
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5431
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5438
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5449
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5457
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5472
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5483
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5489
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5499
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5529
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5539
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5552
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5560
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5568
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5571
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5573
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5577
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5581
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5584
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5593
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5604
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5609
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5620
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5622
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5625
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = true
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5631
		{
			sqlVAL.union.val = true
		}
	case 922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5633
		{
			sqlVAL.union.val = false
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5650
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5654
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5658
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5661
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5662
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5663
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5665
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5669
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5677
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5680
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5706
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5707
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5723
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5725
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5731
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5739
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5757
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5761
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5772
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5775
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5780
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5782
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5786
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = true
		}
	case 959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5790
		{
			sqlVAL.union.val = false
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5798
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5801
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5803
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5806
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5814
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5824
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5837
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5844
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5847
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5852
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5855
		{
			sqlVAL.union.val = true
		}
	case 973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5856
		{
			sqlVAL.union.val = false
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5863
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5867
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5870
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5877
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5881
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5884
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5891
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5895
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5899
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 984:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5910
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5924
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5932
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5937
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5942
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5946
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5962
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5967
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5972
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5977
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5982
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5993
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6006
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6008
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6011
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6022
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6033
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6051
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6059
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6080
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6085
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6090
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6094
		{
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6103
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6117
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6126
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6135
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6138
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6151
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6197
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6207
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6220
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6345
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6353
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6396
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6405
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6426
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6454
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6455
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6456
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6457
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6467
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6468
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6469
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6470
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6478
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6481
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6500
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6509
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6522
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6546
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6554
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6556
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6562
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6573
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6609
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6620
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6637
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6673
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6688
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6705
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6709
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6716
		{

			sqlVAL.union.val = nil
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6722
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.str = ""
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6732
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = nil
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6755
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6759
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6795
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6808
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6822
		{
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6823
		{
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6824
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6843
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6851
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6857
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6867
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6879
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6905
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6916
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6919
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6921
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6922
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6923
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.str = ""
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6949
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6975
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7011
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7017
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7061
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7090
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7124
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7136
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7142
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7168
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7182
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7186
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7191
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7213
		{

			sqlVAL.union.val = true
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = false
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7223
		{
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7227
		{
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7230
		{
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7260
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7296
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7327
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7338
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7355
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7365
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7380
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7409
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7448
		{
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7449
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7450
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7451
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7452
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7453
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7481
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7507
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7535
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7620
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7629
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7637
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7641
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7644
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7648
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7659
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7661
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7671
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7673
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7675
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7677
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7680
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7683
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7685
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7687
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7695
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7698
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7702
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7729
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7763
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7767
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7771
		{
			sqlVAL.str = ""
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7777
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7793
		{
			sqlVAL.union.val = true
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7797
		{

			sqlVAL.union.val = true
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = false
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7812
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7826
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7838
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7850
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7860
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7870
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7874
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.union.val = true
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = true
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7900
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = nil
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8009
		{
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8010
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8027
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8035
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8037
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8039
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8041
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8043
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8045
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8053
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8080
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8097
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8115
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8131
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8147
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8151
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.union.val = false
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = true
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = false
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = true
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = false
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8205
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8211
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8217
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8225
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8250
		{
			sqlVAL.str = ""
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.str = ""
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8272
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8284
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8290
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8304
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8368
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8397
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8413
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8487
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8515
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8521
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8533
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8539
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8553
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8559
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8618
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8633
		{
			sqlVAL.union.val = true
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = false
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8651
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = tree.Types
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8678
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8682
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8706
		{
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8707
		{
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8710
		{
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8711
		{
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8722
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8732
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8740
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8749
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8770
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8778
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8791
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8799
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8807
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8818
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8822
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8823
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8824
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8843
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8848
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8858
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8861
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8866
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8875
		{
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8876
		{
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8877
		{
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8894
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8897
		{
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8898
		{
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8926
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8939
		{
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8941
		{
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8945
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9035
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9040
		{
			sqlVAL.str = ""
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9045
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9058
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9063
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9080
		{

		}
	case 1525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9091
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9095
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.str = ""
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.str = ""
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.str = ""
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.str = ""
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9150
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9175
		{
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9176
		{
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9205
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9223
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9227
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9236
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9285
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9330
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9368
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9400
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9404
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9421
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9436
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9535
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9573
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9580
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9615
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9616
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9617
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9639
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9678
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9722
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9738
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9753
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = true
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = false
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9791
		{
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9792
		{
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = nil
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9805
		{
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9806
		{
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = true
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = false
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = false
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = true
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9835
		{
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9836
		{
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9839
		{
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9840
		{
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9860
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9864
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9881
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9893
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9898
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9924
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9953
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9957
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10012
		{
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10013
		{
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10016
		{
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10017
		{
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10034
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10051
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10052
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10053
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10083
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10085
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10100
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10118
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10122
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10127
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10132
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10153
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10164
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10169
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10181
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10200
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10242
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10252
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10287
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10298
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10328
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10361
		{
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10363
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = nil
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = true
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = false
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10456
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.str = tree.AstFull
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.str = tree.AstRight
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.str = tree.AstInner
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10480
		{
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10481
		{
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.str = tree.AstHash
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.str = ""
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10534
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10550
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10555
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10573
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10579
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10585
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10595
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = true
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10609
		{
			sqlVAL.union.val = false
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = true
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10619
		{
			sqlVAL.union.val = false
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10625
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10644
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10657
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10665
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10666
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10683
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10684
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10686
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10694
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10707
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10714
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10723
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10763
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10775
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10776
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10781
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10785
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10789
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10797
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10806
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10810
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = types.Geography
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10814
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10825
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10833
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10859
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10867
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = nil
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10886
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = types.Int2
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = types.Int
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = types.Float4
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = types.Float
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10910
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10918
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10926
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10934
		{
			sqlVAL.union.val = types.Bool
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10940
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10953
		{
			sqlVAL.union.val = types.Float
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10959
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10965
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10987
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11005
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11017
		{
			sqlVAL.union.val = types.String
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = true
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = false
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = types.Date
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11036
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11044
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11058
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11067
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11075
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11088
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11092
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = true
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = false
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = false
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = types.Interval
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11116
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11200
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11215
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11231
		{
			sqlVAL.union.val = nil
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11245
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11286
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11290
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11294
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11305
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11394
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11398
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11422
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11430
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11454
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11462
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11484
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11488
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11536
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11540
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11544
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11548
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11552
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11560
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11568
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11572
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11576
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11580
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11583
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11589
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11601
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11605
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11609
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11621
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11625
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11645
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11649
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11666
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11671
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11683
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11687
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11695
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11699
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11719
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11731
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11759
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11763
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11771
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11779
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11787
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11797
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11805
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11809
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11823
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11831
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11871
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11875
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11883
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11888
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11914
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11923
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11938
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11948
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11972
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11983
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11984
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11999
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12008
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12061
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12074
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12086
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12105
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12115
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12119
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12123
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12127
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12181
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12196
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12199
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12204
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12206
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12213
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12222
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12224
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12231
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12237
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12240
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12242
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12245
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12247
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12250
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12252
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12255
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12257
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12260
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12262
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12265
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12271
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12274
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12275
		{
			return unimplemented(sqllex, "treat")
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12277
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12281
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12285
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12289
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12296
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12301
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12307
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12311
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12317
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12321
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12328
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12348
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12356
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12364
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12371
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12391
		{
			sqlVAL.str = ""
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12397
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12401
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12407
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12415
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12423
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12431
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12437
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12450
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12478
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12482
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12497
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12506
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12510
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12514
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12518
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12523
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12536
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12540
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12547
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12559
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12563
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12567
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12583
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12584
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12585
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12586
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12587
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12588
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12589
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12590
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12591
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12592
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12593
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12594
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12596
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12597
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12598
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12599
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12600
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12601
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12602
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12603
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12604
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12605
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12606
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12607
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12608
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12609
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12610
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12611
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12612
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12613
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12614
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12615
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12617
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12623
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12639
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12646
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12647
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12648
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12649
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12672
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12676
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12682
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12686
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12690
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12701
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12705
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12711
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12715
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12722
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12728
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12732
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12738
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12742
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12748
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12752
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12758
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12762
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12768
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12772
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12795
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12799
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12803
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12809
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12816
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12820
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12837
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12841
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12845
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12849
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12853
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12859
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12865
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12871
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12875
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12879
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12885
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12897
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12904
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12908
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12914
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12920
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12924
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12931
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12937
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12948
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12954
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12958
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12963
		{
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12964
		{
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12968
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12972
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12978
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12987
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12991
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12995
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13003
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13007
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13013
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13017
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13036
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13044
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13067
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13076
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13080
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13084
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13088
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13094
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13098
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13113
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13117
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13129
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13133
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13142
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13153
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13162
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13170
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13187
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13272
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13280
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13284
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13290
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13294
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13302
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13329
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13336
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13340
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13344
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13358
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13362
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13366
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13379
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13388
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13406
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13419
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13426
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13451
		{
			sqlVAL.str = ""
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13457
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13461
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
