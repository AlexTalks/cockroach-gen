// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colTableDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) colDef() tree.ColumnDef {
	return u.val.(tree.ColumnDef)
}
func (u *sqlSymUnion) colDefList() tree.ColumnDefList {
	return u.val.(tree.ColumnDefList)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterBackupScheduleCmd() tree.AlterBackupScheduleCmd {
	return u.val.(tree.AlterBackupScheduleCmd)
}
func (u *sqlSymUnion) alterBackupScheduleCmds() tree.AlterBackupScheduleCmds {
	return u.val.(tree.AlterBackupScheduleCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}
func (u *sqlSymUnion) functionObj() tree.FuncObj {
	return u.val.(tree.FuncObj)
}
func (u *sqlSymUnion) functionObjs() tree.FuncObjs {
	return u.val.(tree.FuncObjs)
}

//line sql-gen.y:982
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONNECTIONS = lexbase.CONNECTIONS
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DEPENDS = lexbase.DEPENDS
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INDEX_BEFORE_PAREN = lexbase.INDEX_BEFORE_PAREN
const INDEX_BEFORE_NAME_THEN_PAREN = lexbase.INDEX_BEFORE_NAME_THEN_PAREN
const INDEX_AFTER_ORDER_BY_BEFORE_AT = lexbase.INDEX_AFTER_ORDER_BY_BEFORE_AT
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LABEL = lexbase.LABEL
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTHING_AFTER_RETURNING = lexbase.NOTHING_AFTER_RETURNING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMA_ONLY = lexbase.SCHEMA_ONLY
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECONDARY = lexbase.SECONDARY
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLISTEN = lexbase.UNLISTEN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VERIFY_BACKUP_TABLE_DATA = lexbase.VERIFY_BACKUP_TABLE_DATA
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWDEBUG = lexbase.VIEWDEBUG
const VIEWCLUSTERMETADATA = lexbase.VIEWCLUSTERMETADATA
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONNECTIONS",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DEPENDS",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INDEX_BEFORE_PAREN",
	"INDEX_BEFORE_NAME_THEN_PAREN",
	"INDEX_AFTER_ORDER_BY_BEFORE_AT",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LABEL",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTHING_AFTER_RETURNING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMA_ONLY",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VERIFY_BACKUP_TABLE_DATA",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWDEBUG",
	"VIEWCLUSTERMETADATA",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15904

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1922,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 64,
	287, 582,
	-2, 0,
	-1, 76,
	8, 1055,
	29, 1055,
	655, 1055,
	656, 1055,
	-2, 0,
	-1, 77,
	8, 1055,
	29, 1055,
	655, 1055,
	656, 1055,
	-2, 0,
	-1, 80,
	1, 1769,
	140, 1769,
	274, 1769,
	362, 1769,
	426, 1769,
	436, 1769,
	636, 1769,
	668, 1769,
	-2, 0,
	-1, 81,
	1, 1769,
	668, 1769,
	-2, 0,
	-1, 87,
	267, 295,
	570, 295,
	-2, 0,
	-1, 101,
	205, 482,
	250, 1643,
	269, 1643,
	287, 482,
	428, 482,
	440, 1384,
	484, 482,
	501, 1384,
	554, 1384,
	583, 482,
	612, 1384,
	-2, 0,
	-1, 108,
	142, 1922,
	262, 1922,
	595, 1922,
	596, 1922,
	-2, 0,
	-1, 126,
	162, 1893,
	183, 1893,
	196, 1893,
	265, 1893,
	301, 1893,
	376, 1893,
	387, 1893,
	589, 1893,
	-2, 1864,
	-1, 170,
	170, 1192,
	285, 1192,
	431, 1153,
	506, 1153,
	553, 1153,
	573, 1192,
	575, 1153,
	-2, 0,
	-1, 175,
	4, 1924,
	21, 1924,
	22, 1924,
	23, 1924,
	24, 1924,
	25, 1924,
	26, 1924,
	27, 1924,
	28, 1924,
	30, 1924,
	31, 1924,
	37, 1924,
	41, 1924,
	43, 1924,
	44, 1924,
	45, 1924,
	47, 1924,
	48, 1924,
	49, 1924,
	50, 1924,
	51, 1924,
	52, 1924,
	53, 1924,
	54, 1924,
	55, 1924,
	57, 1924,
	58, 1924,
	59, 1924,
	60, 1924,
	62, 1924,
	63, 1924,
	64, 1924,
	65, 1924,
	66, 1924,
	67, 1924,
	68, 1924,
	69, 1924,
	73, 1924,
	74, 1924,
	75, 1924,
	76, 1924,
	78, 1924,
	79, 1924,
	80, 1924,
	84, 1924,
	85, 1924,
	86, 1924,
	87, 1924,
	88, 1924,
	89, 1924,
	90, 1924,
	91, 1924,
	94, 1924,
	95, 1924,
	96, 1924,
	97, 1924,
	98, 1924,
	99, 1924,
	101, 1924,
	103, 1924,
	104, 1924,
	105, 1924,
	106, 1924,
	107, 1924,
	108, 1924,
	109, 1924,
	111, 1924,
	112, 1924,
	113, 1924,
	115, 1924,
	116, 1924,
	117, 1924,
	125, 1924,
	126, 1924,
	127, 1924,
	128, 1924,
	129, 1924,
	131, 1924,
	132, 1924,
	133, 1924,
	134, 1924,
	136, 1924,
	137, 1924,
	138, 1924,
	139, 1924,
	141, 1924,
	142, 1924,
	143, 1924,
	144, 1924,
	146, 1924,
	147, 1924,
	148, 1924,
	151, 1924,
	152, 1924,
	153, 1924,
	155, 1924,
	156, 1924,
	157, 1924,
	159, 1924,
	160, 1924,
	161, 1924,
	163, 1924,
	164, 1924,
	165, 1924,
	166, 1924,
	167, 1924,
	168, 1924,
	169, 1924,
	170, 1924,
	171, 1924,
	172, 1924,
	173, 1924,
	174, 1924,
	175, 1924,
	176, 1924,
	177, 1924,
	178, 1924,
	179, 1924,
	180, 1924,
	182, 1924,
	188, 1924,
	189, 1924,
	190, 1924,
	191, 1924,
	195, 1924,
	197, 1924,
	198, 1924,
	199, 1924,
	201, 1924,
	202, 1924,
	205, 1924,
	206, 1924,
	207, 1924,
	208, 1924,
	209, 1924,
	210, 1924,
	211, 1924,
	212, 1924,
	213, 1924,
	214, 1924,
	215, 1924,
	216, 1924,
	217, 1924,
	218, 1924,
	220, 1924,
	221, 1924,
	223, 1924,
	224, 1924,
	226, 1924,
	227, 1924,
	228, 1924,
	229, 1924,
	230, 1924,
	231, 1924,
	232, 1924,
	233, 1924,
	234, 1924,
	235, 1924,
	236, 1924,
	238, 1924,
	239, 1924,
	240, 1924,
	242, 1924,
	243, 1924,
	244, 1924,
	245, 1924,
	246, 1924,
	250, 1924,
	251, 1924,
	252, 1924,
	253, 1924,
	255, 1924,
	256, 1924,
	257, 1924,
	259, 1924,
	260, 1924,
	261, 1924,
	262, 1924,
	263, 1924,
	264, 1924,
	266, 1924,
	268, 1924,
	269, 1924,
	270, 1924,
	272, 1924,
	274, 1924,
	275, 1924,
	276, 1924,
	278, 1924,
	282, 1924,
	283, 1924,
	284, 1924,
	285, 1924,
	286, 1924,
	287, 1924,
	288, 1924,
	290, 1924,
	291, 1924,
	292, 1924,
	294, 1924,
	295, 1924,
	296, 1924,
	298, 1924,
	299, 1924,
	302, 1924,
	303, 1924,
	304, 1924,
	305, 1924,
	306, 1924,
	307, 1924,
	308, 1924,
	311, 1924,
	312, 1924,
	313, 1924,
	314, 1924,
	316, 1924,
	317, 1924,
	318, 1924,
	319, 1924,
	320, 1924,
	321, 1924,
	322, 1924,
	323, 1924,
	324, 1924,
	325, 1924,
	326, 1924,
	327, 1924,
	328, 1924,
	329, 1924,
	330, 1924,
	331, 1924,
	332, 1924,
	333, 1924,
	334, 1924,
	335, 1924,
	336, 1924,
	337, 1924,
	338, 1924,
	340, 1924,
	342, 1924,
	343, 1924,
	344, 1924,
	345, 1924,
	346, 1924,
	347, 1924,
	348, 1924,
	349, 1924,
	350, 1924,
	351, 1924,
	352, 1924,
	353, 1924,
	354, 1924,
	355, 1924,
	356, 1924,
	357, 1924,
	358, 1924,
	360, 1924,
	361, 1924,
	363, 1924,
	364, 1924,
	366, 1924,
	367, 1924,
	368, 1924,
	369, 1924,
	371, 1924,
	372, 1924,
	373, 1924,
	374, 1924,
	375, 1924,
	378, 1924,
	380, 1924,
	382, 1924,
	383, 1924,
	384, 1924,
	385, 1924,
	388, 1924,
	389, 1924,
	390, 1924,
	392, 1924,
	394, 1924,
	395, 1924,
	396, 1924,
	397, 1924,
	398, 1924,
	399, 1924,
	400, 1924,
	401, 1924,
	402, 1924,
	403, 1924,
	404, 1924,
	405, 1924,
	406, 1924,
	407, 1924,
	409, 1924,
	410, 1924,
	411, 1924,
	412, 1924,
	413, 1924,
	414, 1924,
	415, 1924,
	416, 1924,
	417, 1924,
	418, 1924,
	419, 1924,
	420, 1924,
	421, 1924,
	422, 1924,
	423, 1924,
	425, 1924,
	426, 1924,
	427, 1924,
	429, 1924,
	430, 1924,
	431, 1924,
	432, 1924,
	433, 1924,
	434, 1924,
	435, 1924,
	436, 1924,
	437, 1924,
	438, 1924,
	439, 1924,
	440, 1924,
	441, 1924,
	442, 1924,
	444, 1924,
	446, 1924,
	447, 1924,
	448, 1924,
	454, 1924,
	455, 1924,
	456, 1924,
	458, 1924,
	459, 1924,
	460, 1924,
	461, 1924,
	462, 1924,
	463, 1924,
	464, 1924,
	465, 1924,
	466, 1924,
	467, 1924,
	468, 1924,
	470, 1924,
	471, 1924,
	472, 1924,
	473, 1924,
	474, 1924,
	476, 1924,
	477, 1924,
	478, 1924,
	479, 1924,
	480, 1924,
	481, 1924,
	482, 1924,
	484, 1924,
	485, 1924,
	486, 1924,
	487, 1924,
	488, 1924,
	489, 1924,
	490, 1924,
	491, 1924,
	492, 1924,
	493, 1924,
	494, 1924,
	495, 1924,
	496, 1924,
	497, 1924,
	498, 1924,
	499, 1924,
	501, 1924,
	502, 1924,
	503, 1924,
	504, 1924,
	505, 1924,
	506, 1924,
	508, 1924,
	509, 1924,
	510, 1924,
	511, 1924,
	512, 1924,
	513, 1924,
	514, 1924,
	516, 1924,
	517, 1924,
	518, 1924,
	519, 1924,
	520, 1924,
	521, 1924,
	522, 1924,
	523, 1924,
	525, 1924,
	527, 1924,
	528, 1924,
	529, 1924,
	530, 1924,
	531, 1924,
	532, 1924,
	533, 1924,
	534, 1924,
	535, 1924,
	536, 1924,
	537, 1924,
	538, 1924,
	539, 1924,
	540, 1924,
	541, 1924,
	542, 1924,
	543, 1924,
	544, 1924,
	545, 1924,
	546, 1924,
	547, 1924,
	549, 1924,
	550, 1924,
	552, 1924,
	553, 1924,
	555, 1924,
	556, 1924,
	557, 1924,
	558, 1924,
	559, 1924,
	560, 1924,
	562, 1924,
	563, 1924,
	565, 1924,
	566, 1924,
	567, 1924,
	568, 1924,
	569, 1924,
	571, 1924,
	573, 1924,
	574, 1924,
	575, 1924,
	576, 1924,
	577, 1924,
	578, 1924,
	579, 1924,
	580, 1924,
	582, 1924,
	583, 1924,
	584, 1924,
	585, 1924,
	586, 1924,
	587, 1924,
	588, 1924,
	591, 1924,
	592, 1924,
	593, 1924,
	594, 1924,
	595, 1924,
	596, 1924,
	597, 1924,
	598, 1924,
	599, 1924,
	601, 1924,
	604, 1924,
	605, 1924,
	606, 1924,
	607, 1924,
	608, 1924,
	609, 1924,
	611, 1924,
	612, 1924,
	613, 1924,
	614, 1924,
	615, 1924,
	616, 1924,
	617, 1924,
	618, 1924,
	619, 1924,
	620, 1924,
	621, 1924,
	622, 1924,
	627, 1924,
	628, 1924,
	629, 1924,
	630, 1924,
	631, 1924,
	632, 1924,
	-2, 0,
	-1, 177,
	1, 1769,
	668, 1769,
	671, 1769,
	-2, 0,
	-1, 178,
	1, 1769,
	570, 1769,
	668, 1769,
	671, 1769,
	-2, 0,
	-1, 214,
	162, 1892,
	183, 1892,
	196, 1892,
	265, 1892,
	301, 1892,
	376, 1892,
	387, 1892,
	589, 1892,
	-2, 1867,
	-1, 275,
	4, 1931,
	5, 1931,
	6, 1931,
	7, 1931,
	8, 1931,
	9, 1931,
	10, 1931,
	21, 1931,
	22, 1931,
	23, 1931,
	24, 1931,
	25, 1931,
	26, 1931,
	27, 1931,
	28, 1931,
	30, 1931,
	31, 1931,
	37, 1931,
	38, 1931,
	41, 1931,
	43, 1931,
	44, 1931,
	45, 1931,
	46, 1931,
	47, 1931,
	48, 1931,
	49, 1931,
	50, 1931,
	51, 1931,
	52, 1931,
	53, 1931,
	54, 1931,
	55, 1931,
	57, 1931,
	58, 1931,
	59, 1931,
	60, 1931,
	62, 1931,
	63, 1931,
	64, 1931,
	65, 1931,
	66, 1931,
	67, 1931,
	68, 1931,
	69, 1931,
	70, 1931,
	71, 1931,
	72, 1931,
	73, 1931,
	74, 1931,
	75, 1931,
	76, 1931,
	78, 1931,
	79, 1931,
	80, 1931,
	82, 1931,
	84, 1931,
	85, 1931,
	86, 1931,
	87, 1931,
	88, 1931,
	89, 1931,
	90, 1931,
	91, 1931,
	94, 1931,
	95, 1931,
	96, 1931,
	97, 1931,
	98, 1931,
	99, 1931,
	101, 1931,
	103, 1931,
	104, 1931,
	105, 1931,
	106, 1931,
	107, 1931,
	108, 1931,
	109, 1931,
	111, 1931,
	112, 1931,
	113, 1931,
	114, 1931,
	115, 1931,
	116, 1931,
	117, 1931,
	118, 1931,
	119, 1931,
	120, 1931,
	121, 1931,
	122, 1931,
	123, 1931,
	124, 1931,
	125, 1931,
	126, 1931,
	127, 1931,
	128, 1931,
	129, 1931,
	130, 1931,
	131, 1931,
	132, 1931,
	133, 1931,
	134, 1931,
	135, 1931,
	136, 1931,
	137, 1931,
	138, 1931,
	139, 1931,
	141, 1931,
	142, 1931,
	143, 1931,
	144, 1931,
	146, 1931,
	147, 1931,
	148, 1931,
	151, 1931,
	152, 1931,
	153, 1931,
	155, 1931,
	156, 1931,
	157, 1931,
	159, 1931,
	160, 1931,
	161, 1931,
	163, 1931,
	164, 1931,
	165, 1931,
	166, 1931,
	167, 1931,
	168, 1931,
	169, 1931,
	170, 1931,
	171, 1931,
	172, 1931,
	173, 1931,
	174, 1931,
	175, 1931,
	176, 1931,
	177, 1931,
	178, 1931,
	179, 1931,
	180, 1931,
	181, 1931,
	182, 1931,
	188, 1931,
	189, 1931,
	190, 1931,
	191, 1931,
	195, 1931,
	197, 1931,
	198, 1931,
	199, 1931,
	201, 1931,
	202, 1931,
	204, 1931,
	205, 1931,
	206, 1931,
	207, 1931,
	208, 1931,
	209, 1931,
	210, 1931,
	211, 1931,
	212, 1931,
	213, 1931,
	214, 1931,
	215, 1931,
	216, 1931,
	217, 1931,
	218, 1931,
	220, 1931,
	221, 1931,
	223, 1931,
	224, 1931,
	226, 1931,
	227, 1931,
	228, 1931,
	229, 1931,
	230, 1931,
	231, 1931,
	232, 1931,
	233, 1931,
	234, 1931,
	235, 1931,
	236, 1931,
	237, 1931,
	238, 1931,
	239, 1931,
	240, 1931,
	242, 1931,
	243, 1931,
	244, 1931,
	245, 1931,
	246, 1931,
	250, 1931,
	251, 1931,
	252, 1931,
	253, 1931,
	255, 1931,
	256, 1931,
	257, 1931,
	258, 1931,
	259, 1931,
	260, 1931,
	261, 1931,
	262, 1931,
	263, 1931,
	264, 1931,
	266, 1931,
	268, 1931,
	269, 1931,
	270, 1931,
	271, 1931,
	272, 1931,
	273, 1931,
	274, 1931,
	275, 1931,
	276, 1931,
	277, 1931,
	278, 1931,
	282, 1931,
	283, 1931,
	284, 1931,
	285, 1931,
	286, 1931,
	287, 1931,
	288, 1931,
	290, 1931,
	291, 1931,
	292, 1931,
	294, 1931,
	295, 1931,
	296, 1931,
	297, 1931,
	298, 1931,
	299, 1931,
	300, 1931,
	302, 1931,
	303, 1931,
	304, 1931,
	305, 1931,
	306, 1931,
	307, 1931,
	308, 1931,
	309, 1931,
	310, 1931,
	311, 1931,
	312, 1931,
	313, 1931,
	314, 1931,
	316, 1931,
	317, 1931,
	318, 1931,
	319, 1931,
	320, 1931,
	321, 1931,
	322, 1931,
	323, 1931,
	324, 1931,
	325, 1931,
	326, 1931,
	327, 1931,
	328, 1931,
	329, 1931,
	330, 1931,
	331, 1931,
	332, 1931,
	333, 1931,
	334, 1931,
	335, 1931,
	336, 1931,
	337, 1931,
	338, 1931,
	340, 1931,
	341, 1931,
	342, 1931,
	343, 1931,
	344, 1931,
	345, 1931,
	346, 1931,
	347, 1931,
	348, 1931,
	349, 1931,
	350, 1931,
	351, 1931,
	352, 1931,
	353, 1931,
	354, 1931,
	355, 1931,
	356, 1931,
	357, 1931,
	358, 1931,
	359, 1931,
	360, 1931,
	361, 1931,
	362, 1931,
	363, 1931,
	364, 1931,
	365, 1931,
	366, 1931,
	367, 1931,
	368, 1931,
	369, 1931,
	370, 1931,
	371, 1931,
	372, 1931,
	373, 1931,
	374, 1931,
	375, 1931,
	378, 1931,
	380, 1931,
	383, 1931,
	384, 1931,
	385, 1931,
	388, 1931,
	389, 1931,
	390, 1931,
	391, 1931,
	392, 1931,
	393, 1931,
	394, 1931,
	395, 1931,
	396, 1931,
	397, 1931,
	398, 1931,
	399, 1931,
	400, 1931,
	401, 1931,
	402, 1931,
	403, 1931,
	404, 1931,
	405, 1931,
	406, 1931,
	407, 1931,
	409, 1931,
	410, 1931,
	411, 1931,
	412, 1931,
	413, 1931,
	414, 1931,
	415, 1931,
	416, 1931,
	417, 1931,
	418, 1931,
	419, 1931,
	420, 1931,
	421, 1931,
	422, 1931,
	423, 1931,
	425, 1931,
	426, 1931,
	427, 1931,
	429, 1931,
	430, 1931,
	431, 1931,
	432, 1931,
	433, 1931,
	434, 1931,
	435, 1931,
	436, 1931,
	437, 1931,
	438, 1931,
	439, 1931,
	440, 1931,
	441, 1931,
	442, 1931,
	444, 1931,
	446, 1931,
	447, 1931,
	448, 1931,
	454, 1931,
	455, 1931,
	456, 1931,
	458, 1931,
	459, 1931,
	460, 1931,
	461, 1931,
	462, 1931,
	463, 1931,
	464, 1931,
	465, 1931,
	466, 1931,
	467, 1931,
	468, 1931,
	470, 1931,
	471, 1931,
	472, 1931,
	473, 1931,
	474, 1931,
	475, 1931,
	476, 1931,
	477, 1931,
	478, 1931,
	479, 1931,
	480, 1931,
	481, 1931,
	482, 1931,
	484, 1931,
	485, 1931,
	486, 1931,
	487, 1931,
	488, 1931,
	489, 1931,
	490, 1931,
	491, 1931,
	492, 1931,
	493, 1931,
	494, 1931,
	495, 1931,
	496, 1931,
	497, 1931,
	498, 1931,
	499, 1931,
	501, 1931,
	502, 1931,
	503, 1931,
	504, 1931,
	505, 1931,
	506, 1931,
	507, 1931,
	508, 1931,
	509, 1931,
	510, 1931,
	511, 1931,
	512, 1931,
	513, 1931,
	514, 1931,
	515, 1931,
	516, 1931,
	517, 1931,
	518, 1931,
	519, 1931,
	520, 1931,
	521, 1931,
	522, 1931,
	523, 1931,
	525, 1931,
	527, 1931,
	528, 1931,
	529, 1931,
	530, 1931,
	531, 1931,
	532, 1931,
	533, 1931,
	534, 1931,
	535, 1931,
	536, 1931,
	537, 1931,
	538, 1931,
	539, 1931,
	540, 1931,
	541, 1931,
	542, 1931,
	543, 1931,
	544, 1931,
	545, 1931,
	546, 1931,
	547, 1931,
	549, 1931,
	550, 1931,
	551, 1931,
	552, 1931,
	553, 1931,
	555, 1931,
	556, 1931,
	557, 1931,
	558, 1931,
	559, 1931,
	560, 1931,
	562, 1931,
	563, 1931,
	565, 1931,
	566, 1931,
	567, 1931,
	568, 1931,
	569, 1931,
	571, 1931,
	573, 1931,
	574, 1931,
	575, 1931,
	576, 1931,
	577, 1931,
	578, 1931,
	579, 1931,
	580, 1931,
	581, 1931,
	582, 1931,
	583, 1931,
	584, 1931,
	585, 1931,
	586, 1931,
	587, 1931,
	588, 1931,
	590, 1931,
	591, 1931,
	592, 1931,
	593, 1931,
	594, 1931,
	595, 1931,
	596, 1931,
	597, 1931,
	598, 1931,
	599, 1931,
	600, 1931,
	601, 1931,
	604, 1931,
	605, 1931,
	606, 1931,
	607, 1931,
	608, 1931,
	609, 1931,
	611, 1931,
	612, 1931,
	613, 1931,
	614, 1931,
	615, 1931,
	616, 1931,
	617, 1931,
	618, 1931,
	619, 1931,
	620, 1931,
	621, 1931,
	622, 1931,
	627, 1931,
	628, 1931,
	629, 1931,
	630, 1931,
	631, 1931,
	632, 1931,
	633, 1931,
	648, 1931,
	655, 1931,
	656, 1931,
	657, 1931,
	665, 1931,
	669, 1931,
	-2, 0,
	-1, 859,
	4, 1641,
	21, 1641,
	22, 1641,
	23, 1641,
	24, 1641,
	25, 1641,
	26, 1641,
	27, 1641,
	28, 1641,
	30, 1641,
	31, 1641,
	37, 1641,
	41, 1641,
	43, 1641,
	44, 1641,
	45, 1641,
	47, 1641,
	48, 1641,
	49, 1641,
	50, 1641,
	51, 1641,
	52, 1641,
	53, 1641,
	54, 1641,
	55, 1641,
	57, 1641,
	58, 1641,
	59, 1641,
	60, 1641,
	62, 1641,
	63, 1641,
	64, 1641,
	65, 1641,
	66, 1641,
	67, 1641,
	68, 1641,
	69, 1641,
	73, 1641,
	74, 1641,
	75, 1641,
	76, 1641,
	78, 1641,
	79, 1641,
	80, 1641,
	84, 1641,
	85, 1641,
	86, 1641,
	87, 1641,
	88, 1641,
	89, 1641,
	90, 1641,
	91, 1641,
	94, 1641,
	95, 1641,
	96, 1641,
	97, 1641,
	98, 1641,
	99, 1641,
	101, 1641,
	103, 1641,
	104, 1641,
	105, 1641,
	106, 1641,
	107, 1641,
	108, 1641,
	109, 1641,
	111, 1641,
	112, 1641,
	113, 1641,
	115, 1641,
	116, 1641,
	117, 1641,
	125, 1641,
	126, 1641,
	127, 1641,
	128, 1641,
	129, 1641,
	131, 1641,
	132, 1641,
	133, 1641,
	134, 1641,
	136, 1641,
	137, 1641,
	138, 1641,
	139, 1641,
	141, 1641,
	142, 1641,
	143, 1641,
	144, 1641,
	146, 1641,
	147, 1641,
	148, 1641,
	151, 1641,
	152, 1641,
	153, 1641,
	155, 1641,
	156, 1641,
	157, 1641,
	159, 1641,
	160, 1641,
	161, 1641,
	163, 1641,
	164, 1641,
	165, 1641,
	166, 1641,
	167, 1641,
	168, 1641,
	169, 1641,
	170, 1641,
	171, 1641,
	172, 1641,
	173, 1641,
	174, 1641,
	175, 1641,
	176, 1641,
	177, 1641,
	178, 1641,
	179, 1641,
	180, 1641,
	182, 1641,
	188, 1641,
	189, 1641,
	190, 1641,
	191, 1641,
	195, 1641,
	197, 1641,
	198, 1641,
	199, 1641,
	201, 1641,
	202, 1641,
	205, 1641,
	206, 1641,
	207, 1641,
	208, 1641,
	209, 1641,
	210, 1641,
	211, 1641,
	212, 1641,
	213, 1641,
	214, 1641,
	215, 1641,
	216, 1641,
	217, 1641,
	218, 1641,
	220, 1641,
	221, 1641,
	223, 1641,
	224, 1641,
	226, 1641,
	227, 1641,
	228, 1641,
	229, 1641,
	230, 1641,
	231, 1641,
	232, 1641,
	233, 1641,
	234, 1641,
	235, 1641,
	236, 1641,
	238, 1641,
	239, 1641,
	240, 1641,
	242, 1641,
	243, 1641,
	244, 1641,
	245, 1641,
	246, 1641,
	250, 1641,
	251, 1641,
	252, 1641,
	253, 1641,
	255, 1641,
	256, 1641,
	257, 1641,
	259, 1641,
	260, 1641,
	261, 1641,
	262, 1641,
	263, 1641,
	264, 1641,
	266, 1641,
	268, 1641,
	269, 1641,
	270, 1641,
	272, 1641,
	274, 1641,
	275, 1641,
	276, 1641,
	278, 1641,
	282, 1641,
	283, 1641,
	284, 1641,
	285, 1641,
	286, 1641,
	287, 1641,
	288, 1641,
	290, 1641,
	291, 1641,
	292, 1641,
	294, 1641,
	295, 1641,
	296, 1641,
	298, 1641,
	299, 1641,
	302, 1641,
	303, 1641,
	304, 1641,
	305, 1641,
	306, 1641,
	307, 1641,
	308, 1641,
	311, 1641,
	312, 1641,
	313, 1641,
	314, 1641,
	316, 1641,
	317, 1641,
	318, 1641,
	319, 1641,
	320, 1641,
	321, 1641,
	322, 1641,
	323, 1641,
	324, 1641,
	325, 1641,
	326, 1641,
	327, 1641,
	328, 1641,
	329, 1641,
	330, 1641,
	331, 1641,
	332, 1641,
	333, 1641,
	334, 1641,
	335, 1641,
	336, 1641,
	337, 1641,
	338, 1641,
	340, 1641,
	342, 1641,
	343, 1641,
	344, 1641,
	345, 1641,
	346, 1641,
	347, 1641,
	348, 1641,
	349, 1641,
	350, 1641,
	351, 1641,
	352, 1641,
	353, 1641,
	354, 1641,
	355, 1641,
	356, 1641,
	357, 1641,
	358, 1641,
	360, 1641,
	361, 1641,
	363, 1641,
	364, 1641,
	366, 1641,
	367, 1641,
	368, 1641,
	369, 1641,
	371, 1641,
	372, 1641,
	373, 1641,
	374, 1641,
	375, 1641,
	378, 1641,
	380, 1641,
	383, 1641,
	384, 1641,
	385, 1641,
	388, 1641,
	389, 1641,
	390, 1641,
	392, 1641,
	394, 1641,
	395, 1641,
	396, 1641,
	397, 1641,
	398, 1641,
	399, 1641,
	400, 1641,
	401, 1641,
	402, 1641,
	403, 1641,
	404, 1641,
	405, 1641,
	406, 1641,
	407, 1641,
	409, 1641,
	410, 1641,
	411, 1641,
	412, 1641,
	413, 1641,
	414, 1641,
	415, 1641,
	416, 1641,
	417, 1641,
	418, 1641,
	419, 1641,
	420, 1641,
	421, 1641,
	422, 1641,
	423, 1641,
	425, 1641,
	426, 1641,
	427, 1641,
	429, 1641,
	430, 1641,
	431, 1641,
	432, 1641,
	433, 1641,
	434, 1641,
	435, 1641,
	436, 1641,
	437, 1641,
	438, 1641,
	439, 1641,
	440, 1641,
	441, 1641,
	442, 1641,
	444, 1641,
	446, 1641,
	447, 1641,
	448, 1641,
	454, 1641,
	455, 1641,
	456, 1641,
	458, 1641,
	459, 1641,
	460, 1641,
	461, 1641,
	462, 1641,
	463, 1641,
	464, 1641,
	465, 1641,
	466, 1641,
	467, 1641,
	468, 1641,
	470, 1641,
	471, 1641,
	472, 1641,
	473, 1641,
	474, 1641,
	476, 1641,
	477, 1641,
	478, 1641,
	479, 1641,
	480, 1641,
	481, 1641,
	482, 1641,
	484, 1641,
	485, 1641,
	486, 1641,
	487, 1641,
	488, 1641,
	489, 1641,
	490, 1641,
	491, 1641,
	492, 1641,
	493, 1641,
	494, 1641,
	495, 1641,
	496, 1641,
	497, 1641,
	498, 1641,
	499, 1641,
	501, 1641,
	502, 1641,
	503, 1641,
	504, 1641,
	505, 1641,
	506, 1641,
	508, 1641,
	509, 1641,
	510, 1641,
	511, 1641,
	512, 1641,
	513, 1641,
	514, 1641,
	516, 1641,
	517, 1641,
	518, 1641,
	519, 1641,
	520, 1641,
	521, 1641,
	522, 1641,
	523, 1641,
	525, 1641,
	527, 1641,
	528, 1641,
	529, 1641,
	530, 1641,
	531, 1641,
	532, 1641,
	533, 1641,
	534, 1641,
	535, 1641,
	536, 1641,
	537, 1641,
	538, 1641,
	539, 1641,
	540, 1641,
	541, 1641,
	542, 1641,
	543, 1641,
	544, 1641,
	545, 1641,
	546, 1641,
	547, 1641,
	549, 1641,
	550, 1641,
	552, 1641,
	553, 1641,
	555, 1641,
	556, 1641,
	557, 1641,
	558, 1641,
	559, 1641,
	560, 1641,
	562, 1641,
	563, 1641,
	565, 1641,
	566, 1641,
	567, 1641,
	568, 1641,
	569, 1641,
	571, 1641,
	573, 1641,
	574, 1641,
	575, 1641,
	576, 1641,
	577, 1641,
	578, 1641,
	579, 1641,
	580, 1641,
	582, 1641,
	583, 1641,
	584, 1641,
	585, 1641,
	586, 1641,
	587, 1641,
	588, 1641,
	591, 1641,
	592, 1641,
	593, 1641,
	594, 1641,
	595, 1641,
	596, 1641,
	597, 1641,
	598, 1641,
	599, 1641,
	601, 1641,
	604, 1641,
	605, 1641,
	606, 1641,
	607, 1641,
	608, 1641,
	609, 1641,
	611, 1641,
	612, 1641,
	613, 1641,
	614, 1641,
	615, 1641,
	616, 1641,
	617, 1641,
	618, 1641,
	619, 1641,
	620, 1641,
	621, 1641,
	622, 1641,
	627, 1641,
	628, 1641,
	629, 1641,
	630, 1641,
	631, 1641,
	632, 1641,
	-2, 0,
	-1, 878,
	203, 2750,
	570, 2750,
	647, 2750,
	667, 2750,
	-2, 0,
	-1, 879,
	203, 2735,
	570, 2735,
	647, 2735,
	667, 2735,
	-2, 0,
	-1, 881,
	203, 3035,
	570, 3035,
	647, 3035,
	667, 3035,
	-2, 0,
	-1, 884,
	203, 2876,
	570, 2876,
	647, 2876,
	667, 2876,
	-2, 0,
	-1, 885,
	203, 3082,
	570, 3082,
	647, 3082,
	667, 3082,
	-2, 0,
	-1, 893,
	203, 2904,
	570, 2904,
	647, 2904,
	667, 2904,
	-2, 917,
	-1, 909,
	8, 1054,
	29, 1054,
	655, 1054,
	656, 1054,
	-2, 1059,
	-1, 913,
	1, 2808,
	668, 2808,
	671, 2808,
	-2, 1059,
	-1, 914,
	1, 2863,
	668, 2863,
	671, 2863,
	-2, 1059,
	-1, 917,
	1, 2909,
	668, 2909,
	671, 2909,
	-2, 1052,
	-1, 918,
	1, 2967,
	668, 2967,
	671, 2967,
	-2, 1053,
	-1, 919,
	1, 2813,
	668, 2813,
	671, 2813,
	-2, 1056,
	-1, 920,
	1, 2721,
	668, 2721,
	671, 2721,
	-2, 1057,
	-1, 963,
	667, 2678,
	670, 2678,
	-2, 1300,
	-1, 964,
	667, 2680,
	670, 2680,
	-2, 1301,
	-1, 965,
	667, 2679,
	670, 2679,
	-2, 1302,
	-1, 966,
	670, 2601,
	-2, 1303,
	-1, 992,
	196, 329,
	-2, 0,
	-1, 1014,
	46, 2650,
	-2, 0,
	-1, 1015,
	612, 1619,
	-2, 1385,
	-1, 1032,
	4, 2079,
	21, 2079,
	22, 2079,
	23, 2079,
	24, 2079,
	25, 2079,
	26, 2079,
	27, 2079,
	28, 2079,
	30, 2079,
	31, 2079,
	37, 2079,
	41, 2079,
	43, 2079,
	44, 2079,
	45, 2079,
	47, 2079,
	48, 2079,
	49, 2079,
	50, 2079,
	51, 2079,
	52, 2079,
	53, 2079,
	54, 2079,
	55, 2079,
	57, 2079,
	58, 2079,
	59, 2079,
	60, 2079,
	62, 2079,
	63, 2079,
	64, 2079,
	65, 2079,
	66, 2079,
	67, 2079,
	68, 2079,
	69, 2079,
	73, 2079,
	74, 2079,
	75, 2079,
	76, 2079,
	78, 2079,
	79, 2079,
	80, 2079,
	84, 2079,
	85, 2079,
	86, 2079,
	87, 2079,
	88, 2079,
	89, 2079,
	90, 2079,
	91, 2079,
	94, 2079,
	95, 2079,
	96, 2079,
	97, 2079,
	98, 2079,
	99, 2079,
	101, 2079,
	103, 2079,
	104, 2079,
	105, 2079,
	106, 2079,
	107, 2079,
	108, 2079,
	109, 2079,
	111, 2079,
	112, 2079,
	113, 2079,
	115, 2079,
	116, 2079,
	117, 2079,
	125, 2079,
	126, 2079,
	127, 2079,
	128, 2079,
	129, 2079,
	131, 2079,
	132, 2079,
	133, 2079,
	134, 2079,
	136, 2079,
	137, 2079,
	138, 2079,
	139, 2079,
	141, 2079,
	142, 2079,
	143, 2079,
	144, 2079,
	146, 2079,
	147, 2079,
	148, 2079,
	151, 2079,
	152, 2079,
	153, 2079,
	155, 2079,
	156, 2079,
	157, 2079,
	159, 2079,
	160, 2079,
	161, 2079,
	163, 2079,
	164, 2079,
	165, 2079,
	166, 2079,
	167, 2079,
	168, 2079,
	169, 2079,
	170, 2079,
	171, 2079,
	172, 2079,
	173, 2079,
	174, 2079,
	175, 2079,
	176, 2079,
	177, 2079,
	178, 2079,
	179, 2079,
	180, 2079,
	182, 2079,
	188, 2079,
	189, 2079,
	190, 2079,
	191, 2079,
	195, 2079,
	197, 2079,
	198, 2079,
	199, 2079,
	201, 2079,
	202, 2079,
	205, 2079,
	206, 2079,
	207, 2079,
	208, 2079,
	209, 2079,
	210, 2079,
	211, 2079,
	212, 2079,
	213, 2079,
	214, 2079,
	215, 2079,
	216, 2079,
	217, 2079,
	218, 2079,
	220, 2079,
	221, 2079,
	223, 2079,
	224, 2079,
	226, 2079,
	227, 2079,
	228, 2079,
	229, 2079,
	230, 2079,
	231, 2079,
	232, 2079,
	233, 2079,
	234, 2079,
	235, 2079,
	236, 2079,
	238, 2079,
	239, 2079,
	240, 2079,
	242, 2079,
	243, 2079,
	244, 2079,
	245, 2079,
	246, 2079,
	250, 2079,
	251, 2079,
	252, 2079,
	253, 2079,
	255, 2079,
	256, 2079,
	257, 2079,
	259, 2079,
	260, 2079,
	261, 2079,
	262, 2079,
	263, 2079,
	264, 2079,
	266, 2079,
	268, 2079,
	269, 2079,
	270, 2079,
	272, 2079,
	274, 2079,
	275, 2079,
	276, 2079,
	278, 2079,
	282, 2079,
	283, 2079,
	284, 2079,
	285, 2079,
	286, 2079,
	287, 2079,
	288, 2079,
	290, 2079,
	291, 2079,
	292, 2079,
	294, 2079,
	295, 2079,
	296, 2079,
	298, 2079,
	299, 2079,
	302, 2079,
	303, 2079,
	304, 2079,
	305, 2079,
	306, 2079,
	307, 2079,
	308, 2079,
	311, 2079,
	312, 2079,
	313, 2079,
	314, 2079,
	316, 2079,
	317, 2079,
	318, 2079,
	319, 2079,
	320, 2079,
	321, 2079,
	322, 2079,
	323, 2079,
	324, 2079,
	325, 2079,
	326, 2079,
	327, 2079,
	328, 2079,
	329, 2079,
	330, 2079,
	331, 2079,
	332, 2079,
	333, 2079,
	334, 2079,
	335, 2079,
	336, 2079,
	337, 2079,
	338, 2079,
	340, 2079,
	342, 2079,
	343, 2079,
	344, 2079,
	345, 2079,
	346, 2079,
	347, 2079,
	348, 2079,
	349, 2079,
	350, 2079,
	351, 2079,
	352, 2079,
	353, 2079,
	354, 2079,
	355, 2079,
	356, 2079,
	357, 2079,
	358, 2079,
	360, 2079,
	361, 2079,
	363, 2079,
	364, 2079,
	366, 2079,
	367, 2079,
	368, 2079,
	369, 2079,
	371, 2079,
	372, 2079,
	373, 2079,
	374, 2079,
	375, 2079,
	378, 2079,
	380, 2079,
	383, 2079,
	384, 2079,
	385, 2079,
	388, 2079,
	389, 2079,
	390, 2079,
	392, 2079,
	394, 2079,
	395, 2079,
	396, 2079,
	397, 2079,
	398, 2079,
	399, 2079,
	400, 2079,
	401, 2079,
	402, 2079,
	403, 2079,
	404, 2079,
	405, 2079,
	406, 2079,
	407, 2079,
	409, 2079,
	410, 2079,
	411, 2079,
	412, 2079,
	413, 2079,
	414, 2079,
	415, 2079,
	416, 2079,
	417, 2079,
	418, 2079,
	419, 2079,
	420, 2079,
	421, 2079,
	422, 2079,
	423, 2079,
	425, 2079,
	426, 2079,
	427, 2079,
	429, 2079,
	430, 2079,
	431, 2079,
	432, 2079,
	433, 2079,
	434, 2079,
	435, 2079,
	436, 2079,
	437, 2079,
	438, 2079,
	439, 2079,
	440, 2079,
	441, 2079,
	442, 2079,
	444, 2079,
	446, 2079,
	447, 2079,
	448, 2079,
	454, 2079,
	455, 2079,
	456, 2079,
	458, 2079,
	459, 2079,
	460, 2079,
	461, 2079,
	462, 2079,
	463, 2079,
	464, 2079,
	465, 2079,
	466, 2079,
	467, 2079,
	468, 2079,
	470, 2079,
	471, 2079,
	472, 2079,
	473, 2079,
	474, 2079,
	476, 2079,
	477, 2079,
	478, 2079,
	479, 2079,
	480, 2079,
	481, 2079,
	482, 2079,
	484, 2079,
	485, 2079,
	486, 2079,
	487, 2079,
	488, 2079,
	489, 2079,
	490, 2079,
	491, 2079,
	492, 2079,
	493, 2079,
	494, 2079,
	495, 2079,
	496, 2079,
	497, 2079,
	498, 2079,
	499, 2079,
	501, 2079,
	502, 2079,
	503, 2079,
	504, 2079,
	505, 2079,
	506, 2079,
	508, 2079,
	509, 2079,
	510, 2079,
	511, 2079,
	512, 2079,
	513, 2079,
	514, 2079,
	516, 2079,
	517, 2079,
	518, 2079,
	519, 2079,
	520, 2079,
	521, 2079,
	522, 2079,
	523, 2079,
	525, 2079,
	527, 2079,
	528, 2079,
	529, 2079,
	530, 2079,
	531, 2079,
	532, 2079,
	533, 2079,
	534, 2079,
	535, 2079,
	536, 2079,
	537, 2079,
	538, 2079,
	539, 2079,
	540, 2079,
	541, 2079,
	542, 2079,
	543, 2079,
	544, 2079,
	545, 2079,
	546, 2079,
	547, 2079,
	549, 2079,
	550, 2079,
	552, 2079,
	553, 2079,
	555, 2079,
	556, 2079,
	557, 2079,
	558, 2079,
	559, 2079,
	560, 2079,
	562, 2079,
	563, 2079,
	565, 2079,
	566, 2079,
	567, 2079,
	568, 2079,
	569, 2079,
	571, 2079,
	573, 2079,
	574, 2079,
	575, 2079,
	576, 2079,
	577, 2079,
	578, 2079,
	579, 2079,
	580, 2079,
	582, 2079,
	583, 2079,
	584, 2079,
	585, 2079,
	586, 2079,
	587, 2079,
	588, 2079,
	591, 2079,
	592, 2079,
	593, 2079,
	594, 2079,
	595, 2079,
	596, 2079,
	597, 2079,
	598, 2079,
	599, 2079,
	601, 2079,
	604, 2079,
	605, 2079,
	606, 2079,
	607, 2079,
	608, 2079,
	609, 2079,
	611, 2079,
	612, 2079,
	613, 2079,
	614, 2079,
	615, 2079,
	616, 2079,
	617, 2079,
	618, 2079,
	619, 2079,
	620, 2079,
	621, 2079,
	622, 2079,
	627, 2079,
	628, 2079,
	629, 2079,
	630, 2079,
	631, 2079,
	632, 2079,
	-2, 0,
	-1, 1043,
	287, 582,
	-2, 0,
	-1, 1123,
	203, 1099,
	-2, 0,
	-1, 1124,
	431, 1154,
	506, 1154,
	553, 1154,
	575, 1154,
	-2, 0,
	-1, 1125,
	431, 1153,
	506, 1153,
	553, 1153,
	575, 1153,
	-2, 1072,
	-1, 1129,
	1, 1210,
	664, 1210,
	666, 1210,
	668, 1210,
	671, 1210,
	-2, 0,
	-1, 1131,
	1, 1127,
	664, 1127,
	666, 1127,
	668, 1127,
	671, 1127,
	-2, 0,
	-1, 1132,
	1, 1131,
	664, 1131,
	666, 1131,
	668, 1131,
	671, 1131,
	-2, 0,
	-1, 1133,
	1, 1289,
	196, 1289,
	664, 1289,
	666, 1289,
	668, 1289,
	671, 1289,
	-2, 0,
	-1, 1142,
	1, 1159,
	664, 1159,
	666, 1159,
	668, 1159,
	671, 1159,
	-2, 0,
	-1, 1149,
	1, 1210,
	664, 1210,
	666, 1210,
	668, 1210,
	671, 1210,
	-2, 0,
	-1, 1150,
	1, 1203,
	664, 1203,
	666, 1203,
	668, 1203,
	671, 1203,
	-2, 0,
	-1, 1151,
	1, 1212,
	664, 1212,
	666, 1212,
	668, 1212,
	671, 1212,
	-2, 0,
	-1, 1152,
	1, 1215,
	664, 1215,
	666, 1215,
	668, 1215,
	671, 1215,
	-2, 0,
	-1, 1160,
	1, 1252,
	664, 1252,
	666, 1252,
	668, 1252,
	671, 1252,
	-2, 0,
	-1, 1161,
	1, 1254,
	664, 1254,
	666, 1254,
	668, 1254,
	671, 1254,
	-2, 0,
	-1, 1166,
	1, 1282,
	664, 1282,
	666, 1282,
	668, 1282,
	671, 1282,
	-2, 0,
	-1, 1220,
	183, 1935,
	196, 1935,
	301, 1935,
	376, 1935,
	-2, 1871,
	-1, 1237,
	183, 1934,
	196, 1934,
	301, 1934,
	376, 1934,
	-2, 1868,
	-1, 1266,
	667, 2677,
	-2, 925,
	-1, 1273,
	665, 2667,
	-2, 3298,
	-1, 1296,
	5, 2669,
	665, 2666,
	-2, 2657,
	-1, 1304,
	5, 2690,
	665, 2687,
	-2, 2678,
	-1, 1305,
	5, 2691,
	665, 2688,
	-2, 2679,
	-1, 1315,
	667, 2675,
	-2, 2656,
	-1, 1316,
	665, 3197,
	-2, 2676,
	-1, 1339,
	5, 2692,
	38, 2692,
	135, 2692,
	647, 2692,
	663, 2692,
	666, 2692,
	667, 2692,
	670, 2692,
	-2, 3196,
	-1, 1340,
	5, 2154,
	-2, 3166,
	-1, 1341,
	5, 2155,
	-2, 3167,
	-1, 1342,
	5, 2156,
	-2, 3182,
	-1, 1343,
	5, 2157,
	-2, 3144,
	-1, 1344,
	5, 2158,
	-2, 3179,
	-1, 1345,
	5, 2166,
	-2, 3157,
	-1, 1346,
	5, 2153,
	-2, 3153,
	-1, 1347,
	5, 2153,
	-2, 3152,
	-1, 1348,
	5, 2153,
	-2, 3172,
	-1, 1349,
	5, 2164,
	-2, 3146,
	-1, 1350,
	5, 2169,
	665, 2181,
	-2, 3145,
	-1, 1351,
	5, 2171,
	-2, 3192,
	-1, 1354,
	5, 2193,
	-2, 3185,
	-1, 1355,
	5, 2185,
	-2, 3186,
	-1, 1356,
	5, 2193,
	-2, 3187,
	-1, 1357,
	5, 2189,
	-2, 3188,
	-1, 1358,
	5, 2137,
	-2, 3158,
	-1, 1359,
	5, 2138,
	-2, 3159,
	-1, 1360,
	5, 2139,
	-2, 3147,
	-1, 1388,
	5, 2176,
	665, 2176,
	-2, 3193,
	-1, 1389,
	5, 2177,
	665, 2177,
	-2, 3183,
	-1, 1390,
	5, 2178,
	613, 2178,
	665, 2178,
	-2, 3148,
	-1, 1391,
	5, 2179,
	613, 2179,
	665, 2179,
	-2, 3149,
	-1, 1429,
	665, 2687,
	-2, 2678,
	-1, 1430,
	665, 2688,
	-2, 2679,
	-1, 1538,
	203, 3082,
	570, 3082,
	647, 3082,
	667, 3082,
	-2, 0,
	-1, 1543,
	1, 901,
	668, 901,
	671, 901,
	-2, 1777,
	-1, 1590,
	1, 1772,
	668, 1772,
	671, 1772,
	-2, 1777,
	-1, 1692,
	396, 2651,
	458, 2651,
	508, 2651,
	657, 2651,
	-2, 2639,
	-1, 1700,
	203, 170,
	294, 170,
	360, 170,
	622, 170,
	-2, 3077,
	-1, 1701,
	203, 171,
	294, 171,
	360, 171,
	622, 171,
	-2, 2798,
	-1, 1702,
	203, 172,
	294, 172,
	360, 172,
	622, 172,
	-2, 2990,
	-1, 1708,
	669, 2651,
	-2, 2653,
	-1, 1711,
	25, 3014,
	241, 3014,
	-2, 0,
	-1, 1732,
	1, 1616,
	463, 1570,
	508, 1570,
	639, 1570,
	644, 1570,
	664, 1616,
	666, 1616,
	668, 1616,
	671, 1616,
	-2, 1920,
	-1, 1738,
	219, 1716,
	241, 1716,
	474, 1716,
	-2, 0,
	-1, 1806,
	46, 2649,
	-2, 1347,
	-1, 1813,
	1, 1616,
	664, 1616,
	666, 1616,
	668, 1616,
	671, 1616,
	-2, 1920,
	-1, 1816,
	440, 1384,
	612, 1384,
	-2, 481,
	-1, 1822,
	4, 1641,
	21, 1641,
	22, 1641,
	23, 1641,
	24, 1641,
	25, 1641,
	26, 1641,
	27, 1641,
	28, 1641,
	30, 1641,
	31, 1641,
	37, 1641,
	41, 1641,
	43, 1641,
	44, 1641,
	45, 1641,
	47, 1641,
	48, 1641,
	49, 1641,
	50, 1641,
	51, 1641,
	52, 1641,
	53, 1641,
	54, 1641,
	55, 1641,
	57, 1641,
	58, 1641,
	59, 1641,
	60, 1641,
	62, 1641,
	63, 1641,
	64, 1641,
	65, 1641,
	66, 1641,
	67, 1641,
	68, 1641,
	69, 1641,
	73, 1641,
	74, 1641,
	75, 1641,
	76, 1641,
	78, 1641,
	79, 1641,
	80, 1641,
	84, 1641,
	85, 1641,
	86, 1641,
	87, 1641,
	88, 1641,
	89, 1641,
	90, 1641,
	91, 1641,
	94, 1641,
	95, 1641,
	96, 1641,
	97, 1641,
	98, 1641,
	99, 1641,
	101, 1641,
	103, 1641,
	104, 1641,
	105, 1641,
	106, 1641,
	107, 1641,
	108, 1641,
	109, 1641,
	111, 1641,
	112, 1641,
	113, 1641,
	115, 1641,
	116, 1641,
	117, 1641,
	125, 1641,
	126, 1641,
	127, 1641,
	128, 1641,
	129, 1641,
	131, 1641,
	132, 1641,
	133, 1641,
	134, 1641,
	136, 1641,
	137, 1641,
	138, 1641,
	139, 1641,
	141, 1641,
	142, 1641,
	143, 1641,
	144, 1641,
	146, 1641,
	147, 1641,
	148, 1641,
	151, 1641,
	152, 1641,
	153, 1641,
	155, 1641,
	156, 1641,
	157, 1641,
	159, 1641,
	160, 1641,
	161, 1641,
	163, 1641,
	164, 1641,
	165, 1641,
	166, 1641,
	167, 1641,
	168, 1641,
	169, 1641,
	170, 1641,
	171, 1641,
	172, 1641,
	173, 1641,
	174, 1641,
	175, 1641,
	176, 1641,
	177, 1641,
	178, 1641,
	179, 1641,
	180, 1641,
	188, 1641,
	189, 1641,
	190, 1641,
	191, 1641,
	195, 1641,
	197, 1641,
	198, 1641,
	199, 1641,
	201, 1641,
	202, 1641,
	205, 1641,
	206, 1641,
	207, 1641,
	208, 1641,
	209, 1641,
	210, 1641,
	211, 1641,
	212, 1641,
	213, 1641,
	214, 1641,
	215, 1641,
	216, 1641,
	217, 1641,
	218, 1641,
	220, 1641,
	221, 1641,
	223, 1641,
	224, 1641,
	226, 1641,
	227, 1641,
	228, 1641,
	229, 1641,
	230, 1641,
	231, 1641,
	232, 1641,
	233, 1641,
	234, 1641,
	235, 1641,
	236, 1641,
	238, 1641,
	239, 1641,
	240, 1641,
	242, 1641,
	243, 1641,
	244, 1641,
	245, 1641,
	246, 1641,
	250, 1641,
	251, 1641,
	252, 1641,
	253, 1641,
	259, 1641,
	260, 1641,
	261, 1641,
	262, 1641,
	263, 1641,
	264, 1641,
	266, 1641,
	268, 1641,
	269, 1641,
	270, 1641,
	272, 1641,
	274, 1641,
	275, 1641,
	276, 1641,
	278, 1641,
	282, 1641,
	283, 1641,
	284, 1641,
	285, 1641,
	286, 1641,
	287, 1641,
	288, 1641,
	290, 1641,
	291, 1641,
	292, 1641,
	294, 1641,
	295, 1641,
	296, 1641,
	298, 1641,
	299, 1641,
	302, 1641,
	303, 1641,
	304, 1641,
	305, 1641,
	306, 1641,
	307, 1641,
	308, 1641,
	311, 1641,
	312, 1641,
	313, 1641,
	314, 1641,
	316, 1641,
	317, 1641,
	318, 1641,
	319, 1641,
	320, 1641,
	321, 1641,
	322, 1641,
	323, 1641,
	324, 1641,
	325, 1641,
	326, 1641,
	327, 1641,
	328, 1641,
	329, 1641,
	330, 1641,
	331, 1641,
	332, 1641,
	333, 1641,
	334, 1641,
	335, 1641,
	336, 1641,
	337, 1641,
	338, 1641,
	340, 1641,
	342, 1641,
	343, 1641,
	344, 1641,
	345, 1641,
	346, 1641,
	347, 1641,
	348, 1641,
	349, 1641,
	350, 1641,
	351, 1641,
	352, 1641,
	353, 1641,
	354, 1641,
	355, 1641,
	356, 1641,
	357, 1641,
	358, 1641,
	360, 1641,
	361, 1641,
	363, 1641,
	366, 1641,
	367, 1641,
	368, 1641,
	369, 1641,
	371, 1641,
	372, 1641,
	373, 1641,
	374, 1641,
	375, 1641,
	378, 1641,
	380, 1641,
	381, 1641,
	383, 1641,
	384, 1641,
	385, 1641,
	388, 1641,
	389, 1641,
	390, 1641,
	392, 1641,
	394, 1641,
	395, 1641,
	396, 1641,
	397, 1641,
	398, 1641,
	399, 1641,
	400, 1641,
	401, 1641,
	402, 1641,
	403, 1641,
	404, 1641,
	405, 1641,
	406, 1641,
	407, 1641,
	409, 1641,
	410, 1641,
	411, 1641,
	412, 1641,
	413, 1641,
	414, 1641,
	415, 1641,
	416, 1641,
	417, 1641,
	418, 1641,
	419, 1641,
	420, 1641,
	421, 1641,
	422, 1641,
	423, 1641,
	425, 1641,
	426, 1641,
	427, 1641,
	429, 1641,
	430, 1641,
	431, 1641,
	432, 1641,
	433, 1641,
	434, 1641,
	435, 1641,
	436, 1641,
	437, 1641,
	438, 1641,
	439, 1641,
	440, 1641,
	441, 1641,
	442, 1641,
	444, 1641,
	446, 1641,
	447, 1641,
	448, 1641,
	454, 1641,
	455, 1641,
	456, 1641,
	458, 1641,
	459, 1641,
	460, 1641,
	461, 1641,
	462, 1641,
	463, 1641,
	464, 1641,
	465, 1641,
	466, 1641,
	467, 1641,
	468, 1641,
	470, 1641,
	471, 1641,
	472, 1641,
	473, 1641,
	474, 1641,
	476, 1641,
	477, 1641,
	478, 1641,
	479, 1641,
	480, 1641,
	481, 1641,
	482, 1641,
	484, 1641,
	485, 1641,
	486, 1641,
	487, 1641,
	488, 1641,
	489, 1641,
	490, 1641,
	491, 1641,
	492, 1641,
	493, 1641,
	494, 1641,
	495, 1641,
	496, 1641,
	497, 1641,
	498, 1641,
	499, 1641,
	501, 1641,
	502, 1641,
	503, 1641,
	504, 1641,
	505, 1641,
	506, 1641,
	508, 1641,
	509, 1641,
	510, 1641,
	511, 1641,
	512, 1641,
	513, 1641,
	514, 1641,
	516, 1641,
	517, 1641,
	518, 1641,
	519, 1641,
	520, 1641,
	521, 1641,
	522, 1641,
	523, 1641,
	525, 1641,
	527, 1641,
	528, 1641,
	529, 1641,
	530, 1641,
	531, 1641,
	532, 1641,
	533, 1641,
	534, 1641,
	535, 1641,
	536, 1641,
	537, 1641,
	538, 1641,
	539, 1641,
	540, 1641,
	541, 1641,
	542, 1641,
	543, 1641,
	544, 1641,
	545, 1641,
	546, 1641,
	547, 1641,
	549, 1641,
	550, 1641,
	552, 1641,
	553, 1641,
	555, 1641,
	556, 1641,
	557, 1641,
	558, 1641,
	559, 1641,
	560, 1641,
	562, 1641,
	563, 1641,
	565, 1641,
	566, 1641,
	567, 1641,
	568, 1641,
	569, 1641,
	571, 1641,
	573, 1641,
	574, 1641,
	575, 1641,
	576, 1641,
	577, 1641,
	578, 1641,
	579, 1641,
	580, 1641,
	582, 1641,
	583, 1641,
	584, 1641,
	585, 1641,
	586, 1641,
	587, 1641,
	588, 1641,
	591, 1641,
	592, 1641,
	593, 1641,
	594, 1641,
	595, 1641,
	596, 1641,
	597, 1641,
	598, 1641,
	599, 1641,
	601, 1641,
	604, 1641,
	605, 1641,
	606, 1641,
	607, 1641,
	608, 1641,
	609, 1641,
	611, 1641,
	612, 1641,
	613, 1641,
	614, 1641,
	615, 1641,
	616, 1641,
	617, 1641,
	618, 1641,
	619, 1641,
	620, 1641,
	621, 1641,
	622, 1641,
	627, 1641,
	628, 1641,
	629, 1641,
	630, 1641,
	631, 1641,
	632, 1641,
	-2, 0,
	-1, 1845,
	1, 727,
	664, 727,
	666, 727,
	668, 727,
	671, 727,
	-2, 1891,
	-1, 1848,
	4, 3191,
	11, 3191,
	12, 3191,
	14, 3191,
	15, 3191,
	16, 3191,
	17, 3191,
	18, 3191,
	19, 3191,
	21, 3191,
	22, 3191,
	23, 3191,
	24, 3191,
	25, 3191,
	26, 3191,
	27, 3191,
	28, 3191,
	30, 3191,
	31, 3191,
	34, 3191,
	35, 3191,
	37, 3191,
	39, 3191,
	41, 3191,
	43, 3191,
	44, 3191,
	45, 3191,
	47, 3191,
	48, 3191,
	49, 3191,
	50, 3191,
	51, 3191,
	52, 3191,
	53, 3191,
	54, 3191,
	55, 3191,
	57, 3191,
	58, 3191,
	59, 3191,
	60, 3191,
	62, 3191,
	63, 3191,
	64, 3191,
	65, 3191,
	66, 3191,
	67, 3191,
	68, 3191,
	69, 3191,
	72, 3191,
	73, 3191,
	74, 3191,
	75, 3191,
	76, 3191,
	78, 3191,
	79, 3191,
	80, 3191,
	81, 3191,
	84, 3191,
	85, 3191,
	86, 3191,
	87, 3191,
	88, 3191,
	89, 3191,
	90, 3191,
	91, 3191,
	92, 3191,
	94, 3191,
	95, 3191,
	96, 3191,
	97, 3191,
	98, 3191,
	99, 3191,
	101, 3191,
	102, 3191,
	103, 3191,
	104, 3191,
	105, 3191,
	106, 3191,
	107, 3191,
	108, 3191,
	109, 3191,
	111, 3191,
	112, 3191,
	113, 3191,
	114, 3191,
	115, 3191,
	116, 3191,
	117, 3191,
	125, 3191,
	126, 3191,
	127, 3191,
	128, 3191,
	129, 3191,
	131, 3191,
	132, 3191,
	133, 3191,
	134, 3191,
	136, 3191,
	137, 3191,
	138, 3191,
	139, 3191,
	141, 3191,
	142, 3191,
	143, 3191,
	144, 3191,
	146, 3191,
	147, 3191,
	148, 3191,
	151, 3191,
	152, 3191,
	153, 3191,
	155, 3191,
	156, 3191,
	157, 3191,
	159, 3191,
	160, 3191,
	161, 3191,
	163, 3191,
	164, 3191,
	165, 3191,
	166, 3191,
	167, 3191,
	168, 3191,
	169, 3191,
	170, 3191,
	171, 3191,
	172, 3191,
	173, 3191,
	174, 3191,
	175, 3191,
	176, 3191,
	177, 3191,
	178, 3191,
	179, 3191,
	180, 3191,
	184, 3191,
	185, 3191,
	186, 3191,
	187, 3191,
	188, 3191,
	189, 3191,
	190, 3191,
	191, 3191,
	194, 3191,
	195, 3191,
	197, 3191,
	198, 3191,
	199, 3191,
	201, 3191,
	202, 3191,
	204, 3191,
	205, 3191,
	206, 3191,
	207, 3191,
	208, 3191,
	209, 3191,
	210, 3191,
	211, 3191,
	212, 3191,
	213, 3191,
	214, 3191,
	215, 3191,
	216, 3191,
	217, 3191,
	218, 3191,
	220, 3191,
	221, 3191,
	223, 3191,
	224, 3191,
	226, 3191,
	227, 3191,
	228, 3191,
	229, 3191,
	230, 3191,
	231, 3191,
	232, 3191,
	233, 3191,
	234, 3191,
	235, 3191,
	236, 3191,
	237, 3191,
	238, 3191,
	239, 3191,
	240, 3191,
	241, 3191,
	242, 3191,
	243, 3191,
	244, 3191,
	245, 3191,
	246, 3191,
	248, 3191,
	249, 3191,
	250, 3191,
	251, 3191,
	252, 3191,
	253, 3191,
	258, 3191,
	259, 3191,
	260, 3191,
	261, 3191,
	262, 3191,
	263, 3191,
	264, 3191,
	266, 3191,
	268, 3191,
	269, 3191,
	270, 3191,
	271, 3191,
	272, 3191,
	273, 3191,
	274, 3191,
	275, 3191,
	276, 3191,
	277, 3191,
	278, 3191,
	280, 3191,
	281, 3191,
	282, 3191,
	283, 3191,
	284, 3191,
	285, 3191,
	286, 3191,
	287, 3191,
	288, 3191,
	290, 3191,
	291, 3191,
	292, 3191,
	294, 3191,
	295, 3191,
	296, 3191,
	297, 3191,
	298, 3191,
	299, 3191,
	300, 3191,
	302, 3191,
	303, 3191,
	304, 3191,
	305, 3191,
	306, 3191,
	307, 3191,
	308, 3191,
	311, 3191,
	312, 3191,
	313, 3191,
	314, 3191,
	315, 3191,
	316, 3191,
	317, 3191,
	318, 3191,
	319, 3191,
	320, 3191,
	321, 3191,
	322, 3191,
	323, 3191,
	324, 3191,
	325, 3191,
	326, 3191,
	327, 3191,
	328, 3191,
	329, 3191,
	330, 3191,
	331, 3191,
	332, 3191,
	333, 3191,
	334, 3191,
	335, 3191,
	336, 3191,
	337, 3191,
	338, 3191,
	340, 3191,
	341, 3191,
	342, 3191,
	343, 3191,
	344, 3191,
	345, 3191,
	346, 3191,
	347, 3191,
	348, 3191,
	349, 3191,
	350, 3191,
	351, 3191,
	352, 3191,
	353, 3191,
	354, 3191,
	355, 3191,
	356, 3191,
	357, 3191,
	358, 3191,
	360, 3191,
	361, 3191,
	363, 3191,
	365, 3191,
	366, 3191,
	367, 3191,
	368, 3191,
	369, 3191,
	371, 3191,
	372, 3191,
	373, 3191,
	374, 3191,
	375, 3191,
	378, 3191,
	380, 3191,
	383, 3191,
	384, 3191,
	385, 3191,
	386, 3191,
	388, 3191,
	389, 3191,
	390, 3191,
	392, 3191,
	394, 3191,
	395, 3191,
	396, 3191,
	397, 3191,
	398, 3191,
	399, 3191,
	400, 3191,
	401, 3191,
	402, 3191,
	403, 3191,
	404, 3191,
	405, 3191,
	406, 3191,
	407, 3191,
	409, 3191,
	410, 3191,
	411, 3191,
	412, 3191,
	413, 3191,
	414, 3191,
	415, 3191,
	416, 3191,
	417, 3191,
	418, 3191,
	419, 3191,
	420, 3191,
	421, 3191,
	422, 3191,
	423, 3191,
	425, 3191,
	426, 3191,
	427, 3191,
	429, 3191,
	430, 3191,
	431, 3191,
	432, 3191,
	433, 3191,
	434, 3191,
	435, 3191,
	436, 3191,
	437, 3191,
	438, 3191,
	439, 3191,
	440, 3191,
	441, 3191,
	442, 3191,
	444, 3191,
	446, 3191,
	447, 3191,
	448, 3191,
	454, 3191,
	455, 3191,
	456, 3191,
	457, 3191,
	458, 3191,
	459, 3191,
	460, 3191,
	461, 3191,
	462, 3191,
	463, 3191,
	464, 3191,
	465, 3191,
	466, 3191,
	467, 3191,
	468, 3191,
	470, 3191,
	471, 3191,
	472, 3191,
	473, 3191,
	474, 3191,
	475, 3191,
	476, 3191,
	477, 3191,
	478, 3191,
	479, 3191,
	480, 3191,
	481, 3191,
	482, 3191,
	483, 3191,
	484, 3191,
	485, 3191,
	486, 3191,
	487, 3191,
	488, 3191,
	489, 3191,
	490, 3191,
	491, 3191,
	492, 3191,
	493, 3191,
	494, 3191,
	495, 3191,
	496, 3191,
	497, 3191,
	498, 3191,
	499, 3191,
	501, 3191,
	502, 3191,
	503, 3191,
	504, 3191,
	505, 3191,
	506, 3191,
	508, 3191,
	509, 3191,
	510, 3191,
	511, 3191,
	512, 3191,
	513, 3191,
	514, 3191,
	515, 3191,
	516, 3191,
	517, 3191,
	518, 3191,
	519, 3191,
	520, 3191,
	521, 3191,
	522, 3191,
	523, 3191,
	525, 3191,
	527, 3191,
	528, 3191,
	529, 3191,
	530, 3191,
	531, 3191,
	532, 3191,
	533, 3191,
	534, 3191,
	535, 3191,
	536, 3191,
	537, 3191,
	538, 3191,
	539, 3191,
	540, 3191,
	541, 3191,
	542, 3191,
	543, 3191,
	544, 3191,
	545, 3191,
	546, 3191,
	547, 3191,
	549, 3191,
	550, 3191,
	551, 3191,
	552, 3191,
	553, 3191,
	555, 3191,
	556, 3191,
	557, 3191,
	558, 3191,
	559, 3191,
	560, 3191,
	562, 3191,
	563, 3191,
	565, 3191,
	566, 3191,
	567, 3191,
	568, 3191,
	569, 3191,
	571, 3191,
	573, 3191,
	574, 3191,
	575, 3191,
	576, 3191,
	577, 3191,
	578, 3191,
	579, 3191,
	580, 3191,
	582, 3191,
	583, 3191,
	584, 3191,
	585, 3191,
	586, 3191,
	587, 3191,
	588, 3191,
	591, 3191,
	592, 3191,
	593, 3191,
	594, 3191,
	595, 3191,
	596, 3191,
	597, 3191,
	598, 3191,
	599, 3191,
	601, 3191,
	604, 3191,
	605, 3191,
	606, 3191,
	607, 3191,
	608, 3191,
	609, 3191,
	611, 3191,
	612, 3191,
	613, 3191,
	614, 3191,
	615, 3191,
	616, 3191,
	617, 3191,
	618, 3191,
	619, 3191,
	620, 3191,
	621, 3191,
	622, 3191,
	627, 3191,
	628, 3191,
	629, 3191,
	630, 3191,
	631, 3191,
	632, 3191,
	633, 3191,
	635, 3191,
	645, 3191,
	646, 3191,
	647, 3191,
	648, 3191,
	649, 3191,
	650, 3191,
	652, 3191,
	653, 3191,
	654, 3191,
	655, 3191,
	656, 3191,
	657, 3191,
	658, 3191,
	659, 3191,
	660, 3191,
	663, 3191,
	666, 3191,
	667, 3191,
	669, 3191,
	670, 3191,
	-2, 0,
	-1, 1853,
	203, 3035,
	570, 3035,
	647, 3035,
	667, 3035,
	-2, 0,
	-1, 1901,
	203, 1100,
	-2, 3025,
	-1, 1902,
	203, 1101,
	-2, 2806,
	-1, 1903,
	203, 1102,
	-2, 2976,
	-1, 1904,
	203, 1103,
	-2, 3105,
	-1, 1909,
	431, 1154,
	506, 1154,
	553, 1154,
	575, 1154,
	-2, 0,
	-1, 1920,
	1, 1716,
	241, 1716,
	664, 1716,
	666, 1716,
	668, 1716,
	671, 1716,
	-2, 0,
	-1, 1938,
	1, 1149,
	664, 1149,
	666, 1149,
	668, 1149,
	671, 1149,
	-2, 0,
	-1, 1939,
	1, 1193,
	664, 1193,
	666, 1193,
	668, 1193,
	671, 1193,
	-2, 0,
	-1, 1940,
	1, 1205,
	664, 1205,
	666, 1205,
	668, 1205,
	671, 1205,
	-2, 0,
	-1, 1943,
	1, 1158,
	664, 1158,
	666, 1158,
	668, 1158,
	671, 1158,
	-2, 0,
	-1, 1945,
	1, 1164,
	664, 1164,
	666, 1164,
	668, 1164,
	671, 1164,
	-2, 0,
	-1, 1948,
	1, 1160,
	664, 1160,
	666, 1160,
	668, 1160,
	671, 1160,
	-2, 0,
	-1, 1953,
	1, 1174,
	664, 1174,
	666, 1174,
	668, 1174,
	671, 1174,
	-2, 0,
	-1, 1992,
	1, 3014,
	664, 3014,
	666, 3014,
	667, 3014,
	668, 3014,
	671, 3014,
	-2, 0,
	-1, 1997,
	1, 1263,
	664, 1263,
	666, 1263,
	668, 1263,
	671, 1263,
	-2, 0,
	-1, 2017,
	183, 1934,
	196, 1934,
	301, 1934,
	376, 1934,
	-2, 1872,
	-1, 2119,
	162, 1893,
	183, 1893,
	196, 1893,
	265, 1893,
	301, 1893,
	376, 1893,
	387, 1893,
	589, 1893,
	-2, 2358,
	-1, 2166,
	665, 2180,
	-2, 2170,
	-1, 2183,
	666, 2533,
	-2, 0,
	-1, 2220,
	162, 1893,
	183, 1893,
	196, 1893,
	265, 1893,
	301, 1893,
	376, 1893,
	387, 1893,
	589, 1893,
	-2, 2034,
	-1, 2259,
	667, 2678,
	670, 2678,
	-2, 1290,
	-1, 2260,
	667, 2680,
	670, 2680,
	-2, 1291,
	-1, 2261,
	667, 2679,
	670, 2679,
	-2, 1292,
	-1, 2262,
	670, 2601,
	-2, 1293,
	-1, 2298,
	665, 2181,
	-2, 2169,
	-1, 2315,
	203, 3032,
	667, 3032,
	670, 3032,
	-2, 0,
	-1, 2366,
	1, 903,
	668, 903,
	671, 903,
	-2, 1777,
	-1, 2569,
	241, 323,
	-2, 2686,
	-1, 2570,
	241, 324,
	-2, 388,
	-1, 2688,
	1, 1151,
	664, 1151,
	666, 1151,
	668, 1151,
	671, 1151,
	-2, 0,
	-1, 2689,
	1, 1195,
	664, 1195,
	666, 1195,
	668, 1195,
	671, 1195,
	-2, 0,
	-1, 2690,
	1, 1207,
	664, 1207,
	666, 1207,
	668, 1207,
	671, 1207,
	-2, 0,
	-1, 2691,
	1, 1265,
	664, 1265,
	666, 1265,
	668, 1265,
	671, 1265,
	-2, 0,
	-1, 2733,
	1, 1176,
	664, 1176,
	666, 1176,
	668, 1176,
	671, 1176,
	-2, 0,
	-1, 2759,
	1, 1244,
	664, 1244,
	666, 1244,
	668, 1244,
	671, 1244,
	-2, 0,
	-1, 2809,
	481, 1961,
	482, 1961,
	-2, 2214,
	-1, 2842,
	14, 0,
	15, 0,
	16, 0,
	645, 0,
	646, 0,
	647, 0,
	-2, 2234,
	-1, 2843,
	14, 0,
	15, 0,
	16, 0,
	645, 0,
	646, 0,
	647, 0,
	-2, 2235,
	-1, 2844,
	102, 0,
	280, 0,
	281, 0,
	649, 0,
	650, 0,
	-2, 2236,
	-1, 2845,
	102, 0,
	280, 0,
	281, 0,
	649, 0,
	650, 0,
	-2, 2237,
	-1, 2846,
	102, 0,
	280, 0,
	281, 0,
	649, 0,
	650, 0,
	-2, 2238,
	-1, 2847,
	102, 0,
	280, 0,
	281, 0,
	649, 0,
	650, 0,
	-2, 2239,
	-1, 2848,
	102, 0,
	280, 0,
	281, 0,
	649, 0,
	650, 0,
	-2, 2240,
	-1, 2849,
	14, 0,
	15, 0,
	16, 0,
	645, 0,
	646, 0,
	647, 0,
	-2, 2241,
	-1, 2861,
	14, 0,
	15, 0,
	16, 0,
	645, 0,
	646, 0,
	647, 0,
	-2, 2253,
	-1, 2862,
	14, 0,
	15, 0,
	16, 0,
	645, 0,
	646, 0,
	647, 0,
	-2, 2254,
	-1, 2863,
	14, 0,
	15, 0,
	16, 0,
	645, 0,
	646, 0,
	647, 0,
	-2, 2255,
	-1, 2867,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	300, 0,
	515, 0,
	633, 0,
	648, 0,
	-2, 2262,
	-1, 2873,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	300, 0,
	515, 0,
	633, 0,
	648, 0,
	-2, 2266,
	-1, 2875,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	300, 0,
	515, 0,
	633, 0,
	648, 0,
	-2, 2274,
	-1, 2876,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	300, 0,
	515, 0,
	633, 0,
	648, 0,
	-2, 2275,
	-1, 2877,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	300, 0,
	515, 0,
	633, 0,
	648, 0,
	-2, 2276,
	-1, 2878,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	300, 0,
	515, 0,
	633, 0,
	648, 0,
	-2, 2277,
	-1, 3055,
	5, 2690,
	203, 2544,
	665, 2687,
	-2, 2678,
	-1, 3056,
	203, 2545,
	-2, 3121,
	-1, 3057,
	203, 2546,
	-2, 2902,
	-1, 3058,
	203, 2547,
	-2, 2769,
	-1, 3059,
	203, 2548,
	-2, 2834,
	-1, 3060,
	203, 2549,
	-2, 2887,
	-1, 3061,
	203, 2550,
	-2, 3028,
	-1, 3062,
	203, 2551,
	-2, 2341,
	-1, 3157,
	1, 2035,
	2, 2035,
	114, 2035,
	162, 2035,
	183, 2035,
	196, 2035,
	204, 2035,
	222, 2035,
	225, 2035,
	258, 2035,
	265, 2035,
	277, 2035,
	297, 2035,
	301, 2035,
	341, 2035,
	376, 2035,
	381, 2035,
	387, 2035,
	469, 2035,
	475, 2035,
	589, 2035,
	602, 2035,
	624, 2035,
	625, 2035,
	626, 2035,
	636, 2035,
	664, 2035,
	666, 2035,
	668, 2035,
	670, 2035,
	671, 2035,
	-2, 2034,
	-1, 3173,
	665, 2658,
	-2, 2673,
	-1, 3175,
	1, 405,
	624, 405,
	671, 405,
	-2, 1920,
	-1, 3240,
	38, 2690,
	135, 2690,
	647, 2690,
	663, 2690,
	666, 2690,
	667, 2690,
	670, 2690,
	-2, 2687,
	-1, 3241,
	38, 2691,
	135, 2691,
	647, 2691,
	663, 2691,
	666, 2691,
	667, 2691,
	670, 2691,
	-2, 2688,
	-1, 3471,
	1, 1616,
	463, 1570,
	508, 1570,
	639, 1570,
	644, 1570,
	664, 1616,
	666, 1616,
	668, 1616,
	671, 1616,
	-2, 1920,
	-1, 3634,
	1, 1248,
	664, 1248,
	666, 1248,
	668, 1248,
	671, 1248,
	-2, 0,
	-1, 3662,
	382, 1964,
	-2, 3180,
	-1, 3663,
	382, 1965,
	-2, 3011,
	-1, 3667,
	481, 2612,
	482, 2612,
	-2, 2339,
	-1, 3668,
	481, 2616,
	482, 2616,
	-2, 2340,
	-1, 3669,
	481, 2613,
	482, 2613,
	-2, 2339,
	-1, 3670,
	481, 2617,
	482, 2617,
	-2, 2340,
	-1, 3684,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	300, 0,
	515, 0,
	633, 0,
	648, 0,
	-2, 2264,
	-1, 3685,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	300, 0,
	515, 0,
	633, 0,
	648, 0,
	-2, 2268,
	-1, 3691,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	300, 0,
	515, 0,
	633, 0,
	648, 0,
	-2, 2270,
	-1, 3940,
	1, 898,
	664, 898,
	666, 898,
	668, 898,
	671, 898,
	-2, 1777,
	-1, 4168,
	46, 2649,
	-2, 1348,
	-1, 4173,
	1, 1616,
	664, 1616,
	666, 1616,
	668, 1616,
	671, 1616,
	-2, 1920,
	-1, 4289,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	300, 0,
	515, 0,
	633, 0,
	648, 0,
	-2, 2272,
	-1, 4296,
	271, 0,
	273, 0,
	365, 0,
	-2, 2291,
	-1, 4365,
	14, 0,
	15, 0,
	16, 0,
	645, 0,
	646, 0,
	647, 0,
	-2, 2320,
	-1, 4366,
	14, 0,
	15, 0,
	16, 0,
	645, 0,
	646, 0,
	647, 0,
	-2, 2321,
	-1, 4367,
	14, 0,
	15, 0,
	16, 0,
	645, 0,
	646, 0,
	647, 0,
	-2, 2322,
	-1, 4371,
	14, 0,
	15, 0,
	16, 0,
	645, 0,
	646, 0,
	647, 0,
	-2, 2326,
	-1, 4372,
	14, 0,
	15, 0,
	16, 0,
	645, 0,
	646, 0,
	647, 0,
	-2, 2327,
	-1, 4373,
	14, 0,
	15, 0,
	16, 0,
	645, 0,
	646, 0,
	647, 0,
	-2, 2328,
	-1, 4425,
	665, 2659,
	-2, 2674,
	-1, 4669,
	667, 3300,
	-2, 1846,
	-1, 4728,
	271, 0,
	273, 0,
	365, 0,
	-2, 2292,
	-1, 4731,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	300, 0,
	515, 0,
	633, 0,
	648, 0,
	-2, 2295,
	-1, 4732,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	300, 0,
	515, 0,
	633, 0,
	648, 0,
	-2, 2297,
	-1, 4861,
	667, 2675,
	-2, 1651,
	-1, 5040,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	300, 0,
	515, 0,
	633, 0,
	648, 0,
	-2, 2296,
	-1, 5041,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	300, 0,
	515, 0,
	633, 0,
	648, 0,
	-2, 2298,
	-1, 5052,
	271, 0,
	-2, 2331,
	-1, 5258,
	271, 0,
	-2, 2332,
	-1, 5495,
	54, 0,
	237, 0,
	300, 0,
	515, 0,
	633, 0,
	648, 0,
	-2, 3143,
}

const sqlPrivate = 57344

const sqlLast = 162604

var sqlAct = [...]int16{
	317, 5658, 5424, 5720, 5700, 1519, 5629, 5423, 3546, 5550,
	5568, 3429, 5312, 1041, 6, 1042, 10, 5543, 5304, 4,
	3391, 5117, 5494, 5508, 5481, 5643, 5357, 5375, 3827, 4711,
	5462, 2566, 4154, 5435, 1246, 203, 5509, 4641, 4155, 5438,
	5510, 5577, 5203, 5454, 1575, 5414, 5226, 5188, 2426, 5174,
	2610, 1748, 1714, 5506, 4329, 5493, 5262, 4996, 4985, 4952,
	4917, 3087, 4281, 4991, 2819, 4191, 5026, 3967, 3515, 5122,
	2397, 5061, 4661, 4653, 2661, 5209, 5340, 1433, 815, 3233,
	3970, 4089, 4562, 3900, 1510, 4858, 4838, 3676, 965, 4039,
	3300, 4622, 2890, 2348, 5001, 1871, 2026, 4138, 3566, 4185,
	3299, 3407, 2273, 4123, 1412, 2636, 4607, 2324, 4605, 1296,
	4143, 2829, 3973, 4415, 5057, 2659, 1596, 965, 4218, 2226,
	2435, 3535, 3954, 1238, 1511, 2820, 4220, 3530, 3503, 890,
	4116, 4135, 4115, 1689, 4142, 3430, 3956, 3955, 3187, 3850,
	827, 4145, 3876, 203, 3883, 2657, 3833, 4428, 3842, 3808,
	4710, 3598, 4857, 1869, 1045, 3561, 3547, 3831, 1303, 1295,
	2555, 3478, 4767, 3532, 928, 2553, 3420, 2536, 3994, 4136,
	2623, 5551, 3158, 1743, 2195, 2192, 3867, 2447, 1744, 3150,
	2255, 311, 2485, 4392, 3660, 5263, 2169, 2826, 2097, 3807,
	3560, 2903, 1808, 3149, 2968, 2127, 1514, 960, 1036, 2607,
	886, 2534, 3440, 2530, 1413, 2512, 2508, 2516, 1917, 1300,
	3516, 2414, 1558, 3239, 2418, 1573, 1307, 2346, 2554, 1305,
	1590, 1486, 3231, 3084, 1503, 3232, 3130, 2959, 3193, 2396,
	2196, 2393, 310, 2970, 2887, 1577, 2808, 2791, 1489, 2789,
	1496, 3540, 1811, 863, 1716, 3188, 1846, 1804, 2539, 3324,
	1118, 2212, 5376, 3325, 5701, 2606, 4146, 1516, 2386, 1545,
	3285, 967, 5459, 1422, 1492, 1463, 966, 2215, 1500, 971,
	1466, 1451, 2962, 3139, 2161, 3099, 906, 1267, 1430, 1416,
	3152, 1395, 2940, 3959, 2205, 3017, 2111, 2027, 3051, 1249,
	967, 214, 2028, 2790, 871, 966, 1953, 2703, 971, 215,
	2563, 1938, 1837, 2792, 846, 1015, 882, 1773, 129, 5569,
	1844, 2544, 1699, 115, 125, 820, 5630, 1281, 51, 50,
	974, 1418, 48, 1393, 39, 37, 35, 2033, 3714, 1589,
	955, 816, 2008, 829, 1570, 1754, 4406, 802, 1140, 4407,
	3829, 825, 3708, 5710, 2326, 1016, 1944, 2326, 5504, 974,
	3901, 899, 902, 2326, 2326, 5503, 5735, 5723, 5708, 2326,
	3129, 4096, 3129, 5089, 179, 5707, 5667, 2326, 5665, 3129,
	5121, 5086, 5121, 86, 5599, 53, 52, 5081, 2575, 5085,
	5552, 1881, 2043, 2044, 5553, 5534, 4200, 1428, 5080, 3129,
	5079, 5532, 87, 5529, 2358, 3129, 80, 5530, 5526, 5491,
	5490, 5489, 5527, 2575, 2575, 3571, 2074, 5479, 5477, 5468,
	92, 5121, 5121, 5121, 2046, 5466, 5433, 5084, 5397, 5121,
	5121, 74, 3204, 5390, 1410, 5389, 1242, 3129, 55, 3129,
	177, 5380, 4978, 5356, 5354, 2575, 1425, 2575, 5121, 1554,
	5352, 5333, 5260, 2099, 5121, 4942, 3204, 5240, 4803, 4201,
	54, 4686, 2045, 101, 5205, 5197, 5140, 5139, 4481, 5121,
	2575, 2575, 1242, 1231, 5128, 5127, 1747, 5120, 2575, 5121,
	5068, 5121, 5042, 2658, 2575, 5011, 3204, 2355, 2611, 3571,
	4979, 57, 75, 4912, 4096, 4885, 3893, 3129, 2355, 3129,
	2355, 58, 2358, 4782, 4730, 1221, 64, 4783, 3204, 1554,
	4677, 81, 4671, 1220, 4213, 3225, 4213, 4096, 1768, 56,
	4619, 124, 4512, 3917, 4620, 4480, 4513, 108, 121, 4481,
	4421, 4419, 3508, 4399, 4422, 4420, 76, 3129, 4313, 2575,
	4309, 1243, 2575, 4396, 3129, 4212, 3911, 3920, 3826, 4213,
	1756, 3921, 3129, 3199, 1237, 3824, 2043, 2044, 3819, 3825,
	1396, 1396, 3129, 3818, 3769, 3767, 3756, 3129, 3770, 3768,
	3757, 1448, 59, 3754, 3725, 2051, 3723, 3129, 3129, 3570,
	2074, 2358, 3724, 3571, 1805, 1756, 3557, 3556, 2046, 3675,
	2646, 2646, 3129, 109, 3264, 3203, 2355, 2358, 3129, 3204,
	5398, 3185, 3177, 3128, 1397, 3129, 2575, 3129, 2645, 5264,
	3101, 179, 2646, 1458, 1399, 2358, 1400, 2099, 275, 5255,
	86, 5243, 53, 52, 3571, 4396, 2045, 3100, 1862, 2073,
	2075, 4989, 4942, 2355, 4886, 4686, 4621, 4614, 3398, 87,
	3778, 3779, 108, 3796, 3797, 3798, 2440, 3284, 2372, 2574,
	3275, 2352, 3508, 4085, 2325, 3417, 3194, 92, 2190, 2965,
	2339, 1449, 1741, 4726, 4530, 4284, 4250, 2213, 74, 2523,
	4202, 1449, 277, 1919, 3169, 55, 3168, 177, 77, 3167,
	2043, 2044, 3166, 3165, 1401, 1398, 1230, 1229, 1228, 1227,
	4203, 4787, 275, 1226, 1225, 1224, 2066, 54, 1223, 1219,
	101, 1218, 2043, 2044, 2074, 1217, 1216, 1215, 1214, 1213,
	1762, 1212, 2046, 1211, 3624, 2997, 1210, 5003, 1209, 3129,
	1208, 3793, 1207, 1206, 1205, 276, 2074, 1204, 57, 75,
	1203, 1202, 1201, 1200, 2046, 1199, 1198, 1197, 58, 2051,
	1184, 2099, 1116, 64, 269, 1115, 277, 1114, 5687, 1767,
	2045, 2327, 1113, 270, 2327, 3713, 56, 113, 124, 2966,
	2327, 2327, 1112, 2099, 108, 121, 2327, 1111, 1110, 1109,
	1108, 1107, 2045, 76, 2327, 60, 1106, 1105, 2096, 2725,
	1104, 1103, 1102, 216, 1101, 1100, 5246, 1099, 1098, 1097,
	1096, 1095, 63, 2073, 2075, 1094, 1093, 66, 1092, 276,
	1885, 1091, 2043, 2044, 1090, 1755, 1089, 78, 1088, 59,
	1087, 1086, 1085, 1084, 1083, 65, 212, 1082, 116, 1081,
	1866, 120, 1756, 3784, 1080, 2355, 1079, 61, 1078, 1067,
	109, 178, 2355, 1066, 2046, 1065, 1060, 1059, 4742, 62,
	2355, 3543, 1052, 1051, 1050, 1035, 5519, 1034, 2355, 1033,
	2967, 991, 2964, 275, 275, 990, 2355, 216, 989, 988,
	2066, 69, 987, 2051, 2067, 3778, 3779, 170, 3796, 3797,
	3798, 1527, 2045, 978, 1521, 1305, 977, 976, 3778, 3779,
	975, 937, 936, 897, 176, 2051, 896, 895, 4725, 275,
	877, 305, 1747, 304, 2355, 303, 302, 301, 300, 299,
	3800, 298, 1305, 1305, 1305, 297, 1450, 277, 277, 3100,
	296, 295, 294, 1302, 293, 77, 292, 2073, 2075, 291,
	1460, 290, 289, 288, 3525, 287, 4200, 286, 285, 284,
	283, 282, 2098, 281, 280, 175, 279, 278, 4454, 2073,
	2075, 1761, 2096, 277, 3794, 79, 3793, 3292, 5005, 3778,
	3779, 1599, 218, 4411, 4254, 2358, 1305, 4214, 3251, 1719,
	276, 276, 1305, 1305, 2355, 2352, 1521, 5518, 275, 3879,
	2325, 1732, 1562, 1563, 1564, 5267, 3736, 1946, 2784, 269,
	269, 3719, 170, 3710, 2066, 2051, 3626, 3508, 270, 270,
	1449, 1305, 213, 1305, 113, 1305, 276, 217, 3601, 1756,
	3488, 3292, 3208, 1719, 3174, 3156, 2066, 3778, 3779, 2995,
	2172, 1549, 60, 2355, 3822, 269, 275, 2171, 216, 216,
	2216, 3, 277, 2981, 270, 2969, 2096, 1521, 2067, 63,
	3793, 2979, 1813, 2781, 66, 2055, 2047, 2048, 2049, 2050,
	2052, 2053, 1709, 2399, 78, 2357, 2239, 2175, 3784, 1719,
	1704, 2040, 65, 212, 216, 116, 1719, 1549, 120, 3823,
	5545, 3784, 2138, 2129, 61, 1305, 2096, 1305, 178, 2009,
	277, 1750, 1719, 2043, 2044, 276, 62, 3100, 1245, 1566,
	1449, 1305, 2172, 1305, 203, 203, 1432, 5515, 2096, 2171,
	275, 5492, 5476, 5361, 269, 1541, 2098, 5252, 69, 1745,
	5112, 5056, 5009, 270, 170, 2046, 1495, 1499, 4988, 4765,
	4764, 4758, 3795, 4757, 1818, 1821, 1543, 1507, 4756, 2170,
	4634, 176, 4749, 276, 4748, 3800, 275, 4746, 4741, 4738,
	2131, 4518, 3784, 216, 1719, 4737, 4618, 1580, 1581, 4613,
	4455, 4424, 269, 2045, 277, 4386, 4385, 1840, 4384, 4345,
	4305, 270, 2067, 4300, 1592, 1305, 1686, 1691, 1305, 2963,
	971, 1730, 3874, 3815, 3806, 3777, 3774, 3773, 3771, 3794,
	3766, 3765, 175, 3764, 2067, 3761, 3760, 3778, 3779, 1696,
	277, 216, 79, 3759, 3755, 3290, 3735, 3718, 2096, 218,
	3784, 1424, 3711, 3213, 1569, 3709, 3558, 276, 1535, 3527,
	2047, 2048, 2049, 2050, 2052, 2053, 275, 1742, 275, 3157,
	2952, 974, 2040, 2129, 2626, 1409, 269, 2136, 2582, 4528,
	2098, 1806, 2039, 5729, 1694, 270, 3778, 3779, 5651, 213,
	2580, 5650, 5004, 276, 217, 5567, 5565, 1434, 4331, 1886,
	1726, 5425, 2098, 4635, 5338, 2130, 5324, 2128, 1849, 1851,
	5320, 2096, 269, 3794, 1572, 216, 2051, 1824, 1582, 1583,
	277, 270, 277, 5319, 2096, 1305, 1305, 1305, 1305, 1305,
	1305, 1305, 1305, 5318, 3790, 3791, 3792, 275, 5298, 5297,
	5295, 3789, 3787, 3788, 3780, 3781, 3782, 3783, 3785, 3786,
	5266, 216, 5265, 1847, 1838, 3778, 3779, 5245, 275, 1305,
	5238, 2893, 5224, 275, 3289, 1305, 5221, 5220, 5201, 5199,
	5136, 3794, 5107, 276, 1549, 276, 5054, 5037, 275, 5036,
	4974, 2056, 2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053,
	4970, 277, 269, 4968, 269, 2096, 4966, 3795, 4943, 4763,
	4687, 270, 4625, 270, 2054, 2055, 2047, 2048, 2049, 2050,
	2052, 2053, 277, 4516, 2018, 4515, 3906, 277, 3289, 4496,
	3784, 4495, 3820, 1243, 4493, 3289, 3868, 2193, 1962, 275,
	4402, 3542, 277, 216, 4389, 4295, 2116, 4215, 5269, 2996,
	1891, 4177, 4167, 4065, 276, 4005, 3972, 1279, 3740, 3739,
	3734, 3700, 3502, 2096, 3500, 3317, 2178, 2899, 2177, 2176,
	2014, 1861, 2173, 269, 2167, 276, 2162, 4635, 2160, 3784,
	276, 3171, 270, 1305, 1305, 1305, 2118, 1880, 3164, 1305,
	3127, 3795, 5247, 277, 269, 276, 1430, 3008, 1430, 269,
	3526, 2977, 2115, 270, 2330, 2238, 2194, 2187, 270, 2186,
	2185, 2184, 216, 1599, 269, 2183, 2047, 2048, 2049, 2050,
	2052, 2053, 2182, 270, 2181, 1305, 1843, 2180, 2261, 1521,
	2179, 2168, 2157, 216, 203, 2156, 2286, 2261, 216, 1521,
	2041, 2155, 1521, 1719, 1910, 2154, 276, 2153, 3784, 3795,
	2202, 3794, 2152, 216, 2151, 2150, 2149, 2148, 1947, 2147,
	2146, 2145, 2144, 2019, 2143, 269, 2242, 2142, 2131, 3790,
	3791, 3792, 2117, 2114, 270, 2109, 3789, 3787, 3788, 3780,
	3781, 3782, 3783, 3785, 3786, 1534, 2254, 1455, 1444, 5268,
	4977, 2010, 3780, 3781, 3782, 3783, 3785, 3786, 2015, 4808,
	4734, 2249, 4453, 5082, 216, 1428, 4418, 1428, 4405, 1521,
	3722, 3162, 2023, 2248, 4810, 1305, 4452, 3206, 1221, 2130,
	3871, 3904, 2022, 2174, 2112, 4888, 1220, 4206, 2247, 2017,
	3778, 3779, 2234, 2096, 1559, 1576, 2392, 1576, 3392, 1305,
	5642, 2043, 2044, 5328, 2223, 5321, 275, 1599, 2036, 2037,
	1576, 5008, 1561, 4928, 1425, 5511, 1425, 4927, 2199, 2200,
	3789, 3787, 3788, 3780, 3781, 3782, 3783, 3785, 3786, 3794,
	1576, 1574, 4615, 2046, 2337, 2429, 2364, 4926, 4925, 1576,
	2342, 4924, 2390, 1243, 2344, 4887, 4789, 4694, 4693, 4692,
	4691, 2349, 4690, 4689, 4688, 2351, 2498, 4482, 1576, 2354,
	277, 2264, 2163, 2164, 4409, 4408, 2262, 4217, 4216, 971,
	2264, 2045, 4098, 2244, 4097, 2262, 4094, 2311, 971, 3795,
	3788, 3780, 3781, 3782, 3783, 3785, 3786, 5595, 2246, 1560,
	5593, 1554, 5210, 5507, 1549, 1426, 4638, 2216, 4282, 2012,
	2243, 3438, 2363, 2994, 1843, 2214, 1554, 1909, 4553, 2274,
	1555, 2096, 2283, 276, 3343, 1396, 2172, 2980, 3763, 3762,
	974, 3682, 3328, 2171, 4511, 2978, 2224, 2378, 1557, 974,
	4008, 3974, 269, 1195, 4157, 4055, 4156, 2221, 2384, 2383,
	1963, 270, 1576, 2392, 5290, 2140, 2269, 2520, 2152, 2049,
	2050, 2052, 2053, 2340, 3829, 5291, 2317, 1554, 2191, 2320,
	2152, 4476, 2611, 4477, 4627, 2556, 2678, 1842, 5291, 3778,
	3779, 216, 1243, 2965, 1918, 5204, 5540, 2218, 2233, 2232,
	1719, 1719, 2231, 46, 2229, 2228, 2227, 4986, 1196, 3567,
	4124, 1599, 4932, 5111, 1919, 2557, 4612, 3795, 4559, 2366,
	4550, 4521, 4245, 3938, 2747, 2270, 2655, 2590, 5058, 4333,
	2960, 5659, 5131, 5103, 5693, 3728, 5516, 1719, 3405, 2166,
	4872, 2188, 4174, 2619, 1817, 1737, 2360, 1530, 4869, 2517,
	1491, 5531, 2497, 5528, 4904, 3326, 4900, 2496, 4196, 2362,
	3394, 3411, 3414, 4487, 1551, 2504, 1719, 3409, 3789, 3787,
	3788, 3780, 3781, 3782, 3783, 3785, 3786, 2493, 5313, 2502,
	1895, 4992, 5432, 3977, 4506, 2513, 3539, 1874, 2521, 2387,
	2627, 2532, 4107, 2966, 5597, 2567, 2572, 2440, 5596, 1029,
	2540, 5134, 5130, 5109, 4276, 2042, 5163, 2404, 4874, 2405,
	1787, 1719, 4572, 1719, 5517, 1719, 3942, 3265, 1248, 2412,
	2413, 2507, 3782, 3783, 3785, 3786, 2507, 2137, 1408, 1241,
	5167, 2507, 1960, 1719, 1719, 2385, 5722, 1942, 5329, 3288,
	1193, 1191, 5156, 1189, 5634, 4069, 935, 1719, 2739, 932,
	5142, 1780, 1556, 1739, 5574, 1180, 3286, 3288, 4935, 1719,
	2446, 1961, 1719, 1719, 1719, 1719, 2650, 2434, 2406, 2407,
	4934, 2799, 3784, 2438, 3286, 2410, 2411, 4570, 4569, 4561,
	4536, 1561, 2737, 971, 2967, 4535, 2964, 2261, 4571, 3780,
	3781, 3782, 3783, 3785, 3786, 2379, 1840, 4533, 2638, 1247,
	2638, 2639, 2561, 3600, 2615, 1842, 4532, 4520, 4479, 2490,
	1305, 2679, 2689, 2505, 2559, 2560, 1552, 2468, 4478, 1030,
	2389, 4113, 4112, 4057, 3892, 3733, 1553, 3732, 2541, 3731,
	2573, 3730, 1240, 3536, 974, 2797, 3686, 3436, 3435, 2620,
	3480, 3416, 3404, 3396, 3385, 2633, 3384, 1959, 3372, 3361,
	3359, 3354, 2367, 1305, 2676, 3353, 3333, 3944, 1560, 1941,
	3332, 2388, 3905, 3293, 3186, 2874, 2489, 2271, 2016, 3013,
	3012, 2503, 2653, 2486, 1893, 4868, 2831, 2511, 5241, 2189,
	1186, 2690, 5132, 5104, 4247, 2440, 1544, 2663, 3272, 5660,
	1305, 2609, 1305, 3794, 4870, 2546, 2684, 2779, 2546, 1305,
	2545, 2549, 1305, 2545, 2286, 2286, 1599, 2518, 1305, 1305,
	1305, 1305, 1305, 1305, 1305, 1305, 1305, 1305, 1305, 1305,
	1305, 1305, 1305, 1305, 1305, 1305, 1305, 1305, 1305, 1305,
	1305, 1305, 1305, 1305, 1305, 1305, 1305, 1305, 1305, 1305,
	1305, 1305, 1305, 1305, 2587, 1305, 2594, 1305, 1305, 1305,
	1305, 2630, 2643, 4053, 1242, 1847, 3574, 1847, 2674, 2969,
	2264, 2438, 3974, 2500, 4616, 2262, 926, 2709, 971, 4090,
	2557, 2611, 1561, 1305, 2670, 2096, 5635, 1305, 1305, 2750,
	2641, 2783, 2622, 2506, 2801, 1305, 5575, 5035, 2506, 1305,
	1555, 1305, 1305, 2506, 2635, 1027, 869, 1026, 3330, 1599,
	1942, 2007, 2798, 2669, 4007, 1305, 1305, 1305, 1305, 1799,
	2788, 1305, 1305, 1305, 1305, 1305, 1305, 1305, 1305, 974,
	1535, 2647, 3207, 2648, 1555, 1243, 1554, 1243, 2889, 1830,
	1782, 1829, 4087, 869, 1828, 3349, 1827, 1791, 2941, 2942,
	1305, 1305, 1305, 1305, 1305, 1305, 1305, 1305, 1305, 1560,
	1305, 4086, 2941, 2957, 4819, 1305, 1740, 2439, 1477, 3786,
	4889, 3795, 2394, 2395, 1578, 1579, 2770, 1430, 3347, 2889,
	2053, 3619, 2688, 3219, 1599, 1939, 3316, 1578, 1579, 3005,
	1911, 2699, 3302, 1430, 2796, 2710, 2799, 3176, 924, 2436,
	1975, 2731, 4830, 2963, 2745, 1981, 3373, 1578, 1579, 1305,
	1599, 3054, 3054, 3068, 2960, 2941, 1578, 1579, 3088, 3090,
	2760, 3658, 2733, 5187, 3192, 2825, 3098, 2827, 2828, 1907,
	2283, 2283, 1941, 2813, 1551, 1578, 1579, 2812, 2432, 1783,
	5166, 2824, 1521, 4871, 3697, 1958, 3673, 2773, 2693, 4054,
	3383, 5671, 814, 2696, 1940, 1533, 3201, 5596, 5637, 2011,
	2797, 2517, 1032, 1031, 2687, 1888, 1239, 4503, 1551, 5636,
	3172, 3421, 3315, 2437, 2905, 4829, 3695, 203, 4490, 809,
	4853, 2785, 2787, 2640, 2800, 3144, 1428, 2793, 3196, 1424,
	1521, 1424, 2786, 2542, 1919, 1221, 2956, 3413, 1221, 1221,
	2521, 3241, 1428, 2816, 3374, 2433, 2817, 2818, 3778, 3779,
	5306, 3796, 3797, 3798, 5179, 3305, 4092, 3268, 4846, 2394,
	2395, 2021, 1556, 3136, 4259, 1979, 3941, 4258, 1919, 1521,
	1521, 4299, 3410, 3412, 3259, 1425, 4517, 3621, 3408, 2223,
	3270, 3787, 3788, 3780, 3781, 3782, 3783, 3785, 3786, 2550,
	2795, 1425, 3189, 4166, 3287, 2439, 1556, 2515, 2547, 3365,
	868, 5702, 2969, 5638, 4091, 3221, 3007, 2901, 2234, 2772,
	1599, 3009, 3010, 4322, 3011, 2697, 4847, 3014, 2897, 3015,
	3016, 1076, 2543, 2954, 3271, 2895, 1552, 2514, 5281, 3793,
	1894, 1889, 2204, 5280, 3672, 4501, 1553, 868, 4319, 1243,
	2885, 5034, 3135, 2548, 4933, 4534, 3269, 3254, 3216, 1243,
	1812, 4597, 3329, 1243, 5646, 971, 4531, 971, 3246, 2286,
	1552, 3215, 933, 933, 3250, 1188, 2509, 2798, 933, 2738,
	1553, 933, 2883, 3692, 3050, 4460, 3079, 3092, 3261, 3063,
	925, 1396, 3094, 5308, 2487, 3125, 3126, 4459, 3638, 2492,
	3143, 3257, 3148, 3141, 3142, 3154, 3155, 1549, 1171, 2174,
	3238, 2437, 3137, 2736, 3195, 3693, 974, 971, 974, 3698,
	3230, 1810, 2221, 4598, 4458, 3161, 4447, 4446, 4445, 3218,
	2769, 3209, 2208, 1235, 870, 4251, 3382, 5640, 4119, 4320,
	4111, 3784, 4051, 2510, 1599, 2390, 2390, 3415, 927, 3200,
	3294, 4088, 923, 3262, 3198, 3360, 1719, 1243, 3352, 2796,
	3375, 3331, 2448, 4818, 1438, 2440, 3947, 2283, 974, 2518,
	3190, 870, 3256, 4596, 3279, 2494, 5513, 3212, 1955, 1521,
	3244, 1440, 3217, 2759, 3471, 5608, 2211, 2756, 2452, 3304,
	2163, 2164, 1187, 4025, 2780, 3253, 3263, 3224, 2969, 5621,
	1305, 1305, 1495, 1305, 1499, 2206, 3249, 5620, 3291, 1435,
	3223, 3184, 3377, 3350, 3227, 3433, 3226, 5673, 3800, 3255,
	3641, 5582, 2488, 3191, 1790, 2209, 2579, 2578, 3248, 1526,
	4716, 4866, 1172, 3665, 3666, 1521, 3406, 3260, 5180, 2879,
	3514, 4715, 5544, 3511, 3335, 1476, 1554, 1976, 2757, 2449,
	4252, 3266, 5178, 4842, 4120, 4026, 3320, 1441, 3376, 4948,
	5176, 4843, 3794, 2880, 2871, 4193, 4016, 1719, 5394, 2207,
	3334, 2881, 4848, 3629, 2326, 2886, 4117, 3506, 2758, 1719,
	1554, 1719, 3336, 1816, 3351, 2283, 1442, 1719, 3341, 3342,
	3344, 3345, 3346, 3348, 3688, 2005, 3297, 3390, 1719, 1719,
	203, 3307, 3310, 3280, 3281, 4024, 4049, 3282, 3283, 3844,
	810, 2524, 3380, 5175, 2969, 4845, 2531, 3386, 5483, 3278,
	5484, 3523, 3422, 2771, 3961, 1521, 3694, 1521, 4017, 2695,
	2732, 1439, 4047, 3483, 4849, 2888, 3696, 5314, 3485, 3577,
	3578, 5644, 3565, 5177, 2096, 1753, 3356, 1760, 5409, 1766,
	1305, 3585, 3586, 3587, 3588, 3303, 5639, 3437, 3475, 3369,
	3370, 3550, 3472, 3473, 3378, 5095, 3379, 2453, 3486, 3388,
	979, 3640, 5514, 3562, 3568, 4194, 971, 3395, 4015, 2461,
	3175, 3402, 1974, 1298, 1719, 1980, 2443, 2552, 1906, 1908,
	4048, 4046, 4045, 5307, 3584, 1177, 1176, 986, 4042, 1977,
	4502, 3393, 811, 2210, 3637, 4092, 1068, 3426, 2692, 3564,
	3518, 3596, 2204, 1426, 1532, 1426, 3427, 3428, 1812, 1860,
	3476, 1865, 3989, 3943, 2686, 1305, 3559, 974, 3481, 3572,
	3795, 1305, 1305, 1069, 3569, 1879, 3579, 1884, 3580, 2525,
	3575, 2462, 2454, 2455, 1173, 1973, 1305, 2869, 2444, 2551,
	2419, 2872, 3604, 1077, 867, 2420, 1920, 812, 4864, 813,
	2547, 5645, 3995, 4193, 3554, 2484, 1738, 1890, 1453, 2450,
	3474, 2158, 4962, 2501, 3507, 5581, 2499, 4867, 5392, 3288,
	2020, 4844, 2882, 3988, 3643, 3522, 3645, 4579, 5512, 1305,
	1305, 2460, 2884, 2501, 3902, 1305, 3308, 4577, 2442, 2499,
	4102, 3545, 2208, 5647, 2521, 2548, 1945, 1978, 1305, 1305,
	2868, 1847, 5029, 3555, 1305, 1305, 3553, 4712, 2451, 3997,
	1305, 3534, 5560, 3593, 3639, 2896, 5393, 2495, 4854, 4855,
	3843, 4118, 2498, 5561, 2430, 5047, 4050, 2208, 5606, 5443,
	3609, 3595, 3611, 3552, 3613, 4797, 3615, 3616, 4906, 5669,
	4579, 2108, 835, 4798, 3962, 2951, 2211, 3610, 3738, 3612,
	4577, 3614, 3140, 3926, 3481, 1305, 1305, 1305, 5674, 3625,
	3153, 1305, 1242, 1436, 3608, 2206, 5349, 2491, 2421, 4335,
	1174, 1305, 3602, 5653, 3603, 3689, 4581, 2457, 4976, 4701,
	3996, 2211, 3790, 3791, 3792, 2209, 2425, 4938, 1305, 3789,
	3787, 3788, 3780, 3781, 3782, 3783, 3785, 3786, 4807, 3653,
	3138, 1175, 4583, 3664, 4448, 2500, 4796, 1459, 3646, 1457,
	4717, 3648, 4278, 3721, 4580, 3070, 1053, 3716, 3717, 3389,
	2209, 3656, 3720, 5341, 5358, 1437, 5449, 4865, 5374, 2207,
	1925, 5223, 4937, 980, 981, 3655, 3654, 4936, 5342, 4581,
	4659, 4181, 4035, 1058, 2456, 4033, 2813, 3915, 3363, 5545,
	2812, 3659, 5027, 3183, 1262, 2605, 2201, 5028, 4853, 1456,
	1179, 2327, 1447, 801, 1499, 3681, 3674, 2422, 2427, 1070,
	1071, 5170, 2528, 5343, 2030, 4633, 3712, 4580, 2031, 2744,
	1178, 4713, 2815, 1305, 1305, 1305, 1305, 2025, 2030, 4375,
	5580, 2441, 1305, 1305, 1305, 4761, 4846, 1305, 2497, 2380,
	4839, 4105, 2419, 2496, 4963, 5129, 4106, 2420, 5075, 3884,
	4539, 1305, 1430, 1599, 5679, 2870, 3687, 4034, 3364, 4837,
	1424, 2377, 5232, 3968, 5288, 4660, 4565, 4540, 4488, 4841,
	4486, 4182, 2458, 4172, 2526, 3964, 1424, 3524, 1305, 3517,
	1305, 3504, 2634, 2628, 5345, 2621, 2613, 2589, 2805, 1430,
	2586, 5359, 3425, 4318, 4847, 1784, 1468, 5217, 3817, 4472,
	4390, 2423, 876, 2210, 3836, 3837, 5415, 1599, 4279, 5344,
	3292, 5377, 2746, 2230, 2030, 2373, 3368, 4662, 4606, 4997,
	5194, 3501, 1430, 1478, 2527, 1599, 3337, 4718, 5346, 983,
	982, 5192, 2029, 5559, 5106, 3131, 3727, 1521, 2210, 3838,
	3980, 4840, 3976, 4578, 3975, 3679, 2029, 2375, 5030, 3657,
	3309, 4001, 2675, 4404, 2667, 2286, 2430, 2656, 1243, 1599,
	3841, 1428, 3840, 1949, 1948, 1521, 2584, 1943, 1253, 1836,
	2421, 4441, 4036, 3182, 3181, 3366, 1521, 3180, 3134, 3179,
	1834, 3918, 3241, 2286, 3178, 4611, 1822, 1803, 2425, 1240,
	1075, 2403, 3758, 4898, 2376, 4538, 5301, 2419, 1428, 3898,
	4628, 4629, 2420, 984, 985, 1823, 4578, 2031, 5118, 4953,
	1425, 4494, 3313, 3999, 1305, 3848, 2754, 2632, 2428, 4127,
	2440, 2031, 3133, 1072, 1073, 4719, 1305, 3132, 915, 1054,
	1055, 1428, 2029, 5603, 3873, 3846, 2537, 2429, 5093, 2108,
	5091, 4544, 4376, 2806, 1521, 5196, 3878, 1425, 5090, 3963,
	2286, 3916, 3599, 4483, 4377, 3812, 3813, 3814, 1805, 3479,
	4762, 3923, 3925, 4000, 4248, 4242, 916, 1305, 3914, 2422,
	2427, 3913, 3912, 2429, 3886, 3887, 3888, 3889, 3861, 5421,
	1425, 3830, 3896, 1521, 3939, 3919, 3882, 3847, 4013, 5678,
	3895, 3894, 3859, 3870, 3573, 3932, 3945, 3484, 3862, 3863,
	3482, 2660, 3928, 2556, 1521, 4037, 3930, 3931, 3367, 4028,
	5360, 3934, 1521, 3935, 3845, 3936, 5216, 4032, 4473, 3338,
	3339, 4842, 5119, 1521, 5195, 2421, 971, 1898, 4038, 4843,
	5101, 1549, 5302, 5114, 5113, 4824, 3951, 3952, 4070, 3979,
	4848, 3238, 3984, 2425, 4823, 3986, 5429, 1305, 1305, 1926,
	4768, 2520, 5412, 4393, 2976, 1599, 1927, 3965, 3978, 2520,
	2424, 3982, 5078, 2423, 4056, 4549, 4449, 1521, 3903, 2002,
	5451, 2283, 4080, 3897, 4010, 3865, 5422, 974, 3852, 2004,
	3869, 5102, 3860, 4845, 5607, 3877, 5605, 1521, 5533, 2765,
	5331, 3866, 4100, 5322, 3891, 5088, 5053, 3908, 2283, 2283,
	2247, 4815, 4849, 2001, 3992, 3924, 4104, 3922, 1999, 4760,
	5347, 2402, 1969, 2417, 3885, 4043, 5348, 875, 2430, 3929,
	3933, 4610, 3909, 4465, 2422, 2427, 3809, 1967, 4095, 5303,
	4484, 4294, 1521, 1719, 1835, 1719, 3940, 4243, 4029, 1599,
	4240, 3147, 4058, 1056, 1057, 1833, 965, 1719, 1719, 3948,
	4103, 3241, 2535, 1965, 4014, 1074, 4066, 3910, 3772, 3699,
	4072, 1937, 4074, 3971, 3632, 4078, 2283, 1935, 3505, 4084,
	3403, 1933, 1521, 1931, 1929, 2415, 3397, 4173, 3327, 3214,
	2428, 1922, 3998, 3853, 2778, 1916, 2774, 1914, 2753, 1832,
	1430, 4006, 2677, 2666, 2651, 2319, 2241, 2237, 2006, 1873,
	4019, 5182, 4822, 3810, 4273, 4272, 4262, 4187, 4162, 4020,
	1719, 4023, 2025, 4021, 2735, 4022, 2701, 4189, 2423, 2565,
	3623, 3622, 1719, 3582, 1719, 2416, 2794, 1954, 4122, 2975,
	4125, 2704, 2585, 2318, 1426, 2316, 3851, 3858, 2141, 1887,
	1392, 203, 203, 5505, 4165, 4907, 4171, 931, 4552, 4844,
	1426, 4551, 4537, 4141, 4911, 4884, 4061, 5411, 4995, 4209,
	4052, 4198, 4068, 4067, 4180, 4012, 4071, 4916, 4902, 4899,
	4835, 4081, 4834, 2430, 3857, 4093, 4658, 4648, 4568, 4449,
	2003, 4542, 4246, 2767, 4509, 4249, 4027, 4109, 1599, 3380,
	2766, 1599, 4101, 3562, 4031, 4507, 4854, 4855, 4485, 1428,
	4176, 4170, 3562, 4158, 2000, 3537, 3529, 3521, 3513, 1998,
	3238, 3498, 4183, 1968, 3496, 3477, 4990, 3252, 3247, 967,
	2583, 4238, 2424, 2581, 966, 2558, 1305, 971, 1966, 934,
	3949, 4263, 4114, 1305, 1305, 2428, 5578, 1305, 1305, 1305,
	4110, 1305, 2726, 4129, 3335, 4108, 2522, 4190, 1425, 4079,
	1305, 2286, 4315, 2459, 1964, 2445, 4169, 2431, 4163, 1305,
	4168, 2359, 1936, 2356, 1305, 4236, 2353, 2283, 1934, 4099,
	1599, 4241, 1932, 2350, 1930, 1928, 2345, 4239, 974, 1305,
	3950, 2343, 1921, 4195, 2338, 4271, 1915, 1599, 1913, 4121,
	1831, 2332, 4204, 2328, 3854, 3855, 3856, 2286, 2286, 1305,
	1305, 4186, 1305, 1305, 1305, 4207, 4208, 4270, 2734, 4082,
	2700, 5573, 4188, 2564, 2531, 5488, 2034, 2253, 3677, 3362,
	5597, 2381, 5300, 1305, 3649, 1190, 1192, 1305, 2777, 2286,
	2286, 1305, 1305, 1305, 1305, 1305, 1305, 1305, 1305, 1305,
	1305, 1305, 1305, 1305, 1305, 1305, 1305, 1305, 1305, 1305,
	1305, 4280, 1305, 4297, 2369, 2370, 1405, 3650, 3647, 3470,
	1305, 1305, 2286, 4348, 5470, 4349, 5368, 1305, 5010, 4255,
	4923, 4256, 4821, 4257, 3563, 4197, 3946, 2424, 2775, 2398,
	1305, 1789, 962, 1406, 4388, 3288, 3288, 5227, 5234, 4307,
	4308, 1430, 1430, 3314, 4277, 1305, 3634, 2631, 3197, 2763,
	2691, 4670, 3286, 3311, 1776, 203, 1462, 1243, 2440, 1996,
	1997, 1502, 2729, 4268, 1501, 2724, 5469, 2698, 4875, 2043,
	2044, 4918, 4274, 3678, 3434, 4275, 1234, 2776, 4387, 5254,
	1599, 1912, 5116, 4769, 2043, 2044, 2035, 4083, 1892, 904,
	1171, 4747, 1571, 1521, 1521, 3318, 3993, 3319, 3340, 4304,
	4302, 2046, 2038, 1528, 1461, 5591, 1568, 4564, 306, 5541,
	4426, 1521, 1521, 4582, 2274, 1235, 2261, 2283, 1521, 3495,
	4314, 4645, 3241, 2286, 4330, 2286, 4321, 4323, 4324, 2614,
	3319, 1539, 4563, 3411, 4337, 2368, 3409, 3418, 1502, 2045,
	5611, 3399, 3401, 3321, 3323, 1305, 1972, 5115, 4346, 1062,
	1428, 1428, 4347, 1407, 2045, 1502, 3400, 4379, 3322, 5420,
	2827, 4338, 798, 2283, 2283, 4351, 4353, 921, 4325, 907,
	907, 5399, 5366, 1305, 2470, 4442, 5362, 4395, 5299, 5218,
	5215, 5094, 5023, 4656, 4647, 4632, 4175, 4400, 4401, 3544,
	3510, 4344, 2827, 4354, 1315, 2283, 2283, 1728, 4380, 1425,
	1425, 3497, 4468, 3095, 4469, 1424, 1305, 1305, 2365, 2272,
	5641, 5244, 4105, 4105, 1172, 3387, 2480, 4106, 4106, 1736,
	4397, 4398, 1735, 1729, 1236, 4383, 3899, 2537, 2283, 5677,
	3778, 3779, 2043, 2044, 5364, 4105, 4410, 4470, 5610, 4929,
	4106, 4471, 1424, 4413, 1747, 4412, 4739, 313, 313, 313,
	4423, 804, 805, 4451, 821, 804, 821, 833, 1305, 1305,
	874, 4489, 2971, 4417, 894, 3627, 1305, 4522, 4545, 901,
	901, 901, 901, 3006, 313, 1424, 2409, 3274, 2408, 3273,
	5385, 3238, 313, 2409, 1747, 2476, 2408, 1719, 1719, 2264,
	4508, 4467, 4510, 5548, 2262, 1719, 4461, 971, 1719, 1719,
	2533, 1897, 4655, 1387, 1049, 1746, 1747, 1896, 1719, 1747,
	5219, 313, 1971, 1521, 5157, 1970, 4920, 4915, 4594, 4914,
	4799, 4795, 4794, 4735, 4584, 4709, 4450, 4560, 4326, 4076,
	4527, 4529, 4073, 3630, 4589, 2135, 2134, 4526, 2283, 2283,
	3652, 2283, 2286, 2782, 5662, 5622, 4554, 2473, 974, 5474,
	4443, 4444, 5403, 5402, 5401, 5330, 5274, 4566, 3161, 5270,
	5190, 5146, 4514, 5083, 5077, 5076, 5074, 1305, 4456, 4457,
	4547, 4548, 4519, 5073, 4972, 4466, 4947, 1177, 1176, 4644,
	4873, 4809, 4567, 4575, 4793, 4792, 4682, 4676, 1719, 4617,
	4585, 4505, 4497, 4265, 1305, 4576, 4599, 4600, 4179, 4178,
	3985, 3335, 1430, 1305, 2478, 3927, 3633, 4663, 3620, 3592,
	3591, 1719, 3590, 3589, 4623, 3528, 1719, 1719, 1719, 2279,
	3499, 3312, 3243, 3211, 3210, 2900, 1173, 2768, 4672, 2730,
	4609, 2723, 4586, 2722, 2721, 2720, 2719, 2629, 2600, 2599,
	4664, 1719, 2598, 1719, 4602, 2597, 2596, 2595, 2335, 1719,
	2334, 1599, 4573, 2333, 2331, 2252, 2251, 1995, 4667, 1994,
	1923, 3422, 4679, 1798, 804, 804, 1797, 1796, 4604, 1795,
	2479, 4608, 313, 1794, 1793, 4639, 1792, 1788, 1786, 1785,
	1723, 4640, 4603, 1722, 4595, 1599, 1588, 1587, 1305, 1305,
	4683, 1586, 1585, 4592, 1305, 1305, 2286, 1584, 2371, 1305,
	1305, 3550, 1305, 1531, 4646, 1485, 2483, 1305, 1484, 1483,
	1482, 1428, 1481, 4666, 3562, 1480, 4631, 1479, 1305, 1473,
	1472, 1471, 3489, 1470, 1469, 3492, 1194, 3494, 1185, 5305,
	4852, 4851, 4850, 2121, 1305, 4695, 4697, 2126, 2764, 4649,
	4698, 4643, 2608, 107, 4703, 4650, 1781, 4652, 3355, 4665,
	100, 2529, 4504, 4430, 5542, 3971, 5654, 4673, 2283, 4674,
	1425, 5686, 1174, 4733, 2591, 2463, 5453, 4680, 4668, 4681,
	5452, 4720, 5335, 3228, 3357, 2329, 4134, 4133, 5547, 2471,
	3541, 2467, 5186, 3541, 996, 4696, 4721, 5022, 1146, 5450,
	2481, 1771, 1011, 1175, 5431, 4593, 4699, 1430, 4729, 3987,
	3439, 1924, 5212, 4766, 4706, 1430, 2705, 2477, 3872, 1599,
	1599, 4431, 1599, 3163, 5391, 4743, 3358, 2286, 3737, 5261,
	5046, 2974, 4714, 1430, 203, 2139, 3821, 102, 1289, 1337,
	4961, 4960, 1597, 1719, 1719, 4836, 4491, 4144, 2474, 4432,
	4957, 4956, 4429, 1424, 2276, 2472, 2278, 1252, 1602, 3103,
	3105, 4440, 1179, 2482, 4774, 1599, 5482, 4438, 2382, 5668,
	2391, 2165, 3053, 1314, 1352, 1309, 1521, 1310, 3617, 4708,
	2280, 1313, 1178, 1311, 1312, 2159, 1308, 2275, 4654, 1426,
	4164, 3548, 4205, 1305, 1841, 1839, 1148, 3159, 2894, 2958,
	3726, 2132, 1268, 4439, 1430, 1291, 1430, 2955, 4435, 1454,
	1280, 4759, 3849, 3828, 4192, 3096, 1428, 4414, 2804, 2274,
	4777, 4779, 2283, 1021, 1428, 3775, 1426, 2961, 1443, 3076,
	3069, 1521, 3065, 4436, 3937, 3538, 4883, 4801, 4802, 2475,
	2013, 1599, 1428, 1521, 5060, 4705, 1521, 2110, 4892, 3549,
	4785, 4895, 1565, 4770, 1272, 2892, 4776, 2123, 4863, 1426,
	4773, 4775, 3704, 4828, 2814, 1425, 4199, 3875, 3205, 1305,
	4771, 4772, 1599, 1425, 5461, 4786, 4334, 4879, 4880, 3628,
	4804, 4805, 4806, 2604, 4831, 4788, 1404, 1403, 1452, 4825,
	4826, 1425, 1402, 4812, 4813, 4814, 4800, 5437, 4817, 5434,
	4877, 2519, 4964, 4139, 4140, 2374, 4833, 3267, 2904, 4159,
	1285, 4816, 3605, 1428, 3606, 1428, 1707, 2751, 4876, 4266,
	3834, 1719, 1719, 4630, 4930, 3241, 1305, 1305, 1800, 4827,
	5123, 1297, 2095, 3466, 3465, 5294, 1430, 1550, 1548, 1547,
	4784, 1546, 4901, 2283, 5631, 4903, 3424, 3419, 2538, 4905,
	4500, 4499, 4498, 274, 3671, 2032, 1521, 2024, 4862, 271,
	4878, 4980, 1425, 273, 1425, 272, 4922, 3991, 4427, 1599,
	3881, 1899, 5539, 4913, 1719, 4524, 4433, 4126, 27, 4919,
	4896, 4921, 908, 909, 4434, 910, 3277, 2401, 1567, 4475,
	26, 25, 24, 4998, 23, 4945, 3877, 130, 28, 1719,
	1719, 1719, 1719, 1719, 1719, 1719, 49, 30, 29, 5,
	22, 174, 172, 149, 4893, 169, 168, 4946, 4941, 140,
	167, 166, 4944, 1599, 165, 4981, 4999, 164, 163, 4931,
	171, 4954, 162, 4820, 161, 1305, 1305, 1305, 4984, 4437,
	4987, 156, 160, 159, 4940, 1428, 4939, 158, 157, 155,
	153, 154, 148, 1599, 1424, 1424, 4949, 152, 1305, 151,
	150, 1305, 1305, 5031, 5032, 4967, 4959, 4859, 4973, 4859,
	4993, 1305, 4955, 5002, 2286, 4975, 147, 146, 145, 1305,
	1305, 144, 143, 142, 3238, 141, 139, 173, 4965, 138,
	137, 219, 136, 135, 1425, 5015, 134, 5000, 1599, 5019,
	1719, 133, 132, 131, 887, 5021, 5007, 888, 68, 67,
	127, 1445, 4882, 128, 21, 47, 5013, 2279, 2279, 5038,
	16, 72, 821, 5012, 73, 4891, 1521, 20, 4894, 4983,
	15, 42, 105, 119, 118, 117, 821, 43, 114, 5033,
	41, 2283, 313, 19, 18, 17, 112, 111, 110, 1475,
	1599, 40, 38, 13, 11, 5024, 44, 2225, 1305, 14,
	313, 7, 313, 313, 211, 1506, 313, 1515, 208, 207,
	5043, 1305, 210, 206, 209, 104, 5055, 205, 1529, 106,
	1305, 204, 103, 5049, 36, 2286, 894, 12, 5100, 894,
	199, 5208, 4637, 95, 202, 1305, 5066, 5067, 1305, 4859,
	201, 200, 198, 197, 196, 193, 96, 5071, 5069, 93,
	5070, 195, 901, 99, 98, 194, 94, 97, 34, 1305,
	8, 71, 1305, 9, 5025, 4244, 5097, 1426, 5098, 1599,
	122, 123, 45, 91, 2240, 1719, 1305, 90, 1719, 1719,
	89, 5126, 88, 33, 313, 1521, 313, 313, 313, 1506,
	5172, 313, 313, 70, 32, 5096, 268, 266, 267, 1515,
	265, 5099, 5149, 264, 189, 2429, 5150, 5105, 5145, 244,
	243, 242, 241, 313, 240, 1749, 239, 1430, 238, 1430,
	237, 236, 231, 235, 233, 232, 234, 2274, 230, 260,
	2283, 1769, 259, 5162, 5137, 5138, 258, 5181, 257, 5148,
	1778, 256, 255, 254, 253, 247, 1599, 246, 252, 1719,
	5193, 5189, 251, 250, 249, 248, 245, 1802, 5207, 1515,
	263, 5147, 84, 229, 313, 313, 5143, 1506, 5228, 228,
	227, 225, 5202, 5168, 5169, 5158, 5151, 5160, 221, 5161,
	5159, 224, 226, 223, 222, 220, 262, 1305, 1305, 894,
	261, 313, 313, 192, 85, 187, 5191, 188, 83, 5183,
	5185, 5229, 5184, 1867, 1305, 2286, 5233, 186, 2400, 185,
	5237, 5214, 5239, 184, 1875, 4002, 4003, 5231, 4004, 1049,
	183, 182, 5206, 5087, 181, 4141, 1428, 180, 1428, 82,
	1521, 1521, 1521, 2638, 5213, 1521, 1521, 1521, 5135, 1521,
	1521, 2283, 5211, 191, 2279, 190, 31, 5225, 5250, 5251,
	5230, 5236, 5235, 2, 5002, 1424, 5173, 1, 1305, 0,
	1305, 0, 1305, 0, 0, 0, 0, 0, 0, 5198,
	0, 5200, 1430, 5242, 0, 1425, 0, 1425, 0, 5249,
	0, 5152, 0, 0, 0, 1305, 0, 1430, 0, 5287,
	0, 0, 0, 4062, 4063, 5289, 4064, 0, 0, 0,
	0, 0, 0, 2898, 313, 0, 0, 5259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2121,
	5253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 5282, 0, 5286, 0, 2286, 5285, 0,
	0, 0, 0, 0, 0, 0, 5316, 0, 0, 0,
	1430, 0, 1430, 0, 0, 0, 0, 5309, 0, 0,
	5351, 5310, 2279, 0, 0, 0, 0, 5171, 1426, 1426,
	0, 5337, 1430, 0, 0, 1430, 0, 1728, 0, 1719,
	4859, 1428, 4859, 5339, 1728, 0, 0, 0, 0, 1719,
	5325, 5365, 2576, 0, 0, 0, 1428, 0, 5327, 0,
	2809, 0, 0, 0, 0, 1305, 1305, 0, 0, 0,
	0, 5332, 0, 0, 0, 1305, 5336, 5334, 2274, 0,
	5326, 2283, 0, 5350, 0, 0, 0, 0, 0, 0,
	1425, 5378, 0, 0, 5363, 0, 0, 0, 0, 5317,
	0, 0, 0, 0, 5370, 1425, 0, 5387, 0, 5388,
	1424, 5382, 0, 5379, 0, 0, 0, 0, 1424, 1428,
	5386, 1428, 0, 5383, 0, 5381, 5395, 0, 0, 0,
	5396, 1305, 1305, 0, 5211, 1305, 1424, 0, 0, 1719,
	1521, 1428, 1521, 0, 1428, 0, 5400, 5271, 5272, 5273,
	0, 0, 5275, 5276, 5277, 0, 5278, 5279, 5436, 5439,
	0, 5428, 5353, 5410, 5355, 5404, 5405, 5406, 1425, 0,
	1425, 5384, 5467, 0, 5460, 5465, 5418, 5419, 0, 0,
	5464, 0, 0, 5426, 5371, 0, 0, 5373, 0, 0,
	1425, 5427, 5440, 1425, 0, 4859, 5444, 0, 5445, 804,
	0, 0, 5441, 1305, 1305, 1305, 0, 1424, 5485, 1424,
	4859, 3071, 0, 2283, 0, 5407, 5408, 0, 0, 5487,
	313, 0, 313, 0, 0, 0, 313, 0, 0, 0,
	0, 5471, 0, 0, 5446, 0, 0, 0, 5475, 1749,
	1506, 1515, 313, 1305, 313, 2250, 5478, 5486, 0, 5463,
	0, 0, 313, 0, 821, 5520, 5525, 0, 0, 5499,
	5500, 313, 0, 0, 5502, 5501, 0, 1719, 0, 0,
	0, 0, 0, 4859, 0, 4859, 0, 0, 0, 315,
	0, 0, 5554, 2336, 2429, 0, 5558, 5521, 0, 5556,
	0, 0, 0, 5522, 5555, 4859, 313, 0, 4859, 0,
	5564, 0, 0, 0, 0, 313, 1305, 5546, 5566, 5538,
	0, 0, 0, 5570, 1521, 1521, 5557, 0, 5523, 5549,
	0, 0, 0, 0, 0, 5563, 0, 0, 5579, 5562,
	5189, 0, 0, 0, 0, 0, 0, 894, 0, 1424,
	5571, 5536, 0, 5572, 0, 0, 0, 2830, 0, 0,
	5576, 5585, 5586, 5589, 0, 5590, 1305, 5594, 0, 5598,
	5592, 0, 0, 5535, 0, 0, 5537, 5436, 0, 0,
	5439, 5602, 0, 5616, 5601, 901, 1430, 901, 1430, 5600,
	5604, 0, 0, 5609, 5627, 5617, 0, 901, 901, 1426,
	2571, 0, 0, 5625, 5614, 0, 5618, 5447, 0, 5448,
	5624, 5613, 0, 5615, 0, 5623, 0, 5619, 0, 0,
	5633, 0, 0, 0, 0, 0, 0, 0, 1521, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5632, 5648, 5649, 5657, 0, 0, 0, 0,
	2972, 0, 0, 5664, 0, 0, 0, 0, 0, 0,
	0, 0, 1305, 1305, 5655, 5672, 0, 0, 5661, 0,
	5663, 1305, 1305, 0, 5463, 5656, 0, 5690, 5670, 0,
	0, 0, 0, 5694, 5675, 5684, 5666, 0, 6, 0,
	10, 5680, 5689, 5695, 5688, 1428, 0, 1428, 5697, 0,
	5705, 5704, 0, 0, 0, 5691, 5699, 0, 1266, 203,
	5703, 0, 0, 5711, 0, 5698, 5692, 5709, 0, 0,
	5715, 5706, 0, 5696, 1521, 0, 0, 5716, 0, 5717,
	5721, 5718, 5681, 5682, 5724, 5725, 5714, 0, 5626, 0,
	5628, 5712, 5726, 5728, 1425, 5713, 1425, 0, 0, 0,
	1305, 3173, 313, 5734, 5719, 5736, 313, 3550, 5721, 5737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5727, 5731, 0, 0, 5733,
	5683, 5587, 5588, 0, 0, 5730, 0, 0, 0, 0,
	0, 0, 3550, 0, 1426, 313, 0, 0, 0, 0,
	0, 0, 1426, 0, 0, 0, 0, 0, 0, 0,
	0, 5732, 0, 0, 313, 0, 0, 0, 0, 0,
	1426, 0, 0, 0, 0, 313, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 4859,
	313, 4859, 0, 0, 804, 0, 313, 0, 4230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 894, 1728,
	0, 0, 1049, 4228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4221, 0, 5652, 0, 0, 0, 0,
	1424, 1426, 1424, 1426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 313, 0, 0, 0, 0,
	0, 3276, 0, 3701, 3702, 0, 0, 0, 0, 0,
	0, 894, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 2702, 0, 0, 4651,
	0, 313, 0, 313, 0, 313, 0, 313, 0, 313,
	0, 313, 1728, 1728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 4232, 0, 0, 0, 2740, 0, 0, 2741,
	0, 2742, 0, 2743, 0, 0, 0, 0, 2279, 0,
	87, 0, 0, 0, 4223, 0, 0, 0, 313, 313,
	313, 313, 0, 0, 313, 0, 0, 4700, 92, 0,
	4222, 0, 0, 0, 0, 2279, 2279, 0, 0, 0,
	0, 0, 0, 1426, 0, 0, 0, 1037, 0, 0,
	0, 874, 0, 0, 0, 894, 0, 0, 0, 0,
	0, 0, 0, 3661, 86, 1424, 938, 0, 0, 0,
	0, 101, 2043, 2044, 309, 86, 0, 1040, 1039, 0,
	1424, 0, 0, 87, 0, 0, 0, 0, 0, 4231,
	0, 0, 950, 0, 87, 0, 2074, 0, 0, 0,
	0, 92, 0, 2279, 2046, 0, 0, 0, 0, 0,
	0, 0, 92, 948, 1043, 0, 0, 0, 3802, 3803,
	3804, 3805, 0, 0, 0, 0, 0, 56, 0, 124,
	0, 4219, 0, 2099, 0, 108, 121, 951, 0, 0,
	0, 0, 2045, 1424, 101, 1424, 3071, 3071, 0, 0,
	2906, 0, 0, 2065, 930, 101, 0, 1728, 1728, 1728,
	1728, 0, 0, 0, 0, 1424, 0, 0, 1424, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1043, 0, 0,
	0, 0, 944, 0, 0, 0, 0, 0, 1043, 959,
	0, 109, 124, 0, 0, 0, 0, 0, 108, 121,
	0, 56, 0, 124, 0, 949, 0, 0, 0, 108,
	121, 0, 0, 0, 0, 804, 0, 0, 3097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4234,
	0, 313, 0, 0, 0, 2068, 2069, 2070, 2071, 0,
	804, 0, 0, 0, 0, 2051, 0, 313, 0, 804,
	0, 0, 0, 0, 4229, 4224, 4225, 4226, 4227, 943,
	0, 313, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 869, 0, 0, 0,
	0, 313, 1515, 0, 0, 0, 0, 0, 313, 0,
	313, 1749, 0, 313, 2279, 0, 4233, 0, 0, 2073,
	2075, 0, 0, 0, 946, 0, 0, 3778, 3779, 0,
	3796, 3797, 3798, 0, 0, 0, 0, 0, 0, 0,
	0, 3071, 3071, 3071, 3071, 0, 0, 0, 0, 0,
	0, 4909, 0, 0, 0, 0, 0, 313, 1515, 0,
	313, 821, 0, 821, 0, 0, 0, 4235, 0, 0,
	313, 0, 0, 313, 0, 113, 0, 3242, 0, 0,
	0, 0, 0, 313, 313, 0, 2066, 0, 313, 0,
	313, 958, 0, 0, 1426, 1506, 1426, 313, 313, 0,
	1515, 1515, 3258, 0, 0, 0, 0, 313, 3793, 0,
	0, 1266, 1266, 1266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4971, 3202, 0, 0,
	0, 0, 0, 0, 212, 0, 116, 0, 0, 120,
	0, 4982, 0, 0, 0, 0, 0, 0, 113, 0,
	0, 901, 901, 0, 0, 901, 901, 0, 0, 113,
	1683, 0, 0, 0, 3301, 5006, 0, 0, 2096, 0,
	0, 275, 0, 0, 0, 940, 313, 0, 0, 1044,
	0, 0, 0, 0, 0, 170, 0, 0, 0, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 212, 945, 116,
	3784, 0, 120, 0, 2279, 0, 0, 0, 212, 1424,
	116, 1424, 0, 120, 0, 277, 0, 3371, 2072, 0,
	0, 0, 0, 0, 0, 0, 894, 0, 0, 0,
	0, 894, 0, 0, 275, 0, 0, 0, 0, 1426,
	868, 0, 1044, 175, 2067, 275, 0, 0, 170, 0,
	2279, 2279, 0, 1044, 1426, 0, 954, 313, 0, 170,
	218, 0, 0, 0, 0, 942, 0, 0, 276, 1712,
	0, 0, 0, 0, 0, 0, 0, 3431, 1749, 0,
	0, 0, 2279, 2279, 0, 0, 0, 269, 277, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 277,
	213, 0, 0, 0, 0, 217, 5092, 0, 0, 313,
	3487, 0, 2098, 1774, 0, 2279, 175, 1426, 939, 1426,
	0, 3794, 0, 0, 952, 0, 216, 175, 0, 0,
	0, 0, 0, 218, 3835, 0, 0, 0, 0, 1426,
	1749, 276, 1426, 313, 218, 0, 3431, 0, 947, 0,
	0, 0, 276, 0, 313, 0, 0, 0, 1259, 0,
	269, 0, 0, 0, 870, 3533, 1855, 0, 0, 270,
	0, 269, 0, 213, 0, 3301, 941, 804, 217, 0,
	270, 0, 1870, 0, 213, 0, 1049, 3301, 3864, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 2096, 956, 957, 3880, 953, 0, 313,
	1038, 0, 0, 2056, 2054, 2055, 2047, 2048, 2049, 2050,
	2052, 2053, 0, 0, 0, 2279, 2279, 0, 2279, 0,
	313, 1506, 313, 4290, 4291, 1233, 0, 1171, 0, 0,
	3907, 0, 3607, 313, 1900, 0, 0, 1506, 0, 1506,
	0, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1728, 1728, 0, 0, 0, 4230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 3795,
	0, 0, 4228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4221, 0, 313, 313, 313, 313, 1506, 0,
	0, 1506, 1234, 0, 313, 0, 0, 0, 0, 313,
	0, 0, 0, 0, 0, 0, 4355, 4356, 4357, 4358,
	4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368,
	4369, 4370, 4371, 4372, 4373, 4374, 0, 4378, 0, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 1172, 0, 0, 0, 1728, 1728, 1728, 1728, 1728,
	1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728,
	1728, 1728, 1728, 1728, 1728, 0, 1728, 0, 0, 0,
	0, 4232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1467, 4223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4222,
	1490, 0, 1490, 1490, 0, 0, 930, 0, 5323, 0,
	0, 0, 1683, 0, 0, 2279, 3071, 3071, 0, 0,
	0, 3790, 3791, 3792, 0, 0, 0, 0, 3789, 3787,
	3788, 3780, 3781, 3782, 3783, 3785, 3786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1426, 0, 1426, 1749, 0, 4231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5367,
	0, 0, 5369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1692, 1467, 0,
	3880, 1708, 930, 0, 1177, 1176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3071,
	3071, 3071, 3071, 3071, 3071, 3071, 3071, 3071, 3071, 3071,
	3071, 3071, 3071, 3071, 3071, 3071, 3071, 3071, 3071, 0,
	3071, 0, 0, 0, 0, 0, 0, 0, 1266, 0,
	0, 0, 0, 1173, 0, 0, 1683, 0, 0, 0,
	0, 0, 0, 2322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 930, 930, 0, 0, 0, 2279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 4234, 0,
	0, 0, 0, 0, 0, 0, 5472, 0, 0, 0,
	5473, 0, 0, 2043, 2044, 0, 2076, 2077, 2078, 2087,
	2088, 2089, 0, 4229, 4224, 4225, 4226, 4227, 0, 4267,
	0, 0, 1597, 313, 0, 0, 0, 2074, 804, 0,
	0, 3457, 0, 804, 0, 2046, 804, 0, 0, 804,
	804, 0, 0, 0, 0, 804, 2093, 0, 804, 0,
	0, 0, 0, 0, 0, 4233, 313, 0, 0, 1174,
	0, 0, 0, 0, 2099, 0, 3447, 3445, 313, 0,
	2279, 0, 0, 2045, 3449, 3451, 3441, 0, 0, 313,
	0, 0, 1749, 0, 2065, 0, 0, 0, 1232, 0,
	1175, 0, 0, 0, 2062, 0, 0, 0, 0, 0,
	0, 4311, 0, 0, 0, 0, 4235, 821, 0, 0,
	1683, 0, 0, 0, 0, 0, 0, 0, 4327, 3467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 313, 313, 0, 0,
	0, 0, 0, 3778, 3779, 0, 3796, 3797, 3798, 1179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4298, 0, 0, 1178,
	3301, 3301, 313, 0, 3957, 3960, 2068, 2069, 2070, 2071,
	0, 3301, 0, 2250, 0, 0, 2051, 0, 0, 0,
	0, 0, 3301, 2250, 0, 3301, 2250, 0, 0, 2250,
	0, 0, 3957, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 313, 3960, 0, 313, 0,
	0, 0, 0, 0, 3793, 0, 0, 0, 0, 2084,
	0, 0, 0, 2094, 0, 0, 0, 3960, 0, 313,
	2073, 2075, 0, 0, 4030, 3960, 0, 1774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4041, 0,
	4041, 4425, 0, 0, 0, 0, 0, 0, 2279, 0,
	1506, 0, 2060, 2061, 0, 3443, 2612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3459, 0, 0, 0,
	0, 0, 2082, 0, 3301, 0, 3301, 0, 4077, 3301,
	3960, 0, 0, 3301, 0, 0, 0, 2066, 0, 0,
	3458, 3448, 3446, 3450, 3452, 3442, 3444, 3460, 3462, 0,
	3960, 0, 0, 894, 0, 2649, 3784, 0, 0, 3454,
	3456, 3464, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2662, 2664, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 0, 2668, 0, 0,
	0, 0, 313, 0, 1708, 0, 3468, 0, 0, 0,
	0, 0, 2680, 2681, 2682, 2683, 0, 0, 0, 0,
	313, 0, 0, 4132, 0, 0, 4137, 3301, 0, 2096,
	313, 0, 0, 0, 0, 0, 0, 0, 1515, 0,
	0, 1266, 0, 3800, 0, 1683, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 1490, 2279, 0, 3533,
	0, 0, 1506, 0, 313, 1708, 0, 3301, 0, 804,
	0, 0, 0, 0, 2043, 2044, 3301, 0, 0, 0,
	2087, 2088, 2089, 0, 0, 0, 0, 3794, 0, 2072,
	0, 0, 0, 0, 0, 0, 0, 0, 2074, 0,
	0, 0, 0, 0, 0, 0, 2046, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 2093, 0, 0,
	0, 0, 0, 0, 0, 0, 4253, 0, 0, 0,
	0, 0, 3461, 0, 0, 2099, 0, 0, 1683, 0,
	0, 0, 0, 0, 2045, 0, 0, 2085, 0, 4260,
	0, 4261, 0, 0, 1749, 2065, 0, 313, 0, 0,
	0, 0, 0, 1506, 313, 2062, 313, 0, 2279, 2096,
	0, 0, 1506, 0, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 2098, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 3469, 0, 0,
	0, 0, 0, 1683, 0, 0, 0, 3453, 3455, 0,
	0, 3463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1683,
	0, 0, 0, 0, 0, 0, 0, 2068, 2069, 2070,
	2071, 0, 0, 0, 0, 3795, 0, 2051, 0, 0,
	0, 0, 0, 4332, 0, 2083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2057, 2058, 2064,
	2086, 2063, 2059, 0, 2056, 2054, 2055, 2047, 2048, 2049,
	2050, 2052, 2053, 2203, 0, 0, 5052, 0, 0, 0,
	2084, 0, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 2073, 2075, 0, 0, 0, 0, 0, 2916, 2917,
	2918, 2935, 2936, 2937, 0, 0, 0, 0, 0, 0,
	86, 0, 0, 0, 0, 1728, 0, 0, 0, 2938,
	0, 0, 0, 2060, 2061, 2593, 0, 0, 2279, 87,
	4391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2082, 0, 313, 313, 92, 0, 0,
	0, 0, 0, 0, 0, 2618, 2099, 0, 2066, 0,
	0, 0, 0, 5108, 0, 0, 0, 0, 0, 0,
	804, 0, 0, 4416, 804, 0, 2928, 0, 0, 1683,
	2079, 0, 804, 0, 0, 0, 2924, 0, 0, 0,
	101, 0, 0, 0, 0, 0, 0, 3790, 3791, 3792,
	0, 0, 1728, 0, 3789, 3787, 3788, 3780, 3781, 3782,
	3783, 3785, 3786, 4781, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1043, 0, 0, 0, 0, 0, 0,
	2096, 0, 0, 0, 0, 0, 56, 0, 124, 0,
	0, 0, 0, 0, 108, 121, 4811, 0, 0, 0,
	2279, 0, 0, 0, 0, 0, 0, 0, 2929, 2930,
	2931, 2932, 0, 0, 0, 0, 0, 0, 2923, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3071,
	0, 0, 1251, 0, 0, 0, 0, 0, 0, 0,
	2072, 0, 0, 1683, 0, 0, 0, 0, 0, 0,
	0, 0, 894, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 2067, 0, 0, 0,
	2618, 2752, 0, 0, 2755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4541, 0, 0,
	4543, 0, 0, 4546, 0, 0, 0, 0, 2085, 0,
	0, 4041, 0, 0, 2933, 2934, 0, 0, 0, 5258,
	0, 0, 0, 0, 0, 0, 3071, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2098, 0, 0, 0, 0, 2926,
	0, 3431, 0, 0, 0, 0, 0, 0, 1728, 0,
	0, 0, 0, 0, 0, 0, 3960, 0, 313, 0,
	0, 0, 821, 821, 1515, 5293, 3423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5315, 0, 313, 2079, 4626, 0, 0, 3533, 2250, 0,
	0, 0, 0, 313, 1728, 0, 0, 0, 0, 0,
	4642, 0, 3431, 0, 0, 313, 2083, 0, 0, 313,
	0, 313, 0, 0, 113, 0, 313, 0, 0, 1728,
	0, 2086, 2063, 2059, 0, 2056, 2054, 2055, 2047, 2048,
	2049, 2050, 2052, 2053, 0, 3301, 313, 0, 0, 0,
	0, 0, 0, 0, 1597, 0, 0, 1049, 3301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 5044, 116, 0, 0, 120, 0,
	0, 0, 313, 0, 0, 0, 3960, 3576, 0, 3258,
	0, 0, 0, 0, 0, 0, 0, 2927, 3583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 3071, 0, 0, 0, 0, 0, 1044, 5044,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 930, 0, 0, 0, 1266, 0, 0, 0, 0,
	0, 0, 0, 1467, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2079, 0, 0,
	0, 0, 0, 0, 277, 2098, 4744, 0, 3071, 0,
	0, 2830, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2079, 3635, 0, 0, 930, 0, 0,
	0, 0, 175, 3071, 0, 0, 0, 0, 0, 0,
	1467, 0, 0, 1467, 0, 0, 0, 0, 0, 218,
	2079, 0, 0, 1490, 3245, 0, 2079, 276, 1490, 0,
	1490, 0, 2079, 0, 0, 0, 0, 930, 930, 0,
	0, 313, 0, 0, 0, 0, 269, 1749, 0, 313,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 213,
	2830, 0, 0, 0, 217, 0, 0, 313, 0, 2913,
	2914, 2915, 2939, 2925, 2919, 0, 2921, 2922, 2920, 2907,
	2908, 2909, 2910, 2911, 2912, 1852, 0, 0, 0, 0,
	1515, 1515, 1515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1515, 1515, 1515, 0, 313, 1515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3301, 3301, 0, 3957, 2079, 0, 4041,
	3301, 0, 2079, 0, 0, 0, 0, 0, 4861, 0,
	4861, 1749, 0, 0, 1692, 0, 2079, 0, 0, 0,
	0, 2079, 3301, 0, 2250, 0, 0, 0, 3957, 0,
	1749, 1749, 313, 3960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3960, 0, 313, 3960,
	0, 313, 4897, 0, 0, 0, 0, 4041, 0, 0,
	4041, 0, 0, 0, 4041, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1708, 0, 0,
	0, 0, 0, 3301, 0, 3301, 313, 86, 0, 2079,
	0, 0, 1683, 0, 0, 2079, 0, 0, 3431, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 2043,
	2044, 0, 2076, 2077, 2078, 2087, 2088, 2089, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 0,
	0, 0, 2080, 2074, 0, 3301, 3301, 0, 0, 0,
	4861, 2046, 3533, 0, 4969, 0, 1683, 0, 1524, 0,
	3957, 0, 2093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 1683, 0, 0, 101, 0, 0,
	2099, 0, 0, 0, 313, 1251, 1251, 1251, 0, 2045,
	0, 0, 3046, 3047, 3048, 3049, 3042, 3043, 3044, 3045,
	2065, 0, 0, 0, 0, 0, 0, 0, 1683, 0,
	2062, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1043, 0, 0, 3778, 3779, 0, 3796, 3797, 3798, 0,
	0, 0, 0, 56, 0, 124, 0, 0, 0, 1698,
	0, 108, 121, 0, 0, 1724, 0, 0, 0, 2079,
	2079, 2079, 2079, 2079, 2079, 2079, 2079, 0, 0, 0,
	0, 0, 1708, 1266, 0, 0, 0, 0, 0, 2079,
	0, 0, 0, 930, 1751, 1266, 1757, 0, 1763, 0,
	0, 0, 2079, 0, 0, 3022, 3023, 3024, 3025, 0,
	0, 0, 2068, 2069, 2070, 2071, 0, 0, 0, 0,
	0, 0, 2051, 0, 3793, 0, 0, 109, 4416, 3034,
	3035, 3036, 3037, 3030, 3031, 3032, 3033, 3038, 3039, 3040,
	3041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3075, 0, 0, 0, 1708, 0, 1708, 0, 0,
	0, 0, 0, 0, 5455, 2084, 2079, 0, 1858, 2094,
	1863, 0, 2079, 0, 1290, 126, 2073, 2075, 0, 3301,
	2250, 0, 2250, 0, 1877, 4642, 1882, 0, 0, 0,
	0, 2470, 0, 0, 313, 0, 0, 0, 0, 2090,
	1490, 2091, 0, 0, 5124, 0, 5124, 0, 2060, 2061,
	0, 0, 0, 0, 3018, 3019, 3020, 3021, 3026, 3027,
	3028, 3029, 0, 0, 1683, 0, 3784, 0, 2082, 0,
	0, 894, 0, 2480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2066, 4041, 1749, 0, 0, 0, 1749,
	0, 1506, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3801, 0, 0, 0, 0, 3960, 0,
	313, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 113, 0, 2092, 0, 0, 0, 0, 0, 0,
	0, 0, 2476, 3800, 0, 0, 0, 4642, 1683, 0,
	0, 4861, 0, 4861, 2081, 1749, 0, 0, 0, 3301,
	2470, 0, 0, 313, 0, 2096, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3794, 0, 1749,
	212, 0, 116, 0, 0, 120, 0, 0, 0, 0,
	0, 0, 2480, 0, 2473, 0, 0, 0, 2100, 2101,
	2102, 2103, 2104, 2105, 2106, 2107, 0, 0, 1222, 313,
	313, 0, 0, 0, 0, 2072, 0, 275, 0, 0,
	0, 1244, 0, 0, 0, 1044, 0, 0, 0, 0,
	0, 170, 2120, 4332, 0, 0, 0, 0, 2133, 0,
	0, 2067, 5456, 0, 0, 0, 0, 0, 0, 0,
	0, 2478, 0, 0, 0, 0, 0, 4130, 4131, 2096,
	0, 2476, 0, 0, 0, 0, 0, 0, 4041, 5284,
	0, 277, 0, 2085, 0, 0, 4642, 0, 0, 0,
	0, 0, 1414, 0, 0, 0, 0, 1683, 0, 0,
	1683, 0, 0, 0, 0, 0, 4861, 0, 0, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2098,
	0, 4861, 0, 0, 0, 0, 218, 2479, 0, 0,
	4211, 0, 0, 2473, 276, 0, 0, 0, 0, 0,
	0, 0, 4237, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 0, 269, 0, 3795, 2197, 2197, 2197, 0,
	0, 0, 270, 2483, 0, 0, 213, 821, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 1683,
	0, 0, 0, 0, 4861, 0, 4861, 0, 0, 0,
	2478, 0, 1850, 0, 0, 0, 1683, 0, 0, 0,
	0, 2083, 0, 0, 0, 0, 4861, 0, 313, 4861,
	0, 0, 0, 2057, 2058, 2064, 2086, 2063, 2059, 2250,
	2056, 2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053, 0,
	1749, 0, 1749, 0, 4752, 0, 2471, 0, 4751, 0,
	2469, 0, 0, 0, 0, 0, 0, 2481, 0, 0,
	0, 0, 0, 0, 0, 0, 2479, 0, 0, 0,
	0, 0, 0, 0, 2477, 1515, 1515, 0, 0, 0,
	0, 0, 1490, 3358, 0, 0, 1708, 1708, 0, 0,
	5416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2466, 0, 2483, 0, 0, 2474, 5124, 0, 0, 313,
	0, 0, 2472, 0, 0, 0, 0, 0, 0, 0,
	2482, 0, 1251, 0, 0, 0, 0, 3790, 3791, 3792,
	0, 0, 0, 3301, 3789, 3787, 3788, 3780, 3781, 3782,
	3783, 3785, 3786, 0, 0, 0, 2079, 0, 0, 1683,
	0, 0, 5457, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2464, 0, 0, 1708, 0, 0, 0, 313,
	0, 0, 0, 0, 0, 2471, 0, 0, 0, 0,
	2079, 0, 0, 0, 0, 0, 2481, 0, 0, 2618,
	0, 0, 0, 4332, 0, 0, 2475, 0, 0, 0,
	5458, 0, 0, 2477, 0, 0, 0, 0, 0, 0,
	0, 0, 2465, 0, 0, 0, 0, 0, 0, 0,
	1749, 0, 2079, 0, 0, 0, 2079, 0, 0, 0,
	0, 0, 0, 0, 2474, 0, 0, 0, 0, 0,
	2079, 2472, 0, 0, 0, 0, 0, 0, 0, 2482,
	0, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079,
	2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079,
	2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079, 2079,
	2079, 2079, 2079, 2079, 2079, 2079, 2079, 0, 2043, 2044,
	0, 0, 2079, 0, 2079, 2079, 2079, 2079, 0, 0,
	4642, 0, 0, 0, 0, 0, 3075, 3075, 0, 0,
	0, 0, 2074, 0, 0, 0, 0, 0, 0, 0,
	2046, 2079, 0, 0, 0, 2475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3301, 2099,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 0,
	4861, 0, 4861, 0, 930, 1749, 0, 0, 0, 2065,
	0, 0, 2079, 0, 0, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2079, 0, 0, 2079, 0, 0, 2079, 0,
	0, 2079, 0, 0, 0, 0, 0, 2079, 2079, 2079,
	2079, 2079, 2079, 2079, 0, 0, 0, 0, 0, 0,
	0, 3301, 0, 0, 0, 0, 0, 0, 4724, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3431, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2068, 2069, 2070, 2071, 0, 3301, 4574, 0, 0,
	0, 2051, 0, 0, 0, 0, 1708, 0, 4587, 4588,
	3431, 0, 0, 0, 0, 0, 2079, 0, 4590, 3799,
	126, 3075, 3075, 3075, 3075, 0, 0, 2079, 0, 2079,
	0, 0, 0, 0, 2079, 0, 0, 0, 0, 0,
	0, 0, 0, 2727, 0, 0, 0, 0, 0, 0,
	1683, 0, 0, 0, 0, 2073, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1683, 0, 2761, 2060, 2061, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4678, 2066, 2803, 0, 2807, 2662, 4684, 4685, 0,
	0, 0, 2821, 0, 0, 1251, 126, 0, 126, 0,
	126, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840,
	2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850,
	2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860,
	2861, 2862, 2863, 2864, 2865, 2866, 2867, 0, 2873, 0,
	2875, 2876, 2877, 2878, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1244, 126, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 2096, 0, 2902, 0, 1683, 1683,
	126, 1683, 126, 0, 0, 0, 0, 0, 2120, 0,
	3778, 3779, 2953, 3796, 3797, 3798, 126, 0, 126, 0,
	0, 0, 0, 2043, 2044, 0, 0, 0, 2983, 2986,
	2989, 2992, 0, 0, 2998, 2999, 3000, 3001, 3002, 3003,
	3004, 0, 0, 0, 1683, 0, 0, 2074, 0, 0,
	0, 0, 0, 0, 2072, 2046, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3067, 0, 3078, 3080, 3085,
	0, 0, 1266, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 2099, 0, 0, 126, 0, 0,
	0, 3793, 0, 2045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 0, 0, 0, 0, 0,
	1683, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4790, 4791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2098, 0,
	0, 1683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1222, 0, 3784, 0, 0, 2068, 2069, 2070, 2071,
	0, 0, 0, 0, 0, 0, 2051, 0, 0, 0,
	0, 0, 0, 0, 2113, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 930, 0, 2079,
	2079, 0, 2079, 2119, 0, 0, 0, 2125, 0, 0,
	0, 0, 0, 0, 0, 0, 2063, 2059, 1683, 2056,
	2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053, 0, 0,
	2073, 2075, 0, 86, 0, 0, 0, 0, 0, 0,
	3800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2060, 2061, 0, 0, 0, 0, 0, 0,
	92, 0, 1683, 0, 0, 0, 0, 0, 0, 0,
	0, 2662, 0, 0, 3794, 0, 0, 1301, 0, 0,
	0, 0, 0, 0, 0, 2618, 0, 2066, 0, 0,
	0, 0, 1683, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 101, 0, 1420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2079, 0, 0,
	2217, 0, 2220, 0, 126, 0, 0, 0, 0, 0,
	312, 312, 312, 0, 0, 0, 0, 1683, 0, 0,
	0, 0, 0, 0, 0, 0, 1043, 0, 0, 5014,
	0, 5016, 5017, 5018, 0, 5020, 2096, 312, 308, 308,
	800, 124, 0, 0, 0, 972, 0, 108, 121, 2096,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2079, 2079, 0, 3075, 3075, 0, 1683,
	2079, 0, 0, 0, 972, 0, 0, 0, 0, 0,
	3799, 3799, 0, 0, 2079, 2079, 0, 0, 0, 0,
	0, 0, 0, 0, 2079, 0, 0, 0, 0, 0,
	0, 0, 0, 3490, 3491, 0, 3493, 0, 2079, 2072,
	0, 0, 0, 109, 0, 0, 0, 1266, 0, 0,
	2079, 0, 3795, 0, 0, 0, 0, 0, 0, 0,
	5072, 0, 0, 0, 0, 2067, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3075,
	3075, 3075, 3075, 3075, 3075, 3075, 3075, 3075, 3075, 3075,
	3075, 3075, 3075, 3075, 3075, 3075, 3075, 3075, 3075, 0,
	3075, 3799, 3799, 3799, 3799, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2098, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2079, 0,
	0, 0, 0, 0, 0, 1683, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1427, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3618, 0, 0, 0, 930, 0, 0,
	0, 0, 0, 0, 0, 5164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 0, 0,
	0, 0, 0, 0, 3790, 3791, 3792, 0, 0, 0,
	0, 3789, 3787, 3788, 3780, 3781, 3782, 3783, 3785, 3786,
	0, 2063, 2059, 0, 2056, 2054, 2055, 2047, 2048, 2049,
	2050, 2052, 2053, 0, 0, 0, 0, 0, 0, 0,
	0, 2043, 2044, 0, 0, 0, 0, 0, 0, 0,
	0, 2618, 0, 0, 2100, 2101, 212, 0, 116, 0,
	0, 120, 0, 0, 0, 2074, 0, 0, 0, 1251,
	0, 0, 0, 2046, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 930, 0, 0, 2079,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 1044, 2099, 0, 0, 0, 0, 170, 0, 0,
	0, 2045, 3684, 3685, 0, 0, 0, 0, 3691, 0,
	0, 0, 2065, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 0, 0, 0, 0, 3705, 3706, 0,
	0, 0, 0, 2953, 0, 0, 0, 277, 0, 0,
	0, 0, 0, 0, 0, 1244, 0, 1244, 2079, 2079,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3715, 0,
	0, 4288, 218, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 3729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2068, 2069, 2070, 2071, 0, 269,
	0, 3741, 0, 0, 2051, 0, 0, 0, 270, 0,
	0, 0, 213, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1266, 0, 0, 0, 0, 0, 0, 2073, 2075,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2662,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 2061, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3085, 3085, 3085, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1222, 0,
	0, 1222, 1222, 0, 2197, 2066, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2079, 2079, 0, 0, 2079, 3799,
	3799, 2079, 0, 0, 0, 2079, 0, 0, 0, 2891,
	0, 0, 2079, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2079, 0, 0, 0, 1244,
	0, 0, 0, 0, 0, 0, 0, 2096, 0, 2119,
	0, 0, 0, 2119, 0, 0, 0, 0, 2079, 2079,
	2079, 2079, 2079, 0, 0, 0, 0, 0, 0, 2079,
	0, 2079, 0, 0, 3799, 3799, 3799, 3799, 3799, 3799,
	3799, 3799, 3799, 3799, 3799, 3799, 3799, 3799, 3799, 3799,
	3799, 3799, 3799, 3799, 0, 0, 0, 3799, 0, 0,
	2079, 2079, 0, 0, 0, 0, 0, 2072, 0, 0,
	0, 0, 0, 2079, 0, 0, 0, 0, 0, 0,
	0, 0, 2079, 0, 0, 0, 0, 1251, 0, 0,
	0, 1414, 0, 2067, 0, 312, 0, 0, 0, 1251,
	0, 0, 0, 0, 0, 0, 0, 2220, 0, 0,
	0, 0, 0, 312, 0, 312, 312, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1708, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2079, 0, 0, 0, 126, 0, 0,
	0, 2098, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2079, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 312,
	312, 312, 2079, 0, 312, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4059, 4060, 0, 0, 0, 1594, 972, 0, 0, 0,
	0, 0, 1706, 0, 2079, 2079, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 930, 2063,
	2059, 0, 2056, 2054, 2055, 2047, 2048, 2049, 2050, 2052,
	2053, 0, 0, 0, 0, 0, 0, 312, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2043, 2044,
	0, 2076, 2077, 2078, 2087, 2088, 2089, 0, 0, 0,
	0, 0, 1856, 1857, 0, 0, 0, 0, 0, 0,
	0, 2080, 2074, 0, 0, 0, 0, 0, 0, 0,
	2046, 0, 0, 0, 2079, 0, 0, 0, 0, 0,
	0, 2093, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2099,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2065,
	0, 2079, 2079, 0, 0, 0, 2079, 2079, 0, 2062,
	2079, 2079, 0, 0, 0, 2079, 0, 312, 0, 2079,
	0, 0, 0, 0, 2079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1339, 0, 0, 0, 3075,
	0, 0, 0, 312, 0, 1982, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 126, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2068, 2069, 2070, 2071, 0, 0, 0, 0, 2821,
	0, 2051, 0, 0, 0, 0, 4285, 4286, 0, 0,
	4289, 0, 0, 0, 4292, 0, 0, 0, 0, 0,
	0, 126, 0, 4296, 126, 0, 3075, 0, 0, 0,
	126, 0, 4303, 0, 0, 0, 0, 3839, 0, 0,
	0, 0, 0, 0, 2084, 0, 0, 0, 2094, 0,
	0, 0, 4316, 0, 0, 2073, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4339, 4340, 0, 4341, 4342, 4343, 2090, 0,
	2091, 0, 0, 0, 0, 0, 0, 2060, 2061, 2079,
	0, 0, 0, 0, 0, 0, 4350, 0, 0, 0,
	4352, 0, 0, 0, 0, 0, 0, 2082, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2066, 0, 0, 0, 0, 0, 0, 2079,
	2079, 0, 0, 4381, 4382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4403, 0,
	0, 0, 2092, 2219, 0, 1427, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2081, 0, 312, 2219, 312, 0, 0,
	0, 0, 0, 0, 2096, 972, 0, 2235, 0, 0,
	0, 0, 0, 1431, 972, 0, 0, 0, 2079, 2079,
	2079, 0, 0, 2245, 0, 1706, 0, 0, 0, 2079,
	2079, 3799, 3075, 0, 0, 0, 0, 0, 2079, 0,
	0, 2079, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 2891, 312, 0,
	0, 0, 0, 0, 2072, 0, 0, 0, 4474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2119, 0,
	0, 0, 0, 0, 0, 0, 1706, 3799, 3075, 0,
	2067, 0, 0, 0, 0, 0, 4492, 0, 0, 0,
	0, 0, 0, 0, 2079, 0, 0, 0, 0, 0,
	0, 0, 2079, 3075, 0, 0, 0, 0, 0, 0,
	2079, 0, 2085, 0, 0, 0, 0, 0, 0, 0,
	4523, 0, 2079, 0, 2079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2098, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4555, 4556, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3799, 0, 0,
	2083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 2058, 2064, 2086, 2063, 2059, 0, 2056,
	2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053, 0, 0,
	0, 2079, 3799, 3750, 0, 2079, 0, 3751, 0, 0,
	854, 0, 0, 0, 0, 0, 1414, 0, 0, 0,
	2197, 0, 0, 0, 3799, 312, 0, 0, 0, 972,
	0, 838, 0, 0, 0, 0, 839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2197, 0, 0,
	0, 0, 0, 1414, 0, 0, 4675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 840,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	841, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 842, 0, 2602, 0, 0, 0, 0,
	0, 312, 0, 312, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 2625, 0, 0, 860, 0, 0, 0,
	0, 4722, 4723, 0, 0, 0, 0, 4727, 4728, 2637,
	0, 2637, 4731, 4732, 0, 0, 0, 2644, 0, 843,
	4736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4740, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 844, 836, 0, 4745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 2672, 2079, 845, 0,
	0, 0, 0, 837, 972, 0, 312, 0, 312, 0,
	312, 0, 312, 0, 312, 0, 0, 0, 0, 2694,
	869, 0, 0, 2079, 0, 0, 126, 126, 0, 126,
	0, 0, 0, 0, 2711, 0, 2713, 0, 2715, 0,
	2717, 0, 2718, 0, 0, 0, 0, 0, 859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 312, 312, 312, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2748,
	2749, 0, 0, 0, 0, 2043, 2044, 0, 2076, 2077,
	2078, 2087, 2088, 2089, 126, 126, 0, 126, 0, 0,
	0, 2079, 0, 0, 0, 856, 0, 0, 2080, 2074,
	0, 0, 0, 0, 0, 0, 1251, 2046, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2093, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2099, 0, 0, 0,
	0, 0, 0, 0, 0, 2045, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2079, 2065, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2062, 0, 0, 0,
	0, 0, 0, 866, 0, 847, 1431, 0, 0, 0,
	0, 0, 4910, 0, 1431, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 867, 0, 848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1414, 0, 0, 1244, 1431, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4950,
	4951, 126, 126, 0, 0, 0, 0, 0, 2068, 2069,
	2070, 2071, 0, 0, 868, 0, 0, 0, 2051, 0,
	0, 0, 849, 0, 1427, 0, 0, 864, 865, 0,
	862, 0, 0, 0, 1431, 0, 0, 0, 0, 857,
	1427, 1431, 850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 0, 1431, 0, 0,
	0, 2084, 0, 0, 0, 2094, 0, 0, 0, 0,
	0, 0, 2073, 2075, 312, 0, 0, 0, 0, 0,
	0, 972, 3170, 972, 0, 0, 312, 0, 0, 0,
	851, 0, 858, 0, 0, 2090, 0, 2091, 0, 0,
	0, 852, 0, 0, 2060, 2061, 0, 0, 5039, 5040,
	5041, 0, 0, 0, 0, 0, 0, 853, 0, 1431,
	0, 0, 861, 0, 2082, 0, 0, 0, 0, 0,
	312, 2821, 0, 972, 5050, 5051, 0, 0, 870, 2066,
	0, 0, 0, 312, 0, 0, 312, 0, 0, 0,
	855, 0, 5059, 5062, 0, 0, 312, 312, 0, 0,
	0, 312, 0, 312, 0, 0, 0, 0, 0, 0,
	312, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 2092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2625, 0,
	2081, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2096, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5125, 0, 0, 0, 0, 312,
	0, 0, 0, 5133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 126, 0, 0, 5141, 0,
	0, 1251, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 2072, 0, 0, 0, 1414, 1414, 0, 0, 0,
	0, 0, 5153, 0, 0, 5155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 0, 5165,
	0, 0, 0, 0, 0, 0, 3104, 0, 0, 0,
	0, 0, 0, 2043, 2044, 0, 2076, 2077, 2078, 2087,
	2088, 2089, 0, 0, 0, 0, 0, 0, 0, 2085,
	312, 0, 0, 0, 0, 0, 2080, 2074, 0, 0,
	0, 3102, 0, 0, 0, 2046, 3106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2093, 0, 1706, 0,
	0, 0, 0, 0, 0, 2098, 0, 0, 3107, 0,
	0, 0, 0, 0, 2099, 0, 0, 0, 0, 0,
	0, 0, 972, 2045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	0, 1431, 0, 1431, 2062, 0, 0, 0, 0, 0,
	3108, 0, 0, 0, 0, 0, 312, 0, 1431, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3109,
	0, 2287, 0, 0, 3509, 0, 3110, 2083, 1431, 0,
	0, 0, 0, 0, 0, 2625, 0, 0, 0, 2057,
	2058, 2064, 2086, 2063, 2059, 0, 2056, 2054, 2055, 2047,
	2048, 2049, 2050, 2052, 2053, 0, 0, 0, 0, 3111,
	2949, 5292, 312, 0, 2950, 5296, 2068, 2069, 2070, 2071,
	0, 0, 0, 0, 0, 0, 2051, 0, 0, 0,
	0, 0, 0, 312, 0, 312, 0, 0, 0, 0,
	3581, 0, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3594, 0, 3597, 0, 0, 0, 0, 0, 2084,
	0, 3112, 0, 2094, 0, 0, 0, 0, 0, 0,
	2073, 2075, 1431, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 3113, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3114, 2090, 0, 2091, 0, 312, 312, 312,
	312, 0, 2060, 2061, 0, 0, 0, 312, 0, 3631,
	0, 0, 312, 0, 0, 0, 0, 0, 3115, 0,
	0, 0, 2082, 0, 0, 3642, 1706, 3644, 1706, 0,
	126, 0, 0, 0, 0, 3651, 0, 2066, 0, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 2821,
	0, 312, 0, 0, 0, 0, 1414, 0, 5062, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3680,
	0, 0, 0, 0, 0, 0, 0, 2092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2081, 0,
	0, 0, 0, 0, 0, 1251, 0, 0, 0, 2096,
	3116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1431, 1431, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1431, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2072,
	0, 0, 1431, 0, 0, 0, 5498, 5498, 5498, 0,
	0, 0, 3117, 3118, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 0, 0, 0,
	0, 1431, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3119, 0, 0, 0, 0, 5524, 0, 0, 0,
	0, 3124, 0, 0, 0, 0, 0, 2085, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 1414, 3120, 0, 0, 0, 1431, 0, 1431, 1414,
	1431, 0, 0, 0, 0, 0, 0, 3121, 0, 0,
	0, 0, 0, 2098, 0, 0, 0, 0, 1431, 1431,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5498,
	0, 0, 1431, 0, 0, 0, 0, 0, 0, 3122,
	0, 0, 0, 0, 1431, 0, 0, 1431, 1431, 1431,
	1431, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1427,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5612,
	0, 0, 0, 3123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1427, 2057, 2058, 2064,
	2086, 2063, 2059, 0, 2056, 2054, 2055, 2047, 2048, 2049,
	2050, 2052, 2053, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2219,
	2043, 2044, 0, 2076, 2077, 2078, 2087, 2088, 2089, 0,
	0, 312, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 972, 2080, 2074, 0, 0, 0, 0, 0,
	0, 0, 2046, 0, 0, 5498, 5676, 0, 0, 3890,
	0, 0, 0, 2093, 0, 0, 0, 0, 0, 2287,
	2287, 1431, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2099, 0, 0, 0, 0, 0, 0, 0, 0,
	2045, 0, 0, 0, 0, 312, 0, 0, 0, 312,
	312, 2065, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 2062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 1706, 1706, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3953, 1431, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 312, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 2219, 0,
	0, 0, 0, 2068, 2069, 2070, 2071, 0, 0, 0,
	0, 0, 312, 2051, 0, 4009, 4011, 0, 0, 2625,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1431, 0, 0, 0, 0, 0, 0, 1431,
	0, 0, 0, 0, 0, 0, 2084, 0, 1431, 0,
	2094, 0, 0, 0, 0, 0, 0, 2073, 2075, 0,
	0, 0, 0, 0, 0, 1431, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 0, 2091, 0, 0, 0, 0, 0, 0, 2060,
	2061, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2066, 312, 0, 0, 2043, 2044,
	0, 2076, 2077, 2078, 2087, 2088, 2089, 0, 0, 0,
	0, 0, 0, 972, 0, 0, 0, 0, 0, 0,
	0, 2080, 2074, 312, 0, 0, 0, 0, 0, 0,
	2046, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2093, 0, 0, 2092, 0, 0, 312, 0, 0,
	0, 4160, 0, 0, 0, 0, 0, 1427, 0, 2099,
	0, 0, 0, 0, 0, 2081, 0, 0, 2045, 0,
	0, 0, 0, 0, 0, 0, 2096, 0, 0, 2065,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 1431, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2072, 0, 0, 0,
	0, 0, 0, 0, 2287, 0, 0, 0, 0, 0,
	312, 0, 0, 2891, 0, 0, 0, 312, 0, 312,
	0, 0, 2067, 0, 0, 0, 0, 0, 0, 0,
	0, 2068, 2069, 2070, 2071, 0, 0, 0, 4264, 0,
	0, 2051, 0, 0, 0, 4269, 0, 1706, 0, 0,
	0, 0, 0, 0, 2085, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1431,
	0, 0, 0, 0, 2084, 4283, 0, 0, 2094, 0,
	2098, 1431, 0, 0, 0, 2073, 2075, 0, 0, 2043,
	2044, 0, 2076, 2077, 2078, 2087, 2088, 2089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2090, 0,
	2091, 0, 2080, 2074, 0, 0, 0, 2060, 2061, 0,
	0, 2046, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2093, 0, 0, 0, 0, 2082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	2099, 0, 2066, 0, 0, 0, 0, 0, 0, 2045,
	0, 0, 2083, 0, 0, 0, 0, 0, 0, 0,
	2065, 0, 0, 0, 2057, 2058, 2064, 2086, 2063, 2059,
	2062, 2056, 2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053,
	0, 0, 1431, 0, 0, 0, 0, 0, 0, 4750,
	0, 0, 2092, 0, 1431, 0, 1431, 0, 1427, 1427,
	126, 0, 1431, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1431, 1431, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2096, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2068, 2069, 2070, 2071, 0, 0, 0, 0,
	0, 0, 2051, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 972, 0, 0, 0, 0, 0, 0,
	0, 1316, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1431,
	0, 0, 0, 0, 0, 2084, 0, 0, 0, 2094,
	2067, 0, 0, 0, 0, 0, 2073, 2075, 0, 0,
	2043, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 314, 314, 0, 0, 2090,
	0, 2091, 2085, 0, 2074, 0, 0, 126, 2060, 2061,
	0, 126, 2046, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 2082, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 2098, 0,
	0, 2099, 0, 2066, 0, 0, 0, 0, 0, 0,
	2045, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 2065, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 2092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2081, 0, 0, 0, 0, 0,
	2083, 0, 0, 0, 0, 2096, 0, 0, 0, 0,
	4287, 312, 2057, 2058, 2064, 2086, 2063, 2059, 0, 2056,
	2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053, 0, 0,
	0, 0, 0, 2068, 2069, 2070, 2071, 0, 0, 2625,
	0, 0, 0, 2051, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 2072, 0, 0, 312, 0,
	0, 0, 312, 4624, 312, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 4636, 0, 0, 0, 0, 0,
	0, 2067, 0, 0, 318, 0, 0, 2073, 2075, 1427,
	2625, 0, 2625, 0, 0, 0, 0, 4657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2085, 0, 0, 854, 0, 0, 2060,
	2061, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 838, 0, 0,
	0, 0, 839, 0, 0, 0, 0, 0, 0, 2098,
	0, 0, 0, 0, 2066, 0, 0, 0, 0, 0,
	0, 0, 0, 4702, 0, 0, 0, 1431, 1431, 126,
	0, 0, 964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 840, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 841, 0, 0, 0,
	0, 964, 0, 0, 1431, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 842,
	0, 0, 1431, 0, 0, 0, 0, 0, 0, 0,
	0, 2083, 0, 0, 0, 0, 2096, 1431, 0, 0,
	1431, 0, 860, 2057, 2058, 2064, 2086, 2063, 2059, 0,
	2056, 2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053, 0,
	0, 0, 0, 0, 0, 843, 0, 0, 4301, 0,
	2287, 0, 0, 0, 1431, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1427, 0, 0, 0, 0, 0,
	844, 836, 1427, 0, 0, 0, 2072, 0, 2287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2219, 0, 0, 0, 845, 0, 0, 0, 0, 837,
	0, 0, 2067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 859, 2287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2219, 0, 2219, 0, 0, 0, 0, 0, 0,
	2098, 0, 0, 2043, 2044, 0, 2076, 2077, 2078, 2087,
	2088, 2089, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2080, 2074, 0, 0,
	0, 312, 0, 0, 312, 2046, 0, 0, 0, 0,
	0, 856, 0, 4881, 0, 0, 2093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2625,
	0, 0, 0, 0, 2099, 0, 0, 0, 0, 312,
	0, 0, 0, 2045, 0, 0, 0, 0, 0, 0,
	1431, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 0, 0, 0, 2063, 2059,
	0, 2056, 2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 847, 0, 2219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 867, 0, 848, 0, 0, 312, 1431, 0,
	1431, 0, 0, 0, 1431, 0, 0, 0, 0, 0,
	0, 0, 1431, 1431, 2625, 0, 2068, 2069, 2070, 2071,
	0, 0, 0, 0, 0, 4994, 2051, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	868, 0, 0, 0, 0, 0, 0, 0, 849, 0,
	0, 0, 0, 864, 865, 1431, 862, 0, 0, 0,
	0, 0, 0, 0, 0, 857, 0, 0, 850, 2084,
	0, 0, 0, 2094, 0, 1431, 0, 0, 0, 0,
	2073, 2075, 0, 0, 0, 0, 0, 1431, 0, 1431,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 2090, 0, 2091, 0, 0, 0, 0,
	0, 0, 2060, 2061, 0, 0, 851, 314, 858, 314,
	314, 0, 0, 314, 0, 0, 0, 852, 0, 0,
	0, 0, 2082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 853, 0, 0, 0, 2066, 861, 0,
	0, 0, 0, 1431, 0, 0, 1431, 0, 0, 0,
	0, 0, 0, 0, 870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2092, 0, 0,
	0, 314, 1603, 314, 314, 314, 0, 0, 314, 314,
	1603, 0, 0, 0, 0, 5110, 2287, 0, 2081, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2096,
	314, 0, 0, 0, 0, 1431, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1306, 0, 1431, 0, 1603, 0, 0, 0, 0, 0,
	0, 0, 2287, 2287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 314, 314, 0, 0, 0, 0, 0, 0, 2072,
	0, 0, 0, 0, 2287, 2287, 0, 0, 0, 0,
	1603, 2625, 0, 0, 2219, 0, 2219, 1603, 314, 314,
	0, 0, 0, 0, 0, 2067, 312, 0, 0, 0,
	0, 0, 0, 1603, 0, 0, 0, 2287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2637, 0, 0, 2085, 0, 0,
	0, 0, 0, 0, 0, 0, 1431, 1431, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 312, 0, 0, 0, 0, 0, 0,
	0, 2043, 2044, 2098, 0, 1603, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1431, 0, 0, 0, 0,
	5248, 1706, 0, 0, 0, 2074, 0, 0, 0, 0,
	0, 0, 0, 2046, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2287, 0,
	2287, 0, 2099, 0, 0, 0, 0, 314, 0, 0,
	0, 2045, 0, 0, 0, 0, 0, 0, 0, 2219,
	0, 0, 2065, 0, 0, 2083, 0, 0, 0, 0,
	0, 0, 2062, 0, 2219, 1600, 0, 2057, 2058, 2064,
	2086, 2063, 2059, 1720, 2056, 2054, 2055, 2047, 2048, 2049,
	2050, 2052, 2053, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 3753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1720, 0, 0,
	0, 3690, 0, 0, 0, 0, 0, 2219, 0, 2219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2068, 2069, 2070, 2071, 0, 2219,
	0, 312, 2219, 0, 2051, 0, 0, 0, 0, 0,
	0, 0, 0, 1720, 0, 0, 0, 0, 0, 0,
	1720, 0, 0, 0, 0, 0, 0, 0, 0, 5372,
	0, 0, 0, 0, 0, 0, 1720, 0, 0, 0,
	0, 0, 1431, 1431, 0, 0, 0, 0, 0, 0,
	1431, 0, 0, 1431, 1431, 0, 0, 0, 2073, 2075,
	0, 0, 0, 1431, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 2061, 312, 0, 0, 0, 0, 2287, 1720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5430, 0, 0, 314, 0, 2066, 0, 0, 0, 0,
	0, 0, 0, 0, 1603, 0, 0, 0, 0, 314,
	314, 314, 0, 1431, 2043, 2044, 0, 0, 0, 314,
	0, 0, 312, 0, 0, 0, 0, 1431, 314, 0,
	0, 0, 0, 0, 1603, 0, 1431, 0, 2074, 0,
	0, 1431, 1431, 1431, 0, 0, 2046, 0, 0, 0,
	5480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 1431, 0, 1431, 0,
	0, 0, 314, 0, 1431, 2099, 1431, 2096, 0, 0,
	0, 0, 0, 0, 2045, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2065, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2062, 0, 0, 0, 0,
	1431, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2072, 1603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 3683, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2068, 2069, 2070,
	2071, 0, 0, 0, 0, 0, 0, 2051, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2219, 0, 2219, 0, 0, 0, 0,
	0, 0, 1431, 0, 0, 0, 0, 0, 0, 0,
	1431, 2098, 0, 0, 1431, 1431, 0, 1431, 0, 0,
	0, 0, 2287, 0, 0, 0, 0, 0, 1431, 0,
	0, 2073, 2075, 0, 0, 0, 0, 0, 1431, 1431,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1600, 0, 0,
	1431, 0, 0, 2060, 2061, 0, 0, 0, 0, 0,
	0, 0, 2260, 0, 0, 0, 0, 0, 0, 0,
	0, 2260, 0, 0, 0, 0, 0, 1720, 0, 314,
	0, 1603, 1603, 314, 0, 0, 0, 0, 2066, 1431,
	0, 1431, 1603, 0, 0, 0, 0, 0, 0, 2063,
	2059, 0, 2056, 2054, 2055, 2047, 2048, 2049, 2050, 2052,
	2053, 0, 0, 0, 0, 0, 0, 0, 1603, 0,
	0, 0, 314, 0, 0, 0, 1431, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 1603, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 1431, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2096, 0, 0, 0, 0, 314, 0, 314, 0, 0,
	0, 1600, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 1603, 0, 1603, 0, 1603, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1431, 1431, 0, 0,
	0, 0, 0, 0, 1603, 1603, 0, 0, 0, 0,
	0, 1431, 0, 0, 0, 0, 0, 0, 1603, 0,
	2072, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	1603, 0, 0, 1603, 1603, 1603, 1603, 0, 0, 0,
	0, 0, 0, 0, 1431, 314, 2067, 0, 0, 1431,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	314, 1601, 314, 0, 314, 0, 314, 0, 314, 1721,
	0, 0, 0, 0, 1431, 1431, 1431, 1431, 1431, 1431,
	1431, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1431, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 2098, 314, 314, 314, 314, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 1431, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 1720, 0, 0, 0, 2287,
	0, 0, 0, 0, 0, 1600, 0, 0, 0, 1721,
	0, 0, 0, 0, 0, 0, 1721, 0, 0, 0,
	0, 0, 0, 1431, 0, 1431, 0, 1603, 0, 0,
	0, 1720, 1721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1720, 0, 2063, 2059, 0, 2056, 2054, 2055, 2047, 2048,
	2049, 2050, 2052, 2053, 0, 1431, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1720, 0, 1720, 0, 1720,
	2287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1603, 0, 0, 0, 0, 0, 0, 1720, 1720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1720, 1431, 0, 1720, 1720, 1720, 1720,
	1431, 0, 0, 1431, 1431, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2043, 2044, 1603, 2076, 2077, 2078, 2087,
	2088, 2089, 1431, 0, 1431, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2080, 2074, 314, 0,
	0, 1603, 0, 0, 0, 2046, 0, 0, 0, 0,
	0, 1431, 0, 0, 1431, 0, 2093, 0, 314, 0,
	0, 0, 0, 0, 0, 314, 0, 314, 0, 0,
	314, 0, 0, 0, 2099, 0, 0, 0, 0, 0,
	0, 0, 0, 2045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 0, 0, 0, 0, 0,
	2287, 0, 0, 0, 314, 0, 0, 314, 0, 0,
	1600, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	314, 0, 1603, 0, 0, 0, 0, 0, 0, 0,
	314, 314, 0, 0, 0, 314, 0, 314, 0, 0,
	0, 0, 0, 0, 314, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1431, 0, 0,
	0, 0, 0, 0, 0, 0, 2068, 2069, 2070, 2071,
	0, 0, 1431, 0, 0, 0, 2051, 0, 0, 0,
	0, 1603, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1600, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 2084,
	0, 0, 2287, 2094, 0, 0, 0, 314, 0, 0,
	2073, 2075, 0, 1721, 0, 1431, 0, 1431, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2090, 0, 2091, 0, 1431, 0, 0,
	1431, 0, 2060, 2061, 1431, 0, 0, 0, 1600, 994,
	0, 0, 0, 0, 1431, 0, 0, 0, 0, 0,
	0, 0, 2082, 0, 0, 0, 0, 0, 0, 0,
	997, 0, 0, 0, 1600, 998, 0, 2066, 0, 0,
	0, 0, 0, 0, 314, 1603, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1603, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1601, 999, 0,
	1013, 0, 0, 0, 0, 0, 0, 2092, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 1431, 0, 0, 1000, 2081, 0,
	0, 0, 1001, 0, 0, 0, 0, 0, 0, 2096,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 1022, 0, 0, 0, 0,
	0, 314, 1002, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2043, 2044, 0, 0, 0, 1020, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1603, 0,
	0, 0, 0, 0, 0, 0, 0, 2074, 0, 2072,
	1603, 0, 1603, 995, 993, 2046, 0, 0, 1603, 0,
	0, 0, 0, 0, 1600, 0, 314, 0, 0, 1603,
	1603, 0, 0, 0, 0, 2067, 0, 1003, 0, 0,
	0, 0, 0, 0, 2099, 0, 0, 314, 0, 314,
	0, 0, 0, 2045, 1024, 0, 0, 0, 0, 869,
	314, 0, 1431, 0, 2065, 0, 0, 2085, 0, 0,
	0, 0, 0, 0, 2062, 0, 0, 0, 0, 0,
	1721, 1721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2098, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1603, 0, 1721, 0, 0,
	0, 314, 314, 314, 314, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 1023, 0, 1721, 0, 1600, 0,
	0, 0, 0, 0, 1018, 0, 2068, 2069, 2070, 2071,
	1720, 0, 0, 0, 0, 0, 2051, 314, 0, 0,
	0, 1431, 0, 1431, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2083, 0, 0, 0, 0,
	0, 1721, 0, 1721, 0, 1721, 0, 2057, 2058, 2064,
	2086, 2063, 2059, 0, 2056, 2054, 2055, 2047, 2048, 2049,
	2050, 2052, 2053, 1721, 1721, 0, 0, 0, 0, 0,
	2073, 2075, 3752, 1017, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 1004, 0, 0, 0, 0, 1721,
	0, 0, 1721, 1721, 1721, 1721, 0, 0, 0, 0,
	0, 0, 2060, 2061, 0, 0, 0, 0, 2043, 2044,
	0, 2076, 2077, 2078, 2087, 2088, 2089, 1005, 0, 0,
	0, 1720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2080, 2074, 1720, 0, 1720, 0, 2066, 0, 0,
	2046, 1720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2093, 1720, 1720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 868, 0, 0, 0, 0, 0, 2099,
	0, 0, 0, 0, 0, 0, 992, 0, 2045, 1014,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2065,
	0, 1006, 0, 0, 0, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2096,
	1012, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1601, 0, 1720, 1007,
	0, 0, 0, 1008, 1027, 0, 1026, 0, 0, 0,
	1009, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1010, 0, 0, 0,
	0, 1019, 0, 0, 0, 0, 0, 1028, 0, 2072,
	1025, 2068, 2069, 2070, 2071, 0, 0, 870, 0, 0,
	0, 2051, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1603, 2067, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1601,
	0, 0, 0, 0, 2084, 0, 0, 0, 2094, 0,
	0, 0, 0, 0, 0, 2073, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2090, 0,
	2091, 0, 0, 2098, 0, 0, 1603, 2060, 2061, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 2082, 0, 0,
	0, 0, 0, 0, 1601, 0, 0, 0, 0, 0,
	1603, 0, 2066, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1601, 0, 0, 1603, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 314, 314, 0, 0, 0, 0, 0,
	0, 0, 2092, 0, 0, 0, 0, 0, 0, 0,
	0, 2063, 2059, 0, 2056, 2054, 2055, 2047, 2048, 2049,
	2050, 2052, 2053, 2081, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 2096, 0, 0, 0, 0, 0,
	0, 0, 2043, 2044, 0, 2076, 2077, 2078, 2087, 2088,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2080, 2074, 0, 0, 0,
	0, 314, 314, 0, 2046, 314, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 2093, 0, 0, 0, 0,
	0, 0, 0, 0, 2072, 0, 314, 0, 0, 0,
	0, 0, 0, 2099, 0, 0, 0, 0, 0, 0,
	0, 0, 2045, 0, 0, 0, 0, 1600, 0, 0,
	2067, 0, 0, 2065, 0, 0, 0, 0, 0, 0,
	1601, 0, 0, 2062, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1603, 0, 0, 0,
	0, 0, 2085, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1600, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2098, 1600,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2068, 2069, 2070, 2071, 314,
	0, 0, 0, 1600, 1603, 2051, 1603, 0, 0, 0,
	1603, 0, 0, 0, 0, 0, 0, 314, 1603, 1603,
	0, 0, 1603, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 1601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1721, 0, 2084, 0,
	2083, 314, 2094, 0, 0, 0, 0, 0, 0, 2073,
	2075, 0, 2057, 2058, 2064, 2086, 2063, 2059, 0, 2056,
	2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053, 0, 0,
	0, 1603, 2090, 0, 2091, 0, 0, 3749, 0, 0,
	0, 2060, 2061, 1603, 0, 1603, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2082, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2066, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 1721, 0, 1603,
	0, 314, 1603, 314, 0, 0, 0, 0, 0, 1721,
	0, 1721, 0, 0, 0, 0, 2092, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1721, 1721,
	0, 0, 0, 0, 0, 0, 0, 2081, 0, 1600,
	0, 314, 0, 0, 0, 0, 0, 0, 2096, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1603, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2072, 0,
	0, 0, 0, 0, 1721, 0, 0, 1720, 0, 1720,
	0, 0, 0, 1600, 0, 0, 0, 0, 0, 0,
	964, 1720, 1720, 0, 2067, 0, 0, 0, 0, 0,
	0, 0, 0, 2043, 2044, 0, 2076, 2077, 2078, 2087,
	2088, 2089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2085, 2074, 0, 0,
	0, 0, 0, 0, 0, 2046, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2093, 0, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 2098, 0, 2099, 0, 1720, 0, 1720, 0,
	0, 0, 0, 2045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2062, 0, 0, 0, 0, 0,
	0, 1603, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1600, 0, 0, 1600, 0, 314, 0, 0,
	0, 0, 0, 1603, 2083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2057, 2058, 2064, 2086,
	2063, 2059, 0, 2056, 2054, 2055, 2047, 2048, 2049, 2050,
	2052, 2053, 0, 0, 0, 0, 2068, 2069, 2070, 2071,
	0, 3748, 0, 0, 0, 0, 2051, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2084,
	0, 1600, 0, 2094, 0, 0, 0, 0, 0, 0,
	2073, 2075, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2090, 0, 2091, 0, 0, 0, 0,
	0, 0, 2060, 2061, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2082, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2066, 1603, 1603,
	0, 0, 0, 1601, 0, 0, 1603, 0, 0, 1603,
	1603, 0, 0, 0, 0, 0, 0, 0, 0, 1603,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1601, 0, 314,
	0, 0, 0, 0, 1600, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 1601, 0, 0, 0, 2096,
	0, 0, 314, 0, 0, 0, 314, 0, 314, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 1603,
	2260, 0, 0, 0, 0, 0, 0, 0, 0, 1601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1603, 0, 0, 0, 0, 1603, 1603, 1603,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2072,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1603, 0, 1603, 0, 0, 0, 0, 314,
	1603, 0, 1603, 0, 0, 2067, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1603, 2085, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2098, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1720, 1720, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 1720, 1720, 0, 0, 0, 0, 0, 0,
	0, 0, 1720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2083, 0, 0, 0, 0,
	1603, 1603, 0, 1603, 0, 0, 0, 2057, 2058, 2064,
	2086, 2063, 2059, 0, 2056, 2054, 2055, 2047, 2048, 2049,
	2050, 2052, 2053, 0, 1603, 1603, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1603, 0, 0, 0,
	0, 0, 1720, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 0, 1721, 0, 0, 0, 1601,
	0, 0, 0, 0, 0, 1720, 0, 1721, 1721, 0,
	1720, 1720, 1720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2043, 2044, 0, 2076, 2077, 2078,
	2087, 2088, 2089, 0, 0, 1720, 0, 1720, 0, 314,
	0, 0, 0, 1720, 0, 1600, 0, 2080, 2074, 0,
	0, 0, 1603, 0, 0, 314, 2046, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 1600,
	0, 0, 1721, 1603, 1721, 2099, 0, 0, 0, 0,
	0, 0, 0, 314, 2045, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2065, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2062, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1603, 1603, 0, 0, 1603, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1601, 0,
	0, 1601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1603, 314, 0, 0, 0, 1603, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2068, 2069, 2070,
	2071, 0, 0, 1600, 1600, 0, 1600, 2051, 0, 0,
	1603, 1603, 1603, 1603, 1603, 1603, 1603, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1720, 1720, 0,
	1601, 0, 0, 0, 1603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1601, 0, 1600,
	2084, 0, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 2073, 2075, 0, 1603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 2091, 0, 0, 0,
	0, 0, 0, 2060, 2061, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1603,
	0, 1603, 0, 2082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1600, 0, 0, 2066, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1600, 0, 0, 0,
	0, 1603, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 2092, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1601, 0, 0, 0, 0, 0, 0, 0, 0, 2081,
	0, 0, 0, 0, 0, 1720, 1720, 0, 0, 0,
	2096, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1603, 0, 0, 0, 0, 0, 1603, 0, 0, 1603,
	1603, 0, 0, 1600, 0, 0, 0, 314, 1720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2072, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1720, 1720, 1720, 1720, 1720, 1720, 1720,
	0, 0, 0, 0, 0, 0, 2067, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 1600, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1603, 0, 0,
	1603, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	0, 0, 0, 0, 0, 0, 0, 1600, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 314, 0, 0,
	0, 0, 0, 0, 2098, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1600, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1721, 1721, 0,
	0, 0, 0, 0, 0, 1721, 0, 0, 1721, 1721,
	0, 0, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2083, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2057, 2058,
	2064, 2086, 2063, 2059, 0, 2056, 2054, 2055, 2047, 2048,
	2049, 2050, 2052, 2053, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3747, 0, 314, 0, 0, 2043, 2044,
	0, 2076, 2077, 2078, 2087, 2088, 2089, 0, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2080, 2074, 1600, 0, 0, 0, 0, 0, 1720,
	2046, 1721, 1720, 1720, 0, 0, 1721, 1721, 1721, 0,
	0, 2093, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 2099,
	1603, 1721, 0, 1721, 0, 0, 0, 0, 2045, 1721,
	1603, 1601, 0, 0, 0, 0, 0, 0, 0, 2065,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1600, 0, 0, 1720, 0, 1601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2043, 2044,
	0, 2076, 2077, 2078, 2087, 2088, 2089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2080, 2074, 0, 0, 0, 314, 0, 0, 0,
	2046, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1603, 2093, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2068, 2069, 2070, 2071, 0, 0, 0, 0, 2099,
	0, 2051, 0, 0, 0, 0, 0, 0, 2045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2065,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2084, 0, 0, 0, 2094, 1601,
	1601, 0, 1601, 0, 0, 2073, 2075, 0, 2043, 2044,
	0, 2076, 2077, 2078, 2087, 2088, 2089, 0, 0, 0,
	0, 0, 0, 1721, 1721, 0, 0, 0, 2090, 0,
	2091, 2080, 2074, 0, 0, 0, 0, 2060, 2061, 0,
	2046, 0, 0, 0, 0, 1601, 0, 0, 0, 0,
	0, 2093, 0, 0, 0, 0, 0, 2082, 1603, 0,
	0, 2068, 2069, 2070, 2071, 0, 0, 0, 0, 2099,
	0, 2051, 2066, 0, 0, 0, 0, 0, 2045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2065,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2062,
	0, 0, 0, 1720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1720, 2084, 0, 0, 0, 2094, 0,
	0, 1601, 2092, 0, 0, 2073, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2081, 0, 0, 0, 0, 2090, 0,
	2091, 0, 1601, 0, 2096, 0, 0, 2060, 2061, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2082, 0, 0,
	0, 2068, 2069, 2070, 2071, 0, 0, 0, 0, 0,
	0, 2051, 2066, 0, 0, 0, 0, 0, 0, 0,
	0, 1721, 1721, 1720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2084, 0, 0, 0, 2094, 0,
	2067, 0, 2092, 0, 0, 2073, 2075, 0, 0, 1601,
	0, 0, 0, 0, 1721, 0, 0, 0, 0, 0,
	0, 0, 0, 2081, 0, 0, 0, 0, 2090, 0,
	2091, 0, 2085, 0, 2096, 0, 0, 2060, 2061, 1721,
	1721, 1721, 1721, 1721, 1721, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2082, 0, 0,
	0, 0, 0, 1601, 0, 0, 0, 0, 2098, 0,
	0, 0, 2066, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1720, 0, 1601, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 2092, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1601, 0,
	1721, 0, 0, 2081, 0, 0, 0, 0, 0, 0,
	2083, 0, 2085, 0, 2096, 0, 0, 0, 0, 0,
	0, 0, 2057, 2058, 2064, 2086, 2063, 2059, 0, 2056,
	2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2950, 2098, 0,
	1601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1601,
	2083, 0, 2085, 0, 0, 1721, 0, 0, 1721, 1721,
	0, 0, 2057, 2058, 2064, 2086, 2063, 2059, 0, 2056,
	2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053, 0, 0,
	0, 0, 0, 5417, 0, 0, 0, 0, 2098, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1601, 0, 0, 1721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 2058, 2064, 2086, 2063, 2059, 0, 2056,
	2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053, 0, 0,
	0, 0, 0, 5413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 1604, 332, 333, 1605, 1606, 1607, 0, 1608,
	744, 1609, 1610, 1611, 334, 1612, 335, 336, 337, 1370,
	338, 339, 340, 341, 342, 343, 344, 745, 746, 1721,
	345, 747, 346, 748, 1613, 749, 347, 348, 349, 350,
	351, 352, 353, 1614, 1615, 0, 354, 750, 751, 752,
	1616, 355, 356, 753, 1617, 1684, 1618, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 1619, 366, 367, 368,
	365, 369, 370, 1620, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 1621, 379, 380, 381, 1371, 382, 383,
	384, 1622, 1623, 1625, 1624, 1626, 1627, 1628, 385, 386,
	387, 388, 389, 0, 390, 392, 754, 755, 1629, 395,
	397, 391, 393, 1630, 396, 394, 398, 399, 1631, 400,
	401, 402, 1632, 1633, 403, 404, 405, 1634, 406, 407,
	408, 1635, 409, 410, 411, 1636, 412, 413, 756, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 757, 758, 426, 1637, 319, 1638, 1721, 0, 0,
	0, 427, 428, 429, 759, 0, 0, 0, 430, 1639,
	431, 432, 433, 1640, 434, 435, 1641, 1372, 436, 437,
	438, 760, 761, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 1642, 448, 762, 1643, 763, 449, 1644, 450,
	451, 452, 453, 454, 455, 456, 764, 765, 766, 552,
	1374, 457, 458, 459, 1645, 460, 461, 462, 463, 464,
	0, 0, 0, 465, 466, 467, 468, 1646, 321, 320,
	322, 1373, 767, 469, 553, 470, 768, 769, 1647, 770,
	1648, 471, 472, 474, 1375, 771, 1376, 473, 475, 476,
	1377, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 1649, 485, 487, 486, 1650, 489, 772, 488,
	1378, 490, 491, 1379, 1651, 492, 493, 494, 495, 496,
	497, 500, 1652, 1653, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1380, 527, 528, 529, 530, 531,
	539, 541, 542, 537, 538, 540, 543, 544, 546, 534,
	535, 536, 1381, 545, 532, 1654, 533, 323, 1382, 547,
	548, 549, 550, 1655, 773, 551, 774, 554, 555, 1656,
	0, 556, 0, 557, 1657, 1658, 559, 560, 561, 1659,
	1660, 562, 563, 775, 1383, 564, 1384, 776, 565, 566,
	558, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 1661, 577, 578, 777, 579, 580, 581, 778, 582,
	583, 584, 779, 585, 780, 586, 587, 1662, 588, 589,
	590, 0, 591, 592, 593, 594, 595, 596, 597, 598,
	781, 599, 600, 602, 601, 603, 1663, 604, 0, 605,
	606, 607, 0, 0, 0, 0, 0, 608, 609, 611,
	0, 612, 613, 614, 615, 610, 616, 617, 618, 619,
	620, 621, 1664, 623, 624, 622, 625, 626, 1385, 627,
	628, 629, 630, 631, 782, 632, 0, 633, 634, 642,
	643, 644, 635, 636, 638, 645, 637, 646, 647, 648,
	649, 651, 650, 1665, 653, 654, 652, 655, 656, 657,
	1666, 658, 783, 659, 639, 640, 660, 661, 1386, 662,
	663, 664, 665, 666, 667, 668, 784, 0, 669, 1667,
	670, 671, 672, 673, 674, 675, 677, 641, 678, 683,
	684, 785, 679, 680, 681, 682, 786, 686, 687, 688,
	689, 1668, 690, 691, 0, 685, 676, 1669, 692, 693,
	694, 695, 696, 697, 0, 698, 699, 1670, 700, 787,
	788, 789, 790, 1671, 712, 1672, 701, 703, 704, 705,
	706, 791, 707, 792, 1673, 708, 709, 710, 711, 702,
	713, 714, 1674, 1675, 715, 716, 717, 719, 721, 722,
	718, 720, 723, 1676, 724, 1677, 0, 725, 726, 727,
	793, 794, 795, 1678, 729, 730, 728, 731, 732, 735,
	733, 734, 796, 736, 737, 738, 1679, 1680, 1681, 1682,
	739, 740, 797, 741, 742, 743, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1598,
	0, 0, 0, 0, 0, 0, 3145, 0, 0, 0,
	0, 0, 0, 0, 0, 3146, 324, 325, 327, 326,
	328, 329, 330, 331, 1604, 332, 333, 1605, 1606, 1607,
	0, 1608, 744, 1609, 1610, 1611, 334, 1612, 335, 336,
	337, 1370, 338, 339, 340, 341, 342, 343, 344, 745,
	746, 0, 345, 747, 346, 748, 1613, 749, 347, 348,
	349, 350, 351, 352, 353, 1614, 1615, 0, 354, 750,
	751, 752, 1616, 355, 356, 753, 1617, 1684, 1618, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 1619, 366,
	367, 368, 365, 369, 370, 1620, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 1621, 379, 380, 381, 1371,
	382, 383, 384, 1622, 1623, 1625, 1624, 1626, 1627, 1628,
	385, 386, 387, 388, 389, 0, 390, 392, 754, 755,
	1629, 395, 397, 391, 393, 1630, 396, 394, 398, 399,
	1631, 400, 401, 402, 1632, 1633, 403, 404, 405, 1634,
	406, 407, 408, 1635, 409, 410, 411, 1636, 412, 413,
	756, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 757, 758, 426, 1637, 319, 1638, 0,
	0, 0, 0, 427, 428, 429, 759, 0, 0, 0,
	430, 1639, 431, 432, 433, 1640, 434, 435, 1641, 1372,
	436, 437, 438, 760, 761, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 1642, 448, 762, 1643, 763, 449,
	1644, 450, 451, 452, 453, 454, 455, 456, 764, 765,
	766, 552, 1374, 457, 458, 459, 1645, 460, 461, 462,
	463, 464, 0, 0, 0, 465, 466, 467, 468, 1646,
	321, 320, 322, 1373, 767, 469, 553, 470, 768, 769,
	1647, 770, 1648, 471, 472, 474, 1375, 771, 1376, 473,
	475, 476, 1377, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 1649, 485, 487, 486, 1650, 489,
	772, 488, 1378, 490, 491, 1379, 1651, 492, 493, 494,
	495, 496, 497, 500, 1652, 1653, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 1380, 527, 528, 529,
	530, 531, 539, 541, 542, 537, 538, 540, 543, 544,
	546, 534, 535, 536, 1381, 545, 532, 1654, 533, 323,
	1382, 547, 548, 549, 550, 1655, 773, 551, 774, 554,
	555, 1656, 0, 556, 0, 557, 1657, 1658, 559, 560,
	561, 1659, 1660, 562, 563, 775, 1383, 564, 1384, 776,
	565, 566, 558, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 1661, 577, 578, 777, 579, 580, 581,
	778, 582, 583, 584, 779, 585, 780, 586, 587, 1662,
	588, 589, 590, 0, 591, 592, 593, 594, 595, 596,
	597, 598, 781, 599, 600, 602, 601, 603, 1663, 604,
	0, 605, 606, 607, 0, 0, 0, 0, 0, 608,
	609, 611, 0, 612, 613, 614, 615, 610, 616, 617,
	618, 619, 620, 621, 1664, 623, 624, 622, 625, 626,
	1385, 627, 628, 629, 630, 631, 782, 632, 0, 633,
	634, 642, 643, 644, 635, 636, 638, 645, 637, 646,
	647, 648, 649, 651, 650, 1665, 653, 654, 652, 655,
	656, 657, 1666, 658, 783, 659, 639, 640, 660, 661,
	1386, 662, 663, 664, 665, 666, 667, 668, 784, 0,
	669, 1667, 670, 671, 672, 673, 674, 675, 677, 641,
	678, 683, 684, 785, 679, 680, 681, 682, 786, 686,
	687, 688, 689, 1668, 690, 691, 0, 685, 676, 1669,
	692, 693, 694, 695, 696, 697, 0, 698, 699, 1670,
	700, 787, 788, 789, 790, 1671, 712, 1672, 701, 703,
	704, 705, 706, 791, 707, 792, 1673, 708, 709, 710,
	711, 702, 713, 714, 1674, 1675, 715, 716, 717, 719,
	721, 722, 718, 720, 723, 1676, 724, 1677, 0, 725,
	726, 727, 793, 794, 795, 1678, 729, 730, 728, 731,
	732, 735, 733, 734, 796, 736, 737, 738, 1679, 1680,
	1681, 1682, 739, 740, 797, 741, 742, 743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1598, 0,
	0, 0, 4310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4312, 324, 325, 327, 326, 328,
	329, 330, 331, 1604, 332, 333, 1605, 1606, 1607, 0,
	1608, 744, 1609, 1610, 1611, 334, 1612, 335, 336, 337,
	1370, 338, 339, 340, 341, 342, 343, 344, 745, 746,
	0, 345, 747, 346, 748, 1613, 749, 347, 348, 349,
	350, 351, 352, 353, 1614, 1615, 0, 354, 750, 751,
	752, 1616, 355, 356, 753, 1617, 1684, 1618, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 1619, 366, 367,
	368, 365, 369, 370, 1620, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 1621, 379, 380, 381, 1371, 382,
	383, 384, 1622, 1623, 1625, 1624, 1626, 1627, 1628, 385,
	386, 387, 388, 389, 0, 390, 392, 754, 755, 1629,
	395, 397, 391, 393, 1630, 396, 394, 398, 399, 1631,
	400, 401, 402, 1632, 1633, 403, 404, 405, 1634, 406,
	407, 408, 1635, 409, 410, 411, 1636, 412, 413, 756,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 757, 758, 426, 1637, 319, 1638, 0, 0,
	0, 0, 427, 428, 429, 759, 0, 0, 0, 430,
	1639, 431, 432, 433, 1640, 434, 435, 1641, 1372, 436,
	437, 438, 760, 761, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 1642, 448, 762, 1643, 763, 449, 1644,
	450, 451, 452, 453, 454, 455, 456, 764, 765, 766,
	552, 1374, 457, 458, 459, 1645, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 1646, 321,
	320, 322, 1373, 767, 469, 553, 470, 768, 769, 1647,
	770, 1648, 471, 472, 474, 1375, 771, 1376, 473, 475,
	476, 1377, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 1649, 485, 487, 486, 1650, 489, 772,
	488, 1378, 490, 491, 1379, 1651, 492, 493, 494, 495,
	496, 497, 500, 1652, 1653, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 1380, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 1381, 545, 532, 1654, 533, 323, 1382,
	547, 548, 549, 550, 1655, 773, 551, 774, 554, 555,
	1656, 0, 556, 0, 557, 1657, 1658, 559, 560, 561,
	1659, 1660, 562, 563, 775, 1383, 564, 1384, 776, 565,
	566, 558, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 1661, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 779, 585, 780, 586, 587, 1662, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 781, 599, 600, 602, 601, 603, 1663, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 1664, 623, 624, 622, 625, 626, 1385,
	627, 628, 629, 630, 631, 782, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 1665, 653, 654, 652, 655, 656,
	657, 1666, 658, 783, 659, 639, 640, 660, 661, 1386,
	662, 663, 664, 665, 666, 667, 668, 784, 0, 669,
	1667, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 785, 679, 680, 681, 682, 786, 686, 687,
	688, 689, 1668, 690, 691, 0, 685, 676, 1669, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 1670, 700,
	787, 788, 789, 790, 1671, 712, 1672, 701, 703, 704,
	705, 706, 791, 707, 792, 1673, 708, 709, 710, 711,
	702, 713, 714, 1674, 1675, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 1676, 724, 1677, 0, 725, 726,
	727, 793, 794, 795, 1678, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 1679, 1680, 1681,
	1682, 739, 740, 797, 741, 742, 743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4780, 324, 325,
	327, 326, 328, 329, 330, 331, 1604, 332, 333, 1605,
	1606, 1607, 0, 1608, 744, 1609, 1610, 1611, 334, 1612,
	335, 336, 337, 1370, 338, 339, 340, 341, 342, 343,
	344, 745, 746, 0, 345, 747, 346, 748, 1613, 749,
	347, 348, 349, 350, 351, 352, 353, 1614, 1615, 0,
	354, 750, 751, 752, 1616, 355, 356, 753, 1617, 1684,
	1618, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	1619, 366, 367, 368, 365, 369, 370, 1620, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 1621, 379, 380,
	381, 1371, 382, 383, 384, 1622, 1623, 1625, 1624, 1626,
	1627, 1628, 385, 386, 387, 388, 389, 0, 390, 392,
	754, 755, 1629, 395, 397, 391, 393, 1630, 396, 394,
	398, 399, 1631, 400, 401, 402, 1632, 1633, 403, 404,
	405, 1634, 406, 407, 408, 1635, 409, 410, 411, 1636,
	412, 413, 756, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 757, 758, 426, 1637, 319,
	1638, 0, 0, 0, 0, 427, 428, 429, 759, 0,
	0, 0, 430, 1639, 431, 432, 433, 1640, 434, 435,
	1641, 1372, 436, 437, 438, 760, 761, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 1642, 448, 762, 1643,
	763, 449, 1644, 450, 451, 452, 453, 454, 455, 456,
	764, 765, 766, 552, 1374, 457, 458, 459, 1645, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 1646, 321, 320, 322, 1373, 767, 469, 553, 470,
	768, 769, 1647, 770, 1648, 471, 472, 474, 1375, 771,
	1376, 473, 475, 476, 1377, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 1649, 485, 487, 486,
	1650, 489, 772, 488, 1378, 490, 491, 1379, 1651, 492,
	493, 494, 495, 496, 497, 500, 1652, 1653, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 1380, 527,
	528, 529, 530, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 1381, 545, 532, 1654,
	533, 323, 1382, 547, 548, 549, 550, 1655, 773, 551,
	774, 554, 555, 1656, 0, 556, 0, 557, 1657, 1658,
	559, 560, 561, 1659, 1660, 562, 563, 775, 1383, 564,
	1384, 776, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 1661, 577, 578, 777, 579,
	580, 581, 778, 582, 583, 584, 779, 585, 780, 586,
	587, 1662, 588, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 781, 599, 600, 602, 601, 603,
	1663, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 609, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 1664, 623, 624, 622,
	625, 626, 1385, 627, 628, 629, 630, 631, 782, 632,
	0, 633, 634, 642, 643, 644, 635, 636, 638, 645,
	637, 646, 647, 648, 649, 651, 650, 1665, 653, 654,
	652, 655, 656, 657, 1666, 658, 783, 659, 639, 640,
	660, 661, 1386, 662, 663, 664, 665, 666, 667, 668,
	784, 0, 669, 1667, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 785, 679, 680, 681, 682,
	786, 686, 687, 688, 689, 1668, 690, 691, 0, 685,
	676, 1669, 692, 693, 694, 695, 696, 697, 0, 698,
	699, 1670, 700, 787, 788, 789, 790, 1671, 712, 1672,
	701, 703, 704, 705, 706, 791, 707, 792, 1673, 708,
	709, 710, 711, 702, 713, 714, 1674, 1675, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 1676, 724, 1677,
	0, 725, 726, 727, 793, 794, 795, 1678, 729, 730,
	728, 731, 732, 735, 733, 734, 796, 736, 737, 738,
	1679, 1680, 1681, 1682, 739, 740, 797, 741, 742, 743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4778, 324, 325, 327, 326, 328, 329, 330, 331, 1604,
	332, 333, 1605, 1606, 1607, 0, 1608, 744, 1609, 1610,
	1611, 334, 1612, 335, 336, 337, 1370, 338, 339, 340,
	341, 342, 343, 344, 745, 746, 0, 345, 747, 346,
	748, 1613, 749, 347, 348, 349, 350, 351, 352, 353,
	1614, 1615, 0, 354, 750, 751, 752, 1616, 355, 356,
	753, 1617, 1684, 1618, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 1619, 366, 367, 368, 365, 369, 370,
	1620, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	1621, 379, 380, 381, 1371, 382, 383, 384, 1622, 1623,
	1625, 1624, 1626, 1627, 1628, 385, 386, 387, 388, 389,
	0, 390, 392, 754, 755, 1629, 395, 397, 391, 393,
	1630, 396, 394, 398, 399, 1631, 400, 401, 402, 1632,
	1633, 403, 404, 405, 1634, 406, 407, 408, 1635, 409,
	410, 411, 1636, 412, 413, 756, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 757, 758,
	426, 1637, 319, 1638, 0, 0, 0, 0, 427, 428,
	429, 759, 0, 0, 0, 430, 1639, 431, 432, 433,
	1640, 434, 435, 1641, 1372, 436, 437, 438, 760, 761,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 1642,
	448, 762, 1643, 763, 449, 1644, 450, 451, 452, 453,
	454, 455, 456, 764, 765, 766, 552, 1374, 457, 458,
	459, 1645, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 1646, 321, 320, 322, 1373, 767,
	469, 553, 470, 768, 769, 1647, 770, 1648, 471, 472,
	474, 1375, 771, 1376, 473, 475, 476, 1377, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 1649,
	485, 487, 486, 1650, 489, 772, 488, 1378, 490, 491,
	1379, 1651, 492, 493, 494, 495, 496, 497, 500, 1652,
	1653, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 1380, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 1381,
	545, 532, 1654, 533, 323, 1382, 547, 548, 549, 550,
	1655, 773, 551, 774, 554, 555, 1656, 0, 556, 0,
	557, 1657, 1658, 559, 560, 561, 1659, 1660, 562, 563,
	775, 1383, 564, 1384, 776, 565, 566, 558, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 1661, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 779,
	585, 780, 586, 587, 1662, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 781, 599, 600,
	602, 601, 603, 1663, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 1664,
	623, 624, 622, 625, 626, 1385, 627, 628, 629, 630,
	631, 782, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	1665, 653, 654, 652, 655, 656, 657, 1666, 658, 783,
	659, 639, 640, 660, 661, 1386, 662, 663, 664, 665,
	666, 667, 668, 784, 0, 669, 1667, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 785, 679,
	680, 681, 682, 786, 686, 687, 688, 689, 1668, 690,
	691, 0, 685, 676, 1669, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 1670, 700, 787, 788, 789, 790,
	1671, 712, 1672, 701, 703, 704, 705, 706, 791, 707,
	792, 1673, 708, 709, 710, 711, 702, 713, 714, 1674,
	1675, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	1676, 724, 1677, 0, 725, 726, 727, 793, 794, 795,
	1678, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 1679, 1680, 1681, 1682, 739, 740, 797,
	741, 742, 743, 0, 0, 0, 0, 0, 0, 0,
	0, 1598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5045, 324, 325,
	327, 326, 328, 329, 330, 331, 1604, 332, 333, 1605,
	1606, 1607, 0, 1608, 744, 1609, 1610, 1611, 334, 1612,
	335, 336, 337, 1370, 338, 339, 340, 341, 342, 343,
	344, 745, 746, 0, 345, 747, 346, 748, 1613, 749,
	347, 348, 349, 350, 351, 352, 353, 1614, 1615, 0,
	354, 750, 751, 752, 1616, 355, 356, 753, 1617, 1684,
	1618, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	1619, 366, 367, 368, 365, 369, 370, 1620, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 1621, 379, 380,
	381, 1371, 382, 383, 384, 1622, 1623, 1625, 1624, 1626,
	1627, 1628, 385, 386, 387, 388, 389, 0, 390, 392,
	754, 755, 1629, 395, 397, 391, 393, 1630, 396, 394,
	398, 399, 1631, 400, 401, 402, 1632, 1633, 403, 404,
	405, 1634, 406, 407, 408, 1635, 409, 410, 411, 1636,
	412, 413, 756, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 757, 758, 426, 1637, 319,
	1638, 0, 0, 0, 0, 427, 428, 429, 759, 0,
	0, 0, 430, 1639, 431, 432, 433, 1640, 434, 435,
	1641, 1372, 436, 437, 438, 760, 761, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 1642, 448, 762, 1643,
	763, 449, 1644, 450, 451, 452, 453, 454, 455, 456,
	764, 765, 766, 552, 1374, 457, 458, 459, 1645, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 1646, 321, 320, 322, 1373, 767, 469, 553, 470,
	768, 769, 1647, 770, 1648, 471, 472, 474, 1375, 771,
	1376, 473, 475, 476, 1377, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 1649, 485, 487, 486,
	1650, 489, 772, 488, 1378, 490, 491, 1379, 1651, 492,
	493, 494, 495, 496, 497, 500, 1652, 1653, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 1380, 527,
	528, 529, 530, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 1381, 545, 532, 1654,
	533, 323, 1382, 547, 548, 549, 550, 1655, 773, 551,
	774, 554, 555, 1656, 0, 556, 0, 557, 1657, 1658,
	559, 560, 561, 1659, 1660, 562, 563, 775, 1383, 564,
	1384, 776, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 1661, 577, 578, 777, 579,
	580, 581, 778, 582, 583, 584, 779, 585, 780, 586,
	587, 1662, 588, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 781, 599, 600, 602, 601, 603,
	1663, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 609, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 1664, 623, 624, 622,
	625, 626, 1385, 627, 628, 629, 630, 631, 782, 632,
	0, 633, 634, 642, 643, 644, 635, 636, 638, 645,
	637, 646, 647, 648, 649, 651, 650, 1665, 653, 654,
	652, 655, 656, 657, 1666, 658, 783, 659, 639, 640,
	660, 661, 1386, 662, 663, 664, 665, 666, 667, 668,
	784, 0, 669, 1667, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 785, 679, 680, 681, 682,
	786, 686, 687, 688, 689, 1668, 690, 691, 0, 685,
	676, 1669, 692, 693, 694, 695, 696, 697, 0, 698,
	699, 1670, 700, 787, 788, 789, 790, 1671, 712, 1672,
	701, 703, 704, 705, 706, 791, 707, 792, 1673, 708,
	709, 710, 711, 702, 713, 714, 1674, 1675, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 1676, 724, 1677,
	0, 725, 726, 727, 793, 794, 795, 1678, 729, 730,
	728, 731, 732, 735, 733, 734, 796, 736, 737, 738,
	1679, 1680, 1681, 1682, 739, 740, 797, 741, 742, 743,
	0, 0, 0, 0, 0, 0, 0, 0, 1598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4890, 324, 325, 327, 326, 328,
	329, 330, 331, 1604, 332, 333, 1605, 1606, 1607, 0,
	1608, 744, 1609, 1610, 1611, 334, 1612, 335, 336, 337,
	1370, 338, 339, 340, 341, 342, 343, 344, 745, 746,
	0, 345, 747, 346, 748, 1613, 749, 347, 348, 349,
	350, 351, 352, 353, 1614, 1615, 0, 354, 750, 751,
	752, 1616, 355, 356, 753, 1617, 1684, 1618, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 1619, 366, 367,
	368, 365, 369, 370, 1620, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 1621, 379, 380, 381, 1371, 382,
	383, 384, 1622, 1623, 1625, 1624, 1626, 1627, 1628, 385,
	386, 387, 388, 389, 0, 390, 392, 754, 755, 1629,
	395, 397, 391, 393, 1630, 396, 394, 398, 399, 1631,
	400, 401, 402, 1632, 1633, 403, 404, 405, 1634, 406,
	407, 408, 1635, 409, 410, 411, 1636, 412, 413, 756,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 757, 758, 426, 1637, 319, 1638, 0, 0,
	0, 0, 427, 428, 429, 759, 0, 0, 0, 430,
	1639, 431, 432, 433, 1640, 434, 435, 1641, 1372, 436,
	437, 438, 760, 761, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 1642, 448, 762, 1643, 763, 449, 1644,
	450, 451, 452, 453, 454, 455, 456, 764, 765, 766,
	552, 1374, 457, 458, 459, 1645, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 1646, 321,
	320, 322, 1373, 767, 469, 553, 470, 768, 769, 1647,
	770, 1648, 471, 472, 474, 1375, 771, 1376, 473, 475,
	476, 1377, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 1649, 485, 487, 486, 1650, 489, 772,
	488, 1378, 490, 491, 1379, 1651, 492, 493, 494, 495,
	496, 497, 500, 1652, 1653, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 1380, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 1381, 545, 532, 1654, 533, 323, 1382,
	547, 548, 549, 550, 1655, 773, 551, 774, 554, 555,
	1656, 0, 556, 0, 557, 1657, 1658, 559, 560, 561,
	1659, 1660, 562, 563, 775, 1383, 564, 1384, 776, 565,
	566, 558, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 1661, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 779, 585, 780, 586, 587, 1662, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 781, 599, 600, 602, 601, 603, 1663, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 1664, 623, 624, 622, 625, 626, 1385,
	627, 628, 629, 630, 631, 782, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 1665, 653, 654, 652, 655, 656,
	657, 1666, 658, 783, 659, 639, 640, 660, 661, 1386,
	662, 663, 664, 665, 666, 667, 668, 784, 0, 669,
	1667, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 785, 679, 680, 681, 682, 786, 686, 687,
	688, 689, 1668, 690, 691, 0, 685, 676, 1669, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 1670, 700,
	787, 788, 789, 790, 1671, 712, 1672, 701, 703, 704,
	705, 706, 791, 707, 792, 1673, 708, 709, 710, 711,
	702, 713, 714, 1674, 1675, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 1676, 724, 1677, 0, 725, 726,
	727, 793, 794, 795, 1678, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 1679, 1680, 1681,
	1682, 739, 740, 797, 741, 742, 743, 0, 0, 0,
	0, 0, 0, 0, 0, 1598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4704, 324, 325, 327, 326, 328, 329, 330, 331,
	1604, 332, 333, 1605, 1606, 1607, 0, 1608, 744, 1609,
	1610, 1611, 334, 1612, 335, 336, 337, 1370, 338, 339,
	340, 341, 342, 343, 344, 745, 746, 0, 345, 747,
	346, 748, 1613, 749, 347, 348, 349, 350, 351, 352,
	353, 1614, 1615, 0, 354, 750, 751, 752, 1616, 355,
	356, 753, 1617, 1684, 1618, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 1619, 366, 367, 368, 365, 369,
	370, 1620, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 1621, 379, 380, 381, 1371, 382, 383, 384, 1622,
	1623, 1625, 1624, 1626, 1627, 1628, 385, 386, 387, 388,
	389, 0, 390, 392, 754, 755, 1629, 395, 397, 391,
	393, 1630, 396, 394, 398, 399, 1631, 400, 401, 402,
	1632, 1633, 403, 404, 405, 1634, 406, 407, 408, 1635,
	409, 410, 411, 1636, 412, 413, 756, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 757,
	758, 426, 1637, 319, 1638, 0, 0, 0, 0, 427,
	428, 429, 759, 0, 0, 0, 430, 1639, 431, 432,
	433, 1640, 434, 435, 1641, 1372, 436, 437, 438, 760,
	761, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	1642, 448, 762, 1643, 763, 449, 1644, 450, 451, 452,
	453, 454, 455, 456, 764, 765, 766, 552, 1374, 457,
	458, 459, 1645, 460, 461, 462, 463, 464, 0, 0,
	0, 465, 466, 467, 468, 1646, 321, 320, 322, 1373,
	767, 469, 553, 470, 768, 769, 1647, 770, 1648, 471,
	472, 474, 1375, 771, 1376, 473, 475, 476, 1377, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	1649, 485, 487, 486, 1650, 489, 772, 488, 1378, 490,
	491, 1379, 1651, 492, 493, 494, 495, 496, 497, 500,
	1652, 1653, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 1380, 527, 528, 529, 530, 531, 539, 541,
	542, 537, 538, 540, 543, 544, 546, 534, 535, 536,
	1381, 545, 532, 1654, 533, 323, 1382, 547, 548, 549,
	550, 1655, 773, 551, 774, 554, 555, 1656, 0, 556,
	0, 557, 1657, 1658, 559, 560, 561, 1659, 1660, 562,
	563, 775, 1383, 564, 1384, 776, 565, 566, 558, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 1661,
	577, 578, 777, 579, 580, 581, 778, 582, 583, 584,
	779, 585, 780, 586, 587, 1662, 588, 589, 590, 0,
	591, 592, 593, 594, 595, 596, 597, 598, 781, 599,
	600, 602, 601, 603, 1663, 604, 0, 605, 606, 607,
	0, 0, 0, 0, 0, 608, 609, 611, 0, 612,
	613, 614, 615, 610, 616, 617, 618, 619, 620, 621,
	1664, 623, 624, 622, 625, 626, 1385, 627, 628, 629,
	630, 631, 782, 632, 0, 633, 634, 642, 643, 644,
	635, 636, 638, 645, 637, 646, 647, 648, 649, 651,
	650, 1665, 653, 654, 652, 655, 656, 657, 1666, 658,
	783, 659, 639, 640, 660, 661, 1386, 662, 663, 664,
	665, 666, 667, 668, 784, 0, 669, 1667, 670, 671,
	672, 673, 674, 675, 677, 641, 678, 683, 684, 785,
	679, 680, 681, 682, 786, 686, 687, 688, 689, 1668,
	690, 691, 0, 685, 676, 1669, 692, 693, 694, 695,
	696, 697, 0, 698, 699, 1670, 700, 787, 788, 789,
	790, 1671, 712, 1672, 701, 703, 704, 705, 706, 791,
	707, 792, 1673, 708, 709, 710, 711, 702, 713, 714,
	1674, 1675, 715, 716, 717, 719, 721, 722, 718, 720,
	723, 1676, 724, 1677, 0, 725, 726, 727, 793, 794,
	795, 1678, 729, 730, 728, 731, 732, 735, 733, 734,
	796, 736, 737, 738, 1679, 1680, 1681, 1682, 739, 740,
	797, 741, 742, 743, 0, 0, 0, 0, 0, 0,
	0, 0, 1598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4328, 324,
	325, 327, 326, 328, 329, 330, 331, 1604, 332, 333,
	1605, 1606, 1607, 0, 1608, 744, 1609, 1610, 1611, 334,
	1612, 335, 336, 337, 1370, 338, 339, 340, 341, 342,
	343, 344, 745, 746, 0, 345, 747, 346, 748, 1613,
	749, 347, 348, 349, 350, 351, 352, 353, 1614, 1615,
	0, 354, 750, 751, 752, 1616, 355, 356, 753, 1617,
	1684, 1618, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 1619, 366, 367, 368, 365, 369, 370, 1620, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 1621, 379,
	380, 381, 1371, 382, 383, 384, 1622, 1623, 1625, 1624,
	1626, 1627, 1628, 385, 386, 387, 388, 389, 0, 390,
	392, 754, 755, 1629, 395, 397, 391, 393, 1630, 396,
	394, 398, 399, 1631, 400, 401, 402, 1632, 1633, 403,
	404, 405, 1634, 406, 407, 408, 1635, 409, 410, 411,
	1636, 412, 413, 756, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 757, 758, 426, 1637,
	319, 1638, 0, 0, 0, 0, 427, 428, 429, 759,
	0, 0, 0, 430, 1639, 431, 432, 433, 1640, 434,
	435, 1641, 1372, 436, 437, 438, 760, 761, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 1642, 448, 762,
	1643, 763, 449, 1644, 450, 451, 452, 453, 454, 455,
	456, 764, 765, 766, 552, 1374, 457, 458, 459, 1645,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 1646, 321, 320, 322, 1373, 767, 469, 553,
	470, 768, 769, 1647, 770, 1648, 471, 472, 474, 1375,
	771, 1376, 473, 475, 476, 1377, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 1649, 485, 487,
	486, 1650, 489, 772, 488, 1378, 490, 491, 1379, 1651,
	492, 493, 494, 495, 496, 497, 500, 1652, 1653, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1380,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 1381, 545, 532,
	1654, 533, 323, 1382, 547, 548, 549, 550, 1655, 773,
	551, 774, 554, 555, 1656, 0, 556, 0, 557, 1657,
	1658, 559, 560, 561, 1659, 1660, 562, 563, 775, 1383,
	564, 1384, 776, 565, 566, 558, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 1661, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 779, 585, 780,
	586, 587, 1662, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 781, 599, 600, 602, 601,
	603, 1663, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 1664, 623, 624,
	622, 625, 626, 1385, 627, 628, 629, 630, 631, 782,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 1665, 653,
	654, 652, 655, 656, 657, 1666, 658, 783, 659, 639,
	640, 660, 661, 1386, 662, 663, 664, 665, 666, 667,
	668, 784, 0, 669, 1667, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 785, 679, 680, 681,
	682, 786, 686, 687, 688, 689, 1668, 690, 691, 0,
	685, 676, 1669, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 1670, 700, 787, 788, 789, 790, 1671, 712,
	1672, 701, 703, 704, 705, 706, 791, 707, 792, 1673,
	708, 709, 710, 711, 702, 713, 714, 1674, 1675, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 1676, 724,
	1677, 0, 725, 726, 727, 793, 794, 795, 1678, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 1679, 1680, 1681, 1682, 739, 740, 797, 741, 742,
	743, 0, 0, 0, 0, 0, 0, 0, 0, 1598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4128, 324, 325, 327, 326,
	328, 329, 330, 331, 1604, 332, 333, 1605, 1606, 1607,
	0, 1608, 744, 1609, 1610, 1611, 334, 1612, 335, 336,
	337, 1370, 338, 339, 340, 341, 342, 343, 344, 745,
	746, 0, 345, 747, 346, 748, 1613, 749, 347, 348,
	349, 350, 351, 352, 353, 1614, 1615, 0, 354, 750,
	751, 752, 1616, 355, 356, 753, 1617, 1684, 1618, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 1619, 366,
	367, 368, 365, 369, 370, 1620, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 1621, 379, 380, 381, 1371,
	382, 383, 384, 1622, 1623, 1625, 1624, 1626, 1627, 1628,
	385, 386, 387, 388, 389, 0, 390, 392, 754, 755,
	1629, 395, 397, 391, 393, 1630, 396, 394, 398, 399,
	1631, 400, 401, 402, 1632, 1633, 403, 404, 405, 1634,
	406, 407, 408, 1635, 409, 410, 411, 1636, 412, 413,
	756, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 757, 758, 426, 1637, 319, 1638, 0,
	0, 0, 0, 427, 428, 429, 759, 0, 0, 0,
	430, 1639, 431, 432, 433, 1640, 434, 435, 1641, 1372,
	436, 437, 438, 760, 761, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 1642, 448, 762, 1643, 763, 449,
	1644, 450, 451, 452, 453, 454, 455, 456, 764, 765,
	766, 552, 1374, 457, 458, 459, 1645, 460, 461, 462,
	463, 464, 0, 0, 0, 465, 466, 467, 468, 1646,
	321, 320, 322, 1373, 767, 469, 553, 470, 768, 769,
	1647, 770, 1648, 471, 472, 474, 1375, 771, 1376, 473,
	475, 476, 1377, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 1649, 485, 487, 486, 1650, 489,
	772, 488, 1378, 490, 491, 1379, 1651, 492, 493, 494,
	495, 496, 497, 500, 1652, 1653, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 1380, 527, 528, 529,
	530, 531, 539, 541, 542, 537, 538, 540, 543, 544,
	546, 534, 535, 536, 1381, 545, 532, 1654, 533, 323,
	1382, 547, 548, 549, 550, 1655, 773, 551, 774, 554,
	555, 1656, 0, 556, 0, 557, 1657, 1658, 559, 560,
	561, 1659, 1660, 562, 563, 775, 1383, 564, 1384, 776,
	565, 566, 558, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 1661, 577, 578, 777, 579, 580, 581,
	778, 582, 583, 584, 779, 585, 780, 586, 587, 1662,
	588, 589, 590, 0, 591, 592, 593, 594, 595, 596,
	597, 598, 781, 599, 600, 602, 601, 603, 1663, 604,
	0, 605, 606, 607, 0, 0, 0, 0, 0, 608,
	609, 611, 0, 612, 613, 614, 615, 610, 616, 617,
	618, 619, 620, 621, 1664, 623, 624, 622, 625, 626,
	1385, 627, 628, 629, 630, 631, 782, 632, 0, 633,
	634, 642, 643, 644, 635, 636, 638, 645, 637, 646,
	647, 648, 649, 651, 650, 1665, 653, 654, 652, 655,
	656, 657, 1666, 658, 783, 659, 639, 640, 660, 661,
	1386, 662, 663, 664, 665, 666, 667, 668, 784, 0,
	669, 1667, 670, 671, 672, 673, 674, 675, 677, 641,
	678, 683, 684, 785, 679, 680, 681, 682, 786, 686,
	687, 688, 689, 1668, 690, 691, 0, 685, 676, 1669,
	692, 693, 694, 695, 696, 697, 0, 698, 699, 1670,
	700, 787, 788, 789, 790, 1671, 712, 1672, 701, 703,
	704, 705, 706, 791, 707, 792, 1673, 708, 709, 710,
	711, 702, 713, 714, 1674, 1675, 715, 716, 717, 719,
	721, 722, 718, 720, 723, 1676, 724, 1677, 0, 725,
	726, 727, 793, 794, 795, 1678, 729, 730, 728, 731,
	732, 735, 733, 734, 796, 736, 737, 738, 1679, 1680,
	1681, 1682, 739, 740, 797, 741, 742, 743, 0, 0,
	0, 0, 0, 0, 0, 0, 1598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2973, 324, 325, 327, 326, 328, 329, 330,
	331, 1604, 332, 333, 1605, 1606, 1607, 0, 1608, 744,
	1609, 1610, 1611, 334, 1612, 335, 336, 337, 1370, 338,
	339, 340, 341, 342, 343, 344, 745, 746, 0, 345,
	747, 346, 748, 1613, 749, 347, 348, 349, 350, 351,
	352, 353, 1614, 1615, 0, 354, 750, 751, 752, 1616,
	355, 356, 753, 1617, 1684, 1618, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 1619, 366, 367, 368, 365,
	369, 370, 1620, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 1621, 379, 380, 381, 1371, 382, 383, 384,
	1622, 1623, 1625, 1624, 1626, 1627, 1628, 385, 386, 387,
	388, 389, 0, 390, 392, 754, 755, 1629, 395, 397,
	391, 393, 1630, 396, 394, 398, 399, 1631, 400, 401,
	402, 1632, 1633, 403, 404, 405, 1634, 406, 407, 408,
	1635, 409, 410, 411, 1636, 412, 413, 756, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	757, 758, 426, 1637, 319, 1638, 0, 0, 0, 0,
	427, 428, 429, 759, 0, 0, 0, 430, 1639, 431,
	432, 433, 1640, 434, 435, 1641, 1372, 436, 437, 438,
	760, 761, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 1642, 448, 762, 1643, 763, 449, 1644, 450, 451,
	452, 453, 454, 455, 456, 764, 765, 766, 552, 1374,
	457, 458, 459, 1645, 460, 461, 462, 463, 464, 0,
	0, 0, 465, 466, 467, 468, 1646, 321, 320, 322,
	1373, 767, 469, 553, 470, 768, 769, 1647, 770, 1648,
	471, 472, 474, 1375, 771, 1376, 473, 475, 476, 1377,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 1649, 485, 487, 486, 1650, 489, 772, 488, 1378,
	490, 491, 1379, 1651, 492, 493, 494, 495, 496, 497,
	500, 1652, 1653, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1380, 527, 528, 529, 530, 531, 539,
	541, 542, 537, 538, 540, 543, 544, 546, 534, 535,
	536, 1381, 545, 532, 1654, 533, 323, 1382, 547, 548,
	549, 550, 1655, 773, 551, 774, 554, 555, 1656, 0,
	556, 0, 557, 1657, 1658, 559, 560, 561, 1659, 1660,
	562, 563, 775, 1383, 564, 1384, 776, 565, 566, 558,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	1661, 577, 578, 777, 579, 580, 581, 778, 582, 583,
	584, 779, 585, 780, 586, 587, 1662, 588, 589, 590,
	0, 591, 592, 593, 594, 595, 596, 597, 598, 781,
	599, 600, 602, 601, 603, 1663, 604, 0, 605, 606,
	607, 0, 0, 0, 0, 0, 608, 609, 611, 0,
	612, 613, 614, 615, 610, 616, 617, 618, 619, 620,
	621, 1664, 623, 624, 622, 625, 626, 1385, 627, 628,
	629, 630, 631, 782, 632, 0, 633, 634, 642, 643,
	644, 635, 636, 638, 645, 637, 646, 647, 648, 649,
	651, 650, 1665, 653, 654, 652, 655, 656, 657, 1666,
	658, 783, 659, 639, 640, 660, 661, 1386, 662, 663,
	664, 665, 666, 667, 668, 784, 0, 669, 1667, 670,
	671, 672, 673, 674, 675, 677, 641, 678, 683, 684,
	785, 679, 680, 681, 682, 786, 686, 687, 688, 689,
	1668, 690, 691, 0, 685, 676, 1669, 692, 693, 694,
	695, 696, 697, 0, 698, 699, 1670, 700, 787, 788,
	789, 790, 1671, 712, 1672, 701, 703, 704, 705, 706,
	791, 707, 792, 1673, 708, 709, 710, 711, 702, 713,
	714, 1674, 1675, 715, 716, 717, 719, 721, 722, 718,
	720, 723, 1676, 724, 1677, 0, 725, 726, 727, 793,
	794, 795, 1678, 729, 730, 728, 731, 732, 735, 733,
	734, 796, 736, 737, 738, 1679, 1680, 1681, 1682, 739,
	740, 797, 741, 742, 743, 0, 0, 0, 0, 0,
	0, 1595, 0, 1598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2577,
	324, 325, 327, 326, 328, 329, 330, 331, 1604, 332,
	333, 1605, 1606, 1607, 0, 1608, 744, 1609, 1610, 1611,
	334, 1612, 335, 336, 337, 1370, 338, 339, 340, 341,
	342, 343, 344, 745, 746, 0, 345, 747, 346, 748,
	1613, 749, 347, 348, 349, 350, 351, 352, 353, 1614,
	1615, 0, 354, 750, 751, 752, 1616, 355, 356, 753,
	1617, 1684, 1618, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 1619, 366, 367, 368, 365, 369, 370, 1620,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 1621,
	379, 380, 381, 1371, 382, 383, 384, 1622, 1623, 1625,
	1624, 1626, 1627, 1628, 385, 386, 387, 388, 389, 0,
	390, 392, 754, 755, 1629, 395, 397, 391, 393, 1630,
	396, 394, 398, 399, 1631, 400, 401, 402, 1632, 1633,
	403, 404, 405, 1634, 406, 407, 408, 1635, 409, 410,
	411, 1636, 412, 413, 756, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 757, 758, 426,
	1637, 319, 1638, 0, 0, 0, 0, 427, 428, 429,
	759, 0, 0, 0, 430, 1639, 431, 432, 433, 1640,
	434, 435, 1641, 1372, 436, 437, 438, 760, 761, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 1642, 448,
	762, 1643, 763, 449, 1644, 450, 451, 452, 453, 454,
	455, 456, 764, 765, 766, 552, 1374, 457, 458, 459,
	1645, 460, 461, 462, 463, 464, 0, 0, 0, 465,
	466, 467, 468, 1646, 321, 320, 322, 1373, 767, 469,
	553, 470, 768, 769, 1647, 770, 1648, 471, 472, 474,
	1375, 771, 1376, 473, 475, 476, 1377, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 1649, 485,
	487, 486, 1650, 489, 772, 488, 1378, 490, 491, 1379,
	1651, 492, 493, 494, 495, 496, 497, 500, 1652, 1653,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	1380, 527, 528, 529, 530, 531, 539, 541, 542, 537,
	538, 540, 543, 544, 546, 534, 535, 536, 1381, 545,
	532, 1654, 533, 323, 1382, 547, 548, 549, 550, 1655,
	773, 551, 774, 554, 555, 1656, 0, 556, 0, 557,
	1657, 1658, 559, 560, 561, 1659, 1660, 562, 563, 775,
	1383, 564, 1384, 776, 565, 566, 558, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 1661, 577, 578,
	777, 579, 580, 581, 778, 582, 583, 584, 779, 585,
	780, 586, 587, 1662, 588, 589, 590, 0, 591, 592,
	593, 594, 595, 596, 597, 598, 781, 599, 600, 602,
	601, 603, 1663, 604, 0, 605, 606, 607, 0, 0,
	0, 0, 0, 608, 609, 611, 0, 612, 613, 614,
	615, 610, 616, 617, 618, 619, 620, 621, 1664, 623,
	624, 622, 625, 626, 1385, 627, 628, 629, 630, 631,
	782, 632, 0, 633, 634, 642, 643, 644, 635, 636,
	638, 645, 637, 646, 647, 648, 649, 651, 650, 1665,
	653, 654, 652, 655, 656, 657, 1666, 658, 783, 659,
	639, 640, 660, 661, 1386, 662, 663, 664, 665, 666,
	667, 668, 784, 0, 669, 1667, 670, 671, 672, 673,
	674, 675, 677, 641, 678, 683, 684, 785, 679, 680,
	681, 682, 786, 686, 687, 688, 689, 1668, 690, 691,
	0, 685, 676, 1669, 692, 693, 694, 695, 696, 697,
	0, 698, 699, 1670, 700, 787, 788, 789, 790, 1671,
	712, 1672, 701, 703, 704, 705, 706, 791, 707, 792,
	1673, 708, 709, 710, 711, 702, 713, 714, 1674, 1675,
	715, 716, 717, 719, 721, 722, 718, 720, 723, 1676,
	724, 1677, 0, 725, 726, 727, 793, 794, 795, 1678,
	729, 730, 728, 731, 732, 735, 733, 734, 796, 736,
	737, 738, 1679, 1680, 1681, 1682, 739, 740, 797, 741,
	742, 743, 1598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 1604, 332, 333,
	1605, 1606, 1607, 0, 1608, 744, 1609, 1610, 1611, 334,
	1612, 335, 336, 337, 1370, 338, 339, 340, 341, 342,
	343, 344, 745, 746, 0, 345, 747, 346, 748, 1613,
	749, 347, 348, 349, 350, 351, 352, 353, 1614, 1615,
	0, 354, 750, 751, 752, 1616, 355, 356, 753, 1617,
	1684, 1618, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 1619, 366, 367, 368, 365, 369, 370, 1620, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 1621, 379,
	380, 381, 1371, 382, 383, 384, 1622, 1623, 1625, 1624,
	1626, 1627, 1628, 385, 386, 387, 388, 389, 0, 390,
	392, 754, 755, 1629, 395, 397, 391, 393, 1630, 396,
	394, 398, 399, 1631, 400, 401, 402, 1632, 1633, 403,
	404, 405, 1634, 406, 407, 408, 1635, 409, 410, 411,
	1636, 412, 413, 756, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 757, 758, 426, 1637,
	319, 1638, 0, 0, 0, 0, 427, 428, 429, 759,
	0, 0, 0, 430, 1639, 431, 432, 433, 1640, 434,
	435, 1641, 1372, 436, 437, 438, 760, 761, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 1642, 448, 762,
	1643, 763, 449, 1644, 450, 451, 452, 453, 454, 455,
	456, 764, 765, 766, 552, 1374, 457, 458, 459, 1645,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 1646, 321, 320, 322, 1373, 767, 469, 553,
	470, 768, 769, 1647, 770, 1648, 471, 472, 474, 1375,
	771, 1376, 473, 475, 476, 1377, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 1649, 485, 487,
	486, 1650, 489, 772, 488, 1378, 490, 491, 1379, 1651,
	492, 493, 494, 495, 496, 497, 500, 1652, 1653, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1380,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 1381, 545, 532,
	1654, 533, 323, 1382, 547, 548, 549, 550, 1655, 773,
	551, 774, 554, 555, 1656, 0, 556, 0, 557, 1657,
	1658, 559, 560, 561, 1659, 1660, 562, 563, 775, 1383,
	564, 1384, 776, 565, 566, 558, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 1661, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 779, 585, 780,
	586, 587, 1662, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 781, 599, 600, 602, 601,
	603, 1663, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 1664, 623, 624,
	622, 625, 626, 1385, 627, 628, 629, 630, 631, 782,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 1665, 653,
	654, 652, 655, 656, 657, 1666, 658, 783, 659, 639,
	640, 660, 661, 1386, 662, 663, 664, 665, 666, 667,
	668, 784, 0, 669, 1667, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 785, 679, 680, 681,
	682, 786, 686, 687, 688, 689, 1668, 690, 691, 0,
	685, 676, 1669, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 1670, 700, 787, 788, 789, 790, 1671, 712,
	1672, 701, 703, 704, 705, 706, 791, 707, 792, 1673,
	708, 709, 710, 711, 702, 713, 714, 1674, 1675, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 1676, 724,
	1677, 0, 725, 726, 727, 793, 794, 795, 1678, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 1679, 1680, 1681, 1682, 739, 740, 797, 741, 742,
	743, 2948, 0, 1304, 1276, 1277, 1278, 1274, 1275, 1287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 2945, 332,
	333, 0, 0, 0, 0, 0, 1330, 1292, 0, 0,
	334, 0, 335, 336, 337, 1370, 338, 339, 340, 341,
	342, 343, 344, 745, 1343, 0, 345, 1350, 346, 1349,
	0, 1360, 347, 348, 349, 350, 351, 352, 353, 1294,
	1329, 1258, 354, 1390, 1391, 752, 0, 355, 356, 1336,
	0, 1317, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 1371, 382, 383, 384, 1320, 1318, 1319,
	1326, 1322, 1321, 1325, 385, 386, 387, 388, 389, 1353,
	390, 392, 1347, 1346, 1263, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 2946, 0,
	403, 1338, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 1269, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 1361, 1362, 426,
	1283, 319, 0, 0, 0, 0, 0, 427, 428, 429,
	1345, 0, 0, 0, 430, 0, 431, 432, 433, 0,
	434, 435, 0, 1372, 436, 437, 438, 1358, 1359, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	1368, 0, 1293, 449, 0, 450, 451, 452, 453, 454,
	455, 456, 1331, 1332, 1335, 552, 1374, 457, 458, 459,
	0, 460, 461, 462, 463, 464, 0, 0, 0, 465,
	466, 467, 468, 0, 1273, 320, 322, 1373, 767, 469,
	553, 470, 1340, 1341, 0, 1299, 0, 471, 472, 474,
	1375, 1333, 1376, 473, 475, 476, 1377, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 1369, 488, 1378, 490, 491, 1379,
	0, 492, 493, 494, 495, 496, 497, 500, 1324, 1323,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	1380, 527, 528, 529, 530, 531, 539, 541, 542, 537,
	538, 540, 543, 544, 546, 534, 535, 536, 1381, 545,
	532, 1260, 533, 323, 1382, 547, 548, 549, 550, 1284,
	1334, 551, 1348, 554, 555, 0, 0, 556, 0, 557,
	0, 0, 559, 560, 561, 0, 0, 562, 563, 775,
	1383, 564, 1384, 1363, 565, 566, 1270, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 0, 577, 578,
	777, 579, 580, 581, 778, 582, 583, 584, 1364, 585,
	780, 586, 587, 0, 588, 589, 590, 0, 591, 592,
	593, 594, 595, 596, 597, 598, 1344, 599, 600, 602,
	601, 603, 0, 604, 0, 605, 606, 607, 0, 0,
	0, 0, 0, 608, 609, 611, 0, 612, 613, 614,
	615, 610, 616, 617, 618, 619, 620, 621, 0, 623,
	624, 622, 625, 626, 1385, 627, 628, 629, 630, 631,
	1271, 632, 0, 633, 634, 642, 643, 644, 635, 636,
	638, 645, 637, 646, 647, 648, 649, 651, 650, 0,
	653, 654, 652, 655, 656, 657, 1327, 658, 783, 659,
	639, 640, 660, 661, 1386, 662, 663, 664, 665, 666,
	667, 668, 1342, 0, 669, 0, 670, 671, 672, 673,
	674, 675, 677, 641, 678, 683, 684, 1389, 679, 680,
	681, 682, 1365, 686, 687, 688, 689, 0, 690, 691,
	1257, 685, 676, 0, 692, 693, 694, 695, 696, 697,
	0, 698, 699, 0, 700, 1354, 1355, 1356, 1357, 0,
	712, 0, 701, 703, 704, 705, 706, 1366, 707, 1367,
	1282, 708, 709, 710, 711, 702, 713, 714, 0, 1264,
	715, 716, 717, 719, 721, 722, 718, 720, 723, 1328,
	724, 0, 0, 725, 726, 727, 793, 1351, 1388, 2944,
	729, 730, 728, 731, 732, 735, 733, 734, 796, 736,
	737, 738, 0, 0, 0, 0, 739, 740, 797, 741,
	742, 743, 1261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1256, 0, 0,
	0, 0, 0, 0, 1254, 1255, 2947, 0, 0, 0,
	0, 0, 0, 0, 1288, 2943, 0, 1245, 1286, 1304,
	1276, 1277, 1278, 1274, 1275, 1287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 1330, 1292, 0, 0, 334, 0, 335, 336,
	337, 1370, 338, 339, 340, 341, 342, 343, 344, 745,
	1343, 0, 345, 1350, 346, 1349, 0, 1360, 347, 348,
	349, 350, 351, 352, 353, 1294, 1329, 1258, 354, 1390,
	1391, 752, 0, 355, 356, 1336, 0, 1317, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 1371,
	382, 383, 384, 1320, 1318, 1319, 1326, 1322, 1321, 1325,
	385, 386, 387, 388, 389, 1353, 390, 392, 1347, 1346,
	1263, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 1338, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	1269, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 1361, 1362, 426, 1283, 319, 0, 0,
	0, 0, 0, 427, 428, 429, 1345, 0, 0, 0,
	430, 0, 431, 432, 433, 0, 434, 435, 0, 1372,
	436, 437, 438, 1358, 1359, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 1368, 0, 1293, 449,
	0, 450, 451, 452, 453, 454, 455, 456, 1331, 1332,
	1335, 552, 1374, 457, 458, 459, 0, 460, 461, 462,
	463, 464, 0, 0, 0, 465, 466, 467, 468, 0,
	1273, 320, 322, 1373, 767, 469, 553, 470, 1340, 1341,
	0, 1299, 0, 471, 472, 474, 1375, 1333, 1376, 473,
	475, 476, 1377, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	1369, 488, 1378, 490, 491, 1379, 0, 492, 493, 494,
	495, 496, 497, 500, 1324, 1323, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 1380, 527, 528, 529,
	530, 531, 539, 541, 542, 537, 538, 540, 543, 544,
	546, 534, 535, 536, 1381, 545, 532, 1260, 533, 323,
	1382, 547, 548, 549, 550, 1284, 1334, 551, 1348, 554,
	555, 0, 0, 556, 0, 557, 0, 0, 559, 560,
	561, 0, 0, 562, 563, 775, 1383, 564, 1384, 1363,
	565, 566, 1270, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 0, 577, 578, 777, 579, 580, 581,
	778, 582, 583, 584, 1364, 585, 780, 586, 587, 0,
	588, 589, 590, 0, 591, 592, 593, 594, 595, 596,
	597, 598, 1344, 599, 600, 602, 601, 603, 0, 604,
	0, 605, 606, 607, 0, 0, 0, 0, 0, 608,
	609, 611, 0, 612, 613, 614, 615, 610, 616, 617,
	618, 619, 620, 621, 0, 623, 624, 622, 625, 626,
	1385, 627, 628, 629, 630, 631, 1271, 632, 0, 633,
	634, 642, 643, 644, 635, 636, 638, 645, 637, 646,
	647, 648, 649, 651, 650, 275, 653, 654, 652, 655,
	656, 657, 1327, 658, 783, 659, 639, 640, 660, 661,
	1386, 662, 663, 664, 665, 666, 667, 668, 1342, 0,
	669, 0, 670, 671, 672, 673, 674, 675, 677, 641,
	678, 683, 684, 1389, 679, 680, 681, 682, 1365, 686,
	687, 688, 689, 0, 690, 691, 1257, 685, 676, 277,
	692, 693, 694, 695, 696, 697, 0, 698, 699, 0,
	700, 1354, 1355, 1356, 1357, 0, 712, 0, 701, 703,
	704, 705, 706, 1366, 707, 1367, 1282, 708, 709, 710,
	711, 702, 713, 714, 0, 1264, 715, 716, 717, 719,
	721, 722, 718, 720, 723, 1328, 724, 0, 0, 725,
	726, 727, 1848, 1351, 1388, 0, 729, 730, 728, 731,
	732, 735, 733, 734, 796, 736, 737, 738, 0, 0,
	0, 269, 739, 740, 797, 741, 742, 743, 1261, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1256, 0, 0, 0, 0, 0, 0,
	1254, 1255, 1304, 1276, 1277, 1278, 1274, 1275, 1287, 0,
	2124, 2122, 0, 0, 1286, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 0, 1330, 1292, 0, 0, 334,
	0, 335, 336, 337, 1370, 338, 339, 340, 341, 342,
	343, 344, 745, 1343, 0, 345, 1350, 346, 1349, 0,
	1360, 347, 348, 349, 350, 351, 352, 353, 1294, 1329,
	1258, 354, 1390, 1391, 752, 0, 355, 356, 1336, 0,
	1317, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1371, 382, 383, 384, 1320, 1318, 1319, 1326,
	1322, 1321, 1325, 385, 386, 387, 388, 389, 1353, 390,
	392, 1347, 1346, 1263, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	1338, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 1269, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 1361, 1362, 426, 1283,
	319, 0, 0, 0, 0, 0, 427, 428, 429, 1345,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 1372, 436, 437, 438, 1358, 1359, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 1368,
	0, 1293, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 1331, 1332, 1335, 552, 1374, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 1273, 320, 322, 1373, 767, 469, 553,
	470, 1340, 1341, 0, 1299, 0, 471, 472, 474, 1375,
	1333, 1376, 473, 475, 476, 1377, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1369, 488, 1378, 490, 491, 1379, 0,
	492, 493, 494, 495, 496, 497, 500, 1324, 1323, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1380,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 1381, 545, 532,
	1260, 533, 323, 1382, 547, 548, 549, 550, 1284, 1334,
	551, 1348, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 1383,
	564, 1384, 1363, 565, 566, 1270, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 1364, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 1344, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 1385, 627, 628, 629, 630, 631, 1271,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 275, 653,
	654, 652, 655, 656, 657, 1327, 658, 783, 659, 639,
	640, 660, 661, 1386, 662, 663, 664, 665, 666, 667,
	668, 1342, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 1389, 679, 680, 681,
	682, 1365, 686, 687, 688, 689, 0, 690, 691, 1257,
	685, 676, 277, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 1354, 1355, 1356, 1357, 0, 712,
	0, 701, 703, 704, 705, 706, 1366, 707, 1367, 1282,
	708, 709, 710, 711, 702, 713, 714, 0, 1264, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 1328, 724,
	0, 0, 725, 726, 727, 1848, 1351, 1388, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 0, 0, 0, 269, 739, 740, 797, 741, 742,
	743, 1261, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1256, 0, 0, 0,
	0, 0, 0, 1254, 1255, 1304, 1276, 1277, 1278, 1274,
	1275, 1287, 0, 2124, 3703, 0, 0, 1286, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 1330, 1292,
	0, 0, 334, 0, 335, 336, 337, 1370, 338, 339,
	340, 341, 342, 343, 344, 745, 1343, 0, 345, 1350,
	346, 1349, 0, 1360, 347, 348, 349, 350, 351, 352,
	353, 1294, 1329, 1258, 354, 1390, 1391, 752, 0, 355,
	356, 1336, 0, 1317, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 1371, 382, 383, 384, 1320,
	1318, 1319, 1326, 1322, 1321, 1325, 385, 386, 387, 388,
	389, 1353, 390, 392, 1347, 1346, 1263, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 1338, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 1269, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 1361,
	1362, 426, 1283, 319, 0, 0, 0, 0, 0, 427,
	428, 429, 1345, 0, 0, 0, 430, 0, 431, 432,
	433, 0, 434, 435, 0, 1372, 436, 437, 438, 1358,
	1359, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 1368, 0, 1293, 449, 0, 450, 451, 452,
	453, 454, 455, 456, 1331, 1332, 1335, 552, 1374, 457,
	458, 459, 0, 460, 461, 462, 463, 464, 0, 0,
	0, 465, 466, 467, 468, 0, 1273, 320, 322, 1373,
	767, 469, 553, 470, 1340, 1341, 0, 1299, 0, 471,
	472, 474, 1375, 1333, 1376, 473, 475, 476, 1377, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 1369, 488, 1378, 490,
	491, 1379, 0, 492, 493, 494, 495, 496, 497, 500,
	1324, 1323, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 1380, 527, 528, 529, 530, 531, 539, 541,
	542, 537, 538, 540, 543, 544, 546, 534, 535, 536,
	1381, 545, 532, 1260, 533, 323, 1382, 547, 548, 549,
	550, 1284, 1334, 551, 1348, 554, 555, 0, 0, 556,
	0, 557, 0, 0, 559, 560, 561, 0, 0, 562,
	563, 775, 1383, 564, 1384, 1363, 565, 566, 1270, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 0,
	577, 578, 777, 579, 580, 581, 778, 582, 583, 584,
	1364, 585, 780, 586, 587, 0, 588, 589, 590, 0,
	591, 592, 593, 594, 595, 596, 597, 598, 1344, 599,
	600, 602, 601, 603, 0, 604, 0, 605, 606, 607,
	0, 0, 0, 0, 0, 608, 609, 611, 0, 612,
	613, 614, 615, 610, 616, 617, 618, 619, 620, 621,
	0, 623, 624, 622, 625, 626, 1385, 627, 628, 629,
	630, 631, 1271, 632, 0, 633, 634, 642, 643, 644,
	635, 636, 638, 645, 637, 646, 647, 648, 649, 651,
	650, 275, 653, 654, 652, 655, 656, 657, 1327, 658,
	783, 659, 639, 640, 660, 661, 1386, 662, 663, 664,
	665, 666, 667, 668, 1342, 0, 669, 0, 670, 671,
	672, 673, 674, 675, 677, 641, 678, 683, 684, 1389,
	679, 680, 681, 682, 1365, 686, 687, 688, 689, 0,
	690, 691, 1257, 685, 676, 277, 692, 693, 694, 695,
	696, 697, 0, 698, 699, 0, 700, 1354, 1355, 1356,
	1357, 0, 712, 0, 701, 703, 704, 705, 706, 1366,
	707, 1367, 1282, 708, 709, 710, 711, 702, 713, 714,
	0, 1264, 715, 716, 717, 719, 721, 722, 718, 720,
	723, 1328, 724, 0, 0, 725, 726, 727, 1848, 1351,
	1388, 0, 729, 730, 728, 731, 732, 735, 733, 734,
	796, 736, 737, 738, 0, 0, 0, 269, 739, 740,
	797, 741, 742, 743, 1261, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1256,
	0, 0, 0, 0, 0, 0, 1254, 1255, 1304, 1276,
	1277, 1278, 1274, 1275, 1287, 0, 2124, 2122, 0, 0,
	1286, 0, 0, 0, 0, 324, 325, 327, 326, 328,
	329, 330, 331, 0, 332, 333, 0, 0, 0, 0,
	0, 1330, 1292, 0, 0, 334, 0, 335, 336, 337,
	1370, 338, 339, 340, 341, 342, 343, 344, 745, 1343,
	0, 345, 1350, 346, 1349, 3081, 1360, 347, 348, 349,
	350, 351, 352, 353, 1294, 1329, 1258, 354, 1390, 1391,
	752, 0, 355, 356, 1336, 0, 1317, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 1371, 382,
	383, 384, 1320, 1318, 1319, 1326, 1322, 1321, 1325, 385,
	386, 387, 388, 389, 1353, 390, 392, 1347, 1346, 1263,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 1338, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 1269,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 1361, 1362, 426, 1283, 319, 0, 0, 0,
	0, 0, 427, 428, 429, 1345, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 3086, 1372, 436,
	437, 438, 1358, 1359, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 1368, 0, 1293, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 1331, 1332, 1335,
	552, 1374, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 1273,
	320, 322, 1373, 767, 469, 553, 470, 1340, 1341, 0,
	1299, 0, 471, 472, 474, 1375, 1333, 1376, 473, 475,
	476, 1377, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 3082, 489, 1369,
	488, 1378, 490, 491, 1379, 0, 492, 493, 494, 495,
	496, 497, 500, 1324, 1323, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 1380, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 1381, 545, 532, 1260, 533, 323, 1382,
	547, 548, 549, 550, 1284, 1334, 551, 1348, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 1383, 564, 1384, 1363, 565,
	566, 1270, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 1364, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 1344, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 1385,
	627, 628, 629, 630, 631, 1271, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 1327, 658, 783, 659, 639, 640, 660, 661, 1386,
	662, 663, 664, 665, 666, 667, 668, 1342, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 1389, 679, 680, 681, 682, 1365, 686, 687,
	688, 689, 0, 690, 691, 1257, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	1354, 1355, 1356, 1357, 0, 712, 3083, 701, 703, 704,
	705, 706, 1366, 707, 1367, 1282, 708, 709, 710, 711,
	702, 713, 714, 0, 1264, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 1328, 724, 0, 0, 725, 726,
	727, 793, 1351, 1388, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 0, 0, 0,
	0, 739, 740, 797, 741, 742, 743, 1261, 0, 0,
	0, 0, 2993, 0, 1304, 1276, 1277, 1278, 1274, 1275,
	1287, 0, 1256, 0, 0, 0, 0, 0, 0, 1254,
	1255, 324, 325, 327, 326, 328, 329, 330, 331, 1288,
	332, 333, 0, 1286, 0, 0, 0, 1330, 1292, 0,
	0, 334, 0, 335, 336, 337, 1370, 338, 339, 340,
	341, 342, 343, 344, 745, 1343, 0, 345, 1350, 346,
	1349, 0, 1360, 347, 348, 349, 350, 351, 352, 353,
	1294, 1329, 1258, 354, 1390, 1391, 752, 0, 355, 356,
	1336, 0, 1317, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1371, 382, 383, 384, 1320, 1318,
	1319, 1326, 1322, 1321, 1325, 385, 386, 387, 388, 389,
	1353, 390, 392, 1347, 1346, 1263, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 1338, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 1269, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 1361, 1362,
	426, 1283, 319, 0, 0, 0, 0, 0, 427, 428,
	429, 1345, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 1372, 436, 437, 438, 1358, 1359,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 1368, 0, 1293, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 1331, 1332, 1335, 552, 1374, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 1273, 320, 322, 1373, 767,
	469, 553, 470, 1340, 1341, 0, 1299, 0, 471, 472,
	474, 1375, 1333, 1376, 473, 475, 476, 1377, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 1369, 488, 1378, 490, 491,
	1379, 0, 492, 493, 494, 495, 496, 497, 500, 1324,
	1323, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 1380, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 1381,
	545, 532, 1260, 533, 323, 1382, 547, 548, 549, 550,
	1284, 1334, 551, 1348, 554, 555, 0, 0, 556, 0,
	557, 0, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 1383, 564, 1384, 1363, 565, 566, 1270, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 1364,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 1344, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 1385, 627, 628, 629, 630,
	631, 1271, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 1327, 658, 783,
	659, 639, 640, 660, 661, 1386, 662, 663, 664, 665,
	666, 667, 668, 1342, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 1389, 679,
	680, 681, 682, 1365, 686, 687, 688, 689, 0, 690,
	691, 1257, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 1354, 1355, 1356, 1357,
	0, 712, 0, 701, 703, 704, 705, 706, 1366, 707,
	1367, 1282, 708, 709, 710, 711, 702, 713, 714, 0,
	1264, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	1328, 724, 0, 0, 725, 726, 727, 793, 1351, 1388,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 0, 0, 0, 0, 739, 740, 797,
	741, 742, 743, 1261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1256, 0,
	0, 0, 0, 0, 0, 1254, 1255, 0, 0, 0,
	0, 0, 0, 0, 0, 1288, 2991, 0, 2990, 1286,
	1304, 1276, 1277, 1278, 1274, 1275, 1287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 327,
	326, 328, 329, 330, 331, 0, 332, 333, 0, 0,
	0, 0, 0, 1330, 1292, 0, 0, 334, 0, 335,
	336, 337, 1370, 338, 339, 340, 341, 342, 343, 344,
	745, 1343, 0, 345, 1350, 346, 1349, 0, 1360, 347,
	348, 349, 350, 351, 352, 353, 1294, 1329, 1258, 354,
	1390, 1391, 752, 0, 355, 356, 1336, 0, 1317, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	1371, 382, 383, 384, 1320, 1318, 1319, 1326, 1322, 1321,
	1325, 385, 386, 387, 388, 389, 1353, 390, 392, 1347,
	1346, 1263, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 1338, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 1269, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 1361, 1362, 426, 1283, 319, 0,
	0, 0, 0, 0, 427, 428, 429, 1345, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	1372, 436, 437, 438, 1358, 1359, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 1368, 0, 1293,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 1331,
	1332, 1335, 552, 1374, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 1273, 320, 322, 1373, 767, 469, 553, 470, 1340,
	1341, 0, 1299, 0, 471, 472, 474, 1375, 1333, 1376,
	473, 475, 476, 1377, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 1369, 488, 1378, 490, 491, 1379, 0, 492, 493,
	494, 495, 496, 497, 500, 1324, 1323, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 1380, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 1381, 545, 532, 1260, 533,
	323, 1382, 547, 548, 549, 550, 1284, 1334, 551, 1348,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 1383, 564, 1384,
	1363, 565, 566, 1270, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 1364, 585, 780, 586, 587,
	0, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 1344, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 1385, 627, 628, 629, 630, 631, 1271, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 1327, 658, 783, 659, 639, 640, 660,
	661, 1386, 662, 663, 664, 665, 666, 667, 668, 1342,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 1389, 679, 680, 681, 682, 1365,
	686, 687, 688, 689, 0, 690, 691, 1257, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 1354, 1355, 1356, 1357, 0, 712, 0, 701,
	703, 704, 705, 706, 1366, 707, 1367, 1282, 708, 709,
	710, 711, 702, 713, 714, 0, 1264, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 1328, 724, 0, 0,
	725, 726, 727, 793, 1351, 1388, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 0,
	0, 0, 0, 739, 740, 797, 741, 742, 743, 1261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1256, 0, 0, 0, 0, 0,
	0, 1254, 1255, 0, 0, 0, 0, 0, 0, 0,
	0, 1288, 2988, 0, 2987, 1286, 1304, 1276, 1277, 1278,
	1274, 1275, 1287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 327, 326, 328, 329, 330,
	331, 0, 332, 333, 0, 0, 0, 0, 0, 1330,
	1292, 0, 0, 334, 0, 335, 336, 337, 1370, 338,
	339, 340, 341, 342, 343, 344, 745, 1343, 0, 345,
	1350, 346, 1349, 0, 1360, 347, 348, 349, 350, 351,
	352, 353, 1294, 1329, 1258, 354, 1390, 1391, 752, 0,
	355, 356, 1336, 0, 1317, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 1371, 382, 383, 384,
	1320, 1318, 1319, 1326, 1322, 1321, 1325, 385, 386, 387,
	388, 389, 1353, 390, 392, 1347, 1346, 1263, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 1338, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 1269, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	1361, 1362, 426, 1283, 319, 0, 0, 0, 0, 0,
	427, 428, 429, 1345, 0, 0, 0, 430, 0, 431,
	432, 433, 0, 434, 435, 0, 1372, 436, 437, 438,
	1358, 1359, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 1368, 0, 1293, 449, 0, 450, 451,
	452, 453, 454, 455, 456, 1331, 1332, 1335, 552, 1374,
	457, 458, 459, 0, 460, 461, 462, 463, 464, 0,
	0, 0, 465, 466, 467, 468, 0, 1273, 320, 322,
	1373, 767, 469, 553, 470, 1340, 1341, 0, 1299, 0,
	471, 472, 474, 1375, 1333, 1376, 473, 475, 476, 1377,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 1369, 488, 1378,
	490, 491, 1379, 0, 492, 493, 494, 495, 496, 497,
	500, 1324, 1323, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1380, 527, 528, 529, 530, 531, 539,
	541, 542, 537, 538, 540, 543, 544, 546, 534, 535,
	536, 1381, 545, 532, 1260, 533, 323, 1382, 547, 548,
	549, 550, 1284, 1334, 551, 1348, 554, 555, 0, 0,
	556, 0, 557, 0, 0, 559, 560, 561, 0, 0,
	562, 563, 775, 1383, 564, 1384, 1363, 565, 566, 1270,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	0, 577, 578, 777, 579, 580, 581, 778, 582, 583,
	584, 1364, 585, 780, 586, 587, 0, 588, 589, 590,
	0, 591, 592, 593, 594, 595, 596, 597, 598, 1344,
	599, 600, 602, 601, 603, 0, 604, 0, 605, 606,
	607, 0, 0, 0, 0, 0, 608, 609, 611, 0,
	612, 613, 614, 615, 610, 616, 617, 618, 619, 620,
	621, 0, 623, 624, 622, 625, 626, 1385, 627, 628,
	629, 630, 631, 1271, 632, 0, 633, 634, 642, 643,
	644, 635, 636, 638, 645, 637, 646, 647, 648, 649,
	651, 650, 0, 653, 654, 652, 655, 656, 657, 1327,
	658, 783, 659, 639, 640, 660, 661, 1386, 662, 663,
	664, 665, 666, 667, 668, 1342, 0, 669, 0, 670,
	671, 672, 673, 674, 675, 677, 641, 678, 683, 684,
	1389, 679, 680, 681, 682, 1365, 686, 687, 688, 689,
	0, 690, 691, 1257, 685, 676, 0, 692, 693, 694,
	695, 696, 697, 0, 698, 699, 0, 700, 1354, 1355,
	1356, 1357, 0, 712, 0, 701, 703, 704, 705, 706,
	1366, 707, 1367, 1282, 708, 709, 710, 711, 702, 713,
	714, 0, 1264, 715, 716, 717, 719, 721, 722, 718,
	720, 723, 1328, 724, 0, 0, 725, 726, 727, 793,
	1351, 1388, 0, 729, 730, 728, 731, 732, 735, 733,
	734, 796, 736, 737, 738, 0, 0, 0, 0, 739,
	740, 797, 741, 742, 743, 1261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1256, 0, 0, 0, 0, 0, 0, 1254, 1255, 0,
	0, 0, 0, 0, 0, 0, 0, 1288, 2985, 0,
	2984, 1286, 1304, 1276, 1277, 1278, 1274, 1275, 1287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 0, 1330, 1292, 0, 0, 334,
	0, 335, 336, 337, 1370, 338, 339, 340, 341, 342,
	343, 344, 745, 1343, 0, 345, 1350, 346, 1349, 0,
	1360, 347, 348, 349, 350, 351, 352, 353, 1294, 1329,
	1258, 354, 1390, 1391, 752, 0, 355, 356, 1336, 0,
	1317, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1371, 382, 383, 384, 1320, 1318, 1319, 1326,
	1322, 1321, 1325, 385, 386, 387, 388, 389, 1353, 390,
	392, 1347, 1346, 1263, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	1338, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 1269, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 1361, 1362, 426, 1283,
	319, 0, 0, 0, 0, 0, 427, 428, 429, 1345,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 1372, 436, 437, 438, 1358, 1359, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 1368,
	0, 1293, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 1331, 1332, 1335, 552, 1374, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 1273, 320, 322, 1373, 767, 469, 553,
	470, 1340, 1341, 0, 1299, 0, 471, 472, 474, 1375,
	1333, 1376, 473, 475, 476, 1377, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1369, 488, 1378, 490, 491, 1379, 0,
	492, 493, 494, 495, 496, 497, 500, 1324, 1323, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1380,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 1381, 545, 532,
	1260, 533, 323, 1382, 547, 548, 549, 550, 1284, 1334,
	551, 1348, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 1383,
	564, 1384, 1363, 565, 566, 1270, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 1364, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 1344, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 1385, 627, 628, 629, 630, 631, 1271,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 1327, 658, 783, 659, 639,
	640, 660, 661, 1386, 662, 663, 664, 665, 666, 667,
	668, 1342, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 1389, 679, 680, 681,
	682, 1365, 686, 687, 688, 689, 0, 690, 691, 1257,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 1354, 1355, 1356, 1357, 0, 712,
	0, 701, 703, 704, 705, 706, 1366, 707, 1367, 1282,
	708, 709, 710, 711, 702, 713, 714, 0, 1264, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 1328, 724,
	0, 0, 725, 726, 727, 793, 1351, 1388, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 0, 0, 0, 0, 739, 740, 797, 741, 742,
	743, 1261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1256, 0, 0, 0,
	0, 0, 0, 1254, 1255, 0, 0, 0, 0, 0,
	0, 0, 0, 1288, 2982, 0, 1952, 1286, 1304, 1276,
	1277, 1278, 1274, 1275, 1287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 327, 326, 328,
	329, 330, 331, 0, 332, 333, 0, 0, 0, 0,
	0, 1330, 1292, 0, 0, 334, 0, 335, 336, 337,
	1370, 338, 339, 340, 341, 342, 343, 344, 745, 1343,
	0, 345, 1350, 346, 1349, 0, 1360, 347, 348, 349,
	350, 351, 352, 353, 1294, 1329, 1258, 354, 1390, 1391,
	752, 0, 355, 356, 1336, 0, 1317, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 1371, 382,
	383, 384, 1320, 1318, 1319, 1326, 1322, 1321, 1325, 385,
	386, 387, 388, 389, 1353, 390, 392, 1347, 1346, 1263,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 1338, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 1269,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 1361, 1362, 426, 1283, 319, 0, 0, 0,
	0, 0, 427, 428, 429, 1345, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 1372, 436,
	437, 438, 1358, 1359, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 1368, 0, 1293, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 1331, 1332, 1335,
	552, 1374, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 1273,
	320, 322, 1373, 767, 469, 553, 470, 1340, 1341, 0,
	1299, 0, 471, 472, 474, 1375, 1333, 1376, 473, 475,
	476, 1377, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 1369,
	488, 1378, 490, 491, 1379, 0, 492, 493, 494, 495,
	496, 497, 500, 1324, 1323, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 1380, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 1381, 545, 532, 1260, 533, 323, 1382,
	547, 548, 549, 550, 1284, 1334, 551, 1348, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 1383, 564, 1384, 1363, 565,
	566, 1270, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 1364, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 1344, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 1385,
	627, 628, 629, 630, 631, 1271, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 1327, 658, 783, 659, 639, 640, 660, 661, 1386,
	662, 663, 664, 665, 666, 667, 668, 1342, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 1389, 679, 680, 681, 682, 1365, 686, 687,
	688, 689, 0, 690, 691, 1257, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	1354, 1355, 1356, 1357, 0, 712, 0, 701, 703, 704,
	705, 706, 1366, 707, 1367, 1282, 708, 709, 710, 711,
	702, 713, 714, 0, 1264, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 1328, 724, 0, 0, 725, 726,
	727, 793, 1351, 1388, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 1951, 0, 0,
	0, 739, 740, 797, 741, 742, 743, 1261, 0, 0,
	0, 0, 1250, 0, 1304, 1276, 1277, 1278, 1274, 1275,
	1287, 0, 1256, 0, 0, 0, 0, 0, 0, 1254,
	1255, 324, 325, 327, 326, 328, 329, 330, 331, 1288,
	332, 333, 0, 1286, 0, 0, 0, 1330, 1292, 0,
	0, 334, 0, 335, 336, 337, 1370, 338, 339, 340,
	341, 342, 343, 344, 745, 1343, 0, 345, 1350, 346,
	1349, 0, 1360, 347, 348, 349, 350, 351, 352, 353,
	1294, 1329, 1258, 354, 1390, 1391, 752, 0, 355, 356,
	1336, 0, 1317, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1371, 382, 383, 384, 1320, 1318,
	1319, 1326, 1322, 1321, 1325, 385, 386, 387, 388, 389,
	1353, 390, 392, 1347, 1346, 1263, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 1338, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 1269, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 1361, 1362,
	426, 1283, 319, 0, 0, 0, 0, 0, 427, 428,
	429, 1345, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 1372, 436, 437, 438, 1358, 1359,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 1368, 0, 1293, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 1331, 1332, 1335, 552, 1374, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 1273, 320, 322, 1373, 767,
	469, 553, 470, 1340, 1341, 0, 1299, 0, 471, 472,
	474, 1375, 1333, 1376, 473, 475, 476, 1377, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 1369, 488, 1378, 490, 491,
	1379, 0, 492, 493, 494, 495, 496, 497, 500, 1324,
	1323, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 1380, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 1381,
	545, 532, 1260, 533, 323, 1382, 547, 548, 549, 550,
	1284, 1334, 551, 1348, 554, 555, 0, 0, 556, 0,
	557, 1265, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 1383, 564, 1384, 1363, 565, 566, 1270, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 1364,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 1344, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 1385, 627, 628, 629, 630,
	631, 1271, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 1327, 658, 783,
	659, 639, 640, 660, 661, 1386, 662, 663, 664, 665,
	666, 667, 668, 1342, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 1389, 679,
	680, 681, 682, 1365, 686, 687, 688, 689, 0, 690,
	691, 1257, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 1354, 1355, 1356, 1357,
	0, 712, 0, 701, 703, 704, 705, 706, 1366, 707,
	1367, 1282, 708, 709, 710, 711, 702, 713, 714, 0,
	1264, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	1328, 724, 0, 0, 725, 726, 727, 793, 1351, 1388,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 0, 0, 0, 0, 739, 740, 797,
	741, 742, 743, 1261, 0, 0, 0, 0, 0, 0,
	1304, 1276, 1277, 1278, 1274, 1275, 1287, 0, 1256, 0,
	0, 0, 0, 0, 0, 1254, 1255, 324, 325, 327,
	326, 328, 329, 330, 331, 1288, 332, 333, 0, 1286,
	0, 0, 0, 1330, 1292, 0, 0, 334, 0, 335,
	336, 337, 1370, 338, 339, 340, 341, 342, 343, 344,
	745, 1343, 0, 345, 1350, 346, 1349, 0, 1360, 347,
	348, 349, 350, 351, 352, 353, 1294, 1329, 1258, 354,
	1390, 1391, 752, 0, 355, 356, 1336, 0, 1317, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 5442, 377, 378, 0, 379, 380, 381,
	1371, 382, 383, 384, 1320, 1318, 1319, 1326, 1322, 1321,
	1325, 385, 386, 387, 388, 389, 1353, 390, 392, 1347,
	1346, 1263, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 1338, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 1269, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 1361, 1362, 426, 1283, 319, 0,
	0, 0, 0, 0, 427, 428, 429, 1345, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	1372, 436, 437, 438, 1358, 1359, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 1368, 0, 1293,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 1331,
	1332, 1335, 552, 1374, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 1273, 320, 322, 1373, 767, 469, 553, 470, 1340,
	1341, 0, 1299, 0, 471, 472, 474, 1375, 1333, 1376,
	473, 475, 476, 1377, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 1369, 488, 1378, 490, 491, 1379, 0, 492, 493,
	494, 495, 496, 497, 500, 1324, 1323, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 1380, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 1381, 545, 532, 1260, 533,
	323, 1382, 547, 548, 549, 550, 1284, 1334, 551, 1348,
	554, 555, 0, 0, 556, 0, 557, 1265, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 1383, 564, 1384,
	1363, 565, 566, 1270, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 1364, 585, 780, 586, 587,
	0, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 1344, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 1385, 627, 628, 629, 630, 631, 1271, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 1327, 658, 783, 659, 639, 640, 660,
	661, 1386, 662, 663, 664, 665, 666, 667, 668, 1342,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 1389, 679, 680, 681, 682, 1365,
	686, 687, 688, 689, 0, 690, 691, 1257, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 1354, 1355, 1356, 1357, 0, 712, 0, 701,
	703, 704, 705, 706, 1366, 707, 1367, 1282, 708, 709,
	710, 711, 702, 713, 714, 0, 1264, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 1328, 724, 0, 0,
	725, 726, 727, 793, 1351, 1388, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 0,
	0, 0, 0, 739, 740, 797, 741, 742, 743, 1261,
	0, 0, 0, 0, 0, 0, 1304, 1276, 1277, 1278,
	1274, 1275, 1287, 0, 1256, 0, 0, 0, 0, 0,
	0, 1254, 1255, 324, 325, 327, 326, 328, 329, 330,
	331, 1288, 332, 333, 0, 1286, 0, 0, 0, 1330,
	1292, 0, 0, 334, 0, 335, 336, 337, 1370, 338,
	339, 340, 341, 342, 343, 344, 745, 1343, 0, 345,
	1350, 346, 1349, 0, 1360, 347, 348, 349, 350, 351,
	352, 353, 1294, 1329, 1258, 354, 1390, 1391, 752, 0,
	355, 356, 1336, 0, 1317, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 1371, 382, 383, 384,
	1320, 1318, 1319, 1326, 1322, 1321, 1325, 385, 386, 387,
	388, 389, 1353, 390, 392, 1347, 1346, 1263, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 1338, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 1269, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	1361, 1362, 426, 1283, 319, 0, 0, 0, 0, 0,
	427, 428, 429, 1345, 0, 0, 0, 430, 0, 431,
	432, 433, 0, 434, 435, 0, 1372, 436, 437, 438,
	1358, 1359, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 1368, 0, 1293, 449, 0, 450, 451,
	452, 453, 454, 455, 456, 1331, 1332, 1335, 552, 1374,
	457, 458, 459, 0, 460, 461, 462, 463, 464, 0,
	0, 0, 465, 466, 467, 468, 0, 1273, 320, 2823,
	1373, 767, 469, 553, 470, 1340, 1341, 0, 1299, 0,
	471, 472, 474, 1375, 1333, 1376, 473, 475, 476, 1377,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 1369, 488, 1378,
	490, 491, 1379, 0, 492, 493, 494, 495, 496, 497,
	500, 1324, 1323, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1380, 527, 528, 529, 530, 531, 539,
	541, 542, 537, 538, 540, 543, 544, 546, 534, 535,
	536, 1381, 545, 532, 1260, 533, 323, 1382, 547, 548,
	549, 550, 1284, 1334, 551, 1348, 554, 555, 0, 0,
	556, 0, 557, 0, 0, 559, 560, 561, 0, 0,
	562, 563, 775, 1383, 564, 1384, 1363, 565, 566, 1270,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	0, 577, 578, 777, 579, 580, 581, 778, 582, 583,
	584, 1364, 585, 780, 586, 587, 2822, 588, 589, 590,
	0, 591, 592, 593, 594, 595, 596, 597, 598, 1344,
	599, 600, 602, 601, 603, 0, 604, 0, 605, 606,
	607, 0, 0, 0, 0, 0, 608, 609, 611, 0,
	612, 613, 614, 615, 610, 616, 617, 618, 619, 620,
	621, 0, 623, 624, 622, 625, 626, 1385, 627, 628,
	629, 630, 631, 1271, 632, 0, 633, 634, 642, 643,
	644, 635, 636, 638, 645, 637, 646, 647, 648, 649,
	651, 650, 0, 653, 654, 652, 655, 656, 657, 1327,
	658, 783, 659, 639, 640, 660, 661, 1386, 662, 663,
	664, 665, 666, 667, 668, 1342, 0, 669, 0, 670,
	671, 672, 673, 674, 675, 677, 641, 678, 683, 684,
	1389, 679, 680, 681, 682, 1365, 686, 687, 688, 689,
	0, 690, 691, 1257, 685, 676, 0, 692, 693, 694,
	695, 696, 697, 0, 698, 699, 0, 700, 1354, 1355,
	1356, 1357, 0, 712, 0, 701, 703, 704, 705, 706,
	1366, 707, 1367, 1282, 708, 709, 710, 711, 702, 713,
	714, 0, 1264, 715, 716, 717, 719, 721, 722, 718,
	720, 723, 1328, 724, 0, 0, 725, 726, 727, 793,
	1351, 1388, 0, 729, 730, 728, 731, 732, 735, 733,
	734, 796, 736, 737, 738, 0, 0, 0, 0, 739,
	740, 797, 741, 742, 743, 1261, 0, 0, 0, 0,
	0, 0, 1304, 1276, 1277, 1278, 1274, 1275, 1287, 0,
	1256, 0, 0, 0, 0, 0, 0, 1254, 1255, 324,
	325, 327, 326, 328, 329, 330, 331, 1288, 332, 333,
	0, 1286, 0, 0, 0, 1330, 1292, 0, 0, 334,
	0, 335, 336, 337, 1370, 338, 339, 340, 341, 342,
	343, 344, 745, 1343, 0, 345, 1350, 346, 1349, 0,
	1360, 347, 348, 349, 350, 351, 352, 353, 1294, 1329,
	1258, 354, 1390, 1391, 752, 0, 355, 356, 1336, 0,
	1317, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 5144, 377, 378, 0, 379,
	380, 381, 1371, 382, 383, 384, 1320, 1318, 1319, 1326,
	1322, 1321, 1325, 385, 386, 387, 388, 389, 1353, 390,
	392, 1347, 1346, 1263, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	1338, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 1269, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 1361, 1362, 426, 1283,
	319, 0, 0, 0, 0, 0, 427, 428, 429, 1345,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 1372, 436, 437, 438, 1358, 1359, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 1368,
	0, 1293, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 1331, 1332, 1335, 552, 1374, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 1273, 320, 322, 1373, 767, 469, 553,
	470, 1340, 1341, 0, 1299, 0, 471, 472, 474, 1375,
	1333, 1376, 473, 475, 476, 1377, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1369, 488, 1378, 490, 491, 1379, 0,
	492, 493, 494, 495, 496, 497, 500, 1324, 1323, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1380,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 1381, 545, 532,
	1260, 533, 323, 1382, 547, 548, 549, 550, 1284, 1334,
	551, 1348, 554, 555, 0, 0, 556, 0, 557, 1265,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 1383,
	564, 1384, 1363, 565, 566, 1270, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 1364, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 1344, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 1385, 627, 628, 629, 630, 631, 1271,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 1327, 658, 783, 659, 639,
	640, 660, 661, 1386, 662, 663, 664, 665, 666, 667,
	668, 1342, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 1389, 679, 680, 681,
	682, 1365, 686, 687, 688, 689, 0, 690, 691, 1257,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 1354, 1355, 1356, 1357, 0, 712,
	0, 701, 703, 704, 705, 706, 1366, 707, 1367, 1282,
	708, 709, 710, 711, 702, 713, 714, 0, 1264, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 1328, 724,
	0, 0, 725, 726, 727, 793, 1351, 1388, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 0, 0, 0, 0, 739, 740, 797, 741, 742,
	743, 1261, 0, 0, 0, 0, 0, 0, 1304, 1276,
	1277, 1278, 1274, 1275, 1287, 0, 1256, 0, 0, 0,
	0, 0, 0, 1254, 1255, 324, 325, 327, 326, 328,
	329, 330, 331, 1288, 332, 333, 0, 1286, 0, 0,
	0, 1330, 1292, 0, 0, 334, 0, 335, 336, 337,
	1370, 338, 339, 340, 341, 342, 343, 344, 745, 1343,
	0, 345, 1350, 346, 1349, 0, 1360, 347, 348, 349,
	350, 351, 352, 353, 1294, 1329, 1258, 354, 1390, 1391,
	752, 0, 355, 356, 1336, 0, 1317, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 1371, 382,
	383, 384, 1320, 1318, 1319, 1326, 1322, 1321, 1325, 385,
	386, 387, 388, 389, 1353, 390, 392, 1347, 1346, 1263,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 1338, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 1269,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 1361, 1362, 426, 1283, 319, 0, 0, 0,
	0, 0, 427, 428, 429, 1345, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 1372, 436,
	437, 438, 1358, 1359, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 1368, 0, 1293, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 1331, 1332, 1335,
	552, 1374, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 1273,
	320, 322, 1373, 767, 469, 553, 470, 1340, 1341, 0,
	1299, 0, 471, 472, 474, 1375, 1333, 1376, 473, 475,
	476, 1377, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 1369,
	488, 1378, 490, 491, 1379, 0, 492, 493, 494, 495,
	496, 497, 500, 1324, 1323, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 1380, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 1381, 545, 532, 1260, 533, 323, 1382,
	547, 548, 549, 550, 1284, 1334, 551, 1348, 554, 555,
	0, 0, 556, 0, 557, 1265, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 1383, 564, 1384, 1363, 565,
	566, 1270, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 1364, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 1344, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 1385,
	627, 628, 629, 630, 631, 1271, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 1327, 658, 783, 659, 639, 640, 660, 661, 1386,
	662, 663, 664, 665, 666, 667, 668, 1342, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 1389, 679, 680, 681, 682, 1365, 686, 687,
	688, 689, 0, 690, 691, 1257, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	1354, 1355, 1356, 1357, 0, 712, 0, 701, 703, 704,
	705, 706, 1366, 707, 1367, 1282, 708, 709, 710, 711,
	702, 713, 714, 0, 1264, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 1328, 724, 0, 0, 725, 726,
	727, 793, 1351, 1388, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 0, 0, 0,
	0, 739, 740, 797, 741, 742, 743, 1261, 0, 0,
	0, 0, 0, 0, 1304, 1276, 1277, 1278, 1274, 1275,
	1287, 0, 1256, 0, 0, 0, 0, 0, 0, 1254,
	1255, 324, 325, 327, 326, 328, 329, 330, 331, 1288,
	332, 333, 0, 1286, 0, 0, 0, 1330, 1292, 0,
	0, 334, 0, 335, 336, 337, 1370, 338, 339, 340,
	341, 342, 343, 344, 745, 1343, 0, 345, 1350, 346,
	1349, 0, 1360, 347, 348, 349, 350, 351, 352, 353,
	1294, 1329, 1258, 354, 1390, 1391, 752, 0, 355, 356,
	1336, 0, 1317, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1371, 382, 383, 384, 1320, 1318,
	1319, 1326, 1322, 1321, 1325, 385, 386, 387, 388, 389,
	1353, 390, 392, 1347, 1346, 1263, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 1338, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 1269, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 1361, 1362,
	426, 1283, 319, 0, 0, 0, 0, 0, 427, 428,
	429, 1345, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 1372, 436, 437, 438, 1358, 1359,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 1368, 0, 1293, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 1331, 1332, 1335, 552, 1374, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 1273, 320, 322, 1373, 767,
	469, 553, 470, 1340, 1341, 0, 1299, 0, 471, 472,
	474, 1375, 1333, 1376, 473, 475, 476, 1377, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 1369, 488, 1378, 490, 491,
	1379, 0, 492, 493, 494, 495, 496, 497, 500, 1324,
	1323, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 1380, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 1381,
	545, 532, 1260, 533, 4669, 1382, 547, 548, 549, 550,
	1284, 1334, 551, 1348, 554, 555, 0, 0, 556, 0,
	557, 0, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 1383, 564, 1384, 1363, 565, 566, 1270, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 1364,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 1344, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 1385, 627, 628, 629, 630,
	631, 1271, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 1327, 658, 783,
	659, 639, 640, 660, 661, 1386, 662, 663, 664, 665,
	666, 667, 668, 1342, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 1389, 679,
	680, 681, 682, 1365, 686, 687, 688, 689, 0, 690,
	691, 1257, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 1354, 1355, 1356, 1357,
	0, 712, 0, 701, 703, 704, 705, 706, 1366, 707,
	1367, 1282, 708, 709, 710, 711, 702, 713, 714, 0,
	1264, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	1328, 724, 0, 0, 725, 726, 727, 793, 1351, 1388,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 0, 0, 0, 0, 739, 740, 797,
	741, 742, 743, 1261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1256, 0,
	0, 0, 0, 0, 0, 1254, 1255, 2198, 1304, 1276,
	1277, 1278, 1274, 1275, 1287, 1288, 0, 0, 0, 1286,
	0, 0, 0, 0, 0, 324, 325, 327, 326, 328,
	329, 330, 331, 0, 332, 333, 0, 0, 0, 0,
	0, 1330, 1292, 0, 0, 334, 0, 335, 336, 337,
	1370, 338, 339, 340, 341, 342, 343, 344, 745, 1343,
	0, 345, 1350, 346, 1349, 0, 1360, 347, 348, 349,
	350, 351, 352, 353, 1294, 1329, 1258, 354, 1390, 1391,
	752, 0, 355, 356, 1336, 0, 1317, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 1371, 382,
	383, 384, 1320, 1318, 1319, 1326, 1322, 1321, 1325, 385,
	386, 387, 388, 389, 1353, 390, 392, 1347, 1346, 1263,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 1338, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 1269,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 1361, 1362, 426, 1283, 319, 0, 0, 0,
	0, 0, 427, 428, 429, 1345, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 1372, 436,
	437, 438, 1358, 1359, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 1368, 0, 1293, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 1331, 1332, 1335,
	552, 1374, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 1273,
	320, 322, 1373, 767, 469, 553, 470, 1340, 1341, 0,
	1299, 0, 471, 472, 474, 1375, 1333, 1376, 473, 475,
	476, 1377, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 1369,
	488, 1378, 490, 491, 1379, 0, 492, 493, 494, 495,
	496, 497, 500, 1324, 1323, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 1380, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 1381, 545, 532, 1260, 533, 323, 1382,
	547, 548, 549, 550, 1284, 1334, 551, 1348, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 1383, 564, 1384, 1363, 565,
	566, 1270, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 1364, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 1344, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 1385,
	627, 628, 629, 630, 631, 1271, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 1327, 658, 783, 659, 639, 640, 660, 661, 1386,
	662, 663, 664, 665, 666, 667, 668, 1342, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 1389, 679, 680, 681, 682, 1365, 686, 687,
	688, 689, 0, 690, 691, 1257, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	1354, 1355, 1356, 1357, 0, 712, 0, 701, 703, 704,
	705, 706, 1366, 707, 1367, 1282, 708, 709, 710, 711,
	702, 713, 714, 0, 1264, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 1328, 724, 0, 0, 725, 726,
	727, 793, 1351, 1388, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 0, 0, 0,
	0, 739, 740, 797, 741, 742, 743, 1261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1256, 0, 0, 0, 0, 0, 0, 1254,
	1255, 2198, 1304, 1276, 1277, 1278, 1274, 1275, 1287, 1288,
	0, 0, 0, 1286, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 0, 1330, 1292, 0, 0, 334,
	0, 335, 336, 337, 1370, 338, 339, 340, 341, 342,
	343, 344, 745, 1343, 0, 345, 1350, 346, 1349, 0,
	1360, 347, 348, 349, 350, 351, 352, 353, 1294, 1329,
	1258, 354, 1390, 1391, 752, 0, 355, 356, 1336, 0,
	1317, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1371, 382, 383, 384, 1320, 1318, 1319, 1326,
	1322, 1321, 1325, 385, 386, 387, 388, 389, 1353, 390,
	392, 1347, 1346, 1263, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	1338, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 1269, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 1361, 1362, 426, 1283,
	319, 0, 0, 0, 0, 0, 427, 428, 429, 1345,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 1372, 436, 437, 438, 1358, 1359, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 1368,
	0, 1293, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 1331, 1332, 1335, 552, 1374, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 1273, 320, 322, 1373, 767, 469, 553,
	470, 1340, 1341, 0, 1299, 0, 471, 472, 474, 1375,
	1333, 1376, 473, 475, 476, 1377, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1369, 488, 1378, 490, 491, 1379, 0,
	492, 493, 494, 495, 496, 497, 500, 1324, 1323, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1380,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 1381, 545, 532,
	1260, 533, 323, 1382, 547, 548, 549, 550, 1284, 1334,
	551, 1348, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 1383,
	564, 1384, 1363, 565, 566, 1270, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 1364, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 1344, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 1385, 627, 628, 629, 630, 631, 1271,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 1327, 658, 783, 659, 639,
	640, 660, 661, 1386, 662, 663, 664, 665, 666, 667,
	668, 1342, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 1389, 679, 680, 681,
	682, 1365, 686, 687, 688, 689, 0, 690, 691, 1257,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 1354, 1355, 1356, 1357, 0, 712,
	0, 701, 703, 704, 705, 706, 1366, 707, 1367, 1282,
	708, 709, 710, 711, 702, 713, 714, 0, 1264, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 1328, 724,
	0, 0, 725, 726, 727, 793, 1351, 1388, 4306, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 0, 0, 0, 0, 739, 740, 797, 741, 742,
	743, 1261, 0, 0, 0, 0, 0, 0, 1304, 1276,
	1277, 1278, 1274, 1275, 1287, 0, 1256, 0, 0, 0,
	0, 0, 0, 1254, 1255, 324, 325, 327, 326, 328,
	329, 330, 331, 1288, 332, 333, 0, 1286, 0, 0,
	0, 1330, 1292, 0, 0, 334, 0, 335, 336, 337,
	1370, 338, 339, 340, 341, 342, 343, 344, 745, 1343,
	0, 345, 1350, 346, 1349, 0, 1360, 347, 348, 349,
	350, 351, 352, 353, 1294, 1329, 1258, 354, 1390, 1391,
	752, 0, 355, 356, 1336, 0, 1317, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 1371, 382,
	383, 384, 1320, 1318, 1319, 1326, 1322, 1321, 1325, 385,
	386, 387, 388, 389, 1353, 390, 392, 1347, 1346, 1263,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 1338, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 1269,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 1361, 1362, 426, 1283, 319, 0, 0, 0,
	0, 0, 427, 428, 429, 1345, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 3086, 1372, 436,
	437, 438, 1358, 1359, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 1368, 0, 1293, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 1331, 1332, 1335,
	552, 1374, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 1273,
	320, 322, 1373, 767, 469, 553, 470, 1340, 1341, 0,
	1299, 0, 471, 472, 474, 1375, 1333, 1376, 473, 475,
	476, 1377, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 1369,
	488, 1378, 490, 491, 1379, 0, 492, 493, 494, 495,
	496, 497, 500, 1324, 1323, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 1380, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 1381, 545, 532, 1260, 533, 323, 1382,
	547, 548, 549, 550, 1284, 1334, 551, 1348, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 1383, 564, 1384, 1363, 565,
	566, 1270, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 1364, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 1344, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 1385,
	627, 628, 629, 630, 631, 1271, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 1327, 658, 783, 659, 639, 640, 660, 661, 1386,
	662, 663, 664, 665, 666, 667, 668, 1342, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 1389, 679, 680, 681, 682, 1365, 686, 687,
	688, 689, 0, 690, 691, 1257, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	1354, 1355, 1356, 1357, 0, 712, 0, 701, 703, 704,
	705, 706, 1366, 707, 1367, 1282, 708, 709, 710, 711,
	702, 713, 714, 0, 1264, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 1328, 724, 0, 0, 725, 726,
	727, 793, 1351, 1388, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 0, 0, 0,
	0, 739, 740, 797, 741, 742, 743, 1261, 0, 0,
	0, 0, 0, 0, 1304, 1276, 1277, 1278, 1274, 1275,
	1287, 0, 1256, 0, 0, 0, 0, 0, 0, 1254,
	1255, 324, 325, 327, 326, 328, 329, 330, 331, 1288,
	332, 333, 0, 1286, 0, 0, 0, 1330, 1292, 0,
	0, 334, 0, 335, 336, 337, 1370, 338, 339, 340,
	341, 342, 343, 344, 745, 1343, 0, 345, 1350, 346,
	1349, 0, 1360, 347, 348, 349, 350, 351, 352, 353,
	1294, 1329, 1258, 354, 1390, 1391, 752, 0, 355, 356,
	1336, 0, 1317, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1371, 382, 383, 384, 1320, 1318,
	1319, 1326, 1322, 1321, 1325, 385, 386, 387, 388, 389,
	1353, 390, 392, 1347, 1346, 1263, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 1338, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 1269, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 1361, 1362,
	426, 1283, 319, 0, 0, 0, 0, 0, 427, 428,
	429, 1345, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 1372, 436, 437, 438, 1358, 1359,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 1368, 0, 1293, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 1331, 1332, 1335, 552, 1374, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 1273, 320, 322, 1373, 767,
	469, 553, 470, 1340, 1341, 0, 1299, 0, 471, 472,
	474, 1375, 1333, 1376, 473, 475, 476, 1377, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 1369, 488, 1378, 490, 491,
	1379, 0, 492, 493, 494, 495, 496, 497, 500, 1324,
	1323, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 1380, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 1381,
	545, 532, 1260, 533, 323, 1382, 547, 548, 549, 550,
	1284, 1334, 551, 1348, 554, 555, 0, 0, 556, 0,
	557, 0, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 1383, 564, 1384, 1363, 565, 566, 1270, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 1364,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 1344, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 1385, 627, 628, 629, 630,
	631, 1271, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 1327, 658, 783,
	659, 639, 640, 660, 661, 1386, 662, 663, 664, 665,
	666, 667, 668, 1342, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 1389, 679,
	680, 681, 682, 1365, 686, 687, 688, 689, 0, 690,
	691, 1257, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 1354, 1355, 1356, 1357,
	0, 712, 0, 701, 703, 704, 705, 706, 1366, 707,
	1367, 1282, 708, 709, 710, 711, 702, 713, 714, 0,
	1264, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	1328, 724, 0, 0, 725, 726, 727, 793, 1351, 1388,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 0, 0, 0, 0, 739, 740, 797,
	741, 742, 743, 1261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1256, 0,
	0, 0, 0, 0, 0, 1254, 1255, 0, 0, 0,
	0, 0, 0, 0, 0, 1288, 2122, 0, 3091, 1286,
	1304, 1276, 1277, 1278, 1274, 1275, 1287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 327,
	326, 328, 329, 330, 331, 0, 332, 333, 0, 0,
	0, 0, 0, 1330, 1292, 0, 0, 334, 0, 335,
	336, 337, 1370, 338, 339, 340, 341, 342, 343, 344,
	745, 1343, 0, 345, 1350, 346, 1349, 0, 1360, 347,
	348, 349, 350, 351, 352, 353, 1294, 1329, 1258, 354,
	1390, 1391, 752, 0, 355, 356, 1336, 0, 1317, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	1371, 382, 383, 384, 1320, 1318, 1319, 1326, 1322, 1321,
	1325, 385, 386, 387, 388, 389, 1353, 390, 392, 1347,
	1346, 1263, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 1338, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 1269, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 1361, 1362, 426, 1283, 319, 0,
	0, 0, 0, 0, 427, 428, 429, 1345, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	1372, 436, 437, 438, 1358, 1359, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 1368, 0, 1293,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 1331,
	1332, 1335, 552, 1374, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 1273, 320, 322, 1373, 767, 469, 553, 470, 1340,
	1341, 0, 1299, 0, 471, 472, 474, 1375, 1333, 1376,
	473, 475, 476, 1377, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 1369, 488, 1378, 490, 491, 1379, 0, 492, 493,
	494, 495, 496, 497, 500, 1324, 1323, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 1380, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 1381, 545, 532, 1260, 533,
	323, 1382, 547, 548, 549, 550, 1284, 1334, 551, 1348,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 1383, 564, 1384,
	1363, 565, 566, 1270, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 1364, 585, 780, 586, 587,
	0, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 1344, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 1385, 627, 628, 629, 630, 631, 1271, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 1327, 658, 783, 659, 639, 640, 660,
	661, 1386, 662, 663, 664, 665, 666, 667, 668, 1342,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 1389, 679, 680, 681, 682, 1365,
	686, 687, 688, 689, 0, 690, 691, 1257, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 1354, 1355, 1356, 1357, 0, 712, 0, 701,
	703, 704, 705, 706, 1366, 707, 1367, 1282, 708, 709,
	710, 711, 702, 713, 714, 0, 1264, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 1328, 724, 0, 0,
	725, 726, 727, 793, 1351, 1388, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 0,
	0, 0, 0, 739, 740, 797, 741, 742, 743, 1261,
	0, 0, 0, 0, 3089, 0, 1304, 1276, 1277, 1278,
	1274, 1275, 1287, 0, 1256, 0, 0, 0, 0, 0,
	0, 1254, 1255, 324, 325, 327, 326, 328, 329, 330,
	331, 1288, 332, 333, 0, 1286, 0, 0, 0, 1330,
	1292, 0, 0, 334, 0, 335, 336, 337, 1370, 338,
	339, 340, 341, 342, 343, 344, 745, 1343, 0, 345,
	1350, 346, 1349, 0, 1360, 347, 348, 349, 350, 351,
	352, 353, 1294, 1329, 1258, 354, 1390, 1391, 752, 0,
	355, 356, 1336, 0, 1317, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 1371, 382, 383, 384,
	1320, 1318, 1319, 1326, 1322, 1321, 1325, 385, 386, 387,
	388, 389, 1353, 390, 392, 1347, 1346, 1263, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 1338, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 1269, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	1361, 1362, 426, 1283, 319, 0, 0, 0, 0, 0,
	427, 428, 429, 1345, 0, 0, 0, 430, 0, 431,
	432, 433, 0, 434, 435, 0, 1372, 436, 437, 438,
	1358, 1359, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 1368, 0, 1293, 449, 0, 450, 451,
	452, 453, 454, 455, 456, 1331, 1332, 1335, 552, 1374,
	457, 458, 459, 0, 460, 461, 462, 463, 464, 0,
	0, 0, 465, 466, 467, 468, 0, 1273, 320, 322,
	1373, 767, 469, 553, 470, 1340, 1341, 0, 1299, 0,
	471, 472, 474, 1375, 1333, 1376, 473, 475, 476, 1377,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 1369, 488, 1378,
	490, 491, 1379, 0, 492, 493, 494, 495, 496, 497,
	500, 1324, 1323, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1380, 527, 528, 529, 530, 531, 539,
	541, 542, 537, 538, 540, 543, 544, 546, 534, 535,
	536, 1381, 545, 532, 1260, 533, 323, 1382, 547, 548,
	549, 550, 1284, 1334, 551, 1348, 554, 555, 0, 0,
	556, 0, 557, 0, 0, 559, 560, 561, 0, 0,
	562, 563, 775, 1383, 564, 1384, 1363, 565, 566, 1270,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	0, 577, 578, 777, 579, 580, 581, 778, 582, 583,
	584, 1364, 585, 780, 586, 587, 0, 588, 589, 590,
	0, 591, 592, 593, 594, 595, 596, 597, 598, 1344,
	599, 600, 602, 601, 603, 0, 604, 0, 605, 606,
	607, 0, 0, 0, 0, 0, 608, 609, 611, 0,
	612, 613, 614, 615, 610, 616, 617, 618, 619, 620,
	621, 0, 623, 624, 622, 625, 626, 1385, 627, 628,
	629, 630, 631, 1271, 632, 0, 633, 634, 642, 643,
	644, 635, 636, 638, 645, 637, 646, 647, 648, 649,
	651, 650, 0, 653, 654, 652, 655, 656, 657, 1327,
	658, 783, 659, 639, 640, 660, 661, 1386, 662, 663,
	664, 665, 666, 667, 668, 1342, 0, 669, 0, 670,
	671, 672, 673, 674, 675, 677, 641, 678, 683, 684,
	1389, 679, 680, 681, 682, 1365, 686, 687, 688, 689,
	0, 690, 691, 1257, 685, 676, 0, 692, 693, 694,
	695, 696, 697, 0, 698, 699, 0, 700, 1354, 1355,
	1356, 1357, 0, 712, 0, 701, 703, 704, 705, 706,
	1366, 707, 1367, 1282, 708, 709, 710, 711, 702, 713,
	714, 0, 1264, 715, 716, 717, 719, 721, 722, 718,
	720, 723, 1328, 724, 0, 0, 725, 726, 727, 793,
	1351, 1388, 0, 729, 730, 728, 731, 732, 735, 733,
	734, 796, 736, 737, 738, 0, 0, 0, 0, 739,
	740, 797, 741, 742, 743, 1261, 0, 0, 0, 0,
	3077, 0, 1304, 1276, 1277, 1278, 1274, 1275, 1287, 0,
	1256, 0, 0, 0, 0, 0, 0, 1254, 1255, 324,
	325, 327, 326, 328, 329, 330, 331, 1288, 332, 333,
	0, 1286, 0, 0, 0, 1330, 1292, 0, 0, 334,
	0, 335, 336, 337, 1370, 338, 339, 340, 341, 342,
	343, 344, 745, 1343, 0, 345, 1350, 346, 1349, 0,
	1360, 347, 348, 349, 350, 351, 352, 353, 1294, 1329,
	1258, 354, 1390, 1391, 752, 0, 355, 356, 1336, 0,
	1317, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1371, 382, 383, 384, 1320, 1318, 1319, 1326,
	1322, 1321, 1325, 385, 386, 387, 388, 389, 1353, 390,
	392, 1347, 1346, 1263, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	1338, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 1269, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 1361, 1362, 426, 1283,
	319, 0, 0, 0, 0, 0, 427, 428, 429, 1345,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 1372, 436, 437, 438, 1358, 1359, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 1368,
	0, 1293, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 1331, 1332, 1335, 552, 1374, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 1273, 320, 322, 1373, 767, 469, 553,
	470, 1340, 1341, 0, 1299, 0, 471, 472, 474, 1375,
	1333, 1376, 473, 475, 476, 1377, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1369, 488, 1378, 490, 491, 1379, 0,
	492, 493, 494, 495, 496, 497, 500, 1324, 1323, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1380,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 1381, 545, 532,
	1260, 533, 323, 1382, 547, 548, 549, 550, 1284, 1334,
	551, 1348, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 1383,
	564, 1384, 1363, 565, 566, 1270, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 1364, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 1344, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 1385, 627, 628, 629, 630, 631, 1271,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 1327, 658, 783, 659, 639,
	640, 660, 661, 1386, 662, 663, 664, 665, 666, 667,
	668, 1342, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 1389, 679, 680, 681,
	682, 1365, 686, 687, 688, 689, 0, 690, 691, 1257,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 1354, 1355, 1356, 1357, 0, 712,
	0, 701, 703, 704, 705, 706, 1366, 707, 1367, 1282,
	708, 709, 710, 711, 702, 713, 714, 0, 1264, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 1328, 724,
	0, 0, 725, 726, 727, 793, 1351, 1388, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 0, 0, 0, 0, 739, 740, 797, 741, 742,
	743, 1261, 0, 0, 0, 0, 3066, 0, 1304, 1276,
	1277, 1278, 1274, 1275, 1287, 0, 1256, 0, 0, 0,
	0, 0, 0, 1254, 1255, 324, 325, 327, 326, 328,
	329, 330, 331, 1288, 332, 333, 0, 1286, 0, 0,
	0, 1330, 1292, 0, 0, 334, 0, 335, 336, 337,
	1370, 338, 339, 340, 341, 342, 343, 344, 745, 1343,
	0, 345, 1350, 346, 1349, 0, 1360, 347, 348, 349,
	350, 351, 352, 353, 1294, 1329, 1258, 354, 1390, 1391,
	752, 0, 355, 356, 1336, 0, 1317, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 1371, 382,
	383, 384, 1320, 1318, 1319, 1326, 1322, 1321, 1325, 385,
	386, 387, 388, 389, 1353, 390, 392, 1347, 1346, 1263,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 1338, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 1269,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 1361, 1362, 426, 1283, 319, 0, 0, 0,
	0, 0, 427, 428, 429, 1345, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 1372, 436,
	437, 438, 1358, 1359, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 1368, 0, 1293, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 1331, 1332, 1335,
	552, 1374, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 1273,
	320, 322, 1373, 767, 469, 553, 470, 1340, 1341, 0,
	1299, 0, 471, 472, 474, 1375, 1333, 1376, 473, 475,
	476, 1377, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 1369,
	488, 1378, 490, 491, 1379, 0, 492, 493, 494, 495,
	496, 497, 500, 1324, 1323, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 1380, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 1381, 545, 532, 1260, 533, 323, 1382,
	547, 548, 549, 550, 1284, 1334, 551, 1348, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 1383, 564, 1384, 1363, 565,
	566, 1270, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 1364, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 1344, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 1385,
	627, 628, 629, 630, 631, 1271, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 1327, 658, 783, 659, 639, 640, 660, 661, 1386,
	662, 663, 664, 665, 666, 667, 668, 1342, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 1389, 679, 680, 681, 682, 1365, 686, 687,
	688, 689, 0, 690, 691, 1257, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	1354, 1355, 1356, 1357, 0, 712, 0, 701, 703, 704,
	705, 706, 1366, 707, 1367, 1282, 708, 709, 710, 711,
	702, 713, 714, 0, 1264, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 1328, 724, 0, 0, 725, 726,
	727, 793, 1351, 1388, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 0, 0, 0,
	0, 739, 740, 797, 741, 742, 743, 1261, 0, 0,
	0, 0, 3064, 0, 3055, 3062, 1277, 1278, 1274, 1275,
	1287, 0, 1256, 0, 0, 0, 0, 0, 0, 1254,
	1255, 324, 325, 327, 326, 328, 329, 330, 331, 1288,
	332, 333, 0, 1286, 0, 0, 0, 1330, 1292, 0,
	0, 334, 0, 335, 336, 337, 1370, 338, 339, 340,
	341, 342, 343, 344, 745, 1343, 0, 345, 1350, 346,
	1349, 0, 1360, 347, 348, 349, 350, 351, 352, 353,
	1294, 1329, 1258, 354, 1390, 1391, 752, 0, 355, 356,
	1336, 0, 1317, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1371, 382, 383, 384, 1320, 1318,
	1319, 1326, 1322, 1321, 1325, 385, 386, 387, 388, 389,
	1353, 3058, 392, 1347, 1346, 1263, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 1338, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 1269, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 1361, 1362,
	426, 1283, 319, 0, 0, 0, 0, 0, 427, 428,
	429, 1345, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 1372, 436, 437, 438, 1358, 1359,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 1368, 0, 1293, 449, 0, 450, 451, 452, 453,
	454, 3059, 456, 1331, 1332, 1335, 552, 1374, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 1273, 320, 322, 1373, 767,
	469, 553, 470, 1340, 1341, 0, 1299, 0, 471, 472,
	474, 1375, 1333, 1376, 473, 475, 476, 1377, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 1369, 488, 1378, 490, 491,
	1379, 0, 492, 493, 494, 495, 496, 497, 500, 1324,
	1323, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 3060, 510, 3057, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 1380, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 1381,
	545, 532, 1260, 533, 323, 1382, 547, 548, 549, 550,
	1284, 1334, 551, 1348, 554, 555, 0, 0, 556, 0,
	557, 0, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 1383, 564, 1384, 1363, 565, 566, 1270, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 1364,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 1344, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 1385, 627, 628, 629, 630,
	631, 1271, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 3061, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 1327, 658, 783,
	659, 639, 640, 660, 661, 1386, 662, 663, 664, 665,
	666, 667, 668, 1342, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 1389, 679,
	680, 681, 682, 1365, 686, 687, 688, 689, 0, 690,
	691, 1257, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 1354, 1355, 1356, 1357,
	0, 712, 0, 701, 703, 704, 705, 706, 1366, 707,
	1367, 1282, 708, 709, 710, 711, 702, 713, 714, 0,
	1264, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	1328, 724, 0, 0, 725, 726, 727, 793, 1351, 1388,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 0, 0, 0, 0, 739, 740, 797,
	741, 3056, 743, 1261, 0, 0, 0, 0, 3052, 0,
	3055, 3062, 1277, 1278, 1274, 1275, 1287, 0, 1256, 0,
	0, 0, 0, 0, 0, 1254, 1255, 324, 325, 327,
	326, 328, 329, 330, 331, 1288, 332, 333, 0, 1286,
	0, 0, 0, 1330, 1292, 0, 0, 334, 0, 335,
	336, 337, 1370, 338, 339, 340, 341, 342, 343, 344,
	745, 1343, 0, 345, 1350, 346, 1349, 0, 1360, 347,
	348, 349, 350, 351, 352, 353, 1294, 1329, 1258, 354,
	1390, 1391, 752, 0, 355, 356, 1336, 0, 1317, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	1371, 382, 383, 384, 1320, 1318, 1319, 1326, 1322, 1321,
	1325, 385, 386, 387, 388, 389, 1353, 3058, 392, 1347,
	1346, 1263, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 1338, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 1269, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 1361, 1362, 426, 1283, 319, 0,
	0, 0, 0, 0, 427, 428, 429, 1345, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	1372, 436, 437, 438, 1358, 1359, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 1368, 0, 1293,
	449, 0, 450, 451, 452, 453, 454, 3059, 456, 1331,
	1332, 1335, 552, 1374, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 1273, 320, 322, 1373, 767, 469, 553, 470, 1340,
	1341, 0, 1299, 0, 471, 472, 474, 1375, 1333, 1376,
	473, 475, 476, 1377, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 1369, 488, 1378, 490, 491, 1379, 0, 492, 493,
	494, 495, 496, 497, 500, 1324, 1323, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 3060, 510,
	3057, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 1380, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 1381, 545, 532, 1260, 533,
	323, 1382, 547, 548, 549, 550, 1284, 1334, 551, 1348,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 1383, 564, 1384,
	1363, 565, 566, 1270, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 1364, 585, 780, 586, 587,
	0, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 1344, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 1385, 627, 628, 629, 630, 631, 1271, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 3061, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 1327, 658, 783, 659, 639, 640, 660,
	661, 1386, 662, 663, 664, 665, 666, 667, 668, 1342,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 1389, 679, 680, 681, 682, 1365,
	686, 687, 688, 689, 0, 690, 691, 1257, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 1354, 1355, 1356, 1357, 0, 712, 0, 701,
	703, 704, 705, 706, 1366, 707, 1367, 1282, 708, 709,
	710, 711, 702, 713, 714, 0, 1264, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 1328, 724, 0, 0,
	725, 726, 727, 793, 1351, 1388, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 0,
	0, 0, 0, 739, 740, 797, 741, 3056, 743, 1261,
	0, 0, 0, 0, 0, 0, 1304, 1276, 1277, 1278,
	1274, 1275, 1287, 0, 1256, 0, 0, 0, 0, 0,
	0, 1254, 1255, 324, 325, 327, 326, 328, 329, 330,
	331, 1288, 332, 333, 0, 1286, 0, 0, 0, 1330,
	1292, 0, 0, 334, 0, 335, 336, 337, 1370, 338,
	339, 340, 341, 342, 343, 344, 745, 1343, 0, 345,
	1350, 346, 1349, 0, 1360, 347, 348, 349, 350, 351,
	352, 353, 1294, 1329, 1258, 354, 1390, 1391, 752, 0,
	355, 356, 1336, 0, 1317, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 1371, 382, 383, 384,
	1320, 1318, 1319, 1326, 1322, 1321, 1325, 385, 386, 387,
	388, 389, 1353, 390, 392, 1347, 1346, 1263, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 1338, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 1269, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	1361, 1362, 426, 1283, 319, 0, 0, 0, 0, 0,
	427, 428, 429, 1345, 0, 0, 0, 430, 0, 431,
	432, 433, 0, 434, 435, 0, 1372, 436, 437, 438,
	1358, 1359, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 1368, 0, 1293, 449, 0, 450, 451,
	452, 453, 454, 455, 456, 1331, 1332, 1335, 552, 1374,
	457, 458, 459, 0, 460, 461, 462, 463, 464, 0,
	0, 0, 465, 466, 467, 468, 0, 1273, 320, 322,
	1373, 767, 469, 553, 470, 1340, 1341, 0, 1299, 0,
	471, 472, 474, 1375, 1333, 1376, 473, 475, 476, 1377,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 1369, 488, 1378,
	490, 491, 1379, 0, 492, 493, 494, 495, 496, 497,
	500, 1324, 1323, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1380, 527, 528, 529, 530, 531, 539,
	541, 542, 537, 538, 540, 543, 544, 546, 534, 535,
	536, 1381, 545, 532, 1260, 533, 323, 1382, 547, 548,
	549, 550, 1284, 1334, 551, 1348, 554, 555, 0, 0,
	556, 0, 557, 0, 0, 559, 560, 561, 0, 0,
	562, 563, 775, 1383, 564, 1384, 1363, 565, 566, 1270,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	0, 577, 578, 777, 579, 580, 581, 778, 582, 583,
	584, 1364, 585, 780, 586, 587, 0, 588, 589, 590,
	0, 591, 592, 593, 594, 595, 596, 597, 598, 1344,
	599, 600, 602, 601, 603, 0, 604, 0, 605, 606,
	607, 0, 0, 0, 0, 0, 608, 609, 611, 0,
	612, 613, 614, 615, 610, 616, 617, 618, 619, 620,
	621, 0, 623, 624, 622, 625, 626, 1385, 627, 628,
	629, 630, 631, 1271, 632, 0, 633, 634, 642, 643,
	644, 635, 636, 638, 645, 637, 646, 647, 648, 649,
	651, 650, 0, 653, 654, 652, 655, 656, 657, 1327,
	658, 783, 659, 639, 640, 660, 661, 1386, 662, 663,
	664, 665, 666, 667, 668, 1342, 0, 669, 0, 670,
	671, 672, 673, 674, 675, 677, 641, 678, 683, 684,
	1389, 679, 680, 681, 682, 1365, 686, 687, 688, 689,
	0, 690, 691, 1257, 685, 676, 0, 692, 693, 694,
	695, 696, 697, 0, 698, 699, 0, 700, 1354, 1355,
	1356, 1357, 0, 712, 0, 701, 703, 704, 705, 706,
	1366, 707, 1367, 1282, 708, 709, 710, 711, 702, 713,
	714, 0, 1264, 715, 716, 717, 719, 721, 722, 718,
	720, 723, 1328, 724, 0, 0, 725, 726, 727, 793,
	1351, 1388, 0, 729, 730, 728, 731, 732, 735, 733,
	734, 796, 736, 737, 738, 0, 0, 0, 0, 739,
	740, 797, 741, 742, 743, 1261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1256, 0, 0, 0, 0, 0, 0, 1254, 1255, 0,
	0, 0, 0, 0, 0, 2130, 0, 1288, 0, 0,
	0, 1286, 1304, 1276, 1277, 1278, 1274, 1275, 1287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 2802, 332, 333,
	0, 0, 0, 0, 0, 1330, 1292, 0, 0, 334,
	0, 335, 336, 337, 1370, 338, 339, 340, 341, 342,
	343, 344, 745, 1343, 0, 345, 1350, 346, 1349, 0,
	1360, 347, 348, 349, 350, 351, 352, 353, 1294, 1329,
	1258, 354, 1390, 1391, 752, 0, 355, 356, 1336, 0,
	1317, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1371, 382, 383, 384, 1320, 1318, 1319, 1326,
	1322, 1321, 1325, 385, 386, 387, 388, 389, 1353, 390,
	392, 1347, 1346, 1263, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	1338, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 1269, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 1361, 1362, 426, 1283,
	319, 0, 0, 0, 0, 0, 427, 428, 429, 1345,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 1372, 436, 437, 438, 1358, 1359, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 1368,
	0, 1293, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 1331, 1332, 1335, 552, 1374, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 1273, 320, 322, 1373, 767, 469, 553,
	470, 1340, 1341, 0, 1299, 0, 471, 472, 474, 1375,
	1333, 1376, 473, 475, 476, 1377, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1369, 488, 1378, 490, 491, 1379, 0,
	492, 493, 494, 495, 496, 497, 500, 1324, 1323, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1380,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 1381, 545, 532,
	1260, 533, 323, 1382, 547, 548, 549, 550, 1284, 1334,
	551, 1348, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 1383,
	564, 1384, 1363, 565, 566, 1270, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 1364, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 1344, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 1385, 627, 628, 629, 630, 631, 1271,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 1327, 658, 783, 659, 639,
	640, 660, 661, 1386, 662, 663, 664, 665, 666, 667,
	668, 1342, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 1389, 679, 680, 681,
	682, 1365, 686, 687, 688, 689, 0, 690, 691, 1257,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 1354, 1355, 1356, 1357, 0, 712,
	0, 701, 703, 704, 705, 706, 1366, 707, 1367, 1282,
	708, 709, 710, 711, 702, 713, 714, 0, 1264, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 1328, 724,
	0, 0, 725, 726, 727, 793, 1351, 1388, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 0, 0, 0, 0, 739, 740, 797, 741, 742,
	743, 1261, 0, 0, 0, 0, 2762, 0, 1304, 1276,
	1277, 1278, 1274, 1275, 1287, 0, 1256, 0, 0, 0,
	0, 0, 0, 1254, 1255, 324, 325, 327, 326, 328,
	329, 330, 331, 1288, 332, 333, 0, 1286, 0, 0,
	0, 1330, 1292, 0, 0, 334, 0, 335, 336, 337,
	1370, 338, 339, 340, 341, 342, 343, 344, 745, 1343,
	0, 345, 1350, 346, 1349, 0, 1360, 347, 348, 349,
	350, 351, 352, 353, 1294, 1329, 1258, 354, 1390, 1391,
	752, 0, 355, 356, 1336, 0, 1317, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 1371, 382,
	383, 384, 1320, 1318, 1319, 1326, 1322, 1321, 1325, 385,
	386, 387, 388, 389, 1353, 390, 392, 1347, 1346, 1263,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 1338, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 1269,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 1361, 1362, 426, 1283, 319, 0, 0, 0,
	0, 0, 427, 428, 429, 1345, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 1372, 436,
	437, 438, 1358, 1359, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 1368, 0, 1293, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 1331, 1332, 1335,
	552, 1374, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 1273,
	320, 322, 1373, 767, 469, 553, 470, 1340, 1341, 0,
	1299, 0, 471, 472, 474, 1375, 1333, 1376, 473, 475,
	476, 1377, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 1369,
	488, 1378, 490, 491, 1379, 0, 492, 493, 494, 495,
	496, 497, 500, 1324, 1323, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 1380, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 1381, 545, 532, 1260, 533, 323, 1382,
	547, 548, 549, 550, 1284, 1334, 551, 1348, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 1383, 564, 1384, 1363, 565,
	566, 1270, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 1364, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 1344, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 1385,
	627, 628, 629, 630, 631, 1271, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 1327, 658, 783, 659, 639, 640, 660, 661, 1386,
	662, 663, 664, 665, 666, 667, 668, 1342, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 1389, 679, 680, 681, 682, 1365, 686, 687,
	688, 689, 0, 690, 691, 1257, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	1354, 1355, 1356, 1357, 0, 712, 0, 701, 703, 704,
	705, 706, 1366, 707, 1367, 1282, 708, 709, 710, 711,
	702, 713, 714, 0, 1264, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 1328, 724, 0, 0, 725, 726,
	727, 793, 1351, 1388, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 0, 0, 0,
	0, 739, 740, 797, 741, 742, 743, 1261, 0, 0,
	0, 0, 2728, 0, 1304, 1276, 1277, 1278, 1274, 1275,
	1287, 0, 1256, 0, 0, 0, 0, 0, 0, 1254,
	1255, 324, 325, 327, 326, 328, 329, 330, 331, 1288,
	332, 333, 0, 1286, 0, 0, 0, 1330, 1292, 0,
	0, 334, 0, 335, 336, 337, 1370, 338, 339, 340,
	341, 342, 343, 344, 745, 1343, 0, 345, 1350, 346,
	1349, 0, 1360, 347, 348, 349, 350, 351, 352, 353,
	1294, 1329, 1258, 354, 1390, 1391, 752, 0, 355, 356,
	1336, 0, 1317, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1371, 382, 383, 384, 1320, 1318,
	1319, 1326, 1322, 1321, 1325, 385, 386, 387, 388, 389,
	1353, 390, 392, 1347, 1346, 1263, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 1338, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 1269, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 1361, 1362,
	426, 1283, 319, 0, 0, 0, 0, 0, 427, 428,
	429, 1345, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 1372, 436, 437, 438, 1358, 1359,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 1368, 0, 1293, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 1331, 1332, 1335, 552, 1374, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 1273, 320, 322, 1373, 767,
	469, 553, 470, 1340, 1341, 0, 1299, 0, 471, 472,
	474, 1375, 1333, 1376, 473, 475, 476, 1377, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 1369, 488, 1378, 490, 491,
	1379, 0, 492, 493, 494, 495, 496, 497, 500, 1324,
	1323, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 1380, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 1381,
	545, 532, 1260, 533, 323, 1382, 547, 548, 549, 550,
	1284, 1334, 551, 1348, 554, 555, 0, 0, 556, 0,
	557, 0, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 1383, 564, 1384, 1363, 565, 566, 1270, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 1364,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 1344, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 1385, 627, 628, 629, 630,
	631, 1271, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 1327, 658, 783,
	659, 639, 640, 660, 661, 1386, 662, 663, 664, 665,
	666, 667, 668, 1342, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 1389, 679,
	680, 681, 682, 1365, 686, 687, 688, 689, 0, 690,
	691, 1257, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 1354, 1355, 1356, 1357,
	0, 712, 0, 701, 703, 704, 705, 706, 1366, 707,
	1367, 1282, 708, 709, 710, 711, 702, 713, 714, 0,
	1264, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	1328, 724, 0, 0, 725, 726, 727, 793, 1351, 1388,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 0, 0, 0, 0, 739, 740, 797,
	741, 742, 743, 1261, 0, 0, 0, 0, 1957, 0,
	1304, 1276, 1277, 1278, 1274, 1275, 1287, 0, 1256, 0,
	0, 0, 0, 0, 0, 1254, 1255, 324, 325, 327,
	326, 328, 329, 330, 331, 1288, 332, 333, 0, 1286,
	0, 0, 0, 1330, 1292, 0, 0, 334, 0, 335,
	336, 337, 1370, 338, 339, 340, 341, 342, 343, 344,
	745, 1343, 0, 345, 1350, 346, 1349, 0, 1360, 347,
	348, 349, 350, 351, 352, 353, 1294, 1329, 1258, 354,
	1390, 1391, 752, 0, 355, 356, 1336, 0, 1317, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	1371, 382, 383, 384, 1320, 1318, 1319, 1326, 1322, 1321,
	1325, 385, 386, 387, 388, 389, 1353, 390, 392, 1347,
	1346, 1263, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 1338, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 1269, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 1361, 1362, 426, 1283, 319, 0,
	0, 0, 0, 0, 427, 428, 429, 1345, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	1372, 436, 437, 438, 1358, 1359, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 1368, 0, 1293,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 1331,
	1332, 1335, 552, 1374, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 1273, 320, 322, 1373, 767, 469, 553, 470, 1340,
	1341, 0, 1299, 0, 471, 472, 474, 1375, 1333, 1376,
	473, 475, 476, 1377, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 1369, 488, 1378, 490, 491, 1379, 0, 492, 493,
	494, 495, 496, 497, 500, 1324, 1323, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 1380, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 1381, 545, 532, 1260, 533,
	323, 1382, 547, 548, 549, 550, 1284, 1334, 551, 1348,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 1383, 564, 1384,
	1363, 565, 566, 1270, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 1364, 585, 780, 586, 587,
	0, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 1344, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 1385, 627, 628, 629, 630, 631, 1271, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 1327, 658, 783, 659, 639, 640, 660,
	661, 1386, 662, 663, 664, 665, 666, 667, 668, 1342,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 1389, 679, 680, 681, 682, 1365,
	686, 687, 688, 689, 0, 690, 691, 1257, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 1354, 1355, 1356, 1357, 0, 712, 0, 701,
	703, 704, 705, 706, 1366, 707, 1367, 1282, 708, 709,
	710, 711, 702, 713, 714, 0, 1264, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 1328, 724, 0, 0,
	725, 726, 727, 793, 1351, 1388, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 0,
	0, 0, 0, 739, 740, 797, 741, 742, 743, 1261,
	0, 0, 0, 0, 1883, 0, 1304, 1276, 1277, 1278,
	1274, 1275, 1287, 0, 1256, 0, 0, 0, 0, 0,
	0, 1254, 1255, 324, 325, 327, 326, 328, 329, 330,
	331, 1288, 332, 333, 0, 1286, 0, 0, 0, 1330,
	1292, 0, 0, 334, 0, 335, 336, 337, 1370, 338,
	339, 340, 341, 342, 343, 344, 745, 1343, 0, 345,
	1350, 346, 1349, 0, 1360, 347, 348, 349, 350, 351,
	352, 353, 1294, 1329, 1258, 354, 1390, 1391, 752, 0,
	355, 356, 1336, 0, 1317, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 1371, 382, 383, 384,
	1320, 1318, 1319, 1326, 1322, 1321, 1325, 385, 386, 387,
	388, 389, 1353, 390, 392, 1347, 1346, 1263, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 1338, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 1269, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	1361, 1362, 426, 1283, 319, 0, 0, 0, 0, 0,
	427, 428, 429, 1345, 0, 0, 0, 430, 0, 431,
	432, 433, 0, 434, 435, 0, 1372, 436, 437, 438,
	1358, 1359, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 1368, 0, 1293, 449, 0, 450, 451,
	452, 453, 454, 455, 456, 1331, 1332, 1335, 552, 1374,
	457, 458, 459, 0, 460, 461, 462, 463, 464, 0,
	0, 0, 465, 466, 467, 468, 0, 1273, 320, 322,
	1373, 767, 469, 553, 470, 1340, 1341, 0, 1299, 0,
	471, 472, 474, 1375, 1333, 1376, 473, 475, 476, 1377,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 1369, 488, 1378,
	490, 491, 1379, 0, 492, 493, 494, 495, 496, 497,
	500, 1324, 1323, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1380, 527, 528, 529, 530, 531, 539,
	541, 542, 537, 538, 540, 543, 544, 546, 534, 535,
	536, 1381, 545, 532, 1260, 533, 323, 1382, 547, 548,
	549, 550, 1284, 1334, 551, 1348, 554, 555, 0, 0,
	556, 0, 557, 0, 0, 559, 560, 561, 0, 0,
	562, 563, 775, 1383, 564, 1384, 1363, 565, 566, 1270,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	0, 577, 578, 777, 579, 580, 581, 778, 582, 583,
	584, 1364, 585, 780, 586, 587, 0, 588, 589, 590,
	0, 591, 592, 593, 594, 595, 596, 597, 598, 1344,
	599, 600, 602, 601, 603, 0, 604, 0, 605, 606,
	607, 0, 0, 0, 0, 0, 608, 609, 611, 0,
	612, 613, 614, 615, 610, 616, 617, 618, 619, 620,
	621, 0, 623, 624, 622, 625, 626, 1385, 627, 628,
	629, 630, 631, 1271, 632, 0, 633, 634, 642, 643,
	644, 635, 636, 638, 645, 637, 646, 647, 648, 649,
	651, 650, 0, 653, 654, 652, 655, 656, 657, 1327,
	658, 783, 659, 639, 640, 660, 661, 1386, 662, 663,
	664, 665, 666, 667, 668, 1342, 0, 669, 0, 670,
	671, 672, 673, 674, 675, 677, 641, 678, 683, 684,
	1389, 679, 680, 681, 682, 1365, 686, 687, 688, 689,
	0, 690, 691, 1257, 685, 676, 0, 692, 693, 694,
	695, 696, 697, 0, 698, 699, 0, 700, 1354, 1355,
	1356, 1357, 0, 712, 0, 701, 703, 704, 705, 706,
	1366, 707, 1367, 1282, 708, 709, 710, 711, 702, 713,
	714, 0, 1264, 715, 716, 717, 719, 721, 722, 718,
	720, 723, 1328, 724, 0, 0, 725, 726, 727, 793,
	1351, 1388, 0, 729, 730, 728, 731, 732, 735, 733,
	734, 796, 736, 737, 738, 0, 0, 0, 0, 739,
	740, 797, 741, 742, 743, 1261, 0, 0, 0, 0,
	1878, 0, 1304, 1276, 1277, 1278, 1274, 1275, 1287, 0,
	1256, 0, 0, 0, 0, 0, 0, 1254, 1255, 324,
	325, 327, 326, 328, 329, 330, 331, 1288, 332, 333,
	0, 1286, 0, 0, 0, 1330, 1292, 0, 0, 334,
	0, 335, 336, 337, 1370, 338, 339, 340, 341, 342,
	343, 344, 745, 1343, 0, 345, 1350, 346, 1349, 0,
	1360, 347, 348, 349, 350, 351, 352, 353, 1294, 1329,
	1258, 354, 1390, 1391, 752, 0, 355, 356, 1336, 0,
	1317, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1371, 382, 383, 384, 1320, 1318, 1319, 1326,
	1322, 1321, 1325, 385, 386, 387, 388, 389, 1353, 390,
	392, 1347, 1346, 1263, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	1338, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 1269, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 1361, 1362, 426, 1283,
	319, 0, 0, 0, 0, 0, 427, 428, 429, 1345,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 1372, 436, 437, 438, 1358, 1359, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 1368,
	0, 1293, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 1331, 1332, 1335, 552, 1374, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 1273, 320, 322, 1373, 767, 469, 553,
	470, 1340, 1341, 0, 1299, 0, 471, 472, 474, 1375,
	1333, 1376, 473, 475, 476, 1377, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1369, 488, 1378, 490, 491, 1379, 0,
	492, 493, 494, 495, 496, 497, 500, 1324, 1323, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1380,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 1381, 545, 532,
	1260, 533, 323, 1382, 547, 548, 549, 550, 1284, 1334,
	551, 1348, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 1383,
	564, 1384, 1363, 565, 566, 1270, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 1364, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 1344, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 1385, 627, 628, 629, 630, 631, 1271,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 1327, 658, 783, 659, 639,
	640, 660, 661, 1386, 662, 663, 664, 665, 666, 667,
	668, 1342, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 1389, 679, 680, 681,
	682, 1365, 686, 687, 688, 689, 0, 690, 691, 1257,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 1354, 1355, 1356, 1357, 0, 712,
	0, 701, 703, 704, 705, 706, 1366, 707, 1367, 1282,
	708, 709, 710, 711, 702, 713, 714, 0, 1264, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 1328, 724,
	0, 0, 725, 726, 727, 793, 1351, 1388, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 0, 0, 0, 0, 739, 740, 797, 741, 742,
	743, 1261, 0, 0, 0, 0, 1864, 0, 1304, 1276,
	1277, 1278, 1274, 1275, 1287, 0, 1256, 0, 0, 0,
	0, 0, 0, 1254, 1255, 324, 325, 327, 326, 328,
	329, 330, 331, 1288, 332, 333, 0, 1286, 0, 0,
	0, 1330, 1292, 0, 0, 334, 0, 335, 336, 337,
	1370, 338, 339, 340, 341, 342, 343, 344, 745, 1343,
	0, 345, 1350, 346, 1349, 0, 1360, 347, 348, 349,
	350, 351, 352, 353, 1294, 1329, 1258, 354, 1390, 1391,
	752, 0, 355, 356, 1336, 0, 1317, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 1371, 382,
	383, 384, 1320, 1318, 1319, 1326, 1322, 1321, 1325, 385,
	386, 387, 388, 389, 1353, 390, 392, 1347, 1346, 1263,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 1338, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 1269,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 1361, 1362, 426, 1283, 319, 0, 0, 0,
	0, 0, 427, 428, 429, 1345, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 1372, 436,
	437, 438, 1358, 1359, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 1368, 0, 1293, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 1331, 1332, 1335,
	552, 1374, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 1273,
	320, 322, 1373, 767, 469, 553, 470, 1340, 1341, 0,
	1299, 0, 471, 472, 474, 1375, 1333, 1376, 473, 475,
	476, 1377, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 1369,
	488, 1378, 490, 491, 1379, 0, 492, 493, 494, 495,
	496, 497, 500, 1324, 1323, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 1380, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 1381, 545, 532, 1260, 533, 323, 1382,
	547, 548, 549, 550, 1284, 1334, 551, 1348, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 1383, 564, 1384, 1363, 565,
	566, 1270, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 1364, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 1344, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 1385,
	627, 628, 629, 630, 631, 1271, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 1327, 658, 783, 659, 639, 640, 660, 661, 1386,
	662, 663, 664, 665, 666, 667, 668, 1342, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 1389, 679, 680, 681, 682, 1365, 686, 687,
	688, 689, 0, 690, 691, 1257, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	1354, 1355, 1356, 1357, 0, 712, 0, 701, 703, 704,
	705, 706, 1366, 707, 1367, 1282, 708, 709, 710, 711,
	702, 713, 714, 0, 1264, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 1328, 724, 0, 0, 725, 726,
	727, 793, 1351, 1388, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 0, 0, 0,
	0, 739, 740, 797, 741, 742, 743, 1261, 0, 0,
	0, 0, 1859, 0, 1304, 1276, 1277, 1278, 1274, 1275,
	1287, 0, 1256, 0, 0, 0, 0, 0, 0, 1254,
	1255, 324, 325, 327, 326, 328, 329, 330, 331, 1288,
	332, 333, 0, 1286, 0, 0, 0, 1330, 1292, 0,
	0, 334, 0, 335, 336, 337, 1370, 338, 339, 340,
	341, 342, 343, 344, 745, 1343, 0, 345, 1350, 346,
	1349, 0, 1360, 347, 348, 349, 350, 351, 352, 353,
	1294, 1329, 1258, 354, 1390, 1391, 752, 0, 355, 356,
	1336, 0, 1317, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1371, 382, 383, 384, 1320, 1318,
	1319, 1326, 1322, 1321, 1325, 385, 386, 387, 388, 389,
	1353, 390, 392, 1347, 1346, 1263, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 1338, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 1269, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 1361, 1362,
	426, 1283, 319, 0, 0, 0, 0, 0, 427, 428,
	429, 1345, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 1372, 436, 437, 438, 1358, 1359,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 1368, 0, 1293, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 1331, 1332, 1335, 552, 1374, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 1273, 320, 322, 1373, 767,
	469, 553, 470, 1340, 1341, 0, 1299, 0, 471, 472,
	474, 1375, 1333, 1376, 473, 475, 476, 1377, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 1369, 488, 1378, 490, 491,
	1379, 0, 492, 493, 494, 495, 496, 497, 500, 1324,
	1323, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 1380, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 1381,
	545, 532, 1260, 533, 323, 1382, 547, 548, 549, 550,
	1284, 1334, 551, 1348, 554, 555, 0, 0, 556, 0,
	557, 0, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 1383, 564, 1384, 1363, 565, 566, 1270, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 1364,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 1344, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 1385, 627, 628, 629, 630,
	631, 1271, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 1327, 658, 783,
	659, 639, 640, 660, 661, 1386, 662, 663, 664, 665,
	666, 667, 668, 1342, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 1389, 679,
	680, 681, 682, 1365, 686, 687, 688, 689, 0, 690,
	691, 1257, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 1354, 1355, 1356, 1357,
	0, 712, 0, 701, 703, 704, 705, 706, 1366, 707,
	1367, 1282, 708, 709, 710, 711, 702, 713, 714, 0,
	1264, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	1328, 724, 0, 0, 725, 726, 727, 793, 1351, 1388,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 0, 0, 0, 0, 739, 740, 797,
	741, 742, 743, 1261, 0, 0, 0, 0, 1765, 0,
	1304, 1276, 1277, 1278, 1274, 1275, 1287, 0, 1256, 0,
	0, 0, 0, 0, 0, 1254, 1255, 324, 325, 327,
	326, 328, 329, 330, 331, 1288, 332, 333, 0, 1286,
	0, 0, 0, 1330, 1292, 0, 0, 334, 0, 335,
	336, 337, 1370, 338, 339, 340, 341, 342, 343, 344,
	745, 1343, 0, 345, 1350, 346, 1349, 0, 1360, 347,
	348, 349, 350, 351, 352, 353, 1294, 1329, 1258, 354,
	1390, 1391, 752, 0, 355, 356, 1336, 0, 1317, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	1371, 382, 383, 384, 1320, 1318, 1319, 1326, 1322, 1321,
	1325, 385, 386, 387, 388, 389, 1353, 390, 392, 1347,
	1346, 1263, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 1338, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 1269, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 1361, 1362, 426, 1283, 319, 0,
	0, 0, 0, 0, 427, 428, 429, 1345, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	1372, 436, 437, 438, 1358, 1359, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 1368, 0, 1293,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 1764,
	1332, 1335, 552, 1374, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 1273, 320, 322, 1373, 767, 469, 553, 470, 1340,
	1341, 0, 1299, 0, 471, 472, 474, 1375, 1333, 1376,
	473, 475, 476, 1377, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 1369, 488, 1378, 490, 491, 1379, 0, 492, 493,
	494, 495, 496, 497, 500, 1324, 1323, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 1380, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 1381, 545, 532, 1260, 533,
	323, 1382, 547, 548, 549, 550, 1284, 1334, 551, 1348,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 1383, 564, 1384,
	1363, 565, 566, 1270, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 1364, 585, 780, 586, 587,
	0, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 1344, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 1385, 627, 628, 629, 630, 631, 1271, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 1327, 658, 783, 659, 639, 640, 660,
	661, 1386, 662, 663, 664, 665, 666, 667, 668, 1342,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 1389, 679, 680, 681, 682, 1365,
	686, 687, 688, 689, 0, 690, 691, 1257, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 1354, 1355, 1356, 1357, 0, 712, 0, 701,
	703, 704, 705, 706, 1366, 707, 1367, 1282, 708, 709,
	710, 711, 702, 713, 714, 0, 1264, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 1328, 724, 0, 0,
	725, 726, 727, 793, 1351, 1388, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 0,
	0, 0, 0, 739, 740, 797, 741, 742, 743, 1261,
	0, 0, 0, 0, 1759, 0, 1304, 1276, 1277, 1278,
	1274, 1275, 1287, 0, 1256, 0, 0, 0, 0, 0,
	0, 1254, 1255, 324, 325, 327, 326, 328, 329, 330,
	331, 1288, 332, 333, 0, 1286, 0, 0, 0, 1330,
	1292, 0, 0, 334, 0, 335, 336, 337, 1370, 338,
	339, 340, 341, 342, 343, 344, 745, 1343, 0, 345,
	1350, 346, 1349, 0, 1360, 347, 348, 349, 350, 351,
	352, 353, 1294, 1329, 1258, 354, 1390, 1391, 752, 0,
	355, 356, 1336, 0, 1317, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 1371, 382, 383, 384,
	1320, 1318, 1319, 1326, 1322, 1321, 1325, 385, 386, 387,
	388, 389, 1353, 390, 392, 1347, 1346, 1263, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 1338, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 1269, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	1361, 1362, 426, 1283, 319, 0, 0, 0, 0, 0,
	427, 428, 429, 1345, 0, 0, 0, 430, 0, 431,
	432, 433, 0, 434, 435, 0, 1372, 436, 437, 438,
	1358, 1359, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 1368, 0, 1293, 449, 0, 450, 451,
	452, 453, 454, 455, 456, 1758, 1332, 1335, 552, 1374,
	457, 458, 459, 0, 460, 461, 462, 463, 464, 0,
	0, 0, 465, 466, 467, 468, 0, 1273, 320, 322,
	1373, 767, 469, 553, 470, 1340, 1341, 0, 1299, 0,
	471, 472, 474, 1375, 1333, 1376, 473, 475, 476, 1377,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 1369, 488, 1378,
	490, 491, 1379, 0, 492, 493, 494, 495, 496, 497,
	500, 1324, 1323, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1380, 527, 528, 529, 530, 531, 539,
	541, 542, 537, 538, 540, 543, 544, 546, 534, 535,
	536, 1381, 545, 532, 1260, 533, 323, 1382, 547, 548,
	549, 550, 1284, 1334, 551, 1348, 554, 555, 0, 0,
	556, 0, 557, 0, 0, 559, 560, 561, 0, 0,
	562, 563, 775, 1383, 564, 1384, 1363, 565, 566, 1270,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	0, 577, 578, 777, 579, 580, 581, 778, 582, 583,
	584, 1364, 585, 780, 586, 587, 0, 588, 589, 590,
	0, 591, 592, 593, 594, 595, 596, 597, 598, 1344,
	599, 600, 602, 601, 603, 0, 604, 0, 605, 606,
	607, 0, 0, 0, 0, 0, 608, 609, 611, 0,
	612, 613, 614, 615, 610, 616, 617, 618, 619, 620,
	621, 0, 623, 624, 622, 625, 626, 1385, 627, 628,
	629, 630, 631, 1271, 632, 0, 633, 634, 642, 643,
	644, 635, 636, 638, 645, 637, 646, 647, 648, 649,
	651, 650, 0, 653, 654, 652, 655, 656, 657, 1327,
	658, 783, 659, 639, 640, 660, 661, 1386, 662, 663,
	664, 665, 666, 667, 668, 1342, 0, 669, 0, 670,
	671, 672, 673, 674, 675, 677, 641, 678, 683, 684,
	1389, 679, 680, 681, 682, 1365, 686, 687, 688, 689,
	0, 690, 691, 1257, 685, 676, 0, 692, 693, 694,
	695, 696, 697, 0, 698, 699, 0, 700, 1354, 1355,
	1356, 1357, 0, 712, 0, 701, 703, 704, 705, 706,
	1366, 707, 1367, 1282, 708, 709, 710, 711, 702, 713,
	714, 0, 1264, 715, 716, 717, 719, 721, 722, 718,
	720, 723, 1328, 724, 0, 0, 725, 726, 727, 793,
	1351, 1388, 0, 729, 730, 728, 731, 732, 735, 733,
	734, 796, 736, 737, 738, 0, 0, 0, 0, 739,
	740, 797, 741, 742, 743, 1261, 0, 0, 0, 0,
	1752, 0, 1304, 1276, 1277, 1278, 1274, 1275, 1287, 0,
	1256, 0, 0, 0, 0, 0, 0, 1254, 1255, 324,
	325, 327, 326, 328, 329, 330, 331, 1288, 332, 333,
	0, 1286, 0, 0, 0, 1330, 1292, 0, 0, 334,
	0, 335, 336, 337, 1370, 338, 339, 340, 341, 342,
	343, 344, 745, 1343, 0, 345, 1350, 346, 1349, 0,
	1360, 347, 348, 349, 350, 351, 352, 353, 1294, 1329,
	1258, 354, 1390, 1391, 752, 0, 355, 356, 1336, 0,
	1317, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1371, 382, 383, 384, 1320, 1318, 1319, 1326,
	1322, 1321, 1325, 385, 386, 387, 388, 389, 1353, 390,
	392, 1347, 1346, 1263, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	1338, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 1269, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 1361, 1362, 426, 1283,
	319, 0, 0, 0, 0, 0, 427, 428, 429, 1345,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 1372, 436, 437, 438, 1358, 1359, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 1368,
	0, 1293, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 1331, 1332, 1335, 552, 1374, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 1273, 320, 322, 1373, 767, 469, 553,
	470, 1340, 1341, 0, 1299, 0, 471, 472, 474, 1375,
	1333, 1376, 473, 475, 476, 1377, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1369, 488, 1378, 490, 491, 1379, 0,
	492, 493, 494, 495, 496, 497, 500, 1324, 1323, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1380,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 1381, 545, 532,
	1260, 533, 323, 1382, 547, 548, 549, 550, 1284, 1334,
	551, 1348, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 1383,
	564, 1384, 1363, 565, 566, 1270, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 1364, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 1344, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 1385, 627, 628, 629, 630, 631, 1271,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 1327, 658, 783, 659, 639,
	640, 660, 661, 1386, 662, 663, 664, 665, 666, 667,
	668, 1342, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 1389, 679, 680, 681,
	682, 1365, 686, 687, 688, 689, 0, 690, 691, 1257,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 1354, 1355, 1356, 1357, 0, 712,
	0, 701, 703, 704, 705, 706, 1366, 707, 1367, 1282,
	708, 709, 710, 711, 702, 713, 714, 0, 1264, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 1328, 724,
	0, 0, 725, 726, 727, 793, 1351, 1388, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 0, 0, 0, 0, 739, 740, 797, 741, 742,
	743, 1261, 0, 0, 0, 0, 1725, 0, 1304, 1276,
	1277, 1278, 1274, 1275, 1287, 0, 1256, 0, 0, 0,
	0, 0, 0, 1254, 1255, 324, 325, 327, 326, 328,
	329, 330, 331, 1288, 332, 333, 0, 1286, 0, 0,
	0, 1330, 1292, 0, 0, 334, 0, 335, 336, 337,
	1370, 338, 339, 340, 341, 342, 343, 344, 745, 1343,
	0, 345, 1350, 346, 1349, 0, 1360, 347, 348, 349,
	350, 351, 352, 353, 1294, 1329, 1258, 354, 1390, 1391,
	752, 0, 355, 356, 1336, 0, 1317, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 1371, 382,
	383, 384, 1320, 1318, 1319, 1326, 1322, 1321, 1325, 385,
	386, 387, 388, 389, 1353, 390, 392, 1347, 1346, 1263,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 1338, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 1269,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 1361, 1362, 426, 1283, 319, 0, 0, 0,
	0, 0, 427, 428, 429, 1345, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 1372, 436,
	437, 438, 1358, 1359, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 1368, 0, 1293, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 1331, 1332, 1335,
	552, 1374, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 1273,
	320, 322, 1373, 767, 469, 553, 470, 1340, 1341, 0,
	1299, 0, 471, 472, 474, 1375, 1333, 1376, 473, 475,
	476, 1377, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 1369,
	488, 1378, 490, 491, 1379, 0, 492, 493, 494, 495,
	496, 497, 500, 1324, 1323, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 1380, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 1381, 545, 532, 1260, 533, 323, 1382,
	547, 548, 549, 550, 1284, 1334, 551, 1348, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 1383, 564, 1384, 1363, 565,
	566, 1270, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 1364, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 1344, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 1385,
	627, 628, 629, 630, 631, 1271, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 1327, 658, 783, 659, 639, 640, 660, 661, 1386,
	662, 663, 664, 665, 666, 667, 668, 1342, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 1389, 679, 680, 681, 682, 1365, 686, 687,
	688, 689, 0, 690, 691, 1257, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	1354, 1355, 1356, 1357, 0, 712, 0, 701, 703, 704,
	705, 706, 1366, 707, 1367, 1282, 708, 709, 710, 711,
	702, 713, 714, 0, 1264, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 1328, 724, 0, 0, 725, 726,
	727, 793, 1351, 1388, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 0, 0, 0,
	0, 739, 740, 797, 741, 742, 743, 1261, 0, 0,
	0, 0, 1697, 0, 1304, 1276, 1277, 1278, 1274, 1275,
	1287, 0, 1256, 0, 0, 0, 0, 0, 0, 1254,
	1255, 324, 325, 327, 326, 328, 329, 330, 331, 1288,
	332, 333, 0, 1286, 0, 0, 0, 1330, 1292, 0,
	0, 334, 0, 335, 336, 337, 1370, 338, 339, 340,
	341, 342, 343, 344, 745, 1343, 0, 345, 1350, 346,
	1349, 0, 1360, 347, 348, 349, 350, 351, 352, 353,
	1294, 1329, 1258, 354, 1390, 1391, 752, 0, 355, 356,
	1336, 0, 1317, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1371, 382, 383, 384, 1320, 1318,
	1319, 1326, 1322, 1321, 1325, 385, 386, 387, 388, 389,
	1353, 390, 392, 1347, 1346, 1263, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 1338, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 1269, 414, 415, 416, 418,
	420, 417, 1701, 421, 422, 423, 424, 425, 1361, 1362,
	426, 1283, 319, 0, 0, 0, 0, 0, 427, 428,
	429, 1345, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 1372, 436, 437, 438, 1358, 1359,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 1368, 0, 1293, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 1331, 1332, 1335, 552, 1374, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 1273, 320, 322, 1373, 767,
	469, 553, 470, 1340, 1341, 0, 1299, 0, 471, 472,
	474, 1375, 1333, 1376, 473, 475, 476, 1377, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 1369, 488, 1378, 490, 491,
	1379, 0, 492, 493, 494, 495, 496, 497, 500, 1324,
	1323, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 1380, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 1381,
	545, 532, 1260, 533, 323, 1382, 547, 548, 549, 550,
	1284, 1334, 551, 1348, 554, 555, 0, 0, 556, 0,
	557, 0, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 1383, 564, 1384, 1363, 565, 566, 1270, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 1364,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 1344, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 1702, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 1385, 627, 628, 629, 630,
	631, 1271, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 1327, 658, 783,
	659, 639, 640, 660, 661, 1386, 662, 663, 664, 665,
	666, 667, 668, 1342, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 1389, 679,
	680, 681, 682, 1365, 686, 687, 688, 689, 0, 690,
	691, 1257, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 1700, 699, 0, 700, 1354, 1355, 1356, 1357,
	0, 712, 0, 701, 703, 704, 705, 706, 1366, 707,
	1367, 1282, 708, 709, 710, 711, 702, 713, 714, 0,
	1264, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	1328, 724, 0, 0, 725, 726, 727, 793, 1351, 1388,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 0, 0, 0, 0, 739, 740, 797,
	741, 742, 743, 1261, 0, 0, 0, 0, 1525, 0,
	1304, 1276, 1277, 1278, 1274, 1275, 1287, 0, 1256, 0,
	0, 0, 0, 0, 0, 1254, 1255, 324, 325, 327,
	326, 328, 329, 330, 331, 1288, 332, 333, 0, 1286,
	0, 0, 0, 1330, 1292, 0, 0, 334, 0, 335,
	336, 337, 1370, 338, 339, 340, 341, 342, 343, 344,
	745, 1343, 0, 345, 1350, 346, 1349, 0, 1360, 347,
	348, 349, 350, 351, 352, 353, 1294, 1329, 1258, 354,
	1390, 1391, 752, 0, 355, 356, 1336, 0, 1317, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	1371, 382, 383, 384, 1320, 1318, 1319, 1326, 1322, 1321,
	1325, 385, 386, 387, 388, 389, 1353, 390, 392, 1347,
	1346, 1263, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 1338, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 1269, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 1361, 1362, 426, 1283, 319, 0,
	0, 0, 0, 0, 427, 428, 429, 1345, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	1372, 436, 437, 438, 1358, 1359, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 1368, 0, 1293,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 1331,
	1332, 1335, 552, 1374, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 1273, 320, 322, 1373, 767, 469, 553, 470, 1340,
	1341, 0, 1299, 0, 471, 472, 474, 1375, 1333, 1376,
	473, 475, 476, 1377, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 1369, 488, 1378, 490, 491, 1379, 0, 492, 493,
	494, 495, 496, 497, 500, 1324, 1323, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 1380, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 1381, 545, 532, 1260, 533,
	323, 1382, 547, 548, 549, 550, 1284, 1334, 551, 1348,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 1383, 564, 1384,
	1363, 565, 566, 1270, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 1364, 585, 780, 586, 587,
	0, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 1344, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 1385, 627, 628, 629, 630, 631, 1271, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 1327, 658, 783, 659, 639, 640, 660,
	661, 1386, 662, 663, 664, 665, 666, 667, 668, 1342,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 1389, 679, 680, 681, 682, 1365,
	686, 687, 688, 689, 0, 690, 691, 1257, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 1354, 1355, 1356, 1357, 0, 712, 0, 701,
	703, 704, 705, 706, 1366, 707, 1367, 1282, 708, 709,
	710, 711, 702, 713, 714, 0, 1264, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 1328, 724, 0, 0,
	725, 726, 727, 793, 1351, 1388, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 0,
	0, 0, 0, 739, 740, 797, 741, 742, 743, 1261,
	0, 0, 0, 0, 0, 0, 1304, 1276, 1277, 1278,
	1274, 1275, 1287, 0, 1256, 0, 0, 0, 0, 0,
	0, 1254, 1255, 324, 325, 327, 326, 328, 329, 330,
	331, 1288, 332, 333, 0, 1286, 0, 0, 0, 1330,
	1292, 0, 0, 334, 0, 335, 336, 337, 1370, 338,
	339, 340, 341, 342, 343, 344, 745, 1343, 0, 345,
	1350, 346, 1349, 0, 1360, 347, 348, 349, 350, 351,
	352, 353, 1294, 1329, 1258, 354, 1390, 1391, 752, 0,
	355, 356, 1336, 0, 1317, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 1371, 382, 383, 384,
	1320, 1318, 1319, 1326, 1322, 1321, 1325, 385, 386, 387,
	388, 389, 1353, 390, 392, 1347, 1346, 1263, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 1338, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 1269, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	1361, 1362, 426, 1283, 319, 0, 0, 0, 0, 0,
	427, 428, 429, 1345, 0, 0, 0, 430, 0, 431,
	432, 433, 0, 434, 435, 0, 1372, 436, 437, 438,
	1358, 1359, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 1368, 0, 1293, 449, 0, 450, 451,
	452, 453, 454, 455, 456, 1331, 1332, 1335, 552, 1374,
	457, 458, 459, 0, 460, 461, 462, 463, 464, 0,
	0, 0, 465, 466, 467, 468, 0, 1273, 320, 322,
	1373, 767, 469, 553, 470, 1340, 1341, 0, 1299, 0,
	471, 472, 474, 1375, 1333, 1376, 473, 475, 476, 1377,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 1369, 488, 1378,
	490, 491, 1379, 0, 492, 493, 494, 495, 496, 497,
	500, 1324, 1323, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1380, 527, 528, 529, 530, 531, 539,
	541, 542, 537, 538, 540, 543, 544, 546, 534, 535,
	536, 1381, 545, 532, 1260, 533, 323, 1382, 547, 548,
	549, 550, 1284, 1334, 551, 1348, 554, 555, 0, 0,
	556, 0, 557, 0, 0, 559, 560, 561, 0, 0,
	562, 563, 775, 1383, 564, 1384, 1363, 565, 566, 1270,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	0, 577, 578, 777, 579, 580, 581, 778, 582, 583,
	584, 1364, 585, 780, 586, 587, 0, 588, 589, 590,
	0, 591, 592, 593, 594, 595, 596, 597, 598, 1344,
	599, 600, 602, 601, 603, 0, 604, 0, 605, 606,
	607, 0, 0, 0, 0, 0, 608, 609, 611, 0,
	612, 613, 614, 615, 610, 616, 617, 618, 619, 620,
	621, 0, 623, 624, 622, 625, 626, 1385, 627, 628,
	629, 630, 631, 1271, 632, 0, 633, 634, 642, 643,
	644, 635, 636, 638, 645, 637, 646, 647, 648, 649,
	651, 650, 0, 653, 654, 652, 655, 656, 657, 1327,
	658, 783, 659, 639, 640, 660, 661, 1386, 662, 663,
	664, 665, 666, 667, 668, 1342, 0, 669, 0, 670,
	671, 672, 673, 674, 675, 677, 641, 678, 683, 684,
	1389, 679, 680, 681, 682, 1365, 686, 687, 688, 689,
	0, 690, 691, 1257, 685, 676, 0, 692, 693, 694,
	695, 696, 697, 0, 698, 699, 0, 700, 1354, 1355,
	1356, 1357, 0, 712, 0, 701, 703, 704, 705, 706,
	1366, 707, 1367, 1282, 708, 709, 710, 711, 702, 713,
	714, 0, 1264, 715, 716, 717, 719, 721, 722, 718,
	720, 723, 1328, 724, 0, 0, 725, 726, 727, 793,
	1351, 1388, 0, 729, 730, 728, 731, 732, 735, 733,
	734, 796, 736, 737, 738, 0, 0, 0, 0, 739,
	740, 797, 741, 742, 743, 1261, 0, 0, 0, 0,
	0, 0, 1304, 1276, 1277, 1278, 1274, 1275, 1287, 0,
	1256, 0, 0, 0, 0, 0, 0, 1254, 1255, 324,
	325, 327, 326, 328, 329, 330, 331, 1288, 332, 333,
	0, 1286, 0, 0, 0, 1330, 1292, 0, 0, 334,
	0, 335, 336, 337, 1370, 338, 339, 340, 341, 342,
	343, 344, 745, 1343, 0, 345, 1350, 346, 1349, 0,
	1360, 347, 348, 349, 350, 351, 352, 353, 1294, 1329,
	1258, 354, 1390, 1391, 752, 0, 355, 356, 1336, 0,
	1317, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1371, 382, 383, 5497, 1320, 1318, 1319, 1326,
	1322, 1321, 1325, 385, 386, 387, 388, 389, 1353, 390,
	392, 1347, 1346, 1263, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	1338, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 1269, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 1361, 1362, 426, 1283,
	319, 0, 0, 0, 0, 0, 427, 428, 429, 1345,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 1372, 436, 437, 438, 1358, 1359, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 1368,
	0, 1293, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 1331, 1332, 1335, 552, 1374, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 1273, 320, 322, 1373, 767, 469, 553,
	470, 1340, 1341, 0, 1299, 0, 471, 472, 474, 1375,
	1333, 1376, 473, 475, 476, 1377, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1369, 488, 1378, 490, 491, 1379, 0,
	492, 493, 494, 495, 496, 497, 500, 1324, 1323, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1380,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 1381, 545, 532,
	1260, 533, 323, 1382, 547, 548, 549, 550, 1284, 1334,
	551, 1348, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 1383,
	564, 1384, 1363, 565, 566, 1270, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 1364, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 1344, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 1385, 627, 628, 629, 630, 631, 1271,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 1327, 658, 783, 659, 639,
	640, 660, 661, 1386, 662, 663, 664, 665, 666, 667,
	668, 1342, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 1389, 679, 680, 681,
	682, 1365, 686, 687, 688, 689, 0, 690, 691, 1257,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 1354, 1355, 1356, 1357, 0, 712,
	0, 701, 703, 704, 705, 706, 1366, 707, 1367, 1282,
	708, 709, 710, 711, 702, 5496, 714, 0, 1264, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 1328, 724,
	0, 0, 725, 726, 727, 793, 1351, 1388, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 0, 0, 0, 0, 739, 740, 797, 741, 742,
	743, 1261, 0, 0, 0, 0, 0, 0, 1304, 1276,
	1277, 1278, 1274, 1275, 1287, 0, 1256, 0, 0, 0,
	0, 0, 0, 1254, 1255, 324, 325, 327, 326, 328,
	329, 330, 331, 1288, 332, 333, 0, 1286, 0, 0,
	0, 1330, 1292, 0, 0, 334, 0, 335, 336, 337,
	1370, 338, 339, 340, 341, 342, 343, 344, 5495, 1343,
	0, 345, 1350, 346, 1349, 0, 1360, 347, 348, 349,
	350, 351, 352, 353, 1294, 1329, 1258, 354, 1390, 1391,
	752, 0, 355, 356, 1336, 0, 1317, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 1371, 382,
	383, 5497, 1320, 1318, 1319, 1326, 1322, 1321, 1325, 385,
	386, 387, 388, 389, 1353, 390, 392, 1347, 1346, 1263,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 1338, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 1269,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 1361, 1362, 426, 1283, 319, 0, 0, 0,
	0, 0, 427, 428, 429, 1345, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 1372, 436,
	437, 438, 1358, 1359, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 1368, 0, 1293, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 1331, 1332, 1335,
	552, 1374, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 1273,
	320, 322, 1373, 767, 469, 553, 470, 1340, 1341, 0,
	1299, 0, 471, 472, 474, 1375, 1333, 1376, 473, 475,
	476, 1377, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 1369,
	488, 1378, 490, 491, 1379, 0, 492, 493, 494, 495,
	496, 497, 500, 1324, 1323, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 1380, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 1381, 545, 532, 1260, 533, 323, 1382,
	547, 548, 549, 550, 1284, 1334, 551, 1348, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 1383, 564, 1384, 1363, 565,
	566, 1270, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 1364, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 1344, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 1385,
	627, 628, 629, 630, 631, 1271, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 1327, 658, 783, 659, 639, 640, 660, 661, 1386,
	662, 663, 664, 665, 666, 667, 668, 1342, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 1389, 679, 680, 681, 682, 1365, 686, 687,
	688, 689, 0, 690, 691, 1257, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	1354, 1355, 1356, 1357, 0, 712, 0, 701, 703, 704,
	705, 706, 1366, 707, 1367, 1282, 708, 709, 710, 711,
	702, 5496, 714, 0, 1264, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 1328, 724, 0, 0, 725, 726,
	727, 793, 1351, 1388, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 0, 0, 0,
	0, 739, 740, 797, 741, 742, 743, 1261, 0, 0,
	0, 0, 0, 0, 1304, 1276, 1277, 1278, 1274, 1275,
	1287, 0, 1256, 0, 0, 0, 0, 0, 0, 1254,
	1255, 324, 325, 327, 326, 328, 329, 330, 331, 1288,
	332, 333, 0, 1286, 0, 0, 0, 1330, 1292, 0,
	0, 334, 0, 335, 336, 337, 1370, 338, 339, 340,
	341, 342, 343, 344, 745, 1343, 0, 345, 1350, 346,
	1349, 0, 1360, 347, 348, 349, 350, 351, 352, 353,
	1294, 1329, 1258, 354, 1390, 1391, 752, 0, 355, 356,
	1336, 0, 1317, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1371, 382, 5064, 384, 1320, 1318,
	1319, 1326, 1322, 1321, 1325, 385, 386, 387, 388, 389,
	1353, 390, 392, 1347, 1346, 1263, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 1338, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 1269, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 1361, 1362,
	426, 1283, 319, 0, 0, 0, 0, 0, 427, 428,
	429, 1345, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 1372, 436, 437, 438, 1358, 1359,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 1368, 0, 5065, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 1331, 1332, 1335, 552, 1374, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 1273, 320, 322, 1373, 767,
	469, 553, 470, 1340, 1341, 0, 1299, 0, 471, 472,
	474, 1375, 1333, 1376, 473, 475, 476, 1377, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 1369, 488, 1378, 490, 491,
	1379, 0, 492, 493, 494, 495, 496, 497, 500, 1324,
	1323, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 1380, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 1381,
	545, 532, 1260, 533, 323, 1382, 547, 548, 549, 550,
	1284, 1334, 551, 1348, 554, 555, 0, 0, 556, 0,
	557, 0, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 1383, 564, 1384, 1363, 565, 566, 1270, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 1364,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 1344, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 1385, 627, 628, 629, 5063,
	631, 1271, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 1327, 658, 783,
	659, 639, 640, 660, 661, 1386, 662, 663, 664, 665,
	666, 667, 668, 1342, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 1389, 679,
	680, 681, 682, 1365, 686, 687, 688, 689, 0, 690,
	691, 1257, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 1354, 1355, 1356, 1357,
	0, 712, 0, 701, 703, 704, 705, 706, 1366, 707,
	1367, 1282, 708, 709, 710, 711, 702, 713, 714, 0,
	1264, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	1328, 724, 0, 0, 725, 726, 727, 793, 1351, 1388,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 0, 0, 0, 0, 739, 740, 797,
	741, 742, 743, 1261, 0, 0, 0, 0, 0, 0,
	1304, 1276, 1277, 1278, 3669, 3670, 1287, 0, 1256, 0,
	0, 0, 0, 0, 0, 1254, 1255, 324, 325, 327,
	326, 328, 329, 330, 331, 1288, 332, 333, 0, 1286,
	0, 0, 0, 1330, 1292, 0, 0, 334, 0, 335,
	336, 337, 1370, 338, 339, 340, 341, 342, 343, 344,
	745, 1343, 0, 345, 1350, 346, 1349, 0, 1360, 347,
	348, 349, 350, 351, 352, 353, 1294, 1329, 1258, 354,
	1390, 1391, 752, 0, 355, 356, 1336, 0, 1317, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	1371, 382, 383, 384, 1320, 1318, 1319, 1326, 1322, 1321,
	1325, 385, 386, 387, 388, 389, 1353, 390, 392, 1347,
	1346, 1263, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 1338, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 1269, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 1361, 1362, 426, 1283, 319, 0,
	0, 0, 0, 0, 427, 428, 429, 1345, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	1372, 436, 437, 438, 1358, 1359, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 1368, 0, 1293,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 1331,
	1332, 1335, 552, 1374, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 1273, 320, 322, 1373, 767, 469, 553, 470, 1340,
	1341, 0, 1299, 0, 471, 472, 474, 1375, 1333, 1376,
	473, 475, 476, 1377, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 1369, 488, 1378, 490, 491, 1379, 0, 492, 493,
	494, 495, 496, 497, 500, 1324, 1323, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 1380, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 1381, 545, 532, 1260, 533,
	323, 1382, 547, 548, 549, 550, 1284, 1334, 551, 1348,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 1383, 564, 1384,
	1363, 565, 566, 1270, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 1364, 585, 780, 586, 587,
	0, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 1344, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 1385, 627, 628, 629, 630, 631, 1271, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 1327, 658, 783, 659, 639, 640, 660,
	661, 1386, 662, 663, 664, 665, 666, 667, 668, 1342,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 1389, 679, 680, 681, 682, 1365,
	686, 687, 688, 689, 0, 690, 691, 1257, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 1354, 1355, 1356, 1357, 0, 712, 0, 701,
	703, 704, 705, 706, 1366, 707, 1367, 1282, 708, 709,
	710, 711, 702, 713, 714, 0, 1264, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 1328, 724, 0, 0,
	725, 726, 727, 793, 1351, 1388, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 0,
	0, 0, 0, 739, 740, 797, 741, 742, 743, 1261,
	0, 0, 0, 0, 0, 0, 1304, 1276, 1277, 1278,
	3667, 3668, 1287, 0, 1256, 0, 0, 0, 0, 0,
	0, 1254, 1255, 324, 325, 327, 326, 328, 329, 330,
	331, 1288, 332, 333, 0, 1286, 0, 0, 0, 1330,
	1292, 0, 0, 334, 0, 335, 336, 337, 1370, 338,
	339, 340, 341, 342, 343, 344, 745, 1343, 0, 345,
	1350, 346, 1349, 0, 1360, 347, 348, 349, 350, 351,
	352, 353, 1294, 1329, 1258, 354, 1390, 1391, 752, 0,
	355, 356, 1336, 0, 1317, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 1371, 382, 383, 384,
	1320, 1318, 1319, 1326, 1322, 1321, 1325, 385, 386, 387,
	388, 389, 1353, 390, 392, 1347, 1346, 1263, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 1338, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 1269, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	1361, 1362, 426, 1283, 319, 0, 0, 0, 0, 0,
	427, 428, 429, 1345, 0, 0, 0, 430, 0, 431,
	432, 433, 0, 434, 435, 0, 1372, 436, 437, 438,
	1358, 1359, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 1368, 0, 1293, 449, 0, 450, 451,
	452, 453, 454, 455, 456, 1331, 1332, 1335, 552, 1374,
	457, 458, 459, 0, 460, 461, 462, 463, 464, 0,
	0, 0, 465, 466, 467, 468, 0, 1273, 320, 322,
	1373, 767, 469, 553, 470, 1340, 1341, 0, 1299, 0,
	471, 472, 474, 1375, 1333, 1376, 473, 475, 476, 1377,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 1369, 488, 1378,
	490, 491, 1379, 0, 492, 493, 494, 495, 496, 497,
	500, 1324, 1323, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1380, 527, 528, 529, 530, 531, 539,
	541, 542, 537, 538, 540, 543, 544, 546, 534, 535,
	536, 1381, 545, 532, 1260, 533, 323, 1382, 547, 548,
	549, 550, 1284, 1334, 551, 1348, 554, 555, 0, 0,
	556, 0, 557, 0, 0, 559, 560, 561, 0, 0,
	562, 563, 775, 1383, 564, 1384, 1363, 565, 566, 1270,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	0, 577, 578, 777, 579, 580, 581, 778, 582, 583,
	584, 1364, 585, 780, 586, 587, 0, 588, 589, 590,
	0, 591, 592, 593, 594, 595, 596, 597, 598, 1344,
	599, 600, 602, 601, 603, 0, 604, 0, 605, 606,
	607, 0, 0, 0, 0, 0, 608, 609, 611, 0,
	612, 613, 614, 615, 610, 616, 617, 618, 619, 620,
	621, 0, 623, 624, 622, 625, 626, 1385, 627, 628,
	629, 630, 631, 1271, 632, 0, 633, 634, 642, 643,
	644, 635, 636, 638, 645, 637, 646, 647, 648, 649,
	651, 650, 0, 653, 654, 652, 655, 656, 657, 1327,
	658, 783, 659, 639, 640, 660, 661, 1386, 662, 663,
	664, 665, 666, 667, 668, 1342, 0, 669, 0, 670,
	671, 672, 673, 674, 675, 677, 641, 678, 683, 684,
	1389, 679, 680, 681, 682, 1365, 686, 687, 688, 689,
	0, 690, 691, 1257, 685, 676, 0, 692, 693, 694,
	695, 696, 697, 0, 698, 699, 0, 700, 1354, 1355,
	1356, 1357, 0, 712, 0, 701, 703, 704, 705, 706,
	1366, 707, 1367, 1282, 708, 709, 710, 711, 702, 713,
	714, 0, 1264, 715, 716, 717, 719, 721, 722, 718,
	720, 723, 1328, 724, 0, 0, 725, 726, 727, 793,
	1351, 1388, 0, 729, 730, 728, 731, 732, 735, 733,
	734, 796, 736, 737, 738, 0, 0, 0, 0, 739,
	740, 797, 741, 742, 743, 1261, 0, 0, 0, 0,
	0, 0, 1304, 1276, 1277, 1278, 1274, 1275, 1287, 0,
	1256, 0, 0, 0, 0, 0, 0, 1254, 1255, 324,
	325, 327, 326, 328, 329, 330, 331, 1288, 332, 333,
	0, 1286, 0, 0, 0, 1330, 1292, 0, 0, 334,
	0, 335, 336, 337, 1370, 338, 339, 340, 341, 342,
	343, 344, 745, 1343, 0, 345, 1350, 346, 1349, 0,
	1360, 347, 348, 349, 350, 351, 352, 353, 1294, 1329,
	1258, 354, 1390, 1391, 752, 0, 355, 356, 1336, 0,
	1317, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1371, 382, 383, 384, 1320, 1318, 1319, 1326,
	1322, 1321, 1325, 385, 386, 387, 388, 389, 1353, 390,
	392, 1347, 1346, 1263, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	1338, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 1269, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 1361, 1362, 426, 1283,
	319, 0, 0, 0, 0, 0, 427, 428, 429, 1345,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 1372, 436, 437, 438, 1358, 1359, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 1368,
	0, 1293, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 1331, 1332, 1335, 552, 1374, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 1273, 320, 322, 1373, 767, 469, 553,
	470, 1340, 1341, 0, 1299, 0, 471, 472, 474, 1375,
	1333, 1376, 473, 475, 476, 1377, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1369, 488, 1378, 490, 491, 1379, 0,
	492, 493, 494, 495, 496, 497, 500, 1324, 1323, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1380,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 1381, 545, 532,
	1260, 533, 323, 1382, 547, 548, 549, 550, 1284, 1334,
	551, 1348, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 1383,
	564, 1384, 1363, 565, 566, 1270, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 1364, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 1344, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 1385, 627, 628, 629, 630, 631, 1271,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 1327, 658, 783, 659, 639,
	640, 660, 661, 1386, 662, 663, 664, 665, 666, 667,
	668, 1342, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 1389, 679, 680, 681,
	682, 1365, 686, 687, 688, 689, 0, 690, 691, 1257,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 1354, 1355, 1356, 1357, 0, 712,
	0, 701, 703, 704, 705, 706, 1366, 707, 1367, 1282,
	708, 709, 710, 711, 702, 713, 714, 0, 1264, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 1328, 724,
	0, 0, 725, 726, 727, 793, 1351, 1388, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 0, 0, 0, 0, 739, 740, 797, 741, 742,
	743, 1261, 0, 0, 0, 0, 0, 0, 1304, 1276,
	1277, 1278, 1274, 1275, 1287, 0, 1256, 0, 0, 0,
	0, 0, 0, 2810, 2811, 324, 325, 327, 326, 328,
	329, 330, 331, 1288, 332, 333, 0, 1286, 0, 0,
	0, 1330, 1292, 0, 0, 334, 0, 335, 336, 337,
	1370, 338, 339, 340, 341, 342, 343, 344, 745, 1343,
	0, 345, 1350, 346, 1349, 0, 1360, 347, 348, 349,
	350, 351, 352, 353, 1294, 1329, 0, 354, 1390, 1391,
	752, 0, 355, 356, 1336, 0, 1317, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 1371, 382,
	383, 384, 1320, 1318, 1319, 1326, 1322, 1321, 1325, 385,
	386, 387, 388, 389, 1353, 390, 392, 1347, 1346, 0,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 1338, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 1269,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 1361, 1362, 426, 1283, 319, 0, 0, 0,
	0, 0, 427, 428, 429, 1345, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 1372, 436,
	437, 438, 1358, 1359, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 1368, 0, 1293, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 1331, 1332, 1335,
	552, 1374, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 1273,
	320, 322, 1373, 767, 469, 553, 470, 1340, 1341, 0,
	1299, 0, 471, 472, 474, 1375, 1333, 1376, 473, 475,
	476, 1377, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 1369,
	488, 1378, 490, 491, 1379, 0, 492, 493, 494, 495,
	496, 497, 500, 1324, 1323, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 1380, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 1381, 545, 532, 0, 533, 323, 1382,
	547, 548, 549, 550, 1284, 1334, 551, 1348, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 1383, 564, 1384, 1363, 565,
	566, 1270, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 1364, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 1344, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 1385,
	627, 628, 629, 630, 631, 1271, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 1327, 658, 783, 659, 639, 640, 660, 661, 1386,
	662, 663, 664, 665, 666, 667, 668, 1342, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 1389, 679, 680, 681, 682, 1365, 686, 687,
	688, 689, 0, 690, 691, 0, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	1354, 1355, 1356, 1357, 0, 712, 0, 701, 703, 704,
	705, 706, 1366, 707, 1367, 1282, 708, 709, 710, 711,
	702, 713, 714, 0, 0, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 1328, 724, 0, 0, 725, 726,
	727, 793, 1351, 1388, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 0, 0, 0,
	0, 739, 740, 797, 741, 742, 743, 0, 0, 0,
	0, 0, 0, 0, 1304, 1276, 1277, 1278, 1274, 1275,
	1287, 0, 3074, 0, 0, 0, 0, 0, 0, 3072,
	3073, 324, 325, 327, 326, 328, 329, 330, 331, 1288,
	332, 333, 0, 1286, 0, 0, 0, 1330, 1292, 0,
	0, 334, 0, 335, 336, 337, 1370, 338, 339, 340,
	341, 342, 343, 344, 745, 1343, 0, 345, 1350, 346,
	1349, 0, 1360, 347, 348, 349, 350, 351, 352, 353,
	1294, 1329, 0, 354, 1390, 1391, 752, 0, 355, 356,
	1336, 0, 1317, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1371, 382, 383, 384, 1320, 1318,
	1319, 1326, 1322, 1321, 1325, 385, 386, 387, 388, 389,
	1353, 390, 392, 1347, 1346, 0, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 1338, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 1269, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 1361, 1362,
	426, 1283, 319, 0, 0, 0, 0, 0, 427, 428,
	429, 1345, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 1372, 436, 437, 438, 1358, 1359,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 1368, 0, 1293, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 1331, 1332, 1335, 552, 1374, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 1273, 320, 322, 1373, 767,
	469, 553, 470, 1340, 1341, 0, 1299, 0, 471, 472,
	474, 1375, 1333, 1376, 473, 475, 476, 1377, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 1369, 488, 1378, 490, 491,
	1379, 0, 492, 493, 494, 495, 496, 497, 500, 1324,
	1323, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 1380, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 1381,
	545, 532, 0, 533, 323, 1382, 547, 548, 549, 550,
	1284, 1334, 551, 1348, 554, 555, 0, 0, 556, 0,
	557, 0, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 1383, 564, 1384, 1363, 565, 566, 558, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 1364,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 1344, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 1385, 627, 628, 629, 630,
	631, 3662, 3663, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 1327, 658, 783,
	659, 639, 640, 660, 661, 1386, 662, 663, 664, 665,
	666, 667, 668, 1342, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 1389, 679,
	680, 681, 682, 1365, 686, 687, 688, 689, 0, 690,
	691, 0, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 1354, 1355, 1356, 1357,
	0, 712, 0, 701, 703, 704, 705, 706, 1366, 707,
	1367, 1282, 708, 709, 710, 711, 702, 713, 714, 0,
	0, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	1328, 724, 0, 0, 725, 726, 727, 793, 1351, 1388,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 0, 0, 0, 0, 739, 740, 797,
	741, 742, 743, 0, 0, 0, 0, 0, 0, 0,
	1304, 1276, 1277, 1278, 1274, 1275, 1287, 0, 0, 0,
	0, 0, 0, 0, 0, 2394, 2395, 324, 325, 327,
	326, 328, 329, 330, 331, 1288, 332, 333, 0, 1286,
	0, 0, 0, 1330, 1292, 0, 0, 334, 0, 335,
	336, 337, 1370, 338, 339, 340, 341, 342, 343, 344,
	0, 1343, 0, 345, 1350, 346, 1349, 0, 1360, 347,
	348, 349, 350, 351, 352, 353, 1294, 1329, 1258, 354,
	1390, 1391, 752, 0, 355, 356, 1336, 0, 1317, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	1371, 382, 383, 5497, 1320, 1318, 1319, 1326, 1322, 1321,
	1325, 385, 386, 387, 388, 389, 1353, 390, 392, 1347,
	1346, 1263, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 1338, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 1269, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 1361, 1362, 426, 1283, 319, 0,
	0, 0, 0, 0, 427, 428, 429, 1345, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	1372, 436, 437, 438, 1358, 1359, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 1368, 0, 1293,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 1331,
	1332, 1335, 552, 0, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 1273, 320, 322, 1373, 767, 469, 553, 470, 1340,
	1341, 0, 1299, 0, 471, 472, 474, 0, 1333, 0,
	473, 475, 476, 1377, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 1369, 488, 1378, 490, 491, 0, 0, 492, 493,
	494, 495, 496, 497, 500, 1324, 1323, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 1380, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 1381, 545, 532, 1260, 533,
	323, 0, 547, 548, 549, 550, 1284, 1334, 551, 1348,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 1383, 564, 1384,
	1363, 565, 566, 1270, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 1364, 585, 780, 586, 587,
	0, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 1344, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 1385, 627, 628, 629, 630, 631, 1271, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 1327, 658, 783, 659, 639, 640, 660,
	661, 0, 662, 663, 664, 665, 666, 667, 668, 1342,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 1389, 679, 680, 681, 682, 1365,
	686, 687, 688, 689, 0, 690, 691, 1257, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 1354, 1355, 1356, 1357, 0, 712, 0, 701,
	703, 704, 705, 706, 1366, 707, 1367, 1282, 708, 709,
	710, 711, 702, 5496, 714, 0, 1264, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 1328, 724, 0, 0,
	725, 726, 727, 793, 1351, 1388, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 0,
	0, 0, 0, 739, 740, 797, 741, 742, 743, 0,
	0, 0, 0, 0, 3093, 0, 1304, 1276, 1277, 1278,
	1274, 1275, 1287, 0, 0, 0, 0, 0, 0, 0,
	0, 1254, 1255, 324, 325, 327, 326, 328, 329, 330,
	331, 1288, 332, 333, 0, 1286, 0, 0, 0, 1330,
	1292, 0, 0, 334, 0, 335, 336, 337, 1370, 338,
	339, 340, 341, 342, 343, 344, 745, 1343, 0, 345,
	1350, 346, 1349, 0, 1360, 347, 348, 349, 350, 351,
	352, 353, 0, 1329, 0, 354, 1390, 1391, 752, 0,
	355, 356, 1336, 0, 1317, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 1371, 382, 383, 384,
	1320, 1318, 1319, 1326, 1322, 1321, 1325, 385, 386, 387,
	388, 389, 1353, 390, 392, 1347, 1346, 0, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 1338, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 756, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	1361, 1362, 426, 1283, 319, 0, 0, 0, 0, 0,
	427, 428, 429, 1345, 0, 0, 0, 430, 0, 431,
	432, 433, 0, 434, 435, 0, 1372, 436, 437, 438,
	1358, 1359, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 1368, 0, 1293, 449, 0, 450, 451,
	452, 453, 454, 455, 456, 1331, 1332, 1335, 552, 1374,
	457, 458, 459, 0, 460, 461, 462, 463, 464, 0,
	0, 0, 465, 466, 467, 468, 0, 1273, 320, 322,
	1373, 767, 469, 553, 470, 1340, 1341, 0, 1299, 0,
	471, 472, 474, 1375, 1333, 1376, 473, 475, 476, 1377,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 1369, 488, 1378,
	490, 491, 1379, 0, 492, 493, 494, 495, 496, 497,
	500, 1324, 1323, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1380, 527, 528, 529, 530, 531, 539,
	541, 542, 537, 538, 540, 543, 544, 546, 534, 535,
	536, 1381, 545, 532, 0, 533, 323, 1382, 547, 548,
	549, 550, 1284, 1334, 551, 1348, 554, 555, 0, 0,
	556, 0, 557, 0, 0, 559, 560, 561, 0, 0,
	562, 563, 775, 1383, 564, 1384, 1363, 565, 566, 558,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	0, 577, 578, 777, 579, 580, 581, 778, 582, 583,
	584, 1364, 585, 780, 586, 587, 0, 588, 589, 590,
	0, 591, 592, 593, 594, 595, 596, 597, 598, 1344,
	599, 600, 602, 601, 603, 0, 604, 0, 605, 606,
	607, 0, 0, 0, 0, 0, 608, 609, 611, 0,
	612, 613, 614, 615, 610, 616, 617, 618, 619, 620,
	621, 0, 623, 624, 622, 625, 626, 1385, 627, 628,
	629, 630, 631, 1271, 632, 0, 633, 634, 642, 643,
	644, 635, 636, 638, 645, 637, 646, 647, 648, 649,
	651, 650, 0, 653, 654, 652, 655, 656, 657, 1327,
	658, 783, 659, 639, 640, 660, 661, 1386, 662, 663,
	664, 665, 666, 667, 668, 1342, 0, 669, 0, 670,
	671, 672, 673, 674, 675, 677, 641, 678, 683, 684,
	1389, 679, 680, 681, 682, 1365, 686, 687, 688, 689,
	0, 690, 691, 0, 685, 676, 0, 692, 693, 694,
	695, 696, 697, 0, 698, 699, 0, 700, 1354, 1355,
	1356, 1357, 0, 712, 0, 701, 703, 704, 705, 706,
	1366, 707, 1367, 1282, 708, 709, 710, 711, 702, 713,
	714, 0, 0, 715, 716, 717, 719, 721, 722, 718,
	720, 723, 1328, 724, 0, 0, 725, 726, 727, 793,
	1351, 1388, 0, 729, 730, 728, 731, 732, 735, 733,
	734, 796, 736, 737, 738, 0, 0, 0, 0, 739,
	740, 797, 741, 742, 743, 0, 0, 1727, 0, 1304,
	1276, 1277, 1278, 1274, 1275, 1287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 1288, 0, 0,
	0, 1286, 1330, 1292, 0, 0, 334, 0, 335, 336,
	337, 1370, 338, 339, 340, 341, 342, 343, 344, 745,
	1343, 0, 345, 1350, 346, 1349, 0, 1360, 347, 348,
	349, 350, 351, 352, 353, 0, 1329, 0, 354, 1390,
	1391, 752, 0, 355, 356, 1336, 0, 1317, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 1371,
	382, 383, 384, 1320, 1318, 1319, 1326, 1322, 1321, 1325,
	385, 386, 387, 388, 389, 1353, 390, 392, 1347, 1346,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 1338, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	756, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 1361, 1362, 426, 1283, 319, 0, 0,
	0, 0, 0, 427, 428, 429, 1345, 0, 0, 0,
	430, 0, 431, 432, 433, 0, 434, 435, 0, 1372,
	436, 437, 438, 1358, 1359, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 1368, 0, 1293, 449,
	0, 450, 451, 452, 453, 454, 455, 456, 1331, 1332,
	1335, 552, 1374, 457, 458, 459, 0, 460, 461, 462,
	463, 464, 0, 0, 0, 465, 466, 467, 468, 0,
	1273, 320, 322, 1373, 767, 469, 553, 470, 1340, 1341,
	0, 1299, 0, 471, 472, 474, 1375, 1333, 1376, 473,
	475, 476, 1377, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	1369, 488, 1378, 490, 491, 1379, 0, 492, 493, 494,
	495, 496, 497, 500, 1324, 1323, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 1380, 527, 528, 529,
	530, 531, 539, 541, 542, 537, 538, 540, 543, 544,
	546, 534, 535, 536, 1381, 545, 532, 0, 533, 323,
	1382, 547, 548, 549, 550, 1284, 1334, 551, 1348, 554,
	555, 0, 0, 556, 0, 557, 0, 0, 559, 560,
	561, 0, 0, 562, 563, 775, 1383, 564, 1384, 1363,
	565, 566, 558, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 0, 577, 578, 777, 579, 580, 581,
	778, 582, 583, 584, 1364, 585, 780, 586, 587, 0,
	588, 589, 590, 0, 591, 592, 593, 594, 595, 596,
	597, 598, 1344, 599, 600, 602, 601, 603, 0, 604,
	0, 605, 606, 607, 0, 0, 0, 0, 0, 608,
	609, 611, 0, 612, 613, 614, 615, 610, 616, 617,
	618, 619, 620, 621, 0, 623, 624, 622, 625, 626,
	1385, 627, 628, 629, 630, 631, 1271, 632, 0, 633,
	634, 642, 643, 644, 635, 636, 638, 645, 637, 646,
	647, 648, 649, 651, 650, 0, 653, 654, 652, 655,
	656, 657, 1327, 658, 783, 659, 639, 640, 660, 661,
	1386, 662, 663, 664, 665, 666, 667, 668, 1342, 0,
	669, 0, 670, 671, 672, 673, 674, 675, 677, 641,
	678, 683, 684, 1389, 679, 680, 681, 682, 1365, 686,
	687, 688, 689, 0, 690, 691, 0, 685, 676, 0,
	692, 693, 694, 695, 696, 697, 0, 698, 699, 0,
	700, 1354, 1355, 1356, 1357, 0, 712, 0, 701, 703,
	704, 705, 706, 1366, 707, 1367, 1282, 708, 709, 710,
	711, 702, 713, 714, 0, 0, 715, 716, 717, 719,
	721, 722, 718, 720, 723, 1328, 724, 0, 0, 725,
	726, 727, 793, 1351, 1388, 0, 729, 730, 728, 731,
	732, 735, 733, 734, 796, 736, 737, 738, 0, 0,
	0, 0, 739, 740, 797, 741, 742, 743, 1245, 0,
	1429, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 327,
	326, 328, 329, 330, 331, 0, 332, 333, 0, 0,
	1288, 0, 0, 1330, 1286, 0, 0, 334, 0, 335,
	336, 337, 1370, 338, 339, 340, 341, 342, 343, 344,
	745, 746, 0, 345, 747, 346, 748, 0, 749, 347,
	348, 349, 350, 351, 352, 353, 0, 1329, 0, 354,
	750, 751, 752, 0, 355, 356, 1336, 0, 1317, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	1371, 382, 383, 384, 1320, 1318, 1319, 1326, 1322, 1321,
	1325, 385, 386, 387, 388, 389, 0, 390, 392, 754,
	755, 0, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 756, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 1361, 1362, 426, 0, 319, 0,
	0, 0, 0, 0, 427, 428, 429, 759, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	1372, 436, 437, 438, 760, 761, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 1368, 0, 763,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 1331,
	1332, 1335, 552, 1374, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 1273, 320, 322, 1373, 767, 469, 553, 470, 768,
	769, 0, 770, 0, 471, 472, 474, 1375, 1333, 1376,
	473, 475, 476, 1377, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 1415, 485, 487, 486, 0,
	489, 1369, 488, 1378, 490, 491, 1379, 0, 492, 493,
	494, 495, 496, 497, 500, 1324, 1323, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 1380, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 1381, 545, 532, 0, 533,
	323, 1382, 547, 548, 549, 550, 0, 1334, 551, 774,
	554, 555, 0, 0, 556, 0, 557, 0, 1421, 559,
	560, 561, 0, 0, 562, 563, 775, 1383, 564, 1384,
	1363, 565, 566, 558, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 1364, 585, 780, 586, 587,
	0, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 781, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 1385, 627, 628, 629, 630, 631, 782, 1423, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 275, 653, 654, 652,
	655, 656, 657, 1327, 658, 783, 659, 639, 640, 660,
	661, 1386, 662, 663, 664, 665, 666, 667, 668, 784,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 785, 679, 680, 681, 682, 1365,
	686, 687, 688, 689, 0, 690, 691, 0, 685, 676,
	277, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 787, 788, 789, 790, 0, 712, 0, 701,
	703, 704, 705, 706, 1366, 707, 1367, 0, 708, 709,
	710, 711, 702, 713, 714, 0, 0, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 1328, 724, 0, 0,
	725, 726, 727, 1848, 794, 795, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 0,
	0, 0, 269, 739, 740, 797, 741, 742, 743, 1429,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 1419,
	0, 2222, 1330, 0, 0, 0, 334, 0, 335, 336,
	337, 1370, 338, 339, 340, 341, 342, 343, 344, 745,
	746, 0, 345, 747, 346, 748, 0, 749, 347, 348,
	349, 350, 351, 352, 353, 0, 1329, 0, 354, 750,
	751, 752, 0, 355, 356, 1336, 0, 1317, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 1371,
	382, 383, 384, 1320, 1318, 1319, 1326, 1322, 1321, 1325,
	385, 386, 387, 388, 389, 0, 390, 392, 754, 755,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	756, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 1361, 1362, 426, 0, 319, 0, 0,
	0, 0, 0, 427, 428, 429, 759, 0, 0, 0,
	430, 0, 431, 432, 433, 0, 434, 435, 0, 1372,
	436, 437, 438, 760, 761, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 1368, 0, 763, 449,
	0, 450, 451, 452, 453, 454, 455, 456, 1331, 1332,
	1335, 552, 1374, 457, 458, 459, 0, 460, 461, 462,
	463, 464, 0, 0, 0, 465, 466, 467, 468, 0,
	1273, 320, 322, 1373, 767, 469, 553, 470, 768, 769,
	0, 770, 0, 471, 472, 474, 1375, 1333, 1376, 473,
	475, 476, 1377, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 1415, 485, 487, 486, 0, 489,
	1369, 488, 1378, 490, 491, 1379, 0, 492, 493, 494,
	495, 496, 497, 500, 1324, 1323, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 1380, 527, 528, 529,
	530, 531, 539, 541, 542, 537, 538, 540, 543, 544,
	546, 534, 535, 536, 1381, 545, 532, 0, 533, 323,
	1382, 547, 548, 549, 550, 0, 1334, 551, 774, 554,
	555, 0, 0, 556, 0, 557, 0, 1421, 559, 560,
	561, 0, 0, 562, 563, 775, 1383, 564, 1384, 1363,
	565, 566, 558, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 0, 577, 578, 777, 579, 580, 581,
	778, 582, 583, 584, 1364, 585, 780, 586, 587, 0,
	588, 589, 590, 0, 591, 592, 593, 594, 595, 596,
	597, 598, 781, 599, 600, 602, 601, 603, 0, 604,
	0, 605, 606, 607, 0, 0, 0, 0, 0, 608,
	609, 611, 0, 612, 613, 614, 615, 610, 616, 617,
	618, 619, 620, 621, 0, 623, 624, 622, 625, 626,
	1385, 627, 628, 629, 630, 631, 782, 1423, 0, 633,
	634, 642, 643, 644, 635, 636, 638, 645, 637, 646,
	647, 648, 649, 651, 650, 275, 653, 654, 652, 655,
	656, 657, 1327, 658, 783, 659, 639, 640, 660, 661,
	1386, 662, 663, 664, 665, 666, 667, 668, 784, 0,
	669, 0, 670, 671, 672, 673, 674, 675, 677, 641,
	678, 683, 684, 785, 679, 680, 681, 682, 1365, 686,
	687, 688, 689, 0, 690, 691, 0, 685, 676, 277,
	692, 693, 694, 695, 696, 697, 0, 698, 699, 0,
	700, 787, 788, 789, 790, 0, 712, 0, 701, 703,
	704, 705, 706, 1366, 707, 1367, 0, 708, 709, 710,
	711, 702, 713, 714, 0, 0, 715, 716, 717, 719,
	721, 722, 718, 720, 723, 1328, 724, 0, 0, 725,
	726, 727, 1848, 794, 795, 0, 729, 730, 728, 731,
	732, 735, 733, 734, 796, 736, 737, 738, 0, 0,
	0, 269, 739, 740, 797, 741, 742, 743, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3832, 0, 1429, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1419, 0,
	2222, 324, 325, 327, 326, 328, 329, 330, 331, 0,
	332, 333, 0, 0, 0, 0, 0, 1330, 0, 0,
	0, 334, 0, 335, 336, 337, 1370, 338, 339, 340,
	341, 342, 343, 344, 745, 746, 0, 345, 747, 346,
	748, 0, 749, 347, 348, 349, 350, 351, 352, 353,
	0, 1329, 0, 354, 750, 751, 752, 0, 355, 356,
	1336, 0, 1317, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1371, 382, 383, 384, 1320, 1318,
	1319, 1326, 1322, 1321, 1325, 385, 386, 387, 388, 389,
	0, 390, 392, 754, 755, 0, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 756, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 1361, 1362,
	426, 0, 319, 0, 0, 0, 0, 0, 427, 428,
	429, 759, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 1372, 436, 437, 438, 760, 761,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 1368, 0, 763, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 1331, 1332, 1335, 552, 1374, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 1273, 320, 322, 1373, 767,
	469, 553, 470, 768, 769, 0, 770, 0, 471, 472,
	474, 1375, 1333, 1376, 473, 475, 476, 1377, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 1415,
	485, 487, 486, 0, 489, 1369, 488, 1378, 490, 491,
	1379, 0, 492, 493, 494, 495, 496, 497, 500, 1324,
	1323, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 1380, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 1381,
	545, 532, 0, 533, 323, 1382, 547, 548, 549, 550,
	0, 1334, 551, 774, 554, 555, 0, 0, 556, 0,
	557, 0, 1421, 559, 560, 561, 0, 0, 562, 563,
	775, 1383, 564, 1384, 1363, 565, 566, 558, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 1364,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 781, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 1385, 627, 628, 629, 630,
	631, 782, 1423, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 1327, 658, 783,
	659, 639, 640, 660, 661, 1386, 662, 663, 664, 665,
	666, 667, 668, 784, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 785, 679,
	680, 681, 682, 1365, 686, 687, 688, 689, 0, 690,
	691, 0, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 787, 788, 789, 790,
	0, 712, 0, 701, 703, 704, 705, 706, 1366, 707,
	1367, 0, 708, 709, 710, 711, 702, 713, 714, 0,
	0, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	1328, 724, 0, 0, 725, 726, 727, 793, 794, 795,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 0, 0, 0, 0, 739, 740, 797,
	741, 742, 743, 1411, 0, 1429, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 1419, 0, 1417, 0, 0, 1330, 0,
	0, 0, 334, 0, 335, 336, 337, 1370, 338, 339,
	340, 341, 342, 343, 344, 745, 746, 0, 345, 747,
	346, 748, 0, 749, 347, 348, 349, 350, 351, 352,
	353, 0, 1329, 0, 354, 750, 751, 752, 0, 355,
	356, 1336, 0, 1317, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 1371, 382, 383, 384, 1320,
	1318, 1319, 1326, 1322, 1321, 1325, 385, 386, 387, 388,
	389, 0, 390, 392, 754, 755, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 756, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 1361,
	1362, 426, 0, 319, 0, 0, 0, 0, 0, 427,
	428, 429, 759, 0, 0, 0, 430, 0, 431, 432,
	433, 0, 434, 435, 0, 1372, 436, 437, 438, 760,
	761, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 1368, 0, 763, 449, 0, 450, 451, 452,
	453, 454, 455, 456, 1331, 1332, 1335, 552, 1374, 457,
	458, 459, 0, 460, 461, 462, 463, 464, 0, 0,
	0, 465, 466, 467, 468, 0, 1273, 320, 322, 1373,
	767, 469, 553, 470, 768, 769, 0, 770, 0, 471,
	472, 474, 1375, 1333, 1376, 473, 475, 476, 1377, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	1415, 485, 487, 486, 0, 489, 1369, 488, 1378, 490,
	491, 1379, 0, 492, 493, 494, 495, 496, 497, 500,
	1324, 1323, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 1380, 527, 528, 529, 530, 531, 539, 541,
	542, 537, 538, 540, 543, 544, 546, 534, 535, 536,
	1381, 545, 532, 0, 533, 323, 1382, 547, 548, 549,
	550, 0, 1334, 551, 774, 554, 555, 0, 0, 556,
	0, 557, 0, 1421, 559, 560, 561, 0, 0, 562,
	563, 775, 1383, 564, 1384, 1363, 565, 566, 558, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 0,
	577, 578, 777, 579, 580, 581, 778, 582, 583, 584,
	1364, 585, 780, 586, 587, 0, 588, 589, 590, 0,
	591, 592, 593, 594, 595, 596, 597, 598, 781, 599,
	600, 602, 601, 603, 0, 604, 0, 605, 606, 607,
	0, 0, 0, 0, 0, 608, 609, 611, 0, 612,
	613, 614, 615, 610, 616, 617, 618, 619, 620, 621,
	0, 623, 624, 622, 625, 626, 1385, 627, 628, 629,
	630, 631, 782, 1423, 0, 633, 634, 642, 643, 644,
	635, 636, 638, 645, 637, 646, 647, 648, 649, 651,
	650, 0, 653, 654, 652, 655, 656, 657, 1327, 658,
	783, 659, 639, 640, 660, 661, 1386, 662, 663, 664,
	665, 666, 667, 668, 784, 0, 669, 0, 670, 671,
	672, 673, 674, 675, 677, 641, 678, 683, 684, 785,
	679, 680, 681, 682, 1365, 686, 687, 688, 689, 0,
	690, 691, 0, 685, 676, 0, 692, 693, 694, 695,
	696, 697, 0, 698, 699, 0, 700, 787, 788, 789,
	790, 0, 712, 0, 701, 703, 704, 705, 706, 1366,
	707, 1367, 0, 708, 709, 710, 711, 702, 713, 714,
	0, 0, 715, 716, 717, 719, 721, 722, 718, 720,
	723, 1328, 724, 0, 0, 725, 726, 727, 793, 794,
	795, 0, 729, 730, 728, 731, 732, 735, 733, 734,
	796, 736, 737, 738, 0, 0, 0, 0, 739, 740,
	797, 741, 742, 743, 1429, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 327, 326, 328, 329, 330, 331, 0,
	332, 333, 0, 0, 1419, 0, 1417, 1330, 0, 0,
	0, 334, 0, 335, 336, 337, 1370, 338, 339, 340,
	341, 342, 343, 344, 745, 746, 0, 345, 747, 346,
	748, 0, 749, 347, 348, 349, 350, 351, 352, 353,
	0, 1329, 0, 354, 750, 751, 752, 0, 355, 356,
	1336, 0, 1317, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1371, 382, 383, 384, 1320, 1318,
	1319, 1326, 1322, 1321, 1325, 385, 386, 387, 388, 389,
	0, 390, 392, 754, 755, 0, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 756, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 1361, 1362,
	426, 0, 319, 0, 0, 0, 0, 0, 427, 428,
	429, 759, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 1372, 436, 437, 438, 760, 761,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 1368, 0, 763, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 1331, 1332, 1335, 552, 1374, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 1273, 320, 322, 1373, 767,
	469, 553, 470, 768, 769, 0, 770, 0, 471, 472,
	474, 1375, 1333, 1376, 473, 475, 476, 1377, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 1415,
	485, 487, 486, 0, 489, 1369, 488, 1378, 490, 491,
	1379, 0, 492, 493, 494, 495, 496, 497, 500, 1324,
	1323, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 1380, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 1381,
	545, 532, 0, 533, 323, 1382, 547, 548, 549, 550,
	0, 1334, 551, 774, 554, 555, 0, 0, 556, 0,
	557, 0, 1421, 559, 560, 561, 0, 0, 562, 563,
	775, 1383, 564, 1384, 1363, 565, 566, 558, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 1364,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 781, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 1385, 627, 628, 629, 630,
	631, 782, 1423, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 1327, 658, 783,
	659, 639, 640, 660, 661, 1386, 662, 663, 664, 665,
	666, 667, 668, 784, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 785, 679,
	680, 681, 682, 1365, 686, 687, 688, 689, 0, 690,
	691, 0, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 787, 788, 789, 790,
	0, 712, 0, 701, 703, 704, 705, 706, 1366, 707,
	1367, 0, 708, 709, 710, 711, 702, 713, 714, 0,
	0, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	1328, 724, 0, 0, 725, 726, 727, 793, 794, 795,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 0, 0, 0, 0, 739, 740, 797,
	741, 742, 743, 1429, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 1419, 0, 1417, 1330, 0, 0, 0,
	334, 0, 335, 336, 337, 1370, 338, 339, 340, 341,
	342, 343, 344, 745, 746, 0, 345, 747, 346, 748,
	0, 749, 347, 348, 349, 350, 351, 352, 353, 0,
	1329, 0, 354, 750, 751, 752, 0, 355, 356, 1336,
	0, 1317, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 1371, 382, 383, 384, 1320, 1318, 1319,
	1326, 1322, 1321, 1325, 385, 386, 387, 388, 389, 0,
	390, 392, 754, 755, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 756, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 1361, 1362, 426,
	0, 319, 0, 0, 0, 0, 0, 427, 428, 429,
	759, 0, 0, 0, 430, 0, 431, 432, 433, 0,
	434, 435, 0, 1372, 436, 437, 438, 760, 761, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	1368, 0, 763, 449, 0, 450, 451, 452, 453, 454,
	455, 456, 1331, 1332, 1335, 552, 1374, 457, 458, 459,
	0, 460, 461, 462, 463, 464, 0, 0, 0, 465,
	466, 467, 468, 0, 1273, 320, 322, 1373, 767, 469,
	553, 470, 768, 769, 0, 770, 0, 471, 472, 474,
	1375, 1333, 1376, 473, 475, 476, 1377, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 1369, 488, 1378, 490, 491, 1379,
	0, 492, 493, 494, 495, 496, 497, 500, 1324, 1323,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	1380, 527, 528, 529, 530, 531, 539, 541, 542, 537,
	538, 540, 543, 544, 546, 534, 535, 536, 1381, 545,
	532, 0, 533, 323, 1382, 547, 548, 549, 550, 0,
	1334, 551, 774, 554, 555, 0, 0, 556, 0, 557,
	0, 0, 559, 560, 561, 0, 0, 562, 563, 775,
	1383, 564, 1384, 1363, 565, 566, 558, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 0, 577, 578,
	777, 579, 580, 581, 778, 582, 583, 584, 1364, 585,
	780, 586, 587, 0, 588, 589, 590, 0, 591, 592,
	593, 594, 595, 596, 597, 598, 781, 599, 600, 602,
	601, 603, 0, 604, 0, 605, 606, 607, 0, 0,
	0, 0, 0, 608, 609, 611, 0, 612, 613, 614,
	615, 610, 616, 617, 618, 619, 620, 621, 0, 623,
	624, 622, 625, 626, 1385, 627, 628, 629, 630, 631,
	782, 632, 0, 633, 634, 642, 643, 644, 635, 636,
	638, 645, 637, 646, 647, 648, 649, 651, 650, 0,
	653, 654, 652, 655, 656, 657, 1327, 658, 783, 659,
	639, 640, 660, 661, 1386, 662, 663, 664, 665, 666,
	667, 668, 784, 0, 669, 0, 670, 671, 672, 673,
	674, 675, 677, 641, 678, 683, 684, 785, 679, 680,
	681, 682, 1365, 686, 687, 688, 689, 0, 690, 691,
	0, 685, 676, 0, 692, 693, 694, 695, 696, 697,
	0, 698, 699, 0, 700, 787, 788, 789, 790, 0,
	712, 0, 701, 703, 704, 705, 706, 1366, 707, 1367,
	0, 708, 709, 710, 711, 702, 713, 714, 0, 0,
	715, 716, 717, 719, 721, 722, 718, 720, 723, 1328,
	724, 0, 0, 725, 726, 727, 793, 794, 795, 0,
	729, 730, 728, 731, 732, 735, 733, 734, 796, 736,
	737, 738, 0, 0, 0, 0, 739, 740, 797, 741,
	742, 743, 1429, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 4860, 1330, 0, 0, 0, 334,
	0, 335, 336, 337, 1370, 338, 339, 340, 341, 342,
	343, 344, 745, 746, 0, 345, 747, 346, 748, 0,
	749, 347, 348, 349, 350, 351, 352, 353, 0, 1329,
	0, 354, 750, 751, 752, 0, 355, 356, 1336, 0,
	1317, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1371, 382, 383, 384, 1320, 1318, 1319, 1326,
	1322, 1321, 1325, 385, 386, 387, 388, 389, 0, 390,
	392, 754, 755, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 756, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 1361, 1362, 426, 0,
	319, 0, 0, 0, 0, 0, 427, 428, 429, 759,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 1372, 436, 437, 438, 760, 761, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 1368,
	0, 763, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 1331, 1332, 1335, 552, 1374, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 1273, 320, 322, 1373, 767, 469, 553,
	470, 768, 769, 0, 770, 0, 471, 472, 474, 1375,
	1333, 1376, 473, 475, 476, 1377, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 1369, 488, 1378, 490, 491, 1379, 0,
	492, 493, 494, 495, 496, 497, 500, 1324, 1323, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1380,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 1381, 545, 532,
	0, 533, 323, 1382, 547, 548, 549, 550, 0, 1334,
	551, 774, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 1383,
	564, 1384, 1363, 565, 566, 558, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 1364, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 781, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 1385, 627, 628, 629, 630, 631, 782,
	1423, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 1327, 658, 783, 659, 639,
	640, 660, 661, 1386, 662, 663, 664, 665, 666, 667,
	668, 784, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 785, 679, 680, 681,
	682, 1365, 686, 687, 688, 689, 0, 690, 691, 0,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 787, 788, 789, 790, 0, 712,
	0, 701, 703, 704, 705, 706, 1366, 707, 1367, 0,
	708, 709, 710, 711, 702, 713, 714, 0, 0, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 1328, 724,
	0, 0, 725, 726, 727, 793, 794, 795, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 316, 0, 0, 0, 739, 740, 797, 741, 742,
	743, 2916, 2917, 2918, 2935, 2936, 2937, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 2938, 0, 744, 0, 0, 0, 334, 0,
	335, 336, 337, 2114, 338, 339, 340, 341, 342, 343,
	344, 745, 746, 0, 345, 747, 346, 748, 0, 749,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 2099,
	354, 750, 751, 752, 0, 355, 356, 753, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 2928,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 2924,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	754, 755, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 756, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 757, 758, 426, 0, 0,
	0, 2929, 2930, 2931, 2932, 427, 428, 429, 759, 0,
	0, 2923, 430, 0, 431, 432, 433, 0, 434, 435,
	0, 0, 436, 437, 438, 760, 761, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 762, 0,
	763, 449, 0, 450, 451, 452, 453, 454, 455, 456,
	764, 765, 766, 552, 0, 457, 458, 459, 0, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 0, 0, 0, 0, 0, 767, 469, 553, 470,
	768, 769, 0, 770, 0, 471, 472, 474, 0, 771,
	0, 473, 475, 476, 0, 477, 0, 2933, 2934, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 772, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 2926, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 0, 545, 532, 0,
	533, 0, 0, 547, 548, 549, 550, 0, 773, 551,
	774, 554, 555, 0, 0, 556, 0, 557, 0, 0,
	559, 560, 561, 0, 0, 562, 563, 775, 0, 564,
	0, 776, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 0, 577, 578, 777, 579,
	580, 581, 778, 582, 583, 584, 779, 585, 780, 586,
	587, 0, 588, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 781, 599, 600, 602, 601, 603,
	0, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 609, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 0, 623, 624, 622,
	625, 626, 0, 627, 628, 629, 630, 631, 782, 632,
	2927, 633, 634, 642, 643, 644, 635, 636, 638, 645,
	637, 646, 647, 648, 649, 651, 650, 0, 653, 654,
	652, 655, 656, 657, 0, 658, 783, 659, 639, 640,
	660, 661, 0, 662, 663, 664, 665, 666, 667, 668,
	784, 0, 669, 0, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 785, 679, 680, 681, 682,
	786, 686, 687, 688, 689, 0, 690, 691, 2098, 685,
	676, 0, 692, 693, 694, 695, 696, 697, 0, 698,
	699, 0, 700, 787, 788, 789, 790, 0, 712, 0,
	701, 703, 704, 705, 706, 791, 707, 792, 0, 708,
	709, 710, 711, 702, 713, 714, 0, 0, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 0, 724, 0,
	0, 725, 726, 727, 793, 794, 795, 0, 729, 730,
	728, 731, 732, 735, 733, 734, 796, 736, 737, 738,
	0, 0, 0, 0, 739, 740, 797, 741, 742, 743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1245,
	0, 1718, 2913, 2914, 2915, 2939, 2925, 2919, 0, 2921,
	2922, 2920, 2907, 2908, 2909, 2910, 2911, 2912, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 744, 0, 0, 0, 334, 0,
	335, 336, 337, 1370, 338, 339, 340, 341, 342, 343,
	344, 745, 746, 0, 345, 747, 346, 748, 0, 749,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 750, 751, 752, 0, 355, 356, 753, 0, 1684,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 1371, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	754, 755, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 756, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 757, 758, 426, 0, 319,
	0, 0, 0, 0, 0, 427, 428, 429, 759, 0,
	0, 0, 430, 0, 431, 432, 433, 0, 434, 435,
	0, 1372, 436, 437, 438, 760, 761, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 762, 0,
	763, 449, 0, 450, 451, 452, 453, 454, 455, 456,
	764, 765, 766, 552, 1374, 457, 458, 459, 0, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 0, 0, 0, 0, 1373, 767, 469, 553, 470,
	768, 769, 0, 770, 0, 471, 472, 474, 1375, 771,
	1376, 473, 475, 476, 1377, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 772, 488, 1378, 490, 491, 1379, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 1380, 527,
	528, 529, 530, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 1381, 545, 532, 0,
	533, 0, 1382, 547, 548, 549, 550, 0, 773, 551,
	774, 554, 555, 0, 0, 556, 0, 557, 0, 0,
	559, 560, 561, 0, 0, 562, 563, 775, 1383, 564,
	1384, 776, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 0, 577, 578, 777, 579,
	580, 581, 778, 582, 583, 584, 779, 585, 780, 586,
	587, 0, 588, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 781, 599, 600, 602, 601, 603,
	0, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 609, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 0, 623, 624, 622,
	625, 626, 1385, 627, 628, 629, 630, 631, 782, 632,
	0, 633, 634, 642, 643, 644, 635, 636, 638, 645,
	637, 646, 647, 648, 649, 651, 650, 275, 653, 654,
	652, 655, 656, 657, 0, 658, 783, 659, 639, 640,
	660, 661, 1386, 662, 663, 664, 665, 666, 667, 668,
	784, 0, 669, 0, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 785, 679, 680, 681, 682,
	786, 686, 687, 688, 689, 0, 690, 691, 0, 685,
	676, 277, 692, 693, 694, 695, 696, 697, 0, 698,
	699, 0, 700, 787, 788, 789, 790, 0, 712, 0,
	701, 703, 704, 705, 706, 791, 707, 792, 0, 708,
	709, 710, 711, 702, 713, 714, 0, 0, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 0, 724, 0,
	0, 725, 726, 727, 1848, 794, 795, 0, 729, 730,
	728, 731, 732, 735, 733, 734, 796, 736, 737, 738,
	0, 0, 0, 269, 739, 740, 797, 741, 742, 743,
	0, 1845, 270, 1718, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 216, 0, 0, 0, 744, 0, 0, 0,
	334, 0, 335, 336, 337, 1370, 338, 339, 340, 341,
	342, 343, 344, 745, 746, 0, 345, 747, 346, 748,
	0, 749, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 750, 751, 752, 0, 355, 356, 753,
	0, 1684, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 1371, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 754, 755, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 756, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 757, 758, 426,
	0, 319, 0, 0, 0, 0, 0, 427, 428, 429,
	759, 0, 0, 0, 430, 0, 431, 432, 433, 0,
	434, 435, 0, 1372, 436, 437, 438, 760, 761, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	762, 0, 763, 449, 0, 450, 451, 452, 453, 454,
	455, 456, 764, 765, 766, 552, 1374, 457, 458, 459,
	0, 460, 461, 462, 463, 464, 0, 0, 0, 465,
	466, 467, 468, 0, 0, 0, 0, 1373, 767, 469,
	553, 470, 768, 769, 0, 770, 0, 471, 472, 474,
	1375, 771, 1376, 473, 475, 476, 1377, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 772, 488, 1378, 490, 491, 1379,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	1380, 527, 528, 529, 530, 531, 539, 541, 542, 537,
	538, 540, 543, 544, 546, 534, 535, 536, 1381, 545,
	532, 0, 533, 0, 1382, 547, 548, 549, 550, 0,
	773, 551, 774, 554, 555, 0, 0, 556, 0, 557,
	0, 0, 559, 560, 561, 0, 0, 562, 563, 775,
	1383, 564, 1384, 776, 565, 566, 558, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 0, 577, 578,
	777, 579, 580, 581, 778, 582, 583, 584, 779, 585,
	780, 586, 587, 0, 588, 589, 590, 0, 591, 592,
	593, 594, 595, 596, 597, 598, 781, 599, 600, 602,
	601, 603, 0, 604, 0, 605, 606, 607, 0, 0,
	0, 0, 0, 608, 609, 611, 0, 612, 613, 614,
	615, 610, 616, 617, 618, 619, 620, 621, 0, 623,
	624, 622, 625, 626, 1385, 627, 628, 629, 630, 631,
	782, 632, 0, 633, 634, 642, 643, 644, 635, 636,
	638, 645, 637, 646, 647, 648, 649, 651, 650, 275,
	653, 654, 652, 655, 656, 657, 0, 658, 783, 659,
	639, 640, 660, 661, 1386, 662, 663, 664, 665, 666,
	667, 668, 784, 0, 669, 0, 670, 671, 672, 673,
	674, 675, 677, 641, 678, 683, 684, 785, 679, 680,
	681, 682, 786, 686, 687, 688, 689, 0, 690, 691,
	0, 685, 676, 277, 692, 693, 694, 695, 696, 697,
	0, 698, 699, 0, 700, 787, 788, 789, 790, 0,
	712, 0, 701, 703, 704, 705, 706, 791, 707, 792,
	0, 708, 709, 710, 711, 702, 713, 714, 0, 0,
	715, 716, 717, 719, 721, 722, 718, 720, 723, 0,
	724, 0, 0, 725, 726, 727, 1848, 794, 795, 0,
	729, 730, 728, 731, 732, 735, 733, 734, 796, 736,
	737, 738, 0, 0, 0, 269, 739, 740, 797, 741,
	742, 743, 1718, 1717, 270, 0, 0, 0, 1715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 216, 744, 0, 0, 0, 334,
	0, 335, 336, 337, 1370, 338, 339, 340, 341, 342,
	343, 344, 745, 746, 0, 345, 747, 346, 748, 0,
	749, 347, 348, 349, 350, 351, 352, 353, 0, 0,
	0, 354, 750, 751, 752, 0, 355, 356, 753, 0,
	1684, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1371, 382, 383, 384, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 387, 388, 389, 0, 390,
	392, 754, 755, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 756, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 757, 758, 426, 0,
	319, 0, 0, 0, 0, 0, 427, 428, 429, 759,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 1372, 436, 437, 438, 760, 761, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 762,
	0, 763, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 764, 765, 766, 552, 1374, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 0, 0, 0, 1373, 767, 469, 553,
	470, 768, 769, 0, 770, 0, 471, 472, 474, 1375,
	771, 1376, 473, 475, 476, 1377, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 772, 488, 1378, 490, 491, 1379, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1380,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 1381, 545, 532,
	0, 533, 0, 1382, 547, 548, 549, 550, 0, 773,
	551, 774, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 1383,
	564, 1384, 776, 565, 566, 558, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 779, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 781, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 1385, 627, 628, 629, 630, 631, 782,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 0, 658, 783, 659, 639,
	640, 660, 661, 1386, 662, 663, 664, 665, 666, 667,
	668, 784, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 785, 679, 680, 681,
	682, 786, 686, 687, 688, 689, 0, 690, 691, 0,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 787, 788, 789, 790, 0, 712,
	0, 701, 703, 704, 705, 706, 791, 707, 792, 0,
	708, 709, 710, 711, 702, 713, 714, 0, 0, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 0, 724,
	0, 0, 725, 726, 727, 793, 794, 795, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 0, 0, 0, 0, 739, 740, 797, 741, 742,
	743, 1718, 1717, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 1872, 744, 0, 0, 0, 334, 0,
	335, 336, 337, 1370, 338, 339, 340, 341, 342, 343,
	344, 745, 746, 0, 345, 747, 346, 748, 0, 749,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 750, 751, 752, 0, 355, 356, 753, 0, 1684,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 1371, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	754, 755, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 756, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 757, 758, 426, 0, 319,
	0, 0, 0, 0, 0, 427, 428, 429, 759, 0,
	0, 0, 430, 0, 431, 432, 433, 0, 434, 435,
	0, 1372, 436, 437, 438, 760, 761, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 762, 0,
	763, 449, 0, 450, 451, 452, 453, 454, 455, 456,
	764, 765, 766, 552, 1374, 457, 458, 459, 0, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 0, 0, 0, 0, 1373, 767, 469, 553, 470,
	768, 769, 0, 770, 0, 471, 472, 474, 1375, 771,
	1376, 473, 475, 476, 1377, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 772, 488, 1378, 490, 491, 1379, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 1380, 527,
	528, 529, 530, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 1381, 545, 532, 0,
	533, 0, 1382, 547, 548, 549, 550, 0, 773, 551,
	774, 554, 555, 0, 0, 556, 0, 557, 0, 0,
	559, 560, 561, 0, 0, 562, 563, 775, 1383, 564,
	1384, 776, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 0, 577, 578, 777, 579,
	580, 581, 778, 582, 583, 584, 779, 585, 780, 586,
	587, 0, 588, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 781, 599, 600, 602, 601, 603,
	0, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 609, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 0, 623, 624, 622,
	625, 626, 1385, 627, 628, 629, 630, 631, 782, 632,
	0, 633, 634, 642, 643, 644, 635, 636, 638, 645,
	637, 646, 647, 648, 649, 651, 650, 0, 653, 654,
	652, 655, 656, 657, 0, 658, 783, 659, 639, 640,
	660, 661, 1386, 662, 663, 664, 665, 666, 667, 668,
	784, 0, 669, 0, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 785, 679, 680, 681, 682,
	786, 686, 687, 688, 689, 0, 690, 691, 0, 685,
	676, 0, 692, 693, 694, 695, 696, 697, 0, 698,
	699, 0, 700, 787, 788, 789, 790, 0, 712, 0,
	701, 703, 704, 705, 706, 791, 707, 792, 0, 708,
	709, 710, 711, 702, 713, 714, 0, 0, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 0, 724, 0,
	0, 725, 726, 727, 793, 794, 795, 0, 729, 730,
	728, 731, 732, 735, 733, 734, 796, 736, 737, 738,
	0, 0, 0, 0, 739, 740, 797, 741, 742, 743,
	1718, 1717, 0, 0, 0, 0, 1715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 327,
	326, 328, 329, 330, 331, 0, 332, 333, 0, 0,
	0, 0, 4210, 744, 0, 0, 0, 334, 0, 335,
	336, 337, 1370, 338, 339, 340, 341, 342, 343, 344,
	745, 746, 0, 345, 747, 346, 748, 0, 749, 347,
	348, 349, 350, 351, 352, 353, 0, 0, 0, 354,
	750, 751, 752, 0, 355, 356, 753, 0, 1684, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	1371, 382, 383, 384, 0, 0, 0, 0, 0, 0,
	0, 385, 386, 387, 388, 389, 0, 390, 392, 754,
	755, 0, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 756, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 757, 758, 426, 0, 319, 0,
	0, 0, 0, 0, 427, 428, 429, 759, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	1372, 436, 437, 438, 760, 761, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 762, 0, 763,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 764,
	765, 766, 552, 1374, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 0, 0, 0, 1373, 767, 469, 553, 470, 768,
	769, 0, 770, 0, 471, 472, 474, 1375, 771, 1376,
	473, 475, 476, 1377, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 772, 488, 1378, 490, 491, 1379, 0, 492, 493,
	494, 495, 496, 497, 500, 0, 0, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 1380, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 1381, 545, 532, 0, 533,
	0, 1382, 547, 548, 549, 550, 0, 773, 551, 774,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 1383, 564, 1384,
	776, 565, 566, 558, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 779, 585, 780, 586, 587,
	0, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 781, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 2665, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 1385, 627, 628, 629, 630, 631, 782, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 0, 658, 783, 659, 639, 640, 660,
	661, 1386, 662, 663, 664, 665, 666, 667, 668, 784,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 785, 679, 680, 681, 682, 786,
	686, 687, 688, 689, 0, 690, 691, 0, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 787, 788, 789, 790, 0, 712, 0, 701,
	703, 704, 705, 706, 791, 707, 792, 0, 708, 709,
	710, 711, 702, 713, 714, 0, 0, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 0, 724, 0, 0,
	725, 726, 727, 793, 794, 795, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 0,
	0, 0, 0, 739, 740, 797, 741, 742, 743, 1718,
	2569, 0, 0, 0, 0, 2570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 1872, 744, 0, 0, 0, 334, 0, 335, 336,
	337, 1370, 338, 339, 340, 341, 342, 343, 344, 745,
	746, 0, 345, 747, 346, 748, 0, 749, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 750,
	751, 752, 0, 355, 356, 753, 0, 1684, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 1371,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 754, 755,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	756, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 757, 758, 426, 0, 319, 0, 0,
	0, 0, 0, 427, 428, 429, 759, 0, 0, 0,
	430, 0, 431, 432, 433, 0, 434, 435, 0, 1372,
	436, 437, 438, 760, 761, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 762, 0, 763, 449,
	0, 450, 451, 452, 453, 454, 455, 456, 764, 765,
	766, 552, 1374, 457, 458, 459, 0, 460, 461, 462,
	463, 464, 0, 0, 0, 465, 466, 467, 468, 0,
	0, 0, 0, 1373, 767, 469, 553, 470, 768, 769,
	0, 770, 0, 471, 472, 474, 1375, 771, 1376, 473,
	475, 476, 1377, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 2568, 487, 486, 0, 489,
	772, 488, 1378, 490, 491, 1379, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 1380, 527, 528, 529,
	530, 531, 539, 541, 542, 537, 538, 540, 543, 544,
	546, 534, 535, 536, 1381, 545, 532, 0, 533, 0,
	1382, 547, 548, 549, 550, 0, 773, 551, 774, 554,
	555, 0, 0, 556, 0, 557, 0, 0, 559, 560,
	561, 0, 0, 562, 563, 775, 1383, 564, 1384, 776,
	565, 566, 558, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 0, 577, 578, 777, 579, 580, 581,
	778, 582, 583, 584, 779, 585, 780, 586, 587, 0,
	588, 589, 590, 0, 591, 592, 593, 594, 595, 596,
	597, 598, 781, 599, 600, 602, 601, 603, 0, 604,
	0, 605, 606, 607, 0, 0, 0, 0, 0, 608,
	609, 611, 0, 612, 613, 614, 615, 610, 616, 617,
	618, 619, 620, 621, 0, 623, 624, 622, 625, 626,
	1385, 627, 628, 629, 630, 631, 782, 632, 0, 633,
	634, 642, 643, 644, 635, 636, 638, 645, 637, 646,
	647, 648, 649, 651, 650, 0, 653, 654, 652, 655,
	656, 657, 0, 658, 783, 659, 639, 640, 660, 661,
	1386, 662, 663, 664, 665, 666, 667, 668, 784, 0,
	669, 0, 670, 671, 672, 673, 674, 675, 677, 641,
	678, 683, 684, 785, 679, 680, 681, 682, 786, 686,
	687, 688, 689, 0, 690, 691, 0, 685, 676, 0,
	692, 693, 694, 695, 696, 697, 0, 698, 699, 0,
	700, 787, 788, 789, 790, 0, 712, 0, 701, 703,
	704, 705, 706, 791, 707, 792, 0, 708, 709, 710,
	711, 702, 713, 714, 0, 0, 715, 716, 717, 719,
	721, 722, 718, 720, 723, 0, 724, 0, 0, 725,
	726, 727, 793, 794, 795, 0, 729, 730, 728, 731,
	732, 735, 733, 734, 796, 736, 737, 738, 0, 0,
	0, 0, 739, 740, 797, 741, 742, 743, 1718, 1717,
	0, 0, 0, 0, 1715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 327, 326, 328,
	329, 330, 331, 0, 332, 333, 0, 0, 0, 0,
	1872, 744, 0, 0, 0, 334, 0, 335, 336, 337,
	1370, 338, 339, 340, 341, 342, 343, 344, 745, 746,
	0, 345, 747, 346, 748, 0, 749, 347, 348, 349,
	350, 351, 352, 353, 0, 0, 0, 354, 750, 751,
	752, 0, 355, 356, 753, 0, 1684, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 1371, 382,
	383, 384, 0, 0, 0, 0, 0, 0, 0, 385,
	386, 387, 388, 389, 0, 390, 392, 754, 755, 0,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 756,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 757, 758, 426, 0, 319, 0, 0, 0,
	0, 0, 427, 428, 429, 759, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 1372, 436,
	437, 438, 760, 761, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 762, 0, 763, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 764, 765, 766,
	552, 1374, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 0,
	0, 0, 1373, 767, 469, 553, 470, 768, 769, 0,
	770, 0, 471, 472, 474, 1375, 771, 1376, 473, 475,
	476, 1377, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 772,
	488, 1378, 490, 491, 1379, 0, 492, 493, 494, 495,
	496, 497, 500, 0, 0, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 1380, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 1381, 545, 532, 0, 533, 0, 1382,
	547, 548, 549, 550, 0, 773, 551, 774, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 1383, 564, 1384, 776, 565,
	566, 558, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 779, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 781, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 1385,
	627, 628, 629, 630, 631, 782, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 0, 658, 783, 659, 639, 640, 660, 661, 1386,
	662, 663, 664, 665, 666, 667, 668, 784, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 785, 679, 680, 681, 682, 786, 686, 687,
	688, 689, 0, 690, 691, 0, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	787, 788, 789, 790, 0, 712, 0, 701, 703, 704,
	705, 706, 791, 707, 792, 0, 708, 709, 710, 711,
	702, 713, 714, 0, 0, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 0, 724, 0, 0, 725, 726,
	727, 793, 794, 795, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 0, 0, 0,
	0, 739, 740, 797, 741, 742, 743, 1245, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 1854,
	0, 0, 744, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 745,
	746, 0, 345, 747, 346, 748, 0, 749, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 750,
	751, 752, 0, 355, 356, 753, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 754, 755,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	756, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 757, 758, 426, 0, 0, 0, 0,
	0, 0, 0, 427, 428, 429, 759, 0, 0, 0,
	430, 0, 431, 432, 433, 0, 434, 435, 0, 0,
	436, 437, 438, 760, 761, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 762, 0, 763, 449,
	0, 450, 451, 452, 453, 454, 455, 456, 764, 765,
	766, 552, 0, 457, 458, 459, 0, 460, 461, 462,
	463, 464, 0, 0, 0, 465, 466, 467, 468, 0,
	0, 0, 0, 0, 767, 469, 553, 470, 768, 769,
	0, 770, 0, 471, 472, 474, 0, 771, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	772, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 539, 541, 542, 537, 538, 540, 543, 544,
	546, 534, 535, 536, 0, 545, 532, 0, 533, 0,
	0, 547, 548, 549, 550, 0, 773, 551, 774, 554,
	555, 0, 0, 556, 0, 557, 0, 0, 559, 560,
	561, 0, 0, 562, 563, 775, 0, 564, 0, 776,
	565, 566, 558, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 0, 577, 578, 777, 579, 580, 581,
	778, 582, 583, 584, 779, 585, 780, 586, 587, 0,
	588, 589, 590, 0, 591, 592, 593, 594, 595, 596,
	597, 598, 781, 599, 600, 602, 601, 603, 0, 604,
	0, 605, 606, 607, 0, 0, 0, 0, 0, 608,
	609, 611, 0, 612, 613, 614, 615, 610, 616, 617,
	618, 619, 620, 621, 0, 623, 624, 622, 625, 626,
	0, 627, 628, 629, 630, 631, 782, 632, 0, 633,
	634, 642, 643, 644, 635, 636, 638, 645, 637, 646,
	647, 648, 649, 651, 650, 275, 653, 654, 652, 655,
	656, 657, 0, 658, 783, 659, 639, 640, 660, 661,
	0, 662, 663, 664, 665, 666, 667, 668, 784, 0,
	669, 0, 670, 671, 672, 673, 674, 675, 677, 641,
	678, 683, 684, 785, 679, 680, 681, 682, 786, 686,
	687, 688, 689, 0, 690, 691, 0, 685, 676, 277,
	692, 693, 694, 695, 696, 697, 0, 698, 699, 0,
	700, 787, 788, 789, 790, 0, 712, 0, 701, 703,
	704, 705, 706, 791, 707, 792, 0, 708, 709, 710,
	711, 702, 713, 714, 0, 0, 715, 716, 717, 719,
	721, 722, 718, 720, 723, 0, 724, 0, 0, 725,
	726, 727, 1848, 794, 795, 0, 729, 730, 728, 731,
	732, 735, 733, 734, 796, 736, 737, 738, 316, 0,
	0, 269, 739, 740, 797, 741, 742, 743, 0, 0,
	270, 0, 0, 0, 0, 324, 325, 327, 326, 328,
	329, 330, 331, 0, 332, 333, 0, 0, 0, 0,
	0, 744, 0, 0, 0, 334, 0, 335, 336, 337,
	216, 338, 339, 340, 341, 342, 343, 344, 745, 746,
	0, 345, 747, 346, 748, 0, 749, 347, 348, 349,
	350, 351, 352, 353, 0, 0, 0, 354, 750, 751,
	752, 0, 355, 356, 753, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 0, 382,
	383, 384, 0, 0, 0, 0, 0, 0, 0, 385,
	386, 387, 388, 389, 0, 390, 392, 754, 755, 0,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 756,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 757, 758, 426, 0, 319, 0, 0, 0,
	0, 0, 427, 428, 429, 759, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 0, 436,
	437, 438, 760, 761, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 762, 0, 763, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 764, 765, 766,
	552, 0, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 321,
	320, 322, 0, 767, 469, 553, 470, 768, 769, 0,
	770, 0, 471, 472, 474, 0, 771, 0, 473, 475,
	476, 0, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 772,
	488, 0, 490, 491, 0, 0, 492, 493, 494, 495,
	496, 497, 500, 0, 0, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 0, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 0, 545, 532, 0, 533, 323, 0,
	547, 548, 549, 550, 0, 773, 551, 774, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 0, 564, 0, 776, 565,
	566, 558, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 779, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 781, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 0,
	627, 628, 629, 630, 631, 782, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 0, 658, 783, 659, 639, 640, 660, 661, 0,
	662, 663, 664, 665, 666, 667, 668, 784, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 785, 679, 680, 681, 682, 786, 686, 687,
	688, 689, 0, 690, 691, 0, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	787, 788, 789, 790, 0, 712, 0, 701, 703, 704,
	705, 706, 791, 707, 792, 0, 708, 709, 710, 711,
	702, 713, 714, 0, 0, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 0, 724, 0, 0, 725, 726,
	727, 793, 794, 795, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 316, 0, 0,
	0, 739, 740, 797, 741, 742, 743, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	744, 0, 0, 0, 334, 0, 335, 336, 337, 2236,
	338, 339, 340, 341, 342, 343, 344, 745, 746, 0,
	345, 747, 346, 748, 0, 749, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 750, 751, 752,
	0, 355, 356, 753, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 0, 390, 392, 754, 755, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 756, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 757, 758, 426, 0, 319, 0, 0, 0, 0,
	0, 427, 428, 429, 759, 0, 0, 0, 430, 0,
	431, 432, 433, 0, 434, 435, 0, 0, 436, 437,
	438, 760, 761, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 762, 0, 763, 449, 0, 450,
	451, 452, 453, 454, 455, 456, 764, 765, 766, 552,
	0, 457, 458, 459, 0, 460, 461, 462, 463, 464,
	0, 0, 0, 465, 466, 467, 468, 0, 321, 320,
	322, 0, 767, 469, 553, 470, 768, 769, 0, 770,
	0, 471, 472, 474, 0, 771, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 772, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	539, 541, 542, 537, 538, 540, 543, 544, 546, 534,
	535, 536, 0, 545, 532, 0, 533, 323, 0, 547,
	548, 549, 550, 0, 773, 551, 774, 554, 555, 0,
	0, 556, 0, 557, 0, 0, 559, 560, 561, 0,
	0, 562, 563, 775, 0, 564, 0, 776, 565, 566,
	558, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 0, 577, 578, 777, 579, 580, 581, 778, 582,
	583, 584, 779, 585, 780, 586, 587, 0, 588, 589,
	590, 0, 591, 592, 593, 594, 595, 596, 597, 598,
	781, 599, 600, 602, 601, 603, 0, 604, 0, 605,
	606, 607, 0, 0, 0, 0, 0, 608, 609, 611,
	0, 612, 613, 614, 615, 610, 616, 617, 618, 619,
	620, 621, 0, 623, 624, 622, 625, 626, 0, 627,
	628, 629, 630, 631, 782, 632, 0, 633, 634, 642,
	643, 644, 635, 636, 638, 645, 637, 646, 647, 648,
	649, 651, 650, 0, 653, 654, 652, 655, 656, 657,
	0, 658, 783, 659, 639, 640, 660, 661, 0, 662,
	663, 664, 665, 666, 667, 668, 784, 0, 669, 0,
	670, 671, 672, 673, 674, 675, 677, 641, 678, 683,
	684, 785, 679, 680, 681, 682, 786, 686, 687, 688,
	689, 0, 690, 691, 0, 685, 676, 0, 692, 693,
	694, 695, 696, 697, 0, 698, 699, 0, 700, 787,
	788, 789, 790, 0, 712, 0, 701, 703, 704, 705,
	706, 791, 707, 792, 0, 708, 709, 710, 711, 702,
	713, 714, 0, 0, 715, 716, 717, 719, 721, 722,
	718, 720, 723, 0, 724, 0, 0, 725, 726, 727,
	793, 794, 795, 0, 729, 730, 728, 731, 732, 735,
	733, 734, 796, 736, 737, 738, 0, 0, 316, 0,
	739, 740, 797, 741, 742, 743, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 327, 326, 328,
	329, 330, 331, 0, 332, 333, 0, 0, 0, 0,
	0, 744, 0, 0, 0, 334, 1842, 335, 336, 337,
	0, 338, 339, 340, 341, 342, 343, 344, 745, 746,
	0, 345, 747, 346, 748, 0, 749, 347, 348, 349,
	350, 351, 352, 353, 0, 0, 0, 354, 750, 751,
	752, 0, 355, 356, 753, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 0, 382,
	383, 384, 0, 0, 0, 0, 0, 0, 0, 385,
	386, 387, 388, 389, 0, 390, 392, 754, 755, 0,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 756,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 757, 758, 426, 0, 319, 0, 0, 0,
	0, 0, 427, 428, 429, 759, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 0, 436,
	437, 438, 760, 761, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 762, 0, 763, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 764, 765, 766,
	552, 0, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 321,
	320, 322, 0, 767, 469, 553, 470, 768, 769, 0,
	770, 0, 471, 472, 474, 0, 771, 0, 473, 475,
	476, 0, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 772,
	488, 0, 490, 491, 0, 0, 492, 493, 494, 495,
	496, 497, 500, 0, 0, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 0, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 0, 545, 532, 0, 533, 323, 0,
	547, 548, 549, 550, 0, 773, 551, 774, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 0, 564, 0, 776, 565,
	566, 558, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 779, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 781, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 0,
	627, 628, 629, 630, 631, 782, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 0, 658, 783, 659, 639, 640, 660, 661, 0,
	662, 663, 664, 665, 666, 667, 668, 784, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 785, 679, 680, 681, 682, 786, 686, 687,
	688, 689, 0, 690, 691, 0, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	787, 788, 789, 790, 0, 712, 0, 701, 703, 704,
	705, 706, 791, 707, 792, 0, 708, 709, 710, 711,
	702, 713, 714, 0, 0, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 0, 724, 0, 0, 725, 726,
	727, 793, 794, 795, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 0, 0, 316,
	3432, 739, 740, 797, 741, 742, 743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 744, 0, 0, 0, 334, 4161, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 745,
	746, 0, 345, 747, 346, 748, 0, 749, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 750,
	751, 752, 0, 355, 356, 753, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 754, 755,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	756, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 757, 758, 426, 0, 0, 0, 0,
	0, 0, 0, 427, 428, 429, 759, 0, 0, 0,
	430, 0, 431, 432, 433, 0, 434, 435, 0, 0,
	436, 437, 438, 760, 761, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 762, 0, 763, 449,
	0, 450, 451, 452, 453, 454, 455, 456, 764, 765,
	766, 552, 0, 457, 458, 459, 0, 460, 461, 462,
	463, 464, 0, 0, 0, 465, 466, 467, 468, 0,
	0, 0, 0, 0, 767, 469, 553, 470, 768, 769,
	0, 770, 0, 471, 472, 474, 0, 771, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	772, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 539, 541, 542, 537, 538, 540, 543, 544,
	546, 534, 535, 536, 0, 545, 532, 0, 533, 0,
	0, 547, 548, 549, 550, 0, 773, 551, 774, 554,
	555, 0, 0, 556, 0, 557, 0, 0, 559, 560,
	561, 0, 0, 562, 563, 775, 0, 564, 0, 776,
	565, 566, 558, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 0, 577, 578, 777, 579, 580, 581,
	778, 582, 583, 584, 779, 585, 780, 586, 587, 0,
	588, 589, 590, 0, 591, 592, 593, 594, 595, 596,
	597, 598, 781, 599, 600, 602, 601, 603, 0, 604,
	0, 605, 606, 607, 0, 0, 0, 0, 0, 608,
	609, 611, 0, 612, 613, 614, 615, 610, 616, 617,
	618, 619, 620, 621, 0, 623, 624, 622, 625, 626,
	0, 627, 628, 629, 630, 631, 782, 632, 0, 633,
	634, 642, 643, 644, 635, 636, 638, 645, 637, 646,
	647, 648, 649, 651, 650, 0, 653, 654, 652, 655,
	656, 657, 0, 658, 783, 659, 639, 640, 660, 661,
	0, 662, 663, 664, 665, 666, 667, 668, 784, 0,
	669, 0, 670, 671, 672, 673, 674, 675, 677, 641,
	678, 683, 684, 785, 679, 680, 681, 682, 786, 686,
	687, 688, 689, 0, 690, 691, 0, 685, 676, 0,
	692, 693, 694, 695, 696, 697, 0, 698, 699, 0,
	700, 787, 788, 789, 790, 0, 712, 0, 701, 703,
	704, 705, 706, 791, 707, 792, 0, 708, 709, 710,
	711, 702, 713, 714, 0, 0, 715, 716, 717, 719,
	721, 722, 718, 720, 723, 0, 724, 0, 0, 725,
	726, 727, 793, 794, 795, 0, 729, 730, 728, 731,
	732, 735, 733, 734, 796, 736, 737, 738, 0, 0,
	0, 0, 739, 740, 797, 741, 742, 743, 1429, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 327, 326, 328,
	329, 330, 331, 0, 332, 333, 0, 0, 0, 0,
	5685, 1330, 0, 0, 0, 334, 0, 335, 336, 337,
	1370, 338, 339, 340, 341, 342, 343, 344, 745, 746,
	0, 345, 747, 346, 748, 0, 749, 347, 348, 349,
	350, 351, 352, 353, 0, 1329, 0, 354, 750, 751,
	752, 0, 355, 356, 1336, 0, 1317, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 1371, 382,
	383, 384, 1320, 1318, 1319, 1326, 1322, 1321, 1325, 385,
	386, 387, 388, 389, 0, 390, 392, 754, 755, 0,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 756,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 1361, 1362, 426, 0, 319, 0, 0, 0,
	0, 0, 427, 428, 429, 759, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 1372, 436,
	437, 438, 760, 761, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 1368, 0, 763, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 1331, 1332, 1335,
	552, 1374, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 1273,
	320, 322, 1373, 767, 469, 553, 470, 768, 769, 0,
	770, 0, 471, 472, 474, 1375, 1333, 1376, 473, 475,
	476, 1377, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 1369,
	488, 1378, 490, 491, 1379, 0, 492, 493, 494, 495,
	496, 497, 500, 1324, 1323, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 1380, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 1381, 545, 532, 0, 533, 323, 1382,
	547, 548, 549, 550, 0, 1334, 551, 774, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 1383, 564, 1384, 1363, 565,
	566, 558, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 1364, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 781, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 1385,
	627, 628, 629, 630, 631, 782, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 1327, 658, 783, 659, 639, 640, 660, 661, 1386,
	662, 663, 664, 665, 666, 667, 668, 784, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 785, 679, 680, 681, 682, 1365, 686, 687,
	688, 689, 0, 690, 691, 0, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	787, 788, 789, 790, 0, 712, 0, 701, 703, 704,
	705, 706, 1366, 707, 1367, 0, 708, 709, 710, 711,
	702, 713, 714, 0, 0, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 1328, 724, 0, 0, 725, 726,
	727, 793, 794, 795, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 3240, 0, 0,
	0, 739, 740, 797, 741, 742, 743, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 334, 0, 335, 336, 337, 1370,
	338, 339, 340, 341, 342, 343, 344, 0, 2291, 0,
	345, 2298, 346, 2297, 0, 2306, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 2309, 2310, 0,
	0, 355, 356, 0, 0, 1684, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 1371, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 1353, 390, 392, 2295, 2294, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 1338, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 0, 0, 426, 0, 319, 0, 0, 0, 0,
	0, 427, 428, 429, 2293, 0, 0, 0, 430, 0,
	431, 432, 433, 0, 434, 435, 0, 1372, 436, 437,
	438, 2304, 2305, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 0, 0, 0, 449, 0, 450,
	451, 452, 453, 454, 455, 456, 0, 0, 0, 552,
	1374, 457, 458, 459, 3234, 460, 461, 462, 463, 464,
	0, 0, 0, 465, 466, 467, 468, 0, 0, 0,
	0, 1373, 3236, 469, 553, 470, 2288, 2289, 0, 2284,
	0, 471, 472, 474, 1375, 0, 1376, 473, 475, 476,
	1377, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 0, 488,
	1378, 490, 491, 1379, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 1380, 527, 528, 529, 530, 531,
	539, 541, 542, 537, 538, 540, 543, 544, 546, 534,
	535, 536, 1381, 545, 532, 0, 533, 0, 1382, 547,
	548, 549, 550, 0, 0, 551, 2296, 554, 555, 0,
	0, 556, 0, 557, 0, 0, 559, 560, 561, 0,
	0, 562, 563, 3235, 1383, 564, 1384, 0, 565, 566,
	558, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 0, 577, 578, 2281, 579, 580, 581, 2282, 582,
	583, 584, 0, 585, 0, 586, 587, 0, 588, 589,
	590, 0, 591, 592, 593, 594, 595, 596, 597, 598,
	2292, 599, 600, 602, 601, 603, 0, 604, 0, 605,
	606, 607, 0, 0, 0, 0, 0, 608, 609, 611,
	0, 612, 613, 614, 615, 610, 616, 617, 618, 619,
	620, 621, 0, 623, 624, 622, 625, 626, 1385, 627,
	628, 629, 630, 631, 0, 632, 0, 633, 634, 642,
	643, 644, 635, 636, 638, 645, 637, 646, 647, 648,
	649, 651, 650, 0, 653, 654, 652, 655, 656, 657,
	0, 658, 0, 659, 639, 640, 660, 661, 1386, 662,
	663, 664, 665, 666, 667, 668, 2290, 0, 669, 0,
	670, 671, 672, 673, 674, 675, 677, 641, 678, 683,
	684, 2308, 679, 680, 681, 682, 0, 686, 687, 688,
	689, 0, 690, 691, 0, 685, 676, 0, 692, 693,
	694, 695, 696, 697, 0, 698, 699, 0, 700, 2300,
	2301, 2302, 2303, 0, 712, 0, 701, 703, 704, 705,
	706, 0, 707, 0, 0, 708, 709, 710, 711, 702,
	713, 714, 0, 0, 715, 716, 717, 719, 721, 722,
	718, 720, 723, 0, 724, 0, 0, 725, 726, 727,
	0, 2299, 2307, 3237, 729, 730, 728, 731, 732, 735,
	733, 734, 0, 736, 737, 738, 0, 0, 0, 0,
	739, 740, 0, 741, 742, 743, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 3229,
	744, 0, 2277, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 745, 746, 0,
	345, 747, 346, 748, 0, 749, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 750, 751, 752,
	0, 355, 356, 753, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 0, 390, 392, 754, 755, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 756, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 757, 758, 426, 0, 0, 0, 0, 0, 0,
	0, 427, 428, 429, 759, 0, 0, 0, 430, 0,
	431, 432, 433, 0, 434, 435, 0, 0, 436, 437,
	438, 760, 761, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 762, 0, 763, 449, 0, 450,
	451, 452, 453, 454, 455, 456, 764, 765, 766, 552,
	0, 457, 458, 459, 0, 460, 461, 462, 463, 464,
	0, 0, 0, 465, 466, 467, 468, 0, 0, 0,
	0, 0, 767, 469, 553, 470, 768, 769, 0, 770,
	0, 471, 472, 474, 0, 771, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 772, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	539, 541, 542, 537, 538, 540, 543, 544, 546, 534,
	535, 536, 0, 545, 532, 0, 533, 0, 0, 547,
	548, 549, 550, 0, 773, 551, 774, 554, 555, 0,
	0, 556, 0, 557, 0, 0, 559, 560, 561, 0,
	0, 562, 563, 775, 0, 564, 0, 776, 565, 566,
	558, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 0, 577, 578, 777, 579, 580, 581, 778, 582,
	583, 584, 779, 585, 780, 586, 587, 0, 588, 589,
	590, 0, 591, 592, 593, 594, 595, 596, 597, 598,
	781, 599, 600, 602, 601, 603, 0, 604, 0, 605,
	606, 607, 0, 0, 0, 0, 0, 608, 609, 611,
	0, 612, 613, 614, 615, 610, 616, 617, 618, 619,
	620, 621, 0, 623, 624, 622, 625, 626, 0, 627,
	628, 629, 630, 631, 782, 632, 0, 633, 634, 642,
	643, 644, 635, 636, 638, 645, 637, 646, 647, 648,
	649, 651, 650, 0, 653, 654, 652, 655, 656, 657,
	0, 658, 783, 659, 639, 640, 660, 661, 0, 662,
	663, 664, 665, 666, 667, 668, 784, 0, 669, 0,
	670, 671, 672, 673, 674, 675, 677, 641, 678, 683,
	684, 785, 679, 680, 681, 682, 786, 686, 687, 688,
	689, 0, 690, 691, 0, 685, 676, 0, 692, 693,
	694, 695, 696, 697, 0, 698, 699, 0, 700, 787,
	788, 789, 790, 0, 712, 0, 701, 703, 704, 705,
	706, 791, 707, 792, 0, 708, 709, 710, 711, 702,
	713, 714, 0, 0, 715, 716, 717, 719, 721, 722,
	718, 720, 723, 0, 724, 0, 0, 725, 726, 727,
	793, 794, 795, 0, 729, 730, 728, 731, 732, 735,
	733, 734, 796, 736, 737, 738, 0, 0, 0, 0,
	739, 740, 797, 741, 742, 743, 3240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 327, 326, 328, 329, 330,
	331, 0, 332, 333, 0, 0, 0, 0, 3551, 0,
	0, 0, 0, 334, 0, 335, 336, 337, 1370, 338,
	339, 340, 341, 342, 343, 344, 0, 2291, 0, 345,
	2298, 346, 2297, 0, 2306, 347, 348, 349, 350, 351,
	352, 353, 0, 0, 0, 354, 2309, 2310, 0, 0,
	355, 356, 0, 0, 1684, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 1371, 382, 383, 384,
	0, 0, 0, 0, 0, 0, 0, 385, 386, 387,
	388, 389, 1353, 390, 392, 2295, 2294, 0, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 1338, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	0, 0, 426, 0, 319, 0, 0, 0, 0, 0,
	427, 428, 429, 2293, 0, 0, 0, 430, 0, 431,
	432, 433, 0, 434, 435, 0, 1372, 436, 437, 438,
	2304, 2305, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 0, 0, 0, 449, 0, 450, 451,
	452, 453, 454, 455, 456, 0, 0, 0, 552, 1374,
	457, 458, 459, 3234, 460, 461, 462, 463, 464, 0,
	0, 0, 465, 466, 467, 468, 0, 0, 0, 0,
	1373, 3236, 469, 553, 470, 2288, 2289, 0, 2284, 0,
	471, 472, 474, 1375, 0, 1376, 473, 475, 476, 1377,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 0, 488, 1378,
	490, 491, 1379, 0, 492, 493, 494, 495, 496, 497,
	500, 0, 0, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 1380, 527, 528, 529, 530, 531, 539,
	541, 542, 537, 538, 540, 543, 544, 546, 534, 535,
	536, 1381, 545, 532, 0, 533, 0, 1382, 547, 548,
	549, 550, 0, 0, 551, 2296, 554, 555, 0, 0,
	556, 0, 557, 0, 0, 559, 560, 561, 0, 0,
	562, 563, 3235, 1383, 564, 1384, 0, 565, 566, 558,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	0, 577, 578, 2281, 579, 580, 581, 2282, 582, 583,
	584, 0, 585, 0, 586, 587, 0, 588, 589, 590,
	0, 591, 592, 593, 594, 595, 596, 597, 598, 2292,
	599, 600, 602, 601, 603, 0, 604, 0, 605, 606,
	607, 0, 0, 0, 0, 0, 608, 609, 611, 0,
	612, 613, 614, 615, 610, 616, 617, 618, 619, 620,
	621, 0, 623, 624, 622, 625, 626, 1385, 627, 628,
	629, 630, 631, 0, 632, 0, 633, 634, 642, 643,
	644, 635, 636, 638, 645, 637, 646, 647, 648, 649,
	651, 650, 0, 653, 654, 652, 655, 656, 657, 0,
	658, 0, 659, 639, 640, 660, 661, 1386, 662, 663,
	664, 665, 666, 667, 668, 2290, 0, 669, 0, 670,
	671, 672, 673, 674, 675, 677, 641, 678, 683, 684,
	2308, 679, 680, 681, 682, 0, 686, 687, 688, 689,
	0, 690, 691, 0, 685, 676, 0, 692, 693, 694,
	695, 696, 697, 0, 698, 699, 0, 700, 2300, 2301,
	2302, 2303, 0, 712, 0, 701, 703, 704, 705, 706,
	0, 707, 0, 0, 708, 709, 710, 711, 702, 713,
	714, 0, 0, 715, 716, 717, 719, 721, 722, 718,
	720, 723, 0, 724, 0, 0, 725, 726, 727, 0,
	2299, 2307, 3237, 729, 730, 728, 731, 732, 735, 733,
	734, 0, 736, 737, 738, 0, 0, 0, 0, 739,
	740, 0, 741, 742, 743, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 744, 0,
	0, 2277, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 745, 746, 0, 345, 747,
	346, 748, 0, 749, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 750, 751, 752, 0, 355,
	356, 753, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 754, 755, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 756, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 757,
	758, 426, 0, 0, 0, 0, 0, 0, 0, 427,
	428, 429, 759, 0, 0, 0, 430, 0, 431, 432,
	433, 0, 434, 435, 0, 0, 436, 437, 438, 760,
	761, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 762, 0, 763, 449, 0, 450, 451, 452,
	453, 454, 455, 456, 764, 765, 766, 552, 0, 457,
	458, 459, 0, 460, 461, 462, 463, 464, 0, 0,
	0, 465, 466, 467, 468, 0, 0, 0, 0, 0,
	767, 469, 553, 470, 768, 769, 0, 770, 0, 471,
	472, 474, 0, 771, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 772, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 539, 541,
	542, 537, 538, 540, 543, 544, 546, 534, 535, 536,
	0, 545, 532, 0, 533, 0, 0, 547, 548, 549,
	550, 0, 773, 551, 774, 554, 555, 0, 0, 556,
	0, 557, 0, 0, 559, 560, 561, 0, 0, 562,
	563, 775, 0, 564, 0, 776, 565, 566, 558, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 0,
	577, 578, 777, 579, 580, 581, 778, 582, 583, 584,
	779, 585, 780, 586, 587, 0, 588, 589, 590, 0,
	591, 592, 593, 594, 595, 596, 597, 598, 781, 599,
	600, 602, 601, 603, 0, 604, 0, 605, 606, 607,
	0, 0, 0, 0, 0, 608, 609, 611, 0, 612,
	613, 614, 615, 610, 616, 617, 618, 619, 620, 621,
	0, 623, 624, 622, 625, 626, 0, 627, 628, 629,
	630, 631, 782, 632, 0, 633, 634, 642, 643, 644,
	635, 636, 638, 645, 637, 646, 647, 648, 649, 651,
	650, 0, 653, 654, 652, 655, 656, 657, 0, 658,
	783, 659, 639, 640, 660, 661, 0, 662, 663, 664,
	665, 666, 667, 668, 784, 0, 669, 0, 670, 671,
	672, 673, 674, 675, 677, 641, 678, 683, 684, 785,
	679, 680, 681, 682, 786, 686, 687, 688, 689, 0,
	690, 691, 0, 685, 676, 0, 692, 693, 694, 695,
	696, 697, 0, 698, 699, 0, 700, 787, 788, 789,
	790, 0, 712, 0, 701, 703, 704, 705, 706, 791,
	707, 792, 0, 708, 709, 710, 711, 702, 713, 714,
	0, 0, 715, 716, 717, 719, 721, 722, 718, 720,
	723, 0, 724, 0, 0, 725, 726, 727, 793, 794,
	795, 0, 729, 730, 728, 731, 732, 735, 733, 734,
	796, 736, 737, 738, 316, 0, 0, 0, 739, 740,
	797, 741, 742, 743, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 327, 326, 328, 329, 330, 331, 0,
	332, 333, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 334, 0, 335, 336, 337, 4331, 338, 339, 340,
	341, 342, 343, 344, 745, 746, 0, 345, 747, 346,
	748, 0, 749, 347, 348, 349, 350, 351, 352, 353,
	0, 0, 0, 354, 750, 751, 752, 0, 355, 356,
	753, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 0, 382, 383, 384, 0, 0,
	0, 0, 0, 0, 0, 385, 386, 387, 388, 389,
	0, 390, 392, 754, 755, 0, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 756, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 757, 758,
	426, 0, 0, 0, 0, 0, 0, 0, 427, 428,
	429, 759, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 0, 436, 437, 438, 760, 761,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 762, 0, 763, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 764, 765, 766, 552, 0, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 0, 0, 0, 0, 767,
	469, 553, 470, 768, 769, 0, 770, 0, 471, 472,
	474, 0, 771, 0, 473, 475, 476, 0, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 772, 488, 0, 490, 491,
	0, 0, 492, 493, 494, 495, 496, 497, 500, 0,
	0, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 0, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 0,
	545, 532, 0, 533, 0, 0, 547, 548, 549, 550,
	0, 773, 551, 774, 554, 555, 0, 0, 556, 0,
	557, 0, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 0, 564, 0, 776, 565, 566, 558, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 779,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 781, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 0, 627, 628, 629, 630,
	631, 782, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 0, 658, 783,
	659, 639, 640, 660, 661, 0, 662, 663, 664, 665,
	666, 667, 668, 784, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 785, 679,
	680, 681, 682, 786, 686, 687, 688, 689, 0, 690,
	691, 0, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 787, 788, 789, 790,
	0, 712, 0, 701, 703, 704, 705, 706, 791, 707,
	792, 0, 708, 709, 710, 711, 702, 713, 714, 0,
	0, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	0, 724, 0, 0, 725, 726, 727, 793, 794, 795,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 0, 0, 0, 0, 739, 740, 797,
	741, 742, 743, 1064, 0, 963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 2652, 0, 0, 744, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 745, 746, 0, 345, 747,
	346, 748, 0, 749, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 750, 751, 752, 0, 355,
	356, 753, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 970,
	389, 0, 390, 392, 754, 755, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 756, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 757,
	758, 426, 0, 319, 0, 0, 0, 0, 0, 427,
	428, 429, 759, 0, 0, 0, 430, 0, 431, 432,
	433, 0, 434, 435, 1061, 0, 436, 437, 438, 760,
	761, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 762, 0, 763, 449, 0, 450, 451, 452,
	453, 454, 455, 456, 764, 765, 766, 552, 0, 457,
	458, 459, 0, 460, 461, 462, 463, 464, 0, 0,
	0, 465, 466, 467, 468, 0, 321, 320, 322, 0,
	767, 469, 553, 470, 768, 769, 0, 770, 0, 471,
	472, 474, 0, 771, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 772, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 539, 541,
	542, 537, 538, 540, 543, 544, 546, 534, 535, 536,
	0, 545, 532, 0, 533, 323, 0, 547, 548, 549,
	550, 0, 773, 551, 774, 554, 555, 0, 0, 556,
	0, 557, 0, 0, 559, 560, 561, 0, 0, 562,
	563, 775, 0, 564, 0, 776, 565, 566, 558, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 0,
	577, 578, 777, 579, 580, 581, 778, 582, 583, 584,
	779, 585, 780, 586, 587, 0, 588, 589, 590, 0,
	591, 592, 593, 594, 595, 596, 597, 598, 781, 599,
	600, 602, 601, 603, 0, 604, 0, 605, 606, 607,
	0, 0, 0, 0, 0, 608, 609, 611, 0, 612,
	613, 614, 615, 610, 616, 617, 618, 619, 620, 621,
	0, 623, 624, 622, 625, 626, 0, 627, 628, 629,
	630, 631, 782, 632, 0, 633, 634, 642, 643, 644,
	635, 636, 638, 645, 637, 646, 647, 648, 649, 651,
	650, 0, 653, 654, 652, 655, 656, 657, 0, 658,
	783, 659, 639, 640, 660, 661, 0, 662, 663, 664,
	665, 666, 667, 668, 784, 0, 669, 0, 670, 671,
	672, 673, 674, 675, 677, 641, 678, 683, 684, 785,
	679, 680, 681, 682, 786, 686, 687, 688, 689, 0,
	690, 1063, 0, 685, 676, 968, 692, 693, 694, 695,
	696, 969, 0, 698, 699, 0, 700, 787, 788, 789,
	790, 0, 712, 0, 701, 703, 704, 705, 706, 791,
	707, 792, 0, 708, 709, 710, 711, 702, 713, 714,
	0, 0, 715, 716, 717, 719, 721, 722, 718, 720,
	723, 0, 724, 0, 0, 725, 726, 727, 793, 794,
	795, 0, 729, 730, 728, 731, 732, 735, 733, 734,
	796, 736, 737, 738, 2259, 0, 0, 0, 739, 740,
	797, 741, 742, 743, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 327, 326, 328, 329, 330, 331, 4464,
	332, 333, 0, 0, 0, 0, 0, 744, 973, 0,
	0, 334, 0, 335, 336, 337, 0, 338, 339, 340,
	341, 342, 343, 344, 745, 746, 0, 345, 747, 346,
	748, 0, 749, 347, 348, 349, 350, 351, 352, 353,
	0, 0, 0, 354, 750, 751, 752, 0, 355, 356,
	753, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 0, 382, 383, 384, 0, 0,
	0, 0, 0, 0, 0, 385, 386, 387, 2266, 389,
	0, 390, 392, 754, 755, 0, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 756, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 2267, 757, 758,
	426, 0, 319, 0, 0, 0, 0, 0, 427, 428,
	429, 759, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 0, 2268, 437, 438, 760, 761,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 762, 0, 763, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 764, 765, 766, 552, 0, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 321, 320, 322, 0, 767,
	469, 553, 470, 768, 769, 0, 770, 0, 471, 472,
	474, 0, 771, 0, 473, 475, 476, 0, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 772, 488, 0, 490, 491,
	0, 0, 492, 493, 494, 495, 496, 497, 500, 0,
	0, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 0, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 0,
	545, 532, 0, 533, 323, 0, 547, 548, 549, 550,
	0, 773, 551, 774, 554, 555, 0, 0, 556, 0,
	557, 0, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 0, 564, 0, 776, 565, 566, 558, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 779,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 781, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 0, 627, 628, 629, 630,
	631, 782, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 4463, 637, 646, 647, 648, 649, 651, 650,
	0, 2263, 654, 652, 655, 656, 657, 0, 658, 783,
	659, 639, 640, 660, 661, 0, 662, 663, 664, 665,
	666, 667, 668, 784, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 785, 679,
	680, 681, 682, 786, 686, 687, 688, 689, 0, 690,
	691, 0, 685, 676, 2265, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 787, 788, 789, 790,
	0, 712, 0, 701, 703, 704, 705, 706, 791, 707,
	792, 0, 708, 709, 4462, 711, 702, 713, 714, 0,
	0, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	0, 724, 0, 0, 725, 726, 727, 793, 794, 795,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 2285, 0, 0, 0, 739, 740, 797,
	741, 742, 743, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 0, 973, 0, 0,
	334, 0, 335, 336, 337, 1370, 338, 339, 340, 341,
	342, 343, 344, 0, 2291, 0, 345, 2298, 346, 2297,
	0, 2306, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 2309, 2310, 0, 0, 355, 356, 0,
	0, 1684, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 1371, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 1353,
	390, 392, 2295, 2294, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 1338, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 0, 0, 426,
	0, 0, 0, 0, 0, 0, 0, 427, 428, 429,
	2293, 0, 0, 0, 430, 0, 431, 432, 433, 0,
	434, 435, 0, 1372, 436, 437, 438, 2304, 2305, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	0, 0, 0, 449, 0, 450, 451, 452, 453, 454,
	455, 456, 0, 0, 0, 552, 1374, 457, 458, 459,
	3234, 460, 461, 462, 463, 464, 0, 0, 0, 465,
	466, 467, 468, 0, 0, 0, 0, 1373, 3236, 469,
	553, 470, 2288, 2289, 0, 2284, 0, 471, 472, 474,
	1375, 0, 1376, 473, 475, 476, 1377, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 0, 488, 1378, 490, 491, 1379,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	1380, 527, 528, 529, 530, 531, 539, 541, 542, 537,
	538, 540, 543, 544, 546, 534, 535, 536, 1381, 545,
	532, 0, 533, 0, 1382, 547, 548, 549, 550, 0,
	0, 551, 2296, 554, 555, 0, 0, 556, 0, 557,
	0, 0, 559, 560, 561, 0, 0, 562, 563, 3235,
	1383, 564, 1384, 0, 565, 566, 558, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 0, 577, 578,
	2281, 579, 580, 581, 2282, 582, 583, 584, 0, 585,
	0, 586, 587, 0, 588, 589, 590, 0, 591, 592,
	593, 594, 595, 596, 597, 598, 2292, 599, 600, 602,
	601, 603, 0, 604, 0, 605, 606, 607, 0, 0,
	0, 0, 0, 608, 609, 611, 0, 612, 613, 614,
	615, 610, 616, 617, 618, 619, 620, 621, 0, 623,
	624, 622, 625, 626, 1385, 627, 628, 629, 630, 631,
	0, 632, 0, 633, 634, 642, 643, 644, 635, 636,
	638, 645, 637, 646, 647, 648, 649, 651, 650, 0,
	653, 654, 652, 655, 656, 657, 0, 658, 0, 659,
	639, 640, 660, 661, 1386, 662, 663, 664, 665, 666,
	667, 668, 2290, 0, 669, 0, 670, 671, 672, 673,
	674, 675, 677, 641, 678, 683, 684, 2308, 679, 680,
	681, 682, 0, 686, 687, 688, 689, 0, 690, 691,
	0, 685, 676, 0, 692, 693, 694, 695, 696, 697,
	0, 698, 699, 0, 700, 2300, 2301, 2302, 2303, 0,
	712, 0, 701, 703, 704, 705, 706, 0, 707, 0,
	0, 708, 709, 710, 711, 702, 713, 714, 0, 0,
	715, 716, 717, 719, 721, 722, 718, 720, 723, 0,
	724, 0, 0, 725, 726, 727, 0, 2299, 2307, 3237,
	729, 730, 728, 731, 732, 735, 733, 734, 0, 736,
	737, 738, 0, 0, 0, 0, 739, 740, 0, 741,
	742, 743, 2259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 2314, 332, 333,
	0, 0, 0, 0, 0, 744, 0, 0, 2277, 334,
	0, 335, 336, 337, 0, 338, 339, 340, 341, 342,
	343, 344, 745, 746, 0, 345, 747, 346, 748, 0,
	749, 347, 348, 349, 350, 351, 352, 353, 0, 0,
	0, 354, 750, 751, 752, 0, 355, 356, 753, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 0, 382, 383, 384, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 387, 2266, 389, 0, 390,
	392, 754, 755, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 756, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 2267, 757, 758, 426, 0,
	319, 0, 0, 0, 0, 0, 427, 428, 429, 759,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 0, 2268, 437, 438, 760, 761, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 762,
	0, 763, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 764, 765, 766, 552, 0, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 321, 320, 322, 0, 767, 469, 553,
	470, 768, 769, 0, 770, 0, 471, 472, 474, 0,
	771, 0, 473, 475, 476, 0, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 772, 488, 0, 490, 491, 0, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 0,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 0, 545, 532,
	0, 533, 323, 0, 547, 548, 549, 550, 0, 773,
	551, 774, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 0,
	564, 0, 776, 565, 566, 558, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 779, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 781, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 0, 627, 628, 629, 630, 631, 782,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	2313, 637, 646, 647, 648, 649, 651, 650, 0, 2315,
	654, 652, 655, 656, 657, 0, 658, 783, 659, 639,
	640, 660, 661, 0, 662, 663, 664, 665, 666, 667,
	668, 784, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 785, 679, 680, 681,
	682, 786, 686, 687, 688, 689, 0, 690, 691, 0,
	685, 676, 2265, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 787, 788, 789, 790, 0, 712,
	0, 701, 703, 704, 705, 706, 791, 707, 792, 0,
	708, 709, 2312, 711, 702, 713, 714, 0, 0, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 0, 724,
	0, 0, 725, 726, 727, 793, 794, 795, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 2259, 0, 0, 0, 739, 740, 797, 741, 742,
	743, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 2258, 332, 333, 0,
	0, 0, 0, 0, 744, 973, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 745, 746, 0, 345, 747, 346, 748, 0, 749,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 750, 751, 752, 0, 355, 356, 753, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 2266, 389, 0, 390, 392,
	754, 755, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 756, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 2267, 757, 758, 426, 0, 319,
	0, 0, 0, 0, 0, 427, 428, 429, 759, 0,
	0, 0, 430, 0, 431, 432, 433, 0, 434, 435,
	0, 0, 2268, 437, 438, 760, 761, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 762, 0,
	763, 449, 0, 450, 451, 452, 453, 454, 455, 456,
	764, 765, 766, 552, 0, 457, 458, 459, 0, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 0, 321, 320, 322, 0, 767, 469, 553, 470,
	768, 769, 0, 770, 0, 471, 472, 474, 0, 771,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 772, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 0, 545, 532, 0,
	533, 323, 0, 547, 548, 549, 550, 0, 773, 551,
	774, 554, 555, 0, 0, 556, 0, 557, 0, 0,
	559, 560, 561, 0, 0, 562, 563, 775, 0, 564,
	0, 776, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 0, 577, 578, 777, 579,
	580, 581, 778, 582, 583, 584, 779, 585, 780, 586,
	587, 0, 588, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 781, 599, 600, 602, 601, 603,
	0, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 609, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 0, 623, 624, 622,
	625, 626, 0, 627, 628, 629, 630, 631, 782, 632,
	0, 633, 634, 642, 643, 644, 635, 636, 638, 2257,
	637, 646, 647, 648, 649, 651, 650, 0, 2263, 654,
	652, 655, 656, 657, 0, 658, 783, 659, 639, 640,
	660, 661, 0, 662, 663, 664, 665, 666, 667, 668,
	784, 0, 669, 0, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 785, 679, 680, 681, 682,
	786, 686, 687, 688, 689, 0, 690, 691, 0, 685,
	676, 2265, 692, 693, 694, 695, 696, 697, 0, 698,
	699, 0, 700, 787, 788, 789, 790, 0, 712, 0,
	701, 703, 704, 705, 706, 791, 707, 792, 0, 708,
	709, 2256, 711, 702, 713, 714, 0, 0, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 0, 724, 0,
	0, 725, 726, 727, 793, 794, 795, 0, 729, 730,
	728, 731, 732, 735, 733, 734, 796, 736, 737, 738,
	961, 0, 963, 0, 739, 740, 797, 741, 742, 743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 973, 744, 0, 0, 0, 334,
	0, 335, 336, 337, 0, 338, 339, 340, 341, 342,
	343, 344, 745, 746, 0, 345, 747, 346, 748, 0,
	749, 347, 348, 349, 350, 351, 352, 353, 0, 0,
	0, 354, 750, 751, 752, 0, 355, 356, 753, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 0, 382, 383, 384, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 387, 970, 389, 0, 390,
	392, 754, 755, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 756, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 757, 758, 426, 0,
	319, 0, 0, 0, 0, 0, 427, 428, 429, 759,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 0, 436, 437, 438, 760, 761, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 762,
	0, 763, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 764, 765, 766, 552, 0, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 321, 320, 322, 0, 767, 469, 553,
	470, 768, 769, 0, 770, 0, 471, 472, 474, 0,
	771, 0, 473, 475, 476, 0, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 772, 488, 0, 490, 491, 0, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 0,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 0, 545, 532,
	0, 533, 323, 0, 547, 548, 549, 550, 0, 773,
	551, 774, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 0,
	564, 0, 776, 565, 566, 558, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 779, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 781, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 0, 627, 628, 629, 630, 631, 782,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 0, 658, 783, 659, 639,
	640, 660, 661, 0, 662, 663, 664, 665, 666, 667,
	668, 784, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 785, 679, 680, 681,
	682, 786, 686, 687, 688, 689, 0, 690, 691, 0,
	685, 676, 968, 692, 693, 694, 695, 696, 969, 0,
	698, 699, 0, 700, 787, 788, 789, 790, 0, 712,
	0, 701, 703, 704, 705, 706, 791, 707, 792, 0,
	708, 709, 710, 711, 702, 713, 714, 0, 0, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 0, 724,
	0, 0, 725, 726, 727, 793, 794, 795, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 963, 0, 0, 0, 739, 740, 797, 741, 742,
	743, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 744, 973, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 745, 746, 0, 345, 747, 346, 748, 0, 749,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 750, 751, 752, 0, 355, 356, 753, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 970, 389, 0, 390, 392,
	754, 755, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 756, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 757, 758, 426, 0, 319,
	0, 0, 0, 0, 0, 427, 428, 429, 759, 0,
	0, 0, 430, 0, 431, 432, 433, 0, 434, 435,
	0, 0, 436, 437, 438, 760, 761, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 762, 0,
	763, 449, 0, 450, 451, 452, 453, 454, 455, 456,
	764, 765, 766, 552, 0, 457, 458, 459, 0, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 0, 321, 320, 322, 0, 767, 469, 553, 470,
	768, 769, 0, 770, 0, 471, 472, 474, 0, 771,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 772, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 0, 545, 532, 0,
	533, 323, 0, 547, 548, 549, 550, 0, 773, 551,
	774, 554, 555, 0, 0, 556, 0, 557, 0, 0,
	559, 560, 561, 0, 0, 562, 563, 775, 0, 564,
	0, 776, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 0, 577, 578, 777, 579,
	580, 581, 778, 582, 583, 584, 779, 585, 780, 586,
	587, 0, 588, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 781, 599, 600, 602, 601, 603,
	0, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 609, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 0, 623, 624, 622,
	625, 626, 0, 627, 628, 629, 630, 631, 782, 632,
	0, 633, 634, 642, 643, 644, 635, 636, 638, 645,
	637, 646, 647, 648, 649, 651, 650, 0, 653, 654,
	652, 655, 656, 657, 0, 658, 783, 659, 639, 640,
	660, 661, 0, 662, 663, 664, 665, 666, 667, 668,
	784, 0, 669, 0, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 785, 679, 680, 681, 682,
	786, 686, 687, 688, 689, 0, 690, 691, 0, 685,
	676, 968, 692, 693, 694, 695, 696, 969, 0, 698,
	699, 0, 700, 787, 788, 789, 790, 0, 712, 0,
	701, 703, 704, 705, 706, 791, 707, 792, 0, 708,
	709, 710, 711, 702, 713, 714, 0, 0, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 0, 724, 0,
	0, 725, 726, 727, 793, 794, 795, 0, 729, 730,
	728, 731, 732, 735, 733, 734, 796, 736, 737, 738,
	3220, 0, 316, 0, 739, 740, 797, 741, 742, 743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 973, 744, 0, 0, 0, 334,
	0, 335, 336, 337, 0, 338, 339, 340, 341, 342,
	343, 344, 745, 746, 0, 345, 747, 346, 748, 0,
	749, 347, 348, 349, 350, 351, 352, 353, 0, 0,
	0, 354, 750, 751, 752, 0, 355, 356, 753, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 0, 382, 383, 384, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 387, 388, 389, 0, 390,
	392, 754, 755, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 756, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 757, 758, 426, 0,
	319, 0, 0, 0, 0, 0, 427, 428, 429, 759,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 0, 436, 437, 438, 760, 761, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 762,
	0, 763, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 764, 765, 766, 552, 0, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 321, 320, 322, 0, 767, 469, 553,
	470, 768, 769, 0, 770, 0, 471, 472, 474, 0,
	771, 0, 473, 475, 476, 0, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 772, 488, 0, 490, 491, 0, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 0,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 0, 545, 532,
	0, 533, 323, 0, 547, 548, 549, 550, 0, 773,
	551, 774, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 0,
	564, 0, 776, 565, 566, 558, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 779, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 781, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 0, 627, 628, 629, 630, 631, 782,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 0, 658, 783, 659, 639,
	640, 660, 661, 0, 662, 663, 664, 665, 666, 667,
	668, 784, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 785, 679, 680, 681,
	682, 786, 686, 687, 688, 689, 0, 690, 691, 0,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 787, 788, 789, 790, 0, 712,
	0, 701, 703, 704, 705, 706, 791, 707, 792, 0,
	708, 709, 710, 711, 702, 713, 714, 0, 0, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 0, 724,
	0, 0, 725, 726, 727, 793, 794, 795, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 2259, 0, 0, 0, 739, 740, 797, 741, 742,
	743, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 744, 973, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 745, 746, 0, 345, 747, 346, 748, 0, 749,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 750, 751, 752, 0, 355, 356, 753, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 2266, 389, 0, 390, 392,
	754, 755, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 756, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 2267, 757, 758, 426, 0, 319,
	0, 0, 0, 0, 0, 427, 428, 429, 759, 0,
	0, 0, 430, 0, 431, 432, 433, 0, 434, 435,
	0, 0, 2268, 437, 438, 760, 761, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 762, 0,
	763, 449, 0, 450, 451, 452, 453, 454, 455, 456,
	764, 765, 766, 552, 0, 457, 458, 459, 0, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 0, 321, 320, 322, 0, 767, 469, 553, 470,
	768, 769, 0, 770, 0, 471, 472, 474, 0, 771,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 772, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 0, 545, 532, 0,
	533, 323, 0, 547, 548, 549, 550, 0, 773, 551,
	774, 554, 555, 0, 0, 556, 0, 557, 0, 0,
	559, 560, 561, 0, 0, 562, 563, 775, 0, 564,
	0, 776, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 0, 577, 578, 777, 579,
	580, 581, 778, 582, 583, 584, 779, 585, 780, 586,
	587, 0, 588, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 781, 599, 600, 602, 601, 603,
	0, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 609, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 0, 623, 624, 622,
	625, 626, 0, 2706, 628, 629, 630, 631, 782, 632,
	0, 633, 634, 642, 643, 644, 635, 636, 638, 2707,
	637, 646, 647, 648, 649, 651, 650, 0, 2263, 654,
	652, 655, 656, 657, 0, 658, 783, 659, 639, 640,
	660, 661, 0, 662, 663, 664, 665, 666, 667, 668,
	784, 0, 669, 0, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 785, 679, 680, 681, 682,
	786, 686, 687, 688, 689, 0, 690, 691, 0, 685,
	676, 2265, 692, 693, 694, 695, 696, 697, 0, 698,
	699, 0, 700, 787, 788, 789, 790, 0, 712, 0,
	701, 703, 704, 705, 706, 791, 707, 792, 0, 708,
	709, 2708, 711, 702, 713, 714, 0, 0, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 0, 724, 0,
	0, 725, 726, 727, 793, 794, 795, 0, 729, 730,
	728, 731, 732, 735, 733, 734, 796, 736, 737, 738,
	316, 0, 0, 0, 739, 740, 797, 741, 742, 743,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 327,
	326, 328, 329, 330, 331, 0, 332, 333, 0, 0,
	0, 0, 0, 744, 973, 0, 0, 334, 0, 335,
	336, 337, 0, 338, 339, 340, 341, 342, 343, 344,
	745, 746, 0, 345, 747, 346, 748, 0, 749, 347,
	348, 349, 350, 351, 352, 353, 0, 0, 0, 354,
	750, 751, 752, 0, 355, 356, 753, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	0, 382, 383, 384, 0, 0, 0, 0, 0, 0,
	0, 385, 386, 387, 388, 389, 0, 390, 392, 754,
	755, 0, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 756, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 757, 758, 426, 0, 319, 0,
	0, 0, 0, 0, 427, 428, 429, 759, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	0, 436, 437, 438, 760, 761, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 762, 0, 763,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 764,
	765, 766, 552, 0, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 321, 320, 322, 0, 767, 469, 553, 470, 768,
	769, 0, 770, 0, 471, 472, 474, 0, 771, 0,
	473, 475, 476, 0, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 772, 488, 0, 490, 491, 0, 0, 492, 493,
	494, 495, 496, 497, 500, 0, 0, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 0, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 0, 545, 532, 0, 533,
	323, 0, 547, 548, 549, 550, 0, 773, 551, 774,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 0, 564, 0,
	776, 565, 566, 558, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 779, 585, 780, 586, 587,
	0, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 781, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 0, 627, 628, 629, 630, 631, 782, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 0, 658, 783, 659, 639, 640, 660,
	661, 0, 662, 663, 664, 665, 666, 667, 668, 784,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 785, 679, 680, 681, 682, 786,
	686, 687, 688, 689, 0, 690, 691, 0, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 787, 788, 789, 790, 0, 712, 0, 701,
	703, 704, 705, 706, 791, 707, 792, 0, 708, 709,
	710, 711, 702, 713, 714, 0, 0, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 0, 724, 0, 0,
	725, 726, 727, 793, 794, 795, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 316,
	0, 0, 0, 739, 740, 797, 741, 742, 743, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 744, 973, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 745,
	746, 0, 345, 747, 346, 748, 0, 749, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 750,
	751, 752, 0, 355, 356, 753, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 754, 755,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	756, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 757, 758, 426, 0, 319, 0, 0,
	0, 0, 0, 427, 428, 429, 759, 0, 0, 0,
	430, 0, 431, 432, 433, 0, 434, 435, 0, 0,
	436, 437, 438, 760, 761, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 762, 0, 763, 449,
	0, 450, 451, 452, 453, 454, 455, 456, 764, 765,
	766, 552, 0, 457, 458, 459, 0, 460, 461, 462,
	463, 464, 0, 0, 0, 465, 466, 467, 468, 0,
	321, 320, 322, 0, 767, 469, 553, 470, 768, 769,
	0, 770, 0, 471, 472, 474, 0, 771, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	772, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 539, 541, 542, 537, 538, 540, 543, 544,
	546, 534, 535, 536, 0, 545, 532, 0, 533, 323,
	0, 547, 548, 549, 550, 0, 773, 551, 774, 554,
	555, 0, 0, 556, 0, 557, 0, 0, 559, 560,
	561, 0, 0, 562, 563, 775, 0, 564, 0, 776,
	565, 566, 558, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 0, 577, 578, 777, 579, 580, 581,
	778, 582, 583, 584, 779, 585, 780, 586, 587, 0,
	588, 589, 590, 0, 591, 592, 593, 594, 595, 596,
	597, 598, 781, 599, 600, 602, 601, 603, 0, 604,
	0, 605, 606, 607, 0, 0, 0, 0, 0, 608,
	609, 611, 0, 612, 613, 614, 615, 610, 616, 617,
	618, 619, 620, 621, 0, 623, 624, 622, 625, 626,
	0, 627, 628, 629, 630, 631, 782, 632, 0, 633,
	634, 642, 643, 644, 635, 636, 638, 645, 637, 646,
	647, 648, 649, 651, 650, 0, 653, 654, 652, 655,
	656, 657, 0, 658, 783, 659, 639, 640, 660, 661,
	0, 662, 663, 664, 665, 666, 667, 668, 784, 0,
	669, 0, 670, 671, 672, 673, 674, 675, 677, 641,
	678, 683, 684, 785, 679, 680, 681, 682, 786, 686,
	687, 688, 689, 0, 690, 691, 0, 685, 676, 0,
	692, 693, 694, 695, 696, 697, 0, 698, 699, 0,
	700, 787, 788, 789, 790, 0, 712, 0, 701, 703,
	704, 705, 706, 791, 707, 792, 0, 708, 709, 710,
	711, 702, 713, 714, 0, 0, 715, 716, 717, 719,
	721, 722, 718, 720, 723, 0, 724, 0, 0, 725,
	726, 727, 793, 794, 795, 0, 729, 730, 728, 731,
	732, 735, 733, 734, 796, 736, 737, 738, 3240, 0,
	0, 0, 739, 740, 797, 741, 742, 743, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 327, 326, 328,
	329, 330, 331, 0, 332, 333, 0, 0, 0, 0,
	0, 0, 929, 0, 0, 334, 0, 335, 336, 337,
	1370, 338, 339, 340, 341, 342, 343, 344, 0, 2291,
	0, 345, 2298, 346, 2297, 0, 2306, 347, 348, 349,
	350, 351, 352, 353, 0, 0, 0, 354, 2309, 2310,
	0, 0, 355, 356, 0, 0, 1684, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 1371, 382,
	383, 384, 0, 0, 0, 0, 0, 0, 0, 385,
	386, 387, 388, 389, 1353, 390, 392, 2295, 2294, 0,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 1338, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 0, 0, 426, 0, 319, 0, 0, 0,
	0, 0, 427, 428, 429, 2293, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 1372, 436,
	437, 438, 2304, 2305, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 0, 0, 0, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 0, 0, 0,
	552, 1374, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 0,
	0, 0, 1373, 0, 469, 553, 470, 2288, 2289, 0,
	2284, 0, 471, 472, 474, 1375, 0, 1376, 473, 475,
	476, 1377, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 0,
	488, 1378, 490, 491, 1379, 0, 492, 493, 494, 495,
	496, 497, 500, 0, 0, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 1380, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 1381, 545, 532, 0, 533, 0, 1382,
	547, 548, 549, 550, 0, 0, 551, 2296, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 0, 1383, 564, 1384, 0, 565,
	566, 558, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 2281, 579, 580, 581, 2282,
	582, 583, 584, 0, 585, 0, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 2292, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 1385,
	627, 628, 629, 630, 631, 0, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 0, 658, 0, 659, 639, 640, 660, 661, 1386,
	662, 663, 664, 665, 666, 667, 668, 2290, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 2308, 679, 680, 681, 682, 0, 686, 687,
	688, 689, 0, 690, 691, 0, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	2300, 2301, 2302, 2303, 0, 712, 0, 701, 703, 704,
	705, 706, 0, 707, 0, 0, 708, 709, 710, 711,
	702, 713, 714, 0, 0, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 0, 724, 0, 0, 725, 726,
	727, 0, 2299, 2307, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 2285, 736, 737, 738, 0, 0, 0,
	0, 739, 740, 0, 741, 742, 743, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	334, 0, 335, 336, 337, 1370, 338, 339, 340, 341,
	342, 343, 344, 2277, 2291, 0, 345, 2298, 346, 2297,
	0, 2306, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 2309, 2310, 0, 0, 355, 356, 0,
	0, 1684, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 1371, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 1353,
	390, 392, 2295, 2294, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 1338, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 0, 0, 426,
	0, 0, 0, 0, 0, 0, 0, 427, 428, 429,
	2293, 0, 0, 0, 430, 0, 431, 432, 433, 0,
	434, 435, 0, 1372, 436, 437, 438, 2304, 2305, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	0, 0, 0, 449, 0, 450, 451, 452, 453, 454,
	455, 456, 0, 0, 0, 552, 1374, 457, 458, 459,
	0, 460, 461, 462, 463, 464, 0, 0, 0, 465,
	466, 467, 468, 0, 0, 0, 0, 1373, 0, 469,
	553, 470, 2288, 2289, 0, 2284, 0, 471, 472, 474,
	1375, 0, 1376, 473, 475, 476, 1377, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 0, 488, 1378, 490, 491, 1379,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	1380, 527, 528, 529, 530, 531, 539, 541, 542, 537,
	538, 540, 543, 544, 546, 534, 535, 536, 1381, 545,
	532, 0, 533, 0, 1382, 547, 548, 549, 550, 0,
	0, 551, 2296, 554, 555, 0, 0, 556, 0, 557,
	0, 0, 559, 560, 561, 0, 0, 562, 563, 0,
	1383, 564, 1384, 0, 565, 566, 558, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 0, 577, 578,
	2281, 579, 580, 581, 2282, 582, 583, 584, 0, 585,
	0, 586, 587, 0, 588, 589, 590, 0, 591, 592,
	593, 594, 595, 596, 597, 598, 2292, 599, 600, 602,
	601, 603, 0, 604, 0, 605, 606, 607, 0, 0,
	0, 0, 0, 608, 609, 611, 0, 612, 613, 614,
	615, 610, 616, 617, 618, 619, 620, 621, 0, 623,
	624, 622, 625, 626, 1385, 627, 628, 629, 630, 631,
	0, 632, 0, 633, 634, 642, 643, 644, 635, 636,
	638, 645, 637, 646, 647, 648, 649, 651, 650, 0,
	653, 654, 652, 655, 656, 657, 0, 658, 0, 659,
	639, 640, 660, 661, 1386, 662, 663, 664, 665, 666,
	667, 668, 2290, 0, 669, 0, 670, 671, 672, 673,
	674, 675, 677, 641, 678, 683, 684, 2308, 679, 680,
	681, 682, 0, 686, 687, 688, 689, 0, 690, 691,
	0, 685, 676, 0, 692, 693, 694, 695, 696, 697,
	0, 698, 699, 0, 700, 2300, 2301, 2302, 2303, 0,
	712, 0, 701, 703, 704, 705, 706, 0, 707, 0,
	0, 708, 709, 710, 711, 702, 713, 714, 0, 0,
	715, 716, 717, 719, 721, 722, 718, 720, 723, 0,
	724, 0, 0, 725, 726, 727, 0, 2299, 2307, 0,
	729, 730, 728, 731, 732, 735, 733, 734, 0, 736,
	737, 738, 0, 0, 0, 0, 739, 740, 0, 741,
	742, 743, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 0, 744, 0, 0, 2277, 334,
	0, 335, 336, 337, 0, 338, 339, 340, 341, 342,
	343, 344, 745, 746, 0, 345, 747, 346, 748, 0,
	749, 347, 348, 349, 350, 351, 352, 353, 0, 0,
	0, 354, 750, 751, 752, 0, 355, 356, 753, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 0, 382, 383, 384, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 387, 388, 389, 0, 390,
	392, 754, 755, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 756, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 757, 758, 426, 0,
	0, 0, 0, 0, 0, 0, 427, 428, 429, 759,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 0, 436, 437, 438, 760, 761, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 762,
	0, 763, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 764, 765, 766, 552, 0, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 0, 0, 0, 0, 767, 469, 553,
	470, 768, 769, 0, 770, 0, 471, 472, 474, 0,
	771, 0, 473, 475, 476, 0, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 772, 488, 0, 490, 491, 0, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 0,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 0, 545, 532,
	0, 533, 0, 0, 547, 548, 549, 550, 0, 773,
	551, 774, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 0,
	564, 0, 776, 565, 566, 558, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 779, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 781, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 0, 627, 628, 629, 630, 631, 782,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 0, 658, 783, 659, 639,
	640, 660, 661, 0, 662, 663, 664, 665, 666, 667,
	668, 784, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 785, 679, 680, 681,
	682, 786, 686, 687, 688, 689, 0, 690, 691, 0,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 787, 788, 789, 790, 0, 712,
	0, 701, 703, 704, 705, 706, 791, 707, 792, 0,
	708, 709, 710, 711, 702, 713, 714, 0, 0, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 0, 724,
	0, 0, 725, 726, 727, 793, 794, 795, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 0, 0, 0, 0, 739, 740, 797, 741, 742,
	743, 0, 0, 0, 0, 0, 0, 0, 0, 1718,
	1717, 0, 0, 0, 0, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4707, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 744, 0, 0, 0, 334, 0, 335, 336,
	337, 1370, 338, 339, 340, 341, 342, 343, 344, 745,
	746, 0, 345, 747, 346, 748, 0, 749, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 750,
	751, 752, 0, 355, 356, 753, 0, 1684, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 1371,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 754, 755,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	756, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 757, 758, 426, 0, 319, 0, 0,
	0, 0, 0, 427, 428, 429, 759, 0, 0, 0,
	430, 0, 431, 432, 433, 0, 434, 435, 0, 1372,
	436, 437, 438, 760, 761, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 762, 0, 763, 449,
	0, 450, 451, 452, 453, 454, 455, 456, 764, 765,
	766, 552, 1374, 457, 458, 459, 0, 460, 461, 462,
	463, 464, 0, 0, 0, 465, 466, 467, 468, 0,
	0, 0, 0, 1373, 767, 469, 553, 470, 768, 769,
	0, 770, 0, 471, 472, 474, 1375, 771, 1376, 473,
	475, 476, 1377, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	772, 488, 1378, 490, 491, 1379, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 1380, 527, 528, 529,
	530, 531, 539, 541, 542, 537, 538, 540, 543, 544,
	546, 534, 535, 536, 1381, 545, 532, 0, 533, 0,
	1382, 547, 548, 549, 550, 4591, 773, 551, 774, 554,
	555, 0, 0, 556, 0, 557, 0, 0, 559, 560,
	561, 0, 0, 562, 563, 775, 1383, 564, 1384, 776,
	565, 566, 558, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 0, 577, 578, 777, 579, 580, 581,
	778, 582, 583, 584, 779, 585, 780, 586, 587, 0,
	588, 589, 590, 0, 591, 592, 593, 594, 595, 596,
	597, 598, 781, 599, 600, 602, 601, 603, 0, 604,
	0, 605, 606, 607, 0, 0, 0, 0, 0, 608,
	609, 611, 0, 612, 613, 614, 615, 610, 616, 617,
	618, 619, 620, 621, 0, 623, 624, 622, 625, 626,
	1385, 627, 628, 629, 630, 631, 782, 632, 0, 633,
	634, 642, 643, 644, 635, 636, 638, 645, 637, 646,
	647, 648, 649, 651, 650, 0, 653, 654, 652, 655,
	656, 657, 0, 658, 783, 659, 639, 640, 660, 661,
	1386, 662, 663, 664, 665, 666, 667, 668, 784, 0,
	669, 0, 670, 671, 672, 673, 674, 675, 677, 641,
	678, 683, 684, 785, 679, 680, 681, 682, 786, 686,
	687, 688, 689, 0, 690, 691, 0, 685, 676, 0,
	692, 693, 694, 695, 696, 697, 0, 698, 699, 0,
	700, 787, 788, 789, 790, 0, 712, 0, 701, 703,
	704, 705, 706, 791, 707, 792, 0, 708, 709, 710,
	711, 702, 713, 714, 0, 0, 715, 716, 717, 719,
	721, 722, 718, 720, 723, 0, 724, 0, 0, 725,
	726, 727, 793, 794, 795, 0, 729, 730, 728, 731,
	732, 735, 733, 734, 796, 736, 737, 738, 0, 0,
	0, 0, 739, 740, 797, 741, 742, 743, 3636, 0,
	1718, 1717, 0, 0, 0, 0, 1715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 327,
	326, 328, 329, 330, 331, 0, 332, 333, 0, 0,
	0, 0, 0, 744, 0, 0, 0, 334, 0, 335,
	336, 337, 1370, 338, 339, 340, 341, 342, 343, 344,
	745, 746, 0, 345, 747, 346, 748, 0, 749, 347,
	348, 349, 350, 351, 352, 353, 0, 0, 0, 354,
	750, 751, 752, 0, 355, 356, 753, 0, 1684, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	1371, 382, 383, 384, 0, 0, 0, 0, 0, 0,
	0, 385, 386, 387, 388, 389, 0, 390, 392, 754,
	755, 0, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 756, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 757, 758, 426, 0, 319, 0,
	0, 0, 0, 0, 427, 428, 429, 759, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	1372, 436, 437, 438, 760, 761, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 762, 0, 763,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 764,
	765, 766, 552, 1374, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 0, 0, 0, 1373, 767, 469, 553, 470, 768,
	769, 0, 770, 0, 471, 472, 474, 1375, 771, 1376,
	473, 475, 476, 1377, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 772, 488, 1378, 490, 491, 1379, 0, 492, 493,
	494, 495, 496, 497, 500, 0, 0, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 1380, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 1381, 545, 532, 0, 533,
	0, 1382, 547, 548, 549, 550, 0, 773, 551, 774,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 1383, 564, 1384,
	776, 565, 566, 558, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 779, 585, 780, 586, 587,
	0, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 781, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 1385, 627, 628, 629, 630, 631, 782, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 0, 658, 783, 659, 639, 640, 660,
	661, 1386, 662, 663, 664, 665, 666, 667, 668, 784,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 785, 679, 680, 681, 682, 786,
	686, 687, 688, 689, 0, 690, 691, 0, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 787, 788, 789, 790, 0, 712, 0, 701,
	703, 704, 705, 706, 791, 707, 792, 0, 708, 709,
	710, 711, 702, 713, 714, 0, 0, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 0, 724, 0, 0,
	725, 726, 727, 793, 794, 795, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 0,
	0, 0, 0, 739, 740, 797, 741, 742, 743, 2588,
	0, 1718, 1717, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 744, 0, 0, 0, 334, 0,
	335, 336, 337, 1370, 338, 339, 340, 341, 342, 343,
	344, 745, 746, 0, 345, 747, 346, 748, 0, 749,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 750, 751, 752, 0, 355, 356, 753, 0, 1684,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 1371, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	754, 755, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 756, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 757, 758, 426, 0, 319,
	0, 0, 0, 0, 0, 427, 428, 429, 759, 0,
	0, 0, 430, 0, 431, 432, 433, 0, 434, 435,
	0, 1372, 436, 437, 438, 760, 761, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 762, 0,
	763, 449, 0, 450, 451, 452, 453, 454, 455, 456,
	1775, 765, 766, 552, 1374, 457, 458, 459, 0, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 0, 0, 0, 0, 1373, 767, 469, 553, 470,
	768, 769, 0, 770, 0, 471, 472, 474, 1375, 771,
	1376, 473, 475, 476, 1377, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 772, 488, 1378, 490, 491, 1379, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 1380, 527,
	528, 529, 530, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 1381, 545, 532, 0,
	533, 0, 1382, 547, 548, 549, 550, 0, 773, 551,
	774, 554, 555, 0, 0, 556, 0, 557, 0, 0,
	559, 560, 561, 0, 0, 562, 563, 775, 1383, 564,
	1384, 776, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 0, 577, 578, 777, 579,
	580, 581, 778, 582, 583, 584, 779, 585, 780, 586,
	587, 0, 588, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 781, 599, 600, 602, 601, 603,
	0, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 609, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 0, 623, 624, 622,
	625, 626, 1385, 627, 628, 629, 630, 631, 782, 632,
	0, 633, 634, 642, 643, 644, 635, 636, 638, 645,
	637, 646, 647, 648, 649, 651, 650, 0, 653, 654,
	652, 655, 656, 657, 0, 658, 783, 659, 639, 640,
	660, 661, 1386, 662, 663, 664, 665, 666, 667, 668,
	784, 0, 669, 0, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 785, 679, 680, 681, 682,
	786, 686, 687, 688, 689, 0, 690, 691, 0, 685,
	676, 0, 692, 693, 694, 695, 696, 697, 0, 698,
	699, 0, 700, 787, 788, 789, 790, 0, 712, 0,
	701, 703, 704, 705, 706, 791, 707, 792, 0, 708,
	709, 710, 711, 702, 713, 714, 0, 0, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 0, 724, 0,
	0, 725, 726, 727, 793, 794, 795, 0, 729, 730,
	728, 731, 732, 735, 733, 734, 796, 736, 737, 738,
	0, 0, 0, 0, 739, 740, 797, 741, 742, 743,
	2323, 0, 1718, 1717, 0, 0, 0, 0, 1715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 0, 744, 0, 0, 0, 334,
	0, 335, 336, 337, 1370, 338, 339, 340, 341, 342,
	343, 344, 745, 746, 0, 345, 747, 346, 748, 0,
	749, 347, 348, 349, 350, 351, 352, 353, 0, 0,
	0, 354, 750, 751, 752, 0, 355, 356, 753, 0,
	1684, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1371, 382, 383, 384, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 387, 388, 389, 0, 390,
	392, 754, 755, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 756, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 757, 758, 426, 0,
	319, 0, 0, 0, 0, 0, 427, 428, 429, 759,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 1372, 436, 437, 438, 760, 761, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 762,
	0, 763, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 764, 765, 766, 552, 1374, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 0, 0, 0, 1373, 767, 469, 553,
	470, 768, 769, 0, 770, 0, 471, 472, 474, 1375,
	771, 1376, 473, 475, 476, 1377, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 772, 488, 1378, 490, 491, 1379, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1380,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 1381, 545, 532,
	0, 533, 0, 1382, 547, 548, 549, 550, 0, 773,
	551, 774, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 1383,
	564, 1384, 776, 565, 566, 558, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 779, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 781, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 1385, 627, 628, 629, 630, 631, 782,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 0, 658, 783, 659, 639,
	640, 660, 661, 1386, 662, 663, 664, 665, 666, 667,
	668, 784, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 785, 679, 680, 681,
	682, 786, 686, 687, 688, 689, 0, 690, 691, 0,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 787, 788, 789, 790, 0, 712,
	0, 701, 703, 704, 705, 706, 791, 707, 792, 0,
	708, 709, 710, 711, 702, 713, 714, 0, 0, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 0, 724,
	0, 0, 725, 726, 727, 793, 794, 795, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 0, 0, 0, 0, 739, 740, 797, 741, 742,
	743, 1905, 0, 1718, 1717, 0, 0, 0, 0, 1715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	334, 0, 335, 336, 337, 1370, 338, 339, 340, 341,
	342, 343, 344, 745, 746, 0, 345, 747, 346, 748,
	0, 749, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 750, 751, 752, 0, 355, 356, 753,
	0, 1684, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 1371, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 754, 755, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 756, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 757, 758, 426,
	0, 319, 0, 0, 0, 0, 0, 1902, 428, 429,
	759, 0, 0, 0, 430, 0, 431, 432, 433, 0,
	434, 435, 0, 1372, 436, 437, 438, 760, 761, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	762, 0, 763, 449, 0, 450, 451, 452, 453, 454,
	455, 456, 764, 765, 766, 552, 1374, 457, 458, 459,
	0, 460, 461, 462, 463, 464, 0, 0, 0, 465,
	466, 467, 468, 0, 0, 0, 0, 1373, 767, 469,
	553, 470, 768, 769, 0, 770, 0, 471, 472, 474,
	1375, 771, 1376, 473, 475, 476, 1377, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 772, 488, 1378, 490, 491, 1379,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	1380, 527, 528, 529, 530, 531, 539, 541, 542, 537,
	538, 540, 543, 544, 546, 534, 535, 536, 1381, 545,
	532, 0, 533, 0, 1382, 547, 548, 549, 550, 0,
	773, 551, 774, 554, 555, 0, 0, 556, 0, 557,
	0, 0, 559, 560, 561, 0, 0, 562, 563, 775,
	1383, 564, 1384, 776, 565, 566, 558, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 0, 577, 578,
	777, 579, 580, 581, 778, 582, 583, 584, 779, 585,
	780, 586, 587, 0, 588, 589, 590, 0, 591, 592,
	593, 594, 595, 596, 1903, 598, 781, 599, 600, 602,
	601, 603, 0, 604, 0, 605, 606, 607, 0, 0,
	0, 0, 0, 608, 609, 611, 0, 612, 613, 614,
	615, 610, 616, 617, 618, 619, 620, 621, 0, 623,
	624, 622, 625, 626, 1385, 627, 628, 629, 630, 631,
	782, 632, 0, 633, 634, 642, 643, 644, 635, 636,
	638, 645, 637, 1901, 647, 648, 649, 651, 650, 0,
	653, 654, 652, 655, 656, 657, 0, 658, 783, 659,
	639, 640, 660, 661, 1386, 662, 663, 664, 665, 666,
	667, 668, 784, 0, 669, 0, 670, 671, 672, 673,
	674, 675, 677, 641, 678, 683, 684, 785, 679, 680,
	681, 682, 786, 686, 687, 688, 689, 0, 690, 691,
	0, 685, 676, 0, 692, 693, 694, 695, 696, 697,
	0, 698, 699, 0, 700, 787, 788, 789, 790, 0,
	712, 0, 701, 703, 704, 705, 706, 791, 707, 792,
	0, 708, 709, 710, 711, 702, 713, 714, 0, 0,
	715, 716, 717, 719, 721, 722, 718, 720, 723, 0,
	724, 0, 0, 725, 1904, 727, 793, 794, 795, 0,
	729, 730, 728, 731, 732, 735, 733, 734, 796, 736,
	737, 738, 0, 0, 0, 0, 739, 740, 797, 741,
	742, 743, 1772, 0, 1718, 1717, 0, 0, 0, 0,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 327, 326, 328, 329, 330, 331, 0,
	332, 333, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 334, 0, 335, 336, 337, 1370, 338, 339, 340,
	341, 342, 343, 344, 745, 746, 0, 345, 747, 346,
	748, 0, 749, 347, 348, 349, 350, 351, 352, 353,
	0, 0, 0, 354, 750, 751, 752, 0, 355, 356,
	753, 0, 1684, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1371, 382, 383, 384, 0, 0,
	0, 0, 0, 0, 0, 385, 386, 387, 388, 389,
	0, 390, 392, 754, 755, 0, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 756, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 757, 758,
	426, 0, 319, 0, 0, 0, 0, 0, 427, 428,
	429, 759, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 1372, 436, 437, 438, 760, 761,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 762, 0, 763, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 1775, 765, 766, 552, 1374, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 0, 0, 0, 1373, 767,
	469, 553, 470, 768, 769, 0, 770, 0, 471, 472,
	474, 1375, 771, 1376, 473, 475, 476, 1377, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 772, 488, 1378, 490, 491,
	1379, 0, 492, 493, 494, 495, 496, 497, 500, 0,
	0, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 1380, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 1381,
	545, 532, 0, 533, 0, 1382, 547, 548, 549, 550,
	0, 773, 551, 774, 554, 555, 0, 0, 556, 0,
	557, 0, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 1383, 564, 1384, 776, 565, 566, 558, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 779,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 781, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 1385, 627, 628, 629, 630,
	631, 782, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 0, 658, 783,
	659, 639, 640, 660, 661, 1386, 662, 663, 664, 665,
	666, 667, 668, 784, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 785, 679,
	680, 681, 682, 786, 686, 687, 688, 689, 0, 690,
	691, 0, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 787, 788, 789, 790,
	0, 712, 0, 701, 703, 704, 705, 706, 791, 707,
	792, 0, 708, 709, 710, 711, 702, 713, 714, 0,
	0, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	0, 724, 0, 0, 725, 726, 727, 793, 794, 795,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 0, 0, 0, 0, 739, 740, 797,
	741, 742, 743, 1713, 0, 1718, 1717, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 744, 0,
	0, 0, 334, 0, 335, 336, 337, 1370, 338, 339,
	340, 341, 342, 343, 344, 745, 746, 0, 345, 747,
	346, 748, 0, 749, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 750, 751, 752, 0, 355,
	356, 753, 0, 1684, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 1371, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 754, 755, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 756, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 757,
	758, 426, 0, 319, 0, 0, 0, 0, 0, 427,
	428, 429, 759, 0, 0, 0, 430, 0, 431, 432,
	433, 0, 434, 435, 0, 1372, 436, 437, 438, 760,
	761, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 762, 0, 763, 449, 0, 450, 451, 452,
	453, 454, 455, 456, 764, 765, 766, 552, 1374, 457,
	458, 459, 0, 460, 461, 462, 463, 464, 0, 0,
	0, 465, 466, 467, 468, 0, 0, 0, 0, 1373,
	767, 469, 553, 470, 768, 769, 0, 770, 0, 471,
	472, 474, 1375, 771, 1376, 473, 475, 476, 1377, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 772, 488, 1378, 490,
	491, 1379, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 1380, 527, 528, 529, 530, 531, 539, 541,
	542, 537, 538, 540, 543, 544, 546, 534, 535, 536,
	1381, 545, 532, 0, 533, 0, 1382, 547, 548, 549,
	550, 0, 773, 551, 774, 554, 555, 0, 0, 556,
	0, 557, 0, 0, 559, 560, 561, 0, 0, 562,
	563, 775, 1383, 564, 1384, 776, 565, 566, 558, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 0,
	577, 578, 777, 579, 580, 581, 778, 582, 583, 584,
	779, 585, 780, 586, 587, 0, 588, 589, 590, 0,
	591, 592, 593, 594, 595, 596, 597, 598, 781, 599,
	600, 602, 601, 603, 0, 604, 0, 605, 606, 607,
	0, 0, 0, 0, 0, 608, 609, 611, 0, 612,
	613, 614, 615, 610, 616, 617, 618, 619, 620, 621,
	0, 623, 624, 622, 625, 626, 1385, 627, 628, 629,
	630, 631, 782, 632, 0, 633, 634, 642, 643, 644,
	1711, 636, 638, 645, 637, 646, 647, 648, 649, 651,
	650, 0, 653, 654, 652, 655, 656, 657, 0, 658,
	783, 659, 639, 640, 660, 661, 1386, 662, 663, 664,
	665, 666, 667, 668, 784, 0, 669, 0, 670, 671,
	672, 673, 674, 675, 677, 641, 678, 683, 684, 785,
	679, 680, 681, 682, 786, 686, 687, 688, 689, 0,
	690, 691, 0, 685, 676, 0, 692, 693, 694, 695,
	696, 697, 0, 698, 699, 0, 700, 787, 788, 789,
	790, 0, 712, 0, 701, 703, 704, 705, 706, 791,
	707, 792, 0, 708, 709, 710, 711, 702, 713, 714,
	0, 0, 715, 716, 717, 719, 721, 722, 718, 720,
	723, 0, 724, 0, 0, 725, 726, 727, 793, 794,
	795, 0, 729, 730, 728, 731, 732, 735, 733, 734,
	796, 736, 737, 738, 0, 0, 0, 0, 739, 740,
	797, 741, 742, 743, 1718, 1717, 0, 0, 0, 0,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 327, 326, 328, 329, 330, 331, 0,
	332, 333, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 334, 0, 335, 336, 337, 1370, 338, 339, 340,
	341, 342, 343, 344, 745, 746, 0, 345, 747, 346,
	748, 0, 749, 347, 348, 349, 350, 351, 352, 353,
	0, 0, 0, 354, 750, 751, 752, 0, 355, 356,
	753, 0, 1684, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1371, 382, 383, 384, 0, 0,
	0, 0, 0, 0, 0, 385, 386, 387, 388, 389,
	0, 390, 392, 754, 755, 0, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 756, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 757, 758,
	426, 0, 319, 0, 0, 0, 0, 0, 427, 428,
	429, 759, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 1372, 436, 437, 438, 760, 761,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 762, 0, 763, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 764, 765, 766, 552, 1374, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 0, 0, 0, 1373, 767,
	469, 553, 470, 768, 769, 0, 770, 0, 471, 472,
	474, 1375, 771, 1376, 473, 475, 476, 1377, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 772, 488, 1378, 490, 491,
	1379, 0, 492, 493, 494, 495, 496, 497, 500, 0,
	0, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 1380, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 1381,
	545, 532, 0, 533, 0, 1382, 547, 548, 549, 550,
	0, 773, 551, 774, 554, 555, 0, 0, 556, 0,
	557, 0, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 1383, 564, 1384, 776, 565, 566, 558, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 779,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 781, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 1385, 627, 628, 629, 630,
	631, 782, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 0, 658, 783,
	659, 639, 640, 660, 661, 1386, 662, 663, 664, 665,
	666, 667, 668, 784, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 785, 679,
	680, 681, 682, 786, 686, 687, 688, 689, 0, 690,
	691, 0, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 787, 788, 789, 790,
	0, 712, 0, 701, 703, 704, 705, 706, 791, 707,
	792, 0, 708, 709, 710, 711, 702, 713, 714, 0,
	0, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	0, 724, 0, 0, 725, 726, 727, 793, 794, 795,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 1718, 1717, 0, 0, 739, 740, 797,
	741, 742, 743, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	334, 0, 335, 336, 337, 1370, 338, 339, 340, 341,
	342, 343, 344, 745, 746, 0, 345, 747, 346, 748,
	0, 749, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 750, 751, 752, 0, 355, 356, 753,
	0, 1684, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 1371, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 754, 755, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 756, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 757, 758, 426,
	0, 319, 0, 0, 0, 0, 0, 427, 428, 429,
	759, 0, 0, 0, 430, 0, 431, 432, 433, 0,
	434, 435, 0, 1372, 436, 437, 438, 760, 761, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	762, 0, 763, 449, 0, 450, 451, 452, 453, 454,
	455, 456, 764, 765, 766, 552, 1374, 457, 458, 459,
	0, 460, 461, 462, 463, 464, 0, 0, 0, 465,
	466, 467, 468, 0, 0, 0, 0, 1373, 767, 469,
	553, 470, 768, 769, 0, 770, 0, 471, 472, 474,
	1375, 771, 1376, 473, 475, 476, 1377, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 772, 488, 1378, 490, 491, 1379,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	1380, 527, 528, 529, 530, 531, 539, 541, 542, 537,
	538, 540, 543, 544, 546, 534, 535, 536, 1381, 545,
	532, 0, 533, 0, 1382, 547, 548, 549, 550, 0,
	773, 551, 774, 554, 555, 0, 0, 556, 0, 557,
	0, 0, 559, 560, 561, 0, 0, 562, 563, 775,
	1383, 564, 1384, 776, 565, 566, 558, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 0, 577, 578,
	777, 579, 580, 581, 778, 582, 583, 584, 779, 585,
	780, 586, 587, 0, 588, 589, 590, 0, 591, 592,
	593, 594, 595, 596, 597, 598, 781, 599, 600, 602,
	601, 603, 0, 604, 0, 605, 606, 607, 0, 0,
	0, 0, 0, 608, 609, 611, 0, 612, 613, 614,
	615, 610, 616, 617, 618, 619, 620, 621, 0, 623,
	624, 622, 625, 626, 1385, 627, 628, 629, 630, 631,
	782, 632, 0, 633, 634, 642, 643, 644, 635, 636,
	638, 645, 637, 646, 647, 648, 649, 651, 650, 0,
	653, 654, 652, 655, 656, 657, 0, 658, 783, 659,
	639, 640, 660, 661, 1386, 662, 663, 664, 665, 666,
	667, 668, 784, 0, 669, 0, 670, 671, 672, 673,
	674, 675, 677, 641, 678, 683, 684, 785, 679, 680,
	681, 682, 786, 686, 687, 688, 689, 0, 690, 691,
	0, 685, 676, 0, 692, 693, 694, 695, 696, 697,
	0, 698, 699, 0, 700, 787, 788, 789, 790, 0,
	712, 0, 701, 703, 704, 705, 706, 791, 707, 792,
	0, 708, 709, 710, 711, 702, 713, 714, 0, 0,
	715, 716, 717, 719, 721, 722, 718, 720, 723, 0,
	724, 0, 0, 725, 726, 727, 793, 794, 795, 0,
	729, 730, 728, 731, 732, 735, 733, 734, 796, 736,
	737, 738, 1718, 0, 0, 0, 739, 740, 797, 741,
	742, 743, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 0, 744, 0, 0, 0, 334,
	0, 335, 336, 337, 1370, 338, 339, 340, 341, 342,
	343, 344, 745, 746, 0, 345, 747, 346, 748, 0,
	749, 347, 348, 349, 350, 351, 352, 353, 0, 0,
	0, 354, 750, 751, 752, 0, 355, 356, 753, 0,
	1684, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1371, 382, 383, 384, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 387, 388, 389, 0, 390,
	392, 754, 755, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 756, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 757, 758, 426, 0,
	319, 0, 0, 0, 0, 0, 427, 428, 429, 759,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 1372, 436, 437, 438, 760, 761, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 762,
	0, 763, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 764, 765, 766, 552, 1374, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 0, 0, 0, 1373, 767, 469, 553,
	470, 768, 769, 0, 770, 0, 471, 472, 474, 1375,
	771, 1376, 473, 475, 476, 1377, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 772, 488, 1378, 490, 491, 1379, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 1380,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 1381, 545, 532,
	0, 533, 0, 1382, 547, 548, 549, 550, 0, 773,
	551, 774, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 1383,
	564, 1384, 776, 565, 566, 558, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 779, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 781, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 1385, 627, 628, 629, 630, 631, 782,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 0, 658, 783, 659, 639,
	640, 660, 661, 1386, 662, 663, 664, 665, 666, 667,
	668, 784, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 785, 679, 680, 681,
	682, 786, 686, 687, 688, 689, 0, 690, 691, 0,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 787, 788, 789, 790, 0, 712,
	0, 701, 703, 704, 705, 706, 791, 707, 792, 0,
	708, 709, 710, 711, 702, 713, 714, 0, 0, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 0, 724,
	0, 0, 725, 726, 727, 793, 794, 795, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 316, 0, 0, 0, 739, 740, 797, 741, 742,
	743, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 744, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 745, 746, 0, 345, 747, 346, 748, 0, 749,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 750, 751, 752, 3302, 355, 356, 753, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 4153, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	754, 755, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	3306, 413, 756, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 757, 758, 426, 0, 4152,
	0, 0, 0, 0, 0, 427, 428, 429, 759, 0,
	0, 0, 430, 0, 431, 432, 433, 3305, 434, 435,
	0, 0, 436, 437, 438, 760, 761, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 762, 0,
	763, 449, 0, 450, 451, 452, 453, 454, 455, 456,
	764, 765, 766, 552, 0, 457, 458, 459, 0, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 0, 4148, 4149, 0, 0, 767, 469, 553, 470,
	768, 769, 0, 770, 0, 471, 4151, 474, 0, 771,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 772, 488, 0, 490, 491, 4147, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 0, 545, 532, 0,
	533, 0, 0, 547, 548, 549, 550, 0, 773, 551,
	774, 554, 555, 0, 0, 556, 0, 557, 0, 0,
	559, 560, 561, 0, 0, 562, 563, 775, 0, 564,
	0, 776, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 0, 577, 578, 777, 579,
	580, 581, 778, 582, 583, 584, 779, 585, 780, 586,
	587, 3304, 588, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 781, 599, 600, 602, 601, 603,
	0, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 609, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 0, 623, 624, 622,
	625, 626, 0, 627, 628, 629, 630, 631, 782, 632,
	0, 633, 634, 642, 643, 644, 635, 636, 638, 645,
	637, 646, 647, 648, 649, 651, 650, 0, 653, 654,
	652, 655, 656, 657, 0, 658, 783, 659, 639, 640,
	660, 661, 0, 662, 663, 664, 665, 666, 667, 668,
	784, 0, 669, 0, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 785, 679, 680, 681, 682,
	786, 686, 687, 688, 689, 0, 690, 691, 0, 685,
	676, 0, 692, 693, 694, 695, 696, 697, 0, 698,
	699, 0, 700, 787, 788, 789, 790, 0, 712, 0,
	701, 703, 704, 705, 706, 791, 707, 792, 0, 708,
	709, 710, 711, 702, 713, 714, 0, 4150, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 0, 724, 0,
	0, 725, 726, 727, 793, 794, 795, 0, 729, 730,
	728, 731, 732, 735, 733, 734, 796, 736, 737, 738,
	1991, 0, 316, 0, 739, 740, 797, 741, 742, 743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 1990, 332, 333,
	0, 0, 0, 0, 0, 744, 0, 0, 0, 334,
	0, 335, 336, 337, 0, 338, 339, 340, 341, 342,
	343, 344, 745, 746, 0, 345, 747, 346, 748, 0,
	749, 347, 348, 349, 350, 351, 352, 353, 0, 0,
	0, 354, 750, 751, 752, 0, 355, 356, 753, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 0, 382, 383, 384, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 387, 1986, 389, 0, 390,
	392, 754, 755, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 756, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 1993, 757, 758, 426, 0,
	319, 0, 0, 0, 0, 0, 427, 428, 429, 759,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 0, 1989, 437, 438, 760, 761, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 762,
	0, 763, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 764, 765, 766, 552, 0, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 1987,
	467, 468, 0, 321, 320, 322, 0, 767, 469, 553,
	470, 768, 769, 0, 770, 0, 471, 472, 474, 0,
	771, 0, 473, 475, 476, 0, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 772, 488, 0, 490, 491, 0, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 0,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 0, 545, 532,
	0, 533, 323, 0, 547, 548, 549, 550, 0, 773,
	551, 774, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 0,
	564, 0, 776, 565, 566, 558, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 779, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 781, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 0, 627, 628, 629, 630, 631, 782,
	632, 0, 633, 634, 642, 643, 644, 1992, 636, 638,
	645, 637, 646, 647, 648, 649, 1988, 650, 0, 1985,
	654, 652, 655, 656, 657, 0, 658, 783, 659, 639,
	640, 660, 661, 0, 662, 663, 664, 665, 666, 667,
	668, 784, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 785, 679, 680, 681,
	682, 786, 686, 687, 688, 689, 0, 690, 691, 0,
	685, 676, 1983, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 787, 788, 789, 790, 0, 712,
	0, 701, 703, 704, 705, 706, 791, 707, 792, 0,
	708, 709, 710, 711, 702, 713, 714, 0, 0, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 0, 724,
	0, 0, 725, 726, 727, 793, 794, 795, 0, 729,
	1984, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 1688, 0, 316, 0, 739, 740, 797, 741, 742,
	743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 745, 746, 0, 345, 747, 346, 748,
	0, 749, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 750, 751, 752, 0, 355, 356, 753,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 754, 755, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 756, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 757, 758, 426,
	0, 319, 0, 0, 0, 0, 0, 427, 428, 429,
	759, 0, 0, 0, 430, 0, 431, 432, 433, 0,
	434, 435, 0, 0, 436, 437, 438, 760, 761, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	762, 0, 763, 449, 0, 450, 451, 452, 453, 454,
	455, 456, 1690, 765, 766, 552, 0, 457, 458, 459,
	0, 460, 461, 462, 463, 464, 0, 0, 0, 465,
	466, 467, 468, 0, 321, 320, 322, 0, 767, 469,
	553, 470, 768, 769, 0, 770, 0, 471, 472, 474,
	0, 771, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 772, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 539, 541, 542, 537,
	538, 540, 543, 544, 546, 534, 535, 536, 0, 545,
	532, 0, 533, 323, 0, 547, 548, 549, 550, 0,
	773, 551, 774, 554, 555, 0, 0, 556, 0, 557,
	0, 1421, 559, 560, 561, 0, 0, 562, 563, 775,
	0, 564, 0, 776, 565, 566, 558, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 0, 577, 578,
	777, 579, 580, 581, 778, 582, 583, 584, 779, 585,
	780, 586, 587, 0, 588, 589, 590, 0, 591, 592,
	593, 594, 595, 596, 597, 598, 781, 599, 600, 602,
	601, 603, 0, 604, 0, 605, 606, 607, 0, 0,
	0, 0, 0, 608, 609, 611, 0, 612, 613, 614,
	615, 610, 616, 617, 618, 619, 620, 621, 0, 623,
	624, 622, 625, 626, 0, 627, 628, 629, 630, 631,
	782, 632, 0, 633, 634, 642, 643, 644, 635, 636,
	638, 645, 637, 646, 647, 648, 649, 651, 650, 0,
	653, 654, 652, 655, 656, 657, 0, 658, 783, 659,
	639, 640, 660, 661, 0, 662, 663, 664, 665, 666,
	667, 668, 784, 0, 669, 0, 670, 671, 672, 673,
	674, 675, 677, 641, 678, 683, 684, 785, 679, 680,
	681, 682, 786, 686, 687, 688, 689, 0, 690, 691,
	0, 685, 676, 0, 692, 693, 694, 695, 696, 697,
	0, 698, 699, 0, 700, 787, 788, 789, 790, 0,
	712, 0, 701, 703, 704, 705, 706, 791, 707, 792,
	0, 708, 709, 710, 711, 702, 713, 714, 0, 0,
	715, 716, 717, 719, 721, 722, 718, 720, 723, 0,
	724, 0, 0, 725, 726, 727, 793, 794, 795, 0,
	729, 730, 728, 731, 732, 735, 733, 734, 796, 736,
	737, 738, 1685, 0, 316, 0, 739, 740, 797, 741,
	742, 743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 327, 326, 328, 329, 330, 331, 0,
	332, 333, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 334, 0, 335, 336, 337, 0, 338, 339, 340,
	341, 342, 343, 344, 745, 746, 0, 345, 747, 346,
	748, 0, 749, 347, 348, 349, 350, 351, 352, 353,
	0, 0, 0, 354, 750, 751, 752, 0, 355, 356,
	753, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 0, 382, 383, 384, 0, 0,
	0, 0, 0, 0, 0, 385, 386, 387, 388, 389,
	0, 390, 392, 754, 755, 0, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 756, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 757, 758,
	426, 0, 319, 0, 0, 0, 0, 0, 427, 428,
	429, 759, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 0, 436, 437, 438, 760, 761,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 762, 0, 763, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 1687, 765, 766, 552, 0, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 321, 320, 322, 0, 767,
	469, 553, 470, 768, 769, 0, 770, 0, 471, 472,
	474, 0, 771, 0, 473, 475, 476, 0, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 772, 488, 0, 490, 491,
	0, 0, 492, 493, 494, 495, 496, 497, 500, 0,
	0, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 0, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 0,
	545, 532, 0, 533, 323, 0, 547, 548, 549, 550,
	0, 773, 551, 774, 554, 555, 0, 0, 556, 0,
	557, 0, 1421, 559, 560, 561, 0, 0, 562, 563,
	775, 0, 564, 0, 776, 565, 566, 558, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 779,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 781, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 0, 627, 628, 629, 630,
	631, 782, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 0, 658, 783,
	659, 639, 640, 660, 661, 0, 662, 663, 664, 665,
	666, 667, 668, 784, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 785, 679,
	680, 681, 682, 786, 686, 687, 688, 689, 0, 690,
	691, 0, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 787, 788, 789, 790,
	0, 712, 0, 701, 703, 704, 705, 706, 791, 707,
	792, 0, 708, 709, 710, 711, 702, 713, 714, 0,
	0, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	0, 724, 0, 0, 725, 726, 727, 793, 794, 795,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 1591, 0, 316, 0, 739, 740, 797,
	741, 742, 743, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 744, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 745, 746, 0, 345, 747,
	346, 748, 0, 749, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 750, 751, 752, 0, 355,
	356, 753, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 754, 755, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 756, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 757,
	758, 426, 0, 319, 0, 0, 0, 0, 0, 427,
	428, 429, 759, 0, 0, 0, 430, 0, 431, 432,
	433, 0, 434, 435, 0, 0, 436, 437, 438, 760,
	761, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 762, 0, 763, 449, 0, 450, 451, 452,
	453, 454, 455, 456, 1593, 765, 766, 552, 0, 457,
	458, 459, 0, 460, 461, 462, 463, 464, 0, 0,
	0, 465, 466, 467, 468, 0, 321, 320, 322, 0,
	767, 469, 553, 470, 768, 769, 0, 770, 0, 471,
	472, 474, 0, 771, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 772, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 539, 541,
	542, 537, 538, 540, 543, 544, 546, 534, 535, 536,
	0, 545, 532, 0, 533, 323, 0, 547, 548, 549,
	550, 0, 773, 551, 774, 554, 555, 0, 0, 556,
	0, 557, 0, 1421, 559, 560, 561, 0, 0, 562,
	563, 775, 0, 564, 0, 776, 565, 566, 558, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 0,
	577, 578, 777, 579, 580, 581, 778, 582, 583, 584,
	779, 585, 780, 586, 587, 0, 588, 589, 590, 0,
	591, 592, 593, 594, 595, 596, 597, 598, 781, 599,
	600, 602, 601, 603, 0, 604, 0, 605, 606, 607,
	0, 0, 0, 0, 0, 608, 609, 611, 0, 612,
	613, 614, 615, 610, 616, 617, 618, 619, 620, 621,
	0, 623, 624, 622, 625, 626, 0, 627, 628, 629,
	630, 631, 782, 632, 0, 633, 634, 642, 643, 644,
	635, 636, 638, 645, 637, 646, 647, 648, 649, 651,
	650, 0, 653, 654, 652, 655, 656, 657, 0, 658,
	783, 659, 639, 640, 660, 661, 0, 662, 663, 664,
	665, 666, 667, 668, 784, 0, 669, 0, 670, 671,
	672, 673, 674, 675, 677, 641, 678, 683, 684, 785,
	679, 680, 681, 682, 786, 686, 687, 688, 689, 0,
	690, 691, 0, 685, 676, 0, 692, 693, 694, 695,
	696, 697, 0, 698, 699, 0, 700, 787, 788, 789,
	790, 0, 712, 0, 701, 703, 704, 705, 706, 791,
	707, 792, 0, 708, 709, 710, 711, 702, 713, 714,
	0, 0, 715, 716, 717, 719, 721, 722, 718, 720,
	723, 0, 724, 0, 0, 725, 726, 727, 793, 794,
	795, 0, 729, 730, 728, 731, 732, 735, 733, 734,
	796, 736, 737, 738, 316, 0, 0, 0, 739, 740,
	797, 741, 742, 743, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 327, 326, 328, 329, 330, 331, 0,
	332, 333, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 334, 0, 335, 336, 337, 0, 338, 339, 340,
	341, 342, 343, 344, 745, 746, 0, 345, 747, 346,
	748, 0, 749, 347, 348, 349, 350, 351, 352, 353,
	0, 0, 0, 354, 750, 751, 752, 0, 355, 356,
	753, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 0, 382, 383, 384, 0, 0,
	0, 0, 0, 0, 0, 385, 386, 387, 388, 389,
	0, 390, 392, 754, 755, 0, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 756, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 757, 758,
	426, 0, 319, 0, 0, 0, 0, 0, 427, 428,
	429, 759, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 0, 436, 437, 438, 760, 761,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 762, 0, 763, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 764, 765, 766, 552, 0, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 321, 320, 322, 0, 767,
	469, 553, 470, 768, 769, 0, 770, 0, 471, 472,
	474, 0, 771, 0, 473, 475, 476, 0, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 772, 488, 0, 490, 491,
	0, 0, 492, 493, 494, 495, 496, 497, 500, 0,
	0, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 0, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 0,
	545, 532, 0, 533, 323, 0, 547, 548, 549, 550,
	0, 773, 551, 774, 554, 555, 0, 0, 556, 0,
	557, 0, 1421, 559, 560, 561, 0, 0, 562, 563,
	775, 0, 564, 0, 776, 565, 566, 558, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 779,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 781, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 0, 627, 628, 629, 630,
	631, 782, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 0, 658, 783,
	659, 639, 640, 660, 661, 0, 662, 663, 664, 665,
	666, 667, 668, 784, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 785, 679,
	680, 681, 682, 786, 686, 687, 688, 689, 0, 690,
	691, 0, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 787, 788, 789, 790,
	0, 712, 0, 701, 703, 704, 705, 706, 791, 707,
	792, 0, 708, 709, 710, 711, 702, 713, 714, 0,
	0, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	0, 724, 0, 0, 725, 726, 727, 793, 794, 795,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 316, 0, 0, 0, 739, 740, 797,
	741, 742, 743, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 745, 746, 0, 345, 747, 346, 748,
	0, 749, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 750, 751, 752, 0, 355, 356, 753,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 754, 755, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 756, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 757, 758, 426,
	0, 319, 0, 0, 0, 0, 0, 427, 428, 429,
	759, 0, 0, 0, 430, 0, 431, 432, 433, 0,
	434, 435, 0, 0, 436, 437, 438, 760, 761, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	762, 0, 763, 449, 0, 450, 451, 452, 453, 454,
	455, 456, 764, 765, 766, 552, 0, 457, 458, 459,
	0, 460, 461, 462, 463, 464, 0, 0, 0, 465,
	466, 467, 468, 0, 321, 320, 322, 0, 767, 469,
	553, 470, 768, 769, 0, 770, 0, 471, 472, 474,
	0, 771, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 772, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 539, 541, 542, 537,
	538, 540, 543, 544, 546, 534, 535, 536, 4018, 545,
	532, 0, 533, 323, 0, 547, 548, 549, 550, 0,
	773, 551, 774, 554, 555, 0, 0, 556, 0, 557,
	0, 0, 559, 560, 561, 0, 0, 562, 563, 775,
	0, 564, 0, 776, 565, 566, 558, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 0, 577, 578,
	777, 579, 580, 581, 778, 582, 583, 584, 779, 585,
	780, 586, 587, 0, 588, 589, 590, 0, 591, 592,
	593, 594, 595, 596, 597, 598, 781, 599, 600, 602,
	601, 603, 0, 604, 0, 605, 606, 607, 0, 0,
	0, 0, 0, 608, 609, 611, 0, 612, 613, 614,
	615, 610, 616, 617, 618, 619, 620, 621, 0, 623,
	624, 622, 625, 626, 0, 627, 628, 629, 630, 631,
	782, 632, 0, 633, 634, 642, 643, 644, 635, 636,
	638, 645, 637, 646, 647, 648, 649, 651, 650, 0,
	653, 654, 652, 655, 656, 657, 0, 658, 783, 659,
	639, 640, 660, 661, 0, 662, 663, 664, 665, 666,
	667, 668, 784, 0, 669, 0, 670, 671, 672, 673,
	674, 675, 677, 641, 678, 683, 684, 785, 679, 680,
	681, 682, 786, 686, 687, 688, 689, 0, 690, 691,
	0, 685, 676, 0, 692, 693, 694, 695, 696, 697,
	0, 698, 699, 0, 700, 787, 788, 789, 790, 0,
	712, 0, 701, 703, 704, 705, 706, 791, 707, 792,
	0, 708, 709, 710, 711, 702, 713, 714, 0, 0,
	715, 716, 717, 719, 721, 722, 718, 720, 723, 0,
	724, 0, 0, 725, 726, 727, 793, 794, 795, 0,
	729, 730, 728, 731, 732, 735, 733, 734, 796, 736,
	737, 738, 3520, 0, 316, 0, 739, 740, 797, 741,
	742, 743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 327, 326, 328, 329, 330, 331, 0,
	332, 333, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 334, 0, 335, 336, 337, 0, 338, 339, 340,
	341, 342, 343, 344, 745, 746, 0, 345, 747, 346,
	748, 0, 749, 347, 348, 349, 350, 351, 352, 353,
	0, 0, 0, 354, 750, 751, 752, 0, 355, 356,
	753, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 0, 382, 383, 384, 0, 0,
	0, 0, 0, 0, 0, 385, 386, 387, 388, 389,
	0, 390, 392, 754, 755, 0, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 756, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 757, 758,
	426, 0, 319, 0, 0, 0, 0, 0, 427, 428,
	429, 759, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 0, 436, 437, 438, 760, 761,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 762, 0, 763, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 3519, 765, 766, 552, 0, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 321, 320, 322, 0, 767,
	469, 553, 470, 768, 769, 0, 770, 0, 471, 472,
	474, 0, 771, 0, 473, 475, 476, 0, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 772, 488, 0, 490, 491,
	0, 0, 492, 493, 494, 495, 496, 497, 500, 0,
	0, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 0, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 0,
	545, 532, 0, 533, 323, 0, 547, 548, 549, 550,
	0, 773, 551, 774, 554, 555, 0, 0, 556, 0,
	557, 0, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 0, 564, 0, 776, 565, 566, 558, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 779,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 781, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 0, 627, 628, 629, 630,
	631, 782, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 0, 658, 783,
	659, 639, 640, 660, 661, 0, 662, 663, 664, 665,
	666, 667, 668, 784, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 785, 679,
	680, 681, 682, 786, 686, 687, 688, 689, 0, 690,
	691, 0, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 787, 788, 789, 790,
	0, 712, 0, 701, 703, 704, 705, 706, 791, 707,
	792, 0, 708, 709, 710, 711, 702, 713, 714, 0,
	0, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	0, 724, 0, 0, 725, 726, 727, 793, 794, 795,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 316, 0, 0, 0, 739, 740, 797,
	741, 742, 743, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 745, 746, 0, 345, 747, 346, 748,
	0, 749, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 750, 751, 752, 3302, 355, 356, 753,
	0, 0, 3296, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 3298,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 754, 755, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 3306, 413, 756, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 757, 758, 426,
	0, 0, 0, 0, 0, 0, 0, 427, 428, 429,
	759, 0, 0, 0, 430, 0, 431, 432, 433, 3305,
	434, 435, 0, 0, 436, 437, 438, 760, 761, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	762, 0, 763, 449, 0, 450, 451, 452, 453, 454,
	455, 456, 3295, 765, 766, 552, 0, 457, 458, 459,
	0, 460, 461, 462, 463, 464, 0, 0, 0, 465,
	466, 467, 468, 0, 0, 0, 0, 0, 767, 469,
	553, 470, 768, 769, 0, 770, 0, 471, 472, 474,
	0, 771, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 772, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 539, 541, 542, 537,
	538, 540, 543, 544, 546, 534, 535, 536, 0, 545,
	532, 0, 533, 0, 0, 547, 548, 549, 550, 0,
	773, 551, 774, 554, 555, 0, 0, 556, 0, 557,
	0, 0, 559, 560, 561, 0, 0, 562, 563, 775,
	0, 564, 0, 776, 565, 566, 558, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 0, 577, 578,
	777, 579, 580, 581, 778, 582, 583, 584, 779, 585,
	780, 586, 587, 3304, 588, 589, 590, 0, 591, 592,
	593, 594, 595, 596, 597, 598, 781, 599, 600, 602,
	601, 603, 0, 604, 0, 605, 606, 607, 0, 0,
	0, 0, 0, 608, 609, 611, 0, 612, 613, 614,
	615, 610, 616, 617, 618, 619, 620, 621, 0, 623,
	624, 622, 625, 626, 0, 627, 628, 629, 630, 631,
	782, 632, 0, 633, 634, 642, 643, 644, 635, 636,
	638, 645, 637, 646, 647, 648, 649, 651, 650, 0,
	653, 654, 652, 655, 656, 657, 0, 658, 783, 659,
	639, 640, 660, 661, 0, 662, 663, 664, 665, 666,
	667, 668, 784, 0, 669, 0, 670, 671, 672, 673,
	674, 675, 677, 641, 678, 683, 684, 785, 679, 680,
	681, 682, 786, 686, 687, 688, 689, 0, 690, 691,
	0, 685, 676, 0, 692, 693, 694, 695, 696, 697,
	0, 698, 699, 0, 700, 787, 788, 789, 790, 0,
	712, 0, 701, 703, 704, 705, 706, 791, 707, 792,
	0, 708, 709, 710, 711, 702, 713, 714, 0, 3303,
	715, 716, 717, 719, 721, 722, 718, 720, 723, 0,
	724, 0, 0, 725, 726, 727, 793, 794, 795, 0,
	729, 730, 728, 731, 732, 735, 733, 734, 796, 736,
	737, 738, 2673, 0, 316, 0, 739, 740, 797, 741,
	742, 743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 327, 326, 328, 329, 330, 331, 0,
	332, 333, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 334, 0, 335, 336, 337, 0, 338, 339, 340,
	341, 342, 343, 344, 745, 746, 0, 345, 747, 346,
	748, 0, 749, 347, 348, 349, 350, 351, 352, 353,
	0, 0, 0, 354, 750, 751, 752, 0, 355, 356,
	753, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 0, 382, 383, 384, 0, 0,
	0, 0, 0, 0, 0, 385, 386, 387, 388, 389,
	0, 390, 392, 754, 755, 0, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 756, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 757, 758,
	426, 0, 319, 0, 0, 0, 0, 0, 427, 428,
	429, 759, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 0, 436, 437, 438, 760, 761,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 762, 0, 763, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 764, 765, 766, 552, 0, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 321, 320, 322, 0, 767,
	469, 553, 470, 768, 769, 0, 770, 0, 471, 472,
	474, 0, 771, 0, 473, 475, 476, 0, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 772, 488, 0, 490, 491,
	0, 0, 492, 493, 494, 495, 496, 497, 500, 0,
	0, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 0, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 0,
	545, 532, 0, 533, 323, 0, 547, 548, 549, 550,
	0, 773, 551, 774, 554, 555, 0, 0, 556, 0,
	557, 0, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 0, 564, 0, 776, 565, 566, 558, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 779,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 781, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 0, 627, 628, 629, 630,
	631, 782, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 0, 658, 783,
	659, 639, 640, 660, 661, 0, 662, 663, 664, 665,
	666, 667, 668, 784, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 785, 679,
	680, 681, 682, 786, 686, 687, 688, 689, 0, 690,
	691, 0, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 787, 788, 789, 790,
	0, 712, 0, 701, 703, 704, 705, 706, 791, 707,
	792, 0, 708, 709, 710, 711, 702, 713, 714, 0,
	0, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	0, 724, 0, 0, 725, 726, 727, 793, 794, 795,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 2617, 0, 316, 0, 739, 740, 797,
	741, 742, 743, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 744, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 745, 746, 0, 345, 747,
	346, 748, 0, 749, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 750, 751, 752, 0, 355,
	356, 753, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 754, 755, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 756, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 757,
	758, 426, 0, 319, 0, 0, 0, 0, 0, 427,
	428, 429, 759, 0, 0, 0, 430, 0, 431, 432,
	433, 0, 434, 435, 0, 0, 436, 437, 438, 760,
	761, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 762, 0, 763, 449, 0, 450, 451, 452,
	453, 454, 455, 456, 2616, 765, 766, 552, 0, 457,
	458, 459, 0, 460, 461, 462, 463, 464, 0, 0,
	0, 465, 466, 467, 468, 0, 321, 320, 322, 0,
	767, 469, 553, 470, 768, 769, 0, 770, 0, 471,
	472, 474, 0, 771, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 772, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 539, 541,
	542, 537, 538, 540, 543, 544, 546, 534, 535, 536,
	0, 545, 532, 0, 533, 323, 0, 547, 548, 549,
	550, 0, 773, 551, 774, 554, 555, 0, 0, 556,
	0, 557, 0, 0, 559, 560, 561, 0, 0, 562,
	563, 775, 0, 564, 0, 776, 565, 566, 558, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 0,
	577, 578, 777, 579, 580, 581, 778, 582, 583, 584,
	779, 585, 780, 586, 587, 0, 588, 589, 590, 0,
	591, 592, 593, 594, 595, 596, 597, 598, 781, 599,
	600, 602, 601, 603, 0, 604, 0, 605, 606, 607,
	0, 0, 0, 0, 0, 608, 609, 611, 0, 612,
	613, 614, 615, 610, 616, 617, 618, 619, 620, 621,
	0, 623, 624, 622, 625, 626, 0, 627, 628, 629,
	630, 631, 782, 632, 0, 633, 634, 642, 643, 644,
	635, 636, 638, 645, 637, 646, 647, 648, 649, 651,
	650, 0, 653, 654, 652, 655, 656, 657, 0, 658,
	783, 659, 639, 640, 660, 661, 0, 662, 663, 664,
	665, 666, 667, 668, 784, 0, 669, 0, 670, 671,
	672, 673, 674, 675, 677, 641, 678, 683, 684, 785,
	679, 680, 681, 682, 786, 686, 687, 688, 689, 0,
	690, 691, 0, 685, 676, 0, 692, 693, 694, 695,
	696, 697, 0, 698, 699, 0, 700, 787, 788, 789,
	790, 0, 712, 0, 701, 703, 704, 705, 706, 791,
	707, 792, 0, 708, 709, 710, 711, 702, 713, 714,
	0, 0, 715, 716, 717, 719, 721, 722, 718, 720,
	723, 0, 724, 0, 0, 725, 726, 727, 793, 794,
	795, 0, 729, 730, 728, 731, 732, 735, 733, 734,
	796, 736, 737, 738, 2601, 0, 316, 0, 739, 740,
	797, 741, 742, 743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 327, 326, 328, 329, 330,
	331, 0, 332, 333, 0, 0, 0, 0, 0, 744,
	0, 0, 0, 334, 0, 335, 336, 337, 0, 338,
	339, 340, 341, 342, 343, 344, 745, 746, 0, 345,
	747, 346, 748, 0, 749, 347, 348, 349, 350, 351,
	352, 353, 0, 0, 0, 354, 750, 751, 752, 0,
	355, 356, 753, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 0, 382, 383, 384,
	0, 0, 0, 0, 0, 0, 0, 385, 386, 387,
	388, 389, 0, 390, 392, 754, 755, 0, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 756, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	757, 758, 426, 0, 319, 0, 0, 0, 0, 0,
	427, 428, 429, 759, 0, 0, 0, 430, 0, 431,
	432, 433, 0, 434, 435, 0, 0, 436, 437, 438,
	760, 761, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 762, 0, 763, 449, 0, 450, 451,
	452, 453, 454, 455, 456, 2603, 765, 766, 552, 0,
	457, 458, 459, 0, 460, 461, 462, 463, 464, 0,
	0, 0, 465, 466, 467, 468, 0, 321, 320, 322,
	0, 767, 469, 553, 470, 768, 769, 0, 770, 0,
	471, 472, 474, 0, 771, 0, 473, 475, 476, 0,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 772, 488, 0,
	490, 491, 0, 0, 492, 493, 494, 495, 496, 497,
	500, 0, 0, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 0, 527, 528, 529, 530, 531, 539,
	541, 542, 537, 538, 540, 543, 544, 546, 534, 535,
	536, 0, 545, 532, 0, 533, 323, 0, 547, 548,
	549, 550, 0, 773, 551, 774, 554, 555, 0, 0,
	556, 0, 557, 0, 0, 559, 560, 561, 0, 0,
	562, 563, 775, 0, 564, 0, 776, 565, 566, 558,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	0, 577, 578, 777, 579, 580, 581, 778, 582, 583,
	584, 779, 585, 780, 586, 587, 0, 588, 589, 590,
	0, 591, 592, 593, 594, 595, 596, 597, 598, 781,
	599, 600, 602, 601, 603, 0, 604, 0, 605, 606,
	607, 0, 0, 0, 0, 0, 608, 609, 611, 0,
	612, 613, 614, 615, 610, 616, 617, 618, 619, 620,
	621, 0, 623, 624, 622, 625, 626, 0, 627, 628,
	629, 630, 631, 782, 632, 0, 633, 634, 642, 643,
	644, 635, 636, 638, 645, 637, 646, 647, 648, 649,
	651, 650, 0, 653, 654, 652, 655, 656, 657, 0,
	658, 783, 659, 639, 640, 660, 661, 0, 662, 663,
	664, 665, 666, 667, 668, 784, 0, 669, 0, 670,
	671, 672, 673, 674, 675, 677, 641, 678, 683, 684,
	785, 679, 680, 681, 682, 786, 686, 687, 688, 689,
	0, 690, 691, 0, 685, 676, 0, 692, 693, 694,
	695, 696, 697, 0, 698, 699, 0, 700, 787, 788,
	789, 790, 0, 712, 0, 701, 703, 704, 705, 706,
	791, 707, 792, 0, 708, 709, 710, 711, 702, 713,
	714, 0, 0, 715, 716, 717, 719, 721, 722, 718,
	720, 723, 0, 724, 0, 0, 725, 726, 727, 793,
	794, 795, 0, 729, 730, 728, 731, 732, 735, 733,
	734, 796, 736, 737, 738, 2592, 0, 316, 0, 739,
	740, 797, 741, 742, 743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	744, 0, 0, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 745, 746, 0,
	345, 747, 346, 748, 0, 749, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 750, 751, 752,
	0, 355, 356, 753, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 0, 390, 392, 754, 755, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 756, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 757, 758, 426, 0, 319, 0, 0, 0, 0,
	0, 427, 428, 429, 759, 0, 0, 0, 430, 0,
	431, 432, 433, 0, 434, 435, 0, 0, 436, 437,
	438, 760, 761, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 762, 0, 763, 449, 0, 450,
	451, 452, 453, 454, 455, 456, 764, 765, 766, 552,
	0, 457, 458, 459, 0, 460, 461, 462, 463, 464,
	0, 0, 0, 465, 466, 467, 468, 0, 321, 320,
	322, 0, 767, 469, 553, 470, 768, 769, 0, 770,
	0, 471, 472, 474, 0, 771, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 772, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	539, 541, 542, 537, 538, 540, 543, 544, 546, 534,
	535, 536, 0, 545, 532, 0, 533, 323, 0, 547,
	548, 549, 550, 0, 773, 551, 774, 554, 555, 0,
	0, 556, 0, 557, 0, 0, 559, 560, 561, 0,
	0, 562, 563, 775, 0, 564, 0, 776, 565, 566,
	558, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 0, 577, 578, 777, 579, 580, 581, 778, 582,
	583, 584, 779, 585, 780, 586, 587, 0, 588, 589,
	590, 0, 591, 592, 593, 594, 595, 596, 597, 598,
	781, 599, 600, 602, 601, 603, 0, 604, 0, 605,
	606, 607, 0, 0, 0, 0, 0, 608, 609, 611,
	0, 612, 613, 614, 615, 610, 616, 617, 618, 619,
	620, 621, 0, 623, 624, 622, 625, 626, 0, 627,
	628, 629, 630, 631, 782, 632, 0, 633, 634, 642,
	643, 644, 635, 636, 638, 645, 637, 646, 647, 648,
	649, 651, 650, 0, 653, 654, 652, 655, 656, 657,
	0, 658, 783, 659, 639, 640, 660, 661, 0, 662,
	663, 664, 665, 666, 667, 668, 784, 0, 669, 0,
	670, 671, 672, 673, 674, 675, 677, 641, 678, 683,
	684, 785, 679, 680, 681, 682, 786, 686, 687, 688,
	689, 0, 690, 691, 0, 685, 676, 0, 692, 693,
	694, 695, 696, 697, 0, 698, 699, 0, 700, 787,
	788, 789, 790, 0, 712, 0, 701, 703, 704, 705,
	706, 791, 707, 792, 0, 708, 709, 710, 711, 702,
	713, 714, 0, 0, 715, 716, 717, 719, 721, 722,
	718, 720, 723, 0, 724, 0, 0, 725, 726, 727,
	793, 794, 795, 0, 729, 730, 728, 731, 732, 735,
	733, 734, 796, 736, 737, 738, 316, 0, 0, 0,
	739, 740, 797, 741, 742, 743, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 327, 326, 328, 329, 330,
	331, 0, 332, 333, 0, 0, 0, 0, 0, 744,
	0, 0, 0, 334, 0, 335, 336, 337, 0, 338,
	339, 340, 341, 342, 343, 344, 745, 746, 0, 345,
	747, 346, 748, 0, 749, 347, 348, 349, 350, 351,
	352, 353, 0, 0, 0, 354, 750, 751, 752, 0,
	355, 356, 753, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 0, 382, 383, 384,
	0, 0, 0, 0, 0, 0, 0, 385, 386, 387,
	388, 389, 0, 390, 392, 754, 755, 0, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 756, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	757, 758, 426, 0, 319, 0, 0, 0, 0, 0,
	427, 428, 429, 759, 0, 0, 0, 430, 0, 431,
	432, 433, 0, 434, 435, 0, 0, 436, 437, 438,
	760, 761, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 762, 0, 763, 449, 0, 450, 451,
	452, 453, 454, 455, 456, 2562, 765, 766, 552, 0,
	457, 458, 459, 0, 460, 461, 462, 463, 464, 0,
	0, 0, 465, 466, 467, 468, 0, 321, 320, 322,
	0, 767, 469, 553, 470, 768, 769, 0, 770, 0,
	471, 472, 474, 0, 771, 0, 473, 475, 476, 0,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 772, 488, 0,
	490, 491, 0, 0, 492, 493, 494, 495, 496, 497,
	500, 0, 0, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 0, 527, 528, 529, 530, 531, 539,
	541, 542, 537, 538, 540, 543, 544, 546, 534, 535,
	536, 0, 545, 532, 0, 533, 323, 0, 547, 548,
	549, 550, 0, 773, 551, 774, 554, 555, 0, 0,
	556, 0, 557, 0, 1421, 559, 560, 561, 0, 0,
	562, 563, 775, 0, 564, 0, 776, 565, 566, 558,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	0, 577, 578, 777, 579, 580, 581, 778, 582, 583,
	584, 779, 585, 780, 586, 587, 0, 588, 589, 590,
	0, 591, 592, 593, 594, 595, 596, 597, 598, 781,
	599, 600, 602, 601, 603, 0, 604, 0, 605, 606,
	607, 0, 0, 0, 0, 0, 608, 609, 611, 0,
	612, 613, 614, 615, 610, 616, 617, 618, 619, 620,
	621, 0, 623, 624, 622, 625, 626, 0, 627, 628,
	629, 630, 631, 782, 632, 0, 633, 634, 642, 643,
	644, 635, 636, 638, 645, 637, 646, 647, 648, 649,
	651, 650, 0, 653, 654, 652, 655, 656, 657, 0,
	658, 783, 659, 639, 640, 660, 661, 0, 662, 663,
	664, 665, 666, 667, 668, 784, 0, 669, 0, 670,
	671, 672, 673, 674, 675, 677, 641, 678, 683, 684,
	785, 679, 680, 681, 682, 786, 686, 687, 688, 689,
	0, 690, 691, 0, 685, 676, 0, 692, 693, 694,
	695, 696, 697, 0, 698, 699, 0, 700, 787, 788,
	789, 790, 0, 712, 0, 701, 703, 704, 705, 706,
	791, 707, 792, 0, 708, 709, 710, 711, 702, 713,
	714, 0, 0, 715, 716, 717, 719, 721, 722, 718,
	720, 723, 0, 724, 0, 0, 725, 726, 727, 793,
	794, 795, 0, 729, 730, 728, 731, 732, 735, 733,
	734, 796, 736, 737, 738, 1820, 0, 316, 0, 739,
	740, 797, 741, 742, 743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	744, 0, 0, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 745, 746, 0,
	345, 747, 346, 748, 0, 749, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 750, 751, 752,
	0, 355, 356, 753, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 0, 390, 392, 754, 755, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 756, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 757, 758, 426, 0, 319, 0, 0, 0, 0,
	0, 427, 428, 429, 759, 0, 0, 0, 430, 0,
	431, 432, 433, 0, 434, 435, 0, 0, 436, 437,
	438, 760, 761, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 762, 0, 763, 449, 0, 450,
	451, 452, 453, 454, 455, 456, 1819, 765, 766, 552,
	0, 457, 458, 459, 0, 460, 461, 462, 463, 464,
	0, 0, 0, 465, 466, 467, 468, 0, 321, 320,
	322, 0, 767, 469, 553, 470, 768, 769, 0, 770,
	0, 471, 472, 474, 0, 771, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 772, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	539, 541, 542, 537, 538, 540, 543, 544, 546, 534,
	535, 536, 0, 545, 532, 0, 533, 323, 0, 547,
	548, 549, 550, 0, 773, 551, 774, 554, 555, 0,
	0, 556, 0, 557, 0, 0, 559, 560, 561, 0,
	0, 562, 563, 775, 0, 564, 0, 776, 565, 566,
	558, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 0, 577, 578, 777, 579, 580, 581, 778, 582,
	583, 584, 779, 585, 780, 586, 587, 0, 588, 589,
	590, 0, 591, 592, 593, 594, 595, 596, 597, 598,
	781, 599, 600, 602, 601, 603, 0, 604, 0, 605,
	606, 607, 0, 0, 0, 0, 0, 608, 609, 611,
	0, 612, 613, 614, 615, 610, 616, 617, 618, 619,
	620, 621, 0, 623, 624, 622, 625, 626, 0, 627,
	628, 629, 630, 631, 782, 632, 0, 633, 634, 642,
	643, 644, 635, 636, 638, 645, 637, 646, 647, 648,
	649, 651, 650, 0, 653, 654, 652, 655, 656, 657,
	0, 658, 783, 659, 639, 640, 660, 661, 0, 662,
	663, 664, 665, 666, 667, 668, 784, 0, 669, 0,
	670, 671, 672, 673, 674, 675, 677, 641, 678, 683,
	684, 785, 679, 680, 681, 682, 786, 686, 687, 688,
	689, 0, 690, 691, 0, 685, 676, 0, 692, 693,
	694, 695, 696, 697, 0, 698, 699, 0, 700, 787,
	788, 789, 790, 0, 712, 0, 701, 703, 704, 705,
	706, 791, 707, 792, 0, 708, 709, 710, 711, 702,
	713, 714, 0, 0, 715, 716, 717, 719, 721, 722,
	718, 720, 723, 0, 724, 0, 0, 725, 726, 727,
	793, 794, 795, 0, 729, 730, 728, 731, 732, 735,
	733, 734, 796, 736, 737, 738, 1710, 0, 316, 0,
	739, 740, 797, 741, 742, 743, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 327, 326, 328,
	329, 330, 331, 0, 332, 333, 0, 0, 0, 0,
	0, 744, 0, 0, 0, 334, 0, 335, 336, 337,
	0, 338, 339, 340, 341, 342, 343, 344, 745, 746,
	0, 345, 747, 346, 748, 0, 749, 347, 348, 349,
	350, 351, 352, 353, 0, 0, 0, 354, 750, 751,
	752, 0, 355, 356, 753, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 0, 382,
	383, 384, 0, 0, 0, 0, 0, 0, 0, 385,
	386, 387, 388, 389, 0, 390, 392, 754, 755, 0,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 756,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 757, 758, 426, 0, 319, 0, 0, 0,
	0, 0, 427, 428, 429, 759, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 0, 436,
	437, 438, 760, 761, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 762, 0, 763, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 764, 765, 766,
	552, 0, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 321,
	320, 322, 0, 767, 469, 553, 470, 768, 769, 0,
	770, 0, 471, 472, 474, 0, 771, 0, 473, 475,
	476, 0, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 772,
	488, 0, 490, 491, 0, 0, 492, 493, 494, 495,
	496, 497, 500, 0, 0, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 0, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 0, 545, 532, 0, 533, 323, 0,
	547, 548, 549, 550, 0, 773, 551, 774, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 0, 564, 0, 776, 565,
	566, 558, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 779, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 781, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 0,
	627, 628, 629, 630, 631, 782, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 0, 658, 783, 659, 639, 640, 660, 661, 0,
	662, 663, 664, 665, 666, 667, 668, 784, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 785, 679, 680, 681, 682, 786, 686, 687,
	688, 689, 0, 690, 691, 0, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	787, 788, 789, 790, 0, 712, 0, 701, 703, 704,
	705, 706, 791, 707, 792, 0, 708, 709, 710, 711,
	702, 713, 714, 0, 0, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 0, 724, 0, 0, 725, 726,
	727, 793, 794, 795, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 1703, 0, 316,
	0, 739, 740, 797, 741, 742, 743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 744, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 745,
	746, 0, 345, 747, 346, 748, 0, 749, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 750,
	751, 752, 0, 355, 356, 753, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 754, 755,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	756, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 757, 758, 426, 0, 319, 0, 0,
	0, 0, 0, 427, 428, 429, 759, 0, 0, 0,
	430, 0, 431, 432, 433, 0, 434, 435, 0, 0,
	436, 437, 438, 760, 761, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 762, 0, 763, 449,
	0, 450, 451, 452, 453, 454, 455, 456, 1705, 765,
	766, 552, 0, 457, 458, 459, 0, 460, 461, 462,
	463, 464, 0, 0, 0, 465, 466, 467, 468, 0,
	321, 320, 322, 0, 767, 469, 553, 470, 768, 769,
	0, 770, 0, 471, 472, 474, 0, 771, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	772, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 539, 541, 542, 537, 538, 540, 543, 544,
	546, 534, 535, 536, 0, 545, 532, 0, 533, 323,
	0, 547, 548, 549, 550, 0, 773, 551, 774, 554,
	555, 0, 0, 556, 0, 557, 0, 0, 559, 560,
	561, 0, 0, 562, 563, 775, 0, 564, 0, 776,
	565, 566, 558, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 0, 577, 578, 777, 579, 580, 581,
	778, 582, 583, 584, 779, 585, 780, 586, 587, 0,
	588, 589, 590, 0, 591, 592, 593, 594, 595, 596,
	597, 598, 781, 599, 600, 602, 601, 603, 0, 604,
	0, 605, 606, 607, 0, 0, 0, 0, 0, 608,
	609, 611, 0, 612, 613, 614, 615, 610, 616, 617,
	618, 619, 620, 621, 0, 623, 624, 622, 625, 626,
	0, 627, 628, 629, 630, 631, 782, 632, 0, 633,
	634, 642, 643, 644, 635, 636, 638, 645, 637, 646,
	647, 648, 649, 651, 650, 0, 653, 654, 652, 655,
	656, 657, 0, 658, 783, 659, 639, 640, 660, 661,
	0, 662, 663, 664, 665, 666, 667, 668, 784, 0,
	669, 0, 670, 671, 672, 673, 674, 675, 677, 641,
	678, 683, 684, 785, 679, 680, 681, 682, 786, 686,
	687, 688, 689, 0, 690, 691, 0, 685, 676, 0,
	692, 693, 694, 695, 696, 697, 0, 698, 699, 0,
	700, 787, 788, 789, 790, 0, 712, 0, 701, 703,
	704, 705, 706, 791, 707, 792, 0, 708, 709, 710,
	711, 702, 713, 714, 0, 0, 715, 716, 717, 719,
	721, 722, 718, 720, 723, 0, 724, 0, 0, 725,
	726, 727, 793, 794, 795, 0, 729, 730, 728, 731,
	732, 735, 733, 734, 796, 736, 737, 738, 1693, 0,
	316, 0, 739, 740, 797, 741, 742, 743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 327,
	326, 328, 329, 330, 331, 0, 332, 333, 0, 0,
	0, 0, 0, 744, 0, 0, 0, 334, 0, 335,
	336, 337, 0, 338, 339, 340, 341, 342, 343, 344,
	745, 746, 0, 345, 747, 346, 748, 0, 749, 347,
	348, 349, 350, 351, 352, 353, 0, 0, 0, 354,
	750, 751, 752, 0, 355, 356, 753, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	0, 382, 383, 384, 0, 0, 0, 0, 0, 0,
	0, 385, 386, 387, 388, 389, 0, 390, 392, 754,
	755, 0, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 756, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 757, 758, 426, 0, 319, 0,
	0, 0, 0, 0, 427, 428, 429, 759, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	0, 436, 437, 438, 760, 761, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 762, 0, 763,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 764,
	765, 766, 552, 0, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 321, 320, 322, 0, 767, 469, 553, 470, 768,
	769, 0, 770, 0, 471, 472, 474, 0, 771, 0,
	473, 475, 476, 0, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 772, 488, 0, 490, 491, 0, 0, 492, 493,
	494, 495, 496, 497, 500, 0, 0, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 0, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 0, 545, 532, 0, 533,
	323, 0, 547, 548, 549, 550, 0, 773, 551, 774,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 0, 564, 0,
	776, 565, 566, 558, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 779, 585, 780, 586, 587,
	0, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 781, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 0, 627, 628, 629, 630, 631, 782, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 0, 658, 783, 659, 639, 640, 660,
	661, 0, 662, 663, 664, 665, 666, 667, 668, 784,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 785, 679, 680, 681, 682, 786,
	686, 687, 688, 689, 0, 690, 691, 0, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 787, 788, 789, 790, 0, 712, 0, 701,
	703, 704, 705, 706, 791, 707, 792, 0, 708, 709,
	710, 711, 702, 713, 714, 0, 0, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 0, 724, 0, 0,
	725, 726, 727, 793, 794, 795, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 1509,
	0, 316, 0, 739, 740, 797, 741, 742, 743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 744, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 745, 746, 0, 345, 747, 346, 748, 0, 749,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 750, 751, 752, 0, 355, 356, 753, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	754, 755, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 756, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 757, 758, 426, 0, 319,
	0, 0, 0, 0, 0, 427, 428, 429, 759, 0,
	0, 0, 430, 0, 431, 432, 433, 0, 434, 435,
	0, 0, 436, 437, 438, 760, 761, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 762, 0,
	763, 449, 0, 450, 451, 452, 453, 454, 455, 456,
	1508, 765, 766, 552, 0, 457, 458, 459, 0, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 0, 321, 320, 322, 0, 767, 469, 553, 470,
	768, 769, 0, 770, 0, 471, 472, 474, 0, 771,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 772, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 0, 545, 532, 0,
	533, 323, 0, 547, 548, 549, 550, 0, 773, 551,
	774, 554, 555, 0, 0, 556, 0, 557, 0, 0,
	559, 560, 561, 0, 0, 562, 563, 775, 0, 564,
	0, 776, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 0, 577, 578, 777, 579,
	580, 581, 778, 582, 583, 584, 779, 585, 780, 586,
	587, 0, 588, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 781, 599, 600, 602, 601, 603,
	0, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 609, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 0, 623, 624, 622,
	625, 626, 0, 627, 628, 629, 630, 631, 782, 632,
	0, 633, 634, 642, 643, 644, 635, 636, 638, 645,
	637, 646, 647, 648, 649, 651, 650, 0, 653, 654,
	652, 655, 656, 657, 0, 658, 783, 659, 639, 640,
	660, 661, 0, 662, 663, 664, 665, 666, 667, 668,
	784, 0, 669, 0, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 785, 679, 680, 681, 682,
	786, 686, 687, 688, 689, 0, 690, 691, 0, 685,
	676, 0, 692, 693, 694, 695, 696, 697, 0, 698,
	699, 0, 700, 787, 788, 789, 790, 0, 712, 0,
	701, 703, 704, 705, 706, 791, 707, 792, 0, 708,
	709, 710, 711, 702, 713, 714, 0, 0, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 0, 724, 0,
	0, 725, 726, 727, 793, 794, 795, 0, 729, 730,
	728, 731, 732, 735, 733, 734, 796, 736, 737, 738,
	1498, 0, 316, 0, 739, 740, 797, 741, 742, 743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 0, 744, 0, 0, 0, 334,
	0, 335, 336, 337, 0, 338, 339, 340, 341, 342,
	343, 344, 745, 746, 0, 345, 747, 346, 748, 0,
	749, 347, 348, 349, 350, 351, 352, 353, 0, 0,
	0, 354, 750, 751, 752, 0, 355, 356, 753, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 0, 382, 383, 384, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 387, 388, 389, 0, 390,
	392, 754, 755, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 756, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 757, 758, 426, 0,
	319, 0, 0, 0, 0, 0, 427, 428, 429, 759,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 0, 436, 437, 438, 760, 761, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 762,
	0, 763, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 1497, 765, 766, 552, 0, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 321, 320, 322, 0, 767, 469, 553,
	470, 768, 769, 0, 770, 0, 471, 472, 474, 0,
	771, 0, 473, 475, 476, 0, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 772, 488, 0, 490, 491, 0, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 0,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 0, 545, 532,
	0, 533, 323, 0, 547, 548, 549, 550, 0, 773,
	551, 774, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 0,
	564, 0, 776, 565, 566, 558, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 779, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 781, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 0, 627, 628, 629, 630, 631, 782,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 0, 658, 783, 659, 639,
	640, 660, 661, 0, 662, 663, 664, 665, 666, 667,
	668, 784, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 785, 679, 680, 681,
	682, 786, 686, 687, 688, 689, 0, 690, 691, 0,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 787, 788, 789, 790, 0, 712,
	0, 701, 703, 704, 705, 706, 791, 707, 792, 0,
	708, 709, 710, 711, 702, 713, 714, 0, 0, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 0, 724,
	0, 0, 725, 726, 727, 793, 794, 795, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 1494, 0, 316, 0, 739, 740, 797, 741, 742,
	743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 745, 746, 0, 345, 747, 346, 748,
	0, 749, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 750, 751, 752, 0, 355, 356, 753,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 754, 755, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 756, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 757, 758, 426,
	0, 319, 0, 0, 0, 0, 0, 427, 428, 429,
	759, 0, 0, 0, 430, 0, 431, 432, 433, 0,
	434, 435, 0, 0, 436, 437, 438, 760, 761, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	762, 0, 763, 449, 0, 450, 451, 452, 453, 454,
	455, 456, 1493, 765, 766, 552, 0, 457, 458, 459,
	0, 460, 461, 462, 463, 464, 0, 0, 0, 465,
	466, 467, 468, 0, 321, 320, 322, 0, 767, 469,
	553, 470, 768, 769, 0, 770, 0, 471, 472, 474,
	0, 771, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 772, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 539, 541, 542, 537,
	538, 540, 543, 544, 546, 534, 535, 536, 0, 545,
	532, 0, 533, 323, 0, 547, 548, 549, 550, 0,
	773, 551, 774, 554, 555, 0, 0, 556, 0, 557,
	0, 0, 559, 560, 561, 0, 0, 562, 563, 775,
	0, 564, 0, 776, 565, 566, 558, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 0, 577, 578,
	777, 579, 580, 581, 778, 582, 583, 584, 779, 585,
	780, 586, 587, 0, 588, 589, 590, 0, 591, 592,
	593, 594, 595, 596, 597, 598, 781, 599, 600, 602,
	601, 603, 0, 604, 0, 605, 606, 607, 0, 0,
	0, 0, 0, 608, 609, 611, 0, 612, 613, 614,
	615, 610, 616, 617, 618, 619, 620, 621, 0, 623,
	624, 622, 625, 626, 0, 627, 628, 629, 630, 631,
	782, 632, 0, 633, 634, 642, 643, 644, 635, 636,
	638, 645, 637, 646, 647, 648, 649, 651, 650, 0,
	653, 654, 652, 655, 656, 657, 0, 658, 783, 659,
	639, 640, 660, 661, 0, 662, 663, 664, 665, 666,
	667, 668, 784, 0, 669, 0, 670, 671, 672, 673,
	674, 675, 677, 641, 678, 683, 684, 785, 679, 680,
	681, 682, 786, 686, 687, 688, 689, 0, 690, 691,
	0, 685, 676, 0, 692, 693, 694, 695, 696, 697,
	0, 698, 699, 0, 700, 787, 788, 789, 790, 0,
	712, 0, 701, 703, 704, 705, 706, 791, 707, 792,
	0, 708, 709, 710, 711, 702, 713, 714, 0, 0,
	715, 716, 717, 719, 721, 722, 718, 720, 723, 0,
	724, 0, 0, 725, 726, 727, 793, 794, 795, 0,
	729, 730, 728, 731, 732, 735, 733, 734, 796, 736,
	737, 738, 1488, 0, 316, 0, 739, 740, 797, 741,
	742, 743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 327, 326, 328, 329, 330, 331, 0,
	332, 333, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 334, 0, 335, 336, 337, 0, 338, 339, 340,
	341, 342, 343, 344, 745, 746, 0, 345, 747, 346,
	748, 0, 749, 347, 348, 349, 350, 351, 352, 353,
	0, 0, 0, 354, 750, 751, 752, 0, 355, 356,
	753, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 0, 382, 383, 384, 0, 0,
	0, 0, 0, 0, 0, 385, 386, 387, 388, 389,
	0, 390, 392, 754, 755, 0, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 756, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 757, 758,
	426, 0, 319, 0, 0, 0, 0, 0, 427, 428,
	429, 759, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 0, 436, 437, 438, 760, 761,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 762, 0, 763, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 1487, 765, 766, 552, 0, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 321, 320, 322, 0, 767,
	469, 553, 470, 768, 769, 0, 770, 0, 471, 472,
	474, 0, 771, 0, 473, 475, 476, 0, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 772, 488, 0, 490, 491,
	0, 0, 492, 493, 494, 495, 496, 497, 500, 0,
	0, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 0, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 0,
	545, 532, 0, 533, 323, 0, 547, 548, 549, 550,
	0, 773, 551, 774, 554, 555, 0, 0, 556, 0,
	557, 0, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 0, 564, 0, 776, 565, 566, 558, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 779,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 781, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 0, 627, 628, 629, 630,
	631, 782, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 0, 658, 783,
	659, 639, 640, 660, 661, 0, 662, 663, 664, 665,
	666, 667, 668, 784, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 785, 679,
	680, 681, 682, 786, 686, 687, 688, 689, 0, 690,
	691, 0, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 787, 788, 789, 790,
	0, 712, 0, 701, 703, 704, 705, 706, 791, 707,
	792, 0, 708, 709, 710, 711, 702, 713, 714, 0,
	0, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	0, 724, 0, 0, 725, 726, 727, 793, 794, 795,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 1465, 0, 316, 0, 739, 740, 797,
	741, 742, 743, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 744, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 745, 746, 0, 345, 747,
	346, 748, 0, 749, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 750, 751, 752, 0, 355,
	356, 753, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 754, 755, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 756, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 757,
	758, 426, 0, 319, 0, 0, 0, 0, 0, 427,
	428, 429, 759, 0, 0, 0, 430, 0, 431, 432,
	433, 0, 434, 435, 0, 0, 436, 437, 438, 760,
	761, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 762, 0, 763, 449, 0, 450, 451, 452,
	453, 454, 455, 456, 1464, 765, 766, 552, 0, 457,
	458, 459, 0, 460, 461, 462, 463, 464, 0, 0,
	0, 465, 466, 467, 468, 0, 321, 320, 322, 0,
	767, 469, 553, 470, 768, 769, 0, 770, 0, 471,
	472, 474, 0, 771, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 772, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 539, 541,
	542, 537, 538, 540, 543, 544, 546, 534, 535, 536,
	0, 545, 532, 0, 533, 323, 0, 547, 548, 549,
	550, 0, 773, 551, 774, 554, 555, 0, 0, 556,
	0, 557, 0, 0, 559, 560, 561, 0, 0, 562,
	563, 775, 0, 564, 0, 776, 565, 566, 558, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 0,
	577, 578, 777, 579, 580, 581, 778, 582, 583, 584,
	779, 585, 780, 586, 587, 0, 588, 589, 590, 0,
	591, 592, 593, 594, 595, 596, 597, 598, 781, 599,
	600, 602, 601, 603, 0, 604, 0, 605, 606, 607,
	0, 0, 0, 0, 0, 608, 609, 611, 0, 612,
	613, 614, 615, 610, 616, 617, 618, 619, 620, 621,
	0, 623, 624, 622, 625, 626, 0, 627, 628, 629,
	630, 631, 782, 632, 0, 633, 634, 642, 643, 644,
	635, 636, 638, 645, 637, 646, 647, 648, 649, 651,
	650, 0, 653, 654, 652, 655, 656, 657, 0, 658,
	783, 659, 639, 640, 660, 661, 0, 662, 663, 664,
	665, 666, 667, 668, 784, 0, 669, 0, 670, 671,
	672, 673, 674, 675, 677, 641, 678, 683, 684, 785,
	679, 680, 681, 682, 786, 686, 687, 688, 689, 0,
	690, 691, 0, 685, 676, 0, 692, 693, 694, 695,
	696, 697, 0, 698, 699, 0, 700, 787, 788, 789,
	790, 0, 712, 0, 701, 703, 704, 705, 706, 791,
	707, 792, 0, 708, 709, 710, 711, 702, 713, 714,
	0, 0, 715, 716, 717, 719, 721, 722, 718, 720,
	723, 0, 724, 0, 0, 725, 726, 727, 793, 794,
	795, 0, 729, 730, 728, 731, 732, 735, 733, 734,
	796, 736, 737, 738, 799, 0, 316, 0, 739, 740,
	797, 741, 742, 743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 327, 326, 328, 329, 330,
	331, 0, 332, 333, 0, 0, 0, 0, 0, 744,
	0, 0, 0, 334, 0, 335, 336, 337, 0, 338,
	339, 340, 341, 342, 343, 344, 745, 746, 0, 345,
	747, 346, 748, 0, 749, 347, 348, 349, 350, 351,
	352, 353, 0, 0, 0, 354, 750, 751, 752, 0,
	355, 356, 753, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 0, 382, 383, 384,
	0, 0, 0, 0, 0, 0, 0, 385, 386, 387,
	388, 389, 0, 390, 392, 754, 755, 0, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 756, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	757, 758, 426, 0, 319, 0, 0, 0, 0, 0,
	427, 428, 429, 759, 0, 0, 0, 430, 0, 431,
	432, 433, 0, 434, 435, 0, 0, 436, 437, 438,
	760, 761, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 762, 0, 763, 449, 0, 450, 451,
	452, 453, 454, 455, 456, 764, 765, 766, 552, 0,
	457, 458, 459, 0, 460, 461, 462, 463, 464, 0,
	0, 0, 465, 466, 467, 468, 0, 321, 320, 322,
	0, 767, 469, 553, 470, 768, 769, 0, 770, 0,
	471, 472, 474, 0, 771, 0, 473, 475, 476, 0,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 772, 488, 0,
	490, 491, 0, 0, 492, 493, 494, 495, 496, 497,
	500, 0, 0, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 0, 527, 528, 529, 530, 531, 539,
	541, 542, 537, 538, 540, 543, 544, 546, 534, 535,
	536, 0, 545, 532, 0, 533, 323, 0, 547, 548,
	549, 550, 0, 773, 551, 774, 554, 555, 0, 0,
	556, 0, 557, 0, 0, 559, 560, 561, 0, 0,
	562, 563, 775, 0, 564, 0, 776, 565, 566, 558,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	0, 577, 578, 777, 579, 580, 581, 778, 582, 583,
	584, 779, 585, 780, 586, 587, 0, 588, 589, 590,
	0, 591, 592, 593, 594, 595, 596, 597, 598, 781,
	599, 600, 602, 601, 603, 0, 604, 0, 605, 606,
	607, 0, 0, 0, 0, 0, 608, 609, 611, 0,
	612, 613, 614, 615, 610, 616, 617, 618, 619, 620,
	621, 0, 623, 624, 622, 625, 626, 0, 627, 628,
	629, 630, 631, 782, 632, 0, 633, 634, 642, 643,
	644, 635, 636, 638, 645, 637, 646, 647, 648, 649,
	651, 650, 0, 653, 654, 652, 655, 656, 657, 0,
	658, 783, 659, 639, 640, 660, 661, 0, 662, 663,
	664, 665, 666, 667, 668, 784, 0, 669, 0, 670,
	671, 672, 673, 674, 675, 677, 641, 678, 683, 684,
	785, 679, 680, 681, 682, 786, 686, 687, 688, 689,
	0, 690, 691, 0, 685, 676, 0, 692, 693, 694,
	695, 696, 697, 0, 698, 699, 0, 700, 787, 788,
	789, 790, 0, 712, 0, 701, 703, 704, 705, 706,
	791, 707, 792, 0, 708, 709, 710, 711, 702, 713,
	714, 0, 0, 715, 716, 717, 719, 721, 722, 718,
	720, 723, 0, 724, 0, 0, 725, 726, 727, 793,
	794, 795, 0, 729, 730, 728, 731, 732, 735, 733,
	734, 796, 736, 737, 738, 307, 0, 316, 0, 739,
	740, 797, 741, 742, 743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	744, 0, 0, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 745, 746, 0,
	345, 747, 346, 748, 0, 749, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 750, 751, 752,
	0, 355, 356, 753, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 0, 390, 392, 754, 755, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 756, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 757, 758, 426, 0, 319, 0, 0, 0, 0,
	0, 427, 428, 429, 759, 0, 0, 0, 430, 0,
	431, 432, 433, 0, 434, 435, 0, 0, 436, 437,
	438, 760, 761, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 762, 0, 763, 449, 0, 450,
	451, 452, 453, 454, 455, 456, 764, 765, 766, 552,
	0, 457, 458, 459, 0, 460, 461, 462, 463, 464,
	0, 0, 0, 465, 466, 467, 468, 0, 321, 320,
	322, 0, 767, 469, 553, 470, 768, 769, 0, 770,
	0, 471, 472, 474, 0, 771, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 772, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	539, 541, 542, 537, 538, 540, 543, 544, 546, 534,
	535, 536, 0, 545, 532, 0, 533, 323, 0, 547,
	548, 549, 550, 0, 773, 551, 774, 554, 555, 0,
	0, 556, 0, 557, 0, 0, 559, 560, 561, 0,
	0, 562, 563, 775, 0, 564, 0, 776, 565, 566,
	558, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 0, 577, 578, 777, 579, 580, 581, 778, 582,
	583, 584, 779, 585, 780, 586, 587, 0, 588, 589,
	590, 0, 591, 592, 593, 594, 595, 596, 597, 598,
	781, 599, 600, 602, 601, 603, 0, 604, 0, 605,
	606, 607, 0, 0, 0, 0, 0, 608, 609, 611,
	0, 612, 613, 614, 615, 610, 616, 617, 618, 619,
	620, 621, 0, 623, 624, 622, 625, 626, 0, 627,
	628, 629, 630, 631, 782, 632, 0, 633, 634, 642,
	643, 644, 635, 636, 638, 645, 637, 646, 647, 648,
	649, 651, 650, 0, 653, 654, 652, 655, 656, 657,
	0, 658, 783, 659, 639, 640, 660, 661, 0, 662,
	663, 664, 665, 666, 667, 668, 784, 0, 669, 0,
	670, 671, 672, 673, 674, 675, 677, 641, 678, 683,
	684, 785, 679, 680, 681, 682, 786, 686, 687, 688,
	689, 0, 690, 691, 0, 685, 676, 0, 692, 693,
	694, 695, 696, 697, 0, 698, 699, 0, 700, 787,
	788, 789, 790, 0, 712, 0, 701, 703, 704, 705,
	706, 791, 707, 792, 0, 708, 709, 710, 711, 702,
	713, 714, 0, 0, 715, 716, 717, 719, 721, 722,
	718, 720, 723, 0, 724, 0, 0, 725, 726, 727,
	793, 794, 795, 0, 729, 730, 728, 731, 732, 735,
	733, 734, 796, 736, 737, 738, 316, 0, 0, 0,
	739, 740, 797, 741, 742, 743, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 327, 326, 328, 329, 330,
	331, 0, 332, 333, 0, 0, 0, 0, 0, 744,
	0, 0, 0, 334, 0, 335, 336, 337, 0, 338,
	339, 340, 341, 342, 343, 344, 745, 746, 0, 345,
	747, 346, 748, 0, 749, 347, 348, 349, 350, 351,
	352, 353, 0, 0, 0, 354, 750, 751, 752, 0,
	355, 356, 753, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 0, 382, 383, 384,
	0, 0, 0, 0, 0, 0, 0, 385, 386, 387,
	388, 389, 0, 390, 392, 754, 755, 0, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 756, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	757, 758, 426, 0, 319, 0, 0, 0, 0, 0,
	427, 428, 429, 759, 0, 0, 0, 430, 0, 431,
	432, 433, 0, 434, 435, 0, 0, 436, 437, 438,
	760, 761, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 762, 0, 763, 449, 0, 450, 451,
	452, 453, 454, 455, 456, 764, 765, 766, 552, 0,
	457, 458, 459, 0, 460, 461, 462, 463, 464, 0,
	0, 0, 465, 466, 467, 468, 0, 321, 320, 322,
	0, 767, 469, 553, 470, 768, 769, 0, 770, 0,
	471, 472, 474, 0, 771, 0, 473, 475, 476, 0,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 772, 488, 0,
	490, 491, 0, 0, 492, 493, 494, 495, 496, 497,
	500, 0, 0, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 0, 527, 528, 529, 530, 531, 539,
	541, 542, 537, 538, 540, 543, 544, 546, 534, 535,
	536, 0, 545, 532, 0, 533, 323, 0, 547, 548,
	549, 550, 0, 773, 551, 774, 554, 555, 0, 0,
	556, 0, 557, 0, 0, 559, 560, 561, 0, 0,
	562, 563, 775, 0, 564, 0, 776, 565, 566, 558,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	0, 577, 578, 777, 579, 580, 581, 778, 582, 583,
	584, 779, 585, 780, 586, 587, 0, 588, 589, 590,
	0, 591, 592, 593, 594, 595, 596, 597, 598, 781,
	599, 600, 602, 601, 603, 0, 604, 0, 605, 606,
	607, 0, 0, 0, 0, 0, 608, 609, 611, 0,
	612, 613, 614, 615, 610, 616, 617, 618, 619, 620,
	621, 0, 623, 624, 622, 625, 626, 0, 627, 628,
	629, 630, 631, 782, 632, 0, 633, 634, 642, 643,
	644, 635, 636, 638, 645, 637, 646, 647, 648, 649,
	651, 650, 0, 653, 654, 652, 655, 656, 657, 0,
	658, 783, 659, 639, 640, 660, 661, 0, 662, 663,
	664, 665, 666, 667, 668, 784, 0, 669, 0, 670,
	671, 672, 673, 674, 675, 677, 641, 678, 683, 684,
	785, 679, 680, 681, 682, 786, 686, 687, 688, 689,
	0, 690, 691, 0, 685, 676, 0, 692, 693, 694,
	695, 696, 697, 0, 698, 699, 0, 700, 787, 788,
	789, 790, 0, 712, 0, 701, 703, 704, 705, 706,
	791, 707, 792, 0, 708, 709, 710, 711, 702, 713,
	714, 0, 0, 715, 716, 717, 719, 721, 722, 718,
	720, 723, 0, 724, 0, 0, 725, 726, 727, 793,
	794, 795, 0, 729, 730, 728, 731, 732, 735, 733,
	734, 796, 736, 737, 738, 316, 0, 0, 0, 739,
	740, 797, 741, 742, 743, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 744, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 745, 746, 0, 345, 747,
	346, 748, 0, 749, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 750, 751, 752, 0, 355,
	356, 753, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 2716,
	389, 0, 390, 392, 754, 755, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 756, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 757,
	758, 426, 0, 319, 0, 0, 0, 0, 0, 427,
	428, 429, 759, 0, 0, 0, 430, 0, 431, 432,
	433, 0, 434, 435, 0, 0, 436, 437, 438, 760,
	761, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 762, 0, 763, 449, 0, 450, 451, 452,
	453, 454, 455, 456, 764, 765, 766, 552, 0, 457,
	458, 459, 0, 460, 461, 462, 463, 464, 0, 0,
	0, 465, 466, 467, 468, 0, 321, 320, 322, 0,
	767, 469, 553, 470, 768, 769, 0, 770, 0, 471,
	472, 474, 0, 771, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 772, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 539, 541,
	542, 537, 538, 540, 543, 544, 546, 534, 535, 536,
	0, 545, 532, 0, 533, 323, 0, 547, 548, 549,
	550, 0, 773, 551, 774, 554, 555, 0, 0, 556,
	0, 557, 0, 0, 559, 560, 561, 0, 0, 562,
	563, 775, 0, 564, 0, 776, 565, 566, 558, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 0,
	577, 578, 777, 579, 580, 581, 778, 582, 583, 584,
	779, 585, 780, 586, 587, 0, 588, 589, 590, 0,
	591, 592, 593, 594, 595, 596, 597, 598, 781, 599,
	600, 602, 601, 603, 0, 604, 0, 605, 606, 607,
	0, 0, 0, 0, 0, 608, 609, 611, 0, 612,
	613, 614, 615, 610, 616, 617, 618, 619, 620, 621,
	0, 623, 624, 622, 625, 626, 0, 627, 628, 629,
	630, 631, 782, 632, 0, 633, 634, 642, 643, 644,
	635, 636, 638, 645, 637, 646, 647, 648, 649, 651,
	650, 0, 653, 654, 652, 655, 656, 657, 0, 658,
	783, 659, 639, 640, 660, 661, 0, 662, 663, 664,
	665, 666, 667, 668, 784, 0, 669, 0, 670, 671,
	672, 673, 674, 675, 677, 641, 678, 683, 684, 785,
	679, 680, 681, 682, 786, 686, 687, 688, 689, 0,
	690, 691, 0, 685, 676, 0, 692, 693, 694, 695,
	696, 697, 0, 698, 699, 0, 700, 787, 788, 789,
	790, 0, 712, 0, 701, 703, 704, 705, 706, 791,
	707, 792, 0, 708, 709, 710, 711, 702, 713, 714,
	0, 0, 715, 716, 717, 719, 721, 722, 718, 720,
	723, 0, 724, 0, 0, 725, 726, 727, 793, 794,
	795, 0, 729, 730, 728, 731, 732, 735, 733, 734,
	796, 736, 737, 738, 316, 0, 0, 0, 739, 740,
	797, 741, 742, 743, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 327, 326, 328, 329, 330, 331, 0,
	332, 333, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 334, 0, 335, 336, 337, 0, 338, 339, 340,
	341, 342, 343, 344, 745, 746, 0, 345, 747, 346,
	748, 0, 749, 347, 348, 349, 350, 351, 352, 353,
	0, 0, 0, 354, 750, 751, 752, 0, 355, 356,
	753, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 0, 382, 383, 384, 0, 0,
	0, 0, 0, 0, 0, 385, 386, 387, 2714, 389,
	0, 390, 392, 754, 755, 0, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 756, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 757, 758,
	426, 0, 319, 0, 0, 0, 0, 0, 427, 428,
	429, 759, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 0, 436, 437, 438, 760, 761,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 762, 0, 763, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 764, 765, 766, 552, 0, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 321, 320, 322, 0, 767,
	469, 553, 470, 768, 769, 0, 770, 0, 471, 472,
	474, 0, 771, 0, 473, 475, 476, 0, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 772, 488, 0, 490, 491,
	0, 0, 492, 493, 494, 495, 496, 497, 500, 0,
	0, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 0, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 0,
	545, 532, 0, 533, 323, 0, 547, 548, 549, 550,
	0, 773, 551, 774, 554, 555, 0, 0, 556, 0,
	557, 0, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 0, 564, 0, 776, 565, 566, 558, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 779,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 781, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 0, 627, 628, 629, 630,
	631, 782, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 0, 658, 783,
	659, 639, 640, 660, 661, 0, 662, 663, 664, 665,
	666, 667, 668, 784, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 785, 679,
	680, 681, 682, 786, 686, 687, 688, 689, 0, 690,
	691, 0, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 787, 788, 789, 790,
	0, 712, 0, 701, 703, 704, 705, 706, 791, 707,
	792, 0, 708, 709, 710, 711, 702, 713, 714, 0,
	0, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	0, 724, 0, 0, 725, 726, 727, 793, 794, 795,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 316, 0, 0, 0, 739, 740, 797,
	741, 742, 743, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 745, 746, 0, 345, 747, 346, 748,
	0, 749, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 750, 751, 752, 0, 355, 356, 753,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 2712, 389, 0,
	390, 392, 754, 755, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 756, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 757, 758, 426,
	0, 319, 0, 0, 0, 0, 0, 427, 428, 429,
	759, 0, 0, 0, 430, 0, 431, 432, 433, 0,
	434, 435, 0, 0, 436, 437, 438, 760, 761, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	762, 0, 763, 449, 0, 450, 451, 452, 453, 454,
	455, 456, 764, 765, 766, 552, 0, 457, 458, 459,
	0, 460, 461, 462, 463, 464, 0, 0, 0, 465,
	466, 467, 468, 0, 321, 320, 322, 0, 767, 469,
	553, 470, 768, 769, 0, 770, 0, 471, 472, 474,
	0, 771, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 772, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 539, 541, 542, 537,
	538, 540, 543, 544, 546, 534, 535, 536, 0, 545,
	532, 0, 533, 323, 0, 547, 548, 549, 550, 0,
	773, 551, 774, 554, 555, 0, 0, 556, 0, 557,
	0, 0, 559, 560, 561, 0, 0, 562, 563, 775,
	0, 564, 0, 776, 565, 566, 558, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 0, 577, 578,
	777, 579, 580, 581, 778, 582, 583, 584, 779, 585,
	780, 586, 587, 0, 588, 589, 590, 0, 591, 592,
	593, 594, 595, 596, 597, 598, 781, 599, 600, 602,
	601, 603, 0, 604, 0, 605, 606, 607, 0, 0,
	0, 0, 0, 608, 609, 611, 0, 612, 613, 614,
	615, 610, 616, 617, 618, 619, 620, 621, 0, 623,
	624, 622, 625, 626, 0, 627, 628, 629, 630, 631,
	782, 632, 0, 633, 634, 642, 643, 644, 635, 636,
	638, 645, 637, 646, 647, 648, 649, 651, 650, 0,
	653, 654, 652, 655, 656, 657, 0, 658, 783, 659,
	639, 640, 660, 661, 0, 662, 663, 664, 665, 666,
	667, 668, 784, 0, 669, 0, 670, 671, 672, 673,
	674, 675, 677, 641, 678, 683, 684, 785, 679, 680,
	681, 682, 786, 686, 687, 688, 689, 0, 690, 691,
	0, 685, 676, 0, 692, 693, 694, 695, 696, 697,
	0, 698, 699, 0, 700, 787, 788, 789, 790, 0,
	712, 0, 701, 703, 704, 705, 706, 791, 707, 792,
	0, 708, 709, 710, 711, 702, 713, 714, 0, 0,
	715, 716, 717, 719, 721, 722, 718, 720, 723, 0,
	724, 0, 0, 725, 726, 727, 793, 794, 795, 0,
	729, 730, 728, 731, 732, 735, 733, 734, 796, 736,
	737, 738, 316, 0, 0, 0, 739, 740, 797, 741,
	742, 743, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 0, 744, 0, 0, 0, 334,
	0, 335, 336, 337, 0, 338, 339, 340, 341, 342,
	343, 344, 745, 746, 0, 345, 747, 346, 748, 0,
	749, 347, 348, 349, 350, 351, 352, 353, 0, 0,
	0, 354, 750, 751, 752, 0, 355, 356, 753, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 0, 382, 383, 384, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 387, 388, 389, 0, 390,
	392, 754, 755, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 756, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 757, 758, 426, 0,
	319, 0, 0, 0, 0, 0, 427, 428, 429, 759,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 0, 436, 437, 438, 760, 761, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 762,
	0, 763, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 2624, 765, 766, 552, 0, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 321, 320, 322, 0, 767, 469, 553,
	470, 768, 769, 0, 770, 0, 471, 472, 474, 0,
	771, 0, 473, 475, 476, 0, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 772, 488, 0, 490, 491, 0, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 0,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 0, 545, 532,
	0, 533, 323, 0, 547, 548, 549, 550, 0, 773,
	551, 774, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 0,
	564, 0, 776, 565, 566, 558, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 779, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 781, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 0, 627, 628, 629, 630, 631, 782,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 0, 658, 783, 659, 639,
	640, 660, 661, 0, 662, 663, 664, 665, 666, 667,
	668, 784, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 785, 679, 680, 681,
	682, 786, 686, 687, 688, 689, 0, 690, 691, 0,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 787, 788, 789, 790, 0, 712,
	0, 701, 703, 704, 705, 706, 791, 707, 792, 0,
	708, 709, 710, 711, 702, 713, 714, 0, 0, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 0, 724,
	0, 0, 725, 726, 727, 793, 794, 795, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 316, 0, 0, 0, 739, 740, 797, 741, 742,
	743, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 744, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 745, 746, 0, 345, 747, 346, 748, 0, 749,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 750, 751, 752, 0, 355, 356, 753, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	754, 755, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 756, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 757, 758, 426, 0, 319,
	0, 0, 0, 0, 0, 427, 428, 429, 759, 0,
	0, 0, 430, 0, 431, 432, 433, 0, 434, 435,
	0, 0, 436, 437, 438, 760, 761, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 762, 0,
	763, 449, 0, 450, 451, 452, 453, 454, 455, 456,
	2347, 765, 766, 552, 0, 457, 458, 459, 0, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 0, 321, 320, 322, 0, 767, 469, 553, 470,
	768, 769, 0, 770, 0, 471, 472, 474, 0, 771,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 772, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 0, 545, 532, 0,
	533, 323, 0, 547, 548, 549, 550, 0, 773, 551,
	774, 554, 555, 0, 0, 556, 0, 557, 0, 0,
	559, 560, 561, 0, 0, 562, 563, 775, 0, 564,
	0, 776, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 0, 577, 578, 777, 579,
	580, 581, 778, 582, 583, 584, 779, 585, 780, 586,
	587, 0, 588, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 781, 599, 600, 602, 601, 603,
	0, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 609, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 0, 623, 624, 622,
	625, 626, 0, 627, 628, 629, 630, 631, 782, 632,
	0, 633, 634, 642, 643, 644, 635, 636, 638, 645,
	637, 646, 647, 648, 649, 651, 650, 0, 653, 654,
	652, 655, 656, 657, 0, 658, 783, 659, 639, 640,
	660, 661, 0, 662, 663, 664, 665, 666, 667, 668,
	784, 0, 669, 0, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 785, 679, 680, 681, 682,
	786, 686, 687, 688, 689, 0, 690, 691, 0, 685,
	676, 0, 692, 693, 694, 695, 696, 697, 0, 698,
	699, 0, 700, 787, 788, 789, 790, 0, 712, 0,
	701, 703, 704, 705, 706, 791, 707, 792, 0, 708,
	709, 710, 711, 702, 713, 714, 0, 0, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 0, 724, 0,
	0, 725, 726, 727, 793, 794, 795, 0, 729, 730,
	728, 731, 732, 735, 733, 734, 796, 736, 737, 738,
	316, 0, 0, 0, 739, 740, 797, 741, 742, 743,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 327,
	326, 328, 329, 330, 331, 0, 332, 333, 0, 0,
	0, 0, 0, 744, 0, 0, 0, 334, 0, 335,
	336, 337, 0, 338, 339, 340, 341, 342, 343, 344,
	745, 746, 0, 345, 747, 346, 748, 0, 749, 347,
	348, 349, 350, 351, 352, 353, 0, 0, 0, 354,
	750, 751, 752, 0, 355, 356, 753, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	0, 382, 383, 384, 0, 0, 0, 0, 0, 0,
	0, 385, 386, 387, 388, 389, 0, 390, 392, 754,
	755, 0, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 756, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 757, 758, 426, 0, 319, 0,
	0, 0, 0, 0, 427, 428, 429, 759, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	0, 436, 437, 438, 760, 761, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 762, 0, 763,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 2341,
	765, 766, 552, 0, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 321, 320, 322, 0, 767, 469, 553, 470, 768,
	769, 0, 770, 0, 471, 472, 474, 0, 771, 0,
	473, 475, 476, 0, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 772, 488, 0, 490, 491, 0, 0, 492, 493,
	494, 495, 496, 497, 500, 0, 0, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 0, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 0, 545, 532, 0, 533,
	323, 0, 547, 548, 549, 550, 0, 773, 551, 774,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 0, 564, 0,
	776, 565, 566, 558, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 779, 585, 780, 586, 587,
	0, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 781, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 0, 627, 628, 629, 630, 631, 782, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 0, 658, 783, 659, 639, 640, 660,
	661, 0, 662, 663, 664, 665, 666, 667, 668, 784,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 785, 679, 680, 681, 682, 786,
	686, 687, 688, 689, 0, 690, 691, 0, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 787, 788, 789, 790, 0, 712, 0, 701,
	703, 704, 705, 706, 791, 707, 792, 0, 708, 709,
	710, 711, 702, 713, 714, 0, 0, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 0, 724, 0, 0,
	725, 726, 727, 793, 794, 795, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 832,
	0, 316, 0, 739, 740, 797, 741, 742, 743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 830, 330, 331, 819, 332, 333, 0,
	0, 0, 0, 0, 744, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 745, 746, 0, 345, 747, 346, 748, 0, 749,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 750, 751, 752, 0, 355, 356, 753, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 822, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	754, 755, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 756, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 757, 758, 426, 0, 0,
	0, 0, 0, 0, 0, 427, 428, 429, 759, 0,
	0, 0, 430, 0, 431, 432, 433, 0, 434, 435,
	0, 0, 436, 437, 438, 760, 761, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 828, 448, 762, 0,
	763, 449, 0, 450, 451, 452, 453, 454, 455, 456,
	764, 765, 766, 552, 0, 457, 458, 459, 0, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 0, 0, 0, 0, 0, 767, 469, 553, 470,
	768, 769, 0, 770, 0, 471, 472, 474, 0, 771,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 772, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 0, 545, 532, 0,
	533, 0, 0, 547, 548, 549, 550, 0, 773, 551,
	774, 554, 555, 0, 0, 556, 0, 557, 0, 0,
	559, 560, 561, 0, 0, 562, 563, 775, 0, 564,
	0, 776, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 0, 577, 578, 777, 579,
	580, 581, 778, 582, 583, 584, 779, 585, 780, 586,
	587, 0, 588, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 781, 599, 600, 602, 601, 603,
	0, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 609, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 0, 623, 624, 622,
	625, 626, 0, 627, 628, 629, 630, 631, 782, 632,
	0, 633, 634, 642, 643, 644, 635, 636, 638, 645,
	637, 646, 647, 648, 649, 651, 650, 824, 653, 654,
	652, 655, 656, 657, 0, 658, 783, 659, 639, 640,
	660, 661, 0, 662, 663, 664, 665, 666, 667, 668,
	784, 0, 669, 0, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 785, 679, 680, 681, 682,
	786, 686, 687, 688, 689, 0, 690, 831, 0, 685,
	676, 0, 692, 693, 694, 695, 696, 697, 0, 698,
	699, 0, 700, 787, 788, 789, 790, 0, 712, 0,
	701, 703, 704, 705, 706, 791, 707, 792, 0, 708,
	709, 710, 711, 702, 713, 714, 0, 0, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 0, 724, 0,
	0, 725, 726, 727, 793, 794, 795, 0, 729, 730,
	728, 731, 732, 735, 733, 734, 796, 736, 737, 738,
	818, 0, 316, 0, 739, 740, 797, 741, 742, 743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 819, 332, 333,
	0, 0, 0, 0, 0, 744, 0, 0, 0, 334,
	0, 335, 336, 337, 0, 338, 339, 340, 341, 342,
	343, 344, 745, 746, 0, 345, 747, 346, 748, 0,
	749, 347, 348, 349, 350, 351, 352, 353, 0, 0,
	0, 354, 750, 751, 752, 0, 355, 356, 753, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 822, 379,
	380, 381, 0, 382, 383, 384, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 387, 388, 389, 0, 390,
	392, 754, 755, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 756, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 757, 758, 426, 0,
	0, 0, 0, 0, 0, 0, 427, 428, 429, 759,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 0, 436, 437, 438, 760, 761, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 823, 448, 762,
	0, 763, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 764, 765, 766, 552, 0, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 0, 0, 0, 0, 767, 469, 553,
	470, 768, 769, 0, 770, 0, 471, 472, 474, 0,
	771, 0, 473, 475, 476, 0, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 772, 488, 0, 490, 491, 0, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 0,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 0, 545, 532,
	0, 533, 0, 0, 547, 548, 549, 550, 0, 773,
	551, 774, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 0,
	564, 0, 776, 565, 566, 558, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 779, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 781, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 0, 627, 628, 629, 630, 631, 782,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 824, 653,
	654, 652, 655, 656, 657, 0, 658, 783, 659, 639,
	640, 660, 661, 0, 662, 663, 664, 665, 666, 667,
	668, 784, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 785, 679, 680, 681,
	682, 786, 686, 687, 688, 689, 0, 690, 817, 0,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 787, 788, 789, 790, 0, 712,
	0, 701, 703, 704, 705, 706, 791, 707, 792, 0,
	708, 709, 710, 711, 702, 713, 714, 0, 0, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 0, 724,
	0, 0, 725, 726, 727, 793, 794, 795, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 316, 0, 0, 0, 739, 740, 797, 741, 742,
	743, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 819, 332, 333, 0,
	0, 0, 0, 0, 744, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 745, 746, 0, 345, 747, 346, 748, 0, 749,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 750, 751, 752, 0, 355, 356, 753, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 822, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	754, 755, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 756, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 757, 758, 426, 0, 0,
	0, 0, 0, 0, 0, 427, 428, 429, 759, 0,
	0, 0, 430, 0, 431, 432, 433, 0, 434, 435,
	0, 0, 436, 437, 438, 760, 761, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 823, 448, 762, 0,
	763, 449, 0, 450, 451, 452, 453, 454, 455, 456,
	764, 765, 766, 552, 0, 457, 458, 459, 0, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 0, 0, 0, 0, 0, 767, 469, 553, 470,
	768, 769, 0, 770, 0, 471, 472, 474, 0, 771,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 772, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 0, 545, 532, 0,
	533, 0, 0, 547, 548, 549, 550, 0, 773, 551,
	774, 554, 555, 0, 0, 556, 0, 557, 0, 0,
	559, 560, 561, 0, 0, 562, 563, 775, 0, 564,
	0, 776, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 0, 577, 578, 777, 579,
	580, 581, 778, 582, 583, 584, 779, 585, 780, 586,
	587, 0, 588, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 781, 599, 600, 602, 601, 603,
	0, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 609, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 0, 623, 624, 622,
	625, 626, 0, 627, 628, 629, 630, 631, 782, 632,
	0, 633, 634, 642, 643, 644, 635, 636, 638, 645,
	637, 646, 647, 648, 649, 651, 650, 824, 653, 654,
	652, 655, 656, 657, 0, 658, 783, 659, 639, 640,
	660, 661, 0, 662, 663, 664, 665, 666, 667, 668,
	784, 0, 669, 0, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 785, 679, 680, 681, 682,
	786, 686, 687, 688, 689, 0, 690, 691, 0, 685,
	676, 0, 692, 693, 694, 695, 696, 697, 0, 698,
	699, 0, 700, 787, 788, 789, 790, 0, 712, 0,
	701, 703, 704, 705, 706, 791, 707, 792, 0, 708,
	709, 710, 711, 702, 713, 714, 0, 0, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 0, 724, 0,
	0, 725, 726, 727, 793, 794, 795, 0, 729, 730,
	728, 731, 732, 735, 733, 734, 796, 736, 737, 738,
	316, 0, 0, 0, 739, 740, 797, 741, 742, 743,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 327,
	326, 328, 329, 330, 331, 819, 332, 333, 0, 0,
	0, 0, 0, 744, 0, 0, 0, 334, 0, 335,
	336, 337, 0, 338, 339, 340, 341, 342, 343, 344,
	745, 746, 0, 345, 747, 346, 748, 0, 749, 347,
	348, 349, 350, 351, 352, 353, 0, 0, 0, 354,
	750, 751, 752, 0, 355, 356, 753, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 822, 379, 380, 381,
	0, 382, 383, 384, 0, 0, 0, 0, 0, 0,
	0, 385, 386, 387, 388, 389, 0, 390, 392, 754,
	755, 0, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 756, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 757, 758, 426, 0, 0, 0,
	0, 0, 0, 0, 427, 428, 429, 759, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	0, 436, 437, 438, 760, 761, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 4601, 448, 762, 0, 763,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 764,
	765, 766, 552, 0, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 0, 0, 0, 0, 767, 469, 553, 470, 768,
	769, 0, 770, 0, 471, 472, 474, 0, 771, 0,
	473, 475, 476, 0, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 772, 488, 0, 490, 491, 0, 0, 492, 493,
	494, 495, 496, 497, 500, 0, 0, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 0, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 0, 545, 532, 0, 533,
	0, 0, 547, 548, 549, 550, 0, 773, 551, 774,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 0, 564, 0,
	776, 565, 566, 558, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 779, 585, 780, 586, 587,
	0, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 781, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 0, 627, 628, 629, 630, 631, 782, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 824, 653, 654, 652,
	655, 656, 657, 0, 658, 783, 659, 639, 640, 660,
	661, 0, 662, 663, 664, 665, 666, 667, 668, 784,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 785, 679, 680, 681, 682, 786,
	686, 687, 688, 689, 0, 690, 691, 0, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 787, 788, 789, 790, 0, 712, 0, 701,
	703, 704, 705, 706, 791, 707, 792, 0, 708, 709,
	710, 711, 702, 713, 714, 0, 0, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 0, 724, 0, 0,
	725, 726, 727, 793, 794, 795, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 316,
	0, 0, 0, 739, 740, 797, 741, 742, 743, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 819, 332, 333, 0, 0, 0,
	0, 0, 744, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 745,
	746, 0, 345, 747, 346, 748, 0, 749, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 750,
	751, 752, 0, 355, 356, 753, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 822, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 754, 755,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	756, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 757, 758, 426, 0, 0, 0, 0,
	0, 0, 0, 427, 428, 429, 759, 0, 0, 0,
	430, 0, 431, 432, 433, 0, 434, 435, 0, 0,
	436, 437, 438, 760, 761, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 823, 448, 762, 0, 763, 449,
	0, 450, 451, 452, 453, 454, 455, 456, 764, 765,
	766, 552, 0, 457, 458, 459, 0, 460, 461, 462,
	463, 464, 0, 0, 0, 465, 466, 467, 468, 0,
	0, 0, 0, 0, 767, 469, 553, 470, 768, 769,
	0, 770, 0, 471, 472, 474, 0, 771, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	772, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 539, 541, 542, 537, 538, 540, 543, 544,
	546, 534, 535, 536, 0, 545, 532, 0, 533, 0,
	0, 547, 548, 549, 550, 0, 773, 551, 774, 554,
	555, 0, 0, 556, 0, 557, 0, 0, 559, 560,
	561, 0, 0, 562, 563, 775, 0, 564, 0, 776,
	565, 566, 558, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 0, 577, 578, 777, 579, 580, 581,
	778, 582, 583, 584, 779, 585, 780, 586, 587, 0,
	588, 589, 590, 0, 591, 592, 593, 594, 595, 596,
	597, 598, 781, 599, 600, 602, 601, 603, 0, 604,
	0, 605, 606, 607, 0, 0, 0, 0, 0, 608,
	609, 611, 0, 612, 613, 614, 615, 610, 616, 617,
	618, 619, 620, 621, 0, 623, 624, 622, 625, 626,
	0, 627, 628, 629, 630, 631, 782, 632, 0, 633,
	634, 642, 643, 644, 635, 636, 638, 645, 637, 646,
	647, 648, 649, 651, 650, 824, 653, 654, 652, 655,
	656, 657, 0, 658, 783, 659, 639, 640, 660, 661,
	0, 662, 663, 664, 665, 666, 667, 668, 784, 0,
	669, 0, 670, 671, 672, 673, 674, 675, 677, 641,
	678, 683, 684, 785, 679, 680, 681, 682, 786, 686,
	687, 688, 689, 0, 690, 3222, 0, 685, 676, 0,
	692, 693, 694, 695, 696, 697, 0, 698, 699, 0,
	700, 787, 788, 789, 790, 0, 712, 0, 701, 703,
	704, 705, 706, 791, 707, 792, 0, 708, 709, 710,
	711, 702, 713, 714, 0, 0, 715, 716, 717, 719,
	721, 722, 718, 720, 723, 0, 724, 0, 0, 725,
	726, 727, 793, 794, 795, 0, 729, 730, 728, 731,
	732, 735, 733, 734, 796, 736, 737, 738, 316, 0,
	0, 0, 739, 740, 797, 741, 742, 743, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 327, 326, 328,
	329, 330, 331, 0, 332, 333, 0, 0, 0, 0,
	0, 744, 0, 0, 0, 334, 0, 335, 336, 337,
	0, 338, 339, 340, 341, 342, 343, 344, 745, 746,
	0, 345, 747, 346, 748, 0, 749, 347, 348, 349,
	350, 351, 352, 353, 0, 0, 0, 354, 750, 751,
	752, 0, 355, 356, 753, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 822, 379, 380, 381, 0, 382,
	383, 384, 0, 0, 0, 0, 0, 0, 0, 385,
	386, 387, 388, 389, 0, 390, 392, 754, 755, 0,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 756,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 757, 758, 426, 0, 0, 0, 0, 0,
	0, 0, 427, 428, 429, 759, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 0, 436,
	437, 438, 760, 761, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 823, 448, 762, 0, 763, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 764, 765, 766,
	552, 0, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 0,
	0, 0, 0, 767, 469, 553, 470, 768, 769, 0,
	770, 0, 471, 472, 474, 0, 771, 0, 473, 475,
	476, 0, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 772,
	488, 0, 490, 491, 0, 0, 492, 493, 494, 495,
	496, 497, 500, 0, 0, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 0, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 0, 545, 532, 0, 533, 0, 0,
	547, 548, 549, 550, 0, 773, 551, 774, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 0, 564, 0, 776, 565,
	566, 558, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 779, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 781, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 0,
	627, 628, 629, 630, 631, 782, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 824, 653, 654, 652, 655, 656,
	657, 0, 658, 783, 659, 639, 640, 660, 661, 0,
	662, 663, 664, 665, 666, 667, 668, 784, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 785, 679, 680, 681, 682, 786, 686, 687,
	688, 689, 0, 690, 691, 0, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	787, 788, 789, 790, 0, 712, 0, 701, 703, 704,
	705, 706, 791, 707, 792, 0, 708, 709, 710, 711,
	702, 713, 714, 0, 0, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 0, 724, 0, 0, 725, 726,
	727, 793, 794, 795, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 1048, 0, 316,
	0, 739, 740, 797, 741, 742, 743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 744, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 745,
	746, 0, 345, 747, 346, 748, 0, 749, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 750,
	751, 752, 0, 355, 356, 753, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 754, 755,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	756, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 757, 758, 426, 0, 0, 0, 0,
	0, 0, 0, 427, 428, 429, 759, 0, 0, 0,
	430, 0, 431, 432, 433, 0, 434, 435, 0, 0,
	436, 437, 438, 760, 761, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 762, 0, 763, 449,
	0, 450, 451, 452, 453, 454, 455, 456, 764, 765,
	766, 552, 0, 457, 458, 459, 0, 460, 461, 462,
	463, 464, 0, 0, 0, 465, 466, 467, 468, 0,
	0, 0, 0, 0, 767, 469, 553, 470, 768, 769,
	0, 770, 1047, 471, 472, 474, 0, 771, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	772, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 539, 541, 542, 537, 538, 540, 543, 544,
	546, 534, 535, 536, 0, 545, 532, 0, 533, 0,
	0, 547, 548, 549, 550, 0, 773, 551, 774, 554,
	555, 0, 0, 556, 0, 557, 0, 0, 559, 560,
	561, 0, 0, 562, 563, 775, 0, 564, 0, 776,
	565, 566, 558, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 0, 577, 578, 777, 579, 580, 581,
	778, 582, 583, 584, 779, 585, 780, 586, 587, 0,
	588, 589, 590, 0, 591, 592, 593, 594, 595, 596,
	597, 598, 781, 599, 600, 602, 601, 603, 0, 604,
	0, 605, 606, 607, 0, 0, 0, 0, 0, 608,
	609, 611, 0, 612, 613, 614, 615, 610, 616, 617,
	618, 619, 620, 621, 0, 623, 624, 622, 625, 626,
	0, 627, 628, 629, 630, 631, 782, 632, 0, 633,
	634, 642, 643, 644, 635, 636, 638, 645, 637, 646,
	647, 648, 649, 651, 650, 0, 653, 654, 652, 655,
	656, 657, 0, 658, 783, 659, 639, 640, 660, 661,
	0, 662, 663, 664, 665, 666, 667, 668, 784, 0,
	669, 0, 670, 671, 672, 673, 674, 675, 677, 641,
	678, 683, 684, 785, 679, 680, 681, 682, 786, 686,
	687, 688, 689, 0, 690, 691, 0, 685, 676, 1046,
	692, 693, 694, 695, 696, 697, 0, 698, 699, 0,
	700, 787, 788, 789, 790, 0, 712, 0, 701, 703,
	704, 705, 706, 791, 707, 792, 0, 708, 709, 710,
	711, 702, 713, 714, 0, 0, 715, 716, 717, 719,
	721, 722, 718, 720, 723, 0, 724, 0, 0, 725,
	726, 727, 793, 794, 795, 0, 729, 730, 728, 731,
	732, 735, 733, 734, 796, 736, 737, 738, 922, 0,
	316, 0, 739, 740, 797, 741, 742, 743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 911, 327,
	326, 328, 329, 330, 331, 0, 332, 333, 0, 0,
	0, 0, 0, 744, 0, 0, 0, 334, 0, 335,
	336, 337, 0, 338, 339, 340, 341, 920, 343, 344,
	745, 746, 0, 345, 747, 346, 748, 0, 749, 347,
	348, 349, 350, 351, 352, 353, 0, 0, 0, 354,
	750, 751, 752, 0, 355, 356, 753, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	0, 382, 383, 384, 0, 0, 0, 0, 0, 0,
	0, 385, 386, 387, 388, 389, 0, 390, 392, 754,
	755, 0, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 756, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 757, 758, 426, 0, 0, 0,
	0, 0, 0, 0, 427, 428, 913, 759, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 919, 435, 915,
	0, 436, 437, 438, 760, 761, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 762, 0, 763,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 764,
	765, 766, 552, 0, 457, 458, 459, 916, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 0, 0, 0, 0, 767, 469, 553, 470, 768,
	769, 0, 770, 0, 471, 472, 474, 0, 771, 0,
	473, 475, 476, 0, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 914, 0, 485, 487, 486, 0,
	489, 772, 488, 0, 490, 491, 0, 0, 492, 493,
	494, 495, 496, 497, 500, 0, 0, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 0, 527, 528,
	529, 917, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 0, 545, 532, 0, 533,
	0, 0, 547, 548, 549, 550, 0, 773, 551, 774,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 0, 564, 0,
	776, 565, 566, 558, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 779, 585, 780, 586, 587,
	0, 918, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 781, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 912, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 0, 627, 628, 629, 630, 631, 782, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 0, 658, 783, 659, 639, 640, 660,
	661, 0, 662, 663, 664, 665, 666, 667, 668, 784,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 785, 679, 680, 681, 682, 786,
	686, 687, 688, 689, 0, 690, 691, 0, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 787, 788, 789, 790, 0, 712, 0, 701,
	703, 704, 705, 706, 791, 707, 792, 0, 708, 709,
	710, 711, 702, 713, 714, 0, 0, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 0, 724, 0, 0,
	725, 726, 727, 793, 794, 795, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 905,
	0, 316, 0, 739, 740, 797, 741, 742, 743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 911,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 744, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 920, 343,
	344, 745, 746, 0, 345, 747, 346, 748, 0, 749,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 750, 751, 752, 0, 355, 356, 753, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	754, 755, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 756, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 757, 758, 426, 0, 0,
	0, 0, 0, 0, 0, 427, 428, 913, 759, 0,
	0, 0, 430, 0, 431, 432, 433, 0, 919, 435,
	915, 0, 436, 437, 438, 760, 761, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 762, 0,
	763, 449, 0, 450, 451, 452, 453, 454, 455, 456,
	764, 765, 766, 552, 0, 457, 458, 459, 916, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 0, 0, 0, 0, 0, 767, 469, 553, 470,
	768, 769, 0, 770, 0, 471, 472, 474, 0, 771,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 914, 0, 485, 487, 486,
	0, 489, 772, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 917, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 0, 545, 532, 0,
	533, 0, 0, 547, 548, 549, 550, 0, 773, 551,
	774, 554, 555, 0, 0, 556, 0, 557, 0, 0,
	559, 560, 561, 0, 0, 562, 563, 775, 0, 564,
	0, 776, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 0, 577, 578, 777, 579,
	580, 581, 778, 582, 583, 584, 779, 585, 780, 586,
	587, 0, 918, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 781, 599, 600, 602, 601, 603,
	0, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 912, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 0, 623, 624, 622,
	625, 626, 0, 627, 628, 629, 630, 631, 782, 632,
	0, 633, 634, 642, 643, 644, 635, 636, 638, 645,
	637, 646, 647, 648, 649, 651, 650, 0, 653, 654,
	652, 655, 656, 657, 0, 658, 783, 659, 639, 640,
	660, 661, 0, 662, 663, 664, 665, 666, 667, 668,
	784, 0, 669, 0, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 785, 679, 680, 681, 682,
	786, 686, 687, 688, 689, 0, 690, 691, 0, 685,
	676, 0, 692, 693, 694, 695, 696, 697, 0, 698,
	699, 0, 700, 787, 788, 789, 790, 0, 712, 0,
	701, 703, 704, 705, 706, 791, 707, 792, 0, 708,
	709, 710, 711, 702, 713, 714, 0, 0, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 0, 724, 0,
	0, 725, 726, 727, 793, 794, 795, 0, 729, 730,
	728, 731, 732, 735, 733, 734, 796, 736, 737, 738,
	316, 0, 0, 0, 739, 740, 797, 741, 742, 743,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 327,
	326, 328, 329, 330, 331, 0, 332, 333, 0, 0,
	0, 0, 0, 744, 0, 0, 0, 334, 0, 335,
	336, 337, 0, 338, 339, 340, 341, 342, 343, 344,
	745, 746, 0, 345, 747, 346, 748, 0, 749, 347,
	348, 349, 350, 351, 352, 353, 0, 0, 0, 354,
	750, 751, 752, 0, 355, 356, 753, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	0, 382, 383, 384, 0, 0, 0, 0, 0, 0,
	0, 385, 386, 387, 388, 389, 0, 390, 392, 754,
	755, 0, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 756, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 757, 758, 426, 0, 4152, 0,
	0, 0, 0, 0, 427, 428, 429, 759, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	0, 436, 437, 438, 760, 761, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 762, 0, 763,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 764,
	765, 766, 552, 0, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 0, 0, 0, 0, 767, 469, 553, 470, 768,
	769, 0, 770, 0, 471, 472, 474, 0, 771, 0,
	473, 475, 476, 0, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 772, 488, 0, 490, 491, 0, 0, 492, 493,
	494, 495, 496, 497, 500, 0, 0, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 0, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 0, 545, 532, 0, 533,
	0, 0, 547, 548, 549, 550, 0, 773, 551, 774,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 0, 564, 0,
	776, 565, 566, 558, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 779, 585, 780, 586, 587,
	4958, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 781, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 0, 627, 628, 629, 630, 631, 782, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 0, 658, 783, 659, 639, 640, 660,
	661, 0, 662, 663, 664, 665, 666, 667, 668, 784,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 785, 679, 680, 681, 682, 786,
	686, 687, 688, 689, 0, 690, 691, 0, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 787, 788, 789, 790, 0, 712, 0, 701,
	703, 704, 705, 706, 791, 707, 792, 0, 708, 709,
	710, 711, 702, 713, 714, 0, 0, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 0, 724, 0, 0,
	725, 726, 727, 793, 794, 795, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 1536,
	0, 316, 0, 739, 740, 797, 741, 742, 743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 744, 0, 0, 0, 334, 0,
	335, 336, 337, 1539, 338, 339, 340, 341, 342, 343,
	344, 745, 746, 0, 345, 747, 346, 748, 0, 749,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 750, 751, 1537, 0, 355, 356, 753, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	754, 755, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 756, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 757, 758, 426, 0, 0,
	0, 0, 0, 0, 0, 427, 428, 429, 759, 0,
	0, 0, 430, 0, 431, 432, 433, 0, 434, 435,
	0, 0, 436, 437, 438, 760, 761, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 762, 0,
	763, 449, 0, 450, 451, 452, 453, 454, 455, 456,
	764, 765, 766, 552, 0, 457, 458, 459, 0, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 0, 0, 0, 0, 0, 767, 469, 553, 470,
	768, 769, 0, 770, 0, 471, 472, 474, 0, 771,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 772, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 893, 0, 527,
	528, 529, 530, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 0, 545, 532, 0,
	533, 0, 0, 547, 548, 549, 550, 0, 773, 551,
	774, 554, 555, 0, 0, 556, 0, 557, 0, 0,
	559, 560, 561, 0, 0, 562, 563, 775, 0, 564,
	0, 776, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 0, 577, 578, 777, 579,
	580, 581, 778, 582, 583, 584, 779, 585, 780, 586,
	587, 0, 588, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 781, 599, 600, 602, 601, 603,
	0, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 609, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 0, 623, 624, 622,
	625, 626, 0, 892, 628, 629, 630, 631, 782, 632,
	0, 633, 634, 642, 643, 644, 635, 636, 638, 891,
	637, 646, 647, 648, 649, 651, 650, 0, 653, 654,
	652, 655, 1540, 657, 0, 658, 783, 659, 639, 640,
	660, 661, 0, 662, 663, 664, 665, 666, 667, 668,
	784, 0, 669, 0, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 785, 679, 680, 681, 682,
	786, 686, 687, 688, 689, 0, 690, 691, 0, 685,
	676, 0, 692, 693, 694, 695, 696, 697, 0, 698,
	699, 0, 700, 889, 788, 789, 790, 0, 712, 0,
	701, 703, 704, 705, 706, 791, 707, 792, 0, 708,
	709, 710, 711, 702, 713, 714, 0, 0, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 0, 724, 0,
	0, 725, 726, 727, 793, 794, 795, 0, 729, 730,
	728, 731, 732, 735, 733, 734, 796, 736, 737, 738,
	1536, 0, 316, 0, 739, 740, 797, 741, 742, 743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 0, 744, 0, 0, 0, 334,
	0, 335, 336, 337, 1539, 338, 339, 340, 341, 342,
	343, 344, 745, 746, 0, 345, 747, 346, 748, 0,
	749, 347, 348, 349, 350, 351, 352, 353, 0, 0,
	0, 354, 750, 751, 1537, 0, 355, 356, 753, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 0, 382, 383, 384, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 387, 388, 389, 0, 390,
	392, 754, 755, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 756, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 757, 758, 426, 0,
	0, 0, 0, 0, 0, 0, 427, 428, 429, 759,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 0, 436, 437, 438, 760, 761, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 762,
	0, 763, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 764, 765, 766, 552, 0, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 0, 0, 0, 0, 767, 469, 553,
	470, 768, 769, 0, 770, 0, 471, 472, 474, 0,
	771, 0, 473, 475, 476, 0, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 772, 488, 0, 490, 491, 0, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 893, 0,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 0, 545, 532,
	0, 533, 0, 0, 547, 548, 549, 550, 0, 773,
	551, 774, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 0,
	564, 0, 776, 565, 566, 558, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 779, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 781, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 0, 892, 628, 629, 630, 631, 782,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	891, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 1540, 657, 0, 658, 783, 659, 639,
	640, 660, 661, 0, 662, 663, 664, 665, 666, 667,
	668, 784, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 785, 679, 680, 681,
	682, 786, 686, 687, 688, 689, 0, 690, 691, 0,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 889, 788, 789, 790, 0, 712,
	0, 701, 1538, 704, 705, 706, 791, 707, 792, 0,
	708, 709, 710, 711, 702, 713, 714, 0, 0, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 0, 724,
	0, 0, 725, 726, 727, 793, 794, 795, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 900, 0, 316, 0, 739, 740, 797, 741, 742,
	743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 898, 332,
	333, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 745, 746, 0, 345, 747, 346, 748,
	0, 749, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 750, 751, 752, 0, 355, 356, 753,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 754, 755, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 756, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 757, 758, 426,
	0, 0, 0, 0, 0, 0, 0, 427, 428, 429,
	759, 0, 0, 0, 430, 0, 431, 432, 433, 0,
	434, 435, 0, 0, 436, 437, 438, 760, 761, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	762, 0, 763, 449, 0, 450, 451, 452, 453, 454,
	455, 456, 764, 765, 766, 552, 0, 457, 458, 459,
	0, 460, 461, 462, 463, 464, 0, 0, 0, 465,
	466, 467, 468, 0, 0, 0, 0, 0, 767, 469,
	553, 470, 768, 769, 0, 770, 0, 471, 472, 474,
	0, 771, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 772, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 539, 541, 542, 537,
	538, 540, 543, 544, 546, 534, 535, 536, 0, 545,
	532, 0, 533, 0, 0, 547, 548, 549, 550, 0,
	773, 551, 774, 554, 555, 0, 0, 556, 0, 557,
	0, 0, 559, 560, 561, 0, 0, 562, 563, 775,
	0, 564, 0, 776, 565, 566, 558, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 0, 577, 578,
	777, 579, 580, 581, 778, 582, 583, 584, 779, 585,
	780, 586, 587, 0, 588, 589, 590, 0, 591, 592,
	593, 594, 595, 596, 597, 598, 781, 599, 600, 602,
	601, 603, 0, 604, 0, 605, 606, 607, 0, 0,
	0, 0, 0, 608, 609, 611, 0, 612, 613, 614,
	615, 610, 616, 617, 618, 619, 620, 621, 0, 623,
	624, 622, 625, 626, 0, 627, 628, 629, 630, 631,
	782, 632, 0, 633, 634, 642, 643, 644, 635, 636,
	638, 645, 637, 646, 647, 648, 649, 651, 650, 0,
	653, 654, 652, 655, 656, 657, 0, 658, 783, 659,
	639, 640, 660, 661, 0, 662, 663, 664, 665, 666,
	667, 668, 784, 0, 669, 0, 670, 671, 672, 673,
	674, 675, 677, 641, 678, 683, 684, 785, 679, 680,
	681, 682, 786, 686, 687, 688, 689, 0, 690, 691,
	0, 685, 676, 0, 692, 693, 694, 695, 696, 697,
	0, 698, 699, 0, 700, 787, 788, 789, 790, 0,
	712, 0, 701, 703, 704, 705, 706, 791, 707, 792,
	0, 708, 709, 710, 711, 702, 713, 714, 0, 0,
	715, 716, 717, 719, 721, 722, 718, 720, 723, 0,
	724, 0, 0, 725, 726, 727, 793, 794, 795, 0,
	729, 730, 728, 731, 732, 735, 733, 734, 796, 736,
	737, 738, 808, 0, 316, 0, 739, 740, 797, 741,
	742, 743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 327, 326, 328, 329, 330, 331, 807,
	332, 333, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 334, 0, 335, 336, 337, 0, 338, 339, 340,
	341, 342, 343, 344, 745, 746, 0, 345, 747, 346,
	748, 0, 749, 347, 348, 349, 350, 351, 352, 353,
	0, 0, 0, 354, 750, 751, 752, 0, 355, 356,
	753, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 0, 382, 383, 384, 0, 0,
	0, 0, 0, 0, 0, 385, 386, 387, 388, 389,
	0, 390, 392, 754, 755, 0, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 756, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 757, 758,
	426, 0, 0, 0, 0, 0, 0, 0, 427, 428,
	429, 759, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 0, 436, 437, 438, 760, 761,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 762, 0, 763, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 764, 765, 766, 552, 0, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 0, 0, 0, 0, 767,
	469, 553, 470, 768, 769, 0, 770, 0, 471, 472,
	474, 0, 771, 0, 473, 475, 476, 0, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 772, 488, 0, 490, 491,
	0, 0, 492, 493, 494, 495, 496, 497, 500, 0,
	0, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 0, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 0,
	545, 532, 0, 533, 0, 0, 547, 548, 549, 550,
	0, 773, 551, 774, 554, 555, 0, 0, 556, 0,
	557, 0, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 0, 564, 0, 776, 565, 566, 558, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 779,
	585, 780, 806, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 781, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 0, 627, 628, 629, 630,
	631, 782, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 0, 658, 783,
	659, 639, 640, 660, 661, 0, 662, 663, 664, 665,
	666, 667, 668, 784, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 785, 679,
	680, 681, 682, 786, 686, 687, 688, 689, 0, 690,
	691, 0, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 787, 788, 789, 790,
	0, 712, 0, 701, 703, 704, 705, 706, 791, 707,
	792, 0, 708, 709, 710, 711, 702, 713, 714, 0,
	0, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	0, 724, 0, 0, 725, 726, 727, 793, 794, 795,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 316, 3432, 0, 0, 739, 740, 797,
	741, 742, 743, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 745, 746, 0, 345, 747, 346, 748,
	0, 749, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 750, 751, 752, 0, 355, 356, 753,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 754, 755, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 756, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 757, 758, 426,
	0, 0, 0, 0, 0, 0, 0, 427, 428, 429,
	759, 0, 0, 0, 430, 0, 431, 432, 433, 0,
	434, 435, 0, 0, 436, 437, 438, 760, 761, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	762, 0, 763, 449, 0, 450, 451, 452, 453, 454,
	455, 456, 764, 765, 766, 552, 0, 457, 458, 459,
	0, 460, 461, 462, 463, 464, 0, 0, 0, 465,
	466, 467, 468, 0, 0, 0, 0, 0, 767, 469,
	553, 470, 768, 769, 0, 770, 0, 471, 472, 474,
	0, 771, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 772, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 539, 541, 542, 537,
	538, 540, 543, 544, 546, 534, 535, 536, 0, 545,
	532, 0, 533, 0, 0, 547, 548, 549, 550, 0,
	773, 551, 774, 554, 555, 0, 0, 556, 0, 557,
	0, 0, 559, 560, 561, 0, 0, 562, 563, 775,
	0, 564, 0, 776, 565, 566, 558, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 0, 577, 578,
	777, 579, 580, 581, 778, 582, 583, 584, 779, 585,
	780, 586, 587, 0, 588, 589, 590, 0, 591, 592,
	593, 594, 595, 596, 597, 598, 781, 599, 600, 602,
	601, 603, 0, 604, 0, 605, 606, 607, 0, 0,
	0, 0, 0, 608, 609, 611, 0, 612, 613, 614,
	615, 610, 616, 617, 618, 619, 620, 621, 0, 623,
	624, 622, 625, 626, 0, 627, 628, 629, 630, 631,
	782, 632, 0, 633, 634, 642, 643, 644, 635, 636,
	638, 645, 637, 646, 647, 648, 649, 651, 650, 0,
	653, 654, 652, 655, 656, 657, 0, 658, 783, 659,
	639, 640, 660, 661, 0, 662, 663, 664, 665, 666,
	667, 668, 784, 0, 669, 0, 670, 671, 672, 673,
	674, 675, 677, 641, 678, 683, 684, 785, 679, 680,
	681, 682, 786, 686, 687, 688, 689, 0, 690, 691,
	0, 685, 676, 0, 692, 693, 694, 695, 696, 697,
	0, 698, 699, 0, 700, 787, 788, 789, 790, 0,
	712, 0, 701, 703, 704, 705, 706, 791, 707, 792,
	0, 708, 709, 710, 711, 702, 713, 714, 0, 0,
	715, 716, 717, 719, 721, 722, 718, 720, 723, 0,
	724, 0, 0, 725, 726, 727, 793, 794, 795, 0,
	729, 730, 728, 731, 732, 735, 733, 734, 796, 736,
	737, 738, 316, 0, 0, 0, 739, 740, 797, 741,
	742, 743, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 0, 744, 0, 0, 0, 334,
	0, 335, 336, 337, 0, 338, 339, 340, 341, 342,
	343, 344, 745, 746, 0, 345, 747, 346, 748, 0,
	749, 347, 348, 349, 350, 351, 352, 353, 0, 0,
	0, 354, 750, 751, 752, 0, 355, 356, 753, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 0, 382, 383, 384, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 387, 388, 389, 0, 390,
	392, 754, 755, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 756, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 757, 758, 426, 0,
	0, 0, 0, 0, 0, 0, 427, 428, 429, 759,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 0, 436, 437, 438, 760, 761, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 762,
	0, 763, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 764, 765, 766, 552, 0, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 0, 0, 0, 0, 767, 469, 553,
	470, 768, 769, 0, 770, 0, 471, 472, 474, 0,
	771, 0, 473, 475, 476, 0, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 772, 488, 0, 490, 491, 0, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 0,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 0, 545, 532,
	0, 533, 0, 0, 547, 548, 549, 550, 0, 773,
	551, 774, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 0,
	564, 0, 776, 565, 566, 558, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 779, 585, 780,
	586, 587, 5283, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 781, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 0, 627, 628, 629, 630, 631, 782,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 0, 658, 783, 659, 639,
	640, 660, 661, 0, 662, 663, 664, 665, 666, 667,
	668, 784, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 785, 679, 680, 681,
	682, 786, 686, 687, 688, 689, 0, 690, 691, 0,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 787, 788, 789, 790, 0, 712,
	0, 701, 703, 704, 705, 706, 791, 707, 792, 0,
	708, 709, 710, 711, 702, 713, 714, 0, 0, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 0, 724,
	0, 0, 725, 726, 727, 793, 794, 795, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 316, 3958, 0, 0, 739, 740, 797, 741, 742,
	743, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 744, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 745, 746, 0, 345, 747, 346, 748, 0, 749,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 750, 751, 752, 0, 355, 356, 753, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	754, 755, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 756, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 757, 758, 426, 0, 0,
	0, 0, 0, 0, 0, 427, 428, 429, 759, 0,
	0, 0, 430, 0, 431, 432, 433, 0, 434, 435,
	0, 0, 436, 437, 438, 760, 761, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 762, 0,
	763, 449, 0, 450, 451, 452, 453, 454, 455, 456,
	764, 765, 766, 552, 0, 457, 458, 459, 0, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 0, 0, 0, 0, 0, 767, 469, 553, 470,
	768, 769, 0, 770, 0, 471, 472, 474, 0, 771,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 772, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 0, 545, 532, 0,
	533, 0, 0, 547, 548, 549, 550, 0, 773, 551,
	774, 554, 555, 0, 0, 556, 0, 557, 0, 0,
	559, 560, 561, 0, 0, 562, 563, 775, 0, 564,
	0, 776, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 0, 577, 578, 777, 579,
	580, 581, 778, 582, 583, 584, 779, 585, 780, 586,
	587, 0, 588, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 781, 599, 600, 602, 601, 603,
	0, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 609, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 0, 623, 624, 622,
	625, 626, 0, 627, 628, 629, 630, 631, 782, 632,
	0, 633, 634, 642, 643, 644, 635, 636, 638, 645,
	637, 646, 647, 648, 649, 651, 650, 0, 653, 654,
	652, 655, 656, 657, 0, 658, 783, 659, 639, 640,
	660, 661, 0, 662, 663, 664, 665, 666, 667, 668,
	784, 0, 669, 0, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 785, 679, 680, 681, 682,
	786, 686, 687, 688, 689, 0, 690, 691, 0, 685,
	676, 0, 692, 693, 694, 695, 696, 697, 0, 698,
	699, 0, 700, 787, 788, 789, 790, 0, 712, 0,
	701, 703, 704, 705, 706, 791, 707, 792, 0, 708,
	709, 710, 711, 702, 713, 714, 0, 0, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 0, 724, 0,
	0, 725, 726, 727, 793, 794, 795, 0, 729, 730,
	728, 731, 732, 735, 733, 734, 796, 736, 737, 738,
	316, 0, 0, 0, 739, 740, 797, 741, 742, 743,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 327,
	326, 328, 329, 330, 331, 0, 332, 333, 0, 0,
	0, 0, 0, 744, 0, 0, 0, 334, 0, 335,
	336, 337, 0, 338, 339, 340, 341, 342, 343, 344,
	745, 746, 0, 345, 747, 346, 748, 0, 749, 347,
	348, 349, 350, 351, 352, 353, 0, 0, 0, 354,
	750, 751, 752, 0, 355, 356, 753, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	0, 382, 383, 384, 0, 0, 0, 0, 0, 0,
	0, 385, 386, 387, 388, 389, 0, 390, 392, 754,
	755, 0, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 756, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 757, 758, 426, 0, 0, 0,
	0, 0, 0, 0, 427, 428, 429, 759, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	0, 436, 437, 438, 760, 761, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 762, 0, 763,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 764,
	765, 766, 552, 0, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 0, 0, 0, 0, 767, 469, 553, 470, 768,
	769, 0, 770, 0, 471, 472, 474, 0, 771, 0,
	473, 475, 476, 0, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 772, 488, 0, 490, 491, 0, 0, 492, 493,
	494, 495, 496, 497, 500, 0, 0, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 0, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 0, 545, 532, 0, 533,
	0, 0, 547, 548, 549, 550, 0, 773, 551, 774,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 0, 564, 0,
	776, 565, 566, 558, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 779, 585, 780, 586, 587,
	4832, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 781, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 0, 627, 628, 629, 630, 631, 782, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 0, 658, 783, 659, 639, 640, 660,
	661, 0, 662, 663, 664, 665, 666, 667, 668, 784,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 785, 679, 680, 681, 682, 786,
	686, 687, 688, 689, 0, 690, 691, 0, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 787, 788, 789, 790, 0, 712, 0, 701,
	703, 704, 705, 706, 791, 707, 792, 0, 708, 709,
	710, 711, 702, 713, 714, 0, 0, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 0, 724, 0, 0,
	725, 726, 727, 793, 794, 795, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 316,
	0, 0, 0, 739, 740, 797, 741, 742, 743, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 744, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 745,
	746, 0, 345, 747, 346, 748, 0, 749, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 750,
	751, 752, 0, 355, 356, 753, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 754, 755,
	4525, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	756, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 757, 758, 426, 0, 0, 0, 0,
	0, 0, 0, 427, 428, 429, 759, 0, 0, 0,
	430, 0, 431, 432, 433, 0, 434, 435, 0, 0,
	436, 437, 438, 760, 761, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 762, 0, 763, 449,
	0, 450, 451, 452, 453, 454, 455, 456, 764, 765,
	766, 552, 0, 457, 458, 459, 0, 460, 461, 462,
	463, 464, 0, 0, 0, 465, 466, 467, 468, 0,
	0, 0, 0, 0, 767, 469, 553, 470, 768, 769,
	0, 770, 0, 471, 472, 474, 0, 771, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	772, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 539, 541, 542, 537, 538, 540, 543, 544,
	546, 534, 535, 536, 0, 545, 532, 0, 533, 0,
	0, 547, 548, 549, 550, 0, 773, 551, 774, 554,
	555, 0, 0, 556, 0, 557, 0, 0, 559, 560,
	561, 0, 0, 562, 563, 775, 0, 564, 0, 776,
	565, 566, 558, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 0, 577, 578, 777, 579, 580, 581,
	778, 582, 583, 584, 779, 585, 780, 586, 587, 0,
	588, 589, 590, 0, 591, 592, 593, 594, 595, 596,
	597, 598, 781, 599, 600, 602, 601, 603, 0, 604,
	0, 605, 606, 607, 0, 0, 0, 0, 0, 608,
	609, 611, 0, 612, 613, 614, 615, 610, 616, 617,
	618, 619, 620, 621, 0, 623, 624, 622, 625, 626,
	0, 627, 628, 629, 630, 631, 782, 632, 0, 633,
	634, 642, 643, 644, 635, 636, 638, 645, 637, 646,
	647, 648, 649, 651, 650, 0, 653, 654, 652, 655,
	656, 657, 0, 658, 783, 659, 639, 640, 660, 661,
	0, 662, 663, 664, 665, 666, 667, 668, 784, 0,
	669, 0, 670, 671, 672, 673, 674, 675, 677, 641,
	678, 683, 684, 785, 679, 680, 681, 682, 786, 686,
	687, 688, 689, 0, 690, 691, 0, 685, 676, 0,
	692, 693, 694, 695, 696, 697, 0, 698, 699, 0,
	700, 787, 788, 789, 790, 0, 712, 0, 701, 703,
	704, 705, 706, 791, 707, 792, 0, 708, 709, 710,
	711, 702, 713, 714, 0, 0, 715, 716, 717, 719,
	721, 722, 718, 720, 723, 0, 724, 0, 0, 725,
	726, 727, 793, 794, 795, 0, 729, 730, 728, 731,
	732, 735, 733, 734, 796, 736, 737, 738, 316, 0,
	0, 0, 739, 740, 797, 741, 742, 743, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 327, 326, 328,
	329, 330, 331, 0, 332, 333, 0, 0, 0, 0,
	0, 744, 0, 3160, 0, 334, 0, 335, 336, 337,
	0, 338, 339, 340, 341, 342, 343, 344, 745, 746,
	0, 345, 747, 346, 748, 0, 749, 347, 348, 349,
	350, 351, 352, 353, 0, 0, 0, 354, 750, 751,
	752, 0, 355, 356, 753, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 0, 382,
	383, 384, 0, 0, 0, 0, 0, 0, 0, 385,
	386, 387, 388, 389, 0, 390, 392, 754, 755, 0,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 756,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 757, 758, 426, 0, 0, 0, 0, 0,
	0, 0, 427, 428, 429, 759, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 0, 436,
	437, 438, 760, 761, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 762, 0, 763, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 764, 765, 766,
	552, 0, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 0,
	0, 0, 0, 767, 469, 553, 470, 768, 769, 0,
	770, 0, 471, 472, 474, 0, 771, 0, 473, 475,
	476, 0, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 772,
	488, 0, 490, 491, 0, 0, 492, 493, 494, 495,
	496, 497, 500, 0, 0, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 0, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 0, 545, 532, 0, 533, 0, 0,
	547, 548, 549, 550, 0, 773, 551, 774, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 0, 564, 0, 776, 565,
	566, 558, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 779, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 781, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 0,
	627, 628, 629, 630, 631, 782, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 0, 658, 783, 659, 639, 640, 660, 661, 0,
	662, 663, 664, 665, 666, 667, 668, 784, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 785, 679, 680, 681, 682, 786, 686, 687,
	688, 689, 0, 690, 691, 0, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	787, 788, 789, 790, 0, 712, 0, 701, 703, 704,
	705, 706, 791, 707, 792, 0, 708, 709, 710, 711,
	702, 713, 714, 0, 0, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 0, 724, 0, 0, 725, 726,
	727, 793, 794, 795, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 316, 0, 0,
	0, 739, 740, 797, 741, 742, 743, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	744, 0, 3151, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 745, 746, 0,
	345, 747, 346, 748, 0, 749, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 750, 751, 752,
	0, 355, 356, 753, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 0, 390, 392, 754, 755, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 756, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 757, 758, 426, 0, 0, 0, 0, 0, 0,
	0, 427, 428, 429, 759, 0, 0, 0, 430, 0,
	431, 432, 433, 0, 434, 435, 0, 0, 436, 437,
	438, 760, 761, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 762, 0, 763, 449, 0, 450,
	451, 452, 453, 454, 455, 456, 764, 765, 766, 552,
	0, 457, 458, 459, 0, 460, 461, 462, 463, 464,
	0, 0, 0, 465, 466, 467, 468, 0, 0, 0,
	0, 0, 767, 469, 553, 470, 768, 769, 0, 770,
	0, 471, 472, 474, 0, 771, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 772, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	539, 541, 542, 537, 538, 540, 543, 544, 546, 534,
	535, 536, 0, 545, 532, 0, 533, 0, 0, 547,
	548, 549, 550, 0, 773, 551, 774, 554, 555, 0,
	0, 556, 0, 557, 0, 0, 559, 560, 561, 0,
	0, 562, 563, 775, 0, 564, 0, 776, 565, 566,
	558, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 0, 577, 578, 777, 579, 580, 581, 778, 582,
	583, 584, 779, 585, 780, 586, 587, 0, 588, 589,
	590, 0, 591, 592, 593, 594, 595, 596, 597, 598,
	781, 599, 600, 602, 601, 603, 0, 604, 0, 605,
	606, 607, 0, 0, 0, 0, 0, 608, 609, 611,
	0, 612, 613, 614, 615, 610, 616, 617, 618, 619,
	620, 621, 0, 623, 624, 622, 625, 626, 0, 627,
	628, 629, 630, 631, 782, 632, 0, 633, 634, 642,
	643, 644, 635, 636, 638, 645, 637, 646, 647, 648,
	649, 651, 650, 0, 653, 654, 652, 655, 656, 657,
	0, 658, 783, 659, 639, 640, 660, 661, 0, 662,
	663, 664, 665, 666, 667, 668, 784, 0, 669, 0,
	670, 671, 672, 673, 674, 675, 677, 641, 678, 683,
	684, 785, 679, 680, 681, 682, 786, 686, 687, 688,
	689, 0, 690, 691, 0, 685, 676, 0, 692, 693,
	694, 695, 696, 697, 0, 698, 699, 0, 700, 787,
	788, 789, 790, 0, 712, 0, 701, 703, 704, 705,
	706, 791, 707, 792, 0, 708, 709, 710, 711, 702,
	713, 714, 0, 0, 715, 716, 717, 719, 721, 722,
	718, 720, 723, 0, 724, 0, 0, 725, 726, 727,
	793, 794, 795, 0, 729, 730, 728, 731, 732, 735,
	733, 734, 796, 736, 737, 738, 316, 3432, 0, 0,
	739, 740, 797, 741, 742, 743, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 327, 326, 328, 329, 330,
	331, 0, 332, 333, 0, 0, 0, 0, 0, 744,
	0, 0, 0, 334, 0, 335, 336, 337, 0, 338,
	339, 340, 341, 342, 343, 344, 745, 746, 0, 345,
	747, 346, 748, 0, 749, 347, 348, 349, 350, 351,
	352, 353, 0, 0, 0, 354, 750, 751, 752, 0,
	355, 356, 753, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 0, 382, 383, 384,
	0, 0, 0, 0, 0, 0, 0, 385, 386, 387,
	388, 389, 0, 390, 392, 754, 755, 0, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 756, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	757, 758, 426, 0, 0, 0, 0, 0, 0, 0,
	427, 428, 429, 759, 0, 0, 0, 430, 0, 431,
	432, 433, 0, 434, 435, 0, 0, 436, 437, 438,
	760, 761, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 762, 0, 763, 449, 0, 450, 451,
	452, 453, 454, 455, 456, 764, 765, 766, 552, 0,
	457, 458, 459, 0, 460, 461, 462, 463, 464, 0,
	0, 0, 465, 466, 467, 468, 0, 0, 0, 0,
	0, 767, 469, 553, 470, 768, 769, 0, 770, 0,
	471, 472, 474, 0, 771, 0, 473, 475, 476, 0,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 772, 488, 0,
	490, 491, 0, 0, 492, 493, 494, 495, 496, 497,
	500, 0, 0, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 0, 527, 528, 529, 530, 531, 539,
	541, 542, 537, 538, 540, 543, 544, 546, 534, 535,
	536, 0, 545, 532, 0, 533, 0, 0, 547, 548,
	549, 550, 0, 773, 551, 774, 554, 555, 0, 0,
	556, 0, 557, 0, 0, 559, 560, 3512, 0, 0,
	562, 563, 775, 0, 564, 0, 776, 565, 566, 558,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	0, 577, 578, 777, 579, 580, 581, 778, 582, 583,
	584, 779, 585, 780, 586, 587, 0, 588, 589, 590,
	0, 591, 592, 593, 594, 595, 596, 597, 598, 781,
	599, 600, 602, 601, 603, 0, 604, 0, 605, 606,
	607, 0, 0, 0, 0, 0, 608, 609, 611, 0,
	612, 613, 614, 615, 610, 616, 617, 618, 619, 620,
	621, 0, 623, 624, 622, 625, 626, 0, 627, 628,
	629, 630, 631, 782, 632, 0, 633, 634, 642, 643,
	644, 635, 636, 638, 645, 637, 646, 647, 648, 649,
	651, 650, 0, 653, 654, 652, 655, 656, 657, 0,
	658, 783, 659, 639, 640, 660, 661, 0, 662, 663,
	664, 665, 666, 667, 668, 784, 0, 669, 0, 670,
	671, 672, 673, 674, 675, 677, 641, 678, 683, 684,
	785, 679, 680, 681, 682, 786, 686, 687, 688, 689,
	0, 690, 691, 0, 685, 676, 0, 692, 693, 694,
	695, 696, 697, 0, 698, 699, 0, 700, 787, 788,
	789, 790, 0, 712, 0, 701, 703, 704, 705, 706,
	791, 707, 792, 0, 708, 709, 710, 711, 702, 713,
	714, 0, 0, 715, 716, 717, 719, 721, 722, 718,
	720, 723, 0, 724, 0, 0, 725, 726, 727, 793,
	794, 795, 0, 729, 730, 728, 731, 732, 735, 733,
	734, 796, 736, 737, 738, 316, 0, 0, 0, 739,
	740, 797, 741, 742, 743, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 744, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 745, 746, 0, 345, 747,
	346, 748, 0, 749, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 750, 751, 752, 0, 355,
	356, 753, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 754, 755, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 756, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 757,
	758, 426, 0, 0, 0, 0, 0, 0, 0, 427,
	428, 429, 759, 0, 0, 0, 430, 0, 431, 432,
	433, 0, 434, 435, 0, 0, 436, 437, 438, 760,
	761, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 762, 0, 763, 449, 0, 450, 451, 452,
	453, 454, 455, 456, 764, 765, 766, 552, 0, 457,
	458, 459, 0, 460, 461, 462, 463, 464, 0, 0,
	0, 465, 466, 467, 468, 0, 0, 0, 0, 0,
	767, 469, 553, 470, 768, 769, 0, 770, 0, 471,
	472, 474, 0, 771, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 772, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 539, 541,
	542, 537, 538, 540, 543, 544, 546, 534, 535, 536,
	0, 545, 532, 0, 533, 0, 0, 547, 548, 549,
	550, 0, 773, 551, 774, 554, 555, 0, 0, 556,
	0, 557, 0, 0, 559, 560, 561, 0, 0, 562,
	563, 775, 0, 564, 0, 776, 565, 566, 558, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 0,
	577, 578, 777, 579, 580, 581, 778, 582, 583, 584,
	779, 585, 780, 586, 587, 2501, 588, 589, 590, 0,
	591, 592, 593, 594, 595, 596, 597, 598, 781, 599,
	600, 602, 601, 603, 0, 604, 0, 605, 606, 607,
	0, 0, 0, 0, 0, 608, 609, 611, 0, 612,
	613, 614, 615, 610, 616, 617, 618, 619, 620, 621,
	0, 623, 624, 622, 625, 626, 0, 892, 628, 629,
	630, 631, 782, 632, 0, 633, 634, 642, 643, 644,
	635, 636, 638, 891, 637, 646, 647, 648, 649, 3381,
	650, 0, 653, 654, 652, 655, 656, 657, 0, 658,
	783, 659, 639, 640, 660, 661, 0, 662, 663, 664,
	665, 666, 667, 668, 784, 0, 669, 0, 670, 671,
	672, 673, 674, 675, 677, 641, 678, 683, 684, 785,
	679, 680, 681, 682, 786, 686, 687, 688, 689, 0,
	690, 691, 0, 685, 676, 0, 692, 693, 694, 695,
	696, 697, 0, 698, 699, 0, 700, 889, 788, 789,
	790, 0, 712, 0, 701, 703, 704, 705, 706, 791,
	707, 792, 0, 708, 709, 710, 711, 702, 713, 714,
	0, 0, 715, 716, 717, 719, 721, 722, 718, 720,
	723, 0, 724, 0, 0, 725, 726, 727, 793, 794,
	795, 0, 729, 730, 728, 731, 732, 735, 733, 734,
	796, 736, 737, 738, 316, 0, 0, 0, 739, 740,
	797, 741, 742, 743, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 327, 326, 328, 329, 330, 331, 2685,
	332, 333, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 334, 0, 335, 336, 337, 0, 338, 339, 340,
	341, 342, 343, 344, 745, 746, 0, 345, 747, 346,
	748, 0, 749, 347, 348, 349, 350, 351, 352, 353,
	0, 0, 0, 354, 750, 751, 752, 0, 355, 356,
	753, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 0, 382, 383, 384, 0, 0,
	0, 0, 0, 0, 0, 385, 386, 387, 388, 389,
	0, 390, 392, 754, 755, 0, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 756, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 757, 758,
	426, 0, 0, 0, 0, 0, 0, 0, 427, 428,
	429, 759, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 0, 436, 437, 438, 760, 761,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 762, 0, 763, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 764, 765, 766, 552, 0, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 0, 0, 0, 0, 767,
	469, 553, 470, 768, 769, 0, 770, 0, 471, 472,
	474, 0, 771, 0, 473, 475, 476, 0, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 772, 488, 0, 490, 491,
	0, 0, 492, 493, 494, 495, 496, 497, 500, 0,
	0, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 0, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 0,
	545, 532, 0, 533, 0, 0, 547, 548, 549, 550,
	0, 773, 551, 774, 554, 555, 0, 0, 556, 0,
	557, 0, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 0, 564, 0, 776, 565, 566, 558, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 779,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 781, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 0, 627, 628, 629, 630,
	631, 782, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 0, 658, 783,
	659, 639, 640, 660, 661, 0, 662, 663, 664, 665,
	666, 667, 668, 784, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 785, 679,
	680, 681, 682, 786, 686, 687, 688, 689, 0, 690,
	691, 0, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 787, 788, 789, 790,
	0, 712, 0, 701, 703, 704, 705, 706, 791, 707,
	792, 0, 708, 709, 710, 711, 702, 713, 714, 0,
	0, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	0, 724, 0, 0, 725, 726, 727, 793, 794, 795,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 2671, 0, 316, 0, 739, 740, 797,
	741, 742, 743, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 744, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 745, 746, 0, 345, 747,
	346, 748, 0, 749, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 750, 751, 752, 0, 355,
	356, 753, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 754, 755, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 756, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 757,
	758, 426, 0, 0, 0, 0, 0, 0, 0, 427,
	428, 429, 759, 0, 0, 0, 430, 0, 431, 432,
	433, 0, 434, 435, 0, 0, 436, 437, 438, 760,
	761, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 762, 0, 763, 449, 0, 450, 451, 452,
	453, 454, 455, 456, 764, 765, 766, 552, 0, 457,
	458, 459, 0, 460, 461, 462, 463, 464, 0, 0,
	0, 465, 466, 467, 468, 0, 0, 0, 0, 0,
	767, 469, 553, 470, 768, 769, 0, 770, 0, 471,
	472, 474, 0, 771, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 772, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 539, 541,
	542, 537, 538, 540, 543, 544, 546, 534, 535, 536,
	0, 545, 532, 0, 533, 0, 0, 547, 548, 549,
	550, 0, 773, 551, 774, 554, 555, 0, 0, 556,
	0, 557, 0, 0, 559, 560, 561, 0, 0, 562,
	563, 775, 0, 564, 0, 776, 565, 566, 558, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 0,
	577, 578, 777, 579, 580, 581, 778, 582, 583, 584,
	779, 585, 780, 586, 587, 0, 588, 589, 590, 0,
	591, 592, 593, 594, 595, 596, 597, 598, 781, 599,
	600, 602, 601, 603, 0, 604, 0, 605, 606, 607,
	0, 0, 0, 0, 0, 608, 609, 611, 0, 612,
	613, 614, 615, 610, 616, 617, 618, 619, 620, 621,
	0, 623, 624, 622, 625, 626, 0, 627, 628, 629,
	630, 631, 782, 632, 0, 633, 634, 642, 643, 644,
	635, 636, 638, 645, 637, 646, 647, 648, 649, 651,
	650, 0, 653, 654, 652, 655, 656, 657, 0, 658,
	783, 659, 639, 640, 660, 661, 0, 662, 663, 664,
	665, 666, 667, 668, 784, 0, 669, 0, 670, 671,
	672, 673, 674, 675, 677, 641, 678, 683, 684, 785,
	679, 680, 681, 682, 786, 686, 687, 688, 689, 0,
	690, 691, 0, 685, 676, 0, 692, 693, 694, 695,
	696, 697, 0, 698, 699, 0, 700, 787, 788, 789,
	790, 0, 712, 0, 701, 703, 704, 705, 706, 791,
	707, 792, 0, 708, 709, 710, 711, 702, 713, 714,
	0, 0, 715, 716, 717, 719, 721, 722, 718, 720,
	723, 0, 724, 0, 0, 725, 726, 727, 793, 794,
	795, 0, 729, 730, 728, 731, 732, 735, 733, 734,
	796, 736, 737, 738, 1876, 0, 316, 0, 739, 740,
	797, 741, 742, 743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 327, 326, 328, 329, 330,
	331, 0, 332, 333, 0, 0, 0, 0, 0, 744,
	0, 0, 0, 334, 0, 335, 336, 337, 0, 338,
	339, 340, 341, 342, 343, 344, 745, 746, 0, 345,
	747, 346, 748, 0, 749, 347, 348, 349, 350, 351,
	352, 353, 0, 0, 0, 354, 750, 751, 752, 0,
	355, 356, 753, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 0, 382, 383, 384,
	0, 0, 0, 0, 0, 0, 0, 385, 386, 387,
	388, 389, 0, 390, 392, 754, 755, 0, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 756, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	757, 758, 426, 0, 0, 0, 0, 0, 0, 0,
	427, 428, 429, 759, 0, 0, 0, 430, 0, 431,
	432, 433, 0, 434, 435, 0, 0, 436, 437, 438,
	760, 761, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 762, 0, 763, 449, 0, 450, 451,
	452, 453, 454, 455, 456, 764, 765, 766, 552, 0,
	457, 458, 459, 0, 460, 461, 462, 463, 464, 0,
	0, 0, 465, 466, 467, 468, 0, 0, 0, 0,
	0, 767, 469, 553, 470, 768, 769, 0, 770, 0,
	471, 472, 474, 0, 771, 0, 473, 475, 476, 0,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 772, 488, 0,
	490, 491, 0, 0, 492, 493, 494, 495, 496, 497,
	500, 0, 0, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 0, 527, 528, 529, 530, 531, 539,
	541, 542, 537, 538, 540, 543, 544, 546, 534, 535,
	536, 0, 545, 532, 0, 533, 0, 0, 547, 548,
	549, 550, 0, 773, 551, 774, 554, 555, 0, 0,
	556, 0, 557, 0, 0, 559, 560, 561, 0, 0,
	562, 563, 775, 0, 564, 0, 776, 565, 566, 558,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	0, 577, 578, 777, 579, 580, 581, 778, 582, 583,
	584, 779, 585, 780, 586, 587, 0, 588, 589, 590,
	0, 591, 592, 593, 594, 595, 596, 597, 598, 781,
	599, 600, 602, 601, 603, 0, 604, 0, 605, 606,
	607, 0, 0, 0, 0, 0, 608, 609, 611, 0,
	612, 613, 614, 615, 610, 616, 617, 618, 619, 620,
	621, 0, 623, 624, 622, 625, 626, 0, 627, 628,
	629, 630, 631, 782, 632, 0, 633, 634, 642, 643,
	644, 635, 636, 638, 645, 637, 646, 647, 648, 649,
	651, 650, 0, 653, 654, 652, 655, 656, 657, 0,
	658, 783, 659, 639, 640, 660, 661, 0, 662, 663,
	664, 665, 666, 667, 668, 784, 0, 669, 0, 670,
	671, 672, 673, 674, 675, 677, 641, 678, 683, 684,
	785, 679, 680, 681, 682, 786, 686, 687, 688, 689,
	0, 690, 691, 0, 685, 676, 0, 692, 693, 694,
	695, 696, 697, 0, 698, 699, 0, 700, 787, 788,
	789, 790, 0, 712, 0, 701, 703, 704, 705, 706,
	791, 707, 792, 0, 708, 709, 710, 711, 702, 713,
	714, 0, 0, 715, 716, 717, 719, 721, 722, 718,
	720, 723, 0, 724, 0, 0, 725, 726, 727, 793,
	794, 795, 0, 729, 730, 728, 731, 732, 735, 733,
	734, 796, 736, 737, 738, 1868, 0, 316, 0, 739,
	740, 797, 741, 742, 743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	744, 0, 0, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 745, 746, 0,
	345, 747, 346, 748, 0, 749, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 750, 751, 752,
	0, 355, 356, 753, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 0, 390, 392, 754, 755, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 756, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 757, 758, 426, 0, 0, 0, 0, 0, 0,
	0, 427, 428, 429, 759, 0, 0, 0, 430, 0,
	431, 432, 433, 0, 434, 435, 0, 0, 436, 437,
	438, 760, 761, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 762, 0, 763, 449, 0, 450,
	451, 452, 453, 454, 455, 456, 764, 765, 766, 552,
	0, 457, 458, 459, 0, 460, 461, 462, 463, 464,
	0, 0, 0, 465, 466, 467, 468, 0, 0, 0,
	0, 0, 767, 469, 553, 470, 768, 769, 0, 770,
	0, 471, 472, 474, 0, 771, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 772, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	539, 541, 542, 537, 538, 540, 543, 544, 546, 534,
	535, 536, 0, 545, 532, 0, 533, 0, 0, 547,
	548, 549, 550, 0, 773, 551, 774, 554, 555, 0,
	0, 556, 0, 557, 0, 0, 559, 560, 561, 0,
	0, 562, 563, 775, 0, 564, 0, 776, 565, 566,
	558, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 0, 577, 578, 777, 579, 580, 581, 778, 582,
	583, 584, 779, 585, 780, 586, 587, 0, 588, 589,
	590, 0, 591, 592, 593, 594, 595, 596, 597, 598,
	781, 599, 600, 602, 601, 603, 0, 604, 0, 605,
	606, 607, 0, 0, 0, 0, 0, 608, 609, 611,
	0, 612, 613, 614, 615, 610, 616, 617, 618, 619,
	620, 621, 0, 623, 624, 622, 625, 626, 0, 627,
	628, 629, 630, 631, 782, 632, 0, 633, 634, 642,
	643, 644, 635, 636, 638, 645, 637, 646, 647, 648,
	649, 651, 650, 0, 653, 654, 652, 655, 656, 657,
	0, 658, 783, 659, 639, 640, 660, 661, 0, 662,
	663, 664, 665, 666, 667, 668, 784, 0, 669, 0,
	670, 671, 672, 673, 674, 675, 677, 641, 678, 683,
	684, 785, 679, 680, 681, 682, 786, 686, 687, 688,
	689, 0, 690, 691, 0, 685, 676, 0, 692, 693,
	694, 695, 696, 697, 0, 698, 699, 0, 700, 787,
	788, 789, 790, 0, 712, 0, 701, 703, 704, 705,
	706, 791, 707, 792, 0, 708, 709, 710, 711, 702,
	713, 714, 0, 0, 715, 716, 717, 719, 721, 722,
	718, 720, 723, 0, 724, 0, 0, 725, 726, 727,
	793, 794, 795, 0, 729, 730, 728, 731, 732, 735,
	733, 734, 796, 736, 737, 738, 883, 0, 316, 0,
	739, 740, 797, 741, 742, 743, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 327, 326, 328,
	329, 330, 331, 0, 332, 333, 0, 0, 0, 0,
	0, 744, 0, 0, 0, 334, 0, 335, 336, 337,
	0, 338, 339, 340, 341, 342, 343, 344, 745, 746,
	0, 345, 747, 346, 748, 0, 749, 347, 348, 349,
	350, 351, 352, 353, 0, 0, 0, 354, 750, 751,
	752, 0, 355, 879, 753, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 0, 382,
	383, 384, 0, 0, 0, 0, 0, 0, 0, 385,
	386, 387, 388, 389, 0, 390, 392, 754, 755, 0,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 756,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 757, 758, 426, 0, 0, 0, 0, 0,
	0, 0, 427, 428, 429, 759, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 0, 436,
	437, 438, 760, 761, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 762, 0, 763, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 764, 765, 766,
	552, 0, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 0,
	0, 0, 0, 767, 469, 553, 470, 768, 769, 0,
	770, 0, 471, 472, 474, 0, 771, 0, 473, 475,
	476, 0, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 772,
	488, 0, 490, 491, 0, 0, 492, 493, 494, 495,
	496, 884, 500, 0, 0, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 893, 0, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 0, 545, 532, 0, 533, 0, 0,
	547, 548, 549, 550, 0, 773, 551, 774, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 0, 564, 0, 776, 565,
	566, 558, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 779, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 781, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 0,
	892, 628, 629, 630, 631, 782, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 891, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 1853,
	657, 0, 658, 783, 659, 639, 640, 660, 661, 0,
	662, 663, 664, 665, 666, 667, 668, 784, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 785, 679, 680, 681, 682, 786, 686, 687,
	688, 689, 0, 690, 691, 0, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	889, 788, 789, 790, 0, 712, 0, 701, 703, 704,
	705, 706, 791, 707, 792, 0, 708, 709, 710, 711,
	702, 713, 714, 0, 0, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 0, 724, 0, 0, 725, 726,
	727, 793, 794, 795, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 1826, 0, 316,
	0, 739, 740, 797, 741, 742, 743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 744, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 745,
	746, 0, 345, 747, 346, 748, 0, 749, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 750,
	751, 752, 0, 355, 356, 753, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 754, 755,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	756, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 757, 758, 426, 0, 0, 0, 0,
	0, 0, 0, 427, 428, 429, 759, 0, 0, 0,
	430, 0, 431, 432, 433, 0, 434, 435, 0, 0,
	436, 437, 438, 760, 761, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 762, 0, 763, 449,
	0, 450, 451, 452, 453, 454, 455, 456, 1825, 765,
	766, 552, 0, 457, 458, 459, 0, 460, 461, 462,
	463, 464, 0, 0, 0, 465, 466, 467, 468, 0,
	0, 0, 0, 0, 767, 469, 553, 470, 768, 769,
	0, 770, 0, 471, 472, 474, 0, 771, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	772, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 539, 541, 542, 537, 538, 540, 543, 544,
	546, 534, 535, 536, 0, 545, 532, 0, 533, 0,
	0, 547, 548, 549, 550, 0, 773, 551, 774, 554,
	555, 0, 0, 556, 0, 557, 0, 0, 559, 560,
	561, 0, 0, 562, 563, 775, 0, 564, 0, 776,
	565, 566, 558, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 0, 577, 578, 777, 579, 580, 581,
	778, 582, 583, 584, 779, 585, 780, 586, 587, 0,
	588, 589, 590, 0, 591, 592, 593, 594, 595, 596,
	597, 598, 781, 599, 600, 602, 601, 603, 0, 604,
	0, 605, 606, 607, 0, 0, 0, 0, 0, 608,
	609, 611, 0, 612, 613, 614, 615, 610, 616, 617,
	618, 619, 620, 621, 0, 623, 624, 622, 625, 626,
	0, 627, 628, 629, 630, 631, 782, 632, 0, 633,
	634, 642, 643, 644, 635, 636, 638, 645, 637, 646,
	647, 648, 649, 651, 650, 0, 653, 654, 652, 655,
	656, 657, 0, 658, 783, 659, 639, 640, 660, 661,
	0, 662, 663, 664, 665, 666, 667, 668, 784, 0,
	669, 0, 670, 671, 672, 673, 674, 675, 677, 641,
	678, 683, 684, 785, 679, 680, 681, 682, 786, 686,
	687, 688, 689, 0, 690, 691, 0, 685, 676, 0,
	692, 693, 694, 695, 696, 697, 0, 698, 699, 0,
	700, 787, 788, 789, 790, 0, 712, 0, 701, 703,
	704, 705, 706, 791, 707, 792, 0, 708, 709, 710,
	711, 702, 713, 714, 0, 0, 715, 716, 717, 719,
	721, 722, 718, 720, 723, 0, 724, 0, 0, 725,
	726, 727, 793, 794, 795, 0, 729, 730, 728, 731,
	732, 735, 733, 734, 796, 736, 737, 738, 1809, 0,
	316, 0, 739, 740, 797, 741, 742, 743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 327,
	326, 328, 329, 330, 331, 0, 332, 333, 0, 0,
	0, 0, 0, 744, 0, 0, 0, 334, 0, 335,
	336, 337, 0, 338, 339, 340, 341, 342, 343, 344,
	745, 746, 0, 345, 747, 346, 748, 0, 749, 347,
	348, 349, 350, 351, 352, 353, 0, 0, 0, 354,
	750, 751, 752, 0, 355, 356, 753, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	0, 382, 383, 384, 0, 0, 0, 0, 0, 0,
	0, 385, 386, 387, 388, 389, 0, 390, 392, 754,
	755, 0, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 756, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 757, 758, 426, 0, 0, 0,
	0, 0, 0, 0, 427, 428, 429, 759, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	0, 436, 437, 438, 760, 761, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 762, 0, 763,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 1807,
	765, 766, 552, 0, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 0, 0, 0, 0, 767, 469, 553, 470, 768,
	769, 0, 770, 0, 471, 472, 474, 0, 771, 0,
	473, 475, 476, 0, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 772, 488, 0, 490, 491, 0, 0, 492, 493,
	494, 495, 496, 497, 500, 0, 0, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 0, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 0, 545, 532, 0, 533,
	0, 0, 547, 548, 549, 550, 0, 773, 551, 774,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 0, 564, 0,
	776, 565, 566, 558, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 779, 585, 780, 586, 587,
	0, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 781, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 0, 627, 628, 629, 630, 631, 782, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 0, 658, 783, 659, 639, 640, 660,
	661, 0, 662, 663, 664, 665, 666, 667, 668, 784,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 785, 679, 680, 681, 682, 786,
	686, 687, 688, 689, 0, 690, 691, 0, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 787, 788, 789, 790, 0, 712, 0, 701,
	703, 704, 705, 706, 791, 707, 792, 0, 708, 709,
	710, 711, 702, 713, 714, 0, 0, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 0, 724, 0, 0,
	725, 726, 727, 793, 794, 795, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 1801,
	0, 316, 0, 739, 740, 797, 741, 742, 743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 744, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 745, 746, 0, 345, 747, 346, 748, 0, 749,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 750, 751, 752, 0, 355, 356, 753, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	754, 755, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 756, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 757, 758, 426, 0, 0,
	0, 0, 0, 0, 0, 427, 428, 429, 759, 0,
	0, 0, 430, 0, 431, 432, 433, 0, 434, 435,
	0, 0, 436, 437, 438, 760, 761, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 762, 0,
	763, 449, 0, 450, 451, 452, 453, 454, 455, 456,
	764, 765, 766, 552, 0, 457, 458, 459, 0, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 0, 0, 0, 0, 0, 767, 469, 553, 470,
	768, 769, 0, 770, 0, 471, 472, 474, 0, 771,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 772, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 0, 545, 532, 0,
	533, 0, 0, 547, 548, 549, 550, 0, 773, 551,
	774, 554, 555, 0, 0, 556, 0, 557, 0, 0,
	559, 560, 561, 0, 0, 562, 563, 775, 0, 564,
	0, 776, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 0, 577, 578, 777, 579,
	580, 581, 778, 582, 583, 584, 779, 585, 780, 586,
	587, 0, 588, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 781, 599, 600, 602, 601, 603,
	0, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 609, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 0, 623, 624, 622,
	625, 626, 0, 627, 628, 629, 630, 631, 782, 632,
	0, 633, 634, 642, 643, 644, 635, 636, 638, 645,
	637, 646, 647, 648, 649, 651, 650, 0, 653, 654,
	652, 655, 656, 657, 0, 658, 783, 659, 639, 640,
	660, 661, 0, 662, 663, 664, 665, 666, 667, 668,
	784, 0, 669, 0, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 785, 679, 680, 681, 682,
	786, 686, 687, 688, 689, 0, 690, 691, 0, 685,
	676, 0, 692, 693, 694, 695, 696, 697, 0, 698,
	699, 0, 700, 787, 788, 789, 790, 0, 712, 0,
	701, 703, 704, 705, 706, 791, 707, 792, 0, 708,
	709, 710, 711, 702, 713, 714, 0, 0, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 0, 724, 0,
	0, 725, 726, 727, 793, 794, 795, 0, 729, 730,
	728, 731, 732, 735, 733, 734, 796, 736, 737, 738,
	1779, 0, 316, 0, 739, 740, 797, 741, 742, 743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 0, 744, 0, 0, 0, 334,
	0, 335, 336, 337, 0, 338, 339, 340, 341, 342,
	343, 344, 745, 746, 0, 345, 747, 346, 748, 0,
	749, 347, 348, 349, 350, 351, 352, 353, 0, 0,
	0, 354, 750, 751, 752, 0, 355, 356, 753, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 0, 382, 383, 384, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 387, 388, 389, 0, 390,
	392, 754, 755, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 756, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 757, 758, 426, 0,
	0, 0, 0, 0, 0, 0, 427, 428, 429, 759,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 0, 436, 437, 438, 760, 761, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 762,
	0, 763, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 1777, 765, 766, 552, 0, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 0, 0, 0, 0, 767, 469, 553,
	470, 768, 769, 0, 770, 0, 471, 472, 474, 0,
	771, 0, 473, 475, 476, 0, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 772, 488, 0, 490, 491, 0, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 0,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 0, 545, 532,
	0, 533, 0, 0, 547, 548, 549, 550, 0, 773,
	551, 774, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 0,
	564, 0, 776, 565, 566, 558, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 779, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 781, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 0, 627, 628, 629, 630, 631, 782,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 0, 658, 783, 659, 639,
	640, 660, 661, 0, 662, 663, 664, 665, 666, 667,
	668, 784, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 785, 679, 680, 681,
	682, 786, 686, 687, 688, 689, 0, 690, 691, 0,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 787, 788, 789, 790, 0, 712,
	0, 701, 703, 704, 705, 706, 791, 707, 792, 0,
	708, 709, 710, 711, 702, 713, 714, 0, 0, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 0, 724,
	0, 0, 725, 726, 727, 793, 794, 795, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 1770, 0, 316, 0, 739, 740, 797, 741, 742,
	743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 745, 746, 0, 345, 747, 346, 748,
	0, 749, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 750, 751, 752, 0, 355, 356, 753,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 754, 755, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 756, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 757, 758, 426,
	0, 0, 0, 0, 0, 0, 0, 427, 428, 429,
	759, 0, 0, 0, 430, 0, 431, 432, 433, 0,
	434, 435, 0, 0, 436, 437, 438, 760, 761, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	762, 0, 763, 449, 0, 450, 451, 452, 453, 454,
	455, 456, 764, 765, 766, 552, 0, 457, 458, 459,
	0, 460, 461, 462, 463, 464, 0, 0, 0, 465,
	466, 467, 468, 0, 0, 0, 0, 0, 767, 469,
	553, 470, 768, 769, 0, 770, 0, 471, 472, 474,
	0, 771, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 772, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 539, 541, 542, 537,
	538, 540, 543, 544, 546, 534, 535, 536, 0, 545,
	532, 0, 533, 0, 0, 547, 548, 549, 550, 0,
	773, 551, 774, 554, 555, 0, 0, 556, 0, 557,
	0, 0, 559, 560, 561, 0, 0, 562, 563, 775,
	0, 564, 0, 776, 565, 566, 558, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 0, 577, 578,
	777, 579, 580, 581, 778, 582, 583, 584, 779, 585,
	780, 586, 587, 0, 588, 589, 590, 0, 591, 592,
	593, 594, 595, 596, 597, 598, 781, 599, 600, 602,
	601, 603, 0, 604, 0, 605, 606, 607, 0, 0,
	0, 0, 0, 608, 609, 611, 0, 612, 613, 614,
	615, 610, 616, 617, 618, 619, 620, 621, 0, 623,
	624, 622, 625, 626, 0, 627, 628, 629, 630, 631,
	782, 632, 0, 633, 634, 642, 643, 644, 635, 636,
	638, 645, 637, 646, 647, 648, 649, 651, 650, 0,
	653, 654, 652, 655, 656, 657, 0, 658, 783, 659,
	639, 640, 660, 661, 0, 662, 663, 664, 665, 666,
	667, 668, 784, 0, 669, 0, 670, 671, 672, 673,
	674, 675, 677, 641, 678, 683, 684, 785, 679, 680,
	681, 682, 786, 686, 687, 688, 689, 0, 690, 691,
	0, 685, 676, 0, 692, 693, 694, 695, 696, 697,
	0, 698, 699, 0, 700, 787, 788, 789, 790, 0,
	712, 0, 701, 703, 704, 705, 706, 791, 707, 792,
	0, 708, 709, 710, 711, 702, 713, 714, 0, 0,
	715, 716, 717, 719, 721, 722, 718, 720, 723, 0,
	724, 0, 0, 725, 726, 727, 793, 794, 795, 0,
	729, 730, 728, 731, 732, 735, 733, 734, 796, 736,
	737, 738, 1731, 0, 316, 0, 739, 740, 797, 741,
	742, 743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 327, 326, 328, 329, 330, 331, 0,
	332, 333, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 334, 0, 335, 336, 337, 0, 338, 339, 340,
	341, 342, 343, 344, 745, 746, 0, 345, 747, 346,
	748, 0, 749, 347, 348, 349, 350, 351, 352, 353,
	0, 0, 0, 354, 750, 751, 752, 0, 355, 356,
	753, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 0, 382, 383, 384, 0, 0,
	0, 0, 0, 0, 0, 385, 386, 387, 388, 389,
	0, 390, 392, 754, 755, 0, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 756, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 757, 758,
	426, 0, 0, 0, 0, 0, 0, 0, 427, 428,
	429, 759, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 0, 436, 437, 438, 760, 761,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 762, 0, 763, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 764, 765, 766, 552, 0, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 0, 0, 0, 0, 767,
	469, 553, 470, 768, 769, 0, 770, 0, 471, 472,
	474, 0, 771, 0, 473, 475, 476, 0, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 772, 488, 0, 490, 491,
	0, 0, 492, 493, 494, 495, 496, 497, 500, 0,
	0, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 0, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 0,
	545, 532, 0, 533, 0, 0, 547, 548, 549, 550,
	0, 773, 551, 774, 554, 555, 0, 0, 556, 0,
	557, 0, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 0, 564, 0, 776, 565, 566, 558, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 779,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 781, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 0, 627, 628, 629, 630,
	631, 782, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 0, 658, 783,
	659, 639, 640, 660, 661, 0, 662, 663, 664, 665,
	666, 667, 668, 784, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 785, 679,
	680, 681, 682, 786, 686, 687, 688, 689, 0, 690,
	691, 0, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 787, 788, 789, 790,
	0, 712, 0, 701, 703, 704, 705, 706, 791, 707,
	792, 0, 708, 709, 710, 711, 702, 713, 714, 0,
	0, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	0, 724, 0, 0, 725, 726, 727, 793, 794, 795,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 1695, 0, 316, 0, 739, 740, 797,
	741, 742, 743, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 744, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 745, 746, 0, 345, 747,
	346, 748, 0, 749, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 750, 751, 752, 0, 355,
	356, 753, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 754, 755, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 756, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 757,
	758, 426, 0, 0, 0, 0, 0, 0, 0, 427,
	428, 429, 759, 0, 0, 0, 430, 0, 431, 432,
	433, 0, 434, 435, 0, 0, 436, 437, 438, 760,
	761, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 762, 0, 763, 449, 0, 450, 451, 452,
	453, 454, 455, 456, 764, 765, 766, 552, 0, 457,
	458, 459, 0, 460, 461, 462, 463, 464, 0, 0,
	0, 465, 466, 467, 468, 0, 0, 0, 0, 0,
	767, 469, 553, 470, 768, 769, 0, 770, 0, 471,
	472, 474, 0, 771, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 772, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 539, 541,
	542, 537, 538, 540, 543, 544, 546, 534, 535, 536,
	0, 545, 532, 0, 533, 0, 0, 547, 548, 549,
	550, 0, 773, 551, 774, 554, 555, 0, 0, 556,
	0, 557, 0, 0, 559, 560, 561, 0, 0, 562,
	563, 775, 0, 564, 0, 776, 565, 566, 558, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 0,
	577, 578, 777, 579, 580, 581, 778, 582, 583, 584,
	779, 585, 780, 586, 587, 0, 588, 589, 590, 0,
	591, 592, 593, 594, 595, 596, 597, 598, 781, 599,
	600, 602, 601, 603, 0, 604, 0, 605, 606, 607,
	0, 0, 0, 0, 0, 608, 609, 611, 0, 612,
	613, 614, 615, 610, 616, 617, 618, 619, 620, 621,
	0, 623, 624, 622, 625, 626, 0, 627, 628, 629,
	630, 631, 782, 632, 0, 633, 634, 642, 643, 644,
	635, 636, 638, 645, 637, 646, 647, 648, 649, 651,
	650, 0, 653, 654, 652, 655, 656, 657, 0, 658,
	783, 659, 639, 640, 660, 661, 0, 662, 663, 664,
	665, 666, 667, 668, 784, 0, 669, 0, 670, 671,
	672, 673, 674, 675, 677, 641, 678, 683, 684, 785,
	679, 680, 681, 682, 786, 686, 687, 688, 689, 0,
	690, 691, 0, 685, 676, 0, 692, 693, 694, 695,
	696, 697, 0, 698, 699, 0, 700, 787, 788, 789,
	790, 0, 712, 0, 701, 703, 704, 705, 706, 791,
	707, 792, 0, 708, 709, 710, 711, 702, 713, 714,
	0, 0, 715, 716, 717, 719, 721, 722, 718, 720,
	723, 0, 724, 0, 0, 725, 726, 727, 793, 794,
	795, 0, 729, 730, 728, 731, 732, 735, 733, 734,
	796, 736, 737, 738, 1542, 0, 316, 0, 739, 740,
	797, 741, 742, 743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 327, 326, 328, 329, 330,
	331, 0, 332, 333, 0, 0, 0, 0, 0, 744,
	0, 0, 0, 334, 0, 335, 336, 337, 0, 338,
	339, 340, 341, 342, 343, 344, 745, 746, 0, 345,
	747, 346, 748, 0, 749, 347, 348, 349, 350, 351,
	352, 353, 0, 0, 0, 354, 750, 751, 752, 0,
	355, 356, 753, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 0, 382, 383, 384,
	0, 0, 0, 0, 0, 0, 0, 385, 386, 387,
	388, 389, 0, 390, 392, 754, 755, 0, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 756, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	757, 758, 426, 0, 0, 0, 0, 0, 0, 0,
	427, 428, 429, 759, 0, 0, 0, 430, 0, 431,
	432, 433, 0, 434, 435, 0, 0, 436, 437, 438,
	760, 761, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 762, 0, 763, 449, 0, 450, 451,
	452, 453, 454, 455, 456, 764, 765, 766, 552, 0,
	457, 458, 459, 0, 460, 461, 462, 463, 464, 0,
	0, 0, 465, 466, 467, 468, 0, 0, 0, 0,
	0, 767, 469, 553, 470, 768, 769, 0, 770, 0,
	471, 472, 474, 0, 771, 0, 473, 475, 476, 0,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 772, 488, 0,
	490, 491, 0, 0, 492, 493, 494, 495, 496, 497,
	500, 0, 0, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 0, 527, 528, 529, 530, 531, 539,
	541, 542, 537, 538, 540, 543, 544, 546, 534, 535,
	536, 0, 545, 532, 0, 533, 0, 0, 547, 548,
	549, 550, 0, 773, 551, 774, 554, 555, 0, 0,
	556, 0, 557, 0, 0, 559, 560, 561, 0, 0,
	562, 563, 775, 0, 564, 0, 776, 565, 566, 558,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	0, 577, 578, 777, 579, 580, 581, 778, 582, 583,
	584, 779, 585, 780, 586, 587, 0, 588, 589, 590,
	0, 591, 592, 593, 594, 595, 596, 597, 598, 781,
	599, 600, 602, 601, 603, 0, 604, 0, 605, 606,
	607, 0, 0, 0, 0, 0, 608, 609, 611, 0,
	612, 613, 614, 615, 610, 616, 617, 618, 619, 620,
	621, 0, 623, 624, 622, 625, 626, 0, 892, 628,
	629, 630, 631, 782, 632, 0, 633, 634, 642, 643,
	644, 635, 636, 638, 891, 637, 646, 647, 648, 649,
	651, 650, 0, 653, 654, 652, 655, 656, 657, 0,
	658, 783, 659, 639, 640, 660, 661, 0, 662, 663,
	664, 665, 666, 667, 668, 784, 0, 669, 0, 670,
	671, 672, 673, 674, 675, 677, 641, 678, 683, 684,
	785, 679, 680, 681, 682, 786, 686, 687, 688, 689,
	0, 690, 691, 0, 685, 676, 0, 692, 693, 694,
	695, 696, 697, 0, 698, 699, 0, 700, 889, 788,
	789, 790, 0, 712, 0, 701, 703, 704, 705, 706,
	791, 707, 792, 0, 708, 709, 710, 711, 702, 713,
	714, 0, 0, 715, 716, 717, 719, 721, 722, 718,
	720, 723, 0, 724, 0, 0, 725, 726, 727, 793,
	794, 795, 0, 729, 730, 728, 731, 732, 735, 733,
	734, 796, 736, 737, 738, 1513, 0, 316, 0, 739,
	740, 797, 741, 742, 743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	744, 0, 0, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 745, 746, 0,
	345, 747, 346, 748, 0, 749, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 750, 751, 752,
	0, 355, 356, 753, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 0, 390, 392, 754, 755, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 756, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 757, 758, 426, 0, 0, 0, 0, 0, 0,
	0, 427, 428, 429, 759, 0, 0, 0, 430, 0,
	431, 432, 433, 0, 434, 435, 0, 0, 436, 437,
	438, 760, 761, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 762, 0, 763, 449, 0, 450,
	451, 452, 453, 454, 455, 456, 1512, 765, 766, 552,
	0, 457, 458, 459, 0, 460, 461, 462, 463, 464,
	0, 0, 0, 465, 466, 467, 468, 0, 0, 0,
	0, 0, 767, 469, 553, 470, 768, 769, 0, 770,
	0, 471, 472, 474, 0, 771, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 772, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	539, 541, 542, 537, 538, 540, 543, 544, 546, 534,
	535, 536, 0, 545, 532, 0, 533, 0, 0, 547,
	548, 549, 550, 0, 773, 551, 774, 554, 555, 0,
	0, 556, 0, 557, 0, 0, 559, 560, 561, 0,
	0, 562, 563, 775, 0, 564, 0, 776, 565, 566,
	558, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 0, 577, 578, 777, 579, 580, 581, 778, 582,
	583, 584, 779, 585, 780, 586, 587, 0, 588, 589,
	590, 0, 591, 592, 593, 594, 595, 596, 597, 598,
	781, 599, 600, 602, 601, 603, 0, 604, 0, 605,
	606, 607, 0, 0, 0, 0, 0, 608, 609, 611,
	0, 612, 613, 614, 615, 610, 616, 617, 618, 619,
	620, 621, 0, 623, 624, 622, 625, 626, 0, 627,
	628, 629, 630, 631, 782, 632, 0, 633, 634, 642,
	643, 644, 635, 636, 638, 645, 637, 646, 647, 648,
	649, 651, 650, 0, 653, 654, 652, 655, 656, 657,
	0, 658, 783, 659, 639, 640, 660, 661, 0, 662,
	663, 664, 665, 666, 667, 668, 784, 0, 669, 0,
	670, 671, 672, 673, 674, 675, 677, 641, 678, 683,
	684, 785, 679, 680, 681, 682, 786, 686, 687, 688,
	689, 0, 690, 691, 0, 685, 676, 0, 692, 693,
	694, 695, 696, 697, 0, 698, 699, 0, 700, 787,
	788, 789, 790, 0, 712, 0, 701, 703, 704, 705,
	706, 791, 707, 792, 0, 708, 709, 710, 711, 702,
	713, 714, 0, 0, 715, 716, 717, 719, 721, 722,
	718, 720, 723, 0, 724, 0, 0, 725, 726, 727,
	793, 794, 795, 0, 729, 730, 728, 731, 732, 735,
	733, 734, 796, 736, 737, 738, 1505, 0, 316, 0,
	739, 740, 797, 741, 742, 743, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 327, 326, 328,
	329, 330, 331, 0, 332, 333, 0, 0, 0, 0,
	0, 744, 0, 0, 0, 334, 0, 335, 336, 337,
	0, 338, 339, 340, 341, 342, 343, 344, 745, 746,
	0, 345, 747, 346, 748, 0, 749, 347, 348, 349,
	350, 351, 352, 353, 0, 0, 0, 354, 750, 751,
	752, 0, 355, 356, 753, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 0, 382,
	383, 384, 0, 0, 0, 0, 0, 0, 0, 385,
	386, 387, 388, 389, 0, 390, 392, 754, 755, 0,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 756,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 757, 758, 426, 0, 0, 0, 0, 0,
	0, 0, 427, 428, 429, 759, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 0, 436,
	437, 438, 760, 761, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 762, 0, 763, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 1504, 765, 766,
	552, 0, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 0,
	0, 0, 0, 767, 469, 553, 470, 768, 769, 0,
	770, 0, 471, 472, 474, 0, 771, 0, 473, 475,
	476, 0, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 772,
	488, 0, 490, 491, 0, 0, 492, 493, 494, 495,
	496, 497, 500, 0, 0, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 0, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 0, 545, 532, 0, 533, 0, 0,
	547, 548, 549, 550, 0, 773, 551, 774, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 0, 564, 0, 776, 565,
	566, 558, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 779, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 781, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 0,
	627, 628, 629, 630, 631, 782, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 0, 658, 783, 659, 639, 640, 660, 661, 0,
	662, 663, 664, 665, 666, 667, 668, 784, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 785, 679, 680, 681, 682, 786, 686, 687,
	688, 689, 0, 690, 691, 0, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	787, 788, 789, 790, 0, 712, 0, 701, 703, 704,
	705, 706, 791, 707, 792, 0, 708, 709, 710, 711,
	702, 713, 714, 0, 0, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 0, 724, 0, 0, 725, 726,
	727, 793, 794, 795, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 316, 0, 0,
	0, 739, 740, 797, 741, 742, 743, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 1446, 332, 333, 0, 0, 0, 0, 0,
	744, 0, 0, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 745, 746, 0,
	345, 747, 346, 748, 0, 749, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 750, 751, 752,
	0, 355, 356, 753, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 0, 390, 392, 754, 755, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 756, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 757, 758, 426, 0, 0, 0, 0, 0, 0,
	0, 427, 428, 429, 759, 0, 0, 0, 430, 0,
	431, 432, 433, 0, 434, 435, 0, 0, 436, 437,
	438, 760, 761, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 762, 0, 763, 449, 0, 450,
	451, 452, 453, 454, 455, 456, 764, 765, 766, 552,
	0, 457, 458, 459, 0, 460, 461, 462, 463, 464,
	0, 0, 0, 465, 466, 467, 468, 0, 0, 0,
	0, 0, 767, 469, 553, 470, 768, 769, 0, 770,
	0, 471, 472, 474, 0, 771, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 772, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	539, 541, 542, 537, 538, 540, 543, 544, 546, 534,
	535, 536, 0, 545, 532, 0, 533, 0, 0, 547,
	548, 549, 550, 0, 773, 551, 774, 554, 555, 0,
	0, 556, 0, 557, 0, 0, 559, 560, 561, 0,
	0, 562, 563, 775, 0, 564, 0, 776, 565, 566,
	558, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 0, 577, 578, 777, 579, 580, 581, 778, 582,
	583, 584, 779, 585, 780, 586, 587, 0, 588, 589,
	590, 0, 591, 592, 593, 594, 595, 596, 597, 598,
	781, 599, 600, 602, 601, 603, 0, 604, 0, 605,
	606, 607, 0, 0, 0, 0, 0, 608, 609, 611,
	0, 612, 613, 614, 615, 610, 616, 617, 618, 619,
	620, 621, 0, 623, 624, 622, 625, 626, 0, 627,
	628, 629, 630, 631, 782, 632, 0, 633, 634, 642,
	643, 644, 635, 636, 638, 645, 637, 646, 647, 648,
	649, 651, 650, 0, 653, 654, 652, 655, 656, 657,
	0, 658, 783, 659, 639, 640, 660, 661, 0, 662,
	663, 664, 665, 666, 667, 668, 784, 0, 669, 0,
	670, 671, 672, 673, 674, 675, 677, 641, 678, 683,
	684, 785, 679, 680, 681, 682, 786, 686, 687, 688,
	689, 0, 690, 691, 0, 685, 676, 0, 692, 693,
	694, 695, 696, 697, 0, 698, 699, 0, 700, 787,
	788, 789, 790, 0, 712, 0, 701, 703, 704, 705,
	706, 791, 707, 792, 0, 708, 709, 710, 711, 702,
	713, 714, 0, 0, 715, 716, 717, 719, 721, 722,
	718, 720, 723, 0, 724, 0, 0, 725, 726, 727,
	793, 794, 795, 0, 729, 730, 728, 731, 732, 735,
	733, 734, 796, 736, 737, 738, 903, 0, 316, 0,
	739, 740, 797, 741, 742, 743, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 327, 326, 328,
	329, 330, 331, 0, 332, 333, 0, 0, 0, 0,
	0, 744, 0, 0, 0, 334, 0, 335, 336, 337,
	0, 338, 339, 340, 341, 342, 343, 344, 745, 746,
	0, 345, 747, 346, 748, 0, 749, 347, 348, 349,
	350, 351, 352, 353, 0, 0, 0, 354, 750, 751,
	752, 0, 355, 356, 753, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 0, 382,
	383, 384, 0, 0, 0, 0, 0, 0, 0, 385,
	386, 387, 388, 389, 0, 390, 392, 754, 755, 0,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 756,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 757, 758, 426, 0, 0, 0, 0, 0,
	0, 0, 427, 428, 429, 759, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 0, 436,
	437, 438, 760, 761, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 762, 0, 763, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 764, 765, 766,
	552, 0, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 0,
	0, 0, 0, 767, 469, 553, 470, 768, 769, 0,
	770, 0, 471, 472, 474, 0, 771, 0, 473, 475,
	476, 0, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 772,
	488, 0, 490, 491, 0, 0, 492, 493, 494, 495,
	496, 497, 500, 0, 0, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 0, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 0, 545, 532, 0, 533, 0, 0,
	547, 548, 549, 550, 0, 773, 551, 774, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 0, 564, 0, 776, 565,
	566, 558, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 779, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 781, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 0,
	627, 628, 629, 630, 631, 782, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 0, 658, 783, 659, 639, 640, 660, 661, 0,
	662, 663, 664, 665, 666, 667, 668, 784, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 785, 679, 680, 681, 682, 786, 686, 687,
	688, 689, 0, 690, 691, 0, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	787, 788, 789, 790, 0, 712, 0, 701, 703, 704,
	705, 706, 791, 707, 792, 0, 708, 709, 710, 711,
	702, 713, 714, 0, 0, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 0, 724, 0, 0, 725, 726,
	727, 793, 794, 795, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 883, 0, 316,
	0, 739, 740, 797, 741, 742, 743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 744, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 745,
	746, 0, 345, 747, 346, 748, 0, 749, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 750,
	751, 752, 0, 355, 879, 753, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 878, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 754, 755,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	756, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 757, 758, 426, 0, 0, 0, 0,
	0, 0, 0, 427, 428, 429, 759, 0, 0, 0,
	430, 0, 431, 432, 433, 0, 434, 435, 0, 0,
	436, 437, 438, 760, 761, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 762, 0, 763, 449,
	0, 450, 451, 452, 453, 454, 455, 456, 764, 765,
	766, 552, 0, 457, 458, 459, 0, 460, 461, 462,
	463, 464, 0, 0, 0, 465, 466, 467, 468, 0,
	0, 0, 0, 0, 767, 469, 553, 470, 768, 769,
	0, 770, 0, 471, 472, 474, 0, 771, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	772, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 884, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 893, 0, 527, 528, 529,
	530, 531, 539, 541, 542, 537, 538, 540, 543, 544,
	546, 534, 535, 536, 0, 545, 532, 0, 533, 0,
	0, 547, 548, 549, 550, 0, 773, 551, 774, 554,
	555, 0, 0, 556, 0, 557, 0, 0, 559, 560,
	561, 0, 0, 562, 563, 775, 0, 564, 0, 776,
	565, 566, 558, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 0, 577, 578, 777, 579, 580, 581,
	778, 582, 583, 584, 779, 585, 780, 586, 587, 0,
	588, 589, 590, 0, 591, 592, 593, 594, 595, 596,
	597, 598, 781, 599, 600, 602, 601, 603, 0, 604,
	0, 605, 606, 607, 0, 0, 0, 0, 0, 608,
	609, 611, 0, 612, 613, 614, 615, 610, 616, 617,
	618, 619, 620, 621, 0, 623, 624, 622, 625, 626,
	0, 892, 628, 629, 630, 631, 880, 632, 0, 633,
	634, 642, 643, 644, 635, 636, 638, 891, 637, 646,
	647, 648, 649, 651, 650, 0, 653, 654, 652, 655,
	881, 657, 0, 658, 783, 659, 639, 640, 660, 661,
	0, 662, 663, 664, 665, 666, 667, 668, 784, 0,
	669, 0, 670, 671, 672, 673, 674, 675, 677, 641,
	678, 683, 684, 785, 679, 680, 681, 682, 786, 686,
	687, 688, 689, 0, 690, 691, 0, 685, 676, 0,
	692, 693, 694, 695, 696, 697, 0, 698, 699, 0,
	700, 889, 788, 789, 790, 0, 712, 0, 701, 885,
	704, 705, 706, 791, 707, 792, 0, 708, 709, 710,
	711, 702, 713, 714, 0, 0, 715, 716, 717, 719,
	721, 722, 718, 720, 723, 0, 724, 0, 0, 725,
	726, 727, 793, 794, 795, 0, 729, 730, 728, 731,
	732, 735, 733, 734, 796, 736, 737, 738, 872, 0,
	316, 0, 739, 740, 797, 741, 742, 743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 327,
	326, 328, 329, 330, 331, 0, 332, 333, 0, 0,
	0, 0, 0, 744, 0, 0, 0, 334, 0, 335,
	336, 337, 0, 338, 339, 340, 341, 342, 343, 344,
	745, 746, 0, 345, 747, 346, 748, 0, 749, 347,
	348, 349, 350, 351, 352, 353, 0, 0, 0, 354,
	750, 751, 752, 0, 355, 356, 753, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	0, 382, 383, 384, 0, 0, 0, 0, 0, 0,
	0, 385, 386, 387, 388, 389, 0, 390, 392, 754,
	755, 0, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 756, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 757, 758, 426, 0, 0, 0,
	0, 0, 0, 0, 427, 428, 429, 759, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	0, 436, 437, 438, 760, 761, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 762, 0, 763,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 764,
	765, 766, 552, 0, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 0, 0, 0, 0, 767, 469, 553, 470, 768,
	769, 0, 770, 0, 471, 472, 474, 0, 771, 0,
	473, 475, 476, 0, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 772, 488, 0, 490, 491, 0, 0, 492, 493,
	494, 495, 496, 497, 500, 0, 0, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 0, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 0, 545, 532, 0, 533,
	0, 0, 547, 548, 549, 550, 0, 773, 551, 774,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 0, 564, 0,
	776, 565, 566, 558, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 779, 585, 780, 586, 587,
	0, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 781, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 0, 627, 628, 629, 630, 631, 782, 632, 0,
	633, 634, 873, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 0, 658, 783, 659, 639, 640, 660,
	661, 0, 662, 663, 664, 665, 666, 667, 668, 784,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 785, 679, 680, 681, 682, 786,
	686, 687, 688, 689, 0, 690, 691, 0, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 787, 788, 789, 790, 0, 712, 0, 701,
	703, 704, 705, 706, 791, 707, 792, 0, 708, 709,
	710, 711, 702, 713, 714, 0, 0, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 0, 724, 0, 0,
	725, 726, 727, 793, 794, 795, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 834,
	0, 316, 0, 739, 740, 797, 741, 742, 743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 744, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 745, 746, 0, 345, 747, 346, 748, 0, 749,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 750, 751, 752, 0, 355, 356, 753, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	754, 755, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 756, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 757, 758, 426, 0, 0,
	0, 0, 0, 0, 0, 427, 428, 429, 759, 0,
	0, 0, 430, 0, 431, 432, 433, 0, 434, 435,
	0, 0, 436, 437, 438, 760, 761, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 762, 0,
	763, 449, 0, 450, 451, 452, 453, 454, 455, 456,
	764, 765, 766, 552, 0, 457, 458, 459, 0, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 0, 0, 0, 0, 0, 767, 469, 553, 470,
	768, 769, 0, 770, 0, 471, 472, 474, 0, 771,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 772, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 0, 545, 532, 0,
	533, 0, 0, 547, 548, 549, 550, 0, 773, 551,
	774, 554, 555, 0, 0, 556, 0, 557, 0, 0,
	559, 560, 561, 0, 0, 562, 563, 775, 0, 564,
	0, 776, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 0, 577, 578, 777, 579,
	580, 581, 778, 582, 583, 584, 779, 585, 780, 586,
	587, 0, 588, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 781, 599, 600, 602, 601, 603,
	0, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 609, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 0, 623, 624, 622,
	625, 626, 0, 627, 628, 629, 630, 631, 782, 632,
	0, 633, 634, 642, 643, 644, 635, 636, 638, 645,
	637, 646, 647, 648, 649, 651, 650, 0, 653, 654,
	652, 655, 656, 657, 0, 658, 783, 659, 639, 640,
	660, 661, 0, 662, 663, 664, 665, 666, 667, 668,
	784, 0, 669, 0, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 785, 679, 680, 681, 682,
	786, 686, 687, 688, 689, 0, 690, 691, 0, 685,
	676, 0, 692, 693, 694, 695, 696, 697, 0, 698,
	699, 0, 700, 787, 788, 789, 790, 0, 712, 0,
	701, 703, 704, 705, 706, 791, 707, 792, 0, 708,
	709, 710, 711, 702, 713, 714, 0, 0, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 0, 724, 0,
	0, 725, 726, 727, 793, 794, 795, 0, 729, 730,
	728, 731, 732, 735, 733, 734, 796, 736, 737, 738,
	826, 0, 316, 0, 739, 740, 797, 741, 742, 743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 0, 744, 0, 0, 0, 334,
	0, 335, 336, 337, 0, 338, 339, 340, 341, 342,
	343, 344, 745, 746, 0, 345, 747, 346, 748, 0,
	749, 347, 348, 349, 350, 351, 352, 353, 0, 0,
	0, 354, 750, 751, 752, 0, 355, 356, 753, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 0, 382, 383, 384, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 387, 388, 389, 0, 390,
	392, 754, 755, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 756, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 757, 758, 426, 0,
	0, 0, 0, 0, 0, 0, 427, 428, 429, 759,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 0, 436, 437, 438, 760, 761, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 762,
	0, 763, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 764, 765, 766, 552, 0, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 0, 0, 0, 0, 767, 469, 553,
	470, 768, 769, 0, 770, 0, 471, 472, 474, 0,
	771, 0, 473, 475, 476, 0, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 772, 488, 0, 490, 491, 0, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 0,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 0, 545, 532,
	0, 533, 0, 0, 547, 548, 549, 550, 0, 773,
	551, 774, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 0,
	564, 0, 776, 565, 566, 558, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 779, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 781, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 0, 627, 628, 629, 630, 631, 782,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 0, 658, 783, 659, 639,
	640, 660, 661, 0, 662, 663, 664, 665, 666, 667,
	668, 784, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 785, 679, 680, 681,
	682, 786, 686, 687, 688, 689, 0, 690, 691, 0,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 787, 788, 789, 790, 0, 712,
	0, 701, 703, 704, 705, 706, 791, 707, 792, 0,
	708, 709, 710, 711, 702, 713, 714, 0, 0, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 0, 724,
	0, 0, 725, 726, 727, 793, 794, 795, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 803, 0, 316, 0, 739, 740, 797, 741, 742,
	743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 745, 746, 0, 345, 747, 346, 748,
	0, 749, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 750, 751, 752, 0, 355, 356, 753,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 754, 755, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 756, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 757, 758, 426,
	0, 0, 0, 0, 0, 0, 0, 427, 428, 429,
	759, 0, 0, 0, 430, 0, 431, 432, 433, 0,
	434, 435, 0, 0, 436, 437, 438, 760, 761, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	762, 0, 763, 449, 0, 450, 451, 452, 453, 454,
	455, 456, 764, 765, 766, 552, 0, 457, 458, 459,
	0, 460, 461, 462, 463, 464, 0, 0, 0, 465,
	466, 467, 468, 0, 0, 0, 0, 0, 767, 469,
	553, 470, 768, 769, 0, 770, 0, 471, 472, 474,
	0, 771, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 772, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 539, 541, 542, 537,
	538, 540, 543, 544, 546, 534, 535, 536, 0, 545,
	532, 0, 533, 0, 0, 547, 548, 549, 550, 0,
	773, 551, 774, 554, 555, 0, 0, 556, 0, 557,
	0, 0, 559, 560, 561, 0, 0, 562, 563, 775,
	0, 564, 0, 776, 565, 566, 558, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 0, 577, 578,
	777, 579, 580, 581, 778, 582, 583, 584, 779, 585,
	780, 586, 587, 0, 588, 589, 590, 0, 591, 592,
	593, 594, 595, 596, 597, 598, 781, 599, 600, 602,
	601, 603, 0, 604, 0, 605, 606, 607, 0, 0,
	0, 0, 0, 608, 609, 611, 0, 612, 613, 614,
	615, 610, 616, 617, 618, 619, 620, 621, 0, 623,
	624, 622, 625, 626, 0, 627, 628, 629, 630, 631,
	782, 632, 0, 633, 634, 642, 643, 644, 635, 636,
	638, 645, 637, 646, 647, 648, 649, 651, 650, 0,
	653, 654, 652, 655, 656, 657, 0, 658, 783, 659,
	639, 640, 660, 661, 0, 662, 663, 664, 665, 666,
	667, 668, 784, 0, 669, 0, 670, 671, 672, 673,
	674, 675, 677, 641, 678, 683, 684, 785, 679, 680,
	681, 682, 786, 686, 687, 688, 689, 0, 690, 691,
	0, 685, 676, 0, 692, 693, 694, 695, 696, 697,
	0, 698, 699, 0, 700, 787, 788, 789, 790, 0,
	712, 0, 701, 703, 704, 705, 706, 791, 707, 792,
	0, 708, 709, 710, 711, 702, 713, 714, 0, 0,
	715, 716, 717, 719, 721, 722, 718, 720, 723, 0,
	724, 0, 0, 725, 726, 727, 793, 794, 795, 0,
	729, 730, 728, 731, 732, 735, 733, 734, 796, 736,
	737, 738, 316, 0, 0, 0, 739, 740, 797, 741,
	742, 743, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 0, 744, 0, 0, 0, 334,
	0, 335, 336, 337, 0, 338, 339, 340, 341, 342,
	343, 344, 745, 746, 0, 345, 747, 346, 748, 0,
	749, 347, 348, 349, 350, 351, 352, 353, 0, 0,
	0, 354, 750, 751, 752, 0, 355, 356, 753, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 0, 382, 383, 384, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 387, 388, 389, 0, 390,
	392, 754, 755, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 756, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 757, 758, 426, 0,
	0, 0, 0, 0, 0, 0, 427, 428, 429, 759,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 0, 436, 437, 438, 760, 761, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 762,
	0, 763, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 764, 765, 766, 552, 0, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 0, 0, 0, 0, 767, 469, 553,
	470, 768, 769, 0, 770, 0, 471, 472, 474, 0,
	771, 0, 473, 475, 476, 0, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 772, 488, 0, 490, 491, 0, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 0,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 0, 545, 532,
	0, 533, 0, 0, 547, 548, 549, 550, 0, 773,
	551, 774, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 0,
	564, 0, 776, 565, 566, 558, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 779, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 781, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 0, 627, 628, 629, 630, 631, 782,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 0, 658, 783, 659, 639,
	640, 660, 661, 0, 662, 663, 664, 665, 666, 667,
	668, 784, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 785, 679, 680, 681,
	682, 786, 686, 687, 688, 689, 0, 690, 691, 0,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 787, 788, 789, 790, 0, 712,
	0, 701, 703, 704, 705, 706, 791, 707, 792, 0,
	708, 709, 710, 711, 702, 713, 714, 0, 0, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 0, 724,
	0, 0, 725, 726, 727, 793, 794, 795, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 316, 0, 0, 0, 739, 740, 797, 741, 742,
	743, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 744, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 745, 746, 0, 345, 747, 346, 748, 0, 749,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 750, 751, 752, 0, 355, 356, 753, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	754, 755, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 756, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 757, 758, 426, 0, 0,
	0, 0, 0, 0, 0, 427, 428, 429, 759, 0,
	0, 0, 430, 0, 431, 432, 433, 0, 434, 435,
	0, 0, 436, 437, 438, 760, 761, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 762, 0,
	763, 449, 0, 450, 451, 452, 453, 454, 455, 456,
	4184, 765, 766, 552, 0, 457, 458, 459, 0, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 0, 0, 0, 0, 0, 767, 469, 553, 470,
	768, 769, 0, 770, 0, 471, 472, 474, 0, 771,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 772, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 0, 545, 532, 0,
	533, 0, 0, 547, 548, 549, 550, 0, 773, 551,
	774, 554, 555, 0, 0, 556, 0, 557, 0, 0,
	559, 560, 561, 0, 0, 562, 563, 775, 0, 564,
	0, 776, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 0, 577, 578, 777, 579,
	580, 581, 778, 582, 583, 584, 779, 585, 780, 586,
	587, 0, 588, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 781, 599, 600, 602, 601, 603,
	0, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 609, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 0, 623, 624, 622,
	625, 626, 0, 627, 628, 629, 630, 631, 782, 632,
	0, 633, 634, 642, 643, 644, 635, 636, 638, 645,
	637, 646, 647, 648, 649, 651, 650, 0, 653, 654,
	652, 655, 656, 657, 0, 658, 783, 659, 639, 640,
	660, 661, 0, 662, 663, 664, 665, 666, 667, 668,
	784, 0, 669, 0, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 785, 679, 680, 681, 682,
	786, 686, 687, 688, 689, 0, 690, 691, 0, 685,
	676, 0, 692, 693, 694, 695, 696, 697, 0, 698,
	699, 0, 700, 787, 788, 789, 790, 0, 712, 0,
	701, 703, 704, 705, 706, 791, 707, 792, 0, 708,
	709, 710, 711, 702, 713, 714, 0, 0, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 0, 724, 0,
	0, 725, 726, 727, 793, 794, 795, 0, 729, 730,
	728, 731, 732, 735, 733, 734, 796, 736, 737, 738,
	316, 0, 0, 0, 739, 740, 797, 741, 742, 743,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 327,
	326, 328, 329, 330, 331, 0, 332, 333, 0, 0,
	0, 0, 0, 744, 0, 0, 0, 334, 0, 335,
	336, 337, 0, 338, 339, 340, 341, 342, 343, 344,
	745, 746, 0, 345, 747, 346, 748, 0, 749, 347,
	348, 349, 350, 351, 352, 353, 0, 0, 0, 354,
	750, 751, 752, 0, 355, 356, 753, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	0, 382, 383, 384, 0, 0, 0, 0, 0, 0,
	0, 385, 386, 387, 388, 389, 0, 390, 392, 754,
	755, 0, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 756, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 757, 758, 426, 0, 0, 0,
	0, 0, 0, 0, 427, 428, 429, 759, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	0, 436, 437, 438, 760, 761, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 762, 0, 763,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 764,
	765, 766, 552, 0, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 0, 0, 0, 0, 767, 469, 553, 470, 768,
	769, 0, 770, 0, 471, 472, 474, 0, 771, 0,
	473, 475, 476, 0, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 772, 488, 0, 490, 491, 0, 0, 492, 493,
	494, 495, 496, 497, 500, 0, 0, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 0, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 0, 545, 532, 0, 533,
	0, 0, 547, 548, 549, 550, 0, 773, 551, 774,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 0, 564, 0,
	776, 565, 566, 558, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 779, 585, 780, 586, 587,
	0, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 781, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 0, 892, 628, 629, 630, 631, 782, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 891, 637,
	646, 647, 648, 649, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 0, 658, 783, 659, 639, 640, 660,
	661, 0, 662, 663, 664, 665, 666, 667, 668, 784,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 785, 679, 680, 681, 682, 786,
	686, 687, 688, 689, 0, 690, 691, 0, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 889, 788, 789, 790, 0, 712, 0, 701,
	703, 704, 705, 706, 791, 707, 792, 0, 708, 709,
	710, 711, 702, 713, 714, 0, 0, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 0, 724, 0, 0,
	725, 726, 727, 793, 794, 795, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 316,
	0, 0, 0, 739, 740, 797, 741, 742, 743, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 744, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 745,
	746, 0, 345, 747, 346, 748, 0, 749, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 750,
	751, 752, 0, 355, 356, 753, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 754, 755,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	756, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 757, 758, 426, 0, 0, 0, 0,
	0, 0, 0, 427, 428, 429, 759, 0, 0, 0,
	430, 0, 431, 432, 433, 0, 434, 435, 0, 0,
	436, 437, 438, 760, 761, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 762, 0, 763, 449,
	0, 450, 451, 452, 453, 454, 455, 456, 4075, 765,
	766, 552, 0, 457, 458, 459, 0, 460, 461, 462,
	463, 464, 0, 0, 0, 465, 466, 467, 468, 0,
	0, 0, 0, 0, 767, 469, 553, 470, 768, 769,
	0, 770, 0, 471, 472, 474, 0, 771, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	772, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 539, 541, 542, 537, 538, 540, 543, 544,
	546, 534, 535, 536, 0, 545, 532, 0, 533, 0,
	0, 547, 548, 549, 550, 0, 773, 551, 774, 554,
	555, 0, 0, 556, 0, 557, 0, 0, 559, 560,
	561, 0, 0, 562, 563, 775, 0, 564, 0, 776,
	565, 566, 558, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 0, 577, 578, 777, 579, 580, 581,
	778, 582, 583, 584, 779, 585, 780, 586, 587, 0,
	588, 589, 590, 0, 591, 592, 593, 594, 595, 596,
	597, 598, 781, 599, 600, 602, 601, 603, 0, 604,
	0, 605, 606, 607, 0, 0, 0, 0, 0, 608,
	609, 611, 0, 612, 613, 614, 615, 610, 616, 617,
	618, 619, 620, 621, 0, 623, 624, 622, 625, 626,
	0, 627, 628, 629, 630, 631, 782, 632, 0, 633,
	634, 642, 643, 644, 635, 636, 638, 645, 637, 646,
	647, 648, 649, 651, 650, 0, 653, 654, 652, 655,
	656, 657, 0, 658, 783, 659, 639, 640, 660, 661,
	0, 662, 663, 664, 665, 666, 667, 668, 784, 0,
	669, 0, 670, 671, 672, 673, 674, 675, 677, 641,
	678, 683, 684, 785, 679, 680, 681, 682, 786, 686,
	687, 688, 689, 0, 690, 691, 0, 685, 676, 0,
	692, 693, 694, 695, 696, 697, 0, 698, 699, 0,
	700, 787, 788, 789, 790, 0, 712, 0, 701, 703,
	704, 705, 706, 791, 707, 792, 0, 708, 709, 710,
	711, 702, 713, 714, 0, 0, 715, 716, 717, 719,
	721, 722, 718, 720, 723, 0, 724, 0, 0, 725,
	726, 727, 793, 794, 795, 0, 729, 730, 728, 731,
	732, 735, 733, 734, 796, 736, 737, 738, 316, 0,
	0, 0, 739, 740, 797, 741, 742, 743, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 327, 326, 328,
	329, 330, 331, 0, 332, 333, 0, 0, 0, 0,
	0, 744, 0, 0, 0, 334, 0, 335, 336, 337,
	0, 338, 339, 340, 341, 342, 343, 344, 745, 746,
	0, 345, 747, 346, 748, 0, 749, 347, 348, 349,
	350, 351, 352, 353, 0, 0, 0, 354, 750, 751,
	752, 0, 355, 356, 753, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 0, 382,
	383, 384, 0, 0, 0, 0, 0, 0, 0, 385,
	386, 387, 388, 389, 0, 390, 392, 754, 755, 0,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 756,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 757, 758, 426, 0, 0, 0, 0, 0,
	0, 0, 427, 428, 429, 759, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 0, 436,
	437, 438, 760, 761, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 762, 0, 763, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 4044, 765, 766,
	552, 0, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 0,
	0, 0, 0, 767, 469, 553, 470, 768, 769, 0,
	770, 0, 471, 472, 474, 0, 771, 0, 473, 475,
	476, 0, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 772,
	488, 0, 490, 491, 0, 0, 492, 493, 494, 495,
	496, 497, 500, 0, 0, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 0, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 0, 545, 532, 0, 533, 0, 0,
	547, 548, 549, 550, 0, 773, 551, 774, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 0, 564, 0, 776, 565,
	566, 558, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 779, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 781, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 0,
	627, 628, 629, 630, 631, 782, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 0, 658, 783, 659, 639, 640, 660, 661, 0,
	662, 663, 664, 665, 666, 667, 668, 784, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 785, 679, 680, 681, 682, 786, 686, 687,
	688, 689, 0, 690, 691, 0, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	787, 788, 789, 790, 0, 712, 0, 701, 703, 704,
	705, 706, 791, 707, 792, 0, 708, 709, 710, 711,
	702, 713, 714, 0, 0, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 0, 724, 0, 0, 725, 726,
	727, 793, 794, 795, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 316, 0, 0,
	0, 739, 740, 797, 741, 742, 743, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	744, 0, 0, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 745, 746, 0,
	345, 747, 346, 748, 0, 749, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 750, 751, 752,
	0, 355, 356, 753, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 0, 390, 392, 754, 755, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 756, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 757, 758, 426, 0, 0, 0, 0, 0, 0,
	0, 427, 428, 429, 759, 0, 0, 0, 430, 0,
	431, 432, 433, 0, 434, 435, 0, 0, 436, 437,
	438, 760, 761, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 762, 0, 763, 449, 0, 450,
	451, 452, 453, 454, 455, 456, 4040, 765, 766, 552,
	0, 457, 458, 459, 0, 460, 461, 462, 463, 464,
	0, 0, 0, 465, 466, 467, 468, 0, 0, 0,
	0, 0, 767, 469, 553, 470, 768, 769, 0, 770,
	0, 471, 472, 474, 0, 771, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 772, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	539, 541, 542, 537, 538, 540, 543, 544, 546, 534,
	535, 536, 0, 545, 532, 0, 533, 0, 0, 547,
	548, 549, 550, 0, 773, 551, 774, 554, 555, 0,
	0, 556, 0, 557, 0, 0, 559, 560, 561, 0,
	0, 562, 563, 775, 0, 564, 0, 776, 565, 566,
	558, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 0, 577, 578, 777, 579, 580, 581, 778, 582,
	583, 584, 779, 585, 780, 586, 587, 0, 588, 589,
	590, 0, 591, 592, 593, 594, 595, 596, 597, 598,
	781, 599, 600, 602, 601, 603, 0, 604, 0, 605,
	606, 607, 0, 0, 0, 0, 0, 608, 609, 611,
	0, 612, 613, 614, 615, 610, 616, 617, 618, 619,
	620, 621, 0, 623, 624, 622, 625, 626, 0, 627,
	628, 629, 630, 631, 782, 632, 0, 633, 634, 642,
	643, 644, 635, 636, 638, 645, 637, 646, 647, 648,
	649, 651, 650, 0, 653, 654, 652, 655, 656, 657,
	0, 658, 783, 659, 639, 640, 660, 661, 0, 662,
	663, 664, 665, 666, 667, 668, 784, 0, 669, 0,
	670, 671, 672, 673, 674, 675, 677, 641, 678, 683,
	684, 785, 679, 680, 681, 682, 786, 686, 687, 688,
	689, 0, 690, 691, 0, 685, 676, 0, 692, 693,
	694, 695, 696, 697, 0, 698, 699, 0, 700, 787,
	788, 789, 790, 0, 712, 0, 701, 703, 704, 705,
	706, 791, 707, 792, 0, 708, 709, 710, 711, 702,
	713, 714, 0, 0, 715, 716, 717, 719, 721, 722,
	718, 720, 723, 0, 724, 0, 0, 725, 726, 727,
	793, 794, 795, 0, 729, 730, 728, 731, 732, 735,
	733, 734, 796, 736, 737, 738, 316, 0, 0, 0,
	739, 740, 797, 741, 742, 743, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 327, 326, 328, 329, 330,
	331, 0, 332, 333, 0, 0, 0, 0, 0, 744,
	0, 0, 0, 334, 0, 335, 336, 337, 0, 338,
	339, 340, 341, 342, 343, 344, 745, 746, 0, 345,
	747, 346, 748, 0, 749, 347, 348, 349, 350, 351,
	352, 353, 0, 0, 0, 354, 750, 751, 752, 0,
	355, 356, 753, 0, 0, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 0, 382, 383, 384,
	0, 0, 0, 0, 0, 0, 0, 385, 386, 387,
	388, 389, 0, 390, 392, 754, 755, 0, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 756, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	757, 758, 426, 0, 0, 0, 0, 0, 0, 0,
	427, 428, 429, 759, 0, 0, 0, 430, 0, 431,
	432, 433, 0, 434, 435, 0, 0, 436, 437, 438,
	760, 761, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 762, 0, 763, 449, 0, 450, 451,
	452, 453, 454, 455, 456, 3983, 765, 766, 552, 0,
	457, 458, 459, 0, 460, 461, 462, 463, 464, 0,
	0, 0, 465, 466, 467, 468, 0, 0, 0, 0,
	0, 767, 469, 553, 470, 768, 769, 0, 770, 0,
	471, 472, 474, 0, 771, 0, 473, 475, 476, 0,
	477, 0, 0, 0, 478, 479, 480, 481, 482, 483,
	484, 0, 485, 487, 486, 0, 489, 772, 488, 0,
	490, 491, 0, 0, 492, 493, 494, 495, 496, 497,
	500, 0, 0, 498, 499, 501, 502, 0, 503, 504,
	506, 509, 505, 507, 508, 510, 523, 524, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	526, 0, 525, 0, 527, 528, 529, 530, 531, 539,
	541, 542, 537, 538, 540, 543, 544, 546, 534, 535,
	536, 0, 545, 532, 0, 533, 0, 0, 547, 548,
	549, 550, 0, 773, 551, 774, 554, 555, 0, 0,
	556, 0, 557, 0, 0, 559, 560, 561, 0, 0,
	562, 563, 775, 0, 564, 0, 776, 565, 566, 558,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	0, 577, 578, 777, 579, 580, 581, 778, 582, 583,
	584, 779, 585, 780, 586, 587, 0, 588, 589, 590,
	0, 591, 592, 593, 594, 595, 596, 597, 598, 781,
	599, 600, 602, 601, 603, 0, 604, 0, 605, 606,
	607, 0, 0, 0, 0, 0, 608, 609, 611, 0,
	612, 613, 614, 615, 610, 616, 617, 618, 619, 620,
	621, 0, 623, 624, 622, 625, 626, 0, 627, 628,
	629, 630, 631, 782, 632, 0, 633, 634, 642, 643,
	644, 635, 636, 638, 645, 637, 646, 647, 648, 649,
	651, 650, 0, 653, 654, 652, 655, 656, 657, 0,
	658, 783, 659, 639, 640, 660, 661, 0, 662, 663,
	664, 665, 666, 667, 668, 784, 0, 669, 0, 670,
	671, 672, 673, 674, 675, 677, 641, 678, 683, 684,
	785, 679, 680, 681, 682, 786, 686, 687, 688, 689,
	0, 690, 691, 0, 685, 676, 0, 692, 693, 694,
	695, 696, 697, 0, 698, 699, 0, 700, 787, 788,
	789, 790, 0, 712, 0, 701, 703, 704, 705, 706,
	791, 707, 792, 0, 708, 709, 710, 711, 702, 713,
	714, 0, 0, 715, 716, 717, 719, 721, 722, 718,
	720, 723, 0, 724, 0, 0, 725, 726, 727, 793,
	794, 795, 0, 729, 730, 728, 731, 732, 735, 733,
	734, 796, 736, 737, 738, 316, 0, 0, 0, 739,
	740, 797, 741, 742, 743, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 744, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 745, 746, 0, 345, 747,
	346, 748, 0, 749, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 750, 751, 752, 0, 355,
	356, 753, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 754, 755, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 756, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 757,
	758, 426, 0, 0, 0, 0, 0, 0, 0, 427,
	428, 429, 759, 0, 0, 0, 430, 0, 431, 432,
	433, 0, 434, 435, 0, 0, 436, 437, 438, 760,
	761, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 762, 0, 763, 449, 0, 450, 451, 452,
	453, 454, 455, 456, 3981, 765, 766, 552, 0, 457,
	458, 459, 0, 460, 461, 462, 463, 464, 0, 0,
	0, 465, 466, 467, 468, 0, 0, 0, 0, 0,
	767, 469, 553, 470, 768, 769, 0, 770, 0, 471,
	472, 474, 0, 771, 0, 473, 475, 476, 0, 477,
	0, 0, 0, 478, 479, 480, 481, 482, 483, 484,
	0, 485, 487, 486, 0, 489, 772, 488, 0, 490,
	491, 0, 0, 492, 493, 494, 495, 496, 497, 500,
	0, 0, 498, 499, 501, 502, 0, 503, 504, 506,
	509, 505, 507, 508, 510, 523, 524, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 526,
	0, 525, 0, 527, 528, 529, 530, 531, 539, 541,
	542, 537, 538, 540, 543, 544, 546, 534, 535, 536,
	0, 545, 532, 0, 533, 0, 0, 547, 548, 549,
	550, 0, 773, 551, 774, 554, 555, 0, 0, 556,
	0, 557, 0, 0, 559, 560, 561, 0, 0, 562,
	563, 775, 0, 564, 0, 776, 565, 566, 558, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 0,
	577, 578, 777, 579, 580, 581, 778, 582, 583, 584,
	779, 585, 780, 586, 587, 0, 588, 589, 590, 0,
	591, 592, 593, 594, 595, 596, 597, 598, 781, 599,
	600, 602, 601, 603, 0, 604, 0, 605, 606, 607,
	0, 0, 0, 0, 0, 608, 609, 611, 0, 612,
	613, 614, 615, 610, 616, 617, 618, 619, 620, 621,
	0, 623, 624, 622, 625, 626, 0, 627, 628, 629,
	630, 631, 782, 632, 0, 633, 634, 642, 643, 644,
	635, 636, 638, 645, 637, 646, 647, 648, 649, 651,
	650, 0, 653, 654, 652, 655, 656, 657, 0, 658,
	783, 659, 639, 640, 660, 661, 0, 662, 663, 664,
	665, 666, 667, 668, 784, 0, 669, 0, 670, 671,
	672, 673, 674, 675, 677, 641, 678, 683, 684, 785,
	679, 680, 681, 682, 786, 686, 687, 688, 689, 0,
	690, 691, 0, 685, 676, 0, 692, 693, 694, 695,
	696, 697, 0, 698, 699, 0, 700, 787, 788, 789,
	790, 0, 712, 0, 701, 703, 704, 705, 706, 791,
	707, 792, 0, 708, 709, 710, 711, 702, 713, 714,
	0, 0, 715, 716, 717, 719, 721, 722, 718, 720,
	723, 0, 724, 0, 0, 725, 726, 727, 793, 794,
	795, 0, 729, 730, 728, 731, 732, 735, 733, 734,
	796, 736, 737, 738, 316, 0, 0, 0, 739, 740,
	797, 741, 742, 743, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 327, 326, 328, 329, 330, 331, 0,
	332, 333, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 334, 0, 335, 336, 337, 0, 338, 339, 340,
	341, 342, 343, 344, 745, 746, 0, 345, 747, 346,
	748, 0, 749, 347, 348, 349, 350, 351, 352, 353,
	0, 0, 0, 354, 750, 751, 752, 0, 355, 356,
	753, 0, 0, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 0, 382, 383, 384, 0, 0,
	0, 0, 0, 0, 0, 385, 386, 387, 388, 389,
	0, 390, 392, 754, 755, 0, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 756, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 757, 758,
	426, 0, 0, 0, 0, 0, 0, 0, 427, 428,
	429, 759, 0, 0, 0, 430, 0, 431, 432, 433,
	0, 434, 435, 0, 0, 436, 437, 438, 760, 761,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 762, 0, 763, 449, 0, 450, 451, 452, 453,
	454, 455, 456, 3969, 765, 766, 552, 0, 457, 458,
	459, 0, 460, 461, 462, 463, 464, 0, 0, 0,
	465, 466, 467, 468, 0, 0, 0, 0, 0, 767,
	469, 553, 470, 768, 769, 0, 770, 0, 471, 472,
	474, 0, 771, 0, 473, 475, 476, 0, 477, 0,
	0, 0, 478, 479, 480, 481, 482, 483, 484, 0,
	485, 487, 486, 0, 489, 772, 488, 0, 490, 491,
	0, 0, 492, 493, 494, 495, 496, 497, 500, 0,
	0, 498, 499, 501, 502, 0, 503, 504, 506, 509,
	505, 507, 508, 510, 523, 524, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 526, 0,
	525, 0, 527, 528, 529, 530, 531, 539, 541, 542,
	537, 538, 540, 543, 544, 546, 534, 535, 536, 0,
	545, 532, 0, 533, 0, 0, 547, 548, 549, 550,
	0, 773, 551, 774, 554, 555, 0, 0, 556, 0,
	557, 0, 0, 559, 560, 561, 0, 0, 562, 563,
	775, 0, 564, 0, 776, 565, 566, 558, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 0, 577,
	578, 777, 579, 580, 581, 778, 582, 583, 584, 779,
	585, 780, 586, 587, 0, 588, 589, 590, 0, 591,
	592, 593, 594, 595, 596, 597, 598, 781, 599, 600,
	602, 601, 603, 0, 604, 0, 605, 606, 607, 0,
	0, 0, 0, 0, 608, 609, 611, 0, 612, 613,
	614, 615, 610, 616, 617, 618, 619, 620, 621, 0,
	623, 624, 622, 625, 626, 0, 627, 628, 629, 630,
	631, 782, 632, 0, 633, 634, 642, 643, 644, 635,
	636, 638, 645, 637, 646, 647, 648, 649, 651, 650,
	0, 653, 654, 652, 655, 656, 657, 0, 658, 783,
	659, 639, 640, 660, 661, 0, 662, 663, 664, 665,
	666, 667, 668, 784, 0, 669, 0, 670, 671, 672,
	673, 674, 675, 677, 641, 678, 683, 684, 785, 679,
	680, 681, 682, 786, 686, 687, 688, 689, 0, 690,
	691, 0, 685, 676, 0, 692, 693, 694, 695, 696,
	697, 0, 698, 699, 0, 700, 787, 788, 789, 790,
	0, 712, 0, 701, 703, 704, 705, 706, 791, 707,
	792, 0, 708, 709, 710, 711, 702, 713, 714, 0,
	0, 715, 716, 717, 719, 721, 722, 718, 720, 723,
	0, 724, 0, 0, 725, 726, 727, 793, 794, 795,
	0, 729, 730, 728, 731, 732, 735, 733, 734, 796,
	736, 737, 738, 316, 0, 0, 0, 739, 740, 797,
	741, 742, 743, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 745, 746, 0, 345, 747, 346, 748,
	0, 749, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 750, 751, 752, 0, 355, 356, 753,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 754, 755, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 756, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 757, 758, 426,
	0, 0, 0, 0, 0, 0, 0, 427, 428, 429,
	759, 0, 0, 0, 430, 0, 431, 432, 433, 0,
	434, 435, 0, 0, 436, 437, 438, 760, 761, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	762, 0, 763, 449, 0, 450, 451, 452, 453, 454,
	455, 456, 3966, 765, 766, 552, 0, 457, 458, 459,
	0, 460, 461, 462, 463, 464, 0, 0, 0, 465,
	466, 467, 468, 0, 0, 0, 0, 0, 767, 469,
	553, 470, 768, 769, 0, 770, 0, 471, 472, 474,
	0, 771, 0, 473, 475, 476, 0, 477, 0, 0,
	0, 478, 479, 480, 481, 482, 483, 484, 0, 485,
	487, 486, 0, 489, 772, 488, 0, 490, 491, 0,
	0, 492, 493, 494, 495, 496, 497, 500, 0, 0,
	498, 499, 501, 502, 0, 503, 504, 506, 509, 505,
	507, 508, 510, 523, 524, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 526, 0, 525,
	0, 527, 528, 529, 530, 531, 539, 541, 542, 537,
	538, 540, 543, 544, 546, 534, 535, 536, 0, 545,
	532, 0, 533, 0, 0, 547, 548, 549, 550, 0,
	773, 551, 774, 554, 555, 0, 0, 556, 0, 557,
	0, 0, 559, 560, 561, 0, 0, 562, 563, 775,
	0, 564, 0, 776, 565, 566, 558, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 0, 577, 578,
	777, 579, 580, 581, 778, 582, 583, 584, 779, 585,
	780, 586, 587, 0, 588, 589, 590, 0, 591, 592,
	593, 594, 595, 596, 597, 598, 781, 599, 600, 602,
	601, 603, 0, 604, 0, 605, 606, 607, 0, 0,
	0, 0, 0, 608, 609, 611, 0, 612, 613, 614,
	615, 610, 616, 617, 618, 619, 620, 621, 0, 623,
	624, 622, 625, 626, 0, 627, 628, 629, 630, 631,
	782, 632, 0, 633, 634, 642, 643, 644, 635, 636,
	638, 645, 637, 646, 647, 648, 649, 651, 650, 0,
	653, 654, 652, 655, 656, 657, 0, 658, 783, 659,
	639, 640, 660, 661, 0, 662, 663, 664, 665, 666,
	667, 668, 784, 0, 669, 0, 670, 671, 672, 673,
	674, 675, 677, 641, 678, 683, 684, 785, 679, 680,
	681, 682, 786, 686, 687, 688, 689, 0, 690, 691,
	0, 685, 676, 0, 692, 693, 694, 695, 696, 697,
	0, 698, 699, 0, 700, 787, 788, 789, 790, 0,
	712, 0, 701, 703, 704, 705, 706, 791, 707, 792,
	0, 708, 709, 710, 711, 702, 713, 714, 0, 0,
	715, 716, 717, 719, 721, 722, 718, 720, 723, 0,
	724, 0, 0, 725, 726, 727, 793, 794, 795, 0,
	729, 730, 728, 731, 732, 735, 733, 734, 796, 736,
	737, 738, 316, 0, 0, 0, 739, 740, 797, 741,
	742, 743, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 0, 744, 0, 0, 0, 334,
	0, 335, 336, 337, 0, 338, 339, 340, 341, 342,
	343, 344, 745, 746, 0, 345, 747, 346, 748, 0,
	749, 347, 348, 349, 350, 351, 352, 353, 0, 0,
	0, 354, 750, 751, 752, 0, 355, 356, 753, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 0, 382, 383, 384, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 387, 388, 389, 0, 390,
	392, 754, 755, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 756, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 757, 758, 426, 0,
	0, 0, 0, 0, 0, 0, 427, 428, 429, 759,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 0, 436, 437, 438, 760, 761, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 762,
	0, 763, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 3531, 765, 766, 552, 0, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 0, 0, 0, 0, 767, 469, 553,
	470, 768, 769, 0, 770, 0, 471, 472, 474, 0,
	771, 0, 473, 475, 476, 0, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 772, 488, 0, 490, 491, 0, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 0,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 0, 545, 532,
	0, 533, 0, 0, 547, 548, 549, 550, 0, 773,
	551, 774, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 775, 0,
	564, 0, 776, 565, 566, 558, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 777,
	579, 580, 581, 778, 582, 583, 584, 779, 585, 780,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 781, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 0, 627, 628, 629, 630, 631, 782,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 0, 658, 783, 659, 639,
	640, 660, 661, 0, 662, 663, 664, 665, 666, 667,
	668, 784, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 785, 679, 680, 681,
	682, 786, 686, 687, 688, 689, 0, 690, 691, 0,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 787, 788, 789, 790, 0, 712,
	0, 701, 703, 704, 705, 706, 791, 707, 792, 0,
	708, 709, 710, 711, 702, 713, 714, 0, 0, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 0, 724,
	0, 0, 725, 726, 727, 793, 794, 795, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 796, 736, 737,
	738, 316, 0, 0, 0, 739, 740, 797, 741, 742,
	743, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 744, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 745, 746, 0, 345, 747, 346, 748, 0, 749,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 750, 751, 752, 0, 355, 356, 753, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	754, 755, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 756, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 757, 758, 426, 0, 0,
	0, 0, 0, 0, 0, 427, 428, 429, 759, 0,
	0, 0, 430, 0, 431, 432, 433, 0, 434, 435,
	0, 0, 436, 437, 438, 760, 761, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 762, 0,
	763, 449, 0, 450, 451, 452, 453, 454, 455, 456,
	764, 765, 766, 552, 0, 457, 458, 459, 0, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 0, 0, 0, 0, 0, 767, 469, 553, 470,
	768, 769, 0, 770, 0, 471, 472, 474, 0, 771,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 772, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 0, 545, 532, 0,
	533, 0, 0, 547, 548, 549, 550, 0, 773, 551,
	774, 554, 555, 0, 0, 556, 0, 557, 0, 0,
	559, 560, 561, 0, 0, 562, 563, 775, 0, 564,
	0, 776, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 0, 577, 578, 777, 579,
	580, 581, 778, 582, 583, 584, 779, 585, 780, 586,
	587, 0, 588, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 781, 599, 600, 602, 601, 603,
	0, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 609, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 0, 623, 624, 622,
	625, 626, 0, 627, 628, 629, 630, 631, 782, 632,
	0, 633, 634, 873, 643, 644, 635, 636, 638, 645,
	637, 646, 647, 648, 649, 651, 650, 0, 653, 654,
	652, 655, 656, 657, 0, 658, 783, 659, 639, 640,
	660, 661, 0, 662, 663, 664, 665, 666, 667, 668,
	784, 0, 669, 0, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 785, 679, 680, 681, 682,
	786, 686, 687, 688, 689, 0, 690, 691, 0, 685,
	676, 0, 692, 693, 694, 695, 696, 697, 0, 698,
	699, 0, 700, 787, 788, 789, 790, 0, 712, 0,
	701, 703, 704, 705, 706, 791, 707, 792, 0, 708,
	709, 710, 711, 702, 713, 714, 0, 0, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 0, 724, 0,
	0, 725, 726, 727, 793, 794, 795, 0, 729, 730,
	728, 731, 732, 735, 733, 734, 796, 736, 737, 738,
	316, 0, 0, 0, 739, 740, 797, 741, 742, 743,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 327,
	326, 328, 329, 330, 331, 0, 332, 333, 0, 0,
	0, 0, 0, 744, 0, 2642, 0, 334, 0, 335,
	336, 337, 0, 338, 339, 340, 341, 342, 343, 344,
	745, 746, 0, 345, 747, 346, 748, 0, 749, 347,
	348, 349, 350, 351, 352, 353, 0, 0, 0, 354,
	750, 751, 752, 0, 355, 356, 753, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	0, 382, 383, 384, 0, 0, 0, 0, 0, 0,
	0, 385, 386, 387, 388, 389, 0, 390, 392, 754,
	755, 0, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 756, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 757, 758, 426, 0, 0, 0,
	0, 0, 0, 0, 427, 428, 429, 759, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	0, 436, 437, 438, 760, 761, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 762, 0, 763,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 764,
	765, 766, 552, 0, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 0, 0, 0, 0, 767, 469, 553, 470, 768,
	769, 0, 770, 0, 471, 472, 474, 0, 771, 0,
	473, 475, 476, 0, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 772, 488, 0, 490, 491, 0, 0, 492, 493,
	494, 495, 496, 497, 500, 0, 0, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 0, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 0, 545, 532, 0, 533,
	0, 0, 547, 548, 549, 550, 0, 773, 551, 774,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 775, 0, 564, 0,
	776, 565, 566, 558, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 777, 579, 580,
	581, 778, 582, 583, 584, 779, 585, 780, 586, 587,
	0, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 781, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 0, 627, 628, 629, 630, 631, 782, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 0, 0, 783, 659, 639, 640, 660,
	661, 0, 662, 663, 664, 665, 666, 667, 668, 784,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 785, 679, 680, 681, 682, 786,
	686, 687, 688, 689, 0, 690, 691, 0, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 787, 788, 789, 790, 0, 712, 0, 701,
	703, 704, 705, 706, 791, 707, 792, 0, 708, 709,
	710, 711, 702, 713, 714, 0, 0, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 0, 724, 0, 0,
	725, 726, 727, 793, 794, 795, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 796, 736, 737, 738, 316,
	0, 0, 0, 739, 740, 797, 741, 742, 743, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 744, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 745,
	746, 0, 345, 747, 346, 748, 0, 749, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 750,
	751, 752, 0, 355, 356, 753, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 754, 755,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	756, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 757, 758, 426, 0, 0, 0, 0,
	0, 0, 0, 427, 428, 429, 759, 0, 0, 0,
	430, 0, 431, 432, 433, 0, 434, 435, 0, 0,
	436, 437, 438, 760, 761, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 762, 0, 763, 449,
	0, 450, 451, 452, 453, 454, 455, 456, 1474, 765,
	766, 552, 0, 457, 458, 459, 0, 460, 461, 462,
	463, 464, 0, 0, 0, 465, 466, 467, 468, 0,
	0, 0, 0, 0, 767, 469, 553, 470, 768, 769,
	0, 770, 0, 471, 472, 474, 0, 771, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	772, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 539, 541, 542, 537, 538, 540, 543, 544,
	546, 534, 535, 536, 0, 545, 532, 0, 533, 0,
	0, 547, 548, 549, 550, 0, 773, 551, 774, 554,
	555, 0, 0, 556, 0, 557, 0, 0, 559, 560,
	561, 0, 0, 562, 563, 775, 0, 564, 0, 776,
	565, 566, 558, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 0, 577, 578, 777, 579, 580, 581,
	778, 582, 583, 584, 779, 585, 780, 586, 587, 0,
	588, 589, 590, 0, 591, 592, 593, 594, 595, 596,
	597, 598, 781, 599, 600, 602, 601, 603, 0, 604,
	0, 605, 606, 607, 0, 0, 0, 0, 0, 608,
	609, 611, 0, 612, 613, 614, 615, 610, 616, 617,
	618, 619, 620, 621, 0, 623, 624, 622, 625, 626,
	0, 627, 628, 629, 630, 631, 782, 632, 0, 633,
	634, 642, 643, 644, 635, 636, 638, 645, 637, 646,
	647, 648, 649, 651, 650, 0, 653, 654, 652, 655,
	656, 657, 0, 658, 783, 659, 639, 640, 660, 661,
	0, 662, 663, 664, 665, 666, 667, 668, 784, 0,
	669, 0, 670, 671, 672, 673, 674, 675, 677, 641,
	678, 683, 684, 785, 679, 680, 681, 682, 786, 686,
	687, 688, 689, 0, 690, 691, 0, 685, 676, 0,
	692, 693, 694, 695, 696, 697, 0, 698, 699, 0,
	700, 787, 788, 789, 790, 0, 712, 0, 701, 703,
	704, 705, 706, 791, 707, 792, 0, 708, 709, 710,
	711, 702, 713, 714, 0, 0, 715, 716, 717, 719,
	721, 722, 718, 720, 723, 0, 724, 0, 0, 725,
	726, 727, 793, 794, 795, 0, 729, 730, 728, 731,
	732, 735, 733, 734, 796, 736, 737, 738, 316, 0,
	0, 0, 739, 740, 797, 741, 742, 743, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 327, 326, 328,
	329, 330, 331, 0, 332, 333, 0, 0, 0, 0,
	0, 744, 0, 0, 0, 334, 0, 335, 336, 337,
	0, 338, 339, 340, 341, 342, 343, 344, 745, 746,
	0, 345, 747, 346, 748, 0, 749, 347, 348, 349,
	350, 351, 352, 353, 0, 0, 0, 354, 750, 751,
	752, 0, 355, 356, 753, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 0, 382,
	383, 384, 0, 0, 0, 0, 0, 0, 0, 385,
	386, 387, 388, 389, 0, 390, 392, 754, 755, 0,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 756,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 757, 758, 426, 0, 0, 0, 0, 0,
	0, 0, 427, 428, 429, 759, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 0, 436,
	437, 438, 760, 761, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 762, 0, 763, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 764, 765, 766,
	552, 0, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 0,
	0, 0, 0, 767, 469, 553, 470, 768, 769, 0,
	770, 0, 471, 472, 474, 0, 771, 0, 473, 475,
	476, 0, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 772,
	488, 0, 490, 491, 0, 0, 492, 493, 494, 495,
	496, 497, 500, 0, 0, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 0, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 0, 545, 532, 0, 533, 0, 0,
	547, 548, 549, 550, 0, 773, 551, 774, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 775, 0, 564, 0, 776, 565,
	566, 558, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 777, 579, 580, 581, 778,
	582, 583, 584, 779, 585, 780, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 781, 599, 600, 1394, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 0,
	627, 628, 629, 630, 631, 782, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 0, 658, 783, 659, 639, 640, 660, 661, 0,
	662, 663, 664, 665, 666, 667, 668, 784, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 785, 679, 680, 681, 682, 786, 686, 687,
	688, 689, 0, 690, 691, 0, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	787, 788, 789, 790, 0, 712, 0, 701, 703, 704,
	705, 706, 791, 707, 792, 0, 708, 709, 710, 711,
	702, 713, 714, 0, 0, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 0, 724, 0, 0, 725, 726,
	727, 793, 794, 795, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 796, 736, 737, 738, 316, 0, 0,
	0, 739, 740, 797, 741, 742, 743, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	744, 0, 0, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 745, 746, 0,
	345, 747, 346, 748, 0, 749, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 750, 751, 752,
	0, 355, 356, 753, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 0, 390, 392, 754, 755, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 756, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 757, 758, 426, 0, 0, 0, 0, 0, 0,
	0, 427, 428, 429, 759, 0, 0, 0, 430, 0,
	431, 432, 433, 0, 434, 435, 0, 0, 436, 437,
	438, 760, 761, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 762, 0, 763, 0, 0, 450,
	451, 452, 453, 454, 455, 456, 764, 765, 766, 552,
	0, 457, 458, 459, 0, 460, 461, 462, 463, 464,
	0, 0, 0, 465, 466, 467, 468, 0, 0, 0,
	0, 0, 767, 469, 553, 470, 768, 769, 0, 770,
	0, 471, 472, 474, 0, 771, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 772, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	539, 541, 542, 537, 538, 540, 543, 544, 546, 534,
	535, 536, 0, 545, 532, 0, 533, 0, 0, 547,
	548, 549, 550, 0, 773, 551, 774, 554, 555, 0,
	0, 556, 0, 557, 0, 0, 559, 560, 561, 0,
	0, 562, 563, 775, 0, 564, 0, 776, 565, 566,
	558, 567, 568, 569, 0, 571, 572, 573, 574, 575,
	576, 0, 577, 578, 777, 579, 580, 581, 778, 582,
	583, 584, 779, 585, 780, 586, 587, 0, 588, 589,
	590, 0, 591, 592, 593, 594, 595, 0, 597, 598,
	781, 599, 600, 602, 601, 603, 0, 604, 0, 605,
	606, 607, 0, 0, 0, 0, 0, 608, 609, 611,
	0, 612, 613, 614, 615, 610, 616, 617, 618, 619,
	620, 621, 0, 623, 624, 622, 625, 626, 0, 627,
	628, 629, 630, 631, 782, 0, 0, 633, 634, 642,
	643, 644, 635, 636, 638, 645, 637, 646, 647, 648,
	649, 651, 650, 0, 653, 654, 652, 655, 656, 657,
	0, 658, 783, 659, 639, 640, 660, 661, 0, 662,
	663, 664, 665, 666, 667, 668, 784, 0, 669, 0,
	670, 671, 672, 673, 674, 675, 677, 641, 678, 683,
	684, 785, 679, 680, 681, 682, 786, 686, 687, 688,
	689, 0, 690, 691, 0, 685, 676, 0, 692, 693,
	694, 695, 696, 697, 0, 698, 699, 0, 700, 787,
	788, 789, 790, 0, 712, 0, 701, 703, 704, 705,
	706, 791, 707, 792, 0, 708, 709, 710, 711, 702,
	713, 714, 0, 0, 715, 716, 717, 719, 721, 722,
	718, 720, 723, 0, 724, 0, 0, 725, 726, 727,
	793, 794, 795, 0, 729, 730, 728, 731, 732, 735,
	733, 734, 796, 736, 737, 738, 1815, 0, 1520, 0,
	739, 740, 797, 741, 742, 743, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 327, 326, 328,
	329, 330, 331, 0, 332, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 334, 0, 335, 336, 337,
	0, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	0, 345, 0, 346, 0, 0, 0, 347, 348, 349,
	350, 351, 352, 353, 0, 0, 0, 354, 0, 0,
	0, 0, 355, 356, 0, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 0, 382,
	383, 384, 0, 0, 0, 0, 0, 0, 1522, 385,
	386, 387, 388, 389, 0, 390, 392, 0, 0, 0,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 0, 0, 426, 0, 0, 0, 0, 0,
	0, 0, 427, 428, 429, 0, 0, 0, 0, 430,
	0, 431, 432, 433, 0, 434, 435, 0, 0, 436,
	437, 438, 0, 0, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 0, 0, 0, 449, 0,
	450, 451, 452, 453, 454, 455, 456, 1814, 0, 0,
	552, 0, 457, 458, 459, 0, 460, 461, 462, 463,
	464, 0, 0, 0, 465, 466, 467, 468, 0, 0,
	0, 0, 0, 0, 469, 553, 470, 0, 0, 0,
	0, 0, 471, 472, 474, 0, 0, 0, 473, 475,
	476, 0, 477, 0, 0, 0, 478, 479, 480, 481,
	482, 483, 484, 0, 485, 487, 486, 0, 489, 0,
	488, 0, 490, 491, 0, 0, 492, 493, 494, 495,
	496, 497, 500, 0, 0, 498, 499, 501, 502, 0,
	503, 504, 506, 509, 505, 507, 508, 510, 523, 524,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 526, 0, 525, 0, 527, 528, 529, 530,
	531, 539, 541, 542, 537, 538, 540, 543, 544, 546,
	534, 535, 536, 0, 545, 532, 0, 533, 0, 0,
	547, 548, 549, 550, 0, 0, 551, 0, 554, 555,
	0, 0, 556, 0, 557, 0, 0, 559, 560, 561,
	0, 0, 562, 563, 0, 0, 564, 0, 0, 565,
	566, 558, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 0, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 0, 585, 0, 586, 587, 0, 588,
	589, 590, 0, 591, 592, 593, 594, 595, 596, 597,
	598, 0, 599, 600, 602, 601, 603, 0, 604, 0,
	605, 606, 607, 0, 0, 0, 0, 0, 608, 609,
	611, 0, 612, 613, 614, 615, 610, 616, 617, 618,
	619, 620, 621, 0, 623, 624, 622, 625, 626, 0,
	627, 628, 629, 630, 631, 0, 632, 0, 633, 634,
	642, 643, 644, 635, 636, 638, 645, 637, 646, 647,
	648, 649, 651, 650, 0, 653, 654, 652, 655, 656,
	657, 1523, 658, 0, 659, 639, 640, 660, 661, 0,
	662, 663, 664, 665, 666, 667, 668, 0, 0, 669,
	0, 670, 671, 672, 673, 674, 675, 677, 641, 678,
	683, 684, 0, 679, 680, 681, 682, 0, 686, 687,
	688, 689, 0, 690, 691, 0, 685, 676, 0, 692,
	693, 694, 695, 696, 697, 0, 698, 699, 0, 700,
	0, 0, 0, 0, 0, 712, 0, 701, 703, 704,
	705, 706, 0, 707, 0, 0, 708, 709, 710, 711,
	702, 713, 714, 0, 0, 715, 716, 717, 719, 721,
	722, 718, 720, 723, 0, 724, 0, 0, 725, 726,
	727, 0, 0, 0, 0, 729, 730, 728, 731, 732,
	735, 733, 734, 0, 736, 737, 738, 1734, 0, 1520,
	0, 739, 740, 0, 741, 742, 743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 0, 345, 0, 346, 0, 0, 0, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 0,
	0, 0, 0, 355, 356, 0, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 1522,
	385, 386, 387, 388, 389, 0, 390, 392, 0, 0,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 0, 0, 426, 0, 0, 0, 0,
	0, 0, 0, 427, 428, 429, 0, 0, 0, 0,
	430, 0, 431, 432, 433, 0, 434, 435, 0, 0,
	436, 437, 438, 0, 0, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 0, 0, 0, 449,
	0, 450, 451, 452, 453, 454, 455, 456, 1733, 0,
	0, 552, 0, 457, 458, 459, 0, 460, 461, 462,
	463, 464, 0, 0, 0, 465, 466, 467, 468, 0,
	0, 0, 0, 0, 0, 469, 553, 470, 0, 0,
	0, 0, 0, 471, 472, 474, 0, 0, 0, 473,
	475, 476, 0, 477, 0, 0, 0, 478, 479, 480,
	481, 482, 483, 484, 0, 485, 487, 486, 0, 489,
	0, 488, 0, 490, 491, 0, 0, 492, 493, 494,
	495, 496, 497, 500, 0, 0, 498, 499, 501, 502,
	0, 503, 504, 506, 509, 505, 507, 508, 510, 523,
	524, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 526, 0, 525, 0, 527, 528, 529,
	530, 531, 539, 541, 542, 537, 538, 540, 543, 544,
	546, 534, 535, 536, 0, 545, 532, 0, 533, 0,
	0, 547, 548, 549, 550, 0, 0, 551, 0, 554,
	555, 0, 0, 556, 0, 557, 0, 0, 559, 560,
	561, 0, 0, 562, 563, 0, 0, 564, 0, 0,
	565, 566, 558, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 0, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 0, 585, 0, 586, 587, 0,
	588, 589, 590, 0, 591, 592, 593, 594, 595, 596,
	597, 598, 0, 599, 600, 602, 601, 603, 0, 604,
	0, 605, 606, 607, 0, 0, 0, 0, 0, 608,
	609, 611, 0, 612, 613, 614, 615, 610, 616, 617,
	618, 619, 620, 621, 0, 623, 624, 622, 625, 626,
	0, 627, 628, 629, 630, 631, 0, 632, 0, 633,
	634, 642, 643, 644, 635, 636, 638, 645, 637, 646,
	647, 648, 649, 651, 650, 0, 653, 654, 652, 655,
	656, 657, 1523, 658, 0, 659, 639, 640, 660, 661,
	0, 662, 663, 664, 665, 666, 667, 668, 0, 0,
	669, 0, 670, 671, 672, 673, 674, 675, 677, 641,
	678, 683, 684, 0, 679, 680, 681, 682, 0, 686,
	687, 688, 689, 0, 690, 691, 0, 685, 676, 0,
	692, 693, 694, 695, 696, 697, 0, 698, 699, 0,
	700, 0, 0, 0, 0, 0, 712, 0, 701, 703,
	704, 705, 706, 0, 707, 0, 0, 708, 709, 710,
	711, 702, 713, 714, 0, 0, 715, 716, 717, 719,
	721, 722, 718, 720, 723, 0, 724, 0, 0, 725,
	726, 727, 0, 0, 0, 0, 729, 730, 728, 731,
	732, 735, 733, 734, 0, 736, 737, 738, 1518, 0,
	1520, 0, 739, 740, 0, 741, 742, 743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 327,
	326, 328, 329, 330, 331, 0, 332, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 334, 0, 335,
	336, 337, 0, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 0, 345, 0, 346, 0, 0, 0, 347,
	348, 349, 350, 351, 352, 353, 0, 0, 0, 354,
	0, 0, 0, 0, 355, 356, 0, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	0, 382, 383, 384, 0, 0, 0, 0, 0, 0,
	1522, 385, 386, 387, 388, 389, 0, 390, 392, 0,
	0, 0, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 0, 0, 426, 0, 0, 0,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 0,
	0, 430, 0, 431, 432, 433, 0, 434, 435, 0,
	0, 436, 437, 438, 0, 0, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 0, 0, 0,
	449, 0, 450, 451, 452, 453, 454, 455, 456, 1517,
	0, 0, 552, 0, 457, 458, 459, 0, 460, 461,
	462, 463, 464, 0, 0, 0, 465, 466, 467, 468,
	0, 0, 0, 0, 0, 0, 469, 553, 470, 0,
	0, 0, 0, 0, 471, 472, 474, 0, 0, 0,
	473, 475, 476, 0, 477, 0, 0, 0, 478, 479,
	480, 481, 482, 483, 484, 0, 485, 487, 486, 0,
	489, 0, 488, 0, 490, 491, 0, 0, 492, 493,
	494, 495, 496, 497, 500, 0, 0, 498, 499, 501,
	502, 0, 503, 504, 506, 509, 505, 507, 508, 510,
	523, 524, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 526, 0, 525, 0, 527, 528,
	529, 530, 531, 539, 541, 542, 537, 538, 540, 543,
	544, 546, 534, 535, 536, 0, 545, 532, 0, 533,
	0, 0, 547, 548, 549, 550, 0, 0, 551, 0,
	554, 555, 0, 0, 556, 0, 557, 0, 0, 559,
	560, 561, 0, 0, 562, 563, 0, 0, 564, 0,
	0, 565, 566, 558, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 0, 585, 0, 586, 587,
	0, 588, 589, 590, 0, 591, 592, 593, 594, 595,
	596, 597, 598, 0, 599, 600, 602, 601, 603, 0,
	604, 0, 605, 606, 607, 0, 0, 0, 0, 0,
	608, 609, 611, 0, 612, 613, 614, 615, 610, 616,
	617, 618, 619, 620, 621, 0, 623, 624, 622, 625,
	626, 0, 627, 628, 629, 630, 631, 0, 632, 0,
	633, 634, 642, 643, 644, 635, 636, 638, 645, 637,
	646, 647, 648, 649, 651, 650, 0, 653, 654, 652,
	655, 656, 657, 1523, 658, 0, 659, 639, 640, 660,
	661, 0, 662, 663, 664, 665, 666, 667, 668, 0,
	0, 669, 0, 670, 671, 672, 673, 674, 675, 677,
	641, 678, 683, 684, 0, 679, 680, 681, 682, 0,
	686, 687, 688, 689, 0, 690, 691, 0, 685, 676,
	0, 692, 693, 694, 695, 696, 697, 0, 698, 699,
	0, 700, 0, 0, 0, 0, 0, 712, 0, 701,
	703, 704, 705, 706, 0, 707, 0, 0, 708, 709,
	710, 711, 702, 713, 714, 0, 0, 715, 716, 717,
	719, 721, 722, 718, 720, 723, 0, 724, 0, 0,
	725, 726, 727, 0, 0, 0, 0, 729, 730, 728,
	731, 732, 735, 733, 734, 0, 736, 737, 738, 2361,
	0, 1520, 0, 739, 740, 0, 741, 742, 743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 0, 345, 0, 346, 0, 0, 0,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 0, 0, 0, 0, 355, 356, 0, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 1522, 385, 386, 387, 388, 389, 0, 390, 392,
	0, 0, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 0, 0, 426, 0, 0,
	0, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	0, 0, 430, 0, 431, 432, 433, 0, 434, 435,
	0, 0, 436, 437, 438, 0, 0, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 0, 0,
	0, 449, 0, 450, 451, 452, 453, 454, 455, 456,
	0, 0, 0, 552, 0, 457, 458, 459, 0, 460,
	461, 462, 463, 464, 0, 0, 0, 465, 466, 467,
	468, 0, 0, 0, 0, 0, 0, 469, 553, 470,
	0, 0, 0, 0, 0, 471, 472, 474, 0, 0,
	0, 473, 475, 476, 0, 477, 0, 0, 0, 478,
	479, 480, 481, 482, 483, 484, 0, 485, 487, 486,
	0, 489, 0, 488, 0, 490, 491, 0, 0, 492,
	493, 494, 495, 496, 497, 500, 0, 0, 498, 499,
	501, 502, 0, 503, 504, 506, 509, 505, 507, 508,
	510, 523, 524, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 526, 0, 525, 0, 527,
	528, 529, 530, 531, 539, 541, 542, 537, 538, 540,
	543, 544, 546, 534, 535, 536, 0, 545, 532, 0,
	533, 0, 0, 547, 548, 549, 550, 0, 0, 551,
	0, 554, 555, 0, 0, 556, 0, 557, 0, 0,
	559, 560, 561, 0, 0, 562, 563, 0, 0, 564,
	0, 0, 565, 566, 558, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 0, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 0, 585, 0, 586,
	587, 0, 588, 589, 590, 0, 591, 592, 593, 594,
	595, 596, 597, 598, 0, 599, 600, 602, 601, 603,
	0, 604, 0, 605, 606, 607, 0, 0, 0, 0,
	0, 608, 609, 611, 0, 612, 613, 614, 615, 610,
	616, 617, 618, 619, 620, 621, 0, 623, 624, 622,
	625, 626, 0, 627, 628, 629, 630, 631, 0, 632,
	0, 633, 634, 642, 643, 644, 635, 636, 638, 645,
	637, 646, 647, 648, 649, 651, 650, 0, 653, 654,
	652, 655, 656, 657, 1523, 658, 0, 659, 639, 640,
	660, 661, 0, 662, 663, 664, 665, 666, 667, 668,
	0, 0, 669, 0, 670, 671, 672, 673, 674, 675,
	677, 641, 678, 683, 684, 0, 679, 680, 681, 682,
	0, 686, 687, 688, 689, 0, 690, 691, 0, 685,
	676, 0, 692, 693, 694, 695, 696, 697, 0, 698,
	699, 0, 700, 0, 0, 0, 0, 0, 712, 0,
	701, 703, 704, 705, 706, 0, 707, 0, 0, 708,
	709, 710, 711, 702, 713, 714, 0, 0, 715, 716,
	717, 719, 721, 722, 718, 720, 723, 0, 724, 0,
	0, 725, 726, 727, 0, 0, 0, 0, 729, 730,
	728, 731, 732, 735, 733, 734, 0, 736, 737, 738,
	2321, 0, 1520, 0, 739, 740, 0, 741, 742, 743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 334,
	0, 335, 336, 337, 0, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 0, 345, 0, 346, 0, 0,
	0, 347, 348, 349, 350, 351, 352, 353, 0, 0,
	0, 354, 0, 0, 0, 0, 355, 356, 0, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 0, 382, 383, 384, 0, 0, 0, 0,
	0, 0, 1522, 385, 386, 387, 388, 389, 0, 390,
	392, 0, 0, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 0, 0, 426, 0,
	0, 0, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 0, 0, 430, 0, 431, 432, 433, 0, 434,
	435, 0, 0, 436, 437, 438, 0, 0, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 0,
	0, 0, 449, 0, 450, 451, 452, 453, 454, 455,
	456, 0, 0, 0, 552, 0, 457, 458, 459, 0,
	460, 461, 462, 463, 464, 0, 0, 0, 465, 466,
	467, 468, 0, 0, 0, 0, 0, 0, 469, 553,
	470, 0, 0, 0, 0, 0, 471, 472, 474, 0,
	0, 0, 473, 475, 476, 0, 477, 0, 0, 0,
	478, 479, 480, 481, 482, 483, 484, 0, 485, 487,
	486, 0, 489, 0, 488, 0, 490, 491, 0, 0,
	492, 493, 494, 495, 496, 497, 500, 0, 0, 498,
	499, 501, 502, 0, 503, 504, 506, 509, 505, 507,
	508, 510, 523, 524, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 526, 0, 525, 0,
	527, 528, 529, 530, 531, 539, 541, 542, 537, 538,
	540, 543, 544, 546, 534, 535, 536, 0, 545, 532,
	0, 533, 0, 0, 547, 548, 549, 550, 0, 0,
	551, 0, 554, 555, 0, 0, 556, 0, 557, 0,
	0, 559, 560, 561, 0, 0, 562, 563, 0, 0,
	564, 0, 0, 565, 566, 558, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 0, 585, 0,
	586, 587, 0, 588, 589, 590, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 0, 599, 600, 602, 601,
	603, 0, 604, 0, 605, 606, 607, 0, 0, 0,
	0, 0, 608, 609, 611, 0, 612, 613, 614, 615,
	610, 616, 617, 618, 619, 620, 621, 0, 623, 624,
	622, 625, 626, 0, 627, 628, 629, 630, 631, 0,
	632, 0, 633, 634, 642, 643, 644, 635, 636, 638,
	645, 637, 646, 647, 648, 649, 651, 650, 0, 653,
	654, 652, 655, 656, 657, 1523, 658, 0, 659, 639,
	640, 660, 661, 0, 662, 663, 664, 665, 666, 667,
	668, 0, 0, 669, 0, 670, 671, 672, 673, 674,
	675, 677, 641, 678, 683, 684, 0, 679, 680, 681,
	682, 0, 686, 687, 688, 689, 0, 690, 691, 0,
	685, 676, 0, 692, 693, 694, 695, 696, 697, 0,
	698, 699, 0, 700, 0, 0, 0, 0, 0, 712,
	0, 701, 703, 704, 705, 706, 0, 707, 0, 0,
	708, 709, 710, 711, 702, 713, 714, 0, 0, 715,
	716, 717, 719, 721, 722, 718, 720, 723, 0, 724,
	0, 0, 725, 726, 727, 0, 0, 0, 0, 729,
	730, 728, 731, 732, 735, 733, 734, 1520, 736, 737,
	738, 0, 0, 0, 0, 739, 740, 0, 741, 742,
	743, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 0,
	345, 0, 346, 0, 0, 0, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 0, 0, 0,
	0, 355, 356, 0, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 1522, 385, 386,
	387, 388, 389, 0, 390, 392, 0, 0, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 0, 0, 426, 0, 0, 0, 0, 0, 0,
	0, 427, 428, 429, 0, 0, 0, 0, 430, 0,
	431, 432, 433, 0, 434, 435, 0, 0, 436, 437,
	438, 0, 0, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 0, 0, 0, 449, 0, 450,
	451, 452, 453, 454, 455, 456, 0, 0, 0, 552,
	0, 457, 458, 459, 0, 460, 461, 462, 463, 464,
	0, 0, 0, 465, 466, 467, 468, 0, 0, 0,
	0, 0, 0, 469, 553, 470, 0, 0, 0, 0,
	0, 471, 472, 474, 0, 0, 0, 473, 475, 476,
	0, 477, 0, 0, 0, 478, 479, 480, 481, 482,
	483, 484, 0, 485, 487, 486, 0, 489, 0, 488,
	0, 490, 491, 0, 0, 492, 493, 494, 495, 496,
	497, 500, 0, 0, 498, 499, 501, 502, 0, 503,
	504, 506, 509, 505, 507, 508, 510, 523, 524, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 526, 0, 525, 0, 527, 528, 529, 530, 531,
	539, 541, 542, 537, 538, 540, 543, 544, 546, 534,
	535, 536, 0, 545, 532, 0, 533, 0, 0, 547,
	548, 549, 550, 0, 0, 551, 0, 554, 555, 0,
	0, 556, 0, 557, 0, 0, 559, 560, 561, 0,
	0, 562, 563, 0, 0, 564, 0, 0, 565, 566,
	558, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 0, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 0, 585, 0, 586, 587, 0, 588, 589,
	590, 0, 591, 592, 593, 594, 595, 596, 597, 598,
	0, 599, 600, 602, 601, 603, 0, 604, 0, 605,
	606, 607, 0, 0, 0, 0, 0, 608, 609, 611,
	0, 612, 613, 614, 615, 610, 616, 617, 618, 619,
	620, 621, 0, 623, 624, 622, 625, 626, 0, 627,
	628, 629, 630, 631, 0, 632, 0, 633, 634, 642,
	643, 644, 635, 636, 638, 645, 637, 646, 647, 648,
	649, 651, 650, 0, 653, 654, 652, 655, 656, 657,
	1523, 658, 0, 659, 639, 640, 660, 661, 0, 662,
	663, 664, 665, 666, 667, 668, 0, 0, 669, 0,
	670, 671, 672, 673, 674, 675, 677, 641, 678, 683,
	684, 0, 679, 680, 681, 682, 0, 686, 687, 688,
	689, 0, 690, 691, 0, 685, 676, 0, 692, 693,
	694, 695, 696, 697, 0, 698, 699, 0, 700, 0,
	0, 0, 0, 0, 712, 0, 701, 703, 704, 705,
	706, 0, 707, 0, 0, 708, 709, 710, 711, 702,
	713, 714, 0, 0, 715, 716, 717, 719, 721, 722,
	718, 720, 723, 0, 724, 0, 0, 725, 726, 727,
	0, 0, 0, 0, 729, 730, 728, 731, 732, 735,
	733, 734, 0, 736, 737, 738, 0, 0, 0, 0,
	739, 740, 0, 741, 742, 743, 2043, 2044, 0, 2076,
	2077, 2078, 2087, 2088, 2089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2080,
	2074, 0, 0, 0, 0, 0, 0, 0, 2046, 0,
	0, 0, 0, 0, 0, 0, 0, 2043, 2044, 2093,
	2076, 2077, 2078, 2087, 2088, 2089, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2099, 0, 0,
	2080, 2074, 0, 0, 0, 0, 2045, 0, 0, 2046,
	0, 0, 0, 0, 0, 0, 0, 2065, 0, 0,
	2093, 0, 0, 0, 0, 0, 0, 2062, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2099, 0,
	0, 0, 0, 0, 0, 0, 0, 2045, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2062, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2043, 2044, 0,
	2076, 2077, 2078, 2087, 2088, 2089, 0, 0, 0, 2068,
	2069, 2070, 2071, 0, 0, 0, 0, 0, 0, 2051,
	2080, 2074, 0, 0, 0, 0, 0, 0, 0, 2046,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2093, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2068, 2069, 2070, 2071, 0, 0, 0, 0, 2099, 0,
	2051, 0, 2084, 0, 0, 0, 2094, 2045, 0, 0,
	0, 0, 0, 2073, 2075, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2062, 0,
	0, 0, 0, 0, 0, 0, 2090, 0, 2091, 0,
	0, 0, 0, 2084, 0, 2060, 2061, 2094, 0, 0,
	0, 0, 0, 0, 2073, 2075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2082, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2090, 0, 2091,
	2066, 0, 0, 0, 0, 0, 2060, 2061, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2082, 0, 0, 0,
	2068, 2069, 2070, 2071, 0, 0, 0, 0, 0, 0,
	2051, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	2092, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2096, 2084, 0, 0, 0, 2094, 0, 0,
	0, 2092, 0, 0, 2073, 2075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2081, 0, 0, 0, 0, 2090, 0, 2091,
	0, 0, 0, 2096, 0, 0, 2060, 2061, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2072, 0, 0, 0, 2082, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2066, 0, 0, 0, 0, 0, 0, 2067, 0,
	0, 0, 0, 0, 2043, 2044, 0, 2076, 2077, 2078,
	2087, 2088, 2089, 2072, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2080, 2074, 0,
	2085, 0, 0, 0, 0, 0, 2046, 0, 0, 2067,
	0, 2092, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2081, 0, 0, 2099, 2098, 0, 0, 0,
	0, 2085, 0, 2096, 2045, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2065, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2062, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2098, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2072, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2067,
	2057, 2058, 2064, 2086, 2063, 2059, 0, 2056, 2054, 2055,
	2047, 2048, 2049, 2050, 2052, 2053, 0, 2068, 2069, 2070,
	2071, 5311, 0, 0, 0, 0, 0, 2051, 0, 2083,
	0, 2085, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2057, 2058, 2064, 2086, 2063, 2059, 0, 2056, 2054,
	2055, 2047, 2048, 2049, 2050, 2052, 2053, 0, 0, 0,
	0, 0, 5257, 0, 0, 0, 0, 2098, 0, 0,
	2084, 0, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 2073, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 2091, 0, 0, 0,
	0, 0, 0, 2060, 2061, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2066, 2083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2057, 2058, 2064, 2086, 2063, 2059, 0, 2056, 2054,
	2055, 2047, 2048, 2049, 2050, 2052, 2053, 0, 0, 0,
	2043, 2044, 5256, 2076, 2077, 2078, 2087, 2088, 2089, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2092, 0,
	0, 0, 0, 2080, 2074, 0, 0, 0, 0, 0,
	0, 0, 2046, 0, 0, 0, 0, 0, 0, 2081,
	0, 0, 0, 2093, 0, 0, 0, 0, 0, 0,
	2096, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2099, 0, 0, 0, 0, 0, 0, 0, 0,
	2045, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2065, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2062, 0, 0, 0, 0, 0, 0, 0, 0,
	2043, 2044, 0, 2076, 2077, 2078, 2087, 2088, 2089, 0,
	2072, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2080, 2074, 0, 0, 0, 0, 0,
	0, 0, 2046, 0, 0, 0, 2067, 0, 0, 0,
	0, 0, 0, 2093, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2099, 0, 0, 0, 0, 0, 0, 2085, 0,
	2045, 0, 0, 2068, 2069, 2070, 2071, 0, 0, 0,
	0, 2065, 0, 2051, 0, 0, 0, 0, 0, 0,
	0, 2062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2098, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	2094, 0, 0, 0, 0, 0, 0, 2073, 2075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 0, 2091, 0, 0, 0, 0, 0, 0, 2060,
	2061, 0, 0, 2068, 2069, 2070, 2071, 0, 0, 0,
	0, 0, 0, 2051, 0, 0, 2083, 0, 0, 2082,
	0, 0, 0, 0, 0, 0, 0, 0, 2057, 2058,
	2064, 2086, 2063, 2059, 2066, 2056, 2054, 2055, 2047, 2048,
	2049, 2050, 2052, 2053, 0, 0, 0, 0, 0, 5048,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	2094, 0, 0, 0, 0, 0, 0, 2073, 2075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2092, 0, 0, 0, 0, 0,
	2090, 0, 2091, 0, 0, 0, 0, 0, 0, 2060,
	2061, 0, 0, 0, 0, 2081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2096, 0, 0, 2082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2066, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2043, 2044, 0, 2076, 2077, 2078,
	2087, 2088, 2089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2072, 2080, 2074, 0,
	0, 0, 0, 0, 2092, 0, 2046, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 2067, 0, 0, 2081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2099, 2096, 0, 0, 0,
	0, 0, 0, 0, 2045, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2085, 2065, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2062, 0, 0, 0, 0,
	0, 0, 0, 0, 2043, 2044, 0, 2076, 2077, 2078,
	2087, 2088, 2089, 0, 0, 0, 0, 0, 0, 0,
	2098, 0, 0, 0, 0, 0, 2072, 2080, 2074, 0,
	0, 0, 0, 0, 0, 0, 2046, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 2067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2099, 0, 0, 0, 0,
	0, 0, 0, 0, 2045, 0, 0, 2068, 2069, 2070,
	2071, 0, 0, 0, 2085, 2065, 0, 2051, 0, 0,
	0, 0, 0, 0, 0, 2062, 0, 0, 0, 0,
	0, 0, 2083, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 2058, 2064, 2086, 2063, 2059,
	2098, 2056, 2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053,
	2084, 0, 0, 0, 2094, 4856, 0, 0, 0, 0,
	0, 2073, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 2091, 0, 0, 0,
	0, 0, 0, 2060, 2061, 0, 0, 2068, 2069, 2070,
	2071, 0, 0, 0, 0, 0, 0, 2051, 0, 0,
	0, 0, 0, 2082, 0, 0, 0, 0, 0, 0,
	0, 0, 2083, 0, 0, 0, 0, 0, 2066, 0,
	0, 0, 0, 0, 2057, 2058, 2064, 2086, 2063, 2059,
	0, 2056, 2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053,
	2084, 0, 0, 0, 2094, 4755, 0, 0, 0, 0,
	0, 2073, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2092, 0,
	0, 0, 0, 0, 2090, 0, 2091, 0, 0, 0,
	0, 0, 0, 2060, 2061, 0, 0, 0, 0, 2081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2096, 0, 0, 2082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2066, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2043, 2044,
	0, 2076, 2077, 2078, 2087, 2088, 2089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2072, 2080, 2074, 0, 0, 0, 0, 0, 2092, 0,
	2046, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2093, 0, 0, 0, 0, 2067, 0, 0, 2081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2099,
	2096, 0, 0, 0, 0, 0, 0, 0, 2045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 2065,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 2043, 2044,
	0, 2076, 2077, 2078, 2087, 2088, 2089, 0, 0, 0,
	0, 0, 0, 0, 2098, 0, 0, 0, 0, 0,
	2072, 2080, 2074, 0, 0, 0, 0, 0, 0, 0,
	2046, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2093, 0, 0, 0, 0, 2067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2099,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 0,
	0, 2068, 2069, 2070, 2071, 0, 0, 0, 2085, 2065,
	0, 2051, 0, 0, 0, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 2083, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2057, 2058,
	2064, 2086, 2063, 2059, 2098, 2056, 2054, 2055, 2047, 2048,
	2049, 2050, 2052, 2053, 2084, 0, 0, 0, 2094, 4754,
	0, 0, 0, 0, 0, 2073, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2090, 0,
	2091, 0, 0, 0, 0, 0, 0, 2060, 2061, 0,
	0, 2068, 2069, 2070, 2071, 0, 0, 0, 0, 0,
	0, 2051, 0, 0, 0, 0, 0, 2082, 0, 0,
	0, 0, 0, 0, 0, 0, 2083, 0, 0, 0,
	0, 0, 2066, 0, 0, 0, 0, 0, 2057, 2058,
	2064, 2086, 2063, 2059, 0, 2056, 2054, 2055, 2047, 2048,
	2049, 2050, 2052, 2053, 2084, 0, 0, 0, 2094, 4753,
	0, 0, 0, 0, 0, 2073, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2092, 0, 0, 0, 0, 0, 2090, 0,
	2091, 0, 0, 0, 0, 0, 0, 2060, 2061, 0,
	0, 0, 0, 2081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2096, 0, 0, 2082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2066, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2043, 2044, 0, 2076, 2077, 2078, 2087, 2088,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2072, 2080, 2074, 0, 0, 0,
	0, 0, 2092, 0, 2046, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2093, 0, 0, 0, 0,
	2067, 0, 0, 2081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2099, 2096, 0, 0, 0, 0, 0,
	0, 0, 2045, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2085, 2065, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2062, 0, 0, 0, 0, 0, 0,
	0, 0, 2043, 2044, 0, 2076, 2077, 2078, 2087, 2088,
	2089, 0, 0, 0, 0, 0, 0, 0, 2098, 0,
	0, 0, 0, 0, 2072, 2080, 2074, 0, 0, 0,
	0, 0, 0, 0, 2046, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2093, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2099, 0, 0, 0, 0, 0, 0,
	0, 0, 2045, 0, 0, 2068, 2069, 2070, 2071, 0,
	0, 0, 2085, 2065, 0, 2051, 0, 0, 0, 0,
	0, 0, 0, 2062, 0, 0, 0, 0, 0, 0,
	2083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 2058, 2064, 2086, 2063, 2059, 2098, 2056,
	2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053, 2084, 0,
	0, 0, 2094, 4336, 0, 0, 0, 0, 0, 2073,
	2075, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2090, 0, 2091, 0, 0, 0, 0, 0,
	0, 2060, 2061, 0, 0, 2068, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 2051, 0, 0, 0, 0,
	0, 2082, 0, 0, 0, 0, 0, 0, 0, 0,
	2083, 0, 0, 0, 0, 0, 2066, 0, 0, 0,
	0, 0, 2057, 2058, 2064, 2086, 2063, 2059, 0, 2056,
	2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053, 2084, 0,
	0, 0, 2094, 3745, 0, 0, 0, 0, 0, 2073,
	2075, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2092, 0, 0, 0,
	0, 0, 2090, 0, 2091, 0, 0, 0, 0, 0,
	0, 2060, 2061, 0, 0, 0, 0, 2081, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2096, 0,
	0, 2082, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2066, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2043, 2044, 0, 2076,
	2077, 2078, 2087, 2088, 2089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2072, 2080,
	2074, 0, 0, 0, 0, 0, 2092, 0, 2046, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2093,
	0, 0, 0, 0, 2067, 0, 0, 2081, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2099, 2096, 0,
	0, 0, 0, 0, 0, 0, 2045, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2085, 2065, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2062, 0, 0,
	0, 0, 0, 0, 0, 0, 2043, 2044, 0, 2076,
	2077, 2078, 2087, 2088, 2089, 0, 0, 0, 0, 0,
	0, 0, 2098, 0, 0, 0, 0, 0, 2072, 2080,
	2074, 0, 0, 0, 0, 0, 0, 0, 2046, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2093,
	0, 0, 0, 0, 2067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2099, 0, 0,
	0, 0, 0, 0, 0, 0, 2045, 0, 0, 2068,
	2069, 2070, 2071, 0, 0, 0, 2085, 2065, 0, 2051,
	0, 0, 0, 0, 0, 0, 0, 2062, 0, 0,
	0, 0, 0, 0, 2083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2057, 2058, 2064, 2086,
	2063, 2059, 2098, 2056, 2054, 2055, 2047, 2048, 2049, 2050,
	2052, 2053, 2084, 0, 0, 0, 2094, 3744, 0, 0,
	0, 0, 0, 2073, 2075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2090, 0, 2091, 0,
	0, 0, 0, 0, 0, 2060, 2061, 0, 0, 2068,
	2069, 2070, 2071, 0, 0, 0, 0, 0, 0, 2051,
	0, 0, 0, 0, 0, 2082, 0, 0, 0, 0,
	0, 0, 0, 0, 2083, 0, 0, 0, 0, 0,
	2066, 0, 0, 0, 0, 0, 2057, 2058, 2064, 2086,
	2063, 2059, 0, 2056, 2054, 2055, 2047, 2048, 2049, 2050,
	2052, 2053, 2084, 0, 0, 0, 2094, 3743, 0, 0,
	0, 0, 0, 2073, 2075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2092, 0, 0, 0, 0, 0, 2090, 0, 2091, 0,
	0, 0, 0, 0, 0, 2060, 2061, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2096, 0, 0, 2082, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2066, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2043, 2044, 0, 2076, 2077, 2078, 2087, 2088, 2089, 0,
	0, 0, 0, 0, 2540, 0, 0, 0, 0, 0,
	0, 0, 2072, 2080, 2074, 0, 0, 0, 0, 0,
	2092, 0, 2046, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 0, 0, 0, 0, 2067, 0,
	0, 2081, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2099, 2096, 0, 0, 0, 0, 0, 0, 0,
	2045, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2085, 2065, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2062, 0, 0, 0, 0, 0, 0, 0, 0,
	2043, 2044, 0, 2076, 2077, 2078, 2087, 2088, 2089, 0,
	0, 0, 0, 0, 0, 0, 2098, 0, 0, 0,
	0, 0, 2072, 2080, 2074, 0, 0, 0, 0, 0,
	0, 0, 2046, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2541, 2093, 0, 0, 0, 0, 2067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2099, 0, 0, 0, 0, 0, 0, 0, 0,
	2045, 0, 0, 2068, 2069, 2070, 2071, 0, 0, 0,
	2085, 2065, 0, 2051, 0, 2440, 0, 0, 0, 0,
	0, 2062, 0, 0, 0, 0, 0, 0, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2057, 2058, 2064, 2086, 2063, 2059, 2098, 2056, 2054, 2055,
	2047, 2048, 2049, 2050, 2052, 2053, 2084, 0, 0, 0,
	2094, 3742, 0, 0, 0, 0, 0, 2073, 2075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 2438, 2091, 0, 0, 0, 0, 0, 0, 2060,
	2061, 0, 0, 2068, 2069, 2070, 2071, 0, 0, 0,
	0, 0, 0, 2051, 0, 0, 0, 0, 0, 2082,
	0, 0, 0, 0, 0, 0, 0, 0, 2083, 0,
	0, 0, 0, 0, 2066, 0, 0, 0, 0, 0,
	2057, 2058, 2064, 2086, 2063, 2059, 0, 2056, 2054, 2055,
	2047, 2048, 2049, 2050, 2052, 2053, 2084, 0, 0, 3707,
	2094, 0, 0, 0, 0, 0, 0, 2073, 2075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2092, 0, 0, 0, 0, 0,
	2090, 0, 2091, 0, 0, 0, 0, 0, 0, 2060,
	2061, 0, 0, 0, 0, 2081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2096, 0, 0, 2082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2066, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2043, 2044, 0, 2076, 2077, 2078,
	2087, 2088, 2089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2072, 2080, 2074, 0,
	0, 0, 0, 0, 2092, 0, 2046, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 2067, 0, 0, 2081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2099, 2096, 0, 0, 0,
	0, 0, 0, 0, 2045, 0, 0, 2542, 0, 0,
	0, 0, 0, 0, 2085, 2065, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2062, 0, 0, 0, 0,
	0, 0, 0, 0, 2043, 2044, 0, 2076, 2077, 2078,
	2087, 2088, 2089, 0, 0, 0, 0, 0, 0, 0,
	2098, 0, 0, 0, 0, 2439, 2072, 2080, 2074, 0,
	0, 0, 0, 0, 0, 0, 2046, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 2067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2099, 2543, 0, 0, 0,
	0, 0, 0, 0, 2045, 0, 0, 2068, 2069, 2070,
	2071, 0, 0, 0, 2085, 2065, 0, 2051, 5584, 0,
	0, 0, 0, 0, 0, 2062, 0, 0, 0, 0,
	0, 0, 2083, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 2058, 2064, 2086, 2063, 2059,
	2098, 2056, 2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053,
	2084, 2437, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 2073, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 2091, 0, 0, 0,
	0, 0, 0, 2060, 2061, 0, 0, 2068, 2069, 2070,
	2071, 0, 0, 0, 0, 0, 0, 2051, 0, 3810,
	0, 0, 0, 2082, 0, 0, 3809, 0, 0, 0,
	0, 0, 2083, 0, 0, 0, 0, 0, 2066, 0,
	0, 0, 0, 0, 2057, 2058, 2064, 2086, 2063, 2059,
	0, 2056, 2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053,
	2084, 0, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 2073, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2092, 0,
	0, 0, 0, 0, 2090, 0, 2091, 0, 0, 0,
	0, 0, 0, 2060, 2061, 0, 0, 0, 0, 2081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2096, 0, 0, 2082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2066, 0,
	0, 0, 0, 5583, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2043, 2044,
	0, 2076, 2077, 2078, 2087, 2088, 2089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2072, 2080, 2074, 0, 0, 0, 0, 3677, 2092, 0,
	2046, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2093, 0, 0, 0, 0, 2067, 0, 0, 2081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2099,
	2096, 0, 0, 0, 0, 0, 0, 0, 2045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 2065,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 2043, 2044,
	0, 2076, 2077, 2078, 2087, 2088, 2089, 0, 0, 0,
	0, 0, 0, 0, 2098, 0, 0, 0, 0, 0,
	2072, 2080, 2074, 0, 0, 0, 0, 0, 0, 0,
	2046, 0, 3678, 0, 0, 0, 0, 0, 0, 0,
	0, 2093, 0, 0, 0, 0, 2067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2099,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 0,
	0, 2068, 2069, 2070, 2071, 0, 0, 0, 2085, 2065,
	0, 2051, 0, 0, 0, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 2083, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2057, 2058,
	2064, 2086, 2063, 2059, 2098, 2056, 2054, 2055, 2047, 2048,
	2049, 2050, 2052, 2053, 2084, 0, 0, 0, 2094, 0,
	0, 0, 0, 0, 0, 2073, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2090, 0,
	2091, 0, 0, 0, 0, 0, 0, 2060, 2061, 0,
	0, 2068, 2069, 2070, 2071, 0, 0, 0, 0, 0,
	0, 2051, 0, 5154, 0, 0, 0, 2082, 0, 0,
	0, 0, 0, 0, 0, 0, 2083, 0, 0, 0,
	0, 0, 2066, 0, 0, 0, 0, 0, 2057, 2058,
	2064, 2086, 2063, 2059, 0, 2056, 2054, 2055, 2047, 2048,
	2049, 2050, 2052, 2053, 2084, 0, 0, 0, 2094, 0,
	0, 0, 0, 0, 0, 2073, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2092, 0, 0, 0, 0, 0, 2090, 0,
	2091, 0, 0, 0, 0, 0, 0, 2060, 2061, 0,
	0, 0, 0, 2081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2096, 0, 0, 2082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2066, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2043, 2044, 0, 2076, 2077, 2078, 2087, 2088,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2072, 2080, 2074, 0, 0, 0,
	0, 0, 2092, 0, 2046, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2093, 0, 0, 0, 0,
	2067, 0, 0, 2081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2099, 2096, 0, 0, 0, 0, 0,
	0, 0, 2045, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2085, 2065, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2062, 0, 0, 0, 0, 0, 0,
	0, 0, 2043, 2044, 0, 2076, 2077, 2078, 2087, 2088,
	2089, 0, 0, 0, 0, 0, 0, 0, 2098, 0,
	0, 0, 0, 0, 2072, 2080, 2074, 0, 0, 0,
	0, 0, 0, 0, 2046, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2093, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2099, 0, 0, 0, 0, 0, 0,
	0, 0, 2045, 0, 0, 2068, 2069, 2070, 2071, 0,
	0, 0, 2085, 2065, 0, 2051, 0, 0, 0, 0,
	0, 0, 0, 2062, 0, 0, 0, 0, 0, 0,
	2083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 2058, 2064, 2086, 2063, 2059, 2098, 2056,
	2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053, 2084, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 2073,
	2075, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2090, 0, 2091, 0, 0, 0, 0, 0,
	0, 2060, 2061, 0, 0, 2068, 2069, 2070, 2071, 0,
	0, 0, 0, 0, 0, 2051, 0, 0, 0, 0,
	0, 2082, 0, 0, 0, 0, 0, 0, 0, 0,
	2083, 0, 0, 0, 0, 0, 2066, 0, 0, 0,
	0, 0, 2057, 2058, 2064, 2086, 2063, 2059, 0, 2056,
	2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053, 2084, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 2073,
	2075, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2092, 0, 0, 0,
	0, 0, 2090, 0, 2091, 0, 0, 0, 0, 0,
	0, 2060, 2061, 0, 0, 0, 0, 2081, 1242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2096, 0,
	0, 2082, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2066, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2043, 2044, 0, 2076,
	2077, 2078, 2087, 2088, 2089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2072, 2080,
	2074, 0, 0, 0, 0, 0, 2092, 0, 2046, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2093,
	0, 0, 0, 0, 2067, 0, 0, 2081, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2099, 2096, 0,
	0, 0, 0, 0, 0, 0, 2045, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2085, 2065, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2062, 0, 0,
	0, 0, 0, 0, 0, 0, 2043, 2044, 0, 2076,
	2077, 2078, 2087, 2088, 2089, 0, 0, 0, 0, 0,
	0, 0, 2098, 0, 0, 0, 0, 0, 2072, 2080,
	2074, 0, 0, 0, 0, 0, 0, 0, 2046, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2093,
	0, 0, 0, 0, 2067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2099, 0, 0,
	0, 0, 0, 0, 0, 0, 2045, 0, 0, 2068,
	2069, 2070, 2071, 0, 0, 0, 2085, 2065, 0, 2051,
	0, 0, 0, 0, 0, 0, 0, 2062, 0, 0,
	0, 0, 0, 0, 2083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2057, 2058, 2064, 2086,
	2063, 2059, 2098, 2056, 2054, 2055, 2047, 2048, 2049, 2050,
	2052, 2053, 2084, 0, 0, 0, 2094, 0, 0, 0,
	0, 4908, 0, 2073, 2075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2090, 0, 2091, 0,
	0, 0, 0, 0, 0, 2060, 2061, 0, 0, 2068,
	2069, 2070, 2071, 0, 0, 0, 0, 0, 0, 2051,
	0, 4557, 0, 0, 0, 2082, 0, 0, 0, 0,
	0, 0, 0, 0, 2083, 0, 0, 0, 0, 0,
	2066, 0, 0, 0, 0, 0, 2057, 2058, 2064, 2086,
	2063, 2059, 0, 2056, 2054, 2055, 2047, 2048, 2049, 2050,
	2052, 2053, 2084, 0, 0, 0, 2094, 0, 0, 0,
	0, 0, 0, 2073, 2075, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2092, 0, 0, 0, 0, 0, 2090, 0, 2091, 0,
	0, 0, 0, 0, 0, 2060, 2061, 0, 0, 0,
	0, 2081, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2096, 0, 0, 2082, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2066, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2043, 2044, 0, 2076, 2077, 2078, 2087, 2088, 2089, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2072, 2080, 2074, 0, 0, 0, 0, 0,
	2092, 0, 2046, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 0, 0, 0, 0, 2067, 0,
	0, 2081, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2099, 2096, 0, 0, 0, 0, 0, 0, 0,
	2045, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2085, 2065, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2062, 0, 0, 0, 0, 0, 0, 0, 0,
	2043, 2044, 0, 2076, 2077, 2078, 2087, 2088, 2089, 0,
	0, 0, 0, 0, 0, 0, 2098, 0, 0, 0,
	0, 0, 2072, 2080, 2074, 0, 0, 0, 0, 0,
	0, 0, 2046, 0, 0, 4558, 0, 0, 0, 0,
	0, 0, 0, 2093, 0, 0, 0, 0, 2067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2099, 0, 0, 0, 0, 0, 0, 0, 0,
	2045, 0, 0, 2068, 2069, 2070, 2071, 0, 0, 0,
	2085, 2065, 0, 2051, 0, 0, 0, 0, 0, 0,
	0, 2062, 0, 0, 0, 0, 0, 0, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2057, 2058, 2064, 2086, 2063, 2059, 2098, 2056, 2054, 2055,
	2047, 2048, 2049, 2050, 2052, 2053, 2084, 0, 0, 0,
	2094, 0, 0, 0, 0, 0, 0, 2073, 2075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 0, 2091, 0, 0, 0, 0, 0, 0, 2060,
	2061, 0, 0, 2068, 2069, 2070, 2071, 0, 0, 0,
	0, 0, 0, 2051, 0, 0, 0, 0, 0, 2082,
	0, 0, 3816, 0, 0, 0, 0, 0, 2083, 0,
	0, 0, 0, 0, 2066, 0, 0, 0, 0, 0,
	2057, 2058, 2064, 2086, 2063, 2059, 0, 2056, 2054, 2055,
	2047, 2048, 2049, 2050, 2052, 2053, 2084, 0, 0, 0,
	2094, 0, 0, 0, 0, 0, 0, 2073, 2075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2092, 0, 0, 0, 0, 0,
	2090, 0, 2091, 0, 0, 0, 0, 0, 0, 2060,
	2061, 0, 0, 0, 0, 2081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2096, 0, 0, 2082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2066, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2043, 2044, 0, 2076, 2077, 2078,
	2087, 2088, 2089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2072, 2080, 2074, 0,
	0, 0, 3811, 0, 2092, 0, 2046, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 2067, 0, 0, 2081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2099, 2096, 0, 0, 0,
	0, 0, 0, 0, 2045, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2085, 2065, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2062, 0, 0, 0, 0,
	0, 0, 0, 0, 2043, 2044, 0, 2076, 2077, 2078,
	2087, 2088, 2089, 0, 0, 0, 0, 0, 0, 0,
	2098, 0, 0, 0, 0, 0, 2072, 2080, 2074, 0,
	0, 0, 0, 4317, 0, 0, 2046, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 2067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2099, 0, 0, 0, 0,
	0, 0, 0, 0, 2045, 0, 0, 2068, 2069, 2070,
	2071, 0, 0, 0, 2085, 2065, 0, 2051, 0, 0,
	0, 0, 0, 0, 0, 2062, 0, 0, 0, 0,
	0, 0, 2083, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 2058, 2064, 2086, 2063, 2059,
	2098, 2056, 2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053,
	2084, 0, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 2073, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 2091, 0, 0, 0,
	0, 0, 0, 2060, 2061, 0, 0, 2068, 2069, 2070,
	2071, 0, 0, 0, 0, 0, 0, 2051, 0, 0,
	0, 0, 0, 2082, 0, 0, 0, 0, 0, 0,
	0, 0, 2083, 0, 0, 0, 0, 0, 2066, 0,
	0, 0, 0, 0, 2057, 2058, 2064, 2086, 2063, 2059,
	0, 2056, 2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053,
	2084, 0, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 2073, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2092, 0,
	0, 0, 0, 0, 2090, 0, 2091, 0, 0, 0,
	0, 0, 0, 2060, 2061, 0, 0, 0, 0, 2081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2096, 0, 0, 2082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2066, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2043, 2044,
	0, 2076, 2077, 2078, 2087, 2088, 2089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2072, 2080, 2074, 0, 0, 0, 3746, 0, 2092, 0,
	2046, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2093, 0, 0, 0, 0, 2067, 0, 0, 2081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2099,
	2096, 0, 0, 0, 0, 0, 0, 0, 2045, 0,
	0, 3776, 0, 0, 0, 0, 0, 0, 2085, 2065,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 2043, 2044,
	0, 2076, 2077, 2078, 2087, 2088, 2089, 0, 0, 0,
	0, 0, 0, 0, 2098, 0, 0, 0, 0, 0,
	2072, 2080, 2074, 0, 0, 0, 0, 0, 0, 0,
	2046, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2093, 0, 0, 0, 0, 2067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2099,
	0, 0, 0, 0, 0, 0, 0, 0, 2045, 0,
	0, 2068, 2069, 2070, 2071, 0, 0, 0, 2085, 2065,
	0, 2051, 0, 0, 0, 0, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 2083, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2057, 2058,
	2064, 2086, 2063, 2059, 2098, 2056, 2054, 2055, 2047, 2048,
	2049, 2050, 2052, 2053, 2084, 0, 0, 0, 2094, 0,
	0, 0, 0, 0, 0, 2073, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2090, 0,
	2091, 0, 0, 0, 0, 0, 0, 2060, 2061, 0,
	0, 2068, 2069, 2070, 2071, 0, 0, 0, 0, 0,
	0, 2051, 0, 0, 0, 0, 0, 2082, 0, 0,
	0, 0, 0, 0, 0, 0, 2083, 0, 0, 0,
	0, 0, 2066, 0, 0, 0, 0, 0, 2057, 2058,
	2064, 2086, 2063, 2059, 0, 2056, 2054, 2055, 2047, 2048,
	2049, 2050, 2052, 2053, 2084, 0, 0, 0, 2094, 0,
	0, 0, 0, 0, 0, 2073, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2092, 0, 0, 0, 0, 0, 2090, 0,
	2091, 0, 0, 0, 0, 0, 0, 2060, 2061, 0,
	0, 0, 0, 2081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2096, 0, 0, 2082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2066, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2043, 2044, 0, 2076, 2077, 2078, 2087, 2088,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2072, 2080, 2074, 0, 0, 0,
	0, 0, 2092, 0, 2046, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2093, 0, 0, 0, 0,
	2067, 0, 0, 2081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2099, 2096, 0, 0, 0, 0, 0,
	0, 0, 2045, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2085, 2065, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2062, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2098, 0,
	0, 0, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2068, 2069, 2070, 2071, 0,
	0, 0, 2085, 0, 0, 2051, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 2058, 2064, 2086, 2063, 2059, 2098, 2056,
	2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053, 2084, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 2073,
	2075, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2090, 1117, 2091, 1171, 0, 0, 0, 0,
	0, 2060, 2061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1125, 2082, 0, 2654, 0, 0, 0, 0, 0, 0,
	2083, 0, 0, 0, 0, 0, 2066, 0, 1141, 0,
	1123, 1122, 2057, 2058, 2064, 2086, 2063, 2059, 0, 2056,
	2054, 2055, 2047, 2048, 2049, 2050, 2052, 2053, 0, 0,
	0, 0, 0, 0, 1143, 0, 0, 0, 0, 0,
	1124, 0, 0, 0, 0, 1127, 0, 0, 0, 0,
	1183, 0, 1154, 0, 0, 0, 2092, 0, 0, 0,
	0, 1138, 1139, 0, 0, 0, 0, 0, 0, 0,
	0, 1159, 0, 0, 0, 0, 0, 2081, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2096, 1172,
	1129, 0, 0, 0, 0, 0, 1130, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1131, 0, 0, 0, 0, 0, 0, 0, 0,
	1169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2072, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1170, 0, 1150, 0, 0,
	0, 0, 0, 0, 2067, 0, 0, 0, 0, 0,
	0, 1133, 0, 0, 0, 0, 0, 0, 0, 0,
	1121, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2085, 0, 0, 0,
	0, 1135, 1136, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1144, 1142, 0, 0,
	0, 0, 2098, 0, 1137, 0, 0, 0, 0, 1155,
	0, 0, 1177, 1176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1180, 1168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2057, 2058, 2064, 2086,
	2063, 2059, 0, 2056, 2054, 2055, 2047, 2048, 2049, 2050,
	2052, 2053, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1128, 0, 0, 1182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1126, 0, 0, 0, 0, 1163, 1164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1174, 1161, 0,
	0, 0, 0, 0, 0, 0, 1181, 1156, 0, 0,
	1147, 1145, 0, 0, 0, 1151, 0, 0, 0, 0,
	0, 0, 0, 1152, 0, 0, 1119, 0, 1175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1120, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1167, 0, 0, 1165, 0,
	1153, 1134, 0, 0, 0, 0, 1149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1179, 0, 0,
	0, 0, 0, 0, 0, 1157, 0, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 1132, 1178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1162,
}

var sqlPact = [...]int32{
	343, -1000, -1000, -1000, -1000, -1000, -1000, 259, -1000, -1000,
	258, 256, 255, 253, 252, 251, 250, 249, 247, 245,
	244, -1000, -1000, 243, 241, 238, 236, -1000, -1000, 234,
	233, -1000, 232, -1000, -1000, 227, -1000, 223, 221, 220,
	-1000, -1000, 219, -1000, 218, -1000, -1000, -1000, -1000, 217,
	215, 213, 108883, 108262, 109502, 2672, 141129, 121900, 2280, 114458,
	140508, 113837, 139887, 2537, 11918, 139266, 3150, 212, -1000, 138645,
	209, 208, 205, -1000, 121279, 138024, 118797, 118176, 1978, 85215,
	1887, 1884, -1000, 204, 203, -1000, 6024, 82118, 202, 199,
	198, 195, 2748, 184, -1000, 181, 180, -1000, 177, 173,
	-1000, 16607, 1697, -1000, 171, 169, 167, -1000, 6005, 117555,
	166, 165, 164, 3004, 159, 158, 79011, 157, 155, 151,
	2784, 3238, -1000, -1000, 2338, -1000, -1000, 150, 148, 146,
	141, 139, 136, 135, 134, 133, 132, 130, 128, 126,
	123, -1000, 120, 118, 117, 113, 112, 111, -1000, 110,
	109, 107, -1000, 106, -1000, 104, 103, 102, 99, 98,
	93, 92, 91, 90, 89, 84, 74, 69, 67, 64,
	161971, -1000, -1000, 62, -1000, 2018, 1881, 1879, 1878, 1119,
	59, 58, 57, 55, 54, 53, 52, 49, 46, 45,
	44, 42, 40, 38, 35, 33, 31, 30, 29, 28,
	27, 23, 21, 182, 20, 17, 16, 15, 11, 10,
	9, 8, 6693, 3995, -1000, 1707, 1066, 1353, 35250, 3394,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 150414,
	141748, 7, -64, 6, -1000, 3804, 1203, 64591, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 409, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	562, 2461, 843, -1000, -1000, -1000, 137403, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2671, -9, 115077, -1000, 2421,
	-1000, -1000, -1000, -1000, -1000, 842, -1000, 2668, 2615, 400,
	2613, 115077, -1000, -1000, -1000, 3840, 3758, 107641, 2825, 4322,
	4321, 4319, 4318, 4317, 149795, 2071, 2886, 4315, 4313, 4310,
	4308, 4307, 4306, 4303, -1000, 107020, 1178, 106399, 105778, 3862,
	136784, 105157, 136163, 152896, 54426, 859, 3839, -1000, -1000, -1000,
	-1000, -1000, -1000, 141748, -1000, 1175, -1000, -1000, 4301, 2283,
	840, 120658, -1000, -1000, 135542, 2024, -1000, -1000, -1000, 1056,
	1351, 37794, 37794, 37794, 402, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3849, -1000, -1000, -1000, -1000, 141748, 3075, 3075,
	1562, 1591, 1591, 3075, 3075, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 4295, 4290, 4289, 4285, 4284, -1000, -1000,
	-1000, 1530, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 96471,
	27429, 95850, 95229, 104536, 134921, 53790, 103915, 103294, 91501, 4281,
	4278, 53154, 62055, 3994, 134300, 152275, 3993, 3990, 1173, 2419,
	1626, -1000, -1000, -1000, -1000, -1000, -1000, -18, 84596, 4101,
	141748, -1000, 394, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	52518, 793, 51882, 698, 51246, 506, 133679, -1000, -1000, -1000,
	-1000, -1000, 90870, 3756, -1000, 133058, 1686, 2824, 4277, 4276,
	1271, 4275, 3726, 2050, 4274, 4272, 4271, 4267, 4265, 4264,
	4261, 1595, 132437, 3041, 131816, 2000, 151654, 2203, 1172, 102673,
	109502, 2986, 131195, 1617, 1612, -1000, -1000, -1000, -1000, 3537,
	3228, 3217, 1282, -1000, -1000, -1000, -1000, -1000, 68369, 8537,
	7770, -1000, -1000, 14424, 130574, 71514, 109502, 109502, -1000, -1000,
	-1000, -1000, -1000, -1000, 50610, 616, 49974, 808, 129953, -1000,
	-1000, 68998, 3346, 1226, -1000, -1000, -1000, -1000, -1000, 129332,
	49338, 379, 48702, 788, 141748, -1000, 3393, 2293, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3886,
	1818, 4099, 3136, 90239, 2257, 1588, 3802, 3535, 3533, 1732,
	2409, 3529, 4258, 3018, 3186, 3522, 3521, 3519, 3515, 3509,
	1709, 2941, 344, 2938, 34614, 3381, 2068, 48066, 1702, 1698,
	3501, 3475, 3460, 4110, 3903, 2393, 2228, 2353, 2233, 94608,
	4257, 4255, 3765, 3456, 3451, 3201, 3427, 2227, -1000, 3345,
	1587, 392, -1000, -1000, -1000, -1000, -1000, -1000, 392, 1657,
	-1000, -1000, -1000, -1000, -1000, 97090, -1000, -1000, 1530, -1000,
	-1000, -1000, 1438, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1707, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2484, -1000, 2349, -1000, -1000, -1000, 2881, 3737,
	3737, 3737, 3838, 546, 536, -1000, 182, 1002, 1259, -1000,
	-1000, 161701, -1000, -1000, 55062, 55062, 55062, 55062, 55062, 55062,
	55062, 55062, 2538, -1000, 830, -1000, -1000, 881, -1000, 828,
	757, 701, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 827,
	-1000, -1000, -1000, -1000, -1000, -1000, 4036, -1000, 30661, -1000,
	-1000, -1000, 572, 823, 55062, -1000, -1000, 4131, 4130, 1202,
	-1000, 385, 1078, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3392, 822, 819,
	-1000, 817, 816, 815, 814, 812, -1000, 811, -1000, 810,
	809, 807, 802, 800, 796, 790, 787, -1000, 2430, -1000,
	-1000, -1000, -1000, -1000, -1000, 733, 731, 731, 731, -1000,
	1166, 729, 786, -1000, 444, 727, 372, 724, 723, 721,
	-1000, 785, 782, 779, 777, 770, 766, 765, 764, 762,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1168, -1000, -1000,
	-1000, -1000, 1459, -22, 141748, -1000, 692, -22, -1000, -1000,
	761, -1000, 39084, 39084, 39084, -1000, -1000, 2665, 55062, -1000,
	2678, -1000, -12, -12, 1022, 66478, -1000, 63315, 1022, 458,
	895, 72764, -1000, 3344, -1000, -1000, 760, 369, -1000, -1000,
	-1000, -1000, 28058, 3343, 141748, 141748, 141748, 109502, 109502, 109502,
	141748, 4254, 4253, 3619, 55062, -1000, -1000, 81497, 154753, 116934,
	1437, -19, -1000, -1000, 3970, 86449, 80878, 3389, 154753, 3387,
	3342, 154138, 89608, 290, 3578, -1000, -1000, 759, 4252, -1000,
	-1000, -1000, -1000, -1000, 3576, 4251, 4248, 4246, 141748, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2585, 3569, -1000, -20,
	-1000, 113216, 2585, 3566, -1000, -20, 2585, 3561, -1000, -20,
	112597, -1000, -1000, 2585, 3558, -1000, -1000, 285, 3551, -1000,
	-1000, 284, 3548, -1000, -1000, 368, -99, 3546, -1000, -1000,
	-1000, -1000, -1000, -1000, 161701, -1000, -1000, -1000, 153517, -1000,
	3768, -1000, 141748, -1000, 55062, -1000, -1000, 3969, 1990, 3800,
	3885, -1000, -1000, -32, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2866, 2883, 1305, 2715, -1000, 3631, 1694, 37794, 3712,
	-1000, -1000, -1000, -1000, -1000, 366, 28058, 3200, -1000, -1000,
	141748, -1000, 141748, 3075, 3075, -1000, -1000, -1000, 4078, 4075,
	3075, 3075, 141748, 141748, -1000, -1000, -1000, -1000, -1000, -1000,
	-32, -1000, 3067, 3542, 1741, -1000, 2707, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2370, 3540, -1000, 2503,
	3538, 2363, -1000, -1000, 8904, -1000, 2449, -1000, 158409, 1511,
	-1000, -1000, -1000, -1000, 1929, 3531, -10, -1000, -1000, 2666,
	-1000, 4098, 3261, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 158309, -1000, 1925, -1000, -1000, 2377,
	2371, -1000, 1484, 3510, -1000, 3112, 3112, 102052, 3567, 70885,
	68998, 84596, -31, -1000, -1000, -1000, -1000, -1000, -141, -1000,
	26792, 161701, -1000, -1000, -1000, -1000, 2117, 161701, 1055, -1000,
	-1000, 3508, -1000, 161701, 1043, -1000, -1000, 3505, -1000, 2940,
	-1000, 3386, -1000, -1000, -1000, 2778, 88977, 2775, 1141, -1000,
	101433, 2406, 4245, -1000, 4244, -1000, -1000, 4243, -1000, 4240,
	4237, 4236, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 100812,
	2664, -1000, -1000, 1477, 1096, 92130, -1000, 2774, 3883, -1000,
	100191, 1171, -1000, 1129, 2773, -1000, 1578, 111978, 1165, 2771,
	-1000, 4235, 3845, 3017, 1129, 2770, -1000, -1000, -1000, -1000,
	-1000, 1064, -1000, 73383, -1000, 73383, -1000, 1805, -1000, 149176,
	-12, 109502, 4036, -1000, -68, -1000, -1000, -1000, 1203, -1000,
	67737, -1000, 67737, 120037, 92130, 1096, 3341, 78380, 161377, -1000,
	1140, -1000, -1000, 161701, -1000, -1000, -1000, 2931, -1000, -197,
	3110, -1000, 92130, 70256, 3340, 2928, -1000, 161701, -1000, -1000,
	-1000, -1000, 161701, -1000, -1000, -1000, 92130, 1477, -1000, 128711,
	99570, -1000, -1000, 1544, 2924, -1000, -1000, -1000, 68998, 3339,
	1485, 92130, 92130, 92130, 92130, -1000, 128090, -1000, -1000, 2292,
	1446, 3755, 2276, 109502, -1000, 2155, -1000, -1000, -1000, 3782,
	3564, 141748, -1000, -1000, 3385, -1000, 83977, 3385, 111359, -1000,
	110740, -1000, 110121, -1000, 109502, -1000, 109502, -1000, 4234, 4233,
	4232, -1000, -1000, 4231, -1000, 4229, 3775, -1000, 767, 47430,
	161701, 3772, -1000, 4227, 2182, 3381, 161701, -1000, 3562, 1920,
	1886, 141748, -1000, -1000, 141748, -1000, 141748, -1000, 141748, -1000,
	-1000, -1000, 2693, 1701, -1000, -1000, 2863, -1000, -1000, -1000,
	1138, -1000, -1000, 109502, 109502, 109502, 109502, 3335, 3015, 109502,
	2073, -1000, 46794, 3751, -1000, -1000, 3437, 4225, 1956, -1000,
	2149, -1000, 3333, 3749, -1000, 3331, 1483, 2087, 356, 4139,
	356, -1000, -1000, 298, -1000, -1000, 148557, -1000, 2881, -1000,
	141748, -1000, 2895, 3366, 3380, 1944, 2692, 2981, -1000, 46158,
	2948, 58878, 2698, 182, -1000, -1000, 182, 182, 36522, -1000,
	-1000, 37794, 1002, 86449, 86449, 28058, 1450, 55062, 55062, 55062,
	55062, 55062, 55062, 55062, 55062, 55062, 55062, 55062, 55062, 55062,
	55062, 55062, 55062, 55062, 55062, 55062, 55062, 55062, 55062, 55062,
	55062, 55062, 55062, 55062, 55062, 55062, 55062, 55062, 55062, 55062,
	55062, 55062, 55062, 2590, 55062, 1435, 55062, 55062, 55062, 55062,
	2281, -1000, -1000, 2167, 626, 2379, 757, -1000, -1000, -1000,
	4021, 4021, 4021, 781, 781, 781, 17892, 17892, 722, 4223,
	881, -1000, 55062, -1000, 108, 67097, 55062, 28689, -1000, 536,
	12204, 2896, -1000, 534, 29355, -1000, -1000, -1000, 30661, 701,
	45492, 55062, 1147, 161701, -1000, -1000, 1602, 4054, 26155, 3390,
	3182, 756, 1019, 1011, 33948, 33282, 32616, 31950, 997, 703,
	55062, 55062, 55062, 55062, 55062, 55062, 55062, 55062, -1000, -1000,
	4065, -1000, 4054, -1000, -1000, 752, -1000, 4054, 4054, -1000,
	4054, 1444, 1443, 4054, -1000, 4054, 4054, 8453, 8453, 44856,
	44220, 43584, 59514, 42948, 55062, 31314, 42312, 41676, -1000, 61422,
	141748, -22, 3964, 141748, 55062, 397, -1000, 12692, -1000, 397,
	397, 745, -73, 161701, 2959, 2959, 65220, 2713, 2551, 2551,
	2551, -1000, 1022, 20383, 1022, 126233, 2562, 1022, 1022, 328,
	375, 533, 62686, 2678, 125614, 867, 743, 5, 4, 1,
	-1000, -1000, -2, -4, -1000, -1000, 109502, 736, 28689, 28058,
	327, 2225, -74, 2963, 2958, 2956, 2953, -1000, 2952, 2662,
	-1000, -1000, -1000, 2109, -75, 1434, 109502, 141748, 2048, -1000,
	-1000, -1000, -1000, 84596, -24, 84596, 141748, 3750, 109502, -83,
	-1000, 154753, 5994, -81, -1000, 1499, 325, 4054, -1000, -1000,
	-1000, 4222, 4221, -1000, 518, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 733, 731, 731, 731, -1000, 1166, 729,
	444, 727, 372, 724, 723, 721, -1000, -1000, -1000, -1000,
	-1000, 3326, 109502, 141748, 2007, 83358, 116315, -99, 116934, 154753,
	-65, -1000, -1000, -1000, -1000, 109502, -1000, -1000, 109502, -1000,
	75873, -1000, 141748, -1000, -1000, -1000, 4220, -1000, 109502, 109502,
	2585, 3503, -1000, 109502, -1000, 109502, 278, 3502, -1000, -1000,
	141748, -1000, 109502, 109502, -1000, 141748, 141748, 141748, 154753, 154753,
	275, -1000, 109502, 1002, -82, 1283, -32, -1000, -1000, -1000,
	-1000, 1530, -1000, 1911, -1000, -1000, -1000, -1000, -1000, -1000,
	1478, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1202,
	-1000, -1000, -1000, -1000, 4070, 4068, -30, -1000, -1000, 28058,
	-1000, 2208, -1000, -1000, -1000, -1000, 141748, 141748, -1000, -1000,
	141748, 141748, -1000, -1000, -33, 1814, 683, 1433, -1000, 98949,
	2776, 3753, 4219, 3010, 3743, 1794, -1000, 1683, 720, -1000,
	3866, 97090, 3900, 3915, 1501, -1000, 3325, -1000, -1000, -1000,
	1050, 1888, 2049, 1430, 1426, 97090, 2503, -1000, 86449, -1000,
	3050, 3834, 1591, 1610, 1591, 1591, 1582, 1549, -1000, 97090,
	2046, 1425, 1421, 3908, 1420, 2043, 1419, 3625, -1000, -1000,
	2657, 2738, -1000, -1000, -1000, -1000, 1890, 3088, -1000, 2870,
	1547, 1547, 141748, -1000, 1418, -1000, -1000, 1790, 2094, -1000,
	-1000, 127471, 1972, -1000, 1416, 1414, 142986, 3986, 2484, 2542,
	911, 2335, -1000, 1506, 1413, 3323, -1000, -1000, -42, 3898,
	3913, 1501, -1000, -1000, 3317, 1412, -1000, 1158, -1000, -1000,
	-1000, 3833, 109502, 28058, 1762, 1756, 1757, 2035, 1411, -25,
	-1000, 3892, 1793, -1000, 4002, 92130, -1000, 2798, 1815, -1000,
	1477, 1477, 122519, 141748, -1000, -1000, -1000, 3797, 3795, -1000,
	-1000, 1408, 1407, -1000, 1153, 7073, 3681, -1000, 154753, 1153,
	1153, 2342, 3500, 3068, 1951, -1000, 3109, 1015, 3106, -1000,
	-1000, -1000, 1015, -31, 84596, 141748, 323, -1000, 108, 55062,
	55062, 108, 55062, 108, -1000, 3870, 3499, 3962, -1000, 3496,
	4218, 719, -1000, -1000, 2884, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 717, 2769, 3315, 141748, 307, -1000, 109502, -1000,
	3951, 126852, -1000, 3493, 154753, 2503, 2767, -1000, -1000, 98330,
	-1000, 3492, 2358, 562, 2765, -1000, 755, 4213, 3491, -1000,
	147938, -1000, 3768, 1415, 3490, 1224, 696, 3950, -1000, 696,
	76503, -1000, 141748, -1000, -12, 5921, 93368, -89, -90, 520,
	-1000, 141748, 141748, 3697, 2351, 2284, -1000, 1123, 68998, -1000,
	68998, -97, -1000, -197, 3103, 1560, 68998, -1000, 1096, -148,
	1015, -1000, 1015, -1000, 109502, 3377, -1000, 92130, 68998, -1000,
	1096, 1096, 1096, 1096, -1000, -1000, -1000, -1000, 4211, 4210,
	4208, 4207, -1000, -1000, 1128, 109502, 141748, 109502, -1000, 3061,
	1914, -1000, 321, -1000, 154753, -1000, 154753, 141748, 109502, -1000,
	-1000, 1128, 141748, 1128, 141748, 1128, 141748, 1128, 1128, -1000,
	-1000, -1000, -1000, -1000, 108, -1000, -1000, 161701, -1000, 55062,
	-1000, -1000, 1678, 4206, 1862, -1000, 3375, -1000, 3374, -1000,
	37, 309, -1000, -1000, 4057, 2184, -1000, 4128, -1000, -1000,
	-1000, -1000, -1000, 109502, 3311, -1000, -1000, -1000, -1000, 4204,
	3747, 161701, -1000, 88346, 2350, -1000, -1000, -1000, -1000, 109502,
	109502, 109502, 109502, 141748, 3680, -1000, 141748, 3645, 3679, 109502,
	-1000, 4136, -1000, -1000, 97090, -1000, 2895, 3366, -1000, -1000,
	-1000, -1000, -1000, -1000, 1629, 2629, -1000, 2917, -1000, 1738,
	-1000, -1000, -1000, 161701, 60150, -1000, -1000, 161701, 2132, -1000,
	58242, 57606, -1000, -1000, 1907, 109502, 2974, -1000, 2974, -91,
	-1000, 159157, 2913, 109502, -30, 37794, -1000, -1000, -1000, -1000,
	-1000, 1049, 1052, 1052, 1550, 1550, 1550, 1550, 3858, 371,
	535, 681, 7533, 7533, 6021, 6021, 6021, 6021, 6021, 7533,
	659, 781, 781, 659, 659, 659, 659, 659, 781, 781,
	781, 7533, 7533, 7533, 781, 17892, 13667, 15553, 55062, 55062,
	1406, 2126, 626, 15230, 55062, 16742, 16742, 16742, 16742, -1000,
	2125, -1000, -1000, -1000, -1000, 3306, 716, 59514, 59514, -1000,
	-1000, -1000, -1000, 30008, 55062, -1000, -1000, -1000, -1000, 41010,
	-1000, -1000, 157985, -332, 519, -1000, 306, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	516, -88, 75, -1000, 55062, 55062, 55062, 511, -1000, 304,
	55062, 141748, -1000, 19277, 866, -98, -1000, -102, 1621, -1000,
	55062, -1000, -1000, 1401, -1000, 1399, 1397, 1395, -1000, 715,
	510, -1000, 299, -1000, 2546, 714, 713, 55062, -1000, -1000,
	-1000, -1000, -1000, 157885, -1000, -1000, 157561, -1000, -1000, 157461,
	-1000, -1000, 157137, -1000, -1000, -1000, -1000, -1000, 161277, 18613,
	17411, 17017, 11247, 16322, 14692, -103, 508, -110, 4054, 507,
	500, 499, 1047, 1046, 497, 495, 494, -111, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-112, 492, -1000, 3305, -88, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 491, -1000, 490, -1000, 160953, -88, 489,
	8682, -1000, 59514, 59514, 59514, 59514, 488, -1000, 158833, -1000,
	160853, 40374, 40374, 40374, 487, 160529, 55062, -88, -113, -1000,
	-118, -1000, -1000, -1000, -1000, 687, -121, -1000, -128, 1090,
	39084, 63960, 28058, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1090, 1090, 55062, -1000, 55062,
	2935, -1000, -1000, -1000, -1000, 2933, 2308, 2959, 65220, -1000,
	-1000, -1000, -1000, 126233, -1000, 4036, 3388, -1000, 126233, -1000,
	-1000, 141748, 692, -1000, 126233, 126233, 28058, 1022, -1000, -1000,
	141748, 691, 1022, 126233, 874, -1000, -1000, -1000, -1000, -1000,
	486, 75254, 75, 292, 28058, 1129, -1000, -1000, 3094, 3094,
	3094, 3094, 3094, 109502, -1000, -1000, 154753, 1394, -29, -84,
	3100, 3099, 3091, -31, 84596, -31, -141, 141748, -26, 4000,
	-276, -1000, 2465, -1000, 86449, -1000, 878, 1338, 28058, -1000,
	-1000, -1000, -1000, 4054, 154753, 3304, 333, 3081, 3080, 3077,
	-1000, 2656, 115077, 310, -99, 154753, -1000, 290, -129, -1000,
	-1000, 85834, 80249, -1000, 2553, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 4203, -1000, 2585, -1000, -1000, 109502, 2585, 2585,
	-1000, 109502, 109502, 2585, -1000, 285, -1000, 284, -1000, -1000,
	-99, -1000, 1137, 37794, -1000, 1530, -1000, -1000, 1768, -1000,
	2367, -1000, 1431, -1000, -1000, 37794, -1000, 3701, -1000, 2055,
	-1000, -1000, -1000, -1000, 3222, 141748, 141748, 109502, -1000, 123757,
	141748, -1000, 2487, 154753, -1000, 2763, 147319, 2751, 146700, 86449,
	-1000, -1000, 711, 1063, 2912, 2910, 1221, 141748, 141748, 2908,
	146081, 145462, -1000, 4198, 141748, 2427, 55062, 123757, 3832, 2536,
	2805, 108, 108, -1000, 108, -1000, -1000, 710, 1542, 109502,
	109502, 141748, 154753, 109502, 2250, -1000, -1000, -1000, -1000, -1000,
	97709, -1000, -1000, 1591, -1000, -1000, -1000, 1591, -1000, 1591,
	2503, 2177, 141748, 154753, 109502, -1000, -1000, -1000, -1000, 141748,
	141748, 154753, 2654, 2737, 2651, 3085, -1000, -1000, -1000, -1000,
	-1000, -1000, 154753, 144843, 2332, 144224, 2326, 2325, -1000, -1000,
	-1000, 2266, 2324, 2469, 2030, 141748, -1000, -1000, -1000, -1000,
	-1000, 1647, -1000, 911, 1393, 3289, 55062, 55062, 2483, 108,
	108, -1000, 108, 708, 28058, -1000, 1427, -1000, 3383, 141748,
	4127, 143605, 4124, 141748, 141748, 141748, 154753, 3734, 141748, -27,
	-1000, 1905, -1000, 4002, -1000, 989, -1000, -148, -28, -163,
	-1000, 987, 985, -141, 2283, 141748, 154753, -1000, 142986, 7073,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2477, 3086, 1234,
	141748, 1484, -1000, -1000, 2028, 1392, 1391, 97090, 2437, 2026,
	2157, 154753, 68998, 1124, 68998, 3024, -1000, -1000, 25518, -1000,
	161701, 161701, -1000, 161701, -1000, 82737, 92130, 92130, 141748, -1000,
	77132, 141748, 93987, 1068, 3488, 74004, -141, 1096, 1477, 3412,
	1883, -163, 707, 141748, -1000, -1000, 2503, 3486, 562, 2761,
	-1000, 154753, 1170, 3947, 3485, 706, 4197, 4196, -1000, 109502,
	2650, 2759, -1000, -1000, 142367, 3596, 911, 141748, 1090, 65220,
	2374, -1000, 72145, 1191, 141748, 2176, 246, -1000, -1000, -1000,
	13, 141748, -1000, 890, -1000, -1000, 5921, 5921, 1096, 69627,
	-131, -1000, 280, 702, 981, 980, -1000, 5706, -1000, -197,
	-1000, 92130, 1123, 68998, 3287, -197, 3074, 3284, -1000, -1000,
	1136, 1096, 1470, 3073, 1096, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -13, -1000, 2023,
	2153, 141748, -99, -99, -47, -1000, -1000, 277, -29, -1000,
	1128, -1000, 1128, -1000, 1128, -1000, -1000, -1000, 161701, -1000,
	-1000, -1000, 1852, 1849, 141748, -1000, 141748, 3360, -1000, 141748,
	-1000, -1000, 109502, -1000, 4191, -1000, -1000, 28058, 141748, 109502,
	28058, 109502, 3359, 3358, -1000, -1000, -1000, 141748, -1000, -1000,
	141748, -1000, -1000, -1000, -1000, -1000, -1000, 1249, -1000, 2132,
	2620, -1000, 701, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2847, -1000, -1000, 36522, 1024, -1000, -1000, 109502,
	-14, -30, 55062, 55062, 14149, 10550, 55062, 59514, 59514, -1000,
	55062, 9892, -1000, -1000, -1000, -1000, -1000, 3278, 700, 55062,
	86449, 7242, 2327, -1000, 477, 13908, 659, -1000, 55062, -1000,
	7774, -1000, 474, 39738, -1000, 159581, 39, -136, -1000, 21035,
	-88, -138, -1000, -1000, 876, -1000, 3544, -1000, 55062, 160429,
	2819, 2197, 2081, 1895, 4054, 4123, 24881, -1000, 77761, 1145,
	2572, 157037, -1000, -1000, -1000, -1000, 86449, 86449, 55062, 55062,
	-1000, 55062, 55062, 55062, -1000, -1000, -1000, 4054, 473, -1000,
	-1000, 1048, -1000, -1000, -1000, 1048, -1000, -1000, 1591, -1000,
	1591, -1000, 55062, -1000, -1000, 3273, 55062, -1000, 86449, 86449,
	59514, 59514, 59514, 59514, 59514, 59514, 59514, 59514, 59514, 59514,
	59514, 59514, 59514, 59514, 59514, 59514, 59514, 59514, 59514, 59514,
	2930, 59514, 4019, 4019, 4019, 857, -1000, 3357, 3273, 55062,
	55062, 86449, 472, 470, 469, -1000, 55062, -88, -1000, -1000,
	10113, 699, -1000, 2833, -1000, 141748, -1000, 3181, -1000, 55062,
	-1000, -137, -1000, 2678, -1000, -1000, 3181, 3181, -143, 161701,
	65220, 65220, -1000, 695, 55062, 2926, -1000, -1000, 864, -334,
	-1000, 978, -1000, -1000, -1000, -1000, -1000, -1000, 977, -1000,
	692, -1000, -1000, -1000, 276, 126233, 691, -1000, 141748, 126233,
	862, -1000, -145, -1000, -1000, -146, -1000, 125614, 465, 28058,
	-1000, 1090, 4296, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2950, -276, 154753, 154753, 2016, 2015, 2014, -31, -141, 2610,
	-1000, 3197, 4121, -1000, 4045, 873, 858, 261, 464, -99,
	154753, 154753, 2012, 1985, 1973, 79630, 3270, 154753, -1000, -1000,
	-1000, 77132, 86449, -1000, 86449, -1000, -1000, -1000, -1000, 2585,
	-1000, -1000, -1000, 278, -1000, -1000, -1000, -1000, 3022, -1000,
	-32, -1000, -1000, -1000, 55062, -1000, 1095, -1000, -1000, 3752,
	690, 1388, 1378, -1000, -151, -1000, 970, -1000, -1000, -1000,
	-1000, -1000, 3239, -1000, 3483, -1000, 2758, -1000, 1199, 2756,
	2145, -1000, 55062, 689, 3011, 686, 684, 4190, 2272, 4189,
	1222, 3480, 2585, 3469, 2585, -1000, -1000, -1000, 1054, -1000,
	161701, -154, -1000, 2536, -1000, 680, 678, -1000, -33, 1796,
	629, 1377, 1135, -1000, -1000, 55062, 55062, 124995, -1000, 540,
	3762, -15, -1000, -1000, -1000, 1954, 1376, 1367, -1000, -1000,
	-1000, -1000, -1000, 2503, 1943, 1355, 1350, -1000, -1000, -1000,
	-1000, -1000, -1000, 3426, 2985, 2730, -1000, -1000, -1000, -1000,
	2755, -1000, 141748, -1000, 3466, 141748, 3058, 911, 141748, 3762,
	3174, 1134, -1000, 3421, 3418, 1036, 141748, 55062, 55062, 160105,
	160005, -1000, 1132, -1000, -1000, 55062, -1000, -42, -1000, 1349,
	3880, 2754, 109502, -1000, 2585, 3463, 1348, -1000, 1347, -1000,
	-1000, -1000, 3891, 3888, 1344, 1793, 92130, 68998, 2720, -1000,
	3864, 2608, 4030, 4002, 68998, -1000, 122519, 92130, 92130, -1000,
	-1000, -1000, 4030, -1000, -1000, -1000, -1000, 87715, -1000, -1000,
	1153, 141748, 154753, 109502, 2045, -1000, -1000, 115077, 115696, 141748,
	3068, -99, 1015, -1000, 2783, 1015, 1124, 3268, -1000, 2968,
	-1000, -1000, 1130, 463, -43, -1000, 1457, 4187, 460, -156,
	-44, 86449, -1000, -1000, -1000, -1000, 2751, 109502, 667, 141748,
	1474, 2995, 141748, 141748, 3946, -1000, 2687, 732, 109502, 1030,
	-1000, 4036, -1000, -1000, -1000, 141748, 39084, 122519, -1000, 3875,
	109502, 3945, 3462, 1129, 109502, 108, 109502, 4097, -1000, -1000,
	3944, 109502, 3461, 2649, 2753, 2875, 911, 92749, 1129, 2565,
	-55, -1000, 2176, 38430, 3754, -164, -1000, -1000, -1000, 1090,
	76503, 65220, 55062, 4185, -166, -1000, -1000, -1000, -1000, -1000,
	92130, 1096, 141748, 141748, 4184, 92130, 92130, 92130, -45, 665,
	-1000, 967, 966, 965, -1000, -1000, -1000, -1000, -1000, -1000,
	963, 962, 961, 960, -1000, -1000, 1123, -1000, -1000, -197,
	68998, 1123, 68998, 108, -1000, 2584, -1000, 109502, 68998, -1000,
	24244, 141748, 3061, -1000, 87078, -1000, -1000, -1000, -1000, -1000,
	1128, -1000, 4120, -141, -1000, -1000, -1000, -1000, -1000, 2496,
	2697, 2496, 2140, 2129, -1000, -1000, -1000, 2618, -1000, -1000,
	-1000, -1000, 2987, 3728, 28058, 3873, 16742, 55062, 55062, 9477,
	844, 619, 16742, 55062, 55062, 86449, 7102, -172, 55062, 55062,
	-1000, 55062, 856, 161701, -1000, 4118, 55062, 459, 453, -1000,
	-1000, -1000, 4038, -1000, -1000, -1000, 161701, 55062, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 452, -1000, 161, -1000, -1000,
	-1000, 151033, -1000, 55062, 451, 3827, -1000, 448, 446, 13359,
	8578, 156713, 156613, 156289, 442, -1000, -1000, -1000, 437, 435,
	161701, 3357, 161701, -1000, -1000, 1205, 1205, 1539, 1539, 1539,
	1539, 4019, 986, 1274, 1718, 928, 928, 928, 1156, 857,
	857, 928, 928, 928, 857, 3256, 2936, 664, 9879, -1000,
	-1000, 161701, 161701, 434, -1000, -1000, -1000, -88, 433, 10113,
	-1000, -1000, 3175, 3819, 161701, -1000, 65220, 3175, 3175, -1000,
	-1000, 2308, 141748, 161701, 65220, -1000, 3388, -1000, 22327, 21684,
	-1000, 28058, -1000, -1000, -173, -1000, 86449, -1000, -1000, -1000,
	4036, -1000, 75254, -1000, -1000, 14, -1000, 4296, -1000, 959,
	-1000, -1000, 92130, 92130, 4183, 4182, -1000, 4117, 4116, 2563,
	4115, 3094, -1000, -276, -178, 141748, 141748, 141748, -1000, 2604,
	-1000, 855, 4179, 871, 28058, -1000, -99, -99, 141748, 141748,
	141748, 3248, 109502, 141748, 1988, 154753, -99, -1000, -1000, -1000,
	-1000, -1000, -1000, 3695, 161701, 3356, 3164, 3155, 141748, 141748,
	-1000, 123757, 37794, 1751, 124376, 141748, 3457, -1000, 3455, -1000,
	1221, 3009, 156189, 65849, -1000, 65849, 141748, -1000, -1000, -1000,
	-1000, 2476, 1653, 4178, 1264, -1000, 3784, 141748, -1000, 141748,
	-1000, -1000, -1000, 123757, -1000, 141748, 141748, 109502, 141748, -1000,
	154753, 3432, -181, 161701, -46, -1000, 958, -1000, 1543, -1000,
	23607, 141748, 154753, 109502, 141748, 154753, 109502, 141748, -1000, 2983,
	3454, 1189, 141748, -1000, 3453, 141748, 1187, -1000, -1000, 141748,
	2529, -1000, -1000, 3415, -1000, 161701, 159681, 108, 55062, 3431,
	-183, 28058, -1000, 4114, 4112, 3452, 3790, -1000, 141748, 4111,
	141748, 109502, 3693, -1000, -1000, -1000, -1000, 954, 951, 950,
	930, 926, 4008, 122519, -1000, 1126, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1942, 1340, 1328, 2646,
	2641, 2593, -47, 2437, 1124, -48, 663, -1000, 1124, -1000,
	92130, 68998, 4174, 2168, 77132, 55062, 55062, -1000, 3007, -1000,
	119416, 93987, 2670, -1000, -1000, 65849, 661, 141748, 658, 141748,
	655, -1000, 108, -1000, 4172, 123757, 645, -1000, 2583, -1000,
	846, -1000, -1000, 229, -186, 154753, 2503, 108, 109502, -1000,
	562, 1121, 562, 432, -49, -1000, 3507, 1219, 28058, 109502,
	3443, 2878, 911, 92749, -1000, 1415, 2981, -1000, -53, -1000,
	557, 108, 2565, -1000, -55, 161701, -1000, 924, 426, -1000,
	3691, -1000, -1000, -191, -1000, -1000, 6605, 6605, 92130, 68998,
	92130, 92130, 92130, 68998, 92130, -1000, 1123, 3943, -1000, -197,
	-1000, 2792, 1096, 1096, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 28058, 1877, -1000, 644, 642, -1000, -1000, -1000,
	-1000, 3728, 16742, 16742, 55062, 55062, 55062, 16742, 7102, -194,
	-1000, 16742, 16742, -88, -1000, -1000, 159581, -1000, -1000, -1000,
	161701, -1000, 22970, 2514, -1000, 155853, -1000, 36522, -1000, -1000,
	55062, 55062, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	59514, 3243, 641, 86449, -1000, -1000, 425, 1143, 55062, 56970,
	2678, 1143, 1143, -1000, -196, -1000, -1000, -1000, 4036, -1000,
	4036, 14, -1000, 141748, -1000, -1000, -1000, 28058, -1000, 92130,
	-1000, -1000, -1000, -1000, -1000, 4171, 4164, 2728, 4163, 4162,
	-1000, -1000, -1000, 3410, -180, -182, -193, -1000, 860, -1000,
	4161, -1000, 214, 176, 168, 154753, 3242, 160, 3057, 3049,
	-99, -1000, 108, -1000, -1000, -1000, -1000, -1000, -1000, 3047,
	3942, -1000, 2299, -1000, 141748, 141748, -1000, 141748, -1000, 28058,
	141748, 3198, 1403, -1000, 1063, 2902, 637, 59514, 1248, 109502,
	1088, 3152, 3151, -1000, 3916, 3818, 3118, -199, -1000, 141748,
	55062, 141748, -201, -202, 2725, -1000, -1000, 1247, 1402, 55062,
	1246, -1000, -1000, -1000, 86449, 635, 2585, 2585, -1000, -209,
	-210, -1000, -1000, -1000, 55062, 1320, 141748, 37158, -1000, 4159,
	3762, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 141748,
	141748, -1000, -1000, -1000, 141748, 3762, 141748, -1000, 55062, -1000,
	159257, 55062, 1312, -1000, -1000, -1000, 4109, 2585, 28058, 2585,
	-1000, 2585, 3790, 1262, 92130, 55062, 1689, 68998, 68998, -1000,
	-1000, -1000, 2681, 141748, 154753, 109502, 2138, 2138, 3355, -1000,
	-1000, -1000, 2720, 2720, -1000, -56, 1124, -1000, 1744, -1000,
	161701, 161701, 2513, 4158, -1000, -1000, -1000, -1000, 2899, -1000,
	-1000, -1000, 141748, 2888, 3131, -211, 65849, 634, 65849, 633,
	141748, 1109, -1000, -212, 93987, 1068, 1081, -1000, 73383, -1000,
	-1000, -1000, -1000, 562, 3941, -1000, 3020, 3940, -1000, 4105,
	632, 631, 141748, 2640, 627, 28058, 3739, 911, 92749, -1000,
	3596, 2176, -1000, 2749, 141748, 3738, -1000, 2981, 626, 1096,
	625, 1096, -1000, -219, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1458, 1123, -59, -1000, 3982, 622, 747,
	-1000, -1000, -1000, -1000, 109502, 109502, 55062, 55062, -1000, 16742,
	16742, 16742, -1000, 421, -1000, -1000, 2565, 3815, -1000, -61,
	155536, 155416, 6266, 59514, 86449, -224, -1000, -1000, 141748, 161701,
	-71, -1000, 161701, 617, 615, 455, -1000, -1000, -1000, 845,
	704, -1000, -1000, -1000, -1000, 4157, -1000, -1000, -1000, 154753,
	154753, 154753, 4154, -1000, 154753, 154753, 154753, -99, 154753, 154753,
	1931, 1926, -1000, 123138, 141748, -1000, -1000, 2145, 2271, -1000,
	-1000, 141748, 2752, -1000, -1000, -1000, 1102, 55062, 9879, 59514,
	605, 55062, -1000, 604, 603, 3939, 3637, -1000, 2992, 3241,
	2231, 65849, -1000, 3728, -1000, 155375, -1000, 1216, 2274, -1000,
	-1000, -1000, -1000, 161701, 59514, 3790, 65849, -1000, -1000, 598,
	588, 161701, 575, 918, 3240, -1000, -1000, -1000, -1000, -141,
	-141, -1000, -1000, 161701, 108, 161701, 571, 3880, -1000, -1000,
	-1000, -1000, 2585, 109502, -1000, 161701, -1000, -1000, -1000, -1000,
	916, -1000, -1000, -1000, 1308, -1000, -1000, -1000, -1000, -1000,
	4153, 3237, 115077, -1000, -225, 2344, 86449, -1000, 1068, -1000,
	-1000, 2670, 569, -1000, 1089, 2927, 2927, 1216, -226, 65849,
	-232, 65849, -233, 2633, 3014, -1000, 417, 3937, 1081, -1000,
	4025, -1000, 1090, -1000, 3933, 108, 3689, -1000, 108, -1000,
	4097, 65849, -1000, 109502, 65849, 2637, 2429, 2860, 92749, -1000,
	2875, -1000, -1000, -235, 141748, 2176, -1000, -1000, 92130, -1000,
	-1000, 4076, -1000, 2792, -1000, 141748, -1000, 141748, -1000, -1000,
	-241, -243, -1000, 2424, 55062, 36522, -1000, -1000, 6266, -248,
	-1000, -80, -1000, 3932, 56970, 4152, 4151, 4150, -1000, -1000,
	-1000, -276, -276, -276, -1000, -99, -99, -99, -99, -99,
	141748, 141748, -1000, 2282, -1000, 2751, -1000, -1000, 3442, -1000,
	3176, 568, 19517, 9879, 2840, 141748, 19397, 2503, 2503, -1000,
	3920, 3188, -1000, -1000, 2483, 566, -1000, -1000, -1000, -1000,
	1024, 141748, 1089, 3170, 109502, 9879, 1220, -250, 2496, 2496,
	55062, 35886, 2520, -1000, 55062, -1000, -1000, 3790, 68998, 154753,
	-1000, 154753, 2635, -1000, 3216, 8775, -1000, 2633, 141748, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2231, 1216, -251, 2483, -257, -1000, -1000, 3779, -1000,
	3687, 3007, 108, -1000, -1000, -1000, 108, -1000, 4147, 1121,
	416, -258, 1219, -259, 109502, 2252, -1000, 911, -1000, 2878,
	1090, 3615, -1000, -265, -1000, -1000, -1000, -266, -267, -1000,
	-1000, 415, 56334, 56334, 56334, -88, -91, -1000, 141748, 563,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 152, 145, -1000,
	-1000, 3411, 1018, -1000, 933, 2352, 411, 1235, 291, 170,
	-1000, -1000, -1000, 3118, -1000, 141748, -1000, -1000, -1000, 1018,
	562, -1000, 55062, 1216, -268, -1000, 1186, -273, -1000, 1184,
	-275, -1000, 3235, -1000, -281, 2585, -1000, -276, 275, 2138,
	1110, 3860, 2569, 8775, -1000, 4088, 92749, -1000, -1000, -1000,
	2852, -286, -1000, -1000, 2483, 2231, 1216, 1089, 2483, 2760,
	-1000, 2513, 1109, -1000, -1000, -1000, -1000, 1216, 561, 2231,
	560, 1557, 911, -1000, -1000, 1591, 3739, 3611, 1531, 1096,
	-1000, -1000, -1000, 3523, -1000, 60786, 2660, 2120, 158733, 3523,
	3523, -1000, -1000, 154753, 154753, 141748, 1089, 3846, -1000, 1008,
	1005, 1692, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1090, -292, -1000, 2840, 161701, 1089, -1000, 2496, 3042, -1000,
	2496, 3233, -1000, 2519, -1000, -1000, -1000, -1000, 3231, -1000,
	2076, 4007, -1000, -1000, 3896, 55062, -1000, -1000, -1000, -1000,
	-1000, -1000, 1089, 141748, 1089, 2483, 2231, 1090, 1089, 2105,
	2097, 4143, 1068, 2633, 2231, 65849, 2483, 65849, 2472, -1000,
	141748, -1000, 2429, 1521, -1000, 1791, -1000, -1000, 2171, 3976,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -99, -99, -1000,
	-1000, 913, -1000, 3628, -1000, 1243, 2375, 2375, -1000, -1000,
	933, -1000, -1000, 556, -1000, 553, -1000, 154753, 2578, -1000,
	-1000, -1000, 161701, -1000, -1000, 1090, 1089, 2483, 1409, 1090,
	-1000, 4142, -1000, 2633, -1000, 2483, -298, 1089, -300, 2533,
	-1000, -1000, -141, 2252, -1000, 1773, 76503, 2116, -1000, -1000,
	2559, 55698, 55062, -1000, 4005, -1000, -1000, 2969, -1000, 3118,
	55062, 55062, 275, 74625, 580, 1409, 1090, 1089, -1000, 1154,
	-1000, 1409, -1000, 2852, 1089, 1216, 1090, 2231, 1893, 911,
	1557, 76503, -284, -1000, -1000, -1000, 161701, -1000, -1000, -1000,
	-1000, -301, -308, -1000, -163, 122519, -328, -1000, -1000, -1000,
	-1000, 1409, 1090, -1000, -1000, -1000, 1090, 2231, 1409, 2483,
	-1000, -1000, 2266, 154753, 2472, -284, -1000, 2483, 1306, -309,
	-1000, -1000, 1409, 1409, 2483, -1000, 1089, -1000, 1893, -1000,
	-1000, -1000, 548, -1000, -1000, -1000, 1089, 1090, -1000, 55062,
	1090, 1409, -310, 1409, -1000, 2483, -1000, -1000,
}

var sqlPgo = [...]int16{
	0, 5107, 5103, 19, 5096, 5095, 5093, 5079, 5077, 5074,
	5071, 5070, 5063, 5059, 5057, 5048, 182, 5047, 5045, 5044,
	5043, 5040, 5036, 5035, 5034, 5033, 5032, 5031, 5028, 5021,
	5020, 5019, 5013, 5012, 5010, 5006, 5005, 5004, 5003, 5002,
	4998, 4997, 4995, 4994, 4993, 4992, 4991, 4988, 4986, 4982,
	4979, 4978, 4976, 4975, 4974, 4973, 4972, 4971, 4970, 4968,
	4966, 4964, 4962, 4961, 4960, 4959, 4954, 4953, 4950, 4948,
	4947, 4946, 4944, 4943, 4933, 4932, 4930, 4927, 4923, 4922,
	4921, 4920, 4915, 4914, 66, 4913, 4911, 4910, 4908, 4907,
	4906, 4905, 4904, 4903, 4901, 4899, 4896, 4895, 4894, 4893,
	4892, 4891, 4890, 4884, 4883, 4882, 4881, 75, 4880, 326,
	4877, 4874, 4872, 4871, 4869, 4867, 4865, 4864, 4863, 4862,
	4859, 4858, 4854, 4851, 325, 4849, 13, 198, 4847, 4846,
	15, 4844, 4843, 324, 4842, 4841, 4838, 4837, 4836, 335,
	4835, 4834, 4833, 4830, 4828, 313, 4827, 4825, 4824, 4823,
	4822, 4821, 95, 153, 4820, 4817, 1743, 4814, 4811, 4810,
	4805, 4804, 4803, 4800, 308, 311, 4799, 4798, 4797, 306,
	200, 4794, 322, 4793, 4792, 4791, 4786, 4783, 4782, 4781,
	4780, 4779, 4777, 4776, 4775, 4773, 4772, 4771, 4768, 4767,
	4766, 4750, 4749, 4747, 4742, 4741, 4740, 4739, 4738, 4737,
	4733, 4732, 4731, 4724, 4722, 4720, 4718, 4717, 4714, 4711,
	4710, 4709, 4706, 4705, 4703, 4702, 4701, 301, 250, 144,
	4700, 4699, 4698, 4697, 4696, 4688, 319, 318, 4687, 4684,
	4682, 4681, 4680, 3889, 4679, 4678, 4677, 4676, 4675, 4673,
	4672, 4668, 4667, 135, 11, 50, 4665, 4662, 103, 106,
	108, 98, 126, 118, 4661, 4660, 147, 4658, 154, 136,
	4657, 137, 122, 32, 38, 314, 299, 8824, 291, 4655,
	4653, 4649, 303, 237, 4647, 292, 4645, 4644, 4643, 4642,
	4641, 4640, 87, 62, 248, 4638, 166, 4637, 4636, 167,
	201, 214, 211, 207, 206, 107, 67, 121, 99, 72,
	57, 24, 89, 252, 27, 254, 4, 6, 316, 4634,
	309, 10, 171, 9, 46, 4631, 4629, 4628, 4627, 3994,
	163, 4625, 315, 294, 202, 4624, 4623, 4622, 1377, 4621,
	4620, 60, 276, 224, 101, 127, 100, 155, 4618, 185,
	218, 37, 4613, 280, 80, 4610, 4609, 116, 111, 10197,
	10225, 4607, 4606, 133, 84, 170, 6034, 232, 181, 245,
	283, 151, 196, 192, 4604, 124, 4602, 173, 178, 209,
	109, 4600, 105, 4599, 3908, 93, 217, 188, 6618, 4598,
	4597, 4595, 97, 4594, 128, 4593, 4592, 76, 26, 3,
	2, 168, 47, 48, 7, 4591, 29, 150, 59, 33,
	4589, 39, 4587, 4582, 4578, 4577, 58, 4576, 77, 190,
	4573, 4569, 328, 4566, 123, 64, 152, 4564, 51, 271,
	4558, 275, 157, 4557, 4556, 228, 238, 240, 221, 264,
	4554, 61, 282, 4552, 4547, 4545, 4544, 4542, 332, 174,
	8, 156, 4539, 4537, 183, 4534, 71, 293, 239, 4530,
	65, 4525, 4524, 210, 68, 177, 327, 208, 273, 148,
	284, 226, 288, 4522, 4520, 4519, 223, 4518, 4517, 272,
	194, 4515, 4513, 268, 338, 112, 63, 1, 205, 96,
	287, 94, 236, 184, 4508, 241, 176, 4507, 175, 4505,
	113, 4504, 329, 220, 259, 53, 12, 18, 110, 134,
	4503, 28, 286, 191, 251, 139, 4502, 7763, 3005, 3218,
	277, 4500, 189, 149, 92, 162, 195, 317, 102, 4499,
	4497, 3044, 4495, 4492, 4491, 4490, 227, 4489, 4488, 258,
	179, 193, 4487, 172, 267, 4486, 125, 85, 69, 30,
	146, 104, 321, 142, 279, 204, 302, 4485, 4484, 4482,
	230, 4481, 115, 145, 247, 4480, 246, 310, 73, 4478,
	213, 4477, 187, 2763, 82, 186, 4476, 274, 4475, 4474,
	4473, 4471, 4470, 4467, 4465, 4464, 285, 4463, 4462, 4461,
	44, 235, 4460, 231, 233, 215, 119, 70, 229, 129,
	3491, 159, 216, 244, 52, 5, 4459, 257, 4458, 5580,
	74, 4456, 0, 15110, 11375, 14121, 4450, 4449, 14394, 4448,
	5469, 4447, 4446, 4444, 256, 90, 4441, 4440, 4437, 141,
	4436, 91, 4435, 4431, 86, 4430, 45, 23, 25, 40,
	36, 903, 158, 4429, 4428, 263, 160, 34, 4427, 323,
	281, 4426, 4425, 4421, 4420, 114, 4419, 56, 4418, 54,
	4415, 4414, 55, 22, 41, 4413, 4408, 255, 199, 3832,
	197, 180, 4406, 138, 4402, 4401, 297, 78, 165, 4400,
	4399, 312, 249, 253, 120, 4394, 305, 4392, 243, 4391,
	81, 31, 4389, 4388, 296, 132, 130, 83, 300, 161,
	49, 4387, 4384, 4382, 4381, 225, 4378, 4377, 4376, 4375,
	4373, 131, 169, 4372, 79, 4370, 4366, 4365, 43, 262,
	222, 4364, 17, 4361, 4356, 4354, 270, 265, 307, 212,
	260, 4352, 4351, 203, 4350, 4348, 4346, 304, 4343, 4342,
	3892, 334, 4338, 42, 4332, 4331, 4330, 21, 4329, 4328,
	242, 3597, 4326, 4298, 20, 4103, 234,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 4, 4, 4, 4,
	4, 4, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 14, 14, 10, 10, 10, 10, 11, 11, 11,
	11, 11, 63, 63, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	20, 20, 20, 20, 20, 20, 20, 42, 44, 43,
	37, 37, 38, 38, 39, 40, 40, 45, 47, 46,
	48, 49, 49, 50, 50, 50, 13, 13, 13, 9,
	9, 9, 9, 9, 9, 9, 9, 9, 23, 23,
	51, 51, 24, 24, 53, 53, 25, 25, 54, 54,
	671, 671, 671, 672, 672, 673, 673, 673, 28, 56,
	58, 58, 478, 478, 21, 22, 22, 22, 22, 674,
	674, 674, 674, 41, 29, 57, 34, 34, 34, 34,
	34, 246, 246, 246, 246, 27, 27, 52, 52, 292,
	292, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 670, 670, 294, 294, 293, 279, 279, 280, 280,
	281, 281, 675, 675, 295, 295, 295, 296, 296, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 564,
	564, 564, 595, 595, 595, 595, 597, 597, 722, 722,
	723, 723, 723, 723, 723, 155, 155, 452, 452, 452,
	72, 72, 72, 72, 72, 660, 660, 248, 248, 248,
	250, 250, 249, 249, 249, 249, 249, 249, 249, 249,
	96, 96, 97, 97, 287, 287, 286, 286, 286, 286,
	286, 286, 286, 681, 681, 680, 718, 718, 679, 679,
	682, 682, 682, 247, 247, 247, 93, 93, 114, 114,
	151, 151, 151, 151, 151, 151, 151, 151, 152, 152,
	153, 153, 691, 691, 691, 251, 251, 251, 253, 253,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 258, 19, 19, 134, 134,
	134, 134, 134, 134, 134, 129, 129, 599, 599, 600,
	600, 242, 242, 243, 243, 243, 243, 244, 244, 245,
	245, 245, 87, 87, 255, 255, 257, 257, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 75, 75, 75, 75, 75, 76, 76, 76, 76,
	76, 76, 77, 77, 77, 77, 77, 77, 78, 78,
	85, 85, 85, 85, 85, 85, 85, 85, 219, 219,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 92, 92, 92, 92, 92, 103,
	103, 692, 692, 693, 693, 711, 697, 697, 698, 698,
	701, 701, 701, 702, 702, 702, 702, 702, 710, 710,
	710, 710, 710, 704, 703, 705, 705, 706, 706, 708,
	708, 708, 708, 708, 709, 709, 709, 709, 709, 709,
	709, 709, 709, 709, 709, 709, 709, 709, 709, 709,
	709, 696, 712, 713, 713, 714, 714, 715, 715, 715,
	122, 122, 122, 717, 717, 716, 716, 699, 699, 700,
	700, 67, 707, 707, 725, 725, 68, 69, 70, 71,
	694, 694, 724, 724, 724, 724, 724, 724, 724, 724,
	724, 724, 724, 724, 724, 724, 724, 724, 724, 726,
	726, 727, 727, 728, 728, 728, 728, 728, 728, 728,
	728, 728, 728, 728, 728, 728, 728, 728, 728, 728,
	728, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	104, 104, 410, 410, 373, 373, 105, 105, 105, 106,
	106, 107, 107, 89, 89, 89, 657, 657, 658, 664,
	729, 729, 555, 555, 554, 554, 109, 109, 451, 451,
	110, 110, 110, 110, 110, 110, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 120, 120, 120, 120, 120, 121, 121, 121, 118,
	118, 118, 115, 115, 115, 113, 113, 113, 119, 119,
	119, 663, 359, 359, 117, 117, 117, 116, 116, 116,
	426, 426, 427, 429, 428, 123, 123, 123, 123, 374,
	124, 124, 124, 124, 124, 124, 124, 124, 127, 127,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 557, 557, 5, 5, 285, 285, 284,
	284, 284, 284, 6, 6, 6, 290, 290, 289, 288,
	125, 125, 125, 519, 519, 130, 130, 130, 467, 467,
	131, 131, 131, 131, 131, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 667, 667, 419, 419, 322, 322, 322,
	322, 143, 143, 143, 143, 144, 144, 144, 144, 145,
	145, 228, 228, 161, 161, 161, 161, 160, 160, 160,
	160, 160, 160, 160, 160, 79, 79, 79, 80, 80,
	81, 81, 82, 82, 83, 83, 84, 84, 84, 84,
	84, 164, 164, 33, 33, 33, 33, 165, 165, 719,
	719, 167, 163, 163, 163, 163, 163, 163, 163, 162,
	162, 166, 166, 166, 166, 168, 170, 170, 170, 170,
	170, 169, 169, 169, 169, 169, 171, 171, 589, 589,
	437, 437, 587, 587, 611, 611, 588, 588, 380, 380,
	380, 380, 380, 381, 381, 381, 598, 598, 598, 598,
	598, 598, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 229, 229, 229, 230, 230, 235, 235, 236,
	236, 236, 237, 237, 237, 234, 234, 234, 231, 231,
	232, 232, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 240, 240, 238, 238, 239, 239, 731, 731,
	730, 730, 241, 241, 241, 241, 241, 200, 200, 200,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 438, 438, 203, 203, 203, 187, 187,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 254,
	254, 254, 254, 254, 179, 179, 179, 179, 179, 179,
	179, 179, 180, 180, 180, 174, 174, 189, 189, 189,
	189, 189, 181, 181, 182, 182, 182, 183, 183, 183,
	183, 211, 211, 186, 186, 186, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 175, 175, 175, 175, 191,
	191, 191, 191, 474, 474, 474, 217, 217, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 214, 214, 214, 214, 214, 214,
	683, 683, 684, 684, 684, 207, 207, 207, 207, 207,
	207, 535, 535, 201, 201, 201, 201, 206, 206, 206,
	206, 185, 185, 185, 185, 209, 209, 209, 209, 457,
	457, 198, 198, 198, 199, 199, 199, 204, 204, 216,
	205, 411, 411, 202, 202, 208, 208, 208, 208, 210,
	210, 210, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 177, 177, 177, 177, 178, 178,
	178, 178, 212, 212, 197, 197, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 732, 732, 193,
	193, 193, 192, 192, 192, 192, 195, 195, 196, 196,
	196, 196, 196, 196, 196, 194, 184, 215, 665, 665,
	661, 661, 661, 661, 661, 661, 661, 661, 661, 661,
	659, 659, 659, 659, 659, 659, 659, 659, 659, 662,
	662, 662, 662, 662, 666, 666, 135, 135, 135, 135,
	135, 135, 135, 146, 146, 146, 146, 146, 146, 146,
	149, 149, 136, 136, 136, 136, 136, 136, 136, 139,
	139, 137, 137, 137, 137, 138, 138, 98, 98, 98,
	98, 98, 18, 18, 18, 99, 99, 313, 313, 263,
	263, 263, 398, 398, 264, 264, 388, 388, 388, 388,
	259, 259, 260, 260, 261, 262, 262, 100, 100, 733,
	733, 733, 676, 676, 676, 677, 677, 677, 677, 677,
	677, 382, 382, 383, 383, 499, 499, 499, 499, 499,
	386, 386, 386, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 396, 397, 397, 389, 389, 395, 394, 394,
	393, 393, 392, 392, 390, 391, 391, 391, 400, 400,
	399, 402, 402, 401, 498, 620, 620, 622, 622, 622,
	622, 622, 622, 622, 624, 624, 624, 624, 624, 624,
	624, 624, 624, 624, 624, 624, 624, 624, 624, 624,
	624, 475, 475, 734, 734, 735, 736, 618, 618, 618,
	618, 618, 619, 614, 614, 615, 615, 615, 615, 615,
	384, 384, 385, 385, 385, 385, 616, 617, 417, 417,
	539, 621, 621, 623, 623, 625, 737, 737, 737, 737,
	737, 737, 738, 738, 738, 497, 497, 496, 496, 495,
	495, 408, 408, 626, 626, 626, 626, 627, 627, 627,
	627, 627, 630, 629, 628, 628, 628, 628, 628, 102,
	102, 102, 454, 454, 453, 453, 455, 455, 455, 455,
	455, 455, 455, 455, 455, 455, 455, 455, 455, 455,
	455, 455, 455, 455, 224, 224, 325, 325, 325, 95,
	95, 95, 15, 15, 15, 15, 15, 15, 15, 340,
	340, 16, 16, 16, 16, 678, 678, 678, 101, 101,
	101, 101, 101, 101, 406, 406, 406, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 669, 669, 668, 668, 326, 326, 740,
	740, 108, 108, 108, 108, 108, 108, 108, 108, 558,
	558, 559, 559, 94, 94, 94, 94, 94, 476, 476,
	473, 473, 472, 472, 416, 416, 537, 537, 537, 538,
	330, 330, 331, 331, 282, 282, 282, 477, 477, 477,
	36, 35, 26, 26, 30, 30, 31, 31, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 32, 32, 60,
	60, 60, 60, 61, 61, 61, 61, 64, 64, 65,
	65, 59, 59, 59, 59, 62, 62, 55, 55, 66,
	66, 66, 66, 66, 685, 687, 687, 686, 686, 690,
	690, 690, 690, 690, 690, 688, 688, 361, 361, 689,
	689, 720, 720, 721, 721, 142, 142, 147, 147, 147,
	147, 147, 148, 148, 148, 148, 150, 150, 150, 150,
	159, 159, 220, 220, 220, 220, 220, 220, 220, 73,
	73, 86, 86, 157, 742, 742, 742, 158, 158, 158,
	221, 221, 221, 221, 222, 222, 223, 223, 741, 741,
	323, 323, 492, 492, 493, 493, 743, 743, 494, 494,
	494, 494, 494, 316, 315, 317, 317, 318, 318, 91,
	91, 91, 304, 304, 303, 306, 306, 305, 307, 307,
	308, 308, 301, 301, 601, 601, 310, 310, 310, 311,
	311, 297, 297, 298, 298, 299, 299, 300, 300, 314,
	314, 596, 596, 744, 744, 133, 133, 133, 227, 227,
	372, 372, 372, 485, 485, 485, 409, 409, 337, 337,
	491, 491, 491, 491, 491, 450, 450, 450, 226, 226,
	424, 424, 440, 440, 441, 441, 551, 551, 442, 140,
	140, 141, 141, 156, 156, 267, 267, 265, 265, 265,
	265, 265, 265, 265, 265, 272, 272, 273, 273, 274,
	274, 275, 276, 276, 276, 276, 430, 430, 277, 277,
	277, 266, 266, 266, 268, 268, 268, 268, 268, 268,
	268, 271, 271, 271, 271, 278, 278, 278, 270, 270,
	637, 637, 637, 639, 639, 641, 641, 640, 640, 636,
	636, 638, 638, 739, 739, 456, 456, 456, 405, 407,
	403, 403, 404, 404, 414, 414, 412, 413, 413, 415,
	415, 536, 536, 536, 283, 283, 283, 447, 447, 447,
	447, 448, 448, 481, 481, 479, 479, 479, 479, 480,
	480, 482, 482, 482, 483, 483, 484, 484, 444, 444,
	445, 445, 446, 446, 446, 446, 515, 515, 269, 269,
	269, 421, 421, 421, 422, 422, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 506, 506, 504,
	504, 504, 504, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 541, 542, 542, 423, 423, 543, 488, 488,
	489, 489, 486, 486, 487, 487, 490, 490, 655, 655,
	655, 656, 656, 534, 534, 544, 544, 544, 544, 544,
	544, 530, 530, 531, 531, 532, 532, 533, 533, 552,
	553, 553, 460, 460, 460, 460, 458, 458, 461, 461,
	461, 461, 461, 459, 459, 545, 545, 545, 545, 449,
	449, 225, 225, 546, 546, 546, 546, 547, 548, 548,
	549, 549, 500, 501, 501, 560, 560, 560, 560, 562,
	420, 420, 420, 420, 420, 613, 612, 612, 561, 561,
	561, 561, 561, 561, 561, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 577, 577, 577,
	577, 577, 577, 577, 563, 563, 563, 563, 563, 563,
	563, 567, 567, 567, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 568, 568, 573, 573, 574,
	574, 574, 569, 570, 575, 575, 575, 575, 745, 745,
	579, 579, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 565, 565, 565, 572, 572, 572, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	468, 468, 470, 470, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 509, 509, 509, 509, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 631, 631, 631, 631, 631, 631,
	631, 631, 511, 511, 634, 634, 635, 635, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	632, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 642,
	642, 643, 643, 645, 645, 646, 646, 647, 648, 648,
	648, 649, 650, 650, 644, 644, 651, 651, 651, 651,
	652, 652, 653, 653, 653, 653, 653, 654, 654, 654,
	654, 654, 521, 521, 522, 522, 528, 528, 528, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 379, 379, 378, 327, 327, 327,
	327, 327, 327, 435, 435, 433, 433, 433, 436, 436,
	434, 434, 432, 432, 431, 431, 518, 518, 516, 516,
	520, 520, 462, 462, 578, 578, 578, 578, 578, 578,
	578, 578, 463, 463, 463, 471, 464, 464, 465, 465,
	465, 465, 465, 512, 513, 466, 466, 466, 514, 514,
	523, 527, 527, 526, 525, 525, 524, 524, 502, 502,
	503, 503, 443, 443, 746, 746, 439, 439, 550, 550,
	550, 550, 607, 607, 376, 376, 425, 425, 375, 375,
	367, 367, 368, 368, 368, 368, 418, 418, 529, 529,
	580, 580, 581, 581, 582, 582, 583, 583, 584, 585,
	586, 517, 517, 348, 347, 334, 335, 346, 345, 344,
	333, 336, 341, 342, 343, 338, 339, 355, 354, 353,
	302, 309, 360, 362, 362, 365, 365, 366, 364, 363,
	363, 350, 351, 352, 556, 332, 369, 369, 370, 370,
	370, 371, 371, 371, 371, 328, 328, 328, 329, 329,
	356, 356, 357, 358, 358, 349, 349, 349, 319, 319,
	319, 320, 320, 321, 321, 594, 594, 591, 591, 591,
	592, 592, 592, 695, 593, 593, 593, 593, 590, 590,
	590, 590, 590, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 603, 603, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 605, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 610, 610, 610,
	610,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 9, 7, 9,
	5, 6, 8, 7, 7, 9, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 1, 1, 1, 0, 1, 6, 6,
	4, 6, 2, 1, 4, 8, 7, 10, 9, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 4, 4,
	6, 5, 6, 5, 6, 4, 8, 3, 8, 4,
	2, 3, 10, 3, 6, 4, 3, 1, 3, 4,
	4, 2, 1, 1, 3, 1, 3, 2, 4, 3,
	2, 3, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 6, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 1, 3, 1, 3,
	6, 4, 6, 7, 9, 6, 2, 2, 3, 0,
	8, 6, 8, 7, 2, 0, 1, 2, 5, 0,
	1, 3, 3, 1, 3, 1, 3, 3, 3, 3,
	12, 3, 5, 4, 1, 3, 3, 3, 3, 2,
	4, 4, 4, 1, 1, 2, 1, 4, 1, 0,
	3, 3, 0, 4, 6, 0, 6, 4, 4, 4,
	5, 7, 6, 8, 7, 9, 8, 2, 1, 3,
	1, 3, 3, 3, 0, 2, 5, 0, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 1, 1, 1, 3, 3, 6, 4,
	9, 7, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 2, 2, 1, 2, 3, 3, 4,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 4, 3,
	6, 6, 6, 6, 6, 8, 4, 4, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 6, 3, 8, 5, 3, 12,
	4, 2, 0, 1, 0, 1, 1, 0, 1, 3,
	1, 3, 3, 3, 3, 2, 2, 1, 1, 1,
	1, 2, 1, 1, 1, 1, 0, 1, 2, 2,
	2, 1, 1, 1, 4, 5, 1, 1, 1, 1,
	3, 3, 2, 2, 1, 2, 2, 2, 2, 1,
	1, 1, 2, 1, 1, 3, 0, 1, 4, 0,
	4, 6, 3, 1, 3, 2, 1, 3, 2, 1,
	3, 5, 1, 2, 1, 0, 6, 6, 6, 8,
	1, 0, 4, 3, 3, 4, 3, 4, 4, 4,
	7, 3, 3, 4, 3, 3, 3, 3, 3, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 5, 3, 3, 3, 3, 3, 3,
	3, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 1, 2, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 10, 5, 1, 3, 3, 1,
	1, 0, 2, 0, 2, 0, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 1, 1, 3, 4, 6, 3, 3, 5, 3,
	1, 3, 1, 1, 1, 2, 2, 2, 2, 1,
	2, 2, 5, 3, 3, 6, 6, 3, 1, 1,
	1, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 3, 4, 3, 1, 2, 3,
	2, 2, 2, 4, 6, 3, 1, 2, 2, 7,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 7, 4, 7, 8, 8,
	9, 11, 11, 11, 6, 2, 6, 9, 4, 7,
	7, 10, 7, 10, 10, 10, 13, 10, 13, 5,
	8, 5, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 4, 4, 3, 4, 1, 1, 1,
	1, 5, 4, 5, 3, 3, 2, 2, 6, 3,
	3, 3, 3, 4, 4, 3, 1, 3, 3, 2,
	2, 1, 3, 3, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 1, 1, 1,
	2, 1, 2, 2, 2, 9, 2, 1, 0, 1,
	1, 0, 1, 2, 0, 2, 2, 0, 2, 2,
	2, 2, 1, 2, 3, 3, 4, 4, 4, 4,
	3, 3, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 3, 3, 2, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 3, 6, 8, 3, 3, 3,
	4, 8, 6, 4, 5, 5, 5, 5, 3, 0,
	1, 1, 1, 1, 4, 4, 3, 4, 4, 3,
	4, 4, 1, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 5, 7, 4, 2, 6, 4,
	3, 2, 3, 4, 4, 3, 5, 3, 6, 5,
	6, 3, 5, 6, 3, 5, 3, 5, 3, 3,
	4, 4, 5, 0, 1, 1, 1, 1, 3, 2,
	3, 4, 3, 4, 3, 5, 3, 4, 4, 3,
	4, 5, 3, 4, 3, 4, 4, 5, 3, 3,
	1, 1, 0, 2, 3, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 6, 4, 2, 3, 3, 4, 4, 5, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 7,
	5, 2, 0, 3, 3, 4, 3, 3, 3, 5,
	3, 3, 3, 4, 4, 4, 4, 5, 6, 4,
	4, 4, 4, 3, 4, 5, 4, 4, 5, 6,
	5, 5, 2, 3, 2, 3, 6, 6, 7, 9,
	7, 9, 4, 3, 4, 4, 5, 1, 1, 10,
	10, 3, 5, 5, 5, 3, 5, 6, 4, 4,
	5, 5, 2, 6, 3, 2, 5, 4, 2, 0,
	1, 1, 1, 1, 2, 3, 2, 2, 3, 2,
	1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 7, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 3, 3, 6, 5,
	8, 3, 6, 6, 3, 12, 15, 1, 0, 1,
	2, 3, 0, 2, 0, 4, 0, 4, 5, 4,
	1, 1, 1, 3, 3, 1, 3, 10, 13, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 2, 3,
	3, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 0, 1, 0, 1, 1, 0,
	1, 4, 1, 0, 3, 7, 7, 1, 1, 3,
	7, 1, 3, 11, 3, 2, 0, 3, 1, 2,
	2, 3, 2, 6, 2, 1, 2, 2, 3, 6,
	4, 2, 3, 5, 5, 5, 2, 5, 5, 2,
	2, 2, 0, 1, 1, 3, 4, 10, 11, 12,
	9, 10, 5, 3, 1, 5, 9, 7, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 6, 1, 3,
	1, 2, 0, 1, 2, 3, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 3, 0, 4,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 5,
	8, 4, 1, 0, 1, 2, 2, 1, 2, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 2, 3, 1, 4, 2, 3, 2, 2, 4,
	7, 3, 4, 6, 5, 7, 5, 5, 3, 3,
	0, 2, 2, 2, 2, 1, 1, 1, 8, 10,
	11, 8, 11, 5, 4, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 3, 0,
	1, 8, 11, 3, 6, 6, 5, 3, 4, 1,
	0, 1, 3, 17, 20, 16, 19, 4, 2, 0,
	1, 0, 1, 0, 1, 3, 2, 4, 2, 3,
	1, 0, 2, 0, 1, 1, 0, 2, 1, 0,
	9, 6, 6, 8, 6, 8, 5, 7, 2, 6,
	7, 4, 4, 5, 2, 4, 6, 6, 8, 6,
	7, 8, 9, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	6, 8, 8, 4, 7, 3, 0, 7, 10, 1,
	1, 1, 1, 1, 2, 3, 0, 3, 0, 3,
	0, 1, 0, 2, 0, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 3,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 2, 1, 2, 3, 2, 2, 2, 1, 0,
	2, 1, 1, 0, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 2, 3, 2, 2, 1, 2, 15,
	17, 3, 1, 0, 4, 1, 0, 4, 1, 0,
	2, 2, 3, 0, 1, 1, 4, 4, 5, 1,
	0, 3, 0, 3, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 1, 1, 4, 2, 1, 3, 1, 3,
	4, 8, 11, 7, 10, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 6,
	4, 5, 4, 1, 1, 3, 3, 1, 2, 4,
	4, 2, 3, 5, 5, 1, 3, 1, 0, 1,
	2, 3, 2, 4, 2, 3, 0, 2, 0, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 8, 8, 8, 2, 4, 4, 4, 2, 2,
	2, 2, 3, 1, 3, 1, 2, 6, 7, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 1, 0, 3, 3, 5, 1,
	3, 3, 4, 5, 2, 2, 0, 2, 2, 1,
	1, 1, 0, 1, 0, 2, 2, 5, 4, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 3, 1, 3, 3, 3, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 3, 2,
	4, 4, 0, 4, 4, 3, 4, 1, 5, 3,
	4, 5, 5, 1, 5, 1, 3, 2, 3, 0,
	1, 3, 0, 3, 1, 3, 1, 2, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 3, 2, 1, 0, 5,
	1, 0, 2, 2, 2, 1, 1, 0, 1, 1,
	1, 1, 0, 4, 2, 1, 2, 2, 4, 1,
	3, 2, 2, 1, 2, 3, 2, 4, 1, 0,
	1, 0, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 6, 6, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 1, 1, 3, 1, 3, 3, 1,
	1, 1, 1, 5, 3, 1, 1, 3, 1, 1,
	1, 1, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 668, -3, -221, -126, -123, -87, -85,
	-130, -131, -110, -132, -125, -154, -159, -140, -141, -142,
	-155, -161, -220, -229, -230, -231, -232, -241, -225, -222,
	-223, -4, -72, -74, -88, -109, -111, -124, -134, -133,
	-135, -143, -151, -146, -129, -79, -156, -160, -172, -224,
	-226, -227, 33, 32, 107, 85, 166, 138, 148, 219,
	422, 474, 486, 439, 153, 462, 444, -166, -167, 508,
	-73, -86, -158, -157, 78, 139, 183, 325, 454, 592,
	53, 158, -7, -15, -33, -19, 30, 49, -75, -76,
	-77, -78, 67, -95, -90, -104, -96, -89, -92, -93,
	-724, 110, -638, -112, -116, -150, -114, -728, 174, 240,
	-136, -137, -138, 404, -144, -145, 465, -147, -148, -149,
	468, 175, -81, -80, 168, -265, -267, -163, -162, -164,
	-228, -173, -174, -175, -176, -177, -178, -180, -181, -183,
	-211, -184, -185, -186, -187, -188, -189, -190, -194, -214,
	-191, -192, -193, -196, -195, -197, -202, -198, -199, -200,
	-201, -203, -204, -206, -207, -208, -209, -210, -212, -213,
	514, -205, -215, -182, -216, 582, 531, 87, 478, 21,
	-8, -9, -10, -11, -12, -13, -14, -18, -17, -66,
	-5, -6, -20, -97, -91, -94, -98, -99, -100, -108,
	-101, -102, -103, -637, -113, -115, -118, -120, -121, -117,
	-119, -122, 463, 639, -268, -266, 665, 644, 599, -179,
	-23, -28, -24, -25, -27, -29, -26, -30, -31, -32,
	-51, -56, -53, -54, -52, -55, -57, -58, -59, -60,
	-61, -62, -63, -64, -65, -35, -41, -42, -36, -37,
	-38, -39, -40, -43, -44, -45, -46, -47, -48, -49,
	-50, -21, -22, -34, -67, -68, -70, -69, -71, 626,
	635, -271, -269, -270, -278, 500, 607, 554, 668, 668,
	668, 668, 668, 668, 668, 668, 668, 668, 668, 668,
	668, 668, 668, 668, 668, 668, 668, 668, 668, 668,
	668, 668, 668, 668, 668, 668, -374, 2, -350, -356,
	-357, -358, -349, -319, -605, -610, 4, -602, -608, 182,
	256, 255, 257, 364, 21, 22, 24, 23, 25, 26,
	27, 28, 30, 31, 41, 43, 44, 45, 47, 48,
	49, 50, 51, 52, 53, 57, 59, 63, 64, 65,
	66, 67, 68, 69, 73, 78, 79, 84, 85, 86,
	87, 88, 89, 90, 91, 97, 94, 95, 96, 98,
	99, 101, 103, 104, 105, 106, 107, 108, 109, 111,
	112, 113, 115, 116, 117, 125, 126, 127, 128, 129,
	131, 138, 132, 139, 142, 136, 141, 137, 143, 144,
	146, 147, 148, 151, 152, 153, 155, 156, 157, 159,
	160, 161, 163, 164, 166, 167, 168, 171, 169, 172,
	170, 173, 174, 175, 176, 177, 180, 188, 189, 190,
	195, 197, 198, 199, 201, 202, 205, 206, 207, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 220, 224,
	226, 227, 228, 229, 230, 231, 232, 238, 239, 240,
	242, 243, 244, 245, 246, 250, 251, 252, 253, 260,
	262, 268, 269, 274, 270, 275, 276, 278, 282, 283,
	284, 285, 286, 287, 288, 290, 292, 291, 296, 294,
	298, 299, 302, 303, 304, 305, 306, 307, 311, 312,
	308, 313, 314, 316, 317, 320, 318, 321, 322, 319,
	323, 326, 327, 328, 329, 330, 331, 332, 333, 334,
	335, 336, 337, 324, 325, 340, 338, 342, 343, 344,
	345, 346, 361, 363, 356, 357, 358, 350, 351, 347,
	352, 348, 349, 353, 354, 360, 355, 366, 367, 368,
	369, 372, 236, 261, 374, 375, 378, 380, 397, 383,
	384, 385, 388, 389, 392, 395, 396, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 409, 410, 412,
	413, 414, 416, 417, 418, 420, 422, 423, 425, 426,
	427, 429, 430, 431, 432, 433, 434, 435, 436, 438,
	439, 441, 440, 442, 444, 446, 447, 448, 454, 455,
	462, 456, 458, 459, 460, 461, 463, 464, 465, 466,
	467, 468, 472, 470, 471, 473, 474, 476, 477, 478,
	479, 480, 482, 484, 485, 489, 490, 493, 491, 511,
	512, 534, 486, 487, 488, 492, 494, 495, 496, 497,
	499, 498, 503, 501, 502, 504, 505, 506, 508, 510,
	513, 514, 516, 517, 518, 519, 520, 521, 522, 525,
	527, 528, 529, 530, 531, 532, 553, 533, 535, 539,
	540, 541, 542, 536, 537, 552, 544, 545, 546, 547,
	549, 550, 555, 556, 557, 558, 559, 560, 562, 563,
	565, 573, 586, 574, 575, 576, 577, 579, 582, 583,
	584, 585, 571, 587, 588, 591, 592, 593, 597, 594,
	598, 595, 596, 599, 601, 604, 605, 606, 613, 611,
	612, 614, 615, 617, 618, 616, 620, 621, 622, 627,
	628, 630, 631, 632, 37, 54, 55, 58, 60, 62,
	74, 75, 76, 80, 133, 134, 165, 178, 179, 191,
	208, 209, 221, 223, 233, 234, 235, 259, 263, 264,
	266, 272, 295, 371, 373, 390, 394, 411, 415, 419,
	421, 437, 481, 509, 523, 538, 543, 566, 567, 568,
	569, 578, 580, 607, 608, 609, 619, 629, -374, 2,
	-350, 381, -343, 2, -319, -319, 422, 29, 2, 29,
	410, 502, 557, 559, 2, -667, -419, 550, 2, 29,
	-322, -319, 110, 219, 500, -343, 2, -667, 219, -419,
	26, 550, 2, -319, 2, 395, 177, 205, 23, 28,
	71, 82, 105, 151, 176, 200, -727, 397, 430, 484,
	504, 552, 563, 579, 2, 612, 317, 501, 554, 250,
	128, 584, 492, -678, 489, 490, 395, 428, 476, 222,
	600, -323, 2, 486, -319, 317, 2, 668, 101, 79,
	481, 505, -169, 2, 307, 574, -170, -171, -168, 566,
	-589, 492, 476, 340, -319, 668, 668, 668, 29, -332,
	2, -319, -332, 2, -233, 2, -332, -730, -240, -239,
	-238, 22, 455, 190, 288, 203, 241, 345, 425, 201,
	51, -233, 2, 554, 250, 492, 128, 550, -354, 657,
	-356, -741, 2, 574, -741, 2, 668, 668, 2, 554,
	401, 612, 501, 205, 128, 434, 250, 584, 49, 151,
	28, 73, 560, 643, 492, -678, 640, 641, 317, 135,
	-660, 2, -659, 4, -608, -602, -368, -367, 554, 560,
	128, -358, -349, 657, -357, 668, 668, 668, 668, 2,
	275, 276, 432, 431, 505, 506, 29, 668, 668, 668,
	668, 668, 489, 177, 2, 176, -692, 23, 28, 71,
	100, 105, 135, 200, 397, 430, 504, 552, 556, 563,
	579, -677, 533, 73, 492, -676, -678, 386, 317, 584,
	151, -472, 128, 307, 217, 593, 559, 557, 590, 142,
	262, 596, 595, 668, 668, 668, -127, 2, 665, 33,
	32, -126, -130, 153, 508, -258, 554, 267, 2, -319,
	668, 668, 668, 2, 275, 276, 489, 490, 29, 668,
	668, 203, -659, 550, 2, 668, 668, 668, 2, 29,
	275, 276, 489, 490, 267, 2, 73, 495, 668, 668,
	668, 668, 668, 668, 668, 668, 668, 668, 668, 668,
	668, 668, 668, 668, 668, 668, 668, 668, 668, 668,
	668, 668, 668, 668, 668, 668, 668, 668, 668, 668,
	668, 668, 668, 668, 668, 668, 668, 2, -218, 505,
	533, 229, 50, 49, 79, 29, 429, 84, 402, 129,
	135, 160, 585, 220, 550, 250, 251, 283, 100, 101,
	-474, 47, 276, 73, 275, 490, -683, 489, -535, 555,
	206, 494, 502, 549, 91, 288, 486, 574, 576, 110,
	601, 477, 632, 434, 435, 547, 448, 544, 308, 169,
	204, 4, 128, 340, 476, 507, 292, 291, 586, 566,
	307, 485, 405, 89, 668, -739, 2, 554, 574, 2,
	-741, 2, -741, 2, -742, 574, 629, 668, 668, 668,
	668, 668, 668, 668, 668, 668, 668, 668, 668, 668,
	668, 668, 668, 668, 668, 668, 668, 668, 668, 668,
	-266, -268, -267, 668, 668, 668, 668, 668, 668, 668,
	668, -218, 505, 2, 79, 29, 29, -412, -414, 589,
	265, 162, 387, -265, -267, 2, -637, 586, 505, -587,
	2, -507, -611, -509, 655, 656, 648, 551, 72, -378,
	362, 633, -521, 135, 590, 381, -610, -510, -523, 165,
	397, 481, -436, 255, 8, 9, 5, 6, 7, -328,
	-511, -517, 581, 181, 370, -371, 669, 10, 665, -634,
	-267, -522, 38, 223, 70, -591, -370, -329, -563, 266,
	-369, -349, -631, -632, 4, -602, -603, -592, -566, -574,
	-573, -570, -569, -571, -577, -319, -605, 82, 119, 120,
	118, 123, 122, 310, 309, 124, 121, 507, 600, 71,
	37, 233, 234, 272, 371, 235, 80, -633, 152, -604,
	263, 264, 523, 55, 437, 191, 134, 133, 373, 60,
	58, 608, -575, 130, 566, 567, 568, 569, 208, 209,
	62, 178, 179, 394, 419, 543, 578, 580, 221, 295,
	46, 114, 204, 258, 237, 271, 273, 277, 297, 300,
	341, 359, 365, 391, 393, 475, 515, -745, 609, 538,
	74, 75, 196, -639, 440, -640, -343, -639, 668, 668,
	670, 668, -403, -405, -407, 2, 29, 149, 665, 2,
	-540, 2, -541, -545, -267, 289, -544, 665, -542, 663,
	-350, 382, -635, 482, -631, -632, -328, -349, -370, 4,
	-602, -604, 667, -408, 665, 128, 492, 554, 83, 250,
	100, 176, 205, -467, 665, -319, 29, 381, 570, 670,
	-667, -419, -404, 427, -519, 665, 381, 384, 203, 384,
	-667, 64, 98, -717, 233, 2, -716, -356, 321, 2,
	2, 2, 2, 2, 233, -319, 554, 127, 287, 2,
	2, 2, 2, 2, 2, 2, -428, 233, 2, -426,
	-356, 612, -429, 233, 2, -426, -427, 233, 2, -426,
	-473, 2, 93, -333, 233, 2, -319, -359, 233, 2,
	-354, -365, 233, 2, -362, -319, -597, 233, 2, -595,
	4, -602, 124, 507, -507, 2, -156, 2, 64, -319,
	612, 2, 511, 2, 665, -169, 2, 76, 574, 46,
	505, -170, 2, -493, 2, -494, -315, -316, -317, -552,
	-318, 274, 426, 436, 636, 140, 362, 632, -719, 203,
	647, 570, -587, -587, -587, -437, 667, -235, 57, -332,
	-731, -730, -731, -585, 29, -580, 8, -581, 655, 656,
	-585, -585, -731, -731, 2, 2, 2, 2, 2, -492,
	-493, 2, -545, 233, -350, 2, -347, -590, 4, -602,
	-608, -603, -609, -605, 29, 32, 33, 34, 36, 38,
	39, 40, 42, 61, 70, 71, 77, 81, 83, 93,
	100, 110, 118, 119, 121, 120, 122, 123, 124, 135,
	140, 145, 149, 150, 154, 158, 162, 181, 183, 196,
	200, 203, 219, 222, 225, 241, 254, 265, 267, 289,
	293, 301, 309, 310, 362, 370, 376, 381, 382, 386,
	387, 408, 424, 443, 469, 500, 507, 526, 548, 554,
	564, 570, 572, 581, 589, 590, 600, 602, 610, 623,
	624, 625, 626, -610, 82, 2, -545, 233, 2, -353,
	233, -545, -356, 2, -716, 2, -333, 2, -507, -671,
	562, 172, 456, 2, -375, 233, -350, -352, -356, -354,
	2, 489, -599, 2, -594, 10, -593, 5, 4, -602,
	-608, -603, 2, 2, -507, 2, -510, 2, -521, 29,
	-362, 2, -595, 233, 2, 29, 29, 612, 427, 267,
	570, 670, -425, -367, -368, -586, 4, 8, -418, -319,
	667, -507, 2, -156, -139, 2, 196, -507, 233, 2,
	-156, 233, 2, -507, 233, 2, -156, 233, 2, -319,
	2, -679, 2, -718, -599, 233, 98, 233, -319, 2,
	205, -726, 484, 583, 321, 2, 2, 579, 2, 105,
	554, 127, 2, 2, 2, 2, 2, 2, 2, 554,
	-338, 2, -319, 196, -554, 267, -362, 233, -363, 2,
	501, -740, 440, -595, 233, 2, 460, 612, -354, 233,
	2, -354, 250, 269, -333, 233, 2, 559, 557, 559,
	557, 203, 2, 267, 2, 267, 2, -546, 2, -547,
	-541, -548, 663, 382, -557, 2, -556, -593, 607, -127,
	665, -127, 665, 505, 665, -599, -350, -350, -507, 2,
	-156, -139, 2, -507, 2, -156, 2, -319, 2, -153,
	-599, -152, 665, 203, 601, -319, 2, -507, 2, -156,
	-139, 2, -507, 2, -156, 2, -258, 196, 2, 128,
	554, -218, 2, 196, 602, 2, 8, 2, 241, -254,
	-599, 494, 188, 435, 605, 2, 511, 2, 512, 79,
	-474, 632, 79, 203, 2, 203, 2, -457, 2, 626,
	427, 203, 2, 2, -665, 2, 381, 220, 203, 2,
	203, 2, 203, 2, 203, 2, 203, 2, -217, 506,
	575, 553, 431, 276, 2, -156, 623, -139, 276, 275,
	-507, 623, 2, -684, 196, 490, -507, 2, 573, 285,
	170, 203, -457, 2, 203, 2, 203, 2, 203, 2,
	5, 2, 43, 432, 534, 2, 274, 426, 534, 2,
	532, 2, -350, 554, 612, 501, 128, 251, 498, 205,
	29, 2, 489, 177, 2, 2, 94, 95, 203, 2,
	203, 2, 218, 203, 2, 448, 203, 554, -438, 667,
	-438, 632, 2, -449, -545, -492, 570, -412, -414, -218,
	511, 2, -272, -447, -274, 196, -479, -480, -275, 301,
	183, 376, -276, -456, 29, 149, -456, -456, 64, 666,
	666, -719, 586, 11, 12, 81, 43, 655, 656, 657,
	658, 194, 659, 660, 653, 654, 652, 645, 646, 650,
	280, 281, 102, 649, 647, 92, 315, 483, 184, 185,
	186, 187, 457, 248, 35, 249, 14, 15, 16, -378,
	34, 386, 300, 633, 237, 515, 648, 17, 18, 19,
	271, 273, 365, 54, 241, -327, 397, -377, 551, 72,
	-507, -507, -507, -507, -507, -507, -507, -507, 393, 665,
	-443, -502, 663, -267, 665, 665, 665, 665, -586, -267,
	-507, -521, 666, -434, 665, -267, -521, -516, 665, 481,
	663, 665, -524, -507, 5, 5, 5, 665, 667, -642,
	627, 196, 665, 665, 665, 665, 665, 665, 665, 665,
	665, 665, 665, 665, 665, 665, 665, 665, 421, -568,
	665, -567, 665, -567, -567, -579, 613, 665, 665, -565,
	665, 635, 628, 665, -565, 665, 665, 665, 665, 665,
	665, 665, 665, 665, 665, 665, 665, 665, 613, 560,
	670, -639, -488, 665, 665, -439, -550, -507, 657, -439,
	-439, 381, -431, -507, 114, -460, 277, 341, 204, 297,
	475, 258, -504, 669, -504, -534, 635, -267, -542, -349,
	-267, -544, 665, -540, -534, -128, -586, -109, -124, -133,
	-156, -172, -226, -227, 657, -350, 665, 203, 665, 667,
	-590, 203, -418, -333, -362, -350, -369, -370, -375, -344,
	-319, 2, 2, 148, -431, -661, 584, 492, 29, 4,
	-608, -602, -368, 501, -367, 554, 128, 177, 205, -597,
	-322, 570, 39, -518, -560, -561, -613, 669, -612, -563,
	-572, 411, 415, -592, 266, 4, -602, -604, 263, 264,
	523, 55, 437, 191, 134, 133, 373, 60, 58, 608,
	566, 567, 568, 569, 208, 209, 62, 609, 538, 74,
	75, -661, 584, 492, 29, 501, 196, -597, 196, 203,
	-597, 2, -599, 2, -295, 670, 69, 466, 165, -699,
	665, 2, 165, 2, 2, 2, -319, -295, 165, 670,
	-428, 233, -295, 165, -295, 165, -376, 233, -375, -295,
	165, -295, 670, 165, -295, 670, 165, 667, 670, 165,
	-597, 2, -473, -589, -431, 39, -493, 2, 135, 4,
	5, -743, 670, 299, -381, 314, 361, 228, 382, 630,
	374, 140, -598, 5, 4, -517, -529, 135, 307, 266,
	-580, -582, 9, -583, 655, 656, -588, -587, 117, 667,
	-590, -236, 261, 41, -332, -332, -731, -731, 8, 8,
	-731, -731, -332, -332, -292, 458, 508, 396, -291, 25,
	30, 153, 252, 346, 605, 171, -393, 253, 463, -390,
	401, 165, 527, 594, -671, -674, 488, 562, 172, 456,
	96, 374, 508, 396, 458, 165, -453, -455, 39, 126,
	346, 395, 65, 244, 319, 320, 531, 464, 619, 165,
	508, 396, 458, -707, 458, 508, 396, -694, -709, 346,
	66, 471, 537, 239, 530, 621, 177, 499, 296, 362,
	108, 482, 545, 398, 396, -16, -308, 25, 153, -310,
	-303, 508, 30, -674, 106, 458, 644, 639, 463, 407,
	546, 424, -674, -671, 294, -673, 622, 360, -294, 527,
	594, -671, -478, -674, 488, 458, -293, 362, 620, -395,
	-390, 401, 165, 669, 25, 153, 458, 508, 396, -722,
	-723, 30, -586, 2, -290, 241, -289, 25, -285, -284,
	25, 153, 508, 597, -165, -145, -164, 463, 508, -165,
	2, 458, 396, -668, -340, -636, 241, 626, 165, -340,
	-340, -545, 233, -688, 196, 2, -681, -152, 290, 5,
	10, -599, -152, -425, 670, 670, -590, 657, 490, 489,
	165, 165, 165, 165, 276, 196, 362, -718, 2, 362,
	626, -711, 2, -356, -727, 2, 2, 2, 2, 2,
	2, 2, -350, 233, -410, 381, -657, -658, -729, 554,
	-245, 626, -599, 362, 46, -353, 233, 2, -356, 612,
	-668, 362, -676, -355, 233, -350, 39, 665, 362, 2,
	-473, 2, 250, -636, 362, -546, -372, -350, -541, -372,
	508, -343, 39, -504, -350, 666, 670, -557, -557, -599,
	-245, 203, 665, -258, 626, 626, 276, -553, 670, -552,
	241, -600, -599, -153, -599, 461, 203, 276, -599, -657,
	-333, 2, -350, 2, 554, 278, -152, 203, 241, -245,
	-599, -599, -599, -599, -589, 29, 512, 2, -217, 506,
	575, 95, 512, 2, -350, 554, 128, 250, 85, -688,
	196, 2, -319, -666, 196, -662, 476, 492, 584, -661,
	-666, -350, 128, -350, 128, -350, 128, -350, -350, 2,
	2, 2, 2, 2, 90, 2, -156, -507, 2, 90,
	2, 49, 528, -684, 196, 2, 573, 2, 573, 2,
	-319, -319, -319, -319, 376, 533, 299, 626, -350, -350,
	-353, -351, -356, 203, 251, -356, 494, 555, 585, 490,
	177, -507, 2, 98, -732, 2, 203, 196, 2, 554,
	250, 554, 250, 128, 203, 79, 128, 29, 203, 554,
	487, 667, 4, -295, 670, -323, -272, -447, -589, -448,
	-447, -273, -272, -275, 196, 436, 595, 346, 513, 282,
	-480, -479, 29, -507, -484, 190, 345, -507, -482, -509,
	655, 656, -581, -583, -430, 374, -266, -266, -266, -415,
	-536, -507, 424, 257, -588, -719, -562, -560, -560, -348,
	-590, 566, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, 300, 237,
	515, 54, 241, -507, 570, -507, -507, -507, -507, 338,
	362, 370, 581, 181, 591, 149, 374, -746, 548, 42,
	-514, -267, -435, 665, -528, 36, 526, 29, -521, 665,
	2, -502, -507, -503, -379, -377, -319, 655, 656, 657,
	658, 659, 660, 645, 646, 647, 14, 15, 16, 650,
	654, 652, 653, 194, 102, 649, 315, 483, 92, 184,
	185, 186, 187, 280, 281, 17, 18, 19, 35, 648,
	-432, -431, -431, 666, 610, 29, 149, 657, 2, 666,
	670, 39, 666, -507, -432, -520, -516, -431, -527, -526,
	623, -468, -469, 631, 324, 131, 231, 322, -470, 497,
	-584, 8, -590, 657, -643, 189, 222, 665, 666, 2,
	666, 2, 666, -507, 2, 666, -507, 2, 666, -507,
	2, 666, -507, 2, 666, 2, 666, 2, -507, -507,
	-507, -507, -507, -507, -507, -431, 8, -584, 665, -584,
	-584, -584, 566, 566, -584, -584, -584, -576, 411, 412,
	413, 414, 302, 303, 304, 305, 415, 416, 417, 418,
	330, 331, 332, 333, 326, 327, 328, 329, 334, 335,
	336, 337, 213, 214, 215, 216, 209, 210, 211, 212,
	-576, -462, 2, -578, -431, 4, 631, 324, 131, 231,
	322, 497, 5, -462, 2, -463, 2, -507, -431, -464,
	-508, -509, 655, 656, 648, -378, -465, 2, -507, -432,
	-507, 61, 293, 572, -466, -507, 203, -431, -431, 2,
	-431, 2, -510, 2, -640, 39, -489, -319, -431, -421,
	670, 203, 39, -607, 4, -606, 44, 66, 108, 137,
	144, 177, 239, 260, 270, 296, 398, 470, 471, 499,
	530, 545, 577, 621, 509, -421, -421, 665, 666, 670,
	-461, 226, 318, 313, 269, -461, -540, -460, 277, -458,
	391, -458, -458, -534, -334, 663, 672, -590, -534, -531,
	-530, 39, -343, 388, -534, -534, 667, 666, -533, -532,
	39, -343, 664, -655, 665, 668, 668, 668, 668, 668,
	-350, 665, -431, -590, 667, 535, 2, 666, 271, 271,
	271, 271, 271, 381, 482, 666, 570, -663, -359, -365,
	502, 555, 206, -425, 670, -425, -418, 98, -717, 626,
	-597, -126, 383, 666, 670, -420, 38, 663, 667, -584,
	2, 2, -469, 665, 203, -663, -365, 555, 502, 206,
	2, -667, 550, -419, -597, 570, -716, -717, -700, 666,
	-702, -710, -695, -704, 241, 390, 259, 610, -591, -560,
	4, -602, -319, 2, -428, -356, -295, 165, -429, -427,
	-295, 670, 165, -333, -354, -359, -362, -365, -319, -595,
	-597, -295, -355, -719, 666, 574, -494, -380, 436, 525,
	459, 503, 550, 9, 9, 670, -590, -237, 491, 346,
	-332, -332, -332, -332, 670, -720, 100, 570, 83, 665,
	492, -312, 308, 570, -498, 233, 83, -614, 100, -336,
	-615, -319, 77, 590, 424, 200, 163, -720, 100, 424,
	-720, 100, 2, 252, 100, 508, 533, 665, 29, 64,
	-545, 43, 43, 29, -672, -673, 294, 203, 632, 554,
	250, 492, 570, 570, -545, -455, -560, 126, 319, 320,
	64, -585, -585, 64, -585, -585, -585, 626, -585, 626,
	-353, -545, 492, 570, 570, -725, -709, 466, 508, 570,
	492, 570, 144, 381, 370, 499, 137, 270, 296, -529,
	-529, -319, 570, 446, 544, 446, 544, 498, -303, -305,
	-170, 498, 544, 308, 570, 570, -170, 29, -218, 467,
	135, -744, 647, 446, 294, -673, 570, 203, 670, 43,
	43, 29, -672, 203, 570, 620, -375, -334, 606, 45,
	606, 45, 606, 570, 45, 492, 570, 670, 45, -287,
	-286, 508, -289, -599, -288, 344, -284, -657, -657, -244,
	-243, -319, 5, -418, 79, 570, 570, -16, 508, -669,
	-324, 113, 352, 312, 353, 104, 349, 103, 348, 111,
	350, 112, 351, 614, 366, 615, 367, 68, 347, 323,
	354, 529, 355, 618, 368, -325, -326, 156, 403, 604,
	128, -595, -16, -16, 508, 396, 458, 165, -689, 241,
	29, -678, 241, -553, 241, -553, -367, -319, 667, -156,
	-507, -507, -156, -507, -156, 49, 165, 39, 165, 2,
	665, 287, 665, -384, 362, 203, -418, -554, 670, -350,
	39, -244, 385, 165, -595, -454, -453, 362, -355, 233,
	2, 165, -740, -408, 362, 159, 665, 434, 2, 165,
	-335, 233, -320, -319, -473, -297, 558, 165, -451, 602,
	-485, -156, 665, 135, 39, -485, -440, -441, -551, -442,
	-336, 665, -343, -504, -127, -556, 666, 666, 666, -258,
	-409, -337, -336, 127, 438, 438, -251, 626, -152, -153,
	666, 670, -553, 241, 536, -153, -599, -245, -245, -553,
	-553, -350, 196, -599, -152, -245, -245, -245, -245, 2,
	2, 2, 2, -457, -350, -333, -375, -350, -361, 241,
	29, 667, -597, -597, -365, -366, -364, -319, -359, -457,
	-333, -457, -333, -457, -333, -457, -457, -156, -507, 533,
	2, 505, 196, 196, 667, -457, 667, 8, -411, 469,
	5, -350, 203, 2, 99, -599, 2, 434, 128, 554,
	401, 250, -350, -375, -350, -375, -333, 128, -333, 129,
	128, -350, 4, -545, -448, -273, 382, 282, 513, -482,
	-483, -509, 481, 482, -483, 481, 482, 8, 9, 8,
	9, -277, 517, 369, -427, 670, -282, 40, 145, 282,
	-350, -588, 632, 161, -507, -507, 570, -746, 548, -514,
	161, -507, 338, 370, 581, 181, 591, 149, 374, 203,
	665, -508, -508, 666, -433, -507, -507, 664, 674, 666,
	667, 666, -414, 670, -412, -507, -431, -431, 666, 667,
	-431, -418, 664, 664, 670, 666, -525, -526, 154, -507,
	570, 570, 570, 570, 665, 666, 667, -648, 392, 665,
	665, -507, 666, 666, 666, 666, 39, 670, 670, 670,
	666, 670, 670, 670, 666, 666, 666, 670, -584, 666,
	666, 666, 632, 632, 666, 666, 666, 666, 670, 666,
	670, 666, 203, 666, 666, -471, 408, 666, 11, 12,
	655, 656, 657, 658, 194, 659, 660, 653, 654, 652,
	645, 646, 647, 92, 315, 483, 14, 15, 16, -378,
	271, 241, -508, -508, -508, -508, 666, -512, -513, 203,
	196, 39, -466, -466, -466, 666, 203, -431, 666, 666,
	665, -641, 317, 362, 666, 670, 666, -501, -500, 624,
	-550, -422, 2, -540, -345, -590, -501, -501, -431, -507,
	277, 277, -459, 602, 381, -461, -540, -531, -586, -506,
	-505, 198, 40, 145, 356, 357, 358, 236, 199, -531,
	-343, -488, -531, -531, -590, -534, -343, -486, 665, -534,
	-530, 666, -656, -586, 666, -423, -543, -635, -414, 667,
	-590, -255, -636, -219, 5, 370, -219, -219, -219, -219,
	-350, -597, 570, 570, 241, 241, 241, -425, -418, 26,
	-687, 626, 409, -560, 663, 664, 8, -590, -584, -597,
	203, 203, 241, 241, 241, 381, -667, 203, -595, -295,
	666, 670, -695, -704, -710, -704, 390, 2, -295, -428,
	-295, -295, -375, -376, -295, -295, -295, -452, 626, -587,
	-493, 588, 88, 436, 566, -587, 125, 491, -291, 458,
	508, -336, -336, -350, -262, -261, -259, -319, 5, -360,
	-319, 217, 447, -595, 362, -498, 233, -296, 362, 233,
	-344, -560, 665, -475, 628, 282, 282, 602, -336, -344,
	282, 233, -336, 233, -344, 2, -344, -670, 436, 375,
	-507, -260, -259, 64, -391, 306, 434, 363, -292, 458,
	508, 396, -156, -156, -156, 665, -719, 602, 148, -350,
	-375, -350, -360, -595, -355, 508, 396, 458, 359, -369,
	-585, -585, -585, -453, 508, 396, 458, -360, -595, -353,
	-319, -360, -595, 381, 370, 381, 137, 270, -595, -302,
	233, -319, 446, -302, 233, 446, 446, 446, 446, 217,
	447, 492, -333, 446, 632, 48, -744, 570, 203, -507,
	-507, -293, -156, -156, -156, 665, -334, -294, -478, 458,
	5, 233, -336, 5, -336, 233, 5, -319, -336, -360,
	-595, -723, 25, 153, -336, 670, 286, 267, 626, -680,
	204, 489, 441, -290, 647, -245, 670, 647, 647, -360,
	-595, -324, 403, -681, 370, 5, 10, 598, -333, -668,
	-340, 492, 570, 570, -545, -685, -686, 219, 474, 492,
	477, -597, -152, -248, 626, -152, -242, 245, 657, -660,
	-599, -599, -319, -697, -698, -701, -702, -319, -382, -385,
	-383, -336, -499, -498, -618, -619, -614, 300, 255, 256,
	590, 269, 182, 100, -263, -264, 628, 626, 165, -373,
	-350, 663, -245, -658, -555, 182, 500, 665, -362, -363,
	165, -408, 362, -595, 612, 39, 165, 665, 2, 2,
	-354, 381, 362, -335, 233, -298, 155, -744, -333, -501,
	-422, -450, -491, 469, 381, -409, 607, -343, -450, -424,
	670, 203, 647, 667, -409, -549, 657, -127, -127, -245,
	665, -599, 666, 670, 667, 665, 647, 647, -253, 385,
	-252, 157, 284, 268, 519, 520, 521, 522, 147, 518,
	132, 343, 246, 560, 493, 611, -553, -599, -251, -153,
	203, -553, 241, 203, -82, 626, -245, 554, 241, -245,
	669, 492, 477, -319, 667, -457, -457, -457, 505, 505,
	-319, -319, 196, -418, -350, 2, -346, -590, -333, -350,
	-347, -375, 196, 196, -333, -333, 595, -483, 382, 311,
	-536, -283, 634, -350, 669, -507, -507, 161, 161, -507,
	-508, -508, -507, 161, 203, 665, -507, -518, 34, 34,
	666, 670, -503, -507, -377, 666, 610, -414, -414, 666,
	657, -590, 669, 666, -516, 158, -507, 564, 324, 231,
	322, -470, 322, -470, -470, -584, 5, -590, 657, -649,
	-339, 665, -319, 624, -413, 387, 666, -562, -560, -507,
	-507, -507, -507, -507, -584, 666, -565, -565, -580, -580,
	-507, -512, -507, -562, -560, -508, -508, -508, -508, -508,
	-508, -508, -508, -508, -508, -508, -508, -508, -508, -508,
	-508, -508, -508, -508, -508, 149, 362, 374, -508, -513,
	-512, -507, -507, -560, 666, 666, 666, -431, -126, 665,
	317, -319, -444, 222, -507, -553, 670, -444, -444, 666,
	-540, -540, 665, -507, 277, 664, 670, 673, 647, 647,
	-488, 667, -530, -486, -487, -490, -319, -531, 664, 666,
	670, 666, 670, -533, 666, -590, -501, -257, -256, 146,
	57, 115, 143, 370, 378, 202, 227, 433, 161, 197,
	155, 271, -687, -597, -597, 492, 492, 492, 384, 219,
	5, 8, 663, 664, 667, 666, -597, -597, 492, 492,
	492, -661, 584, 492, 29, 203, -597, -702, -704, -704,
	-295, -295, 127, 346, -507, -234, 626, 628, 570, 570,
	666, 670, 647, 64, 241, 165, 362, 604, 362, -615,
	163, -620, -507, 665, 250, 665, 665, 2, -279, -280,
	-281, 153, 508, 25, -721, 2, 602, 165, -295, 165,
	-295, 630, 666, 670, -391, 665, 665, 570, 492, -312,
	570, 626, -431, -507, -246, 135, -589, -674, 669, -674,
	669, 492, 570, 570, 492, 570, 570, 176, 260, 370,
	362, -319, 165, -319, 233, -744, -319, -674, -674, 241,
	626, 180, 180, 632, -302, -507, -507, 196, 570, 626,
	-431, 570, -564, 52, 27, 362, -354, -295, 165, 570,
	570, 584, 508, -286, -599, -152, -249, 157, 473, 147,
	284, 246, 49, 384, -681, -152, -243, -599, -599, -681,
	-599, 370, -16, -360, -595, -355, 508, 396, 458, -667,
	-667, 219, -365, -689, -553, -250, 385, -249, -553, -248,
	203, 267, 626, 666, 670, 135, 647, 2, 666, 666,
	670, 670, -621, -296, -350, 665, -319, 250, 255, 256,
	-342, -320, 39, 378, 378, 665, -350, -105, 626, -552,
	-586, -341, -319, -439, -244, 46, -353, 39, 165, -668,
	-355, -156, -355, -558, -559, 5, 39, -350, 165, 381,
	362, -299, 292, -744, -594, -636, -414, -450, -439, 364,
	97, 666, -501, -441, -422, -507, 2, 666, -599, -245,
	-258, -337, 2, -600, -599, -599, 670, 665, 647, 647,
	647, 647, 647, 647, 647, -251, -553, -152, -251, -153,
	-156, 385, -350, -152, 657, -360, -361, 657, -457, 5,
	-397, -396, 401, 374, -397, 481, 481, 382, 190, 288,
	-282, -334, -507, -507, 161, 34, 34, -507, -507, -518,
	666, -507, -507, -431, 664, 5, -507, 666, 666, 8,
	-507, 666, 667, -650, -319, -507, 666, 64, 666, 666,
	670, 670, 666, 666, 666, 666, 666, 666, 666, -513,
	203, 149, 374, 665, 666, 666, -126, -515, 225, 64,
	-540, -515, -515, -459, -418, -540, -505, -334, 663, -334,
	663, -590, 666, 670, -560, -586, -543, 667, -256, 647,
	-599, -599, 2, 2, 5, 5, 433, 362, 370, 5,
	-219, -687, -687, 626, -365, -365, -365, 384, 664, 2,
	663, -590, -365, -365, -365, 203, -663, -365, 555, 206,
	-597, 127, 196, 230, 230, -336, -336, -261, -587, 554,
	481, -302, 424, -498, 165, 165, -622, 100, -624, 81,
	182, 110, 362, 370, 590, 424, 77, 135, 381, 443,
	-734, -735, -736, 39, 637, 638, 666, -416, -537, -635,
	665, -319, -416, -418, 362, 541, 135, 381, 362, 135,
	381, 620, 127, 2, 584, 84, -336, -344, -259, -418,
	-418, -350, -360, -595, 173, 666, 670, 647, 2, 657,
	657, -360, -595, -355, -360, -595, -353, -319, 260, 165,
	607, -302, 165, -302, 607, -302, 399, 180, 570, -156,
	-507, 173, 666, -334, 5, 5, 165, -331, 81, -336,
	5, -336, -354, 127, 647, 647, 647, 647, 647, 31,
	-681, -243, 626, 492, 570, 570, 381, 381, 384, -685,
	-686, -248, 670, 665, -248, -600, -152, 2, 471, -701,
	-507, -507, -398, 252, -336, -619, -616, -617, 424, -499,
	-623, -625, 182, 424, -386, -416, 665, -335, 665, -319,
	665, -156, 2, -262, 665, -384, 385, 664, 203, 666,
	-595, -454, -156, -355, -408, -406, 626, -408, 666, 670,
	159, -476, 602, -334, -350, 165, -300, 291, -744, -594,
	-297, -481, -479, 150, 665, 381, -156, -414, 647, 666,
	127, 666, -252, -253, -599, -152, -599, -599, -599, -152,
	-599, -251, -691, 39, -553, -83, -84, 250, 255, 100,
	406, -245, -245, -347, 554, 250, 665, 665, -282, -507,
	-507, -507, 666, -414, -590, 657, -644, 401, 666, -536,
	-507, -507, -508, 203, 665, -518, 666, -645, 625, -507,
	-445, -446, -507, 479, 116, 223, -645, -645, 666, -586,
	-586, -490, -599, 2, 2, 370, 2, 2, 2, 570,
	570, 570, 663, 2, 203, 203, 203, -597, 203, 203,
	241, 241, -156, 241, 39, 446, -498, -344, -344, -348,
	-341, 182, 233, 370, 620, -475, 282, 665, -508, 595,
	-350, 665, 2, 232, 232, 31, 64, -737, 140, 254,
	666, 670, -538, -330, -319, -507, -538, 666, 666, 370,
	595, 370, 620, -507, 595, -560, 665, -295, -295, 666,
	666, -507, 570, -589, 107, -587, 2, -674, -302, -418,
	-418, -674, -333, -507, 196, -507, 570, 5, -295, -348,
	-295, -295, -331, 584, -599, -507, 581, 181, -152, -152,
	380, -360, -595, -355, -690, 555, 502, 585, 494, 206,
	480, -690, 196, -249, -250, -248, -693, 509, -392, -393,
	2, -621, 282, -341, 282, 243, 164, 666, -416, 665,
	-416, 665, -418, -733, 626, 666, -382, -263, -106, -107,
	571, -552, -664, -372, -408, 39, 346, 127, 39, 5,
	665, 665, -319, 381, 665, -334, -314, 98, -744, -594,
	-298, -450, 363, -418, 100, -481, -514, -245, 665, -245,
	666, 560, -251, 670, 29, 665, 29, 665, -350, -375,
	-431, -431, 666, -414, 64, 670, 666, 666, -508, -518,
	666, -646, -647, -339, 670, 665, 665, 510, 664, 664,
	2, -597, -597, -597, 2, -597, -597, -597, -597, -597,
	492, 492, -302, 424, -319, -615, -624, -341, 362, -264,
	602, 626, -507, -508, -321, 665, -507, 665, 665, 39,
	135, 254, 141, 238, -497, -738, 109, 542, 242, -537,
	-282, 666, -496, 602, 443, -508, -331, -416, 665, 665,
	665, 647, 203, -156, 665, -564, -295, -354, 647, 570,
	2, 203, -667, 666, -680, -703, -704, -263, 665, -264,
	-387, 86, 101, 136, 232, 207, 251, 533, 539, 29,
	-387, -496, 666, -416, 666, -416, 666, -388, 381, 127,
	346, 666, 39, -107, 9, -501, 39, -156, 127, -156,
	-558, -416, -350, -416, 381, -304, -303, 301, -594, -299,
	666, -344, -450, -600, -586, 4, -84, -418, -418, 666,
	666, -651, 434, 482, 224, -431, -415, 666, 670, 39,
	-446, 2, 2, 2, -687, -687, -687, -365, -365, 446,
	-296, 165, 226, 666, -626, 316, -319, 666, -454, -454,
	39, 141, 238, -394, -390, 665, -283, -538, -264, 226,
	-350, -675, 602, 666, -400, -399, -396, -402, -401, -396,
	-431, -587, 107, 399, -431, -331, -152, -597, -597, 381,
	-682, 204, -705, -706, -708, 39, 287, 577, 625, -709,
	-388, -417, -539, -336, -497, -496, 666, -394, 666, 87,
	127, -398, -156, -156, 2, -406, 666, 666, -476, 666,
	-350, -301, -601, 446, 448, -744, -300, -501, 150, 666,
	666, 666, 666, -652, -653, 54, 587, 117, -507, -652,
	-652, -647, -649, 203, 203, 182, -495, 635, -627, -630,
	-629, 642, 516, 204, 400, 666, 541, 619, 666, 666,
	-737, -418, -495, -408, -507, -496, 666, 670, 607, 666,
	670, 607, 666, 203, 666, -295, -687, -295, -690, -247,
	626, 49, -715, -712, 53, 470, -708, -696, 5, -594,
	-313, -312, 666, 670, -394, -497, -496, -264, -394, 423,
	142, 153, -392, -733, -496, 665, -497, 665, -311, -310,
	-744, -580, -314, 150, 363, 595, -245, -654, 163, -653,
	420, 195, 481, 420, 195, -654, -654, -597, -597, -341,
	-264, 59, -629, 642, -630, 642, 595, 142, -501, 666,
	-626, -264, -399, 241, -401, 203, 399, 203, 489, -681,
	31, 44, -507, -264, -539, -264, -394, -497, -501, -264,
	482, 482, 2, -263, -388, -497, -416, -394, -416, -307,
	-308, -309, -418, -304, 363, 595, 508, 117, 222, 565,
	346, 34, 647, -628, 346, 466, 69, 508, -628, -627,
	665, 665, -597, 385, -714, -501, -264, -394, -477, 362,
	620, -501, 2, -388, -394, 666, -264, 666, -596, 396,
	-301, 508, -440, 481, 389, -653, -507, 24, 370, 135,
	-737, -431, -431, -295, -244, 665, -713, 158, -3, -712,
	-477, -501, -264, 620, -477, -313, -264, -496, -501, -497,
	-306, -305, 498, -744, -311, -440, -501, 666, 666, -244,
	671, -477, -501, -501, -497, -477, -394, -595, -307, -501,
	-389, -390, 570, 666, -477, -477, -394, -264, -306, 665,
	-264, -501, -431, -501, -477, 666, -477, -389,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 44, 1760,
	1762, 730, 731, 733, 734, 735, 737, 738, 740, 742,
	744, 745, 746, 748, 749, 751, 752, 753, 754, 755,
	757, 759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 853, 855, 0,
	1742, 1744, 1746, 1748, 0, 0, -2, -2, 0, 0,
	-2, -2, 45, 46, 48, 50, 0, -2, 422, 424,
	426, 428, 0, 460, 462, 463, 465, 467, 468, 470,
	472, -2, 0, 656, 657, 659, 661, 663, -2, 0,
	1316, 1318, 1320, 0, 841, 843, 0, 1323, 1325, 1327,
	0, 0, 865, 866, 0, 1863, -2, 857, 859, 861,
	863, 942, 944, 946, 948, 950, 952, 954, 956, 958,
	960, 962, 963, 965, 967, 969, 971, 973, 975, 976,
	978, 980, 982, 983, 985, 986, 988, 990, 992, 994,
	996, 998, 1000, 1002, 1004, 1006, 1008, 1010, 1012, 1014,
	-2, 1017, 1018, 1019, 1021, -2, 0, -2, -2, 1756,
	52, 54, 56, 58, 60, 62, 64, 66, 68, 70,
	72, 74, 76, 78, 601, 603, 605, 607, 609, 612,
	614, 616, 618, 1921, 665, 667, 669, 671, 673, 675,
	677, 679, 0, 0, -2, 1935, 0, 0, 0, 1112,
	80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
	149, 150, 151, 152, 153, 154, 155, 156, 93, 94,
	95, 97, 98, 99, 100, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 146, 147, 91, 120, 121, 122, 123, 124, 0,
	0, 1894, 1896, 1898, 1900, -2, 0, 0, 8, 12,
	14, 16, 18, 20, 22, 24, 26, 28, 30, 32,
	36, 38, 40, 42, 1761, 1763, 732, 736, 739, 741,
	743, 747, 750, 756, 758, 760, 715, 716, 719, 2651,
	2670, 2671, 2672, 2675, 2676, 2677, 2678, 2679, 2680, 3216,
	3297, 3298, 3299, 3300, 2703, 2704, 2705, 2706, 2707, 2708,
	2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718,
	2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728,
	2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738,
	2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748,
	2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758,
	2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768,
	2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778,
	2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788,
	2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798,
	2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808,
	2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818,
	2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828,
	2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838,
	2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848,
	2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858,
	2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868,
	2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878,
	2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888,
	2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898,
	2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908,
	2909, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918,
	2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928,
	2929, 2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938,
	2939, 2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948,
	2949, 2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958,
	2959, 2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967, 2968,
	2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978,
	2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988,
	2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998,
	2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008,
	3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018,
	3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028,
	3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038,
	3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048,
	3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058,
	3059, 3060, 3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068,
	3069, 3070, 3071, 3072, 3073, 3074, 3075, 3076, 3077, 3078,
	3079, 3080, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 3088,
	3089, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098,
	3099, 3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108,
	3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116, 3117, 3118,
	3119, 3120, 3121, 3122, 3142, 3143, 3144, 3145, 3146, 3147,
	3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157,
	3158, 3159, 3160, 3161, 3162, 3163, 3164, 3165, 3166, 3167,
	3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175, 3176, 3177,
	3178, 3179, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 3187,
	3188, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 717, 718,
	1512, 0, 799, 797, 2634, 800, 2965, 802, 804, 650,
	651, 652, 653, 654, 655, 0, 834, 3070, 815, 1933,
	835, 837, 838, 839, 840, 794, 792, 0, 839, 834,
	2708, 3070, 832, 1740, 1741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 581, 1575, 1576,
	1577, 1725, 1726, 3021, 1771, 0, 286, 854, -2, -2,
	3180, -2, 896, 897, -2, -2, 911, 915, 906, 3185,
	0, 3024, 3006, -2, 918, 1743, 1745, 1747, 1022, 1023,
	1024, 2655, 1028, 1026, 1038, 1039, 1042, 0, 1059, -2,
	0, 2704, 2988, -2, -2, 1060, 1061, -2, -2, -2,
	-2, 1040, 1041, 0, 0, 0, 0, 0, 2071, 2072,
	2638, 1773, 1765, 1768, 1766, 1767, 47, 49, 51, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 296, -2, -2, -2, -2, 0, 0, 3076,
	2767, 2602, 2672, 2605, 2600, 423, 425, 427, 429, 430,
	0, 0, 0, 0, 0, 0, 0, 461, 464, 466,
	469, 471, -2, 0, 473, 0, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 645, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1390, 1382, 1383, 1642, 0,
	0, 0, -2, 658, 660, 662, 720, 721, 0, 1922,
	1922, 728, 729, -2, 0, 0, 0, 0, 384, 375,
	1317, 1319, 1321, 1322, 0, 0, 0, 0, 0, 842,
	844, 0, 0, 3070, 347, 1324, 1326, 1328, 1329, 0,
	0, 0, 0, 0, 0, 386, 0, 0, 858, 860,
	862, 864, 943, 945, 947, 949, 951, 953, 955, 957,
	959, 961, 964, 966, 968, 970, 972, 974, 977, 979,
	981, 984, 987, 989, 991, 993, 995, 997, 999, 1001,
	1003, 1005, 1007, 1009, 1011, 1013, 1015, 1016, 1067, 0,
	0, 0, 0, -2, -2, -2, 0, 0, 0, -2,
	0, -2, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 1182, 0, 0, 0, -2,
	-2, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, -2, 0, 1285, 0,
	0, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 0,
	1155, 1180, 1181, 1191, 1020, 0, 1555, 1923, 1773, 1750,
	1751, 1752, 1757, 1759, 1753, 1754, 1755, 53, 55, 57,
	59, 61, 63, 65, 67, 69, 71, 73, 75, 77,
	79, 602, 604, 606, 608, 610, 613, 615, 617, 619,
	-2, 1892, 1893, 666, 668, 670, 672, 674, 676, 678,
	680, 845, 0, 848, 0, 1072, 847, -2, 0, 1927,
	1927, 1927, 0, 0, 1893, 1891, 0, 0, 0, 851,
	852, 922, 923, 2214, 0, 0, 0, 0, 0, 0,
	0, 0, 2474, 2302, 0, 924, -2, 2335, 2337, 3154,
	2937, 3180, 2473, -2, 2339, 2340, 2341, 2342, 2343, 0,
	2345, 2346, 2347, 2348, 2349, 2350, 0, 2352, 0, 2357,
	2358, 2359, 0, 3161, 2577, 2665, -2, 0, 0, 3168,
	2661, 0, 2440, 2375, -2, -2, 2689, 2668, 2144, 2145,
	2146, 2147, 2148, 2149, 2150, -2, -2, 3199, 2379, 2380,
	2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 0,
	3142, 3162, 3163, 3169, 3171, 3164, 3151, 2400, 2783, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 2173, 2182, -2, -2, -2, -2, -2, -2,
	-2, 3155, 3156, 3174, 3177, 3184, 3189, 3190, 3160, 3170,
	3198, 3200, 3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208,
	3209, 3210, 3211, 3212, 3213, 3214, 3215, 2174, -2, -2,
	-2, -2, 0, 1910, 2981, 1913, 2019, 1911, 1895, 1897,
	0, 1899, 0, 0, 0, 1904, 1930, 1928, 0, 1979,
	1908, 1909, 2002, 2002, 2034, 0, 2007, 0, 2034, 1922,
	2065, 0, 2013, 3011, 2376, 2377, 0, 2672, 2666, -2,
	-2, 3196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 795, 0, 801, 803, 0, 0, 0,
	0, 834, 833, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 3162, 542, 543, 546, 0, 584,
	585, 586, 587, 588, 3162, 0, 0, 0, 0, 594,
	595, 596, 597, 598, 599, 600, 256, 3162, 685, 714,
	710, 0, 256, 3162, 688, 713, 256, 3162, 691, 712,
	0, 694, 1640, 256, 3162, 697, 2630, 256, 3162, 700,
	702, 256, 3162, 706, 2645, 2643, 707, 0, 709, 276,
	272, 273, 274, 275, 1736, 1737, 1738, 1739, 0, 1770,
	1641, 856, 0, 882, 0, 894, 895, 3150, -2, 0,
	3035, 899, 900, -2, 902, 1774, 1778, 1779, 1780, 1781,
	1782, 0, 0, 0, 0, 1787, 0, 0, 0, 0,
	889, 890, 909, 910, 916, 919, 0, 1031, 1027, 1043,
	0, 1058, 0, 1059, 1059, 2619, 2610, 2611, 0, 0,
	1059, 1059, 0, 0, 1062, 1063, 1064, 1065, 1066, 1764,
	-2, 90, 0, 3162, 2065, 92, 0, 2624, 2698, 2699,
	2700, 2701, 2702, 3197, 3217, 3218, 3219, 3220, 3221, 3222,
	3223, 3224, 3225, 3226, 3227, 3228, 3229, 3230, 3231, 3232,
	3233, 3234, 3235, 3236, 3237, 3238, 3239, 3240, 3241, 3242,
	3243, 3244, 3245, 3246, 3247, 3248, 3249, 3250, 3251, 3252,
	3253, 3254, 3255, 3256, 3257, 3258, 3259, 3260, 3261, 3262,
	3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272,
	3273, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 3282,
	3283, 3284, 3285, 3286, 3287, 3288, 3289, 3290, 3291, 3292,
	3293, 3294, 3295, 3296, 3199, 96, 0, 3162, 101, 0,
	3162, 0, -2, 125, 561, 126, 0, 148, 0, 176,
	-2, -2, -2, 157, 0, 3162, 0, 2599, -2, 0,
	268, -2, 0, 785, 387, 388, 2685, 2686, 2694, 2695,
	2696, 2697, 376, 377, 0, 776, 0, 885, 2474, 0,
	0, 1354, -2, 0, 1568, 1570, 1570, 0, -2, 0,
	0, 0, 1305, 2596, 2601, 1306, 1307, 2620, 1308, 2606,
	0, 431, 432, 433, 434, 435, 0, 436, 3162, 438,
	439, 0, 441, 442, 3162, 444, 445, 0, 447, 0,
	449, 0, 311, 328, 326, 3162, 0, 3162, 475, 478,
	0, 582, 0, 579, 0, 563, 564, 0, 566, 0,
	0, 0, 571, 572, 574, 575, 576, 577, 578, 0,
	623, 621, 2635, 641, 401, 0, -2, 3162, 0, 1351,
	0, 0, 1620, -2, 0, 1561, -2, 0, 1627, 3162,
	1623, 0, -2, 0, 1920, 3162, 1791, 1386, 1387, 1388,
	1389, 2079, 647, 0, 1827, 0, 1829, 0, 1849, 2073,
	2002, 0, 0, 2078, 0, -2, 773, 2654, -2, 723,
	0, 724, 0, -2, 0, 401, 0, 0, 1332, 1334,
	1335, 1337, 1338, 1341, 1342, 1343, 1344, 0, 1346, 2051,
	348, 350, 0, 0, 0, 0, 1331, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 0, 641, 867, 0,
	0, 1068, 1069, 0, 0, 1087, 1088, 1089, 0, 0,
	401, -2, -2, -2, -2, 1098, 0, 1106, 1109, -2,
	0, 0, 0, 0, 1116, 0, 1121, 1122, 1123, 0,
	-2, 0, 1130, 1132, 1315, 1135, 0, 1315, 0, 1137,
	0, 1141, 0, 1144, 0, 1146, 0, 1148, -2, -2,
	-2, 1156, 1157, -2, 1162, -2, 0, 1166, -2, 0,
	1169, 0, 1172, -2, 0, 1182, 1178, 1179, 0, 0,
	0, 0, 1199, 1200, 0, 1204, 0, 1213, 0, 1216,
	1217, 1218, 0, 0, 1223, 1224, 0, 1226, 1227, 1228,
	1230, 1231, 1232, 0, 3109, 3032, 2767, 2845, 3030, 2815,
	0, 1243, -2, 2804, 1253, 1255, 0, -2, 0, 1271,
	0, 1275, 0, 0, 1284, 0, 0, 0, 1071, 0,
	1080, 1081, 1082, 256, 2069, 1749, 0, -2, 0, 846,
	0, 850, 1952, 1878, 1875, 0, 1949, 1950, 1879, 0,
	0, 0, 1886, 0, 1925, 1926, 0, 0, 0, 1865,
	1866, 0, 0, 0, 0, 0, 0, 2479, 2480, 2481,
	2482, 2495, 2483, 2484, 2494, 2492, 2493, 2485, 2486, 2491,
	2505, 2506, 2496, 2497, 2487, 2500, 2498, 2499, 2501, 2502,
	2503, 2504, 0, 0, 2510, 0, 2488, 2489, 2490, 2518,
	0, 0, 2519, 0, 2521, 0, 2511, 2507, 2508, 2509,
	0, 2281, 2283, 2585, 0, 0, 0, 2517, 2512, 2513,
	2219, 2220, 2221, 2222, 2223, 2256, 2260, 2261, 0, 0,
	2336, 2582, 2581, 2338, 0, 0, 2533, 0, 2351, -2,
	0, 2474, 2528, 0, 0, 2360, 2361, 2362, 0, 0,
	2533, 0, 0, 2576, 2372, 2373, 2211, 0, 0, 2442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2160, 2159,
	0, 2161, 0, 2162, 2163, 0, -2, 0, 0, 2183,
	0, 0, 0, 0, 2187, 0, 0, 0, 0, 0,
	0, 0, 2557, -2, 0, 0, 0, 0, 2175, 0,
	0, 1912, 0, 0, 0, 1983, 2586, 2590, 2591, 1983,
	1983, 0, 0, 2534, 2062, 2062, 0, 0, 2057, 2057,
	2057, 2055, 2034, 0, 2034, 2044, 0, 2034, 2034, 0,
	-2, 2007, 0, 0, 2048, 0, 2028, 761, 763, 765,
	767, 768, 769, 771, 2066, 2067, 0, 0, 0, 0,
	2673, 0, 0, 0, 0, 0, 0, 2657, 0, 0,
	2629, 456, 457, 0, 0, 0, 3089, 3024, 0, -2,
	-2, -2, -2, 3032, 0, 0, 2767, 2804, 2815, 806,
	836, 0, 1922, 0, 2536, 2094, 2098, 0, 2100, 2101,
	2102, 0, 0, 2095, 2194, 2690, 2691, 2692, 2154, 2155,
	2156, 2157, 2158, 2166, 2153, 2153, 2153, 2164, -2, 2171,
	2193, 2185, 2193, 2189, 2137, 2138, 2139, 2176, 2177, 2178,
	2179, 0, 3089, 3024, 0, -2, 0, 818, 0, 0,
	0, 1860, 338, 339, 540, 0, 254, 255, 0, 545,
	0, 583, 0, 590, 591, 592, 0, 681, 0, 0,
	256, 3162, 686, 0, 689, 0, 256, 3162, 2594, 695,
	0, 698, 0, 0, 704, 0, 0, 0, 0, 0,
	256, 1862, 0, 0, 0, 0, -2, 904, 912, 913,
	914, 0, 1776, 0, 1783, 933, 934, 935, 1785, 1786,
	0, 1788, 907, 936, 937, 938, 939, 940, 941, 0,
	2608, 2609, 2614, 2615, 0, 0, 905, 926, 908, 0,
	920, 1034, 1029, 1030, 1044, 1045, 0, 0, 2612, 2613,
	0, 0, 1050, 1051, 158, 1722, 0, 0, 209, 0,
	1722, 1722, 0, 0, 0, 0, 237, 0, 0, 1420,
	0, 0, 0, 0, 176, 194, 205, 170, 171, 172,
	0, 0, 0, 0, 0, 0, 102, 1534, 0, 1537,
	0, 0, 0, 0, 0, 0, 0, 1550, 1553, 0,
	0, 0, 0, 555, 0, 529, 0, 0, 552, 560,
	0, 0, 516, 517, 518, 519, 0, 0, 524, 0,
	0, 0, 0, 530, 0, 128, 129, 0, 0, 134,
	135, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	1824, 0, 184, 176, 0, 0, 175, 177, 160, 0,
	0, 176, 180, 195, 207, 0, 243, 0, 183, 245,
	1417, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	278, 0, 0, 313, 783, 0, 786, 0, 775, 777,
	641, 641, 0, 0, 883, 887, 888, 0, 0, 884,
	886, 0, 0, 1562, 0, 0, 0, 1919, 0, 0,
	0, 0, 3162, 1720, 0, 1703, 0, 2051, 2864, -2,
	-2, 348, 2051, 1304, 0, 0, 2673, 2604, 0, 0,
	0, 0, 0, 0, 448, 0, 0, 0, 337, 0,
	0, 0, 480, 485, 0, 573, 562, 565, 567, 568,
	569, 611, 1481, 3162, 0, 0, 645, 636, 0, 640,
	0, 0, 644, 0, 0, 1533, 3162, 1531, 2639, 0,
	1559, 0, 1619, 1512, 3162, 2637, 0, 0, 0, 1628,
	2682, 1637, 1641, 1812, 0, 649, 0, 1830, 1832, 0,
	0, 2074, 0, 2076, 2002, 1922, 0, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 1345, 357, 0, 2050,
	0, 0, 389, 2051, 348, 2994, 0, 1330, 401, 401,
	2051, 869, 2051, 871, 0, 0, 1090, 0, 0, 1093,
	401, 401, 401, 401, 1104, 1105, 1107, 1108, -2, -2,
	-2, -2, 1110, 1111, 1210, 0, 0, 0, 1209, 1718,
	0, 1126, 1129, 1133, 0, 1288, 3006, 3024, 3089, 1313,
	1134, 1210, 2767, 1210, 2767, 1210, 2767, 1210, 1210, 1150,
	1194, 1206, 1161, 1168, 0, 1163, 1167, 1170, 1173, 0,
	1175, 1183, 0, -2, 0, 1186, 0, 1188, 0, 1190,
	1210, 1202, 1211, 1214, 0, 1222, 1225, 0, 1233, 1234,
	1235, 1236, 2652, 0, 0, 1239, 1240, 1241, 1242, -2,
	0, 1246, 1247, 0, 0, 1262, 1267, 1268, 1264, 0,
	0, 0, 0, 0, 0, 1278, 1279, 0, 0, 0,
	1287, 0, 1083, 1554, 0, 1758, 1952, 1878, 849, 1869,
	1951, 1870, 1877, 1880, 0, 0, 1882, 0, 1884, 0,
	1947, 1948, 1955, 1956, 0, 1966, 1967, 1959, 0, -2,
	0, 0, 1962, 1963, 1888, 0, 1905, 1906, 1907, 1936,
	1939, 1656, 0, 3299, 892, 0, 2215, 2089, 2216, 2217,
	2623, 0, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231,
	2232, 2233, -2, -2, -2, -2, -2, -2, -2, -2,
	2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251,
	2252, -2, -2, -2, 2257, 2258, 2259, -2, 2520, 2522,
	0, 2585, 0, -2, 0, -2, -2, -2, -2, 2278,
	0, 2280, 2285, 2287, 2289, 0, 0, 0, 0, 2584,
	2299, 2568, 2569, 0, 0, 2476, 2477, 2478, 2284, 0,
	2303, 2583, 2580, 0, 0, 2514, 0, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	0, 2532, 1935, 2364, 0, 0, 0, 0, 2371, 2356,
	2530, 0, 2529, 0, 0, 0, 2540, 0, 2575, 2571,
	0, 2621, 2210, 2197, 2198, 2199, 2200, 2201, 2202, 2212,
	0, 2618, 2658, 2664, 2450, 0, 0, 0, 2401, 2402,
	2403, 2404, 2405, 0, 2407, 2408, 0, 2410, 2411, 0,
	2413, 2414, 0, 2416, 2417, 2418, 2419, 2420, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2105, 2106,
	2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	0, 0, 2422, 0, 2543, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 2424, 0, 2426, 2534, 2554, 0,
	0, 2304, 0, 0, 0, 0, 0, 2429, 2534, 2562,
	0, 0, 0, 0, 0, 2534, 0, 2567, 0, 2436,
	0, 2438, 1113, 1114, 1914, 0, 0, 2020, 0, 2084,
	0, 0, 0, 2589, 2592, 2593, 3123, 3124, 3125, 3126,
	3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136,
	3137, 3138, 3139, 3140, 3141, 2084, 2084, 0, 1978, 0,
	0, 2058, 2059, 2060, 2061, 0, 0, 2062, 0, 2052,
	2056, 2053, 2054, 2044, 1999, 0, 0, 2625, 2044, 2005,
	2043, 0, 2019, 2033, 2044, 2044, 0, -2, 2009, 2047,
	0, 2022, 2034, 0, 0, 762, 764, 766, 770, 772,
	0, 0, 1935, -2, 0, -2, 403, 1511, 0, 0,
	0, 0, 0, 0, 796, 798, 0, 0, 701, 0,
	0, 0, 0, 1294, 0, 1296, 1297, 0, 1299, 0,
	1706, 790, 0, 793, 0, 2085, 2088, 0, 0, 2099,
	2103, 2104, 2195, 0, 0, 0, 0, 0, 0, 0,
	831, 0, 3070, 0, 829, 0, 544, 256, 0, 548,
	549, 0, 0, 497, 498, 499, 500, 502, 2693, 503,
	-2, -2, 0, 593, 256, 711, 683, 0, 256, 256,
	692, 0, 0, 256, 703, 256, 2646, 256, 2644, 277,
	708, 1861, 289, 0, 891, 0, 1775, 1784, 0, 930,
	0, 932, 0, 2616, 2617, 0, 921, 0, 1032, 0,
	1046, 1047, 1048, 1049, 0, 0, 0, 0, 1721, 0,
	0, 1666, 0, 0, 213, 3162, 0, 258, 0, 0,
	1474, 2631, 0, 1462, 0, 0, 2791, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 173, 174, 0, 0, 0,
	0, 0, 0, 0, 0, 1535, 1536, 1538, 1545, 1547,
	0, 1541, 1542, 0, 1544, 1546, 1548, 0, 1551, 0,
	0, 0, 0, 0, 0, 551, 553, 554, 529, 0,
	0, 0, 0, 0, 0, 0, 522, 523, 525, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 136, 140,
	1571, 3030, 0, 0, 0, 0, 1572, 1573, 1574, 1800,
	1801, 0, 1823, 1824, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 182, 0, 2598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	314, 0, 787, 0, 788, 0, 778, 401, 780, 781,
	397, 394, 396, 782, 0, 0, 0, 1564, 0, 1615,
	1613, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 0, 0, 0,
	0, -2, 1566, 1567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 0, 392, 2597, 2607, 0, 1339,
	1340, 437, 440, 443, 446, 295, 0, 0, 0, 477,
	487, 0, 1392, 1364, 0, 0, 622, 401, 641, 643,
	0, 399, 2940, 2650, 1349, 1529, 1532, 0, 1512, 3162,
	1583, 0, 0, 0, 0, 0, 0, 0, 1626, 0,
	0, 3162, 2626, 2681, 2682, 1814, 1824, 0, 2084, 0,
	1847, 1833, 0, 0, 0, 1847, 1851, 1852, 1854, 1855,
	0, 0, 2075, 2081, 722, 774, 1922, 1922, 401, 0,
	0, 1836, 1838, 0, 0, 0, 340, 0, 351, 2051,
	349, 0, 357, 0, 0, 2051, 348, 0, 635, 868,
	873, 401, 0, 0, 401, 1094, 1095, 1096, 1097, 1152,
	1196, 1208, 1266, 1115, 1117, 1118, 1119, 0, 1124, 0,
	0, 0, 1314, 1309, 1310, 1311, 2647, 2643, 1312, 1136,
	1210, 1139, 1210, 1142, 1210, 1145, 1147, 1165, 1171, 1184,
	1177, 1185, 0, 0, 0, 1198, 0, 0, 1220, 0,
	1229, 1237, 0, 1245, -2, 1250, 1251, 0, 0, 0,
	0, 0, 0, 0, 1272, 1273, 1274, 1276, 1281, 1280,
	0, 1286, 1084, 2070, 1873, 1874, 1876, 0, 1885, 0,
	0, 1961, -2, -2, 1960, 1964, 1965, -2, -2, -2,
	-2, 1881, 0, 1890, 1887, 0, 1946, 1654, 1655, 0,
	0, 893, 0, 0, -2, -2, 0, 0, 0, 2300,
	0, -2, 2279, 2282, 2286, 2288, 2290, 0, 0, 0,
	0, 0, 0, 2523, 0, 2525, 2301, 2578, 2581, 2516,
	0, 2472, 0, 0, 1934, 1935, 1935, 0, 2370, 0,
	2531, 0, 2538, 2539, 0, 2363, 0, 2572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2374, 0, 0,
	0, 0, 2406, 2409, 2412, 2415, 0, 0, 0, 0,
	2395, 0, 0, 0, 2399, 2165, 2151, 0, 0, 2168,
	2172, 2193, 2191, 2192, 2186, 2193, 2190, 2141, 0, 2140,
	0, 2421, 0, 2423, 2425, 0, 0, 2427, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2307, 2308, 2309, 2329, 2428, 2560, 2561, 0,
	0, 0, 0, 0, 0, 2434, 0, 2566, 2435, 2437,
	1922, 0, 1915, 0, 2018, 0, 1980, 1969, 2083, 0,
	2587, 2051, 1982, 1984, 2588, 2628, 1969, 1969, 0, 2535,
	0, 0, 2038, 0, 0, 0, 2040, 2003, 0, 0,
	1997, 0, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 2004,
	2019, 2042, 2006, 2010, 2658, 0, 2022, 2046, 0, 2044,
	0, 2029, 0, 2031, 2068, 0, 2015, 2048, 0, 0,
	2674, 2084, 0, 450, 458, 459, 451, 452, 453, 454,
	0, 1706, 0, 0, 0, 0, 0, 1295, 1298, 0,
	814, 0, 0, 2537, 0, 2090, 0, 2096, 0, 816,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 541,
	547, 0, 0, 496, 0, 495, 501, 589, 682, 256,
	687, 690, 2595, 256, 696, 699, 705, 285, 0, 881,
	-2, 928, 929, 931, 0, 927, 1037, 1033, 210, 1722,
	0, 0, 0, 1662, 0, 1375, 0, 1370, 1371, 1664,
	2642, 1668, 1674, 1677, 0, 215, 3162, 227, 0, 3162,
	0, 1436, 0, 0, 0, 0, 0, 0, 1724, 0,
	0, 3162, 256, 3162, 256, 231, 233, 236, 0, 242,
	238, 0, 1372, 0, 1424, 0, 0, 1427, 159, 1722,
	0, 0, 162, 166, 178, 0, 0, 0, 192, 0,
	0, 0, 1679, 1683, 1691, 0, 0, 0, 1539, 1540,
	1543, 1549, 1552, 103, 0, 0, 0, 1687, 1689, 1695,
	556, 557, 558, 0, 0, 0, 520, 521, 127, 130,
	3162, 2640, 0, 132, 3162, 0, 141, 1824, 0, 0,
	0, 0, 1661, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 164, 168, 179, 0, 1697, 161, 181, 0,
	271, 0, 0, 261, 256, 3162, 0, 263, 0, 264,
	265, 279, 0, 0, 0, 0, 0, 0, 0, 319,
	0, 0, 0, 784, 0, 779, 0, 0, 0, 1352,
	1353, 1614, 0, 1557, 1558, 323, 324, 0, 1569, 1563,
	0, 0, 0, 0, 0, 1699, 1700, 0, 0, 0,
	1720, 1715, 2051, 291, 0, 2051, 299, 0, 2603, 0,
	327, 336, 474, 0, 486, 488, 490, 0, 0, 0,
	1391, 1492, 1393, 1395, 1396, 1397, 258, 0, 0, 0,
	1462, 2851, 2682, 0, 0, 1359, 0, 0, 0, 628,
	624, 0, 633, 637, 638, 0, 0, 0, -2, 0,
	0, 0, 0, -2, 0, 0, 0, 1630, 1624, 1625,
	0, 0, 0, 0, 3162, 1816, 1824, 0, 1920, 1935,
	648, 1825, 1847, 0, 0, 0, 1835, 1831, 1828, 2084,
	0, 0, 0, 0, 0, 2077, 2080, 725, 726, 378,
	0, 401, 0, 0, 0, 0, 0, 0, 355, 0,
	358, 0, 0, 0, 363, 364, 365, 366, 367, 368,
	0, 0, 0, 0, 373, 374, 357, 390, 342, 2051,
	0, 357, 0, 0, 870, 0, 1085, 0, 0, 1092,
	0, 0, 1718, 1128, 0, 1138, 1140, 1143, 1187, 1189,
	1210, 1201, 0, 1221, 1238, 1249, 1256, 2627, 1257, 1414,
	0, 1414, 0, 0, 1277, 1283, 1883, 0, 1958, 1889,
	1940, 1941, 0, 1656, 0, 2218, 2263, 0, 0, -2,
	0, 0, 2267, 0, 0, 0, -2, 0, 0, 0,
	2524, 2526, 0, 2580, 2515, 2365, 0, 0, 0, 2369,
	2353, 2354, 0, 2475, 2541, 2570, 2574, 0, 2203, 2204,
	2205, 2206, 2207, 2208, 2209, 0, 2622, 2659, 2663, 2448,
	2449, 2453, 2636, 0, 0, 0, 2378, 0, 0, 0,
	0, 0, 0, 0, 0, 2167, 2184, 2188, 0, 0,
	2542, 2553, 2555, 2305, 2306, 2310, 2311, 2312, 2313, 2314,
	2315, 2316, 2317, 2318, 2319, -2, -2, -2, 2323, 2324,
	2325, -2, -2, -2, 2330, 0, 0, 0, 2556, 2558,
	2559, 2563, 2564, 0, 2431, 2432, 2433, 2565, 0, 1922,
	1916, 2021, 1977, 0, 2082, 1981, 0, 1977, 1977, 1929,
	2036, 0, 0, 2064, 0, 2000, 0, 2001, 0, 0,
	2041, 0, 2008, 2045, 0, 2024, 2026, 2011, 2012, 2030,
	0, 2014, 0, 2017, 2365, -2, 402, 404, 406, 0,
	409, 410, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 805, 1706, 1706, 0, 0, 0, 807, 0,
	791, 0, 0, 2092, 0, 2196, 820, 822, 0, 0,
	0, 0, 3089, 3024, 0, 0, 819, 550, 493, 494,
	684, 693, 287, 0, 2049, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 257, 0, 1473,
	0, 1434, 0, 0, 1461, 0, 0, 1479, 217, 218,
	219, 0, 0, 0, 0, 229, 0, 0, 225, 0,
	235, 241, 240, 0, 1421, 0, 0, 0, 0, 1667,
	0, 0, 0, 189, 190, 191, 0, 196, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 138, 0, 0, 0, 143, 144, 0,
	0, 1806, 1807, 0, 1794, 186, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 1653, 281, 0, 0,
	0, 0, 0, 315, 316, 317, 318, 0, 303, 305,
	0, 0, 0, 0, 325, 0, 398, 393, 395, 1556,
	1617, 1618, 1565, 1680, 1684, 1692, 0, 0, 0, 0,
	0, 839, 1719, 0, 299, 297, 0, 300, 299, 293,
	0, 0, 0, 0, 0, 0, 0, 570, 1362, 1480,
	0, 0, 1482, 1398, 1402, 0, 0, 2682, 0, 0,
	0, 2633, 0, 1360, 0, 0, 1481, 620, 0, 627,
	0, 642, 2632, 0, 0, 0, 1533, 0, 0, 1560,
	1512, 1586, 1512, 0, 1629, 1631, 0, 1639, 0, 0,
	0, 1818, 1824, 0, 1811, 1812, 1954, 1826, 1845, -2,
	0, 0, 1935, 1853, 1850, 1856, 1857, 0, 0, 381,
	0, 1837, 1839, 0, 1333, 1336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 341, 357, 354, 344, 2051,
	385, 0, 401, 401, 1120, 1717, 1125, 2648, 1197, 1219,
	1258, 1413, 0, 0, 1260, 0, 0, 1957, 1944, 1945,
	1942, 1656, 2265, 2269, 0, 0, 0, 2271, -2, 0,
	2293, -2, -2, 2527, 2579, 2344, 1935, 2366, 2368, 2355,
	2573, 2213, 0, 2455, 2452, 0, 2439, 0, 2390, 2391,
	0, 0, 2394, 2396, 2397, 2398, 2152, 2143, 2142, 2552,
	0, 0, 0, 0, 2430, 1917, 0, 2444, 0, 0,
	1985, 2444, 2444, 2037, 0, 2039, 1998, 1986, 0, 1995,
	0, 2659, 2023, 0, 2027, 2032, 2016, 0, 407, 0,
	411, 412, 413, 414, 416, 0, 0, 0, 0, 0,
	455, 808, 809, 0, 0, 0, 0, 1705, 2086, 2091,
	0, 2097, 0, 0, 0, 0, 0, 0, 0, 0,
	830, 288, 0, 1035, 1036, 211, 212, 1376, 1374, 1671,
	1675, 1672, 0, 214, 0, 0, 1435, 0, 1438, 0,
	0, 0, 0, 1445, 1462, 0, 0, 0, 0, 0,
	0, 1464, 0, 1463, 0, 0, 1496, 0, 1644, 1651,
	0, -2, 0, 0, 0, 221, 247, 0, 0, 0,
	0, 250, 1723, 223, 0, 0, 256, 256, 1373, 0,
	0, 1663, 1665, 1678, 0, 0, 0, 0, 199, 0,
	0, 1681, 1685, 1693, 1688, 1690, 1696, 559, 515, 0,
	0, 133, 142, 1797, 0, 0, 0, 1808, 0, 185,
	0, 0, 0, 1698, 269, 270, 0, 256, 0, 256,
	262, 256, 1653, 0, 0, 0, 0, 0, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 1701,
	1702, 290, 0, 0, 292, 391, 299, 476, 484, 489,
	491, 492, 1423, 0, 1492, 1484, 1485, 1486, 0, 1394,
	1491, 1493, 0, 0, 1399, 0, 0, 0, 0, 0,
	0, 1379, 1361, 0, 1392, 1364, 0, 625, 0, 400,
	1350, 1530, 1578, 1512, 0, 1581, 0, 0, 1621, 0,
	0, 0, 0, 0, 0, 0, 1820, 1824, 0, 1813,
	1814, 1847, 1953, 0, 0, 0, 1834, 1954, 0, 401,
	0, 401, 359, 0, 360, 361, 362, 369, 370, 371,
	372, 343, 346, 0, 357, 872, 874, 0, 0, 0,
	880, 1086, 1091, 1412, 0, 0, 0, 0, 1943, 2273,
	-2, -2, 2294, 0, 2660, 2662, 1935, 0, 2441, 1937,
	0, 0, -2, 0, 0, 0, 1918, 1901, 0, 1976,
	1968, 1970, 1972, 3009, 2762, 3161, 1902, 1903, 2063, 0,
	0, 2025, 408, 417, 418, 0, 420, 421, 810, 0,
	0, 0, 0, 2093, 0, 0, 0, 817, 0, 0,
	0, 0, 1025, 0, 0, 1673, 216, 0, 0, 1439,
	1440, 1442, 0, 1444, 1446, 1447, 1364, 0, 1451, 0,
	2684, 0, 1456, 1459, 1460, 0, 0, 1475, 1497, 0,
	1506, 0, 1646, 1656, 1650, 0, 1648, 1508, 0, 220,
	249, 222, 251, 246, 0, 1653, 0, 224, 234, 0,
	0, 163, 0, 0, 2755, 202, 200, 198, 131, 137,
	139, 145, 1660, 188, 0, 165, 0, 271, 280, 1652,
	282, 266, 256, 0, 302, 304, 306, 307, 308, 309,
	0, 1682, 1686, 1694, 0, 1709, 1710, 1711, 1712, 1713,
	0, 0, 0, 301, 0, 0, 0, 483, 1364, 1422,
	1363, 1483, 0, 1494, 1364, 0, 0, 1508, 0, 0,
	0, 0, 0, 1366, 0, 1365, 0, 0, 626, 629,
	0, 632, 2084, 639, 0, 0, 0, 1585, 0, 1632,
	1630, 0, 1638, 0, 0, 0, 1793, 0, 0, 1815,
	1816, 646, 1840, 0, 0, 1847, 1858, 380, 0, 383,
	356, 0, 345, 0, 876, 0, 878, 0, 1259, 1261,
	0, 0, 2367, 2459, 0, 0, 2392, 2393, -2, 0,
	2333, 2443, 2445, 0, 0, 0, 0, 0, 1987, 1996,
	419, 1706, 1706, 1706, 2087, 824, 825, 827, 821, 823,
	0, 0, 1669, 0, 1676, 258, 1437, 1441, 0, 1448,
	0, 0, 0, 1452, 1516, 0, 0, 1533, 1533, 1465,
	0, 0, 1500, 1501, 1419, 0, 1502, 1503, 1504, 1645,
	1946, 1651, 1364, 0, 0, 248, 253, 0, 0, 0,
	0, 0, 0, 187, 0, 260, 283, 1653, 0, 0,
	1714, 0, 0, 298, 332, 506, 504, 1366, 0, 1495,
	1400, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1401, 1506, 1508, 0, 1419, 0, 1472, 1377, 0, 1380,
	0, 1362, 0, 630, 631, 634, 0, 1579, 0, 1586,
	0, 0, 1639, 0, 0, 1803, 1792, 1824, 1817, 1818,
	2084, 0, 1848, 0, 352, 353, 875, 0, 0, 1269,
	1270, 0, 0, 0, 0, 2454, 1938, 2334, 0, 0,
	1971, 1973, 1974, 1975, 811, 812, 813, 0, 0, 1670,
	228, 0, 1510, 1450, 1521, 0, 0, 0, 0, 0,
	1466, 1498, 1499, 1496, 1418, 0, 1649, 1647, 1477, 1510,
	1512, 226, 0, 1508, 0, 1428, 0, 0, 1431, 0,
	0, 203, 2755, 201, 0, 256, 789, 1706, 256, 0,
	335, 0, 539, 505, 507, 0, 0, 511, 512, 513,
	1358, 0, 1488, 1490, 1419, 1506, 1508, 1364, 1419, 0,
	1381, 1423, 1379, 1580, 1584, 1582, 1622, 1508, 0, 1506,
	0, 1810, 1824, 1804, 1805, 0, 1820, 0, 0, 401,
	877, 879, 2451, 2471, 2460, -2, 3092, 2763, 0, 2471,
	2471, 2446, 2447, 0, 0, 0, 1364, 0, 1453, 1517,
	1518, 0, 1513, 1514, 1515, 2683, 1454, 1455, 1457, 1458,
	2084, 0, 1507, 1516, 252, 1364, 1425, 0, 0, 1426,
	0, 0, 206, 0, 208, 284, 1704, 1707, 0, 310,
	0, 0, 479, 537, 0, 0, 508, 509, 531, 510,
	1355, 1357, 1364, 0, 1364, 1419, 1506, 2084, 1364, 0,
	0, 0, 1364, 1366, 1506, 0, 1419, 0, 1799, 1809,
	0, 1819, 1793, 0, 1843, 0, 382, 2456, 0, 0,
	2462, 2463, 2464, 2465, 2466, 2457, 2458, 826, 828, 1443,
	1449, 0, 1519, 0, 1520, 0, 0, 0, 1476, 1505,
	1521, 232, 1429, 0, 1432, 0, 204, 0, 0, 330,
	331, 536, 532, 1487, 1489, 2084, 1364, 1419, 1659, 2084,
	1367, 0, 1369, 1366, 1378, 1419, 0, 1364, 0, 1822,
	1798, 1802, 2641, 1803, 1841, 0, 0, 0, 2468, 2469,
	0, 0, 0, 1522, 0, 1525, 1526, 0, 1523, 1496,
	0, 0, 256, 0, 1922, 1659, 2084, 1364, 1470, 0,
	1658, 1659, 1368, 1358, 1364, 1508, 2084, 1506, 1796, 1824,
	1810, 0, 2084, 2467, 2470, 2461, 1509, 1524, 1527, 1528,
	1478, 0, 0, 1708, 333, 0, 0, 538, 533, 534,
	1467, 1659, 2084, 1657, 1471, 1356, 2084, 1506, 1659, 1419,
	1789, 1795, 0, 0, 1799, 2084, 1844, 1416, 0, 0,
	535, 1468, 1659, 1659, 1419, 1635, 1364, 1821, 1796, 1842,
	1430, 1415, 0, 334, 1469, 1633, 1364, 2084, 1790, 0,
	2084, 1659, 0, 1659, 1636, 1416, 1634, 1433,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 653, 3, 659, 654, 3,
	665, 666, 657, 655, 670, 656, 667, 658, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 674, 671,
	645, 647, 646, 650, 669, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 663, 3, 664, 660, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 672, 652, 673, 648,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 633, 57976, 634, 57977, 635, 57978, 636, 57979, 637,
	57980, 638, 57981, 639, 57982, 640, 57983, 641, 57984, 642,
	57985, 643, 57986, 644, 57987, 649, 57988, 651, 57989, 661,
	57990, 662, 57991, 668, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1664
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1669
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1673
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1679
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1682
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1684
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1685
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1686
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1687
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1688
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1689
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1690
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1691
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1692
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1695
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1696
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1697
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1698
		{
			return helpWith(sqllex, "MOVE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1707
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1708
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1710
		{
			return helpWith(sqllex, "ALTER")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1713
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1714
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1715
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1716
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1717
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1719
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1720
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1721
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1722
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1723
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1724
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1725
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1726
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1787
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1813
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1827
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1847
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1918
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1922
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1926
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1933
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1945
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1955
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1962
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1972
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1979
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1989
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1998
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2014
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2024
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2033
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     false,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2060
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     true,
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2069
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelGlobal,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2082
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2095
		{
			s := sqlDollar[9].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				RegionName:    tree.Name(sqlDollar[8].str),
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2131
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2165
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2169
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2173
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2183
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2189
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2198
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2213
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2219
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2227
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2237
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2241
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2263
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2268
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2274
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2286
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2297
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[3].union.tableIndexName(), NotVisible: sqlDollar[4].union.bool(), IfExists: false}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2301
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[5].union.tableIndexName(), NotVisible: sqlDollar[6].union.bool(), IfExists: true}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2307
		{
			sqlVAL.union.val = true
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = false
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2327
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 185:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2367
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2376
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2389
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: sqlDollar[4].union.expr(),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2398
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Options: sqlDollar[4].union.kvOptions(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2406
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: true,
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2415
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: tree.DNull,
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2425
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2433
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2444
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 196:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2454
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2464
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 198:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2473
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2484
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 200:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2490
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2498
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2502
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 204:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2510
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2516
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2521
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2558
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colTableDef()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colTableDef()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colTableDef()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colTableDef()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2588
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2598
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2608
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2612
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2638
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2656
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2666
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2669
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2675
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2706
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2715
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2727
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2740
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2762
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2770
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = nil
		}
	case 248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2784
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = true
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2794
		{
			sqlVAL.union.val = false
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2800
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2804
		{
			sqlVAL.union.val = nil
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 259:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2876
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2885
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2904
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2913
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2922
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2926
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2929
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2933
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2940
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2953
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2967
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2973
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3013
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3025
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3110
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3114
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3118
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3130
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3145
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3162
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3182
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3275
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = &tree.AlterBackupSchedule{
				ScheduleID: uint64(sqlDollar[4].union.int64()),
				Cmds:       sqlDollar[5].union.alterBackupScheduleCmds(),
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3300
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3305
		{
			sqlVAL.union.val = tree.AlterBackupScheduleCmds{sqlDollar[1].union.alterBackupScheduleCmd()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupScheduleCmds(), sqlDollar[3].union.alterBackupScheduleCmd())
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetLabel{
				Label: sqlDollar[3].union.expr(),
			}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3322
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetInto{
				Into: sqlDollar[3].union.stringOrPlaceholderOptList(),
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3328
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetWith{
				With: sqlDollar[3].union.backupOptions(),
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetRecurring{
				Recurrence: sqlDollar[2].union.expr(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3340
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{AlwaysFull: true},
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3346
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{Recurrence: sqlDollar[4].union.expr()},
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetScheduleOption{
				Option: sqlDollar[4].union.kvOption(),
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3365
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3412
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = nil
		}
	case 336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3443
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3449
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3460
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3465
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3500
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3509
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3519
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3528
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3538
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3557
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.backupTargetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3564
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3589
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3597
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3615
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3626
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3630
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3643
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3647
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3651
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3655
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3683
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3687
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3691
		{
			sqlVAL.union.val = &tree.RestoreOptions{SchemaOnly: true}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3695
		{
			sqlVAL.union.val = &tree.RestoreOptions{VerifyData: true}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3706
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3710
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3737
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3742
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3746
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3752
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3757
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3762
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3766
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3786
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3790
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3794
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3802
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3806
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3812
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3816
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3822
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3826
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3834
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3840
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3844
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3850
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3854
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3858
		{
			sqlVAL.union.val = nil
		}
	case 402:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3870
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3884
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3894
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3900
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3904
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3916
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3932
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3936
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3940
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3944
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3952
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3956
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3960
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3964
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3973
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3974
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3975
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3976
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3986
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3994
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4000
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4003
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4022
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4030
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4032
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4036
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4039
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4049
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4058
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4066
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4072
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4075
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4083
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4086
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4090
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4094
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4098
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4102
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4115
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4120
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4123
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4124
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4128
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4133
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4152
		{
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4153
		{
			return helpWith(sqllex, "CREATE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4160
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4167
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4170
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4173
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4191
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4206
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4209
		{
			sqlVAL.union.val = true
		}
	case 482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4210
		{
			sqlVAL.union.val = false
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4213
		{
			sqlVAL.union.val = true
		}
	case 484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4214
		{
			sqlVAL.union.val = false
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4221
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4233
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4239
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4247
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4255
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4286
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4287
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4288
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4289
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4290
		{
			return unimplementedWithIssueDetail(sqllex, 88947, "variadic user-defined functions")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4299
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4303
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4311
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4315
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4322
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4323
		{
			return unimplemented(sqllex, "create window function")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4325
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4331
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4335
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4339
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4351
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4355
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4359
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4363
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4367
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4371
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4375
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4379
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4383
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4394
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4395
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4402
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4418
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4430
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = &tree.DropFunction{
				Functions:    sqlDollar[3].union.functionObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4455
		{
			sqlVAL.union.val = &tree.DropFunction{
				IfExists:     true,
				Functions:    sqlDollar[5].union.functionObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4462
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4466
		{
			sqlVAL.union.val = tree.FuncObjs{sqlDollar[1].union.functionObj()}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4470
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionObjs(), sqlDollar[3].union.functionObj())
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
				Args:     sqlDollar[2].union.functionArgs(),
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4483
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4491
		{
			sqlVAL.union.val = sqlDollar[2].union.functionArgs()
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = &tree.AlterFunctionOptions{
				Function: sqlDollar[3].union.functionObj(),
				Options:  sqlDollar[4].union.functionOptions(),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4529
		{
		}
	case 555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4530
		{
		}
	case 556:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = &tree.AlterFunctionRename{
				Function: sqlDollar[3].union.functionObj(),
				NewName:  tree.Name(sqlDollar[6].str),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = &tree.AlterFunctionSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = &tree.AlterFunctionSetOwner{
				Function: sqlDollar[3].union.functionObj(),
				NewOwner: sqlDollar[6].union.roleSpec(),
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = &tree.AlterFunctionDepExtension{
				Function:  sqlDollar[3].union.functionObj(),
				Remove:    sqlDollar[4].union.bool(),
				Extension: tree.Name(sqlDollar[8].str),
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = true
		}
	case 561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = false
		}
	case 562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4580
		{
			return unimplemented(sqllex, "create access method")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4581
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4582
		{
			return unimplemented(sqllex, "create cast")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4583
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4584
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4585
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4586
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4587
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4588
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4589
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4590
		{
			return unimplemented(sqllex, "create publication")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4591
		{
			return unimplemented(sqllex, "create rule")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4592
		{
			return unimplemented(sqllex, "create server")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4593
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4594
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4595
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4596
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4599
		{
		}
	case 580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4600
		{
		}
	case 581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4603
		{
		}
	case 582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4604
		{
		}
	case 583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4607
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4610
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4611
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4612
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4613
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4614
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4615
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4616
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4617
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4618
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4619
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4620
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4621
		{
			return unimplemented(sqllex, "drop server")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4622
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4623
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4627
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4628
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4629
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4631
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4633
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4634
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4635
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4636
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4637
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4647
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4655
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4673
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4682
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4689
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4695
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4701
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4705
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4716
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4743
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4752
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4770
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4801
		{
		}
	case 641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4803
		{
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4807
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4811
		{
			sqlVAL.str = ""
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4821
		{

			sqlVAL.union.val = nil
		}
	case 646:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Using:     sqlDollar[5].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4847
		{
			return helpWith(sqllex, "DELETE")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4851
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4855
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4868
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4870
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeSequences}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4893
		{
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "DROP")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4900
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4902
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4916
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4920
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4929
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4937
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4945
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4949
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4952
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4960
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4967
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4992
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5000
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5008
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5015
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5022
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5037
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5041
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5047
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5051
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5075
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5087
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5090
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5094
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5099
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5126
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5128
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5133
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5137
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5160
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5167
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5169
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5177
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5185
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5193
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5201
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5212
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5220
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5223
		{
			return helpWith(sqllex, "DELETE")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5225
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5226
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5227
		{
			return helpWith(sqllex, "INSERT")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5230
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5232
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5240
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5241
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5242
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5247
		{
			return helpWith(sqllex, "DELETE")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5248
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "INSERT")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5251
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5255
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5256
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5260
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5264
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5274
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5280
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5288
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5303
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5334
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5348
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5362
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5370
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5383
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5391
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5399
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5417
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5424
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5432
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5454
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5462
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5465
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5489
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5493
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5497
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5516
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5544
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5556
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5566
		{
			return helpWith(sqllex, "GRANT")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5594
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5602
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5636
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5660
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[11].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5706
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5717
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5720
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5730
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5758
		{
			return helpWith(sqllex, "RESET")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5759
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5771
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5778
		{
			return helpWith(sqllex, "RESET")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5786
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5789
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5800
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5803
		{
			return helpWith(sqllex, "USE")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5807
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5808
		{
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5809
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5813
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5814
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5815
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5816
		{
			return helpWith(sqllex, "USE")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5832
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5847
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5850
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5868
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5876
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5880
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5884
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5890
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5894
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5908
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5912
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5927
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5930
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5940
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5948
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5955
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5956
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5986
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5992
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6001
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6006
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6023
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6028
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6045
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6048
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6053
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6069
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6073
		{
			return unimplemented(sqllex, "set from current")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6077
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6082
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6091
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6096
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6100
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6112
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6117
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6124
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6128
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6138
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6176
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6180
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = tree.Low
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = tree.Normal
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = tree.High
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6251
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6252
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6253
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6254
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6255
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6256
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6257
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6258
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6259
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6260
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6262
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6263
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6264
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6265
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6266
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6267
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6269
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6271
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6275
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6276
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6277
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6278
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6280
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6281
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6282
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6283
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6284
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6285
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6286
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6288
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6289
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6290
		{
			return helpWith(sqllex, "SHOW")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6293
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6302
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6313
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6323
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6333
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6337
		{
			sqlVAL.union.val = true
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6341
		{
			sqlVAL.union.val = false
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6351
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6355
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6365
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6369
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6375
		{
			sqlVAL.union.val = true
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6379
		{
			sqlVAL.union.val = false
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6383
		{
			sqlVAL.union.val = false
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6393
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6398
		{
			return helpWith(sqllex, "FETCH")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6411
		{
			return helpWith(sqllex, "MOVE")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6415
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6429
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6436
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6443
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6450
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6478
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6485
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6493
		{
			sqlVAL.union.val = int64(1)
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6497
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = int64(1)
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = int64(1)
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6502
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6505
		{
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6506
		{
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6509
		{
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6510
		{
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6514
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6519
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6524
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6529
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6534
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6546
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6561
		{
			sqlVAL.str = "client_encoding"
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6566
		{
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6568
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.str = "timezone"
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6574
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = &tree.ShowTableStats{
				Table:   sqlDollar[5].union.unresolvedObjectName(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6605
		{

			sqlVAL.union.val = &tree.ShowTableStats{
				Table:     sqlDollar[7].union.unresolvedObjectName(),
				UsingJSON: true,
				Options:   sqlDollar[8].union.kvOptions(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6613
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6626
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6634
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6642
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6648
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6691
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6699
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupValidateDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6706
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6710
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6714
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = tree.BackupValidateDetails
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6745
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6750
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6759
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6765
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6779
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6787
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6790
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6813
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6824
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6842
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6872
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6882
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6895
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6904
		{
			sqlVAL.union.val = &tree.ShowGrants{
				Targets:  &tree.GrantTargetList{System: true},
				Grantees: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6910
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6921
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6927
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6931
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6934
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6940
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6943
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6954
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6959
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6967
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6970
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6975
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6979
		{
			sqlVAL.union.val = true
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.union.val = true
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6983
		{
			sqlVAL.union.val = false
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7011
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7012
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7013
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7015
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7019
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7023
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7030
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7032
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7056
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7057
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7067
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7073
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7081
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7089
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7097
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7125
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7130
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7132
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7136
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7139
		{
			sqlVAL.union.val = true
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = false
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7151
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7153
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7156
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7187
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			}}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			}}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = &tree.ShowFunctions{}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7215
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7222
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7225
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7227
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7230
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = true
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = false
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7248
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7255
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7262
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7269
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7273
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7277
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7287
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7298
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7312
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7320
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7325
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7330
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7334
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7341
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7348
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7365
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7370
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7375
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7380
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7385
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeIndexes, Name: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7390
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSecondaryIndexes, Name: sqlDollar[6].union.unresolvedObjectName()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7395
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7408
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7415
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7428
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7433
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7445
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{ConnectionLabel: sqlDollar[5].union.expr()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7450
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7458
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7461
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7469
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7472
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7490
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7498
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7519
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7524
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7526
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7529
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7533
		{
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7542
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7550
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7556
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7565
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7577
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7624
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7643
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7653
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7666
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7793
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7801
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7844
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7848
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7853
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = tree.GrantTargetList{ExternalConnections: sqlDollar[3].union.nameList()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = tree.GrantTargetList{Functions: sqlDollar[2].union.functionObjs()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7889
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7893
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7904
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7912
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7921
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7963
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7964
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7965
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7966
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7972
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7973
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7974
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7975
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7986
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8014
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8027
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8059
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8061
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8067
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8075
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8078
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8093
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8114
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8134
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8142
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8178
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8193
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8221
		{

			sqlVAL.union.val = nil
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8227
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.str = ""
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8237
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8243
		{
			sqlVAL.union.val = nil
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8260
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8264
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8290
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8300
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8313
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8327
		{
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8328
		{
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8329
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8368
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = sqlDollar[1].union.colTableDef()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8384
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8397
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8410
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8421
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8424
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8427
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8428
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.str = ""
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8532
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8566
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8633
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8661
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8673
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8718
		{

			sqlVAL.union.val = true
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = false
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8728
		{
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8732
		{
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8735
		{
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             "",
				Columns:          sqlDollar[3].union.idxElems(),
				Sharded:          sqlDollar[5].union.shardedIndexDef(),
				Storing:          sqlDollar[6].union.nameList(),
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				NotVisible:       sqlDollar[11].union.bool(),
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					NotVisible:       sqlDollar[12].union.bool(),
				},
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             "",
				Columns:          sqlDollar[4].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[6].union.partitionByIndex(),
				StorageParams:    sqlDollar[7].union.storageParams(),
				Predicate:        sqlDollar[8].union.expr(),
				NotVisible:       sqlDollar[9].union.bool(),
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8792
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8848
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8860
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8871
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8878
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8888
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8898
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8913
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8920
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8938
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8942
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8964
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8981
		{
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8982
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8983
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8984
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8985
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8986
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9036
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9040
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9068
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9103
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9109
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9117
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9153
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9162
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9170
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9181
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9199
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9209
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9211
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9213
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9215
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9218
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9221
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9223
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9225
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9226
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9228
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9231
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9242
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9246
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9273
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9307
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.str = ""
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9327
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = true
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9350
		{

			sqlVAL.union.val = true
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = false
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9367
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9381
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9393
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9405
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9416
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9427
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = false
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9435
		{
			sqlVAL.union.val = true
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = true
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9517
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9521
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9525
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9529
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9533
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = nil
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9574
		{
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9575
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9600
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9602
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9604
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9606
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9608
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9610
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9628
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:9645
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[17].union.bool(),
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:9663
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[20].union.bool(),
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9682
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[16].union.bool(),
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9699
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[19].union.bool(),
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9716
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9720
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = false
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = true
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = false
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = true
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = false
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9774
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9780
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9786
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9794
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.str = ""
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.str = ""
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9821
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = true
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = false
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = false
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9861
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9867
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9957
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10046
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10092
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10098
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10110
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10116
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10130
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10136
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10195
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10199
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = true
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = false
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10259
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.str = ""
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10294
		{
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10295
		{
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10298
		{
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10299
		{
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10310
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10328
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10337
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10358
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10366
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10387
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10395
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10406
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10410
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10411
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10412
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10431
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10444
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10453
		{
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10454
		{
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10455
		{
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10472
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10478
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10479
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10486
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10493
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10497
		{
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10498
		{
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10526
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10539
		{
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10541
		{
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10545
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[15].str),
			}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				SecondaryRegion: tree.Name(sqlDollar[17].str),
			}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10637
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.str = ""
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10647
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.str = ""
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10672
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10677
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10684
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10688
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10694
		{

		}
	case 1806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10705
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10709
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10724
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.str = ""
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10738
		{
			sqlVAL.str = ""
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.str = ""
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.str = ""
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10764
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10789
		{
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10790
		{
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10819
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10837
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10841
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10850
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10855
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10899
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10903
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10927
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10934
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10944
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10953
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10982
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11014
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11029
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11035
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11050
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11154
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11162
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11168
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11180
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11184
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11194
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11229
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11230
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11231
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11292
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11296
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11329
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11336
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11352
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11357
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11373
		{
			sqlVAL.union.val = true
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11377
		{
			sqlVAL.union.val = false
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11393
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11405
		{
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11406
		{
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = nil
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11419
		{
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11420
		{
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = true
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = false
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = false
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = true
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11449
		{
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11450
		{
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11453
		{
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11454
		{
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11474
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11478
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11495
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11507
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11512
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11538
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11571
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11589
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11604
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11626
		{
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11627
		{
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11630
		{
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11631
		{
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11652
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11657
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11658
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11665
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11666
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11667
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11697
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11699
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11714
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11726
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11736
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11741
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11746
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11767
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11778
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11783
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11790
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11795
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11814
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11856
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11866
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11901
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11912
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11936
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11942
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11979
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = tree.ColumnDefList{tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), tree.ColumnDef{Name: tree.Name(sqlDollar[3].str)})
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12000
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12006
		{
			sqlVAL.union.val = tree.ColumnDefList{sqlDollar[1].union.colDef()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12010
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), sqlDollar[3].union.colDef())
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str), Type: sqlDollar[2].union.typeReference()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = nil
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12026
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12027
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12035
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12041
		{
			sqlVAL.union.val = true
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12045
		{
			sqlVAL.union.val = false
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12065
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12069
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12073
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12077
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12081
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12119
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12125
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12132
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.str = tree.AstFull
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.str = tree.AstLeft
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.str = tree.AstRight
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.str = tree.AstInner
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12156
		{
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12157
		{
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12181
		{
			sqlVAL.str = tree.AstHash
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.str = tree.AstMerge
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.str = tree.AstLookup
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.str = tree.AstInverted
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12197
		{
			sqlVAL.str = ""
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12226
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12231
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12239
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: sqlDollar[2].union.unresolvedObjectName(), Star: false}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12243
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: nil, Star: true}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12257
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12261
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12267
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12273
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12283
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = true
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12297
		{
			sqlVAL.union.val = false
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12303
		{
			sqlVAL.union.val = true
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12307
		{
			sqlVAL.union.val = false
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12313
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12320
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12332
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12345
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12353
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12354
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12364
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12371
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12372
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12374
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12382
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12383
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12395
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12402
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12411
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12451
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12456
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12461
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12462
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12465
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12467
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12468
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12469
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12471
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12472
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12473
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12474
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12475
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12476
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12477
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12478
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12479
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12480
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12481
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12482
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12483
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12484
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12485
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12487
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12488
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12489
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12491
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12492
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12494
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12495
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12496
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12499
		{
			sqlVAL.union.val = types.Geography
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12500
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12501
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12503
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12507
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12511
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12519
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12547
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12555
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12563
		{
			sqlVAL.union.val = nil
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12570
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12574
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12578
		{
			sqlVAL.union.val = types.Int2
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12582
		{
			sqlVAL.union.val = types.Int
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12586
		{
			sqlVAL.union.val = types.Float4
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12590
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12594
		{
			sqlVAL.union.val = types.Float
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12598
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12606
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12614
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12622
		{
			sqlVAL.union.val = types.Bool
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12628
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12641
		{
			sqlVAL.union.val = types.Float
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12647
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12653
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12661
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12665
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12669
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12675
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12687
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12693
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12697
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12701
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12705
		{
			sqlVAL.union.val = types.String
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12714
		{
			sqlVAL.union.val = true
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12715
		{
			sqlVAL.union.val = false
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12720
		{
			sqlVAL.union.val = types.Date
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12724
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12732
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12744
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12746
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12755
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12763
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12776
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12780
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12790
		{
			sqlVAL.union.val = true
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12791
		{
			sqlVAL.union.val = false
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12792
		{
			sqlVAL.union.val = false
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12796
		{
			sqlVAL.union.val = types.Interval
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12800
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12804
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12815
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12823
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12831
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12839
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12847
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12855
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12861
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12870
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12879
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12888
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12894
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12903
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12909
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12919
		{
			sqlVAL.union.val = nil
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12925
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12933
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12970
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12974
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12978
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12982
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12993
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12998
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13002
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13006
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13010
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13014
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13018
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13022
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13026
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13030
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13034
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13038
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13042
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13046
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13050
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13054
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13058
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13062
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13066
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13070
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13074
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13078
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13082
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13086
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13090
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13094
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13098
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13102
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13106
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13110
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13114
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13118
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13122
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13126
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13130
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13134
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13138
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13142
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13150
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13160
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13164
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13168
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13172
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13176
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13180
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13184
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13188
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13192
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13196
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13200
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13204
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13208
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13212
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13216
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13220
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13224
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13228
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13232
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13236
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13240
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13248
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13256
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13260
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13264
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13268
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13272
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13285
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13289
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13293
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13297
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13301
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13305
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13309
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13313
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13317
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13321
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13325
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13329
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13333
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13337
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13341
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13345
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13349
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13366
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13371
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13383
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13387
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13391
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13395
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13399
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13403
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13407
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13411
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13415
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13419
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13423
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13427
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13431
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13435
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13439
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13443
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13447
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13451
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13455
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13459
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13463
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13467
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13471
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13475
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13479
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13487
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13497
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13501
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13505
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13509
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13523
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13531
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13567
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13571
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13575
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13579
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13583
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13588
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13590
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13594
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13598
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13602
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13606
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13610
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13614
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13623
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13630
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13634
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13638
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13648
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13653
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13657
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13661
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13665
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13669
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13672
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13676
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13680
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13683
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13684
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13686
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13692
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13696
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13699
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13708
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							un, err := name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
							typ = &un
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13761
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13774
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13786
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13795
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13796
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13801
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13805
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13809
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13815
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13819
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13823
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13827
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13831
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13835
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13841
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13845
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13849
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13853
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13857
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13861
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13865
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13869
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13873
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13877
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13881
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13885
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13889
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13896
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13899
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13901
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13904
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13906
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13910
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13913
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13915
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13919
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13922
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13924
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13928
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13931
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13933
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13937
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13940
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13942
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13945
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13947
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13950
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13952
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13955
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13957
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13960
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13962
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13965
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13967
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13971
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13974
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13975
		{
			return unimplemented(sqllex, "treat")
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13977
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13981
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13985
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13989
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13993
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13996
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13998
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14001
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14007
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14011
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14017
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14021
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14028
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14032
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14038
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14042
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14048
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14056
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14060
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14064
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14071
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14091
		{
			sqlVAL.str = ""
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14097
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14101
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14107
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14115
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14123
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14131
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14137
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14150
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14178
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14182
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14186
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14190
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14197
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14206
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14210
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14214
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14218
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14223
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14236
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14240
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14247
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14259
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14263
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14267
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14283
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14284
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14285
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14286
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14287
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14288
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14289
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14290
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14291
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14292
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14293
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14294
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14296
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14297
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14298
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14299
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14300
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14301
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14302
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14303
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14304
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14305
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14306
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14307
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14308
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14309
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14310
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14311
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14312
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14313
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14314
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14315
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14316
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14317
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14318
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14323
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14339
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14346
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14347
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14348
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14349
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14372
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14376
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14382
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14386
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14390
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14401
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14405
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14411
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14415
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14422
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14428
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14432
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14438
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14442
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14448
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14452
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14458
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14462
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14468
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14472
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14495
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14499
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14503
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14509
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14516
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14520
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14537
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14541
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14545
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14549
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14553
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14559
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14565
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14571
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14575
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14579
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14585
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2570:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14597
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14604
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14608
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14614
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14620
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14624
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14631
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14637
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14641
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14648
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14654
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14658
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14663
		{
		}
	case 2585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14664
		{
		}
	case 2586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14668
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14672
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14678
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14687
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14691
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14695
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14707
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14711
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14717
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14721
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14740
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14748
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14771
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14780
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14784
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14788
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14792
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14798
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14802
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14817
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14821
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14833
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14837
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14846
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14857
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14866
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14874
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2622:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14891
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14976
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14984
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14988
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14994
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14998
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15004
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15010
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15017
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15044
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15051
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15055
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2660:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15059
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2662:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15073
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15077
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15081
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15094
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15099
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15107
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15125
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15138
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2674:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15145
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15170
		{
			sqlVAL.str = ""
		}
	case 2683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15176
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2684:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15180
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
