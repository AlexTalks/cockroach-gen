// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:76

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) regionAffinity() tree.RegionalAffinity {
	return u.val.(tree.RegionalAffinity)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:713
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12455

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1420,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	253, 368,
	-2, 0,
	-1, 73,
	235, 221,
	495, 221,
	-2, 0,
	-1, 84,
	223, 1186,
	237, 1186,
	253, 364,
	379, 364,
	389, 966,
	424, 364,
	436, 966,
	479, 966,
	506, 364,
	532, 966,
	-2, 0,
	-1, 90,
	130, 1420,
	230, 1420,
	517, 1420,
	518, 1420,
	-2, 0,
	-1, 106,
	147, 1391,
	166, 1391,
	179, 1391,
	233, 1391,
	266, 1391,
	331, 1391,
	341, 1391,
	512, 1391,
	-2, 1362,
	-1, 144,
	155, 836,
	252, 836,
	382, 805,
	441, 805,
	498, 836,
	500, 805,
	-2, 0,
	-1, 146,
	4, 1422,
	21, 1422,
	22, 1422,
	23, 1422,
	24, 1422,
	25, 1422,
	26, 1422,
	27, 1422,
	28, 1422,
	30, 1422,
	31, 1422,
	37, 1422,
	42, 1422,
	43, 1422,
	45, 1422,
	46, 1422,
	47, 1422,
	48, 1422,
	49, 1422,
	50, 1422,
	51, 1422,
	53, 1422,
	54, 1422,
	55, 1422,
	56, 1422,
	58, 1422,
	59, 1422,
	60, 1422,
	61, 1422,
	62, 1422,
	63, 1422,
	64, 1422,
	68, 1422,
	69, 1422,
	70, 1422,
	71, 1422,
	73, 1422,
	74, 1422,
	75, 1422,
	79, 1422,
	80, 1422,
	81, 1422,
	82, 1422,
	83, 1422,
	84, 1422,
	85, 1422,
	88, 1422,
	89, 1422,
	90, 1422,
	91, 1422,
	92, 1422,
	94, 1422,
	96, 1422,
	97, 1422,
	98, 1422,
	99, 1422,
	100, 1422,
	101, 1422,
	103, 1422,
	104, 1422,
	105, 1422,
	107, 1422,
	108, 1422,
	116, 1422,
	117, 1422,
	118, 1422,
	119, 1422,
	121, 1422,
	122, 1422,
	123, 1422,
	125, 1422,
	126, 1422,
	127, 1422,
	129, 1422,
	130, 1422,
	132, 1422,
	133, 1422,
	134, 1422,
	137, 1422,
	138, 1422,
	139, 1422,
	141, 1422,
	142, 1422,
	144, 1422,
	145, 1422,
	146, 1422,
	148, 1422,
	149, 1422,
	150, 1422,
	151, 1422,
	152, 1422,
	153, 1422,
	154, 1422,
	155, 1422,
	156, 1422,
	157, 1422,
	158, 1422,
	159, 1422,
	160, 1422,
	161, 1422,
	162, 1422,
	163, 1422,
	165, 1422,
	171, 1422,
	172, 1422,
	173, 1422,
	174, 1422,
	178, 1422,
	180, 1422,
	184, 1422,
	185, 1422,
	186, 1422,
	187, 1422,
	188, 1422,
	189, 1422,
	190, 1422,
	191, 1422,
	192, 1422,
	193, 1422,
	194, 1422,
	195, 1422,
	197, 1422,
	198, 1422,
	200, 1422,
	201, 1422,
	203, 1422,
	204, 1422,
	205, 1422,
	206, 1422,
	207, 1422,
	208, 1422,
	209, 1422,
	210, 1422,
	211, 1422,
	213, 1422,
	214, 1422,
	216, 1422,
	217, 1422,
	218, 1422,
	219, 1422,
	223, 1422,
	224, 1422,
	225, 1422,
	226, 1422,
	227, 1422,
	230, 1422,
	231, 1422,
	232, 1422,
	234, 1422,
	236, 1422,
	237, 1422,
	239, 1422,
	241, 1422,
	242, 1422,
	243, 1422,
	245, 1422,
	249, 1422,
	250, 1422,
	251, 1422,
	252, 1422,
	253, 1422,
	254, 1422,
	256, 1422,
	257, 1422,
	258, 1422,
	260, 1422,
	261, 1422,
	263, 1422,
	264, 1422,
	267, 1422,
	271, 1422,
	272, 1422,
	273, 1422,
	276, 1422,
	277, 1422,
	278, 1422,
	279, 1422,
	281, 1422,
	282, 1422,
	283, 1422,
	284, 1422,
	285, 1422,
	286, 1422,
	287, 1422,
	288, 1422,
	289, 1422,
	290, 1422,
	291, 1422,
	292, 1422,
	293, 1422,
	294, 1422,
	295, 1422,
	296, 1422,
	297, 1422,
	298, 1422,
	299, 1422,
	300, 1422,
	301, 1422,
	302, 1422,
	304, 1422,
	306, 1422,
	307, 1422,
	308, 1422,
	309, 1422,
	310, 1422,
	311, 1422,
	312, 1422,
	313, 1422,
	314, 1422,
	315, 1422,
	316, 1422,
	317, 1422,
	319, 1422,
	321, 1422,
	323, 1422,
	324, 1422,
	326, 1422,
	327, 1422,
	328, 1422,
	329, 1422,
	330, 1422,
	333, 1422,
	336, 1422,
	337, 1422,
	338, 1422,
	339, 1422,
	342, 1422,
	343, 1422,
	344, 1422,
	346, 1422,
	348, 1422,
	349, 1422,
	350, 1422,
	351, 1422,
	352, 1422,
	353, 1422,
	354, 1422,
	355, 1422,
	356, 1422,
	357, 1422,
	358, 1422,
	359, 1422,
	361, 1422,
	362, 1422,
	363, 1422,
	364, 1422,
	365, 1422,
	366, 1422,
	367, 1422,
	368, 1422,
	369, 1422,
	370, 1422,
	371, 1422,
	372, 1422,
	373, 1422,
	374, 1422,
	375, 1422,
	377, 1422,
	378, 1422,
	380, 1422,
	381, 1422,
	382, 1422,
	383, 1422,
	384, 1422,
	385, 1422,
	386, 1422,
	387, 1422,
	388, 1422,
	389, 1422,
	390, 1422,
	391, 1422,
	393, 1422,
	395, 1422,
	396, 1422,
	397, 1422,
	402, 1422,
	404, 1422,
	405, 1422,
	406, 1422,
	407, 1422,
	408, 1422,
	409, 1422,
	410, 1422,
	411, 1422,
	413, 1422,
	414, 1422,
	415, 1422,
	417, 1422,
	418, 1422,
	419, 1422,
	420, 1422,
	421, 1422,
	422, 1422,
	424, 1422,
	425, 1422,
	426, 1422,
	427, 1422,
	428, 1422,
	429, 1422,
	430, 1422,
	431, 1422,
	432, 1422,
	433, 1422,
	434, 1422,
	436, 1422,
	437, 1422,
	438, 1422,
	439, 1422,
	440, 1422,
	441, 1422,
	443, 1422,
	444, 1422,
	445, 1422,
	446, 1422,
	447, 1422,
	448, 1422,
	450, 1422,
	451, 1422,
	452, 1422,
	453, 1422,
	454, 1422,
	455, 1422,
	456, 1422,
	458, 1422,
	460, 1422,
	461, 1422,
	462, 1422,
	463, 1422,
	464, 1422,
	465, 1422,
	466, 1422,
	467, 1422,
	468, 1422,
	469, 1422,
	470, 1422,
	471, 1422,
	472, 1422,
	473, 1422,
	475, 1422,
	476, 1422,
	478, 1422,
	480, 1422,
	481, 1422,
	482, 1422,
	483, 1422,
	484, 1422,
	485, 1422,
	486, 1422,
	487, 1422,
	488, 1422,
	490, 1422,
	491, 1422,
	492, 1422,
	493, 1422,
	494, 1422,
	496, 1422,
	498, 1422,
	499, 1422,
	500, 1422,
	501, 1422,
	502, 1422,
	503, 1422,
	505, 1422,
	506, 1422,
	507, 1422,
	508, 1422,
	510, 1422,
	511, 1422,
	514, 1422,
	515, 1422,
	516, 1422,
	517, 1422,
	518, 1422,
	519, 1422,
	520, 1422,
	522, 1422,
	525, 1422,
	526, 1422,
	527, 1422,
	528, 1422,
	529, 1422,
	530, 1422,
	532, 1422,
	533, 1422,
	534, 1422,
	535, 1422,
	540, 1422,
	541, 1422,
	542, 1422,
	543, 1422,
	544, 1422,
	545, 1422,
	-2, 0,
	-1, 147,
	1, 1278,
	128, 1278,
	241, 1278,
	320, 1278,
	377, 1278,
	386, 1278,
	549, 1278,
	573, 1278,
	-2, 0,
	-1, 149,
	1, 1278,
	573, 1278,
	-2, 0,
	-1, 150,
	1, 1278,
	573, 1278,
	-2, 0,
	-1, 151,
	1, 1278,
	495, 1278,
	573, 1278,
	-2, 0,
	-1, 180,
	147, 1390,
	166, 1390,
	179, 1390,
	233, 1390,
	266, 1390,
	331, 1390,
	341, 1390,
	512, 1390,
	-2, 1365,
	-1, 223,
	4, 1429,
	5, 1429,
	6, 1429,
	7, 1429,
	8, 1429,
	9, 1429,
	10, 1429,
	21, 1429,
	22, 1429,
	23, 1429,
	24, 1429,
	25, 1429,
	26, 1429,
	27, 1429,
	28, 1429,
	30, 1429,
	31, 1429,
	37, 1429,
	38, 1429,
	42, 1429,
	43, 1429,
	44, 1429,
	45, 1429,
	46, 1429,
	47, 1429,
	48, 1429,
	49, 1429,
	50, 1429,
	51, 1429,
	53, 1429,
	54, 1429,
	55, 1429,
	56, 1429,
	58, 1429,
	59, 1429,
	60, 1429,
	61, 1429,
	62, 1429,
	63, 1429,
	64, 1429,
	65, 1429,
	66, 1429,
	67, 1429,
	68, 1429,
	69, 1429,
	70, 1429,
	71, 1429,
	73, 1429,
	74, 1429,
	75, 1429,
	77, 1429,
	79, 1429,
	80, 1429,
	81, 1429,
	82, 1429,
	83, 1429,
	84, 1429,
	85, 1429,
	88, 1429,
	89, 1429,
	90, 1429,
	91, 1429,
	92, 1429,
	94, 1429,
	96, 1429,
	97, 1429,
	98, 1429,
	99, 1429,
	100, 1429,
	101, 1429,
	103, 1429,
	104, 1429,
	105, 1429,
	106, 1429,
	107, 1429,
	108, 1429,
	109, 1429,
	110, 1429,
	111, 1429,
	112, 1429,
	113, 1429,
	114, 1429,
	115, 1429,
	116, 1429,
	117, 1429,
	118, 1429,
	119, 1429,
	120, 1429,
	121, 1429,
	122, 1429,
	123, 1429,
	124, 1429,
	125, 1429,
	126, 1429,
	127, 1429,
	129, 1429,
	130, 1429,
	132, 1429,
	133, 1429,
	134, 1429,
	137, 1429,
	138, 1429,
	139, 1429,
	141, 1429,
	142, 1429,
	144, 1429,
	145, 1429,
	146, 1429,
	148, 1429,
	149, 1429,
	150, 1429,
	151, 1429,
	152, 1429,
	153, 1429,
	154, 1429,
	155, 1429,
	156, 1429,
	157, 1429,
	158, 1429,
	159, 1429,
	160, 1429,
	161, 1429,
	162, 1429,
	163, 1429,
	164, 1429,
	165, 1429,
	171, 1429,
	172, 1429,
	173, 1429,
	174, 1429,
	178, 1429,
	180, 1429,
	183, 1429,
	184, 1429,
	185, 1429,
	186, 1429,
	187, 1429,
	188, 1429,
	189, 1429,
	190, 1429,
	191, 1429,
	192, 1429,
	193, 1429,
	194, 1429,
	195, 1429,
	197, 1429,
	198, 1429,
	200, 1429,
	201, 1429,
	203, 1429,
	204, 1429,
	205, 1429,
	206, 1429,
	207, 1429,
	208, 1429,
	209, 1429,
	210, 1429,
	211, 1429,
	212, 1429,
	213, 1429,
	214, 1429,
	216, 1429,
	217, 1429,
	218, 1429,
	219, 1429,
	223, 1429,
	224, 1429,
	225, 1429,
	226, 1429,
	227, 1429,
	229, 1429,
	230, 1429,
	231, 1429,
	232, 1429,
	234, 1429,
	236, 1429,
	237, 1429,
	238, 1429,
	239, 1429,
	240, 1429,
	241, 1429,
	242, 1429,
	243, 1429,
	244, 1429,
	245, 1429,
	249, 1429,
	250, 1429,
	251, 1429,
	252, 1429,
	253, 1429,
	254, 1429,
	256, 1429,
	257, 1429,
	258, 1429,
	260, 1429,
	261, 1429,
	262, 1429,
	263, 1429,
	264, 1429,
	265, 1429,
	267, 1429,
	271, 1429,
	272, 1429,
	273, 1429,
	274, 1429,
	275, 1429,
	276, 1429,
	277, 1429,
	278, 1429,
	279, 1429,
	281, 1429,
	282, 1429,
	283, 1429,
	284, 1429,
	285, 1429,
	286, 1429,
	287, 1429,
	288, 1429,
	289, 1429,
	290, 1429,
	291, 1429,
	292, 1429,
	293, 1429,
	294, 1429,
	295, 1429,
	296, 1429,
	297, 1429,
	298, 1429,
	299, 1429,
	300, 1429,
	301, 1429,
	302, 1429,
	304, 1429,
	305, 1429,
	306, 1429,
	307, 1429,
	308, 1429,
	309, 1429,
	310, 1429,
	311, 1429,
	312, 1429,
	313, 1429,
	314, 1429,
	315, 1429,
	316, 1429,
	317, 1429,
	318, 1429,
	319, 1429,
	320, 1429,
	321, 1429,
	322, 1429,
	323, 1429,
	324, 1429,
	325, 1429,
	326, 1429,
	327, 1429,
	328, 1429,
	329, 1429,
	330, 1429,
	333, 1429,
	337, 1429,
	338, 1429,
	339, 1429,
	342, 1429,
	343, 1429,
	344, 1429,
	345, 1429,
	346, 1429,
	347, 1429,
	348, 1429,
	349, 1429,
	350, 1429,
	351, 1429,
	352, 1429,
	353, 1429,
	354, 1429,
	355, 1429,
	356, 1429,
	357, 1429,
	358, 1429,
	359, 1429,
	361, 1429,
	362, 1429,
	363, 1429,
	364, 1429,
	365, 1429,
	366, 1429,
	367, 1429,
	368, 1429,
	369, 1429,
	370, 1429,
	371, 1429,
	372, 1429,
	373, 1429,
	374, 1429,
	375, 1429,
	377, 1429,
	378, 1429,
	380, 1429,
	381, 1429,
	382, 1429,
	383, 1429,
	384, 1429,
	385, 1429,
	386, 1429,
	387, 1429,
	388, 1429,
	389, 1429,
	390, 1429,
	391, 1429,
	393, 1429,
	395, 1429,
	396, 1429,
	397, 1429,
	402, 1429,
	404, 1429,
	405, 1429,
	406, 1429,
	407, 1429,
	408, 1429,
	409, 1429,
	410, 1429,
	411, 1429,
	413, 1429,
	414, 1429,
	415, 1429,
	416, 1429,
	417, 1429,
	418, 1429,
	419, 1429,
	420, 1429,
	421, 1429,
	422, 1429,
	424, 1429,
	425, 1429,
	426, 1429,
	427, 1429,
	428, 1429,
	429, 1429,
	430, 1429,
	431, 1429,
	432, 1429,
	433, 1429,
	434, 1429,
	436, 1429,
	437, 1429,
	438, 1429,
	439, 1429,
	440, 1429,
	441, 1429,
	442, 1429,
	443, 1429,
	444, 1429,
	445, 1429,
	446, 1429,
	447, 1429,
	448, 1429,
	449, 1429,
	450, 1429,
	451, 1429,
	452, 1429,
	453, 1429,
	454, 1429,
	455, 1429,
	456, 1429,
	458, 1429,
	460, 1429,
	461, 1429,
	462, 1429,
	463, 1429,
	464, 1429,
	465, 1429,
	466, 1429,
	467, 1429,
	468, 1429,
	469, 1429,
	470, 1429,
	471, 1429,
	472, 1429,
	473, 1429,
	475, 1429,
	476, 1429,
	477, 1429,
	478, 1429,
	480, 1429,
	481, 1429,
	482, 1429,
	483, 1429,
	484, 1429,
	485, 1429,
	486, 1429,
	487, 1429,
	488, 1429,
	490, 1429,
	491, 1429,
	492, 1429,
	493, 1429,
	494, 1429,
	496, 1429,
	498, 1429,
	499, 1429,
	500, 1429,
	501, 1429,
	502, 1429,
	503, 1429,
	504, 1429,
	505, 1429,
	506, 1429,
	507, 1429,
	508, 1429,
	510, 1429,
	511, 1429,
	513, 1429,
	514, 1429,
	515, 1429,
	516, 1429,
	517, 1429,
	518, 1429,
	519, 1429,
	520, 1429,
	521, 1429,
	522, 1429,
	525, 1429,
	526, 1429,
	527, 1429,
	528, 1429,
	529, 1429,
	530, 1429,
	532, 1429,
	533, 1429,
	534, 1429,
	535, 1429,
	540, 1429,
	541, 1429,
	542, 1429,
	543, 1429,
	544, 1429,
	545, 1429,
	546, 1429,
	554, 1429,
	561, 1429,
	562, 1429,
	563, 1429,
	570, 1429,
	574, 1429,
	-2, 0,
	-1, 708,
	4, 1184,
	21, 1184,
	22, 1184,
	23, 1184,
	24, 1184,
	25, 1184,
	26, 1184,
	27, 1184,
	28, 1184,
	30, 1184,
	31, 1184,
	37, 1184,
	42, 1184,
	43, 1184,
	45, 1184,
	46, 1184,
	47, 1184,
	48, 1184,
	49, 1184,
	50, 1184,
	51, 1184,
	53, 1184,
	54, 1184,
	55, 1184,
	56, 1184,
	58, 1184,
	59, 1184,
	60, 1184,
	61, 1184,
	62, 1184,
	63, 1184,
	64, 1184,
	68, 1184,
	69, 1184,
	70, 1184,
	71, 1184,
	73, 1184,
	74, 1184,
	75, 1184,
	79, 1184,
	80, 1184,
	81, 1184,
	82, 1184,
	83, 1184,
	84, 1184,
	85, 1184,
	88, 1184,
	89, 1184,
	90, 1184,
	91, 1184,
	92, 1184,
	94, 1184,
	96, 1184,
	97, 1184,
	98, 1184,
	99, 1184,
	100, 1184,
	101, 1184,
	103, 1184,
	104, 1184,
	105, 1184,
	107, 1184,
	108, 1184,
	116, 1184,
	117, 1184,
	118, 1184,
	119, 1184,
	121, 1184,
	122, 1184,
	123, 1184,
	125, 1184,
	126, 1184,
	127, 1184,
	129, 1184,
	130, 1184,
	132, 1184,
	133, 1184,
	134, 1184,
	137, 1184,
	138, 1184,
	139, 1184,
	141, 1184,
	142, 1184,
	144, 1184,
	145, 1184,
	146, 1184,
	148, 1184,
	149, 1184,
	150, 1184,
	151, 1184,
	152, 1184,
	153, 1184,
	154, 1184,
	155, 1184,
	156, 1184,
	157, 1184,
	158, 1184,
	159, 1184,
	160, 1184,
	161, 1184,
	162, 1184,
	163, 1184,
	165, 1184,
	171, 1184,
	172, 1184,
	173, 1184,
	174, 1184,
	178, 1184,
	180, 1184,
	184, 1184,
	185, 1184,
	186, 1184,
	187, 1184,
	188, 1184,
	189, 1184,
	190, 1184,
	191, 1184,
	192, 1184,
	193, 1184,
	194, 1184,
	195, 1184,
	197, 1184,
	198, 1184,
	200, 1184,
	201, 1184,
	203, 1184,
	204, 1184,
	205, 1184,
	206, 1184,
	207, 1184,
	208, 1184,
	209, 1184,
	210, 1184,
	211, 1184,
	213, 1184,
	214, 1184,
	216, 1184,
	217, 1184,
	218, 1184,
	219, 1184,
	223, 1184,
	224, 1184,
	225, 1184,
	226, 1184,
	227, 1184,
	230, 1184,
	231, 1184,
	232, 1184,
	234, 1184,
	236, 1184,
	237, 1184,
	239, 1184,
	241, 1184,
	242, 1184,
	243, 1184,
	245, 1184,
	249, 1184,
	250, 1184,
	251, 1184,
	252, 1184,
	253, 1184,
	254, 1184,
	256, 1184,
	257, 1184,
	258, 1184,
	260, 1184,
	261, 1184,
	263, 1184,
	264, 1184,
	267, 1184,
	271, 1184,
	272, 1184,
	273, 1184,
	276, 1184,
	277, 1184,
	278, 1184,
	279, 1184,
	281, 1184,
	282, 1184,
	283, 1184,
	284, 1184,
	285, 1184,
	286, 1184,
	287, 1184,
	288, 1184,
	289, 1184,
	290, 1184,
	291, 1184,
	292, 1184,
	293, 1184,
	294, 1184,
	295, 1184,
	296, 1184,
	297, 1184,
	298, 1184,
	299, 1184,
	300, 1184,
	301, 1184,
	302, 1184,
	304, 1184,
	306, 1184,
	307, 1184,
	308, 1184,
	309, 1184,
	310, 1184,
	311, 1184,
	312, 1184,
	313, 1184,
	314, 1184,
	315, 1184,
	316, 1184,
	317, 1184,
	319, 1184,
	321, 1184,
	323, 1184,
	324, 1184,
	326, 1184,
	327, 1184,
	328, 1184,
	329, 1184,
	330, 1184,
	333, 1184,
	337, 1184,
	338, 1184,
	339, 1184,
	342, 1184,
	343, 1184,
	344, 1184,
	346, 1184,
	348, 1184,
	349, 1184,
	350, 1184,
	351, 1184,
	352, 1184,
	353, 1184,
	354, 1184,
	355, 1184,
	356, 1184,
	357, 1184,
	358, 1184,
	359, 1184,
	361, 1184,
	362, 1184,
	363, 1184,
	364, 1184,
	365, 1184,
	366, 1184,
	367, 1184,
	368, 1184,
	369, 1184,
	370, 1184,
	371, 1184,
	372, 1184,
	373, 1184,
	374, 1184,
	375, 1184,
	377, 1184,
	378, 1184,
	380, 1184,
	381, 1184,
	382, 1184,
	383, 1184,
	384, 1184,
	385, 1184,
	386, 1184,
	387, 1184,
	388, 1184,
	389, 1184,
	390, 1184,
	391, 1184,
	393, 1184,
	395, 1184,
	396, 1184,
	397, 1184,
	402, 1184,
	404, 1184,
	405, 1184,
	406, 1184,
	407, 1184,
	408, 1184,
	409, 1184,
	410, 1184,
	411, 1184,
	413, 1184,
	414, 1184,
	415, 1184,
	417, 1184,
	418, 1184,
	419, 1184,
	420, 1184,
	421, 1184,
	422, 1184,
	424, 1184,
	425, 1184,
	426, 1184,
	427, 1184,
	428, 1184,
	429, 1184,
	430, 1184,
	431, 1184,
	432, 1184,
	433, 1184,
	434, 1184,
	436, 1184,
	437, 1184,
	438, 1184,
	439, 1184,
	440, 1184,
	441, 1184,
	443, 1184,
	444, 1184,
	445, 1184,
	446, 1184,
	447, 1184,
	448, 1184,
	450, 1184,
	451, 1184,
	452, 1184,
	453, 1184,
	454, 1184,
	455, 1184,
	456, 1184,
	458, 1184,
	460, 1184,
	461, 1184,
	462, 1184,
	463, 1184,
	464, 1184,
	465, 1184,
	466, 1184,
	467, 1184,
	468, 1184,
	469, 1184,
	470, 1184,
	471, 1184,
	472, 1184,
	473, 1184,
	475, 1184,
	476, 1184,
	478, 1184,
	480, 1184,
	481, 1184,
	482, 1184,
	483, 1184,
	484, 1184,
	485, 1184,
	486, 1184,
	487, 1184,
	488, 1184,
	490, 1184,
	491, 1184,
	492, 1184,
	493, 1184,
	494, 1184,
	496, 1184,
	498, 1184,
	499, 1184,
	500, 1184,
	501, 1184,
	502, 1184,
	503, 1184,
	505, 1184,
	506, 1184,
	507, 1184,
	508, 1184,
	510, 1184,
	511, 1184,
	514, 1184,
	515, 1184,
	516, 1184,
	517, 1184,
	518, 1184,
	519, 1184,
	520, 1184,
	522, 1184,
	525, 1184,
	526, 1184,
	527, 1184,
	528, 1184,
	529, 1184,
	530, 1184,
	532, 1184,
	533, 1184,
	534, 1184,
	535, 1184,
	540, 1184,
	541, 1184,
	542, 1184,
	543, 1184,
	544, 1184,
	545, 1184,
	-2, 0,
	-1, 727,
	182, 2186,
	495, 2186,
	553, 2186,
	572, 2186,
	-2, 0,
	-1, 728,
	182, 2286,
	495, 2286,
	553, 2286,
	572, 2286,
	-2, 0,
	-1, 729,
	182, 2173,
	495, 2173,
	553, 2173,
	572, 2173,
	-2, 0,
	-1, 731,
	182, 2415,
	495, 2415,
	553, 2415,
	572, 2415,
	-2, 0,
	-1, 733,
	182, 2452,
	495, 2452,
	553, 2452,
	572, 2452,
	-2, 0,
	-1, 740,
	182, 2313,
	495, 2313,
	553, 2313,
	572, 2313,
	-2, 642,
	-1, 769,
	572, 2122,
	575, 2122,
	-2, 899,
	-1, 770,
	572, 2124,
	575, 2124,
	-2, 900,
	-1, 771,
	572, 2123,
	575, 2123,
	-2, 901,
	-1, 772,
	575, 2049,
	-2, 902,
	-1, 795,
	179, 235,
	-2, 0,
	-1, 818,
	44, 2096,
	-2, 0,
	-1, 819,
	532, 1163,
	-2, 967,
	-1, 835,
	4, 1558,
	21, 1558,
	22, 1558,
	23, 1558,
	24, 1558,
	25, 1558,
	26, 1558,
	27, 1558,
	28, 1558,
	30, 1558,
	31, 1558,
	37, 1558,
	42, 1558,
	43, 1558,
	45, 1558,
	46, 1558,
	47, 1558,
	48, 1558,
	49, 1558,
	50, 1558,
	51, 1558,
	53, 1558,
	54, 1558,
	55, 1558,
	56, 1558,
	58, 1558,
	59, 1558,
	60, 1558,
	61, 1558,
	62, 1558,
	63, 1558,
	64, 1558,
	68, 1558,
	69, 1558,
	70, 1558,
	71, 1558,
	73, 1558,
	74, 1558,
	75, 1558,
	79, 1558,
	80, 1558,
	81, 1558,
	82, 1558,
	83, 1558,
	84, 1558,
	85, 1558,
	88, 1558,
	89, 1558,
	90, 1558,
	91, 1558,
	92, 1558,
	94, 1558,
	96, 1558,
	97, 1558,
	98, 1558,
	99, 1558,
	100, 1558,
	101, 1558,
	103, 1558,
	104, 1558,
	105, 1558,
	107, 1558,
	108, 1558,
	116, 1558,
	117, 1558,
	118, 1558,
	119, 1558,
	121, 1558,
	122, 1558,
	123, 1558,
	125, 1558,
	126, 1558,
	127, 1558,
	129, 1558,
	130, 1558,
	132, 1558,
	133, 1558,
	134, 1558,
	137, 1558,
	138, 1558,
	139, 1558,
	141, 1558,
	142, 1558,
	144, 1558,
	145, 1558,
	146, 1558,
	148, 1558,
	149, 1558,
	150, 1558,
	151, 1558,
	152, 1558,
	153, 1558,
	154, 1558,
	155, 1558,
	156, 1558,
	157, 1558,
	158, 1558,
	159, 1558,
	160, 1558,
	161, 1558,
	162, 1558,
	163, 1558,
	165, 1558,
	171, 1558,
	172, 1558,
	173, 1558,
	174, 1558,
	178, 1558,
	180, 1558,
	184, 1558,
	185, 1558,
	186, 1558,
	187, 1558,
	188, 1558,
	189, 1558,
	190, 1558,
	191, 1558,
	192, 1558,
	193, 1558,
	194, 1558,
	195, 1558,
	197, 1558,
	198, 1558,
	200, 1558,
	201, 1558,
	203, 1558,
	204, 1558,
	205, 1558,
	206, 1558,
	207, 1558,
	208, 1558,
	209, 1558,
	210, 1558,
	211, 1558,
	213, 1558,
	214, 1558,
	216, 1558,
	217, 1558,
	218, 1558,
	219, 1558,
	223, 1558,
	224, 1558,
	225, 1558,
	226, 1558,
	227, 1558,
	230, 1558,
	231, 1558,
	232, 1558,
	234, 1558,
	236, 1558,
	237, 1558,
	239, 1558,
	241, 1558,
	242, 1558,
	243, 1558,
	245, 1558,
	249, 1558,
	250, 1558,
	251, 1558,
	252, 1558,
	253, 1558,
	254, 1558,
	256, 1558,
	257, 1558,
	258, 1558,
	260, 1558,
	261, 1558,
	263, 1558,
	264, 1558,
	267, 1558,
	271, 1558,
	272, 1558,
	273, 1558,
	276, 1558,
	277, 1558,
	278, 1558,
	279, 1558,
	281, 1558,
	282, 1558,
	283, 1558,
	284, 1558,
	285, 1558,
	286, 1558,
	287, 1558,
	288, 1558,
	289, 1558,
	290, 1558,
	291, 1558,
	292, 1558,
	293, 1558,
	294, 1558,
	295, 1558,
	296, 1558,
	297, 1558,
	298, 1558,
	299, 1558,
	300, 1558,
	301, 1558,
	302, 1558,
	304, 1558,
	306, 1558,
	307, 1558,
	308, 1558,
	309, 1558,
	310, 1558,
	311, 1558,
	312, 1558,
	313, 1558,
	314, 1558,
	315, 1558,
	316, 1558,
	317, 1558,
	319, 1558,
	321, 1558,
	323, 1558,
	324, 1558,
	326, 1558,
	327, 1558,
	328, 1558,
	329, 1558,
	330, 1558,
	333, 1558,
	337, 1558,
	338, 1558,
	339, 1558,
	342, 1558,
	343, 1558,
	344, 1558,
	346, 1558,
	348, 1558,
	349, 1558,
	350, 1558,
	351, 1558,
	352, 1558,
	353, 1558,
	354, 1558,
	355, 1558,
	356, 1558,
	357, 1558,
	358, 1558,
	359, 1558,
	361, 1558,
	362, 1558,
	363, 1558,
	364, 1558,
	365, 1558,
	366, 1558,
	367, 1558,
	368, 1558,
	369, 1558,
	370, 1558,
	371, 1558,
	372, 1558,
	373, 1558,
	374, 1558,
	375, 1558,
	377, 1558,
	378, 1558,
	380, 1558,
	381, 1558,
	382, 1558,
	383, 1558,
	384, 1558,
	385, 1558,
	386, 1558,
	387, 1558,
	388, 1558,
	389, 1558,
	390, 1558,
	391, 1558,
	393, 1558,
	395, 1558,
	396, 1558,
	397, 1558,
	402, 1558,
	404, 1558,
	405, 1558,
	406, 1558,
	407, 1558,
	408, 1558,
	409, 1558,
	410, 1558,
	411, 1558,
	413, 1558,
	414, 1558,
	415, 1558,
	417, 1558,
	418, 1558,
	419, 1558,
	420, 1558,
	421, 1558,
	422, 1558,
	424, 1558,
	425, 1558,
	426, 1558,
	427, 1558,
	428, 1558,
	429, 1558,
	430, 1558,
	431, 1558,
	432, 1558,
	433, 1558,
	434, 1558,
	436, 1558,
	437, 1558,
	438, 1558,
	439, 1558,
	440, 1558,
	441, 1558,
	443, 1558,
	444, 1558,
	445, 1558,
	446, 1558,
	447, 1558,
	448, 1558,
	450, 1558,
	451, 1558,
	452, 1558,
	453, 1558,
	454, 1558,
	455, 1558,
	456, 1558,
	458, 1558,
	460, 1558,
	461, 1558,
	462, 1558,
	463, 1558,
	464, 1558,
	465, 1558,
	466, 1558,
	467, 1558,
	468, 1558,
	469, 1558,
	470, 1558,
	471, 1558,
	472, 1558,
	473, 1558,
	475, 1558,
	476, 1558,
	478, 1558,
	480, 1558,
	481, 1558,
	482, 1558,
	483, 1558,
	484, 1558,
	485, 1558,
	486, 1558,
	487, 1558,
	488, 1558,
	490, 1558,
	491, 1558,
	492, 1558,
	493, 1558,
	494, 1558,
	496, 1558,
	498, 1558,
	499, 1558,
	500, 1558,
	501, 1558,
	502, 1558,
	503, 1558,
	505, 1558,
	506, 1558,
	507, 1558,
	508, 1558,
	510, 1558,
	511, 1558,
	514, 1558,
	515, 1558,
	516, 1558,
	517, 1558,
	518, 1558,
	519, 1558,
	520, 1558,
	522, 1558,
	525, 1558,
	526, 1558,
	527, 1558,
	528, 1558,
	529, 1558,
	530, 1558,
	532, 1558,
	533, 1558,
	534, 1558,
	535, 1558,
	540, 1558,
	541, 1558,
	542, 1558,
	543, 1558,
	544, 1558,
	545, 1558,
	-2, 0,
	-1, 843,
	253, 368,
	-2, 0,
	-1, 913,
	382, 806,
	441, 806,
	500, 806,
	-2, 0,
	-1, 914,
	382, 805,
	441, 805,
	500, 805,
	-2, 745,
	-1, 918,
	1, 850,
	569, 850,
	571, 850,
	573, 850,
	-2, 0,
	-1, 919,
	1, 780,
	569, 780,
	571, 780,
	573, 780,
	-2, 0,
	-1, 920,
	1, 784,
	569, 784,
	571, 784,
	573, 784,
	-2, 0,
	-1, 921,
	1, 898,
	179, 898,
	569, 898,
	571, 898,
	573, 898,
	-2, 0,
	-1, 929,
	1, 809,
	569, 809,
	571, 809,
	573, 809,
	-2, 0,
	-1, 935,
	1, 850,
	569, 850,
	571, 850,
	573, 850,
	-2, 0,
	-1, 936,
	1, 852,
	569, 852,
	571, 852,
	573, 852,
	-2, 0,
	-1, 937,
	1, 855,
	569, 855,
	571, 855,
	573, 855,
	-2, 0,
	-1, 943,
	1, 872,
	569, 872,
	571, 872,
	573, 872,
	-2, 0,
	-1, 944,
	1, 874,
	569, 874,
	571, 874,
	573, 874,
	-2, 0,
	-1, 994,
	166, 1433,
	179, 1433,
	266, 1433,
	331, 1433,
	-2, 1369,
	-1, 1009,
	166, 1432,
	179, 1432,
	266, 1432,
	331, 1432,
	-2, 1366,
	-1, 1035,
	572, 2121,
	-2, 650,
	-1, 1063,
	5, 2113,
	570, 2111,
	-2, 2102,
	-1, 1071,
	5, 2134,
	570, 2131,
	-2, 2122,
	-1, 1072,
	5, 2135,
	570, 2132,
	-2, 2123,
	-1, 1080,
	572, 2119,
	-2, 2101,
	-1, 1081,
	570, 2534,
	-2, 2120,
	-1, 1104,
	570, 2533,
	-2, 2136,
	-1, 1105,
	5, 1633,
	-2, 2504,
	-1, 1106,
	5, 1634,
	-2, 2505,
	-1, 1107,
	5, 1635,
	-2, 2519,
	-1, 1108,
	5, 1636,
	-2, 2483,
	-1, 1109,
	5, 1637,
	-2, 2517,
	-1, 1110,
	5, 1645,
	-2, 2496,
	-1, 1111,
	5, 1632,
	-2, 2492,
	-1, 1112,
	5, 1632,
	-2, 2491,
	-1, 1113,
	5, 1632,
	-2, 2510,
	-1, 1114,
	5, 1643,
	-2, 2485,
	-1, 1115,
	5, 1648,
	-2, 2484,
	-1, 1116,
	5, 1650,
	-2, 2529,
	-1, 1119,
	5, 1672,
	-2, 2522,
	-1, 1120,
	5, 1664,
	-2, 2523,
	-1, 1121,
	5, 1672,
	-2, 2524,
	-1, 1122,
	5, 1668,
	-2, 2525,
	-1, 1123,
	5, 1618,
	-2, 2497,
	-1, 1124,
	5, 1619,
	-2, 2498,
	-1, 1125,
	5, 1620,
	-2, 2486,
	-1, 1153,
	5, 1655,
	-2, 2530,
	-1, 1154,
	5, 1656,
	-2, 2520,
	-1, 1155,
	5, 1657,
	533, 1657,
	-2, 2487,
	-1, 1156,
	5, 1658,
	533, 1658,
	-2, 2488,
	-1, 1193,
	570, 2131,
	-2, 2122,
	-1, 1194,
	570, 2132,
	-2, 2123,
	-1, 1293,
	182, 2452,
	495, 2452,
	553, 2452,
	572, 2452,
	-2, 0,
	-1, 1296,
	1, 628,
	573, 628,
	-2, 1286,
	-1, 1423,
	404, 2097,
	443, 2097,
	563, 2097,
	-2, 2087,
	-1, 1434,
	574, 2097,
	-2, 2098,
	-1, 1439,
	1, 1160,
	569, 1160,
	571, 1160,
	573, 1160,
	-2, 1418,
	-1, 1487,
	389, 966,
	532, 966,
	-2, 363,
	-1, 1503,
	44, 2095,
	-2, 934,
	-1, 1510,
	1, 1160,
	569, 1160,
	571, 1160,
	573, 1160,
	-2, 1418,
	-1, 1517,
	4, 1184,
	21, 1184,
	22, 1184,
	23, 1184,
	24, 1184,
	25, 1184,
	26, 1184,
	27, 1184,
	28, 1184,
	30, 1184,
	31, 1184,
	37, 1184,
	42, 1184,
	43, 1184,
	45, 1184,
	46, 1184,
	47, 1184,
	48, 1184,
	49, 1184,
	50, 1184,
	51, 1184,
	53, 1184,
	54, 1184,
	55, 1184,
	56, 1184,
	58, 1184,
	59, 1184,
	60, 1184,
	61, 1184,
	62, 1184,
	63, 1184,
	64, 1184,
	68, 1184,
	69, 1184,
	70, 1184,
	71, 1184,
	73, 1184,
	74, 1184,
	75, 1184,
	79, 1184,
	80, 1184,
	81, 1184,
	82, 1184,
	83, 1184,
	84, 1184,
	85, 1184,
	88, 1184,
	89, 1184,
	90, 1184,
	91, 1184,
	92, 1184,
	94, 1184,
	96, 1184,
	97, 1184,
	98, 1184,
	99, 1184,
	100, 1184,
	101, 1184,
	103, 1184,
	104, 1184,
	105, 1184,
	107, 1184,
	108, 1184,
	116, 1184,
	117, 1184,
	118, 1184,
	119, 1184,
	121, 1184,
	122, 1184,
	123, 1184,
	125, 1184,
	126, 1184,
	127, 1184,
	129, 1184,
	130, 1184,
	132, 1184,
	133, 1184,
	134, 1184,
	137, 1184,
	138, 1184,
	139, 1184,
	141, 1184,
	142, 1184,
	144, 1184,
	145, 1184,
	146, 1184,
	148, 1184,
	149, 1184,
	150, 1184,
	151, 1184,
	152, 1184,
	153, 1184,
	154, 1184,
	155, 1184,
	156, 1184,
	157, 1184,
	158, 1184,
	159, 1184,
	160, 1184,
	161, 1184,
	162, 1184,
	163, 1184,
	171, 1184,
	172, 1184,
	173, 1184,
	174, 1184,
	178, 1184,
	180, 1184,
	184, 1184,
	185, 1184,
	186, 1184,
	187, 1184,
	188, 1184,
	189, 1184,
	190, 1184,
	191, 1184,
	192, 1184,
	193, 1184,
	194, 1184,
	195, 1184,
	197, 1184,
	198, 1184,
	200, 1184,
	201, 1184,
	203, 1184,
	204, 1184,
	205, 1184,
	206, 1184,
	207, 1184,
	208, 1184,
	209, 1184,
	210, 1184,
	211, 1184,
	213, 1184,
	214, 1184,
	216, 1184,
	217, 1184,
	218, 1184,
	219, 1184,
	224, 1184,
	225, 1184,
	226, 1184,
	227, 1184,
	230, 1184,
	231, 1184,
	232, 1184,
	234, 1184,
	236, 1184,
	237, 1184,
	239, 1184,
	241, 1184,
	242, 1184,
	243, 1184,
	245, 1184,
	249, 1184,
	250, 1184,
	251, 1184,
	252, 1184,
	253, 1184,
	254, 1184,
	256, 1184,
	257, 1184,
	258, 1184,
	260, 1184,
	261, 1184,
	263, 1184,
	264, 1184,
	267, 1184,
	271, 1184,
	272, 1184,
	273, 1184,
	276, 1184,
	277, 1184,
	278, 1184,
	279, 1184,
	281, 1184,
	282, 1184,
	283, 1184,
	284, 1184,
	285, 1184,
	286, 1184,
	287, 1184,
	288, 1184,
	289, 1184,
	290, 1184,
	291, 1184,
	292, 1184,
	293, 1184,
	294, 1184,
	295, 1184,
	296, 1184,
	297, 1184,
	298, 1184,
	299, 1184,
	300, 1184,
	301, 1184,
	302, 1184,
	304, 1184,
	306, 1184,
	307, 1184,
	308, 1184,
	309, 1184,
	310, 1184,
	311, 1184,
	312, 1184,
	313, 1184,
	314, 1184,
	315, 1184,
	316, 1184,
	317, 1184,
	319, 1184,
	323, 1184,
	324, 1184,
	326, 1184,
	327, 1184,
	328, 1184,
	329, 1184,
	330, 1184,
	333, 1184,
	335, 1184,
	337, 1184,
	338, 1184,
	339, 1184,
	342, 1184,
	343, 1184,
	344, 1184,
	346, 1184,
	348, 1184,
	349, 1184,
	350, 1184,
	351, 1184,
	352, 1184,
	353, 1184,
	354, 1184,
	355, 1184,
	356, 1184,
	357, 1184,
	358, 1184,
	359, 1184,
	361, 1184,
	362, 1184,
	363, 1184,
	364, 1184,
	365, 1184,
	366, 1184,
	367, 1184,
	368, 1184,
	369, 1184,
	370, 1184,
	371, 1184,
	372, 1184,
	373, 1184,
	374, 1184,
	375, 1184,
	377, 1184,
	378, 1184,
	380, 1184,
	381, 1184,
	382, 1184,
	383, 1184,
	384, 1184,
	385, 1184,
	386, 1184,
	387, 1184,
	388, 1184,
	389, 1184,
	390, 1184,
	391, 1184,
	393, 1184,
	395, 1184,
	396, 1184,
	397, 1184,
	402, 1184,
	404, 1184,
	405, 1184,
	406, 1184,
	407, 1184,
	408, 1184,
	409, 1184,
	410, 1184,
	411, 1184,
	413, 1184,
	414, 1184,
	415, 1184,
	417, 1184,
	418, 1184,
	419, 1184,
	420, 1184,
	421, 1184,
	422, 1184,
	424, 1184,
	425, 1184,
	426, 1184,
	427, 1184,
	428, 1184,
	429, 1184,
	430, 1184,
	431, 1184,
	432, 1184,
	433, 1184,
	434, 1184,
	436, 1184,
	437, 1184,
	438, 1184,
	439, 1184,
	440, 1184,
	441, 1184,
	443, 1184,
	444, 1184,
	445, 1184,
	446, 1184,
	447, 1184,
	448, 1184,
	450, 1184,
	451, 1184,
	452, 1184,
	453, 1184,
	454, 1184,
	455, 1184,
	456, 1184,
	458, 1184,
	460, 1184,
	461, 1184,
	462, 1184,
	463, 1184,
	464, 1184,
	465, 1184,
	466, 1184,
	467, 1184,
	468, 1184,
	469, 1184,
	470, 1184,
	471, 1184,
	472, 1184,
	473, 1184,
	475, 1184,
	476, 1184,
	478, 1184,
	480, 1184,
	481, 1184,
	482, 1184,
	483, 1184,
	484, 1184,
	485, 1184,
	486, 1184,
	487, 1184,
	488, 1184,
	490, 1184,
	491, 1184,
	492, 1184,
	493, 1184,
	494, 1184,
	496, 1184,
	498, 1184,
	499, 1184,
	500, 1184,
	501, 1184,
	502, 1184,
	503, 1184,
	505, 1184,
	506, 1184,
	507, 1184,
	508, 1184,
	510, 1184,
	511, 1184,
	514, 1184,
	515, 1184,
	516, 1184,
	517, 1184,
	518, 1184,
	519, 1184,
	520, 1184,
	522, 1184,
	525, 1184,
	526, 1184,
	527, 1184,
	528, 1184,
	529, 1184,
	530, 1184,
	532, 1184,
	533, 1184,
	534, 1184,
	535, 1184,
	540, 1184,
	541, 1184,
	542, 1184,
	543, 1184,
	544, 1184,
	545, 1184,
	-2, 0,
	-1, 1540,
	1, 501,
	569, 501,
	571, 501,
	573, 501,
	-2, 1389,
	-1, 1543,
	4, 2528,
	11, 2528,
	12, 2528,
	14, 2528,
	15, 2528,
	16, 2528,
	17, 2528,
	18, 2528,
	19, 2528,
	21, 2528,
	22, 2528,
	23, 2528,
	24, 2528,
	25, 2528,
	26, 2528,
	27, 2528,
	28, 2528,
	30, 2528,
	31, 2528,
	34, 2528,
	35, 2528,
	37, 2528,
	39, 2528,
	42, 2528,
	43, 2528,
	45, 2528,
	46, 2528,
	47, 2528,
	48, 2528,
	49, 2528,
	50, 2528,
	51, 2528,
	53, 2528,
	54, 2528,
	55, 2528,
	56, 2528,
	58, 2528,
	59, 2528,
	60, 2528,
	61, 2528,
	62, 2528,
	63, 2528,
	64, 2528,
	68, 2528,
	69, 2528,
	70, 2528,
	71, 2528,
	73, 2528,
	74, 2528,
	75, 2528,
	76, 2528,
	79, 2528,
	80, 2528,
	81, 2528,
	82, 2528,
	83, 2528,
	84, 2528,
	85, 2528,
	86, 2528,
	88, 2528,
	89, 2528,
	90, 2528,
	91, 2528,
	92, 2528,
	94, 2528,
	95, 2528,
	96, 2528,
	97, 2528,
	98, 2528,
	99, 2528,
	100, 2528,
	101, 2528,
	103, 2528,
	104, 2528,
	105, 2528,
	106, 2528,
	107, 2528,
	108, 2528,
	116, 2528,
	117, 2528,
	118, 2528,
	119, 2528,
	121, 2528,
	122, 2528,
	123, 2528,
	125, 2528,
	126, 2528,
	127, 2528,
	129, 2528,
	130, 2528,
	132, 2528,
	133, 2528,
	134, 2528,
	137, 2528,
	138, 2528,
	139, 2528,
	141, 2528,
	142, 2528,
	144, 2528,
	145, 2528,
	146, 2528,
	148, 2528,
	149, 2528,
	150, 2528,
	151, 2528,
	152, 2528,
	153, 2528,
	154, 2528,
	155, 2528,
	156, 2528,
	157, 2528,
	158, 2528,
	159, 2528,
	160, 2528,
	161, 2528,
	162, 2528,
	163, 2528,
	167, 2528,
	168, 2528,
	169, 2528,
	170, 2528,
	171, 2528,
	172, 2528,
	173, 2528,
	174, 2528,
	177, 2528,
	178, 2528,
	180, 2528,
	183, 2528,
	184, 2528,
	185, 2528,
	186, 2528,
	187, 2528,
	188, 2528,
	189, 2528,
	190, 2528,
	191, 2528,
	192, 2528,
	193, 2528,
	194, 2528,
	195, 2528,
	197, 2528,
	198, 2528,
	200, 2528,
	201, 2528,
	203, 2528,
	204, 2528,
	205, 2528,
	206, 2528,
	207, 2528,
	208, 2528,
	209, 2528,
	210, 2528,
	211, 2528,
	212, 2528,
	213, 2528,
	214, 2528,
	215, 2528,
	216, 2528,
	217, 2528,
	218, 2528,
	219, 2528,
	221, 2528,
	222, 2528,
	224, 2528,
	225, 2528,
	226, 2528,
	227, 2528,
	229, 2528,
	230, 2528,
	231, 2528,
	232, 2528,
	234, 2528,
	236, 2528,
	237, 2528,
	238, 2528,
	239, 2528,
	240, 2528,
	241, 2528,
	242, 2528,
	243, 2528,
	244, 2528,
	245, 2528,
	247, 2528,
	248, 2528,
	249, 2528,
	250, 2528,
	251, 2528,
	252, 2528,
	253, 2528,
	254, 2528,
	256, 2528,
	257, 2528,
	258, 2528,
	260, 2528,
	261, 2528,
	262, 2528,
	263, 2528,
	264, 2528,
	265, 2528,
	267, 2528,
	271, 2528,
	272, 2528,
	273, 2528,
	276, 2528,
	277, 2528,
	278, 2528,
	279, 2528,
	280, 2528,
	281, 2528,
	282, 2528,
	283, 2528,
	284, 2528,
	285, 2528,
	286, 2528,
	287, 2528,
	288, 2528,
	289, 2528,
	290, 2528,
	291, 2528,
	292, 2528,
	293, 2528,
	294, 2528,
	295, 2528,
	296, 2528,
	297, 2528,
	298, 2528,
	299, 2528,
	300, 2528,
	301, 2528,
	302, 2528,
	304, 2528,
	305, 2528,
	306, 2528,
	307, 2528,
	308, 2528,
	309, 2528,
	310, 2528,
	311, 2528,
	312, 2528,
	313, 2528,
	314, 2528,
	315, 2528,
	316, 2528,
	317, 2528,
	319, 2528,
	322, 2528,
	323, 2528,
	324, 2528,
	326, 2528,
	327, 2528,
	328, 2528,
	329, 2528,
	330, 2528,
	333, 2528,
	337, 2528,
	338, 2528,
	339, 2528,
	340, 2528,
	342, 2528,
	343, 2528,
	344, 2528,
	346, 2528,
	348, 2528,
	349, 2528,
	350, 2528,
	351, 2528,
	352, 2528,
	353, 2528,
	354, 2528,
	355, 2528,
	356, 2528,
	357, 2528,
	358, 2528,
	359, 2528,
	361, 2528,
	362, 2528,
	363, 2528,
	364, 2528,
	365, 2528,
	366, 2528,
	367, 2528,
	368, 2528,
	369, 2528,
	370, 2528,
	371, 2528,
	372, 2528,
	373, 2528,
	374, 2528,
	375, 2528,
	377, 2528,
	378, 2528,
	380, 2528,
	381, 2528,
	382, 2528,
	383, 2528,
	384, 2528,
	385, 2528,
	386, 2528,
	387, 2528,
	388, 2528,
	389, 2528,
	390, 2528,
	391, 2528,
	393, 2528,
	395, 2528,
	396, 2528,
	397, 2528,
	402, 2528,
	403, 2528,
	404, 2528,
	405, 2528,
	406, 2528,
	407, 2528,
	408, 2528,
	409, 2528,
	410, 2528,
	411, 2528,
	413, 2528,
	414, 2528,
	415, 2528,
	416, 2528,
	417, 2528,
	418, 2528,
	419, 2528,
	420, 2528,
	421, 2528,
	422, 2528,
	423, 2528,
	424, 2528,
	425, 2528,
	426, 2528,
	427, 2528,
	428, 2528,
	429, 2528,
	430, 2528,
	431, 2528,
	432, 2528,
	433, 2528,
	434, 2528,
	436, 2528,
	437, 2528,
	438, 2528,
	439, 2528,
	440, 2528,
	441, 2528,
	443, 2528,
	444, 2528,
	445, 2528,
	446, 2528,
	447, 2528,
	448, 2528,
	449, 2528,
	450, 2528,
	451, 2528,
	452, 2528,
	453, 2528,
	454, 2528,
	455, 2528,
	456, 2528,
	458, 2528,
	460, 2528,
	461, 2528,
	462, 2528,
	463, 2528,
	464, 2528,
	465, 2528,
	466, 2528,
	467, 2528,
	468, 2528,
	469, 2528,
	470, 2528,
	471, 2528,
	472, 2528,
	473, 2528,
	475, 2528,
	476, 2528,
	478, 2528,
	480, 2528,
	481, 2528,
	482, 2528,
	483, 2528,
	484, 2528,
	485, 2528,
	486, 2528,
	487, 2528,
	488, 2528,
	490, 2528,
	491, 2528,
	492, 2528,
	493, 2528,
	494, 2528,
	496, 2528,
	498, 2528,
	499, 2528,
	500, 2528,
	501, 2528,
	502, 2528,
	503, 2528,
	505, 2528,
	506, 2528,
	507, 2528,
	508, 2528,
	510, 2528,
	511, 2528,
	514, 2528,
	515, 2528,
	516, 2528,
	517, 2528,
	518, 2528,
	519, 2528,
	520, 2528,
	522, 2528,
	525, 2528,
	526, 2528,
	527, 2528,
	528, 2528,
	529, 2528,
	530, 2528,
	532, 2528,
	533, 2528,
	534, 2528,
	535, 2528,
	540, 2528,
	541, 2528,
	542, 2528,
	543, 2528,
	544, 2528,
	545, 2528,
	546, 2528,
	548, 2528,
	551, 2528,
	552, 2528,
	553, 2528,
	554, 2528,
	555, 2528,
	556, 2528,
	558, 2528,
	559, 2528,
	560, 2528,
	561, 2528,
	562, 2528,
	563, 2528,
	564, 2528,
	565, 2528,
	566, 2528,
	568, 2528,
	571, 2528,
	572, 2528,
	574, 2528,
	575, 2528,
	-2, 0,
	-1, 1548,
	182, 2415,
	495, 2415,
	553, 2415,
	572, 2415,
	-2, 0,
	-1, 1597,
	382, 806,
	441, 806,
	500, 806,
	-2, 0,
	-1, 1624,
	1, 801,
	569, 801,
	571, 801,
	573, 801,
	-2, 0,
	-1, 1625,
	1, 837,
	569, 837,
	571, 837,
	573, 837,
	-2, 0,
	-1, 1626,
	1, 845,
	569, 845,
	571, 845,
	573, 845,
	-2, 0,
	-1, 1627,
	1, 808,
	569, 808,
	571, 808,
	573, 808,
	-2, 0,
	-1, 1629,
	1, 812,
	569, 812,
	571, 812,
	573, 812,
	-2, 0,
	-1, 1635,
	1, 819,
	569, 819,
	571, 819,
	573, 819,
	-2, 0,
	-1, 1663,
	1, 2474,
	569, 2474,
	571, 2474,
	572, 2474,
	573, 2474,
	-2, 870,
	-1, 1664,
	1, 2412,
	569, 2412,
	571, 2412,
	572, 2412,
	573, 2412,
	-2, 871,
	-1, 1681,
	1, 1281,
	573, 1281,
	-2, 1286,
	-1, 1684,
	166, 1432,
	179, 1432,
	266, 1432,
	331, 1432,
	-2, 1370,
	-1, 1778,
	147, 1391,
	166, 1391,
	179, 1391,
	233, 1391,
	266, 1391,
	331, 1391,
	341, 1391,
	512, 1391,
	-2, 1833,
	-1, 1838,
	571, 1983,
	-2, 0,
	-1, 1873,
	147, 1391,
	166, 1391,
	179, 1391,
	233, 1391,
	266, 1391,
	331, 1391,
	341, 1391,
	512, 1391,
	-2, 1519,
	-1, 1922,
	570, 1660,
	-2, 1648,
	-1, 2000,
	1, 630,
	573, 630,
	-2, 1286,
	-1, 2120,
	215, 236,
	-2, 2130,
	-1, 2121,
	215, 237,
	-2, 279,
	-1, 2220,
	1, 803,
	569, 803,
	571, 803,
	573, 803,
	-2, 0,
	-1, 2221,
	1, 839,
	569, 839,
	571, 839,
	573, 839,
	-2, 0,
	-1, 2222,
	1, 847,
	569, 847,
	571, 847,
	573, 847,
	-2, 0,
	-1, 2256,
	1, 821,
	569, 821,
	571, 821,
	573, 821,
	-2, 0,
	-1, 2304,
	421, 1459,
	422, 1459,
	-2, 1693,
	-1, 2335,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1713,
	-1, 2336,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1714,
	-1, 2337,
	95, 0,
	247, 0,
	248, 0,
	555, 0,
	556, 0,
	-2, 1715,
	-1, 2338,
	95, 0,
	247, 0,
	248, 0,
	555, 0,
	556, 0,
	-2, 1716,
	-1, 2339,
	95, 0,
	247, 0,
	248, 0,
	555, 0,
	556, 0,
	-2, 1717,
	-1, 2340,
	95, 0,
	247, 0,
	248, 0,
	555, 0,
	556, 0,
	-2, 1718,
	-1, 2341,
	95, 0,
	247, 0,
	248, 0,
	555, 0,
	556, 0,
	-2, 1719,
	-1, 2342,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1720,
	-1, 2354,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1732,
	-1, 2355,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1733,
	-1, 2356,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1734,
	-1, 2359,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1739,
	-1, 2365,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1743,
	-1, 2367,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1751,
	-1, 2368,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1752,
	-1, 2369,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1753,
	-1, 2370,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1754,
	-1, 2506,
	5, 2134,
	182, 1994,
	570, 2131,
	-2, 2122,
	-1, 2507,
	182, 1995,
	-2, 2479,
	-1, 2508,
	182, 1996,
	-2, 2312,
	-1, 2509,
	182, 1997,
	-2, 2202,
	-1, 2510,
	182, 1998,
	-2, 2253,
	-1, 2511,
	182, 1999,
	-2, 2297,
	-1, 2512,
	182, 2000,
	-2, 2410,
	-1, 2513,
	182, 2001,
	-2, 1816,
	-1, 2583,
	1, 1520,
	2, 1520,
	106, 1520,
	147, 1520,
	166, 1520,
	179, 1520,
	183, 1520,
	199, 1520,
	202, 1520,
	229, 1520,
	233, 1520,
	244, 1520,
	262, 1520,
	266, 1520,
	305, 1520,
	331, 1520,
	335, 1520,
	341, 1520,
	412, 1520,
	416, 1520,
	512, 1520,
	523, 1520,
	537, 1520,
	538, 1520,
	539, 1520,
	549, 1520,
	569, 1520,
	571, 1520,
	573, 1520,
	575, 1520,
	-2, 1519,
	-1, 2596,
	570, 2103,
	-2, 2117,
	-1, 2598,
	53, 1418,
	132, 1418,
	-2, 295,
	-1, 2623,
	570, 1659,
	-2, 1649,
	-1, 2795,
	1, 1160,
	569, 1160,
	571, 1160,
	573, 1160,
	-2, 1418,
	-1, 2956,
	336, 1462,
	-2, 2518,
	-1, 2957,
	336, 1463,
	-2, 2396,
	-1, 2961,
	421, 2060,
	422, 2060,
	-2, 1814,
	-1, 2962,
	421, 2064,
	422, 2064,
	-2, 1815,
	-1, 2963,
	421, 2061,
	422, 2061,
	-2, 1814,
	-1, 2964,
	421, 2065,
	422, 2065,
	-2, 1815,
	-1, 2977,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1741,
	-1, 2978,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1745,
	-1, 2984,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1747,
	-1, 3224,
	1, 627,
	569, 627,
	571, 627,
	573, 627,
	-2, 1286,
	-1, 3366,
	44, 2095,
	-2, 935,
	-1, 3371,
	1, 1160,
	569, 1160,
	571, 1160,
	573, 1160,
	-2, 1418,
	-1, 3472,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1749,
	-1, 3479,
	238, 0,
	240, 0,
	322, 0,
	-2, 1768,
	-1, 3546,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1797,
	-1, 3547,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1798,
	-1, 3548,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1799,
	-1, 3552,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1803,
	-1, 3553,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1804,
	-1, 3554,
	14, 0,
	15, 0,
	16, 0,
	551, 0,
	552, 0,
	553, 0,
	-2, 1805,
	-1, 3600,
	570, 2104,
	-2, 2118,
	-1, 3752,
	572, 2635,
	-2, 1344,
	-1, 3808,
	238, 0,
	240, 0,
	322, 0,
	-2, 1769,
	-1, 3811,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1772,
	-1, 3812,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1774,
	-1, 3905,
	572, 2119,
	-2, 1194,
	-1, 4034,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1773,
	-1, 4035,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 1775,
	-1, 4046,
	238, 0,
	-2, 1806,
	-1, 4207,
	238, 0,
	-2, 1807,
	-1, 4381,
	50, 0,
	212, 0,
	265, 0,
	449, 0,
	546, 0,
	554, 0,
	-2, 2482,
}

const sqlPrivate = 57344

const sqlLast = 117920

var sqlAct = [...]int{

	259, 4241, 4133, 2857, 4259, 2870, 4433, 4263, 4391, 4500,
	4087, 4362, 3355, 3356, 4380, 4351, 1186, 2117, 3135, 4280,
	4332, 4315, 3901, 4392, 2687, 4160, 3791, 4393, 4335, 4233,
	2189, 2728, 4140, 4074, 3511, 4445, 4211, 1197, 3991, 3986,
	1063, 3958, 4379, 2538, 3940, 4092, 1019, 4055, 3464, 2314,
	4023, 4149, 3744, 1269, 1258, 1265, 2970, 3972, 3686, 3902,
	251, 3886, 1909, 2746, 3301, 2382, 1010, 3387, 4174, 1693,
	3996, 3249, 2758, 3704, 771, 3252, 3720, 2322, 3351, 2055,
	3381, 1879, 3706, 2315, 4051, 1982, 1563, 3341, 2892, 3426,
	2846, 1329, 3428, 2198, 2879, 2828, 2881, 1420, 771, 738,
	2818, 3603, 3178, 3158, 1957, 3847, 1605, 3150, 3790, 3235,
	2843, 845, 2163, 3118, 3141, 2889, 2841, 2878, 2858, 1451,
	2872, 3139, 2689, 2112, 1848, 2677, 3117, 1018, 171, 2111,
	1271, 2065, 2576, 3571, 1824, 1910, 4212, 2424, 1786, 2319,
	2395, 1427, 1263, 3246, 1505, 105, 4, 766, 2772, 2106,
	2888, 1177, 2090, 2575, 253, 252, 2097, 2829, 2954, 2039,
	1980, 2578, 1074, 1067, 1312, 1849, 2727, 1681, 2196, 2556,
	2415, 2026, 2036, 4260, 1237, 2535, 2379, 2303, 2286, 3185,
	2608, 1562, 2284, 3353, 1072, 1260, 1541, 2851, 2151, 2882,
	1298, 669, 1508, 772, 2672, 2418, 1858, 1180, 773, 2607,
	2565, 1159, 2502, 1819, 1771, 2396, 1251, 2546, 2468, 180,
	1694, 655, 2285, 1868, 1865, 677, 1695, 181, 171, 2287,
	1635, 2150, 720, 732, 2175, 1446, 1194, 2054, 777, 780,
	1176, 1532, 768, 1539, 4434, 4281, 2308, 838, 1248, 1958,
	1048, 1955, 672, 44, 43, 41, 680, 32, 30, 28,
	1182, 1157, 777, 780, 1700, 907, 3005, 1680, 1457, 927,
	3585, 3001, 3586, 4570, 1971, 4560, 1192, 2555, 1971, 3406,
	3137, 695, 4547, 1971, 819, 4546, 2555, 1014, 1117, 2555,
	1969, 1971, 1971, 1971, 4536, 4518, 4516, 4464, 2125, 4091,
	4091, 2125, 4422, 4415, 4413, 3397, 4423, 2555, 2555, 1628,
	4410, 4407, 4377, 4376, 4411, 4408, 2125, 2125, 3396, 4375,
	4370, 4369, 4360, 1992, 1992, 1992, 4091, 4358, 2426, 4330,
	3406, 4091, 4305, 4091, 1070, 4298, 2614, 4297, 1015, 2555,
	860, 2555, 4292, 4291, 4285, 4255, 4091, 4091, 2125, 3950,
	1174, 1014, 4209, 4191, 3090, 3091, 2614, 3779, 4188, 4185,
	4142, 4107, 2125, 4091, 4143, 2125, 4106, 4098, 4097, 4090,
	2125, 2125, 4091, 4091, 1307, 3208, 4062, 4036, 1708, 1709,
	2125, 2614, 4015, 4004, 3935, 3193, 1992, 3406, 2555, 1160,
	1160, 995, 3923, 3810, 3760, 2754, 2555, 2614, 3423, 994,
	2197, 3754, 1739, 1307, 2125, 3423, 2610, 1708, 1709, 1711,
	1741, 1742, 1743, 1751, 1752, 1753, 3718, 3595, 3593, 3578,
	3719, 3596, 3594, 2555, 3495, 2421, 2633, 2713, 2125, 3575,
	1744, 1739, 3491, 3422, 1208, 3413, 2555, 3423, 1711, 3414,
	3134, 3207, 2125, 1710, 2555, 1004, 1757, 3129, 1009, 2548,
	1163, 2555, 1164, 3090, 3091, 3128, 3108, 3109, 3110, 2555,
	1215, 1708, 1709, 3081, 1069, 1989, 3055, 3082, 2969, 3047,
	3056, 2555, 1710, 3048, 1708, 1709, 3806, 3045, 3014, 3016,
	1161, 2555, 1730, 2555, 3015, 1739, 1459, 4306, 4213, 2895,
	2868, 1727, 1711, 1992, 2185, 2867, 2656, 2613, 1739, 2185,
	2555, 2614, 4204, 2605, 2599, 1711, 2632, 2555, 2125, 2554,
	2422, 2184, 4192, 2555, 1209, 2185, 1992, 223, 3575, 2547,
	3096, 2555, 3985, 3950, 3924, 3779, 1710, 3414, 3105, 2749,
	2671, 2005, 1970, 2059, 1986, 1989, 2824, 2124, 2766, 1710,
	2669, 1844, 1445, 3674, 1716, 3467, 3444, 1866, 2100, 3398,
	1607, 1708, 1709, 2592, 1741, 1742, 1743, 1751, 1752, 1753,
	1189, 225, 2591, 1733, 1734, 1735, 1736, 2590, 3399, 223,
	223, 2589, 2588, 1716, 1744, 1739, 1165, 1162, 1003, 1002,
	1001, 1000, 1711, 2933, 3863, 3004, 999, 998, 1738, 1740,
	1757, 2423, 997, 2420, 1450, 993, 39, 992, 991, 990,
	1571, 989, 223, 988, 987, 986, 985, 984, 1748, 983,
	224, 1758, 1471, 225, 225, 982, 1710, 1738, 1740, 3096,
	1972, 217, 981, 3106, 1972, 980, 1730, 1716, 1065, 1972,
	218, 979, 978, 977, 1754, 1727, 1755, 1972, 1972, 1972,
	1716, 72, 905, 1725, 1726, 904, 225, 1731, 903, 902,
	901, 900, 182, 899, 898, 4398, 897, 73, 896, 895,
	894, 1746, 224, 224, 893, 892, 891, 890, 889, 888,
	887, 1738, 1740, 77, 217, 1557, 1731, 886, 885, 884,
	3111, 883, 882, 218, 1738, 1740, 881, 880, 879, 878,
	1188, 877, 876, 875, 874, 224, 3998, 873, 3396, 863,
	862, 858, 857, 851, 182, 182, 217, 1733, 1734, 1735,
	1736, 850, 837, 84, 836, 218, 794, 1716, 1756, 793,
	792, 791, 3106, 1274, 1072, 783, 782, 781, 1465, 753,
	1731, 744, 743, 742, 726, 247, 1745, 182, 2425, 246,
	4378, 245, 223, 1731, 90, 244, 243, 1072, 242, 241,
	843, 1072, 1748, 240, 1575, 1758, 239, 238, 237, 236,
	235, 1738, 1740, 234, 104, 233, 3107, 1332, 1209, 90,
	101, 1332, 232, 231, 230, 1274, 229, 1459, 1754, 228,
	1755, 1259, 227, 2192, 226, 2643, 225, 1725, 1726, 1970,
	1732, 1450, 3822, 1311, 1989, 3613, 1072, 1316, 1072, 1737,
	1072, 1869, 1986, 2632, 2279, 1746, 1274, 3589, 3424, 1458,
	3181, 3090, 3091, 3027, 3010, 2916, 2805, 2618, 1470, 1732,
	1731, 2837, 2597, 2582, 1707, 91, 2451, 1435, 2034, 1423,
	3132, 1274, 1434, 1259, 1989, 224, 2437, 1302, 2435, 4270,
	1827, 1991, 2547, 1630, 2854, 1749, 217, 1826, 2419, 1892,
	4201, 1274, 1459, 1209, 1827, 218, 1274, 1430, 1797, 1453,
	1318, 1826, 1756, 2191, 1072, 3107, 1072, 1449, 3133, 1830,
	1274, 4216, 1196, 1732, 2627, 3723, 1072, 182, 1072, 4085,
	1745, 4195, 4193, 1825, 1173, 4050, 1732, 1514, 1516, 4005,
	3984, 1242, 1245, 1259, 1259, 4000, 3870, 3845, 3844, 1561,
	1788, 1255, 1046, 3100, 3092, 3093, 3094, 3095, 3097, 3098,
	3838, 1296, 3837, 3836, 1795, 3829, 1437, 1325, 3828, 1417,
	1422, 3826, 3821, 1274, 3818, 1721, 1719, 1720, 1712, 1713,
	1714, 1715, 1717, 1718, 1464, 1282, 3817, 3717, 2166, 777,
	780, 1072, 1747, 1737, 1072, 3617, 3616, 1722, 1723, 1729,
	1750, 1728, 1724, 3615, 1721, 1719, 1720, 1712, 1713, 1714,
	1715, 1717, 1718, 1732, 3599, 1291, 3566, 4318, 94, 3565,
	3564, 1503, 3487, 3483, 3176, 3125, 1425, 3096, 1448, 171,
	171, 1542, 1017, 1447, 3116, 3089, 1459, 3086, 3085, 1749,
	3083, 1576, 3054, 3102, 3103, 3104, 1015, 1790, 1544, 1546,
	3101, 3099, 3100, 3092, 3093, 3094, 3095, 3097, 3098, 1719,
	1720, 1712, 1713, 1714, 1715, 1717, 1718, 3672, 3053, 179,
	97, 223, 100, 1720, 1712, 1713, 1714, 1715, 1717, 1718,
	3090, 3091, 3052, 223, 144, 1072, 1072, 1072, 1072, 1072,
	1072, 1072, 1519, 3090, 3091, 223, 223, 1789, 3049, 1787,
	2132, 3046, 1644, 3026, 844, 3009, 3002, 2869, 2583, 144,
	2408, 2839, 1707, 2130, 1788, 225, 1072, 1302, 1706, 4564,
	1302, 1685, 1072, 4510, 4509, 4476, 1535, 225, 3724, 4432,
	3106, 4430, 1198, 3513, 4322, 4262, 1747, 3090, 3091, 225,
	225, 1722, 1723, 1729, 1750, 1728, 1724, 4251, 1721, 1719,
	1720, 1712, 1713, 1714, 1715, 1717, 1718, 4248, 223, 3090,
	3091, 3832, 3724, 4247, 224, 3831, 146, 4246, 3130, 4227,
	4215, 4214, 1679, 1556, 4189, 217, 224, 4173, 1190, 4172,
	3999, 183, 2385, 4158, 218, 1570, 4155, 217, 224, 224,
	4103, 4081, 4048, 4031, 4030, 1777, 218, 4012, 4011, 217,
	217, 3975, 225, 3951, 3862, 223, 182, 3843, 218, 218,
	3780, 223, 3105, 3774, 3771, 3661, 3660, 3647, 182, 3646,
	3644, 3581, 3569, 3478, 1581, 1775, 3425, 1072, 1072, 1072,
	182, 182, 3407, 1072, 1598, 3374, 3313, 223, 3280, 3251,
	1194, 3201, 1194, 3031, 3030, 3025, 3096, 2993, 1631, 225,
	2817, 224, 1833, 1832, 1831, 225, 1828, 1332, 1846, 3096,
	1820, 1015, 217, 2391, 3199, 1072, 1818, 2625, 771, 2624,
	2594, 218, 2587, 3107, 1927, 771, 1855, 2553, 1274, 2433,
	1192, 225, 1192, 1690, 1682, 1891, 1847, 1842, 995, 1841,
	1689, 1840, 223, 182, 1839, 1838, 994, 2838, 224, 1837,
	1836, 2193, 1899, 3096, 224, 1835, 1834, 1815, 1902, 217,
	1814, 1684, 1813, 1812, 1811, 217, 1829, 1810, 218, 1809,
	1808, 1686, 1807, 1434, 218, 3096, 1806, 1703, 1704, 1805,
	224, 1804, 1803, 1708, 1709, 1802, 225, 1801, 1790, 1776,
	2853, 217, 1774, 1769, 1274, 1290, 182, 1213, 1900, 1533,
	218, 1072, 1852, 1853, 1204, 1274, 1876, 1739, 4217, 1708,
	1709, 1281, 3978, 3866, 1711, 3814, 1708, 1709, 3612, 1434,
	3592, 171, 182, 1072, 3584, 3013, 1821, 1822, 1895, 1332,
	1160, 2585, 223, 1538, 4066, 224, 3868, 1015, 1906, 3611,
	1711, 1789, 2616, 3197, 1998, 1953, 217, 1711, 1710, 3090,
	3091, 3926, 2023, 1772, 3173, 218, 3106, 3402, 1961, 3099,
	3100, 3092, 3093, 3094, 3095, 3097, 3098, 1887, 223, 2032,
	1315, 4507, 777, 780, 1710, 1898, 225, 182, 3106, 777,
	780, 1710, 2025, 1456, 4499, 1463, 1921, 1469, 2025, 1874,
	2747, 4249, 4145, 4144, 2025, 2450, 4003, 1302, 1997, 3953,
	3090, 3091, 1867, 3952, 3925, 2436, 1877, 2434, 3865, 3783,
	3782, 3781, 225, 1708, 1709, 223, 1896, 3587, 3409, 3408,
	1845, 4150, 4196, 4194, 1961, 224, 1974, 1307, 1314, 1869,
	3465, 1677, 3051, 3050, 1597, 1961, 217, 1886, 1885, 1884,
	1871, 1882, 1881, 1880, 1711, 218, 2732, 4084, 2975, 1716,
	1903, 1555, 1172, 1560, 1274, 1274, 3727, 1950, 3306, 225,
	2421, 224, 1907, 1569, 1332, 1574, 1307, 182, 2715, 2167,
	1810, 2000, 217, 1827, 1307, 1716, 1310, 2011, 1710, 1796,
	1826, 218, 3659, 1810, 975, 3358, 3418, 3357, 3253, 2212,
	1799, 1606, 1645, 1738, 1740, 4374, 2190, 4141, 4418, 3107,
	4403, 4390, 1924, 182, 3342, 1313, 2893, 1607, 224, 2047,
	2113, 3683, 3679, 3665, 1189, 2084, 1189, 2089, 3441, 217,
	2094, 3107, 3222, 3019, 4052, 3137, 1629, 976, 218, 3515,
	2416, 2623, 1843, 1976, 1996, 1994, 1978, 2059, 3283, 1823,
	2118, 2122, 1983, 3349, 2003, 2422, 1985, 4399, 2160, 1513,
	182, 1988, 1731, 1442, 1285, 1241, 1274, 2028, 1274, 2763,
	1274, 2018, 4412, 2017, 2016, 1537, 3096, 2025, 2027, 4409,
	3392, 2760, 3639, 4242, 3987, 4329, 1274, 1274, 2159, 1716,
	3092, 3093, 3094, 3095, 3097, 3098, 3226, 1274, 2064, 4224,
	3256, 3654, 2876, 2850, 3335, 3094, 3095, 3097, 3098, 1274,
	832, 1274, 1274, 1274, 2115, 4462, 4490, 1585, 3307, 4461,
	777, 780, 4400, 3459, 2098, 2156, 3696, 4124, 3914, 1481,
	2657, 1642, 2262, 2059, 771, 973, 2423, 2260, 2420, 1489,
	2211, 2199, 956, 1538, 3101, 3099, 3100, 3092, 3093, 3094,
	3095, 3097, 3098, 2294, 1188, 4559, 1188, 971, 4117, 1448,
	2161, 4109, 4070, 2172, 1447, 2001, 3101, 3099, 3100, 3092,
	3093, 3094, 3095, 3097, 3098, 3948, 969, 3692, 2093, 3106,
	2082, 2083, 1643, 3691, 2195, 3685, 967, 964, 3678, 3676,
	3695, 2123, 2675, 2020, 2012, 3627, 1542, 3626, 1542, 3338,
	3192, 3024, 3023, 3022, 3021, 1732, 2979, 2673, 2770, 1013,
	833, 1015, 2292, 1015, 2216, 2769, 2180, 1072, 2765, 1072,
	2756, 1490, 1443, 2745, 2744, 2741, 1072, 2740, 1641, 1927,
	1927, 1332, 2719, 1072, 1072, 1072, 1072, 1072, 1072, 1072,
	1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072,
	1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072,
	1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072, 2200, 1072,
	2182, 1072, 1072, 1072, 1072, 2178, 2169, 1535, 2174, 2177,
	2143, 2177, 2142, 2425, 2296, 3198, 2706, 2606, 777, 780,
	1883, 1308, 1291, 1072, 1583, 1012, 1072, 1072, 2366, 2186,
	2675, 2187, 3228, 2022, 1072, 1683, 2204, 2283, 1072, 2464,
	1072, 1072, 4491, 2463, 3253, 2673, 2324, 2220, 1332, 2203,
	2847, 961, 3107, 2190, 1072, 1072, 1072, 1072, 1315, 1072,
	1072, 1072, 1072, 1072, 1072, 1072, 1072, 1485, 1227, 2397,
	2398, 2021, 4029, 1712, 1713, 1714, 1715, 1717, 1718, 2294,
	3442, 2293, 1915, 2397, 2413, 1072, 1072, 1072, 1072, 1072,
	1072, 1072, 1072, 1072, 2320, 2321, 2238, 1297, 1072, 1712,
	1713, 1714, 1715, 1717, 1718, 1537, 2221, 2277, 2256, 2459,
	1194, 1718, 2617, 1525, 2056, 1524, 1314, 1332, 2717, 4494,
	2307, 1921, 1921, 2419, 2208, 2141, 1194, 2050, 2505, 2505,
	2519, 1578, 2397, 1014, 1304, 2539, 2541, 1624, 2292, 1315,
	1498, 2545, 1072, 1332, 3098, 1599, 2664, 2052, 2282, 2271,
	1192, 2291, 3927, 2736, 2295, 2281, 2280, 2087, 2288, 2416,
	995, 2274, 3875, 995, 995, 2222, 1192, 3282, 2311, 2598,
	1015, 2312, 2313, 2057, 2058, 2729, 2730, 2096, 2412, 1015,
	2381, 2729, 2730, 1015, 1523, 2595, 1522, 2729, 2730, 2570,
	3092, 3093, 3094, 3095, 3097, 3098, 1625, 1314, 1708, 1709,
	2095, 1654, 2705, 2053, 1640, 1714, 1715, 1717, 1718, 2278,
	4495, 2228, 1444, 1309, 1676, 1259, 2290, 1658, 2967, 1308,
	3874, 2381, 1739, 1308, 2562, 2393, 2266, 835, 834, 1711,
	2952, 4235, 4461, 2091, 1201, 3450, 3702, 1924, 1924, 2389,
	1876, 3910, 2225, 1274, 1274, 2410, 2387, 1579, 1688, 4520,
	1887, 2762, 2704, 2179, 3225, 1626, 1160, 2691, 2219, 2057,
	2058, 1595, 1259, 1710, 3449, 2930, 2273, 3650, 1607, 1607,
	1305, 1015, 2936, 1730, 1199, 3701, 1289, 2293, 2561, 1306,
	2425, 2584, 3947, 2761, 3504, 1332, 171, 3677, 2514, 2092,
	1637, 2646, 2501, 4523, 2530, 2759, 2543, 1259, 1259, 2652,
	1582, 3675, 951, 4396, 1011, 2611, 3337, 2563, 2377, 2573,
	2551, 2552, 871, 2567, 2568, 4473, 2229, 1927, 3304, 4497,
	1509, 2660, 1190, 1874, 1190, 4479, 1829, 1008, 4028, 2569,
	1023, 2574, 1304, 3642, 2580, 2581, 1304, 2375, 2764, 3662,
	2662, 2609, 2739, 667, 2040, 2966, 4237, 2291, 1302, 2990,
	2041, 1332, 751, 3898, 1733, 1734, 1735, 1736, 2261, 2654,
	2029, 2030, 965, 2259, 1716, 1274, 2694, 1507, 1584, 2718,
	662, 2626, 3390, 2663, 2716, 2129, 2128, 2939, 2988, 1202,
	1072, 1072, 2648, 1072, 965, 2683, 3894, 1423, 2630, 2461,
	1821, 1822, 951, 2661, 2462, 4478, 2631, 2465, 2637, 2466,
	2467, 2629, 2640, 965, 2641, 2270, 1274, 3898, 1738, 1740,
	1434, 1309, 2655, 966, 965, 1309, 952, 1008, 2647, 3297,
	2604, 3290, 4450, 830, 2737, 829, 2649, 2797, 3878, 1484,
	1226, 2425, 2078, 3501, 1189, 2757, 1274, 3908, 3895, 3796,
	3894, 2645, 1307, 3795, 3887, 2658, 2721, 2674, 1274, 3389,
	1189, 2835, 2722, 2708, 2861, 4550, 1655, 749, 3296, 2042,
	3289, 3885, 3389, 1274, 2062, 2720, 2796, 1731, 1305, 2890,
	3889, 2077, 1305, 4397, 1487, 2371, 2046, 1306, 2738, 1921,
	2686, 1306, 2619, 2898, 2899, 2050, 2696, 2699, 2731, 2733,
	2734, 2735, 3895, 2372, 2905, 2906, 2907, 2110, 2373, 2959,
	2960, 4496, 2378, 2061, 1072, 2638, 952, 1971, 2938, 1857,
	2827, 2642, 3636, 2748, 3502, 864, 2985, 3635, 4364, 2821,
	4365, 3237, 2272, 2831, 3227, 2653, 4243, 2743, 962, 777,
	780, 3240, 2742, 3888, 2894, 3316, 1961, 2800, 2935, 2986,
	1434, 2802, 4257, 2991, 1509, 2043, 2048, 1652, 1259, 3271,
	1072, 2109, 4503, 2875, 716, 1211, 1072, 1072, 3268, 2678,
	2675, 2693, 171, 2101, 1188, 2914, 1542, 2088, 1448, 2108,
	4395, 3651, 2227, 2803, 1816, 2697, 3967, 1915, 1915, 4449,
	1188, 2865, 1434, 2911, 1434, 2815, 1861, 3909, 4472, 2050,
	1737, 2825, 1656, 2863, 2680, 1924, 2921, 2363, 2923, 3273,
	2925, 4236, 953, 2917, 4025, 2918, 4425, 2941, 1580, 2943,
	1732, 1072, 1072, 2981, 3267, 4426, 2856, 1072, 3195, 2896,
	2934, 3792, 2866, 2900, 4041, 2901, 2407, 2877, 2044, 4349,
	1072, 1072, 1864, 2937, 3890, 1200, 1072, 1072, 2678, 3891,
	1307, 4302, 1072, 4340, 1307, 3933, 685, 1859, 2864, 1768,
	2521, 1072, 1072, 1072, 2380, 3029, 2566, 1072, 4524, 784,
	2845, 2425, 3272, 1653, 750, 1862, 2579, 1072, 2920, 2388,
	2049, 1014, 2919, 2680, 2050, 3517, 872, 2374, 2107, 1657,
	2982, 2947, 2679, 852, 1072, 2913, 2224, 2376, 3890, 1031,
	3893, 1687, 953, 3891, 4511, 3007, 3008, 2922, 2692, 2924,
	3011, 2926, 2218, 663, 1594, 1596, 3896, 2682, 1860, 3977,
	752, 2949, 2958, 748, 2948, 3003, 3663, 3786, 2987, 1288,
	3608, 2307, 3238, 3709, 3275, 1216, 3797, 2953, 2989, 3461,
	2950, 2944, 3707, 2945, 4024, 2968, 1698, 4264, 3152, 1612,
	954, 2080, 4394, 4460, 3893, 1721, 1719, 1720, 1712, 1713,
	1714, 1715, 1717, 1718, 4458, 865, 866, 1861, 4279, 2361,
	3896, 2679, 2364, 3276, 4157, 2681, 3742, 3090, 3091, 3377,
	3108, 3109, 3110, 4448, 1072, 1072, 1072, 3012, 664, 2149,
	1854, 1015, 1214, 1072, 1072, 1072, 2682, 3968, 1072, 955,
	2980, 1207, 654, 3436, 3722, 2676, 4501, 3841, 1072, 1194,
	1332, 4551, 3429, 1864, 1072, 2300, 1072, 2059, 4183, 3793,
	1697, 4100, 2360, 2310, 2060, 1194, 2085, 4099, 2564, 1863,
	3144, 3145, 2013, 665, 4300, 666, 3555, 3892, 4529, 4078,
	954, 3127, 3186, 1332, 2010, 3018, 1862, 4166, 4223, 1192,
	3743, 3710, 3105, 3436, 2681, 1194, 2045, 3146, 1332, 3689,
	3638, 4424, 3429, 1972, 3247, 1192, 2081, 3378, 2698, 3500,
	4175, 3179, 4301, 3709, 3899, 1927, 3166, 1478, 3913, 1332,
	4026, 3370, 3707, 4176, 3243, 3912, 2836, 2830, 2819, 955,
	1697, 3892, 2173, 1274, 1274, 1192, 2162, 2154, 2135, 2104,
	1006, 2712, 951, 1692, 1218, 4265, 3431, 725, 4502, 785,
	786, 3570, 4316, 3156, 4177, 3462, 1072, 4282, 2723, 2008,
	1696, 3430, 3180, 3623, 4069, 3879, 3242, 1008, 3899, 3175,
	1072, 3992, 3241, 853, 854, 2267, 3151, 2006, 3745, 3154,
	2753, 4504, 2816, 3096, 1768, 1915, 1229, 1697, 1927, 2301,
	3583, 867, 868, 2102, 4139, 3798, 3431, 3232, 3233, 2009,
	4137, 4080, 3223, 2209, 1434, 1434, 1072, 1274, 3122, 3123,
	3124, 3430, 1007, 3138, 4179, 2806, 3229, 3259, 2809, 3172,
	2811, 3257, 3184, 3155, 3261, 1698, 3191, 3255, 3164, 3216,
	1696, 3710, 2103, 3153, 3167, 3168, 4178, 3209, 3210, 3165,
	1863, 3842, 1274, 3254, 3111, 2973, 2362, 2951, 3205, 3427,
	3196, 1302, 1190, 4180, 3708, 3149, 952, 1332, 3148, 1627,
	3714, 3556, 2852, 1961, 1961, 2852, 1274, 1899, 1190, 3258,
	3557, 1274, 3263, 2603, 2602, 3265, 3799, 1921, 1434, 4528,
	3244, 3188, 3189, 3190, 1517, 3319, 3106, 1696, 3322, 788,
	787, 2601, 3327, 3329, 1274, 1698, 2600, 3170, 1518, 3171,
	1274, 2159, 1274, 3285, 1531, 3217, 1332, 2823, 3303, 1529,
	4230, 3270, 3308, 771, 3213, 870, 1330, 2079, 1012, 3705,
	1428, 3911, 1613, 3248, 1274, 3224, 2724, 2725, 3287, 3314,
	4134, 3230, 3288, 3959, 4088, 1274, 4266, 1961, 3299, 2927,
	2702, 3645, 3354, 2088, 3419, 2047, 3300, 789, 790, 3298,
	1921, 1194, 2171, 3363, 3624, 3345, 4469, 4261, 2557, 855,
	856, 4068, 3432, 3433, 3434, 3435, 2897, 2801, 3385, 3369,
	3324, 2086, 1961, 1189, 3323, 3331, 1274, 1274, 2890, 3330,
	3281, 3274, 2047, 4009, 2799, 1588, 3340, 2890, 3343, 1189,
	3292, 1192, 2560, 1924, 3708, 3295, 1961, 4326, 1274, 3293,
	3405, 1961, 3187, 3294, 4319, 4231, 3309, 4313, 3572, 3848,
	3315, 3383, 3432, 3433, 3434, 3435, 3325, 2432, 3212, 1189,
	3332, 3214, 3215, 2098, 3394, 3336, 3218, 724, 3219, 3107,
	3220, 2098, 4076, 2559, 4089, 3443, 1332, 3317, 2558, 1332,
	2087, 4344, 953, 3202, 3203, 1674, 3204, 4471, 1672, 2258,
	3339, 4008, 3305, 1670, 1649, 1647, 1623, 1621, 3120, 1619,
	3347, 2721, 3379, 4414, 1617, 1615, 1924, 777, 780, 3366,
	1072, 3367, 3386, 4250, 4047, 4077, 1072, 1072, 1609, 1604,
	1072, 1072, 1072, 1602, 1072, 3437, 3840, 1527, 4320, 4232,
	3713, 3119, 4181, 1072, 1927, 171, 171, 4182, 3421, 1015,
	1434, 3417, 1072, 1188, 3391, 1072, 3477, 3439, 3206, 1857,
	3084, 1332, 2992, 3400, 3403, 3404, 2820, 3393, 2755, 1188,
	1072, 2714, 2628, 1894, 3160, 3456, 3415, 1890, 1332, 3446,
	3455, 3447, 1675, 3448, 1566, 3458, 3457, 1530, 1927, 1927,
	1072, 1072, 1528, 1072, 1072, 1072, 1692, 2932, 869, 1188,
	2931, 2903, 2289, 3463, 2269, 3384, 3480, 3102, 3103, 3104,
	1636, 2233, 2134, 1954, 3101, 3099, 3100, 3092, 3093, 3094,
	3095, 3097, 3098, 3489, 3490, 1800, 1577, 3452, 1005, 3438,
	954, 1502, 2431, 4389, 3681, 1072, 1861, 3680, 3529, 1072,
	3934, 1927, 1927, 1072, 1072, 1072, 1072, 1072, 1072, 1072,
	1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072,
	1072, 1072, 3460, 1072, 3530, 3161, 3922, 4312, 963, 3990,
	1072, 1072, 1927, 3939, 3883, 1673, 2257, 1072, 1671, 955,
	3741, 4446, 1864, 1669, 1648, 1646, 1622, 1620, 1072, 1618,
	3318, 3733, 3485, 3453, 1616, 1614, 3694, 1859, 3657, 1194,
	1194, 3655, 3637, 1072, 3496, 3373, 1921, 3368, 1608, 1603,
	3503, 3505, 3506, 1601, 3159, 1862, 3512, 1526, 3359, 1080,
	3567, 2848, 2834, 2320, 3520, 1189, 2826, 3519, 2813, 2798,
	2644, 2639, 1332, 2133, 3527, 2131, 2114, 2099, 3528, 1192,
	1192, 2076, 2063, 2051, 1993, 3163, 1990, 1987, 1984, 1979,
	1921, 1921, 3601, 3588, 1977, 1973, 1964, 3497, 1860, 3382,
	4438, 1901, 1701, 3605, 3532, 255, 255, 255, 2971, 657,
	658, 1169, 673, 657, 673, 683, 2320, 3535, 723, 1072,
	3534, 3559, 741, 1915, 3326, 4462, 2014, 747, 4354, 2275,
	2108, 4014, 4007, 255, 4006, 3560, 3946, 3871, 1170, 2891,
	2033, 1483, 1072, 1921, 1921, 4168, 1893, 3563, 171, 2675,
	2675, 849, 2703, 3579, 3580, 4161, 3753, 255, 968, 970,
	972, 2170, 1924, 2223, 2673, 2700, 2059, 3568, 3576, 3577,
	1250, 1072, 1072, 2276, 1921, 1667, 1668, 2253, 2252, 4353,
	1249, 2230, 3604, 3915, 1708, 1709, 3277, 3278, 712, 3941,
	3279, 3162, 1600, 3590, 3632, 1188, 1915, 4203, 3574, 2972,
	3849, 3827, 3606, 3607, 1072, 3628, 1924, 1924, 1702, 1863,
	1708, 1709, 2726, 2707, 3666, 3591, 3618, 3619, 3620, 4465,
	1705, 1283, 1217, 4456, 668, 4419, 1274, 3310, 3311, 3688,
	2812, 3312, 2255, 3730, 3507, 248, 2155, 1294, 2760, 2107,
	2768, 1711, 4307, 2767, 1171, 1927, 1250, 3684, 2750, 1710,
	3687, 2709, 4274, 2752, 3671, 3673, 2711, 3526, 4271, 1924,
	1924, 764, 3641, 3682, 3690, 1250, 2751, 4229, 2035, 2710,
	1259, 4153, 3670, 820, 1274, 1710, 4132, 657, 657, 679,
	1072, 3732, 651, 3721, 3598, 255, 3372, 2855, 1194, 1072,
	1924, 2544, 3664, 1999, 1908, 4498, 4086, 4346, 3881, 1274,
	1274, 1274, 4347, 3762, 3755, 3880, 3634, 3239, 3194, 4527,
	1450, 2861, 3090, 3091, 1708, 1709, 1274, 2721, 4273, 2159,
	4346, 3819, 3712, 4475, 2427, 4347, 3610, 3747, 1192, 2667,
	2668, 1190, 3766, 2667, 3729, 1332, 3746, 3699, 2890, 1587,
	2665, 3700, 3749, 2460, 3728, 1586, 3750, 1190, 2665, 2666,
	1651, 4154, 3715, 1650, 4118, 3942, 3731, 3938, 1332, 3937,
	3815, 1072, 1072, 1189, 1189, 3739, 3609, 1072, 1072, 1927,
	2066, 3778, 1072, 1072, 3508, 1072, 3736, 1190, 3320, 1072,
	3248, 1794, 1793, 4513, 3621, 1780, 4480, 4311, 3622, 1785,
	1072, 3734, 2070, 4310, 4309, 4218, 4135, 4113, 3748, 3703,
	4067, 4064, 3711, 2126, 3751, 3756, 1072, 1921, 3970, 3757,
	3614, 3867, 3777, 3800, 3767, 3768, 3759, 3761, 3813, 3716,
	3773, 3653, 3769, 3648, 3775, 3772, 3376, 3375, 3264, 3776,
	3801, 3809, 3656, 3211, 3658, 3080, 3079, 3078, 3077, 3076,
	3075, 3074, 3073, 3072, 3071, 3070, 3069, 2067, 3789, 3068,
	3067, 3066, 3065, 2040, 3064, 3794, 3063, 3062, 3061, 2041,
	3060, 3059, 3058, 3057, 2929, 2910, 1194, 2909, 2908, 2840,
	2814, 2701, 2635, 2621, 1194, 2620, 2392, 2254, 1332, 2251,
	1332, 2250, 2249, 2248, 2247, 2168, 2144, 1194, 2140, 2139,
	2138, 2137, 2136, 1188, 1188, 1967, 1966, 3784, 3693, 1965,
	1963, 1666, 1915, 3179, 1332, 1665, 1192, 1610, 1497, 1496,
	1495, 1494, 1493, 1492, 1192, 1491, 1486, 1482, 1480, 1479,
	1323, 1322, 1321, 1924, 1320, 1319, 1287, 1192, 1286, 1236,
	1235, 1921, 1234, 1233, 1232, 1194, 3839, 1194, 1231, 1230,
	1228, 3872, 3873, 1223, 1222, 1221, 1915, 1915, 1220, 2071,
	3857, 3903, 1219, 3903, 1152, 2004, 974, 960, 4234, 3906,
	3897, 1660, 89, 1488, 807, 1332, 3860, 83, 2042, 2105,
	3916, 3652, 3851, 3852, 932, 1192, 1332, 1192, 3853, 3856,
	3850, 4343, 1472, 4256, 3877, 2046, 815, 171, 3855, 3861,
	4328, 3854, 3266, 2771, 3864, 2232, 1611, 2234, 3174, 1915,
	1915, 2586, 4299, 3823, 1274, 1274, 3846, 3943, 3028, 3944,
	4210, 4040, 1189, 2430, 1798, 2072, 2073, 3131, 85, 3917,
	1056, 1274, 3882, 1102, 3966, 3965, 3884, 3640, 2880, 2159,
	1915, 3963, 1332, 1190, 3960, 3962, 1912, 1274, 1914, 2068,
	3945, 1022, 1335, 3957, 4363, 2015, 1259, 1924, 3936, 1062,
	2031, 2024, 2622, 2504, 2043, 2048, 1079, 3907, 1076, 3955,
	2323, 1916, 1194, 3921, 3983, 1918, 3932, 1078, 1077, 2304,
	3918, 3919, 1274, 1274, 1274, 3929, 1917, 3931, 3903, 3930,
	2069, 3949, 1817, 1332, 4010, 1075, 1911, 3738, 3737, 3954,
	3994, 3956, 2822, 2859, 3401, 1072, 1072, 1072, 1536, 3993,
	1534, 934, 1192, 2019, 3988, 2386, 3961, 2414, 3017, 3997,
	1791, 1037, 4002, 1332, 1058, 2411, 3976, 3980, 1072, 1205,
	1212, 1072, 1072, 1047, 1036, 3979, 3157, 3136, 3388, 3995,
	3597, 1072, 2299, 824, 1927, 3087, 3982, 2044, 2417, 1072,
	1072, 1203, 1188, 2527, 2520, 2516, 3221, 2428, 4032, 2849,
	1678, 1961, 1225, 4054, 1332, 1770, 1274, 2860, 1317, 4019,
	4017, 1040, 4016, 4021, 255, 2384, 255, 255, 1782, 1254,
	255, 1264, 2997, 4037, 4027, 2309, 3395, 3177, 1332, 2049,
	2615, 4350, 1284, 2050, 4013, 3516, 1072, 2148, 1168, 1167,
	1189, 741, 1210, 2074, 1166, 1072, 4049, 4334, 1189, 4331,
	3770, 4043, 3352, 1072, 2007, 1927, 2659, 1760, 2522, 3360,
	1052, 1189, 1433, 1072, 3142, 255, 1072, 255, 255, 1254,
	3420, 255, 255, 1264, 1499, 1072, 4060, 4061, 746, 4093,
	4063, 1064, 1332, 2037, 255, 1759, 1452, 2792, 2791, 4226,
	1303, 4096, 2596, 1274, 1274, 1301, 1300, 4072, 1299, 3735,
	4487, 4549, 3649, 222, 2965, 4073, 1699, 1476, 4079, 1189,
	1691, 1189, 4112, 1915, 219, 221, 2075, 220, 4071, 3971,
	3602, 3183, 2038, 4417, 3668, 3344, 1501, 23, 1264, 4147,
	4123, 1332, 255, 255, 1274, 1254, 22, 21, 109, 42,
	3354, 4138, 20, 125, 143, 142, 1921, 117, 4114, 141,
	140, 139, 1194, 1194, 741, 138, 255, 255, 145, 4120,
	4152, 137, 136, 131, 4110, 4128, 3785, 135, 3903, 3903,
	1188, 1072, 1072, 4127, 4186, 4187, 4171, 4136, 1188, 849,
	4130, 1190, 1190, 134, 4131, 133, 4190, 4163, 1072, 1927,
	4102, 1188, 1192, 1192, 4146, 132, 4162, 4125, 130, 129,
	124, 4126, 128, 4159, 4165, 2045, 127, 126, 123, 4170,
	122, 4151, 3997, 4169, 4199, 4200, 4164, 1921, 4184, 121,
	120, 119, 1072, 118, 116, 1072, 115, 114, 113, 112,
	1434, 111, 1194, 110, 2670, 737, 1189, 1915, 734, 1188,
	61, 1188, 60, 108, 1194, 107, 19, 4202, 3903, 40,
	4222, 4208, 255, 14, 65, 4198, 66, 18, 13, 4167,
	3903, 35, 1924, 88, 99, 98, 4245, 36, 96, 95,
	255, 34, 1192, 4219, 4221, 4220, 17, 16, 15, 93,
	4115, 92, 33, 31, 1192, 1072, 1072, 4244, 11, 9,
	4239, 4238, 8, 37, 1878, 12, 1194, 5, 176, 1194,
	175, 178, 174, 1274, 177, 87, 173, 172, 86, 29,
	10, 168, 3903, 1274, 1274, 3903, 4148, 4252, 4276, 4254,
	3726, 4278, 80, 170, 1184, 1259, 169, 4290, 167, 166,
	1274, 4268, 4269, 1924, 165, 81, 1192, 4104, 4105, 1192,
	4272, 4267, 78, 164, 1072, 1072, 82, 163, 2390, 79,
	162, 1921, 27, 6, 1072, 64, 4283, 4284, 7, 4022,
	3440, 4119, 102, 1780, 4121, 4122, 1188, 103, 4288, 4289,
	250, 250, 653, 38, 76, 75, 4321, 4287, 74, 26,
	4286, 63, 4151, 4294, 4325, 4293, 25, 4303, 206, 1072,
	1072, 205, 1072, 204, 4304, 203, 202, 201, 1564, 196,
	195, 4308, 200, 198, 197, 199, 194, 209, 208, 214,
	213, 212, 4348, 4333, 4336, 4345, 211, 2526, 210, 207,
	216, 193, 192, 190, 186, 185, 4324, 4352, 4323, 189,
	1190, 191, 4337, 4372, 188, 4341, 4338, 187, 184, 4342,
	215, 1072, 1072, 1072, 4368, 160, 4373, 161, 3969, 71,
	159, 158, 4355, 157, 4295, 156, 4296, 4359, 155, 3981,
	4371, 154, 153, 4367, 70, 24, 4401, 1924, 657, 2,
	1072, 1, 4406, 0, 0, 0, 1189, 1189, 0, 0,
	0, 4001, 4388, 4387, 4385, 4386, 4366, 0, 0, 255,
	0, 255, 0, 0, 0, 255, 4420, 0, 4427, 0,
	4429, 0, 0, 0, 0, 4404, 0, 0, 1452, 1254,
	255, 0, 255, 0, 4441, 0, 0, 255, 1452, 673,
	2955, 0, 1072, 0, 255, 1452, 0, 0, 0, 4428,
	4431, 0, 4443, 4437, 0, 0, 4447, 0, 4436, 1968,
	4439, 4440, 4442, 0, 4253, 0, 4444, 0, 0, 4467,
	0, 255, 4463, 0, 0, 0, 1189, 4459, 255, 0,
	4457, 4453, 4454, 4455, 0, 0, 4466, 4435, 1189, 4468,
	0, 1194, 4481, 1194, 4485, 4333, 4482, 4474, 4336, 4477,
	4470, 0, 4402, 0, 0, 4493, 4492, 3903, 4352, 3903,
	0, 0, 0, 4484, 0, 4486, 0, 4489, 741, 4483,
	2522, 2522, 1915, 0, 0, 0, 1188, 1188, 1190, 0,
	0, 1192, 4505, 1192, 0, 4508, 1190, 0, 0, 0,
	1189, 0, 4506, 1189, 0, 0, 4515, 0, 0, 1190,
	4517, 0, 0, 0, 4514, 0, 0, 257, 4522, 1072,
	1072, 4519, 0, 0, 0, 0, 4521, 0, 1072, 0,
	1072, 1072, 0, 4525, 0, 0, 0, 4534, 4539, 4531,
	4538, 0, 4537, 0, 4543, 0, 4542, 0, 0, 0,
	0, 4540, 0, 1915, 0, 0, 4545, 1190, 0, 1190,
	4544, 4548, 0, 0, 4555, 2861, 1188, 0, 4541, 0,
	0, 4558, 4552, 4532, 4533, 4488, 4562, 0, 1188, 4554,
	4563, 0, 4556, 0, 4557, 1072, 0, 4565, 0, 4553,
	0, 4561, 0, 0, 0, 4572, 754, 4566, 0, 4568,
	0, 0, 0, 0, 0, 4569, 0, 4571, 0, 0,
	0, 0, 0, 0, 0, 0, 4512, 2040, 0, 0,
	0, 0, 0, 2041, 2522, 2522, 2522, 0, 4567, 3143,
	1188, 0, 255, 1188, 0, 255, 0, 0, 0, 0,
	2787, 0, 0, 4416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2779, 2777, 0, 0, 3182, 0, 0,
	2781, 2783, 2773, 0, 1190, 0, 0, 1915, 255, 0,
	0, 0, 255, 0, 0, 0, 0, 255, 3200, 0,
	0, 1035, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 759, 0, 0, 0, 0, 0, 255, 0,
	255, 0, 0, 0, 657, 0, 255, 0, 0, 0,
	0, 0, 2042, 0, 0, 0, 0, 0, 741, 4258,
	0, 0, 849, 0, 0, 0, 0, 0, 0, 2046,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2526,
	4275, 0, 0, 0, 0, 0, 0, 255, 0, 1254,
	255, 0, 0, 0, 0, 1189, 0, 1189, 0, 0,
	0, 0, 0, 839, 741, 0, 0, 0, 0, 0,
	0, 255, 0, 718, 0, 0, 0, 0, 2231, 0,
	2994, 2995, 0, 255, 255, 0, 255, 0, 255, 0,
	255, 72, 255, 842, 841, 0, 0, 761, 2043, 2048,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 2263, 0, 0, 2264, 0, 2265, 2526,
	2526, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 2775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2789, 0, 0, 0, 0,
	0, 0, 0, 723, 0, 0, 765, 741, 4356, 0,
	0, 4357, 0, 84, 0, 3182, 2788, 2780, 2778, 2782,
	2784, 2774, 2776, 2790, 0, 0, 0, 0, 0, 0,
	2786, 2044, 0, 0, 0, 1188, 0, 1188, 0, 1240,
	0, 1240, 1240, 0, 0, 0, 0, 0, 0, 0,
	843, 0, 0, 0, 1190, 1190, 0, 0, 0, 0,
	0, 0, 0, 2793, 104, 0, 0, 0, 0, 90,
	101, 0, 0, 2049, 3113, 3114, 3115, 2050, 756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1327, 0, 0, 0, 0, 0, 1432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 760, 0,
	0, 0, 0, 2526, 2526, 2526, 0, 0, 0, 0,
	0, 1268, 0, 0, 0, 91, 0, 3231, 0, 0,
	0, 0, 0, 0, 1190, 0, 0, 0, 0, 0,
	0, 717, 0, 0, 0, 1428, 1190, 0, 1330, 0,
	0, 0, 0, 0, 763, 0, 0, 0, 0, 0,
	758, 0, 0, 0, 657, 0, 0, 0, 0, 0,
	0, 0, 0, 1439, 0, 0, 0, 0, 0, 255,
	0, 1551, 1552, 0, 0, 0, 0, 0, 657, 3090,
	3091, 0, 3108, 3109, 3110, 255, 0, 657, 1190, 0,
	0, 1190, 0, 755, 1474, 0, 0, 0, 0, 255,
	0, 2522, 2522, 0, 0, 0, 1708, 1709, 0, 0,
	3493, 0, 0, 0, 255, 1264, 0, 0, 0, 1510,
	0, 762, 2794, 0, 0, 0, 0, 3509, 0, 0,
	1739, 2785, 0, 0, 0, 719, 0, 1711, 0, 2045,
	0, 0, 0, 0, 1550, 0, 757, 0, 0, 0,
	0, 0, 0, 0, 3105, 0, 0, 0, 94, 0,
	0, 255, 1264, 0, 673, 0, 0, 1659, 0, 0,
	0, 1710, 0, 0, 2634, 0, 0, 0, 0, 0,
	255, 1730, 0, 255, 0, 0, 0, 255, 0, 255,
	1727, 0, 0, 0, 1254, 0, 255, 255, 0, 1264,
	1264, 2650, 0, 0, 0, 0, 255, 0, 0, 179,
	97, 1589, 100, 2522, 2522, 2522, 2522, 2522, 2522, 2522,
	2522, 2522, 2522, 2522, 2522, 2522, 2522, 2522, 2522, 2522,
	2522, 2522, 0, 2522, 0, 0, 223, 0, 0, 0,
	0, 3804, 0, 0, 844, 3096, 0, 0, 0, 144,
	2690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 1733, 1734, 1735, 1736, 0, 72, 0, 0,
	0, 0, 1716, 255, 1035, 0, 0, 0, 1035, 0,
	225, 3600, 0, 73, 0, 0, 255, 0, 72, 0,
	0, 0, 0, 0, 1415, 0, 0, 0, 1415, 77,
	0, 0, 0, 0, 73, 0, 146, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 1738, 1740, 0, 0,
	77, 183, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 255, 2804, 0, 0, 0, 84,
	217, 0, 1725, 1726, 0, 0, 0, 0, 3106, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1452,
	84, 0, 255, 1190, 0, 1190, 0, 0, 0, 0,
	255, 840, 0, 0, 0, 1731, 843, 0, 0, 2844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2690,
	104, 657, 0, 0, 0, 90, 101, 843, 0, 0,
	2873, 849, 0, 2690, 2690, 0, 0, 0, 0, 0,
	1888, 104, 0, 0, 0, 0, 90, 101, 255, 0,
	0, 3473, 3474, 0, 0, 1897, 0, 1432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 1254, 255,
	0, 0, 0, 1452, 0, 1452, 1264, 255, 0, 0,
	1254, 91, 1254, 0, 1254, 0, 0, 0, 0, 0,
	2526, 2526, 0, 0, 0, 0, 1240, 0, 0, 0,
	0, 0, 91, 1432, 0, 0, 0, 0, 0, 0,
	255, 255, 255, 255, 1254, 0, 1254, 255, 0, 255,
	0, 3107, 0, 0, 0, 0, 0, 0, 1737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1732, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 3536, 3537, 3538, 3539, 3540, 3541, 3542,
	3543, 3544, 3545, 3546, 3547, 3548, 3549, 3550, 3551, 3552,
	3553, 3554, 0, 3558, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2526, 2526, 2526, 2526, 2526, 2526, 2526, 2526,
	2526, 2526, 2526, 2526, 2526, 2526, 2526, 2526, 2526, 2526,
	2526, 0, 2526, 0, 94, 2612, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 94, 0, 1452, 0, 3102,
	3103, 3104, 0, 0, 0, 0, 3101, 3099, 3100, 3092,
	3093, 3094, 3095, 3097, 3098, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 97, 0, 100, 0,
	1728, 1724, 0, 1721, 1719, 1720, 1712, 1713, 1714, 1715,
	1717, 1718, 0, 0, 0, 0, 179, 97, 0, 100,
	0, 0, 223, 0, 0, 0, 0, 0, 0, 0,
	844, 0, 0, 0, 0, 144, 0, 0, 0, 3859,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 144, 0, 0, 0,
	0, 0, 0, 3869, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 2146, 0, 0, 0, 2153, 0, 0,
	0, 0, 0, 0, 1415, 0, 0, 225, 2165, 0,
	0, 0, 146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2176, 0, 2176, 0, 183, 255, 0,
	0, 2183, 0, 146, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 217, 0, 183, 657,
	0, 0, 0, 0, 657, 218, 224, 657, 0, 0,
	657, 657, 0, 0, 0, 0, 657, 217, 0, 0,
	0, 0, 2153, 0, 255, 2206, 218, 1547, 0, 0,
	0, 0, 0, 0, 0, 0, 1452, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2226, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1452, 2239,
	0, 2241, 0, 2243, 0, 2245, 0, 2246, 2188, 255,
	1035, 0, 0, 255, 255, 0, 1415, 0, 0, 0,
	0, 0, 0, 0, 1268, 2201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2202, 0, 0, 0, 0,
	0, 0, 2690, 2690, 255, 2268, 3236, 2210, 0, 2213,
	2214, 2215, 1330, 0, 0, 2690, 0, 0, 3250, 0,
	0, 0, 0, 0, 0, 0, 2690, 3250, 0, 2690,
	3250, 0, 0, 3250, 0, 0, 0, 0, 0, 0,
	0, 0, 4038, 0, 0, 0, 255, 255, 3236, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3236,
	255, 0, 3302, 3302, 0, 1254, 0, 0, 0, 0,
	0, 2522, 0, 4038, 0, 0, 0, 0, 0, 0,
	2690, 0, 3321, 2690, 3236, 0, 0, 2690, 2690, 3236,
	0, 0, 0, 0, 0, 0, 0, 2323, 0, 0,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 2522, 0, 0, 0,
	0, 0, 255, 3348, 0, 0, 3350, 2690, 0, 0,
	255, 0, 0, 0, 255, 1856, 1264, 0, 0, 0,
	0, 2323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2844, 0, 0, 1254, 0,
	255, 0, 0, 2690, 0, 657, 0, 0, 0, 0,
	0, 0, 2690, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 2844, 0, 0, 2844, 0, 0,
	0, 0, 0, 0, 0, 1057, 106, 0, 0, 0,
	0, 0, 0, 0, 2593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3445, 0, 1708, 1709,
	0, 1741, 1742, 1743, 1751, 1752, 1753, 0, 0, 0,
	0, 0, 0, 3451, 72, 0, 1254, 255, 0, 255,
	0, 1744, 1739, 0, 0, 0, 0, 0, 0, 1711,
	73, 0, 0, 0, 0, 0, 0, 1757, 2522, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	0, 0, 0, 255, 1708, 1709, 0, 0, 0, 0,
	0, 0, 0, 1710, 0, 2636, 106, 0, 1240, 0,
	0, 0, 1240, 1730, 1240, 0, 0, 0, 1739, 0,
	0, 0, 1727, 0, 0, 1711, 84, 0, 0, 1021,
	0, 2165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3514,
	0, 0, 0, 0, 0, 0, 0, 0, 1415, 1710,
	0, 0, 0, 843, 0, 0, 0, 0, 0, 1730,
	0, 0, 0, 0, 0, 0, 0, 104, 1727, 0,
	0, 0, 90, 101, 0, 0, 0, 996, 0, 0,
	0, 4046, 0, 0, 1733, 1734, 1735, 1736, 1016, 0,
	0, 2651, 1268, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3476,
	2526, 0, 0, 0, 1432, 0, 0, 0, 91, 1748,
	0, 1178, 1758, 0, 0, 1415, 4082, 0, 1738, 1740,
	1733, 1734, 1735, 1736, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 1754, 0, 1755, 255, 255,
	0, 0, 0, 0, 1725, 1726, 0, 3090, 3091, 0,
	3108, 3109, 3110, 0, 0, 2526, 0, 2153, 0, 0,
	657, 657, 1746, 0, 0, 2165, 0, 0, 0, 0,
	3805, 0, 0, 0, 1738, 1740, 0, 1731, 0, 0,
	0, 0, 1452, 1452, 1415, 0, 0, 0, 0, 0,
	0, 0, 0, 2795, 0, 0, 1452, 1452, 1452, 0,
	1725, 1726, 0, 0, 0, 0, 0, 0, 0, 0,
	1415, 0, 0, 2902, 0, 0, 0, 0, 0, 1756,
	0, 0, 3105, 0, 0, 0, 0, 0, 0, 3302,
	0, 0, 2912, 1731, 2915, 0, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 0, 0, 0, 3090, 3091,
	0, 3108, 3109, 3110, 0, 0, 0, 0, 4207, 0,
	0, 0, 741, 0, 0, 2940, 1432, 2942, 1432, 0,
	0, 3482, 2946, 0, 0, 0, 0, 0, 0, 0,
	0, 2904, 0, 0, 0, 0, 0, 0, 3302, 0,
	1737, 0, 179, 97, 0, 100, 0, 2526, 0, 255,
	0, 0, 0, 3096, 0, 1240, 0, 0, 0, 0,
	1732, 0, 0, 2974, 0, 0, 0, 3236, 255, 223,
	0, 0, 0, 3105, 0, 0, 0, 844, 0, 255,
	0, 0, 144, 0, 0, 0, 1749, 0, 0, 255,
	0, 0, 1415, 0, 0, 0, 1737, 0, 255, 0,
	0, 0, 0, 255, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 225, 3111, 0, 1732, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2690, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 2873, 2873, 0, 146,
	0, 0, 849, 849, 2690, 0, 0, 0, 2844, 2844,
	0, 0, 849, 2690, 183, 0, 3106, 0, 1415, 0,
	0, 0, 224, 0, 3096, 0, 0, 0, 0, 0,
	0, 0, 255, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 1747, 0, 0, 0, 0, 1722, 1723,
	1729, 1750, 1728, 1724, 0, 1721, 1719, 1720, 1712, 1713,
	1714, 1715, 1717, 1718, 1545, 0, 0, 0, 3041, 0,
	0, 0, 3042, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3111, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3824, 0, 0, 0, 0, 1728, 1724,
	0, 1721, 1719, 1720, 1712, 1713, 1714, 1715, 1717, 1718,
	0, 0, 0, 0, 0, 0, 0, 3106, 0, 1279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1021, 0, 0, 0, 1021, 0, 0, 3107,
	0, 0, 0, 0, 0, 255, 1104, 0, 0, 0,
	0, 1452, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 1454, 0, 1460, 0, 1466, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2690, 2690, 0, 3302,
	0, 0, 0, 0, 0, 0, 0, 2690, 0, 0,
	0, 0, 0, 0, 3905, 0, 3905, 1452, 0, 0,
	0, 0, 0, 0, 1240, 2690, 0, 3250, 1432, 1432,
	1452, 1452, 255, 3236, 0, 0, 3090, 3091, 0, 3108,
	3109, 3110, 0, 0, 0, 3236, 255, 3236, 255, 1553,
	3107, 1558, 106, 0, 106, 0, 106, 0, 0, 3234,
	0, 1567, 2690, 1572, 2690, 255, 0, 3102, 3103, 3104,
	0, 0, 0, 0, 3101, 3099, 3100, 3092, 3093, 3094,
	3095, 3097, 3098, 0, 0, 0, 0, 0, 0, 2690,
	0, 0, 0, 0, 3973, 0, 0, 0, 0, 0,
	0, 3284, 3286, 255, 2165, 0, 1016, 106, 106, 0,
	0, 3105, 255, 0, 0, 0, 0, 0, 0, 0,
	106, 0, 106, 0, 0, 0, 1632, 0, 0, 1638,
	0, 0, 106, 0, 106, 0, 0, 0, 0, 0,
	0, 3905, 0, 0, 1452, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1195, 0, 0, 0, 0, 0, 3102, 3103,
	3104, 0, 0, 0, 0, 3101, 3099, 3100, 3092, 3093,
	3094, 3095, 3097, 3098, 0, 106, 0, 0, 0, 0,
	0, 0, 3096, 0, 0, 3361, 0, 0, 0, 3365,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 1762, 1763, 1764, 1765, 1766, 1767, 0, 0, 0,
	0, 3090, 3091, 0, 3108, 3109, 3110, 0, 0, 0,
	3112, 0, 0, 0, 0, 0, 0, 1415, 0, 0,
	0, 1779, 3333, 2690, 3481, 3250, 0, 1792, 4075, 0,
	0, 0, 0, 3111, 0, 0, 255, 0, 3416, 0,
	0, 0, 0, 4094, 0, 4094, 0, 0, 0, 0,
	1415, 0, 3364, 0, 996, 0, 0, 0, 0, 0,
	0, 0, 0, 3371, 741, 1415, 0, 0, 0, 0,
	0, 0, 0, 1254, 1773, 3106, 3105, 2497, 2498, 2499,
	2500, 2493, 2494, 2495, 2496, 0, 1415, 3236, 255, 0,
	0, 1778, 3454, 0, 1432, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 3411, 3412, 0, 4075, 0, 0,
	0, 0, 0, 0, 0, 2690, 0, 0, 0, 0,
	0, 0, 0, 1035, 0, 0, 0, 4156, 3466, 0,
	0, 0, 1850, 1850, 1850, 0, 0, 1035, 0, 1452,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3905, 3905, 0, 0, 0, 0, 2473, 2474, 2475,
	2476, 0, 0, 0, 0, 0, 0, 3096, 255, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2485, 2486, 2487, 2488, 2481, 2482, 2483, 2484, 2489, 2490,
	2491, 2492, 3514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3302, 0,
	3302, 0, 0, 0, 0, 1870, 4075, 1873, 3107, 106,
	0, 0, 0, 0, 1415, 0, 0, 0, 3111, 0,
	0, 3905, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3905, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2469, 2470, 2471, 2472, 2477, 2478, 2479,
	2480, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	3106, 0, 0, 1415, 0, 0, 0, 0, 1021, 0,
	0, 0, 0, 3973, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3905, 0, 255, 3905, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1452, 0, 1452, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3102, 3103, 3104, 0,
	0, 0, 0, 3101, 3099, 3100, 3092, 3093, 3094, 3095,
	3097, 3098, 0, 0, 0, 0, 0, 4317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4094, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2690, 1415, 0, 0, 1415, 0, 0, 0,
	0, 0, 0, 3107, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1452, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1195, 0, 0, 0, 1195, 1415, 0,
	0, 1195, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 2165, 0, 1415, 0, 0, 0, 0,
	0, 0, 0, 0, 2165, 0, 0, 0, 0, 0,
	0, 0, 1195, 0, 3725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2165, 4075,
	0, 0, 3740, 0, 0, 0, 0, 1195, 0, 0,
	0, 3102, 3103, 3104, 0, 0, 0, 0, 3101, 3099,
	3100, 3092, 3093, 3094, 3095, 3097, 3098, 1195, 0, 0,
	0, 0, 1195, 2690, 3697, 0, 0, 0, 0, 0,
	3905, 0, 3905, 0, 0, 1452, 1195, 0, 0, 0,
	0, 1016, 0, 1016, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3787, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1452, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1195,
	0, 0, 0, 0, 0, 0, 0, 3763, 3764, 3765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1415,
	0, 2873, 0, 0, 1268, 0, 0, 0, 0, 0,
	2690, 0, 2298, 0, 2302, 0, 0, 0, 0, 0,
	0, 2316, 0, 0, 0, 2873, 0, 0, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
	2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346,
	2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356,
	2357, 2358, 2359, 0, 2365, 0, 2367, 2368, 2369, 2370,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 0, 996, 0, 2394, 996,
	996, 72, 0, 46, 45, 0, 0, 0, 0, 1779,
	0, 0, 0, 2409, 0, 0, 0, 73, 0, 0,
	147, 0, 0, 0, 0, 0, 0, 0, 0, 2439,
	2442, 2445, 2448, 77, 2452, 2453, 2454, 2455, 2456, 2457,
	2458, 0, 0, 0, 67, 0, 0, 0, 0, 0,
	0, 48, 0, 149, 2383, 0, 0, 0, 0, 0,
	0, 0, 2518, 0, 2529, 2531, 2536, 0, 0, 0,
	1016, 47, 0, 84, 0, 0, 0, 3920, 0, 1778,
	0, 0, 0, 1778, 0, 0, 0, 0, 0, 0,
	0, 2165, 0, 0, 0, 0, 0, 50, 68, 0,
	0, 0, 0, 0, 0, 51, 0, 0, 0, 0,
	57, 0, 0, 0, 150, 0, 0, 0, 0, 0,
	0, 0, 49, 0, 104, 0, 0, 0, 0, 90,
	101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2165, 0,
	0, 0, 0, 0, 0, 1178, 1195, 3989, 1195, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	0, 1873, 1415, 1195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 91, 0, 0, 0, 0,
	1928, 0, 0, 0, 1195, 1415, 0, 0, 0, 0,
	0, 0, 1268, 0, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4018, 1195, 4020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4083, 0, 0, 0, 1415, 0, 1415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1415, 0, 0, 0, 53, 0, 0, 0, 0,
	106, 0, 0, 0, 4065, 2807, 2808, 0, 2810, 56,
	0, 0, 0, 2165, 59, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 0, 0, 0, 0, 58, 179,
	97, 0, 100, 0, 0, 0, 54, 0, 0, 106,
	151, 0, 0, 0, 0, 0, 0, 55, 0, 0,
	0, 0, 1415, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 0, 1415, 62, 0, 0, 0, 0, 144,
	1195, 1195, 0, 0, 106, 0, 0, 106, 0, 106,
	1195, 0, 0, 148, 0, 0, 0, 0, 0, 0,
	0, 4129, 0, 4197, 1432, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1415,
	0, 106, 0, 0, 106, 0, 146, 0, 0, 2928,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	1415, 0, 1195, 0, 1195, 0, 1195, 0, 0, 0,
	0, 1761, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 1195, 1195, 3, 0, 0, 0, 106, 0,
	1415, 0, 0, 1195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1195, 0, 1195, 1195, 1195,
	0, 0, 4277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2977, 2978, 0, 0,
	0, 1415, 2984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2998, 2999, 0, 0, 1415, 0, 2409, 0, 0,
	0, 0, 0, 0, 0, 0, 3006, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1035, 0, 0, 0, 0, 4327, 3032,
	2383, 1268, 1268, 0, 0, 0, 0, 0, 0, 1415,
	0, 0, 0, 0, 0, 0, 0, 0, 1268, 0,
	0, 1778, 0, 0, 0, 1928, 1928, 1195, 0, 0,
	0, 0, 0, 0, 4361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 1709, 0, 1741, 1742, 1743,
	1751, 1752, 1753, 0, 0, 0, 0, 0, 2536, 2536,
	2536, 0, 0, 0, 4421, 0, 0, 1744, 1739, 0,
	0, 0, 0, 1850, 1195, 1711, 0, 0, 0, 0,
	0, 3147, 0, 1757, 1708, 1709, 0, 1741, 1742, 1743,
	1751, 1752, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1739, 1710,
	1068, 0, 0, 0, 0, 1711, 0, 0, 0, 1730,
	0, 0, 0, 1757, 0, 0, 0, 0, 1727, 0,
	0, 0, 0, 0, 0, 0, 1195, 0, 0, 0,
	0, 0, 0, 1195, 1178, 0, 0, 0, 0, 1710,
	0, 0, 1195, 0, 0, 0, 254, 254, 254, 1730,
	1178, 0, 0, 0, 0, 0, 0, 0, 1727, 1195,
	0, 0, 1035, 1035, 0, 0, 0, 0, 0, 0,
	0, 1021, 0, 0, 778, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1021, 0, 0, 0, 0,
	1733, 1734, 1735, 1736, 0, 0, 0, 0, 778, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3269, 0, 0, 0, 0, 0, 0, 0, 0,
	1733, 1734, 1735, 1736, 0, 1748, 0, 0, 1758, 0,
	1716, 0, 0, 0, 1738, 1740, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1195,
	1195, 1754, 0, 1755, 0, 0, 0, 1035, 0, 0,
	1725, 1726, 0, 0, 0, 1748, 0, 0, 1758, 0,
	0, 0, 0, 0, 1738, 1740, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 106, 106, 0, 0, 106,
	0, 1195, 0, 1731, 0, 0, 0, 0, 0, 0,
	1725, 1726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1191, 0, 1746, 0,
	0, 0, 0, 1928, 0, 0, 106, 106, 0, 0,
	106, 0, 0, 1731, 0, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 1195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1195, 0, 0, 0, 1737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1178, 0, 0, 1016,
	0, 0, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 0, 1195, 106, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1195, 0, 1737, 0, 0, 0,
	0, 0, 1749, 0, 0, 0, 0, 0, 0, 1195,
	0, 0, 0, 0, 0, 2316, 1732, 0, 0, 0,
	0, 3468, 3469, 0, 0, 3472, 0, 0, 0, 3475,
	0, 0, 0, 0, 0, 0, 0, 0, 3479, 0,
	0, 0, 1749, 0, 0, 0, 0, 3486, 0, 0,
	3147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3521, 3522, 0, 3523, 3524,
	3525, 0, 0, 0, 0, 0, 0, 0, 0, 1747,
	0, 0, 0, 0, 1722, 1723, 1729, 1750, 1728, 1724,
	0, 1721, 1719, 1720, 1712, 1713, 1714, 1715, 1717, 1718,
	0, 0, 0, 0, 2405, 0, 0, 0, 2406, 0,
	3531, 0, 0, 0, 3533, 0, 0, 0, 0, 1747,
	0, 0, 0, 0, 1722, 1723, 1729, 1750, 1728, 1724,
	0, 1721, 1719, 1720, 1712, 1713, 1714, 1715, 1717, 1718,
	0, 0, 0, 0, 0, 3561, 3562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1708, 1709, 3582, 1741,
	1742, 1743, 1751, 1752, 1753, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1744,
	1739, 0, 0, 0, 0, 0, 0, 1711, 0, 0,
	0, 0, 0, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1710, 0, 0, 1178, 1178, 0, 0, 0, 0,
	0, 1730, 0, 0, 3625, 0, 0, 0, 0, 0,
	1727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3643, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3667, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 254, 254, 0,
	0, 254, 0, 0, 0, 1195, 1195, 0, 0, 0,
	0, 0, 1733, 1734, 1735, 1736, 0, 0, 0, 0,
	0, 1195, 1716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1195,
	0, 0, 0, 0, 0, 0, 254, 0, 254, 254,
	0, 1195, 254, 254, 1195, 0, 0, 1748, 0, 0,
	1758, 0, 0, 0, 0, 778, 1738, 1740, 0, 0,
	0, 1928, 0, 0, 0, 1195, 0, 0, 0, 0,
	0, 0, 0, 1754, 0, 1755, 0, 0, 0, 1195,
	1195, 0, 1725, 1726, 0, 1850, 0, 0, 0, 0,
	0, 0, 0, 0, 3758, 0, 0, 0, 0, 0,
	1746, 0, 0, 254, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 254, 0,
	0, 0, 0, 0, 1928, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1195, 0, 0, 0, 1756, 0, 0,
	0, 0, 0, 1178, 0, 0, 3802, 3803, 0, 0,
	0, 0, 3807, 3808, 0, 1745, 0, 3811, 3812, 0,
	0, 0, 0, 0, 3816, 0, 0, 0, 1195, 0,
	0, 0, 0, 0, 0, 3820, 0, 0, 1708, 1709,
	0, 0, 0, 1195, 0, 106, 0, 0, 0, 0,
	0, 3825, 1195, 0, 0, 0, 0, 1195, 0, 0,
	0, 0, 1739, 254, 0, 0, 0, 0, 0, 1711,
	0, 0, 0, 0, 0, 0, 0, 0, 1737, 0,
	1195, 254, 0, 0, 0, 0, 1195, 0, 1195, 0,
	0, 0, 1195, 0, 0, 0, 0, 0, 1732, 0,
	0, 0, 0, 1710, 0, 0, 0, 0, 0, 0,
	1195, 0, 0, 1730, 0, 0, 0, 0, 0, 0,
	0, 1195, 1727, 0, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1195, 1195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3471, 0, 106, 0, 0, 0, 0,
	0, 1178, 0, 0, 1195, 0, 0, 0, 0, 1178,
	0, 0, 0, 0, 1733, 1734, 1735, 1736, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1747, 1195, 0, 0, 1195, 1722, 1723, 1729, 1750,
	1728, 1724, 0, 1721, 1719, 1720, 1712, 1713, 1714, 1715,
	1717, 1718, 0, 0, 0, 0, 0, 0, 1738, 1740,
	3830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1725, 1726, 0, 0, 0, 0,
	1928, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1195, 0, 0,
	1872, 0, 1191, 0, 0, 0, 254, 1731, 0, 0,
	0, 0, 0, 0, 1195, 0, 0, 0, 0, 0,
	0, 254, 1872, 254, 1928, 1928, 0, 106, 778, 0,
	0, 0, 0, 0, 0, 778, 0, 0, 106, 0,
	4033, 4034, 4035, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 0, 254, 2316, 0, 0, 4044, 4045, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 1928, 1928, 0,
	0, 0, 0, 0, 4053, 4056, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 1709, 0, 0, 0, 0,
	1751, 1752, 1753, 0, 0, 0, 0, 0, 1928, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1739, 0,
	0, 0, 0, 0, 0, 1711, 0, 0, 0, 0,
	1737, 0, 0, 1757, 0, 1195, 1195, 0, 0, 0,
	4095, 0, 0, 0, 0, 0, 0, 0, 4101, 0,
	1732, 0, 0, 0, 0, 0, 0, 0, 4108, 1710,
	0, 1021, 0, 0, 0, 0, 0, 0, 1195, 1730,
	4116, 0, 0, 0, 0, 0, 0, 0, 1727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1733, 1734, 1735, 1736, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 254, 0, 0, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1728, 1724, 0, 1721, 1719, 1720, 1712, 1713,
	1714, 1715, 1717, 1718, 0, 1748, 0, 0, 1758, 0,
	0, 0, 0, 0, 1738, 1740, 0, 0, 0, 2383,
	0, 0, 0, 0, 0, 0, 0, 4225, 0, 254,
	4228, 0, 1195, 254, 0, 0, 0, 0, 254, 0,
	1725, 1726, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 1928, 0, 0, 0, 0, 0, 0, 1746, 254,
	0, 254, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 1731, 0, 0, 0, 0, 0, 0,
	1195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1021, 1021, 0, 0, 1195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1195, 1195, 1195, 254, 0,
	0, 254, 0, 0, 0, 1081, 0, 0, 0, 0,
	0, 0, 1195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 1195, 0, 0, 778, 254, 0, 254, 106, 254,
	2316, 254, 0, 254, 0, 0, 0, 0, 0, 4056,
	0, 256, 256, 256, 1195, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 1928, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 254, 0, 0, 0, 1021, 1737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 1732, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1708, 1709, 0, 1741, 1742, 1743, 1751, 1752, 1753, 0,
	0, 0, 1749, 0, 0, 0, 4384, 4384, 4384, 0,
	0, 0, 0, 1744, 1739, 0, 0, 0, 0, 0,
	0, 1711, 0, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 1195, 0, 0, 4405, 0, 0, 0, 0,
	1195, 0, 0, 0, 1195, 0, 1195, 106, 0, 0,
	106, 0, 0, 1195, 0, 1710, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1730, 0, 0, 0, 0,
	1195, 0, 0, 0, 1727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1747,
	0, 1195, 0, 1195, 0, 0, 0, 1750, 1728, 1724,
	0, 1721, 1719, 1720, 1712, 1713, 1714, 1715, 1717, 1718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1195, 0, 0, 0, 0, 0, 1708, 1709, 0,
	0, 0, 1195, 0, 0, 0, 1733, 1734, 1735, 1736,
	1191, 0, 0, 0, 0, 0, 1716, 0, 0, 0,
	0, 1739, 0, 0, 0, 0, 1191, 0, 1711, 0,
	1195, 1195, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 1195, 0, 0,
	0, 1748, 0, 0, 1758, 254, 0, 0, 1195, 0,
	1738, 1740, 1710, 1195, 4384, 4526, 0, 0, 0, 0,
	0, 0, 1730, 4530, 0, 0, 0, 1754, 0, 1755,
	0, 1727, 0, 0, 0, 0, 1725, 1726, 1195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1195, 1195,
	1195, 0, 254, 0, 1746, 0, 0, 0, 0, 1195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1731,
	0, 254, 0, 0, 254, 0, 0, 0, 254, 0,
	254, 0, 3470, 0, 0, 0, 0, 254, 254, 1195,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 1733, 1734, 1735, 1736, 0, 0, 0,
	1928, 1756, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	1195, 0, 1195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 1195, 0, 0, 1738, 1740, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 1928, 0, 1725, 1726, 0, 0, 0, 0, 0,
	0, 0, 1737, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 1195, 0,
	0, 0, 1732, 0, 0, 0, 1731, 0, 0, 1195,
	1195, 0, 0, 0, 0, 778, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 1195, 0, 0,
	1195, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1195, 1195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 1928, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	254, 0, 0, 0, 0, 1747, 0, 0, 254, 1737,
	1722, 1723, 1729, 1750, 1728, 1724, 0, 1721, 1719, 1720,
	1712, 1713, 1714, 1715, 1717, 1718, 0, 0, 1195, 1732,
	0, 0, 0, 0, 3484, 0, 0, 0, 0, 0,
	1195, 254, 254, 254, 254, 0, 0, 0, 254, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 256, 256, 0, 0, 256, 0, 1277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 1195, 0, 0, 1195, 0, 0, 0, 1195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1195,
	1195, 256, 1277, 256, 256, 0, 1277, 256, 256, 0,
	1277, 0, 0, 0, 0, 0, 1195, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1728, 1724, 0, 1721, 1719, 1720, 1712, 1713, 1714,
	1715, 1717, 1718, 0, 0, 0, 1277, 0, 256, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1277, 0, 0, 0,
	0, 1277, 256, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1277, 0, 0, 0, 0,
	0, 0, 1708, 1709, 0, 1741, 1742, 1743, 1751, 1752,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 1744, 1739, 0, 0, 0,
	0, 0, 0, 1711, 0, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 1277, 0,
	0, 1708, 1709, 0, 1741, 1742, 1743, 1751, 1752, 1753,
	0, 0, 0, 0, 0, 0, 0, 1710, 0, 0,
	0, 0, 0, 0, 1744, 1739, 0, 1730, 256, 0,
	0, 0, 1711, 0, 0, 0, 1727, 0, 0, 0,
	1757, 0, 0, 0, 0, 0, 256, 770, 0, 1191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1191, 1710, 0, 0, 0,
	0, 770, 0, 0, 0, 0, 1730, 0, 0, 0,
	0, 0, 0, 0, 0, 1727, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 1195, 0, 1195,
	0, 0, 0, 0, 0, 0, 0, 0, 1733, 1734,
	1735, 1736, 0, 0, 0, 0, 0, 0, 1716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 254, 254, 0, 0, 0, 0,
	0, 0, 0, 1748, 0, 0, 1758, 1733, 1734, 1735,
	1736, 0, 1738, 1740, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 1754,
	0, 1755, 0, 0, 0, 0, 0, 0, 1725, 1726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1708, 1709, 1748, 0, 0, 1758, 1746, 0, 0, 0,
	0, 1738, 1740, 0, 0, 0, 0, 254, 254, 0,
	254, 1731, 0, 0, 1739, 0, 0, 1872, 1754, 0,
	1755, 1711, 0, 0, 0, 0, 0, 1725, 1726, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 1710, 0, 0, 0, 0,
	1731, 256, 0, 0, 0, 1730, 0, 0, 0, 0,
	0, 1745, 1277, 0, 1727, 0, 256, 256, 256, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 254,
	256, 0, 0, 1277, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 778, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 254, 0, 256, 0, 0,
	1745, 0, 0, 0, 256, 2983, 0, 0, 0, 0,
	0, 0, 0, 0, 1737, 0, 0, 0, 0, 0,
	0, 1191, 0, 0, 0, 0, 1733, 1734, 1735, 1736,
	0, 0, 0, 0, 1732, 0, 1716, 0, 0, 1277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1277, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	1749, 0, 0, 1737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1277, 0, 0, 0, 0, 0,
	1738, 1740, 0, 1732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1725, 1726, 254, 1749,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1731,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 0,
	1073, 0, 1722, 1723, 1729, 1750, 1728, 1724, 0, 1721,
	1719, 1720, 1712, 1713, 1714, 1715, 1717, 1718, 0, 0,
	0, 0, 0, 0, 0, 0, 3044, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 1277,
	1277, 256, 0, 0, 0, 0, 1747, 0, 0, 1277,
	0, 1722, 1723, 1729, 1750, 1728, 1724, 0, 1721, 1719,
	1720, 1712, 1713, 1714, 1715, 1717, 1718, 0, 0, 0,
	0, 0, 0, 0, 0, 3043, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 256, 0,
	0, 0, 1737, 256, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1732, 0, 256, 0, 256, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 1277, 0, 1277, 0, 1277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1191,
	1191, 1277, 1277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1277, 256, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 1277, 0, 1277, 1277, 1277, 0,
	0, 0, 0, 0, 0, 0, 1275, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	256, 0, 256, 0, 256, 0, 256, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 0, 0, 0, 1333, 0, 0, 0, 1275, 0,
	0, 0, 0, 0, 1728, 1724, 256, 1721, 1719, 1720,
	1712, 1713, 1714, 1715, 1717, 1718, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 0, 1277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 1275,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1275, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 254, 0, 0, 0, 254, 0,
	0, 0, 0, 1277, 0, 0, 1275, 0, 1708, 1709,
	0, 1741, 1742, 1743, 1751, 1752, 1753, 0, 1191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1744, 1739, 0, 0, 0, 0, 0, 0, 1711,
	0, 0, 0, 0, 0, 0, 0, 1757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 1277, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1730, 0, 0, 0, 0, 0, 0,
	0, 0, 1727, 0, 0, 256, 0, 0, 1277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 1733, 1734, 1735, 1736, 0, 0,
	0, 0, 0, 0, 1716, 0, 256, 0, 0, 256,
	0, 0, 0, 256, 0, 256, 0, 0, 0, 0,
	0, 0, 256, 256, 0, 0, 1191, 0, 1277, 1277,
	0, 0, 256, 0, 1191, 0, 0, 0, 0, 1748,
	0, 0, 1758, 0, 0, 0, 0, 1872, 1738, 1740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 1755, 0, 0,
	1277, 0, 0, 0, 1725, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 1746, 0, 0, 1872, 0, 1872, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 1731, 0, 0,
	0, 0, 256, 254, 0, 0, 0, 0, 0, 0,
	1333, 0, 0, 0, 0, 0, 0, 254, 0, 254,
	0, 770, 0, 0, 0, 256, 1277, 0, 770, 0,
	0, 1275, 0, 0, 0, 0, 254, 0, 0, 1756,
	1277, 0, 0, 1276, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 256, 0,
	0, 1277, 0, 254, 0, 0, 256, 1334, 0, 0,
	0, 1334, 0, 0, 0, 1276, 0, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1275, 0,
	0, 1277, 1872, 0, 0, 0, 0, 0, 0, 0,
	1737, 0, 0, 1277, 0, 0, 1276, 0, 0, 0,
	0, 0, 1333, 0, 256, 0, 0, 0, 1277, 0,
	1732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1276, 0, 256, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 1749, 0, 0, 0,
	0, 1276, 0, 0, 0, 0, 1276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1276, 0, 0, 0, 0, 0, 256, 256, 256, 256,
	0, 0, 0, 256, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 254, 0, 0,
	0, 0, 0, 1276, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1275, 1275, 0,
	0, 0, 0, 1747, 0, 0, 0, 1333, 1722, 1723,
	1729, 1750, 1728, 1724, 0, 1721, 1719, 1720, 1712, 1713,
	1714, 1715, 1717, 1718, 0, 0, 0, 0, 0, 254,
	0, 0, 3040, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1708, 1709, 0, 1741, 1742, 1743, 1751, 1752,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1744, 1739, 0, 0, 0,
	0, 0, 0, 1711, 0, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1872, 1872, 0, 0, 0, 0, 0, 1275,
	0, 1275, 0, 1275, 0, 0, 0, 1710, 0, 254,
	254, 0, 0, 0, 0, 0, 0, 1730, 0, 1275,
	1275, 0, 0, 0, 0, 0, 1727, 0, 0, 0,
	1275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1275, 0, 1275, 1275, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 0, 0,
	0, 0, 1872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1733, 1734,
	1735, 1736, 0, 0, 0, 254, 0, 0, 1716, 0,
	0, 0, 0, 0, 0, 1277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1872, 0, 254, 1872,
	0, 0, 0, 1748, 0, 0, 1758, 0, 1277, 0,
	0, 0, 1738, 1740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1277, 1333, 0, 0, 1334, 0, 1754,
	0, 1755, 0, 0, 0, 0, 0, 0, 1725, 1726,
	0, 0, 0, 0, 1277, 0, 0, 0, 1276, 0,
	0, 1708, 1709, 0, 0, 0, 1746, 0, 1277, 1277,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 256,
	256, 1731, 0, 0, 0, 1739, 0, 0, 0, 0,
	0, 0, 1711, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1333, 0, 1756, 1276, 0, 1710, 0, 0, 0,
	254, 0, 0, 0, 0, 1276, 1730, 0, 0, 0,
	0, 1745, 1277, 0, 0, 1727, 0, 0, 0, 0,
	0, 0, 256, 256, 0, 256, 0, 0, 0, 1334,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 1277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 0, 1277, 0, 0, 0, 2976, 0, 0, 0,
	254, 1277, 0, 0, 1737, 0, 1277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1333, 1733, 1734, 1735,
	1736, 0, 0, 0, 1732, 0, 0, 1716, 0, 1277,
	0, 0, 0, 0, 256, 1277, 0, 1277, 0, 0,
	0, 1277, 0, 0, 0, 0, 0, 0, 256, 0,
	1749, 0, 0, 0, 0, 0, 256, 0, 0, 1277,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1277, 1738, 1740, 0, 0, 0, 0, 0, 0, 0,
	0, 1872, 0, 1872, 1276, 1276, 0, 0, 0, 0,
	0, 0, 0, 0, 1334, 0, 0, 1725, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1277, 1277, 0, 0, 0, 1275, 1275, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1731, 0, 0, 1277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 0,
	0, 0, 1722, 1723, 1729, 1750, 1728, 1724, 1333, 1721,
	1719, 1720, 1712, 1713, 1714, 1715, 1717, 1718, 0, 0,
	0, 1277, 0, 256, 1277, 256, 3039, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1276, 0, 1276, 0,
	1276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1276, 1276, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 1276, 0, 0,
	0, 0, 0, 0, 1333, 0, 0, 0, 0, 1276,
	0, 1276, 1276, 1276, 0, 0, 1708, 1709, 1275, 1741,
	1742, 1743, 1751, 1752, 1753, 0, 1277, 0, 0, 0,
	0, 0, 0, 1737, 0, 0, 0, 0, 0, 1744,
	1739, 0, 0, 1277, 0, 0, 0, 1711, 0, 0,
	0, 0, 0, 1732, 0, 1757, 0, 0, 0, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1708, 1709, 0, 1741, 1742, 1743, 1751, 1752,
	1753, 1710, 0, 0, 0, 0, 0, 0, 0, 1275,
	0, 1730, 0, 0, 0, 1744, 1739, 0, 0, 0,
	1727, 1275, 0, 1711, 0, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1334, 0, 0, 0, 0, 0, 1710, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1730, 0, 0,
	0, 0, 0, 0, 0, 0, 1727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1733, 1734, 1735, 1736, 0, 0, 0, 0,
	0, 0, 1716, 0, 0, 1728, 1724, 0, 1721, 1719,
	1720, 1712, 1713, 1714, 1715, 1717, 1718, 1277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1748, 1334, 0,
	1758, 0, 0, 0, 0, 0, 1738, 1740, 1733, 1734,
	1735, 1736, 0, 0, 0, 0, 0, 0, 1716, 0,
	0, 0, 0, 1754, 0, 1755, 0, 0, 0, 0,
	0, 0, 1725, 1726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 1748, 0, 0, 1758, 0, 0, 0,
	0, 0, 1738, 1740, 0, 1731, 0, 1334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1754,
	0, 1755, 0, 0, 0, 0, 0, 0, 1725, 1726,
	0, 0, 0, 1334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 1756, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 1731, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 1277, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 1756, 256, 0, 0, 0, 0, 256,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 1277,
	0, 1745, 0, 0, 0, 0, 0, 0, 1737, 0,
	0, 0, 0, 1276, 1276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1277, 1277, 1277, 0, 1732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1333, 1749, 1334, 0, 0, 256, 0,
	1277, 0, 0, 0, 1737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1277, 1732, 0, 1333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1334, 1333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1276, 1275, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 0, 0, 1722, 1723, 1729, 1750,
	1728, 1724, 0, 1721, 1719, 1720, 1712, 1713, 1714, 1715,
	1717, 1718, 0, 0, 0, 0, 1276, 0, 0, 0,
	3038, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1277, 0, 1277, 1276, 1747, 0, 0,
	1275, 0, 1722, 1723, 1729, 1750, 1728, 1724, 1276, 1721,
	1719, 1720, 1712, 1713, 1714, 1715, 1717, 1718, 0, 1277,
	0, 0, 0, 1276, 0, 0, 2406, 0, 0, 0,
	0, 0, 0, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 0, 0, 0, 0, 0, 0, 0, 0, 1275,
	0, 0, 0, 0, 1275, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1277, 0, 256, 0, 256, 0, 0, 1275, 0, 0,
	0, 1277, 0, 1275, 0, 1275, 0, 0, 0, 1333,
	0, 256, 0, 0, 0, 0, 770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1275, 0, 1277,
	1277, 0, 0, 0, 0, 0, 0, 0, 1275, 0,
	0, 0, 0, 0, 0, 0, 1277, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 1277, 256, 0,
	0, 0, 1277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1275,
	1275, 0, 0, 0, 0, 0, 0, 0, 1708, 1709,
	0, 0, 0, 0, 0, 0, 0, 1277, 1277, 1277,
	0, 1275, 0, 0, 0, 0, 0, 0, 1277, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 1711,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1277, 1333,
	0, 0, 1333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1710, 1708, 1709, 0, 1741, 1742, 1743,
	1751, 1752, 1753, 1730, 0, 0, 0, 0, 0, 0,
	0, 0, 1727, 0, 0, 0, 0, 1744, 1739, 1277,
	0, 1277, 0, 0, 0, 1711, 0, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1277, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 1333, 0, 0, 0, 0, 1710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1730,
	0, 1333, 0, 0, 0, 0, 0, 0, 1727, 0,
	0, 0, 0, 0, 1733, 1734, 1735, 1736, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 1277, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 1277, 1277,
	1334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1738, 1740,
	0, 0, 0, 1334, 0, 0, 1277, 0, 0, 1277,
	1733, 1734, 1735, 1736, 0, 0, 0, 0, 1334, 0,
	1716, 0, 0, 0, 1725, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1334,
	0, 0, 0, 0, 256, 256, 0, 0, 0, 0,
	0, 0, 0, 1276, 1276, 1748, 0, 1731, 1758, 0,
	0, 0, 0, 0, 1738, 1740, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 1755, 0, 1333, 0, 0, 0, 0,
	1725, 1726, 0, 0, 703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 0, 0,
	687, 0, 0, 1731, 0, 0, 0, 1276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 688, 0,
	0, 0, 1276, 0, 0, 1756, 0, 0, 0, 689,
	0, 0, 0, 256, 0, 0, 0, 1334, 1277, 0,
	1737, 0, 0, 1745, 0, 0, 1276, 0, 1277, 1277,
	690, 1276, 0, 0, 0, 0, 0, 0, 0, 0,
	1732, 0, 0, 0, 0, 1277, 0, 0, 0, 0,
	709, 0, 0, 0, 1276, 0, 0, 0, 0, 0,
	1276, 0, 1276, 0, 0, 0, 1334, 0, 0, 691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1275,
	0, 0, 0, 0, 1276, 0, 1737, 0, 0, 0,
	0, 0, 692, 0, 0, 1276, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 0, 0, 693, 0, 0, 694, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1275, 0, 0,
	0, 718, 1749, 0, 0, 256, 1276, 1276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1275, 1275, 1275, 708, 0, 0, 1276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1275,
	0, 0, 1728, 1724, 0, 1721, 1719, 1720, 1712, 1713,
	1714, 1715, 1717, 1718, 0, 0, 0, 0, 1333, 0,
	0, 0, 0, 0, 0, 0, 1334, 0, 0, 1334,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 1333, 0, 0, 705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1747,
	0, 0, 0, 0, 1722, 1723, 1729, 1750, 1728, 1724,
	0, 1721, 1719, 1720, 1712, 1713, 1714, 1715, 1717, 1718,
	0, 0, 0, 0, 4314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1708,
	1709, 1334, 1741, 1742, 1743, 1751, 1752, 1753, 0, 0,
	0, 715, 0, 696, 0, 0, 0, 0, 1334, 0,
	0, 0, 1744, 1739, 0, 0, 0, 0, 0, 0,
	1711, 0, 0, 0, 0, 0, 0, 0, 1757, 0,
	0, 716, 0, 697, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1333, 0, 1333, 1710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1730, 0, 0, 0, 0, 717,
	0, 0, 0, 1727, 0, 0, 698, 1333, 0, 0,
	713, 714, 711, 0, 0, 0, 0, 0, 706, 0,
	0, 699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	700, 707, 0, 0, 0, 0, 0, 0, 1333, 0,
	701, 0, 0, 0, 0, 1733, 1734, 1735, 1736, 1333,
	0, 0, 0, 0, 702, 1716, 0, 0, 0, 710,
	0, 0, 1334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 719, 0, 0, 0, 1275, 1275, 0,
	0, 0, 0, 0, 704, 0, 0, 0, 0, 0,
	1748, 0, 0, 1758, 1275, 0, 0, 0, 0, 1738,
	1740, 0, 0, 0, 0, 1333, 0, 0, 0, 0,
	1275, 0, 0, 0, 0, 0, 1754, 0, 1755, 0,
	0, 0, 0, 0, 0, 1725, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 1275, 1275, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 1333, 0, 1731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1276, 0, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 1333, 0, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1708,
	1709, 1333, 1741, 1742, 1743, 1751, 1752, 1753, 0, 0,
	0, 0, 0, 0, 1276, 0, 0, 0, 0, 0,
	0, 0, 1744, 1739, 0, 0, 0, 0, 0, 0,
	1711, 1737, 0, 0, 0, 0, 0, 0, 1757, 1276,
	1276, 1276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 1333, 1276, 0, 0, 0,
	0, 0, 0, 0, 1710, 0, 1275, 1275, 0, 0,
	0, 0, 0, 0, 1730, 1334, 0, 1749, 0, 0,
	0, 0, 0, 1727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1334, 0,
	0, 0, 0, 0, 1333, 0, 0, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1733, 1734, 1735, 1736, 0,
	0, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 0, 0, 1722,
	1723, 1729, 1750, 1728, 1724, 0, 1721, 1719, 1720, 1712,
	1713, 1714, 1715, 1717, 1718, 0, 0, 0, 0, 4240,
	1748, 0, 0, 1758, 0, 0, 0, 0, 0, 1738,
	1740, 0, 0, 0, 0, 0, 0, 0, 1334, 0,
	1334, 0, 906, 0, 951, 0, 1754, 0, 1755, 0,
	0, 0, 0, 0, 0, 1725, 1726, 0, 0, 0,
	0, 0, 0, 0, 1334, 0, 0, 0, 0, 914,
	0, 0, 0, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 928, 912, 911, 1731, 0,
	0, 0, 0, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1275, 1275, 0, 0,
	0, 0, 0, 0, 913, 0, 0, 0, 0, 916,
	0, 0, 0, 1275, 959, 1334, 0, 0, 0, 0,
	1756, 0, 0, 925, 926, 0, 1334, 0, 0, 0,
	0, 0, 942, 0, 0, 0, 0, 0, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 952, 918,
	0, 0, 0, 0, 1276, 1276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1276, 0, 0, 0, 919, 0, 0, 0, 0,
	0, 0, 1334, 0, 950, 0, 0, 1276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 1276, 1276, 1276, 0, 0, 921, 0, 0,
	0, 0, 0, 1334, 0, 910, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1749, 0, 0,
	0, 0, 0, 922, 923, 0, 0, 0, 0, 0,
	0, 0, 0, 1334, 0, 0, 0, 0, 0, 0,
	0, 0, 930, 929, 0, 0, 0, 0, 0, 0,
	924, 0, 0, 0, 939, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 956, 949, 1334, 0, 1276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1334, 0,
	0, 0, 0, 0, 953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 0, 0, 1722,
	1723, 1729, 1750, 1728, 1724, 0, 1721, 1719, 1720, 1712,
	1713, 1714, 1715, 1717, 1718, 0, 0, 0, 0, 4206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1334, 0, 0, 917, 0, 0, 958, 0,
	0, 0, 0, 1276, 1276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	915, 0, 0, 0, 946, 947, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 948, 0, 0,
	0, 1334, 0, 0, 1276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 944, 0,
	0, 0, 0, 0, 0, 957, 940, 0, 933, 931,
	0, 936, 0, 0, 0, 0, 0, 937, 0, 0,
	908, 0, 954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 909, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 938, 0, 0, 0, 0,
	935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 955, 0, 0, 0, 0, 0, 0, 0, 941,
	0, 0, 0, 0, 0, 0, 0, 0, 920, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 945, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1331,
	0, 0, 0, 1276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1276, 1276, 0, 264, 266, 265, 267,
	268, 269, 270, 271, 1336, 272, 273, 1337, 1338, 1339,
	1276, 1340, 599, 1341, 1342, 1343, 1344, 274, 275, 1135,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 1345, 604, 283, 284, 285, 286, 287, 288,
	1346, 1347, 0, 289, 605, 606, 607, 1348, 290, 291,
	608, 1349, 1278, 1350, 292, 293, 294, 295, 296, 297,
	298, 0, 1351, 300, 301, 302, 299, 303, 1352, 304,
	0, 305, 306, 307, 308, 309, 310, 1353, 311, 312,
	313, 1136, 314, 315, 1354, 1355, 1357, 1356, 1358, 1359,
	1360, 316, 317, 318, 319, 0, 320, 609, 610, 1361,
	324, 321, 322, 1362, 325, 323, 1363, 326, 327, 328,
	1364, 1365, 329, 330, 331, 1366, 332, 333, 1367, 334,
	335, 336, 1368, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 1369,
	261, 1370, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 1371, 355, 1372, 1373, 1137, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 1374, 366, 617, 1375, 618, 367, 1376, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 1139, 373, 374,
	1377, 375, 376, 377, 378, 0, 0, 0, 262, 379,
	380, 381, 383, 1378, 1138, 382, 622, 623, 1379, 624,
	1380, 384, 385, 1140, 625, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	1381, 396, 398, 397, 1382, 399, 626, 1143, 400, 401,
	1144, 1383, 402, 0, 0, 0, 403, 404, 407, 1384,
	1385, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 1386, 263, 1147, 446, 447,
	1387, 627, 448, 628, 450, 451, 1388, 0, 452, 0,
	1389, 1390, 454, 455, 456, 1391, 1392, 457, 458, 629,
	1148, 459, 1149, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 1393, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 1394, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 1395, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 1396, 507, 508,
	509, 1150, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	1397, 530, 531, 529, 532, 533, 534, 1398, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 1399, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 1400,
	558, 559, 0, 556, 1401, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 1402, 568, 640, 641, 642, 643,
	1403, 577, 1404, 569, 570, 571, 644, 572, 645, 1405,
	573, 574, 575, 576, 0, 578, 579, 1406, 1407, 580,
	581, 582, 584, 585, 583, 586, 1408, 587, 1409, 0,
	588, 589, 590, 646, 647, 648, 1410, 592, 591, 593,
	649, 1411, 1412, 1413, 1414, 594, 595, 650, 596, 597,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1331, 0, 0, 0, 0,
	0, 0, 0, 2571, 0, 0, 0, 0, 0, 0,
	0, 2572, 264, 266, 265, 267, 268, 269, 270, 271,
	1336, 272, 273, 1337, 1338, 1339, 0, 1340, 599, 1341,
	1342, 1343, 1344, 274, 275, 1135, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 1345, 604,
	283, 284, 285, 286, 287, 288, 1346, 1347, 0, 289,
	605, 606, 607, 1348, 290, 291, 608, 1349, 1278, 1350,
	292, 293, 294, 295, 296, 297, 298, 0, 1351, 300,
	301, 302, 299, 303, 1352, 304, 0, 305, 306, 307,
	308, 309, 310, 1353, 311, 312, 313, 1136, 314, 315,
	1354, 1355, 1357, 1356, 1358, 1359, 1360, 316, 317, 318,
	319, 0, 320, 609, 610, 1361, 324, 321, 322, 1362,
	325, 323, 1363, 326, 327, 328, 1364, 1365, 329, 330,
	331, 1366, 332, 333, 1367, 334, 335, 336, 1368, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 1369, 261, 1370, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	1371, 355, 1372, 1373, 1137, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 1374, 366, 617,
	1375, 618, 367, 1376, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 1139, 373, 374, 1377, 375, 376, 377,
	378, 0, 0, 0, 262, 379, 380, 381, 383, 1378,
	1138, 382, 622, 623, 1379, 624, 1380, 384, 385, 1140,
	625, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 1381, 396, 398, 397,
	1382, 399, 626, 1143, 400, 401, 1144, 1383, 402, 0,
	0, 0, 403, 404, 407, 1384, 1385, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 1386, 263, 1147, 446, 447, 1387, 627, 448, 628,
	450, 451, 1388, 0, 452, 0, 1389, 1390, 454, 455,
	456, 1391, 1392, 457, 458, 629, 1148, 459, 1149, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 1393, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 1394, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 1395, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 1396, 507, 508, 509, 1150, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 1397, 530, 531, 529,
	532, 533, 534, 1398, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	1399, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 1400, 558, 559, 0, 556,
	1401, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	1402, 568, 640, 641, 642, 643, 1403, 577, 1404, 569,
	570, 571, 644, 572, 645, 1405, 573, 574, 575, 576,
	0, 578, 579, 1406, 1407, 580, 581, 582, 584, 585,
	583, 586, 1408, 587, 1409, 0, 588, 589, 590, 646,
	647, 648, 1410, 592, 591, 593, 649, 1411, 1412, 1413,
	1414, 594, 595, 650, 596, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1331,
	0, 0, 0, 0, 3492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3494, 264, 266, 265, 267,
	268, 269, 270, 271, 1336, 272, 273, 1337, 1338, 1339,
	0, 1340, 599, 1341, 1342, 1343, 1344, 274, 275, 1135,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 1345, 604, 283, 284, 285, 286, 287, 288,
	1346, 1347, 0, 289, 605, 606, 607, 1348, 290, 291,
	608, 1349, 1278, 1350, 292, 293, 294, 295, 296, 297,
	298, 0, 1351, 300, 301, 302, 299, 303, 1352, 304,
	0, 305, 306, 307, 308, 309, 310, 1353, 311, 312,
	313, 1136, 314, 315, 1354, 1355, 1357, 1356, 1358, 1359,
	1360, 316, 317, 318, 319, 0, 320, 609, 610, 1361,
	324, 321, 322, 1362, 325, 323, 1363, 326, 327, 328,
	1364, 1365, 329, 330, 331, 1366, 332, 333, 1367, 334,
	335, 336, 1368, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 1369,
	261, 1370, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 1371, 355, 1372, 1373, 1137, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 1374, 366, 617, 1375, 618, 367, 1376, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 1139, 373, 374,
	1377, 375, 376, 377, 378, 0, 0, 0, 262, 379,
	380, 381, 383, 1378, 1138, 382, 622, 623, 1379, 624,
	1380, 384, 385, 1140, 625, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	1381, 396, 398, 397, 1382, 399, 626, 1143, 400, 401,
	1144, 1383, 402, 0, 0, 0, 403, 404, 407, 1384,
	1385, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 1386, 263, 1147, 446, 447,
	1387, 627, 448, 628, 450, 451, 1388, 0, 452, 0,
	1389, 1390, 454, 455, 456, 1391, 1392, 457, 458, 629,
	1148, 459, 1149, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 1393, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 1394, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 1395, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 1396, 507, 508,
	509, 1150, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	1397, 530, 531, 529, 532, 533, 534, 1398, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 1399, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 1400,
	558, 559, 0, 556, 1401, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 1402, 568, 640, 641, 642, 643,
	1403, 577, 1404, 569, 570, 571, 644, 572, 645, 1405,
	573, 574, 575, 576, 0, 578, 579, 1406, 1407, 580,
	581, 582, 584, 585, 583, 586, 1408, 587, 1409, 0,
	588, 589, 590, 646, 647, 648, 1410, 592, 591, 593,
	649, 1411, 1412, 1413, 1414, 594, 595, 650, 596, 597,
	598, 0, 0, 0, 0, 0, 0, 1331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3858, 264, 266, 265, 267, 268, 269,
	270, 271, 1336, 272, 273, 1337, 1338, 1339, 0, 1340,
	599, 1341, 1342, 1343, 1344, 274, 275, 1135, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	1345, 604, 283, 284, 285, 286, 287, 288, 1346, 1347,
	0, 289, 605, 606, 607, 1348, 290, 291, 608, 1349,
	1278, 1350, 292, 293, 294, 295, 296, 297, 298, 0,
	1351, 300, 301, 302, 299, 303, 1352, 304, 0, 305,
	306, 307, 308, 309, 310, 1353, 311, 312, 313, 1136,
	314, 315, 1354, 1355, 1357, 1356, 1358, 1359, 1360, 316,
	317, 318, 319, 0, 320, 609, 610, 1361, 324, 321,
	322, 1362, 325, 323, 1363, 326, 327, 328, 1364, 1365,
	329, 330, 331, 1366, 332, 333, 1367, 334, 335, 336,
	1368, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 1369, 261, 1370,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 1371, 355, 1372, 1373, 1137, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 1374,
	366, 617, 1375, 618, 367, 1376, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 1139, 373, 374, 1377, 375,
	376, 377, 378, 0, 0, 0, 262, 379, 380, 381,
	383, 1378, 1138, 382, 622, 623, 1379, 624, 1380, 384,
	385, 1140, 625, 1141, 386, 387, 388, 1142, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 1381, 396,
	398, 397, 1382, 399, 626, 1143, 400, 401, 1144, 1383,
	402, 0, 0, 0, 403, 404, 407, 1384, 1385, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1145, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1146, 436, 1386, 263, 1147, 446, 447, 1387, 627,
	448, 628, 450, 451, 1388, 0, 452, 0, 1389, 1390,
	454, 455, 456, 1391, 1392, 457, 458, 629, 1148, 459,
	1149, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 1393, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 1394,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 1395, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 1396, 507, 508, 509, 1150,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 1397, 530,
	531, 529, 532, 533, 534, 1398, 535, 536, 519, 520,
	537, 538, 1151, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 1399, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 1400, 558, 559,
	0, 556, 1401, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 1402, 568, 640, 641, 642, 643, 1403, 577,
	1404, 569, 570, 571, 644, 572, 645, 1405, 573, 574,
	575, 576, 0, 578, 579, 1406, 1407, 580, 581, 582,
	584, 585, 583, 586, 1408, 587, 1409, 0, 588, 589,
	590, 646, 647, 648, 1410, 592, 591, 593, 649, 1411,
	1412, 1413, 1414, 594, 595, 650, 596, 597, 598, 0,
	1331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4039, 264, 266, 265,
	267, 268, 269, 270, 271, 1336, 272, 273, 1337, 1338,
	1339, 0, 1340, 599, 1341, 1342, 1343, 1344, 274, 275,
	1135, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 1345, 604, 283, 284, 285, 286, 287,
	288, 1346, 1347, 0, 289, 605, 606, 607, 1348, 290,
	291, 608, 1349, 1278, 1350, 292, 293, 294, 295, 296,
	297, 298, 0, 1351, 300, 301, 302, 299, 303, 1352,
	304, 0, 305, 306, 307, 308, 309, 310, 1353, 311,
	312, 313, 1136, 314, 315, 1354, 1355, 1357, 1356, 1358,
	1359, 1360, 316, 317, 318, 319, 0, 320, 609, 610,
	1361, 324, 321, 322, 1362, 325, 323, 1363, 326, 327,
	328, 1364, 1365, 329, 330, 331, 1366, 332, 333, 1367,
	334, 335, 336, 1368, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	1369, 261, 1370, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 1371, 355, 1372, 1373, 1137,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 1374, 366, 617, 1375, 618, 367, 1376, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 1139, 373,
	374, 1377, 375, 376, 377, 378, 0, 0, 0, 262,
	379, 380, 381, 383, 1378, 1138, 382, 622, 623, 1379,
	624, 1380, 384, 385, 1140, 625, 1141, 386, 387, 388,
	1142, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 1381, 396, 398, 397, 1382, 399, 626, 1143, 400,
	401, 1144, 1383, 402, 0, 0, 0, 403, 404, 407,
	1384, 1385, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1145, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1146, 436, 1386, 263, 1147, 446,
	447, 1387, 627, 448, 628, 450, 451, 1388, 0, 452,
	0, 1389, 1390, 454, 455, 456, 1391, 1392, 457, 458,
	629, 1148, 459, 1149, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 1393, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 1394, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 1395, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 1396, 507,
	508, 509, 1150, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 1397, 530, 531, 529, 532, 533, 534, 1398, 535,
	536, 519, 520, 537, 538, 1151, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 1399, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	1400, 558, 559, 0, 556, 1401, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 1402, 568, 640, 641, 642,
	643, 1403, 577, 1404, 569, 570, 571, 644, 572, 645,
	1405, 573, 574, 575, 576, 0, 578, 579, 1406, 1407,
	580, 581, 582, 584, 585, 583, 586, 1408, 587, 1409,
	0, 588, 589, 590, 646, 647, 648, 1410, 592, 591,
	593, 649, 1411, 1412, 1413, 1414, 594, 595, 650, 596,
	597, 598, 0, 1331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3928,
	264, 266, 265, 267, 268, 269, 270, 271, 1336, 272,
	273, 1337, 1338, 1339, 0, 1340, 599, 1341, 1342, 1343,
	1344, 274, 275, 1135, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 1345, 604, 283, 284,
	285, 286, 287, 288, 1346, 1347, 0, 289, 605, 606,
	607, 1348, 290, 291, 608, 1349, 1278, 1350, 292, 293,
	294, 295, 296, 297, 298, 0, 1351, 300, 301, 302,
	299, 303, 1352, 304, 0, 305, 306, 307, 308, 309,
	310, 1353, 311, 312, 313, 1136, 314, 315, 1354, 1355,
	1357, 1356, 1358, 1359, 1360, 316, 317, 318, 319, 0,
	320, 609, 610, 1361, 324, 321, 322, 1362, 325, 323,
	1363, 326, 327, 328, 1364, 1365, 329, 330, 331, 1366,
	332, 333, 1367, 334, 335, 336, 1368, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 1369, 261, 1370, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 1371, 355,
	1372, 1373, 1137, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 1374, 366, 617, 1375, 618,
	367, 1376, 368, 369, 370, 371, 372, 619, 620, 621,
	449, 1139, 373, 374, 1377, 375, 376, 377, 378, 0,
	0, 0, 262, 379, 380, 381, 383, 1378, 1138, 382,
	622, 623, 1379, 624, 1380, 384, 385, 1140, 625, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 1381, 396, 398, 397, 1382, 399,
	626, 1143, 400, 401, 1144, 1383, 402, 0, 0, 0,
	403, 404, 407, 1384, 1385, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 1386,
	263, 1147, 446, 447, 1387, 627, 448, 628, 450, 451,
	1388, 0, 452, 0, 1389, 1390, 454, 455, 456, 1391,
	1392, 457, 458, 629, 1148, 459, 1149, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 1393,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 1394, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 1395, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 1396, 507, 508, 509, 1150, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 1397, 530, 531, 529, 532, 533,
	534, 1398, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 1399, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 1400, 558, 559, 0, 556, 1401, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 1402, 568,
	640, 641, 642, 643, 1403, 577, 1404, 569, 570, 571,
	644, 572, 645, 1405, 573, 574, 575, 576, 0, 578,
	579, 1406, 1407, 580, 581, 582, 584, 585, 583, 586,
	1408, 587, 1409, 0, 588, 589, 590, 646, 647, 648,
	1410, 592, 591, 593, 649, 1411, 1412, 1413, 1414, 594,
	595, 650, 596, 597, 598, 0, 1331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3788, 264, 266, 265, 267, 268, 269, 270,
	271, 1336, 272, 273, 1337, 1338, 1339, 0, 1340, 599,
	1341, 1342, 1343, 1344, 274, 275, 1135, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 1345,
	604, 283, 284, 285, 286, 287, 288, 1346, 1347, 0,
	289, 605, 606, 607, 1348, 290, 291, 608, 1349, 1278,
	1350, 292, 293, 294, 295, 296, 297, 298, 0, 1351,
	300, 301, 302, 299, 303, 1352, 304, 0, 305, 306,
	307, 308, 309, 310, 1353, 311, 312, 313, 1136, 314,
	315, 1354, 1355, 1357, 1356, 1358, 1359, 1360, 316, 317,
	318, 319, 0, 320, 609, 610, 1361, 324, 321, 322,
	1362, 325, 323, 1363, 326, 327, 328, 1364, 1365, 329,
	330, 331, 1366, 332, 333, 1367, 334, 335, 336, 1368,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 1369, 261, 1370, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 1371, 355, 1372, 1373, 1137, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 1374, 366,
	617, 1375, 618, 367, 1376, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 1139, 373, 374, 1377, 375, 376,
	377, 378, 0, 0, 0, 262, 379, 380, 381, 383,
	1378, 1138, 382, 622, 623, 1379, 624, 1380, 384, 385,
	1140, 625, 1141, 386, 387, 388, 1142, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 1381, 396, 398,
	397, 1382, 399, 626, 1143, 400, 401, 1144, 1383, 402,
	0, 0, 0, 403, 404, 407, 1384, 1385, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 1145, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	1146, 436, 1386, 263, 1147, 446, 447, 1387, 627, 448,
	628, 450, 451, 1388, 0, 452, 0, 1389, 1390, 454,
	455, 456, 1391, 1392, 457, 458, 629, 1148, 459, 1149,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 1393, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 1394, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 1395, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 1396, 507, 508, 509, 1150, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 1397, 530, 531,
	529, 532, 533, 534, 1398, 535, 536, 519, 520, 537,
	538, 1151, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 1399, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 1400, 558, 559, 0,
	556, 1401, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 1402, 568, 640, 641, 642, 643, 1403, 577, 1404,
	569, 570, 571, 644, 572, 645, 1405, 573, 574, 575,
	576, 0, 578, 579, 1406, 1407, 580, 581, 582, 584,
	585, 583, 586, 1408, 587, 1409, 0, 588, 589, 590,
	646, 647, 648, 1410, 592, 591, 593, 649, 1411, 1412,
	1413, 1414, 594, 595, 650, 596, 597, 598, 0, 1331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3510, 264, 266, 265, 267,
	268, 269, 270, 271, 1336, 272, 273, 1337, 1338, 1339,
	0, 1340, 599, 1341, 1342, 1343, 1344, 274, 275, 1135,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 1345, 604, 283, 284, 285, 286, 287, 288,
	1346, 1347, 0, 289, 605, 606, 607, 1348, 290, 291,
	608, 1349, 1278, 1350, 292, 293, 294, 295, 296, 297,
	298, 0, 1351, 300, 301, 302, 299, 303, 1352, 304,
	0, 305, 306, 307, 308, 309, 310, 1353, 311, 312,
	313, 1136, 314, 315, 1354, 1355, 1357, 1356, 1358, 1359,
	1360, 316, 317, 318, 319, 0, 320, 609, 610, 1361,
	324, 321, 322, 1362, 325, 323, 1363, 326, 327, 328,
	1364, 1365, 329, 330, 331, 1366, 332, 333, 1367, 334,
	335, 336, 1368, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 1369,
	261, 1370, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 1371, 355, 1372, 1373, 1137, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 1374, 366, 617, 1375, 618, 367, 1376, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 1139, 373, 374,
	1377, 375, 376, 377, 378, 0, 0, 0, 262, 379,
	380, 381, 383, 1378, 1138, 382, 622, 623, 1379, 624,
	1380, 384, 385, 1140, 625, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	1381, 396, 398, 397, 1382, 399, 626, 1143, 400, 401,
	1144, 1383, 402, 0, 0, 0, 403, 404, 407, 1384,
	1385, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 1386, 263, 1147, 446, 447,
	1387, 627, 448, 628, 450, 451, 1388, 0, 452, 0,
	1389, 1390, 454, 455, 456, 1391, 1392, 457, 458, 629,
	1148, 459, 1149, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 1393, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 1394, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 1395, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 1396, 507, 508,
	509, 1150, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	1397, 530, 531, 529, 532, 533, 534, 1398, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 1399, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 1400,
	558, 559, 0, 556, 1401, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 1402, 568, 640, 641, 642, 643,
	1403, 577, 1404, 569, 570, 571, 644, 572, 645, 1405,
	573, 574, 575, 576, 0, 578, 579, 1406, 1407, 580,
	581, 582, 584, 585, 583, 586, 1408, 587, 1409, 0,
	588, 589, 590, 646, 647, 648, 1410, 592, 591, 593,
	649, 1411, 1412, 1413, 1414, 594, 595, 650, 596, 597,
	598, 0, 1331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3346, 264,
	266, 265, 267, 268, 269, 270, 271, 1336, 272, 273,
	1337, 1338, 1339, 0, 1340, 599, 1341, 1342, 1343, 1344,
	274, 275, 1135, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 1345, 604, 283, 284, 285,
	286, 287, 288, 1346, 1347, 0, 289, 605, 606, 607,
	1348, 290, 291, 608, 1349, 1278, 1350, 292, 293, 294,
	295, 296, 297, 298, 0, 1351, 300, 301, 302, 299,
	303, 1352, 304, 0, 305, 306, 307, 308, 309, 310,
	1353, 311, 312, 313, 1136, 314, 315, 1354, 1355, 1357,
	1356, 1358, 1359, 1360, 316, 317, 318, 319, 0, 320,
	609, 610, 1361, 324, 321, 322, 1362, 325, 323, 1363,
	326, 327, 328, 1364, 1365, 329, 330, 331, 1366, 332,
	333, 1367, 334, 335, 336, 1368, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 1369, 261, 1370, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 1371, 355, 1372,
	1373, 1137, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 1374, 366, 617, 1375, 618, 367,
	1376, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	1139, 373, 374, 1377, 375, 376, 377, 378, 0, 0,
	0, 262, 379, 380, 381, 383, 1378, 1138, 382, 622,
	623, 1379, 624, 1380, 384, 385, 1140, 625, 1141, 386,
	387, 388, 1142, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 1381, 396, 398, 397, 1382, 399, 626,
	1143, 400, 401, 1144, 1383, 402, 0, 0, 0, 403,
	404, 407, 1384, 1385, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1145, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1146, 436, 1386, 263,
	1147, 446, 447, 1387, 627, 448, 628, 450, 451, 1388,
	0, 452, 0, 1389, 1390, 454, 455, 456, 1391, 1392,
	457, 458, 629, 1148, 459, 1149, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 1393, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 1394, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	1395, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	1396, 507, 508, 509, 1150, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 1397, 530, 531, 529, 532, 533, 534,
	1398, 535, 536, 519, 520, 537, 538, 1151, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 1399, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 1400, 558, 559, 0, 556, 1401, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 1402, 568, 640,
	641, 642, 643, 1403, 577, 1404, 569, 570, 571, 644,
	572, 645, 1405, 573, 574, 575, 576, 0, 578, 579,
	1406, 1407, 580, 581, 582, 584, 585, 583, 586, 1408,
	587, 1409, 0, 588, 589, 590, 646, 647, 648, 1410,
	592, 591, 593, 649, 1411, 1412, 1413, 1414, 594, 595,
	650, 596, 597, 598, 0, 1331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2429, 264, 266, 265, 267, 268, 269, 270, 271,
	1336, 272, 273, 1337, 1338, 1339, 0, 1340, 599, 1341,
	1342, 1343, 1344, 274, 275, 1135, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 1345, 604,
	283, 284, 285, 286, 287, 288, 1346, 1347, 0, 289,
	605, 606, 607, 1348, 290, 291, 608, 1349, 1278, 1350,
	292, 293, 294, 295, 296, 297, 298, 0, 1351, 300,
	301, 302, 299, 303, 1352, 304, 0, 305, 306, 307,
	308, 309, 310, 1353, 311, 312, 313, 1136, 314, 315,
	1354, 1355, 1357, 1356, 1358, 1359, 1360, 316, 317, 318,
	319, 0, 320, 609, 610, 1361, 324, 321, 322, 1362,
	325, 323, 1363, 326, 327, 328, 1364, 1365, 329, 330,
	331, 1366, 332, 333, 1367, 334, 335, 336, 1368, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 1369, 261, 1370, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	1371, 355, 1372, 1373, 1137, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 1374, 366, 617,
	1375, 618, 367, 1376, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 1139, 373, 374, 1377, 375, 376, 377,
	378, 0, 0, 0, 262, 379, 380, 381, 383, 1378,
	1138, 382, 622, 623, 1379, 624, 1380, 384, 385, 1140,
	625, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 1381, 396, 398, 397,
	1382, 399, 626, 1143, 400, 401, 1144, 1383, 402, 0,
	0, 0, 403, 404, 407, 1384, 1385, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 1386, 263, 1147, 446, 447, 1387, 627, 448, 628,
	450, 451, 1388, 0, 452, 0, 1389, 1390, 454, 455,
	456, 1391, 1392, 457, 458, 629, 1148, 459, 1149, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 1393, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 1394, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 1395, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 1396, 507, 508, 509, 1150, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 1397, 530, 531, 529,
	532, 533, 534, 1398, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	1399, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 1400, 558, 559, 0, 556,
	1401, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	1402, 568, 640, 641, 642, 643, 1403, 577, 1404, 569,
	570, 571, 644, 572, 645, 1405, 573, 574, 575, 576,
	0, 578, 579, 1406, 1407, 580, 581, 582, 584, 585,
	583, 586, 1408, 587, 1409, 0, 588, 589, 590, 646,
	647, 648, 1410, 592, 591, 593, 649, 1411, 1412, 1413,
	1414, 594, 595, 650, 596, 597, 598, 1426, 0, 1331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2127, 0, 264, 266, 265, 267,
	268, 269, 270, 271, 1336, 272, 273, 1337, 1338, 1339,
	0, 1340, 599, 1341, 1342, 1343, 1344, 274, 275, 1135,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 1345, 604, 283, 284, 285, 286, 287, 288,
	1346, 1347, 0, 289, 605, 606, 607, 1348, 290, 291,
	608, 1349, 1278, 1350, 292, 293, 294, 295, 296, 297,
	298, 0, 1351, 300, 301, 302, 299, 303, 1352, 304,
	0, 305, 306, 307, 308, 309, 310, 1353, 311, 312,
	313, 1136, 314, 315, 1354, 1355, 1357, 1356, 1358, 1359,
	1360, 316, 317, 318, 319, 0, 320, 609, 610, 1361,
	324, 321, 322, 1362, 325, 323, 1363, 326, 327, 328,
	1364, 1365, 329, 330, 331, 1366, 332, 333, 1367, 334,
	335, 336, 1368, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 1369,
	261, 1370, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 1371, 355, 1372, 1373, 1137, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 1374, 366, 617, 1375, 618, 367, 1376, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 1139, 373, 374,
	1377, 375, 376, 377, 378, 0, 0, 0, 262, 379,
	380, 381, 383, 1378, 1138, 382, 622, 623, 1379, 624,
	1380, 384, 385, 1140, 625, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	1381, 396, 398, 397, 1382, 399, 626, 1143, 400, 401,
	1144, 1383, 402, 0, 0, 0, 403, 404, 407, 1384,
	1385, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 1386, 263, 1147, 446, 447,
	1387, 627, 448, 628, 450, 451, 1388, 0, 452, 0,
	1389, 1390, 454, 455, 456, 1391, 1392, 457, 458, 629,
	1148, 459, 1149, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 1393, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 1394, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 1395, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 1396, 507, 508,
	509, 1150, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	1397, 530, 531, 529, 532, 533, 534, 1398, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 1399, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 1400,
	558, 559, 0, 556, 1401, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 1402, 568, 640, 641, 642, 643,
	1403, 577, 1404, 569, 570, 571, 644, 572, 645, 1405,
	573, 574, 575, 576, 0, 578, 579, 1406, 1407, 580,
	581, 582, 584, 585, 583, 586, 1408, 587, 1409, 0,
	588, 589, 590, 646, 647, 648, 1410, 592, 591, 593,
	649, 1411, 1412, 1413, 1414, 594, 595, 650, 596, 597,
	598, 1328, 0, 1331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 266, 265, 267, 268, 269, 270, 271, 1336, 272,
	273, 1337, 1338, 1339, 0, 1340, 599, 1341, 1342, 1343,
	1344, 274, 275, 1135, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 1345, 604, 283, 284,
	285, 286, 287, 288, 1346, 1347, 0, 289, 605, 606,
	607, 1348, 290, 291, 608, 1349, 1278, 1350, 292, 293,
	294, 295, 296, 297, 298, 0, 1351, 300, 301, 302,
	299, 303, 1352, 304, 0, 305, 306, 307, 308, 309,
	310, 1353, 311, 312, 313, 1136, 314, 315, 1354, 1355,
	1357, 1356, 1358, 1359, 1360, 316, 317, 318, 319, 0,
	320, 609, 610, 1361, 324, 321, 322, 1362, 325, 323,
	1363, 326, 327, 328, 1364, 1365, 329, 330, 331, 1366,
	332, 333, 1367, 334, 335, 336, 1368, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 1369, 261, 1370, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 1371, 355,
	1372, 1373, 1137, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 1374, 366, 617, 1375, 618,
	367, 1376, 368, 369, 370, 371, 372, 619, 620, 621,
	449, 1139, 373, 374, 1377, 375, 376, 377, 378, 0,
	0, 0, 262, 379, 380, 381, 383, 1378, 1138, 382,
	622, 623, 1379, 624, 1380, 384, 385, 1140, 625, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 1381, 396, 398, 397, 1382, 399,
	626, 1143, 400, 401, 1144, 1383, 402, 0, 0, 0,
	403, 404, 407, 1384, 1385, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 1386,
	263, 1147, 446, 447, 1387, 627, 448, 628, 450, 451,
	1388, 0, 452, 0, 1389, 1390, 454, 455, 456, 1391,
	1392, 457, 458, 629, 1148, 459, 1149, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 1393,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 1394, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 1395, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 1396, 507, 508, 509, 1150, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 1397, 530, 531, 529, 532, 533,
	534, 1398, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 1399, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 1400, 558, 559, 0, 556, 1401, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 1402, 568,
	640, 641, 642, 643, 1403, 577, 1404, 569, 570, 571,
	644, 572, 645, 1405, 573, 574, 575, 576, 0, 578,
	579, 1406, 1407, 580, 581, 582, 584, 585, 583, 586,
	1408, 587, 1409, 0, 588, 589, 590, 646, 647, 648,
	1410, 592, 591, 593, 649, 1411, 1412, 1413, 1414, 594,
	595, 650, 596, 597, 598, 1331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 266, 265, 267, 268, 269, 270, 271,
	1336, 272, 273, 1337, 1338, 1339, 0, 1340, 599, 1341,
	1342, 1343, 1344, 274, 275, 1135, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 1345, 604,
	283, 284, 285, 286, 287, 288, 1346, 1347, 0, 289,
	605, 606, 607, 1348, 290, 291, 608, 1349, 1278, 1350,
	292, 293, 294, 295, 296, 297, 298, 0, 1351, 300,
	301, 302, 299, 303, 1352, 304, 0, 305, 306, 307,
	308, 309, 310, 1353, 311, 312, 313, 1136, 314, 315,
	1354, 1355, 1357, 1356, 1358, 1359, 1360, 316, 317, 318,
	319, 0, 320, 609, 610, 1361, 324, 321, 322, 1362,
	325, 323, 1363, 326, 327, 328, 1364, 1365, 329, 330,
	331, 1366, 332, 333, 1367, 334, 335, 336, 1368, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 1369, 261, 1370, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	1371, 355, 1372, 1373, 1137, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 1374, 366, 617,
	1375, 618, 367, 1376, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 1139, 373, 374, 1377, 375, 376, 377,
	378, 0, 0, 0, 262, 379, 380, 381, 383, 1378,
	1138, 382, 622, 623, 1379, 624, 1380, 384, 385, 1140,
	625, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 1381, 396, 398, 397,
	1382, 399, 626, 1143, 400, 401, 1144, 1383, 402, 0,
	0, 0, 403, 404, 407, 1384, 1385, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 1386, 263, 1147, 446, 447, 1387, 627, 448, 628,
	450, 451, 1388, 0, 452, 0, 1389, 1390, 454, 455,
	456, 1391, 1392, 457, 458, 629, 1148, 459, 1149, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 1393, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 1394, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 1395, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 1396, 507, 508, 509, 1150, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 1397, 530, 531, 529,
	532, 533, 534, 1398, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	1399, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 1400, 558, 559, 0, 556,
	1401, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	1402, 568, 640, 641, 642, 643, 1403, 577, 1404, 569,
	570, 571, 644, 572, 645, 1405, 573, 574, 575, 576,
	0, 578, 579, 1406, 1407, 580, 581, 582, 584, 585,
	583, 586, 1408, 587, 1409, 0, 588, 589, 590, 646,
	647, 648, 1410, 592, 591, 593, 649, 1411, 1412, 1413,
	1414, 594, 595, 650, 596, 597, 598, 2404, 0, 1071,
	1043, 1044, 1045, 1041, 1042, 1054, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 266, 265, 267,
	268, 269, 270, 271, 2401, 272, 273, 0, 0, 0,
	0, 0, 1095, 1059, 0, 0, 0, 274, 275, 1135,
	276, 277, 278, 279, 280, 600, 1108, 0, 281, 1115,
	282, 1114, 0, 1125, 283, 284, 285, 286, 287, 288,
	1061, 1094, 1028, 289, 1155, 1156, 607, 0, 290, 291,
	1101, 0, 1082, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086,
	1090, 316, 317, 318, 319, 1118, 320, 1112, 1111, 1032,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	2402, 0, 329, 1103, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 1038, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 1126, 1127, 350, 1050,
	261, 0, 0, 0, 0, 0, 351, 352, 353, 1110,
	0, 0, 0, 354, 0, 355, 0, 0, 1137, 356,
	357, 1123, 1124, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 1133, 0, 1060, 367, 0, 368, 369,
	370, 371, 372, 1096, 1097, 1100, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 262, 379,
	380, 381, 383, 0, 1138, 382, 1105, 1106, 0, 1066,
	0, 384, 385, 1140, 1098, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 1134, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 1089,
	1088, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 1029, 263, 1147, 446, 447,
	1051, 1099, 448, 1113, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 1128, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 1129, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 1109, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 1039, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 1092, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 1107, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 1154, 551, 552, 553, 554, 1130, 557, 0,
	558, 559, 1027, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 1119, 1120, 1121, 1122,
	0, 577, 0, 569, 570, 571, 1131, 572, 1132, 1049,
	573, 574, 575, 576, 0, 578, 579, 0, 1033, 580,
	581, 582, 584, 585, 583, 586, 1093, 587, 0, 0,
	588, 589, 590, 646, 1116, 1153, 2400, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 1030, 0, 0, 0, 0, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 0, 1024, 1025, 2403, 0,
	0, 0, 0, 0, 0, 1055, 2399, 0, 1017, 1053,
	1071, 1043, 1044, 1045, 1041, 1042, 1054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 266, 265,
	267, 268, 269, 270, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 274, 275,
	1135, 276, 277, 278, 279, 280, 600, 1108, 0, 281,
	1115, 282, 1114, 0, 1125, 283, 284, 285, 286, 287,
	288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0, 290,
	291, 1101, 0, 1082, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087,
	1086, 1090, 316, 317, 318, 319, 1118, 320, 1112, 1111,
	1032, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1103, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1038, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1126, 1127, 350,
	1050, 261, 0, 0, 0, 0, 0, 351, 352, 353,
	1110, 0, 0, 0, 354, 0, 355, 0, 0, 1137,
	356, 357, 1123, 1124, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1133, 0, 1060, 367, 0, 368,
	369, 370, 371, 372, 1096, 1097, 1100, 449, 1139, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 262,
	379, 380, 381, 383, 0, 1138, 382, 1105, 1106, 0,
	1066, 0, 384, 385, 1140, 1098, 1141, 386, 387, 388,
	1142, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1134, 1143, 400,
	401, 1144, 0, 402, 0, 0, 0, 403, 404, 407,
	1089, 1088, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1145, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1146, 436, 1029, 263, 1147, 446,
	447, 1051, 1099, 448, 1113, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1148, 459, 1149, 1128, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1129, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1109, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1150, 510, 511, 512, 513, 1039, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 223, 530, 531, 529, 532, 533, 534, 1092, 535,
	536, 519, 520, 537, 538, 1151, 539, 540, 541, 542,
	543, 544, 1107, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1154, 551, 552, 553, 554, 1130, 557,
	0, 558, 559, 1027, 556, 225, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1119, 1120, 1121,
	1122, 0, 577, 0, 569, 570, 571, 1131, 572, 1132,
	1049, 573, 574, 575, 576, 0, 578, 579, 0, 1033,
	580, 581, 582, 584, 585, 583, 586, 1093, 587, 0,
	0, 588, 589, 590, 1543, 1116, 1153, 0, 592, 591,
	593, 649, 0, 0, 0, 217, 594, 595, 650, 596,
	597, 598, 1030, 0, 218, 0, 0, 0, 0, 0,
	1026, 0, 0, 0, 0, 0, 0, 1024, 1025, 1071,
	1043, 1044, 1045, 1041, 1042, 1054, 1783, 1781, 0, 0,
	1053, 0, 0, 0, 0, 0, 264, 266, 265, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 1095, 1059, 0, 0, 0, 274, 275, 1135,
	276, 277, 278, 279, 280, 600, 1108, 0, 281, 1115,
	282, 1114, 0, 1125, 283, 284, 285, 286, 287, 288,
	1061, 1094, 1028, 289, 1155, 1156, 607, 0, 290, 291,
	1101, 0, 1082, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086,
	1090, 316, 317, 318, 319, 1118, 320, 1112, 1111, 1032,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 1103, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 1038, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 1126, 1127, 350, 1050,
	261, 0, 0, 0, 0, 0, 351, 352, 353, 1110,
	0, 0, 0, 354, 0, 355, 0, 0, 1137, 356,
	357, 1123, 1124, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 1133, 0, 1060, 367, 0, 368, 369,
	370, 371, 372, 1096, 1097, 1100, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 262, 379,
	380, 381, 383, 0, 1138, 382, 1105, 1106, 0, 1066,
	0, 384, 385, 1140, 1098, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 1134, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 1089,
	1088, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 1029, 263, 1147, 446, 447,
	1051, 1099, 448, 1113, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 1128, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 1129, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 1109, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 1039, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	223, 530, 531, 529, 532, 533, 534, 1092, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 1107, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 1154, 551, 552, 553, 554, 1130, 557, 0,
	558, 559, 1027, 556, 225, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 1119, 1120, 1121, 1122,
	0, 577, 0, 569, 570, 571, 1131, 572, 1132, 1049,
	573, 574, 575, 576, 0, 578, 579, 0, 1033, 580,
	581, 582, 584, 585, 583, 586, 1093, 587, 0, 0,
	588, 589, 590, 1543, 1116, 1153, 0, 592, 591, 593,
	649, 0, 0, 0, 217, 594, 595, 650, 596, 597,
	598, 1030, 0, 218, 0, 0, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 0, 1024, 1025, 1071, 1043,
	1044, 1045, 1041, 1042, 1054, 1783, 2996, 0, 0, 1053,
	0, 0, 0, 0, 0, 264, 266, 265, 267, 268,
	269, 270, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 1095, 1059, 0, 0, 0, 274, 275, 1135, 276,
	277, 278, 279, 280, 600, 1108, 0, 281, 1115, 282,
	1114, 0, 1125, 283, 284, 285, 286, 287, 288, 1061,
	1094, 1028, 289, 1155, 1156, 607, 0, 290, 291, 1101,
	0, 1082, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086, 1090,
	316, 317, 318, 319, 1118, 320, 1112, 1111, 1032, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 1103, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 1038, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 1126, 1127, 350, 1050, 261,
	0, 0, 0, 0, 0, 351, 352, 353, 1110, 0,
	0, 0, 354, 0, 355, 0, 0, 1137, 356, 357,
	1123, 1124, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 1133, 0, 1060, 367, 0, 368, 369, 370,
	371, 372, 1096, 1097, 1100, 449, 1139, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 262, 379, 380,
	381, 383, 0, 1138, 382, 1105, 1106, 0, 1066, 0,
	384, 385, 1140, 1098, 1141, 386, 387, 388, 1142, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 1134, 1143, 400, 401, 1144,
	0, 402, 0, 0, 0, 403, 404, 407, 1089, 1088,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1145,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1146, 436, 1029, 263, 1147, 446, 447, 1051,
	1099, 448, 1113, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 1148,
	459, 1149, 1128, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 1129, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 1109, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	1150, 510, 511, 512, 513, 1039, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 223,
	530, 531, 529, 532, 533, 534, 1092, 535, 536, 519,
	520, 537, 538, 1151, 539, 540, 541, 542, 543, 544,
	1107, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 1154, 551, 552, 553, 554, 1130, 557, 0, 558,
	559, 1027, 556, 225, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 1119, 1120, 1121, 1122, 0,
	577, 0, 569, 570, 571, 1131, 572, 1132, 1049, 573,
	574, 575, 576, 0, 578, 579, 0, 1033, 580, 581,
	582, 584, 585, 583, 586, 1093, 587, 0, 0, 588,
	589, 590, 1543, 1116, 1153, 0, 592, 591, 593, 649,
	0, 0, 0, 217, 594, 595, 650, 596, 597, 598,
	1030, 0, 218, 0, 0, 0, 0, 0, 1026, 0,
	0, 0, 0, 0, 0, 1024, 1025, 1071, 1043, 1044,
	1045, 1041, 1042, 1054, 1783, 1781, 0, 0, 1053, 0,
	0, 0, 0, 0, 264, 266, 265, 267, 268, 269,
	270, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	1095, 1059, 0, 0, 0, 274, 275, 1135, 276, 277,
	278, 279, 280, 600, 1108, 0, 281, 1115, 282, 1114,
	2532, 1125, 283, 284, 285, 286, 287, 288, 1061, 1094,
	1028, 289, 1155, 1156, 607, 0, 290, 291, 1101, 0,
	1082, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 1136,
	314, 315, 1085, 1083, 1084, 1091, 1087, 1086, 1090, 316,
	317, 318, 319, 1118, 320, 1112, 1111, 1032, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 1103, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 1038, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 1126, 1127, 350, 1050, 261, 0,
	0, 0, 0, 0, 351, 352, 353, 1110, 0, 0,
	0, 354, 0, 355, 0, 2537, 1137, 356, 357, 1123,
	1124, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 1133, 0, 1060, 367, 0, 368, 369, 370, 371,
	372, 1096, 1097, 1100, 449, 1139, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 262, 379, 380, 381,
	383, 0, 1138, 382, 1105, 1106, 0, 1066, 0, 384,
	385, 1140, 1098, 1141, 386, 387, 388, 1142, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 2533, 399, 1134, 1143, 400, 401, 1144, 0,
	402, 0, 0, 0, 403, 404, 407, 1089, 1088, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1145, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1146, 436, 1029, 263, 1147, 446, 447, 1051, 1099,
	448, 1113, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 1148, 459,
	1149, 1128, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 1129, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	1109, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 1150,
	510, 511, 512, 513, 1039, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 1092, 535, 536, 519, 520,
	537, 538, 1151, 539, 540, 541, 542, 543, 544, 1107,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	1154, 551, 552, 553, 554, 1130, 557, 0, 558, 559,
	1027, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 1119, 1120, 1121, 1122, 0, 577,
	2534, 569, 570, 571, 1131, 572, 1132, 1049, 573, 574,
	575, 576, 0, 578, 579, 0, 1033, 580, 581, 582,
	584, 585, 583, 586, 1093, 587, 0, 0, 588, 589,
	590, 646, 1116, 1153, 0, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 1030,
	0, 0, 0, 0, 0, 0, 0, 1026, 0, 0,
	0, 0, 0, 0, 1024, 1025, 0, 0, 0, 0,
	0, 0, 0, 1055, 0, 0, 2449, 1053, 1071, 1043,
	1044, 1045, 1041, 1042, 1054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 266, 265, 267, 268,
	269, 270, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 1095, 1059, 0, 0, 0, 274, 275, 1135, 276,
	277, 278, 279, 280, 600, 1108, 0, 281, 1115, 282,
	1114, 0, 1125, 283, 284, 285, 286, 287, 288, 1061,
	1094, 1028, 289, 1155, 1156, 607, 0, 290, 291, 1101,
	0, 1082, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086, 1090,
	316, 317, 318, 319, 1118, 320, 1112, 1111, 1032, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 1103, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 1038, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 1126, 1127, 350, 1050, 261,
	0, 0, 0, 0, 0, 351, 352, 353, 1110, 0,
	0, 0, 354, 0, 355, 0, 0, 1137, 356, 357,
	1123, 1124, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 1133, 0, 1060, 367, 0, 368, 369, 370,
	371, 372, 1096, 1097, 1100, 449, 1139, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 262, 379, 380,
	381, 383, 0, 1138, 382, 1105, 1106, 0, 1066, 0,
	384, 385, 1140, 1098, 1141, 386, 387, 388, 1142, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 1134, 1143, 400, 401, 1144,
	0, 402, 0, 0, 0, 403, 404, 407, 1089, 1088,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1145,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1146, 436, 1029, 263, 1147, 446, 447, 1051,
	1099, 448, 1113, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 1148,
	459, 1149, 1128, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 1129, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 1109, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	1150, 510, 511, 512, 513, 1039, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 1092, 535, 536, 519,
	520, 537, 538, 1151, 539, 540, 541, 542, 543, 544,
	1107, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 1154, 551, 552, 553, 554, 1130, 557, 0, 558,
	559, 1027, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 1119, 1120, 1121, 1122, 0,
	577, 0, 569, 570, 571, 1131, 572, 1132, 1049, 573,
	574, 575, 576, 0, 578, 579, 0, 1033, 580, 581,
	582, 584, 585, 583, 586, 1093, 587, 0, 0, 588,
	589, 590, 646, 1116, 1153, 0, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	1030, 0, 0, 0, 0, 0, 0, 0, 1026, 0,
	0, 0, 0, 0, 0, 1024, 1025, 0, 0, 0,
	0, 0, 0, 0, 1055, 2447, 0, 2446, 1053, 1071,
	1043, 1044, 1045, 1041, 1042, 1054, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 266, 265, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 1095, 1059, 0, 0, 0, 274, 275, 1135,
	276, 277, 278, 279, 280, 600, 1108, 0, 281, 1115,
	282, 1114, 0, 1125, 283, 284, 285, 286, 287, 288,
	1061, 1094, 1028, 289, 1155, 1156, 607, 0, 290, 291,
	1101, 0, 1082, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086,
	1090, 316, 317, 318, 319, 1118, 320, 1112, 1111, 1032,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 1103, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 1038, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 1126, 1127, 350, 1050,
	261, 0, 0, 0, 0, 0, 351, 352, 353, 1110,
	0, 0, 0, 354, 0, 355, 0, 0, 1137, 356,
	357, 1123, 1124, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 1133, 0, 1060, 367, 0, 368, 369,
	370, 371, 372, 1096, 1097, 1100, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 262, 379,
	380, 381, 383, 0, 1138, 382, 1105, 1106, 0, 1066,
	0, 384, 385, 1140, 1098, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 1134, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 1089,
	1088, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 1029, 263, 1147, 446, 447,
	1051, 1099, 448, 1113, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 1128, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 1129, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 1109, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 1039, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 1092, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 1107, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 1154, 551, 552, 553, 554, 1130, 557, 0,
	558, 559, 1027, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 1119, 1120, 1121, 1122,
	0, 577, 0, 569, 570, 571, 1131, 572, 1132, 1049,
	573, 574, 575, 576, 0, 578, 579, 0, 1033, 580,
	581, 582, 584, 585, 583, 586, 1093, 587, 0, 0,
	588, 589, 590, 646, 1116, 1153, 0, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 1030, 0, 0, 0, 0, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 0, 1024, 1025, 0, 0,
	0, 0, 0, 0, 0, 1055, 2444, 0, 2443, 1053,
	1071, 1043, 1044, 1045, 1041, 1042, 1054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 266, 265,
	267, 268, 269, 270, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 274, 275,
	1135, 276, 277, 278, 279, 280, 600, 1108, 0, 281,
	1115, 282, 1114, 0, 1125, 283, 284, 285, 286, 287,
	288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0, 290,
	291, 1101, 0, 1082, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087,
	1086, 1090, 316, 317, 318, 319, 1118, 320, 1112, 1111,
	1032, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1103, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1038, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1126, 1127, 350,
	1050, 261, 0, 0, 0, 0, 0, 351, 352, 353,
	1110, 0, 0, 0, 354, 0, 355, 0, 0, 1137,
	356, 357, 1123, 1124, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1133, 0, 1060, 367, 0, 368,
	369, 370, 371, 372, 1096, 1097, 1100, 449, 1139, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 262,
	379, 380, 381, 383, 0, 1138, 382, 1105, 1106, 0,
	1066, 0, 384, 385, 1140, 1098, 1141, 386, 387, 388,
	1142, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1134, 1143, 400,
	401, 1144, 0, 402, 0, 0, 0, 403, 404, 407,
	1089, 1088, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1145, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1146, 436, 1029, 263, 1147, 446,
	447, 1051, 1099, 448, 1113, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1148, 459, 1149, 1128, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1129, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1109, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1150, 510, 511, 512, 513, 1039, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1092, 535,
	536, 519, 520, 537, 538, 1151, 539, 540, 541, 542,
	543, 544, 1107, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1154, 551, 552, 553, 554, 1130, 557,
	0, 558, 559, 1027, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1119, 1120, 1121,
	1122, 0, 577, 0, 569, 570, 571, 1131, 572, 1132,
	1049, 573, 574, 575, 576, 0, 578, 579, 0, 1033,
	580, 581, 582, 584, 585, 583, 586, 1093, 587, 0,
	0, 588, 589, 590, 646, 1116, 1153, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 1030, 0, 0, 0, 0, 0, 0, 0,
	1026, 0, 0, 0, 0, 0, 0, 1024, 1025, 0,
	0, 0, 0, 0, 0, 0, 1055, 2441, 0, 2440,
	1053, 1071, 1043, 1044, 1045, 1041, 1042, 1054, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 266,
	265, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 1095, 1059, 0, 0, 0, 274,
	275, 1135, 276, 277, 278, 279, 280, 600, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 320, 1112,
	1111, 1032, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 261, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 1060, 367, 0,
	368, 369, 370, 371, 372, 1096, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	262, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 1029, 263, 1147,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 1039, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 1027, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 578, 579, 0,
	1033, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1030, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 1024, 1025,
	0, 0, 0, 0, 0, 0, 0, 1055, 2438, 0,
	1634, 1053, 1071, 1043, 1044, 1045, 1041, 1042, 1054, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	266, 265, 267, 268, 269, 270, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 1095, 1059, 0, 0, 0,
	274, 275, 1135, 276, 277, 278, 279, 280, 600, 1108,
	0, 281, 1115, 282, 1114, 0, 1125, 283, 284, 285,
	286, 287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607,
	0, 290, 291, 1101, 0, 1082, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 1136, 314, 315, 1085, 1083, 1084,
	1091, 1087, 1086, 1090, 316, 317, 318, 319, 1118, 320,
	1112, 1111, 1032, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 1103, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 1038, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 1126,
	1127, 350, 1050, 261, 0, 0, 0, 0, 0, 351,
	352, 353, 1110, 0, 0, 0, 354, 0, 355, 0,
	0, 1137, 356, 357, 1123, 1124, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 1133, 0, 1060, 367,
	0, 368, 369, 370, 371, 372, 1096, 1097, 1100, 449,
	1139, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 262, 379, 380, 381, 383, 0, 1138, 382, 1105,
	1106, 0, 1066, 0, 384, 385, 1140, 1098, 1141, 386,
	387, 388, 1142, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 1134,
	1143, 400, 401, 1144, 0, 402, 0, 0, 0, 403,
	404, 407, 1089, 1088, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1145, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1146, 436, 1029, 263,
	1147, 446, 447, 1051, 1099, 448, 1113, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 1148, 459, 1149, 1128, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 1129,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 1109, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 1150, 510, 511, 512, 513, 1039,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	1092, 535, 536, 519, 520, 537, 538, 1151, 539, 540,
	541, 542, 543, 544, 1107, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 1154, 551, 552, 553, 554,
	1130, 557, 0, 558, 559, 1027, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 1119,
	1120, 1121, 1122, 0, 577, 0, 569, 570, 571, 1131,
	572, 1132, 1049, 573, 574, 575, 576, 0, 578, 579,
	0, 1033, 580, 581, 582, 584, 585, 583, 586, 1093,
	587, 0, 0, 588, 589, 590, 646, 1116, 1153, 0,
	592, 591, 593, 649, 1633, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 1030, 0, 0, 0, 0, 0,
	0, 0, 1026, 0, 0, 0, 0, 0, 0, 1024,
	1025, 0, 0, 0, 0, 0, 0, 0, 1055, 0,
	0, 1020, 1053, 1071, 1043, 1044, 1045, 1041, 1042, 1054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 266, 265, 267, 268, 269, 270, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 1095, 1059, 0, 0,
	0, 274, 275, 1135, 276, 277, 278, 279, 280, 600,
	1108, 0, 281, 1115, 282, 1114, 0, 1125, 283, 284,
	285, 286, 287, 288, 1061, 1094, 1028, 289, 1155, 1156,
	607, 0, 290, 291, 1101, 0, 1082, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 1136, 314, 315, 1085, 1083,
	1084, 1091, 1087, 1086, 1090, 316, 317, 318, 319, 1118,
	320, 1112, 1111, 1032, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 1103, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 1038,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	1126, 1127, 350, 1050, 261, 0, 0, 0, 0, 0,
	351, 352, 353, 1110, 0, 0, 0, 354, 0, 355,
	0, 0, 1137, 356, 357, 1123, 1124, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 1133, 0, 1060,
	367, 0, 368, 369, 370, 371, 372, 1096, 1097, 1100,
	449, 1139, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 262, 379, 380, 381, 383, 0, 1138, 382,
	1105, 1106, 0, 1066, 0, 384, 385, 1140, 1098, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	1134, 1143, 400, 401, 1144, 0, 402, 0, 0, 0,
	403, 404, 407, 1089, 1088, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 1029,
	263, 1147, 446, 447, 1051, 1099, 448, 1113, 450, 451,
	0, 0, 452, 0, 1034, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 1148, 459, 1149, 1128, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	1129, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 1109, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 1150, 510, 511, 512, 513,
	1039, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 1092, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 1107, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 1154, 551, 552, 553,
	554, 1130, 557, 0, 558, 559, 1027, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	1119, 1120, 1121, 1122, 0, 577, 0, 569, 570, 571,
	1131, 572, 1132, 1049, 573, 574, 575, 576, 0, 578,
	579, 0, 1033, 580, 581, 582, 584, 585, 583, 586,
	1093, 587, 0, 0, 588, 589, 590, 646, 1116, 1153,
	0, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 1030, 0, 0, 0, 0,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 0,
	1024, 1025, 1071, 1043, 1044, 1045, 1041, 1042, 1054, 1055,
	0, 0, 0, 1053, 0, 0, 0, 0, 0, 264,
	266, 265, 267, 268, 269, 270, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 1095, 1059, 0, 0, 0,
	274, 275, 1135, 276, 277, 278, 279, 280, 600, 1108,
	0, 281, 1115, 282, 1114, 0, 1125, 283, 284, 285,
	286, 287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607,
	0, 290, 291, 1101, 0, 1082, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 4339, 310,
	0, 311, 312, 313, 1136, 314, 315, 1085, 1083, 1084,
	1091, 1087, 1086, 1090, 316, 317, 318, 319, 1118, 320,
	1112, 1111, 1032, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 1103, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 1038, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 1126,
	1127, 350, 1050, 261, 0, 0, 0, 0, 0, 351,
	352, 353, 1110, 0, 0, 0, 354, 0, 355, 0,
	0, 1137, 356, 357, 1123, 1124, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 1133, 0, 1060, 367,
	0, 368, 369, 370, 371, 372, 1096, 1097, 1100, 449,
	1139, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 262, 379, 380, 381, 383, 0, 1138, 382, 1105,
	1106, 0, 1066, 0, 384, 385, 1140, 1098, 1141, 386,
	387, 388, 1142, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 1134,
	1143, 400, 401, 1144, 0, 402, 0, 0, 0, 403,
	404, 407, 1089, 1088, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1145, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1146, 436, 1029, 263,
	1147, 446, 447, 1051, 1099, 448, 1113, 450, 451, 0,
	0, 452, 0, 1034, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 1148, 459, 1149, 1128, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 1129,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 1109, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 1150, 510, 511, 512, 513, 1039,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	1092, 535, 536, 519, 520, 537, 538, 1151, 539, 540,
	541, 542, 543, 544, 1107, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 1154, 551, 552, 553, 554,
	1130, 557, 0, 558, 559, 1027, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 1119,
	1120, 1121, 1122, 0, 577, 0, 569, 570, 571, 1131,
	572, 1132, 1049, 573, 574, 575, 576, 0, 578, 579,
	0, 1033, 580, 581, 582, 584, 585, 583, 586, 1093,
	587, 0, 0, 588, 589, 590, 646, 1116, 1153, 0,
	592, 591, 593, 649, 0, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 1030, 0, 0, 0, 0, 0,
	0, 0, 1026, 0, 0, 0, 0, 0, 0, 1024,
	1025, 1071, 1043, 1044, 1045, 1041, 1042, 1054, 1055, 0,
	0, 0, 1053, 0, 0, 0, 0, 0, 264, 266,
	265, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 1095, 1059, 0, 0, 0, 274,
	275, 1135, 276, 277, 278, 279, 280, 600, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 320, 1112,
	1111, 1032, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 261, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 1060, 367, 0,
	368, 369, 370, 371, 372, 1096, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	2318, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 1029, 263, 1147,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 2317, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 1039, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 1027, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 578, 579, 0,
	1033, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1030, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 1024, 1025,
	1071, 1043, 1044, 1045, 1041, 1042, 1054, 1055, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 264, 266, 265,
	267, 268, 269, 270, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 274, 275,
	1135, 276, 277, 278, 279, 280, 600, 1108, 0, 281,
	1115, 282, 1114, 0, 1125, 283, 284, 285, 286, 287,
	288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0, 290,
	291, 1101, 0, 1082, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087,
	1086, 1090, 316, 317, 318, 319, 1118, 320, 1112, 1111,
	1032, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1103, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1038, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1126, 1127, 350,
	1050, 261, 0, 0, 0, 0, 0, 351, 352, 353,
	1110, 0, 0, 0, 354, 0, 355, 0, 0, 1137,
	356, 357, 1123, 1124, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1133, 0, 1060, 367, 0, 368,
	369, 370, 371, 372, 1096, 1097, 1100, 449, 1139, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 262,
	379, 380, 381, 383, 0, 1138, 382, 1105, 1106, 0,
	1066, 0, 384, 385, 1140, 1098, 1141, 386, 387, 388,
	1142, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1134, 1143, 400,
	401, 1144, 0, 402, 0, 0, 0, 403, 404, 407,
	1089, 1088, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1145, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1146, 436, 1029, 263, 1147, 446,
	447, 1051, 1099, 448, 1113, 450, 451, 0, 0, 452,
	0, 1034, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1148, 459, 1149, 1128, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1129, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1109, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1150, 510, 511, 512, 513, 1039, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1092, 535,
	536, 519, 520, 537, 538, 1151, 539, 540, 541, 542,
	543, 544, 1107, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1154, 551, 552, 553, 554, 1130, 557,
	0, 558, 559, 1027, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1119, 1120, 1121,
	1122, 0, 577, 0, 569, 570, 571, 1131, 572, 1132,
	1049, 573, 574, 575, 576, 0, 578, 579, 0, 1033,
	580, 581, 582, 584, 585, 583, 586, 1093, 587, 0,
	0, 588, 589, 590, 646, 1116, 1153, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 1030, 0, 0, 0, 0, 0, 0, 0,
	1026, 0, 0, 0, 0, 0, 0, 1024, 1025, 1071,
	1043, 1044, 1045, 1041, 1042, 1054, 1055, 0, 0, 0,
	1053, 0, 0, 0, 0, 0, 264, 266, 265, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 1095, 1059, 0, 0, 0, 274, 275, 1135,
	276, 277, 278, 279, 280, 600, 1108, 0, 281, 1115,
	282, 1114, 0, 1125, 283, 284, 285, 286, 287, 288,
	1061, 1094, 1028, 289, 1155, 1156, 607, 0, 290, 291,
	1101, 0, 1082, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 4111, 310, 0, 311, 312,
	313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086,
	1090, 316, 317, 318, 319, 1118, 320, 1112, 1111, 1032,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 1103, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 1038, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 1126, 1127, 350, 1050,
	261, 0, 0, 0, 0, 0, 351, 352, 353, 1110,
	0, 0, 0, 354, 0, 355, 0, 0, 1137, 356,
	357, 1123, 1124, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 1133, 0, 1060, 367, 0, 368, 369,
	370, 371, 372, 1096, 1097, 1100, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 262, 379,
	380, 381, 383, 0, 1138, 382, 1105, 1106, 0, 1066,
	0, 384, 385, 1140, 1098, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 1134, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 1089,
	1088, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 1029, 263, 1147, 446, 447,
	1051, 1099, 448, 1113, 450, 451, 0, 0, 452, 0,
	1034, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 1128, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 1129, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 1109, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 1039, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 1092, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 1107, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 1154, 551, 552, 553, 554, 1130, 557, 0,
	558, 559, 1027, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 1119, 1120, 1121, 1122,
	0, 577, 0, 569, 570, 571, 1131, 572, 1132, 1049,
	573, 574, 575, 576, 0, 578, 579, 0, 1033, 580,
	581, 582, 584, 585, 583, 586, 1093, 587, 0, 0,
	588, 589, 590, 646, 1116, 1153, 0, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 1030, 0, 0, 0, 0, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 0, 1024, 1025, 1071, 1043,
	1044, 1045, 1041, 1042, 1054, 1055, 0, 0, 0, 1053,
	0, 0, 0, 0, 0, 264, 266, 265, 267, 268,
	269, 270, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 1095, 1059, 0, 0, 0, 274, 275, 1135, 276,
	277, 278, 279, 280, 600, 1108, 0, 281, 1115, 282,
	1114, 0, 1125, 283, 284, 285, 286, 287, 288, 1061,
	1094, 1028, 289, 1155, 1156, 607, 0, 290, 291, 1101,
	0, 1082, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086, 1090,
	316, 317, 318, 319, 1118, 320, 1112, 1111, 1032, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 1103, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 1038, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 1126, 1127, 350, 1050, 261,
	0, 0, 0, 0, 0, 351, 352, 353, 1110, 0,
	0, 0, 354, 0, 355, 0, 0, 1137, 356, 357,
	1123, 1124, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 1133, 0, 1060, 367, 0, 368, 369, 370,
	371, 372, 1096, 1097, 1100, 449, 1139, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 262, 379, 380,
	381, 383, 0, 1138, 382, 1105, 1106, 0, 1066, 0,
	384, 385, 1140, 1098, 1141, 386, 387, 388, 1142, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 1134, 1143, 400, 401, 1144,
	0, 402, 0, 0, 0, 403, 404, 407, 1089, 1088,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1145,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1146, 436, 1029, 3752, 1147, 446, 447, 1051,
	1099, 448, 1113, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 1148,
	459, 1149, 1128, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 1129, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 1109, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	1150, 510, 511, 512, 513, 1039, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 1092, 535, 536, 519,
	520, 537, 538, 1151, 539, 540, 541, 542, 543, 544,
	1107, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 1154, 551, 552, 553, 554, 1130, 557, 0, 558,
	559, 1027, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 1119, 1120, 1121, 1122, 0,
	577, 0, 569, 570, 571, 1131, 572, 1132, 1049, 573,
	574, 575, 576, 0, 578, 579, 0, 1033, 580, 581,
	582, 584, 585, 583, 586, 1093, 587, 0, 0, 588,
	589, 590, 646, 1116, 1153, 0, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	1030, 0, 0, 0, 0, 0, 0, 0, 1026, 0,
	0, 0, 0, 0, 0, 1024, 1025, 1851, 0, 0,
	0, 0, 0, 0, 1055, 0, 0, 0, 1053, 1071,
	1043, 1044, 1045, 1041, 1042, 1054, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 266, 265, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 1095, 1059, 0, 0, 0, 274, 275, 1135,
	276, 277, 278, 279, 280, 600, 1108, 0, 281, 1115,
	282, 1114, 0, 1125, 283, 284, 285, 286, 287, 288,
	1061, 1094, 1028, 289, 1155, 1156, 607, 0, 290, 291,
	1101, 0, 1082, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086,
	1090, 316, 317, 318, 319, 1118, 320, 1112, 1111, 1032,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 1103, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 1038, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 1126, 1127, 350, 1050,
	261, 0, 0, 0, 0, 0, 351, 352, 353, 1110,
	0, 0, 0, 354, 0, 355, 0, 0, 1137, 356,
	357, 1123, 1124, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 1133, 0, 1060, 367, 0, 368, 369,
	370, 371, 372, 1096, 1097, 1100, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 262, 379,
	380, 381, 383, 0, 1138, 382, 1105, 1106, 0, 1066,
	0, 384, 385, 1140, 1098, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 1134, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 1089,
	1088, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 1029, 263, 1147, 446, 447,
	1051, 1099, 448, 1113, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 1128, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 1129, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 1109, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 1039, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 1092, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 1107, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 1154, 551, 552, 553, 554, 1130, 557, 0,
	558, 559, 1027, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 1119, 1120, 1121, 1122,
	0, 577, 0, 569, 570, 571, 1131, 572, 1132, 1049,
	573, 574, 575, 576, 0, 578, 579, 0, 1033, 580,
	581, 582, 584, 585, 583, 586, 1093, 587, 0, 0,
	588, 589, 590, 646, 1116, 1153, 3488, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 1030, 0, 0, 0, 0, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 0, 1024, 1025, 1071, 1043,
	1044, 1045, 1041, 1042, 1054, 1055, 0, 0, 0, 1053,
	0, 0, 0, 0, 0, 264, 266, 265, 267, 268,
	269, 270, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 1095, 1059, 0, 0, 0, 274, 275, 1135, 276,
	277, 278, 279, 280, 600, 1108, 0, 281, 1115, 282,
	1114, 0, 1125, 283, 284, 285, 286, 287, 288, 1061,
	1094, 1028, 289, 1155, 1156, 607, 0, 290, 291, 1101,
	0, 1082, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086, 1090,
	316, 317, 318, 319, 1118, 320, 1112, 1111, 1032, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 1103, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 1038, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 1126, 1127, 350, 1050, 261,
	0, 0, 0, 0, 0, 351, 352, 353, 1110, 0,
	0, 0, 354, 0, 355, 0, 0, 1137, 356, 357,
	1123, 1124, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 1133, 0, 1060, 367, 0, 368, 369, 370,
	371, 372, 1096, 1097, 1100, 449, 1139, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 262, 379, 380,
	381, 383, 0, 1138, 382, 1105, 1106, 0, 1066, 0,
	384, 385, 1140, 1098, 1141, 386, 387, 388, 1142, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 1134, 1143, 400, 401, 1144,
	0, 402, 0, 0, 0, 403, 404, 407, 1089, 1088,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1145,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1146, 436, 1029, 263, 1147, 446, 447, 1051,
	1099, 448, 1113, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 1148,
	459, 1149, 1128, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 1129, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 1109, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	1150, 510, 511, 512, 513, 1039, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 1092, 535, 536, 519,
	520, 537, 538, 1151, 539, 540, 541, 542, 543, 544,
	1107, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 1154, 551, 552, 553, 554, 1130, 557, 0, 558,
	559, 1027, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 1119, 1120, 1121, 1122, 0,
	577, 0, 569, 570, 571, 1131, 572, 1132, 1049, 573,
	574, 575, 576, 0, 578, 579, 0, 1033, 580, 581,
	582, 584, 585, 583, 586, 1093, 587, 0, 0, 588,
	589, 590, 646, 1116, 1153, 0, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	1030, 0, 0, 0, 0, 0, 0, 0, 1026, 0,
	0, 0, 0, 0, 0, 1024, 1025, 1851, 0, 0,
	0, 0, 0, 0, 1055, 0, 0, 0, 1053, 1071,
	1043, 1044, 1045, 1041, 1042, 1054, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 266, 265, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 1095, 1059, 0, 0, 0, 274, 275, 1135,
	276, 277, 278, 279, 280, 600, 1108, 0, 281, 1115,
	282, 1114, 0, 1125, 283, 284, 285, 286, 287, 288,
	1061, 1094, 1028, 289, 1155, 1156, 607, 0, 290, 291,
	1101, 0, 1082, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086,
	1090, 316, 317, 318, 319, 1118, 320, 1112, 1111, 1032,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 1103, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 1038, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 1126, 1127, 350, 1050,
	261, 0, 0, 0, 0, 0, 351, 352, 353, 1110,
	0, 0, 0, 354, 0, 355, 0, 2537, 1137, 356,
	357, 1123, 1124, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 1133, 0, 1060, 367, 0, 368, 369,
	370, 371, 372, 1096, 1097, 1100, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 262, 379,
	380, 381, 383, 0, 1138, 382, 1105, 1106, 0, 1066,
	0, 384, 385, 1140, 1098, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 1134, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 1089,
	1088, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 1029, 263, 1147, 446, 447,
	1051, 1099, 448, 1113, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 1128, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 1129, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 1109, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 1039, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 1092, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 1107, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 1154, 551, 552, 553, 554, 1130, 557, 0,
	558, 559, 1027, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 1119, 1120, 1121, 1122,
	0, 577, 0, 569, 570, 571, 1131, 572, 1132, 1049,
	573, 574, 575, 576, 0, 578, 579, 0, 1033, 580,
	581, 582, 584, 585, 583, 586, 1093, 587, 0, 0,
	588, 589, 590, 646, 1116, 1153, 0, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 1030, 0, 0, 0, 0, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 0, 1024, 1025, 1071, 1043,
	1044, 1045, 1041, 1042, 1054, 1055, 0, 0, 0, 1053,
	0, 0, 0, 0, 0, 264, 266, 265, 267, 268,
	269, 270, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 1095, 1059, 0, 0, 0, 274, 275, 1135, 276,
	277, 278, 279, 280, 600, 1108, 0, 281, 1115, 282,
	1114, 0, 1125, 283, 284, 285, 286, 287, 288, 1061,
	1094, 1028, 289, 1155, 1156, 607, 0, 290, 291, 1101,
	0, 1082, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086, 1090,
	316, 317, 318, 319, 1118, 320, 1112, 1111, 1032, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 1103, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 1038, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 1126, 1127, 350, 1050, 261,
	0, 0, 0, 0, 0, 351, 352, 353, 1110, 0,
	0, 0, 354, 0, 355, 0, 0, 1137, 356, 357,
	1123, 1124, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 1133, 0, 1060, 367, 0, 368, 369, 370,
	371, 372, 1096, 1097, 1100, 449, 1139, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 262, 379, 380,
	381, 383, 0, 1138, 382, 1105, 1106, 0, 1066, 0,
	384, 385, 1140, 1098, 1141, 386, 387, 388, 1142, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 1134, 1143, 400, 401, 1144,
	0, 402, 0, 0, 0, 403, 404, 407, 1089, 1088,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1145,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1146, 436, 1029, 263, 1147, 446, 447, 1051,
	1099, 448, 1113, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 1148,
	459, 1149, 1128, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 1129, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 1109, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	1150, 510, 511, 512, 513, 1039, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 1092, 535, 536, 519,
	520, 537, 538, 1151, 539, 540, 541, 542, 543, 544,
	1107, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 1154, 551, 552, 553, 554, 1130, 557, 0, 558,
	559, 1027, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 1119, 1120, 1121, 1122, 0,
	577, 0, 569, 570, 571, 1131, 572, 1132, 1049, 573,
	574, 575, 576, 0, 578, 579, 0, 1033, 580, 581,
	582, 584, 585, 583, 586, 1093, 587, 0, 0, 588,
	589, 590, 646, 1116, 1153, 0, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	1030, 0, 0, 0, 0, 0, 0, 0, 1026, 0,
	0, 0, 0, 0, 0, 1024, 1025, 0, 0, 0,
	0, 0, 0, 0, 1055, 1781, 0, 2542, 1053, 1071,
	1043, 1044, 1045, 1041, 1042, 1054, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 266, 265, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 1095, 1059, 0, 0, 0, 274, 275, 1135,
	276, 277, 278, 279, 280, 600, 1108, 0, 281, 1115,
	282, 1114, 0, 1125, 283, 284, 285, 286, 287, 288,
	1061, 1094, 1028, 289, 1155, 1156, 607, 0, 290, 291,
	1101, 0, 1082, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086,
	1090, 316, 317, 318, 319, 1118, 320, 1112, 1111, 1032,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 1103, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 1038, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 1126, 1127, 350, 1050,
	261, 0, 0, 0, 0, 0, 351, 352, 353, 1110,
	0, 0, 0, 354, 0, 355, 0, 0, 1137, 356,
	357, 1123, 1124, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 1133, 0, 1060, 367, 0, 368, 369,
	370, 371, 372, 1096, 1097, 1100, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 262, 379,
	380, 381, 383, 0, 1138, 382, 1105, 1106, 0, 1066,
	0, 384, 385, 1140, 1098, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 1134, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 1089,
	1088, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 1029, 263, 1147, 446, 447,
	1051, 1099, 448, 1113, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 1128, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 1129, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 1109, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 1039, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 1092, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 1107, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 1154, 551, 552, 553, 554, 1130, 557, 0,
	558, 559, 1027, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 1119, 1120, 1121, 1122,
	0, 577, 0, 569, 570, 571, 1131, 572, 1132, 1049,
	573, 574, 575, 576, 0, 578, 579, 0, 1033, 580,
	581, 582, 584, 585, 583, 586, 1093, 587, 0, 0,
	588, 589, 590, 646, 1116, 1153, 0, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 1030, 0, 0, 0, 0, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 0, 1024, 1025, 0, 0,
	0, 0, 0, 0, 0, 1055, 0, 0, 2540, 1053,
	1071, 1043, 1044, 1045, 1041, 1042, 1054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 266, 265,
	267, 268, 269, 270, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 274, 275,
	1135, 276, 277, 278, 279, 280, 600, 1108, 0, 281,
	1115, 282, 1114, 0, 1125, 283, 284, 285, 286, 287,
	288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0, 290,
	291, 1101, 0, 1082, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087,
	1086, 1090, 316, 317, 318, 319, 1118, 320, 1112, 1111,
	1032, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1103, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1038, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1126, 1127, 350,
	1050, 261, 0, 0, 0, 0, 0, 351, 352, 353,
	1110, 0, 0, 0, 354, 0, 355, 0, 0, 1137,
	356, 357, 1123, 1124, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1133, 0, 1060, 367, 0, 368,
	369, 370, 371, 372, 1096, 1097, 1100, 449, 1139, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 262,
	379, 380, 381, 383, 0, 1138, 382, 1105, 1106, 0,
	1066, 0, 384, 385, 1140, 1098, 1141, 386, 387, 388,
	1142, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1134, 1143, 400,
	401, 1144, 0, 402, 0, 0, 0, 403, 404, 407,
	1089, 1088, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1145, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1146, 436, 1029, 263, 1147, 446,
	447, 1051, 1099, 448, 1113, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1148, 459, 1149, 1128, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1129, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1109, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1150, 510, 511, 512, 513, 1039, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1092, 535,
	536, 519, 520, 537, 538, 1151, 539, 540, 541, 542,
	543, 544, 1107, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1154, 551, 552, 553, 554, 1130, 557,
	0, 558, 559, 1027, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1119, 1120, 1121,
	1122, 0, 577, 0, 569, 570, 571, 1131, 572, 1132,
	1049, 573, 574, 575, 576, 0, 578, 579, 0, 1033,
	580, 581, 582, 584, 585, 583, 586, 1093, 587, 0,
	0, 588, 589, 590, 646, 1116, 1153, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 1030, 0, 0, 0, 0, 0, 0, 0,
	1026, 0, 0, 0, 0, 0, 0, 1024, 1025, 0,
	0, 0, 0, 0, 0, 0, 1055, 0, 0, 2528,
	1053, 1071, 1043, 1044, 1045, 1041, 1042, 1054, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 266,
	265, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 1095, 1059, 0, 0, 0, 274,
	275, 1135, 276, 277, 278, 279, 280, 600, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 320, 1112,
	1111, 1032, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 261, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 1060, 367, 0,
	368, 369, 370, 371, 372, 1096, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	262, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 1029, 263, 1147,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 1039, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 1027, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 578, 579, 0,
	1033, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1030, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 1024, 1025,
	0, 0, 0, 0, 0, 0, 0, 1055, 0, 0,
	2517, 1053, 1071, 1043, 1044, 1045, 1041, 1042, 1054, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	266, 265, 267, 268, 269, 270, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 1095, 1059, 0, 0, 0,
	274, 275, 1135, 276, 277, 278, 279, 280, 600, 1108,
	0, 281, 1115, 282, 1114, 0, 1125, 283, 284, 285,
	286, 287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607,
	0, 290, 291, 1101, 0, 1082, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 1136, 314, 315, 1085, 1083, 1084,
	1091, 1087, 1086, 1090, 316, 317, 318, 319, 1118, 320,
	1112, 1111, 1032, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 1103, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 1038, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 1126,
	1127, 350, 1050, 261, 0, 0, 0, 0, 0, 351,
	352, 353, 1110, 0, 0, 0, 354, 0, 355, 0,
	0, 1137, 356, 357, 1123, 1124, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 1133, 0, 1060, 367,
	0, 368, 369, 370, 371, 372, 1096, 1097, 1100, 449,
	1139, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 262, 379, 380, 381, 383, 0, 1138, 382, 1105,
	1106, 0, 1066, 0, 384, 385, 1140, 1098, 1141, 386,
	387, 388, 1142, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 1134,
	1143, 400, 401, 1144, 0, 402, 0, 0, 0, 403,
	404, 407, 1089, 1088, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1145, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1146, 436, 1029, 263,
	1147, 446, 447, 1051, 1099, 448, 1113, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 1148, 459, 1149, 1128, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 1129,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 1109, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 1150, 510, 511, 512, 513, 1039,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	1092, 535, 536, 519, 520, 537, 538, 1151, 539, 540,
	541, 542, 543, 544, 1107, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 1154, 551, 552, 553, 554,
	1130, 557, 0, 558, 559, 1027, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 1119,
	1120, 1121, 1122, 0, 577, 0, 569, 570, 571, 1131,
	572, 1132, 1049, 573, 574, 575, 576, 0, 578, 579,
	0, 1033, 580, 581, 582, 584, 585, 583, 586, 1093,
	587, 0, 0, 588, 589, 590, 646, 1116, 1153, 0,
	592, 591, 593, 649, 0, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 1030, 0, 0, 0, 0, 0,
	0, 0, 1026, 0, 0, 0, 0, 0, 0, 1024,
	1025, 0, 0, 0, 0, 0, 0, 0, 1055, 0,
	0, 2515, 1053, 2506, 2513, 1044, 1045, 1041, 1042, 1054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 266, 265, 267, 268, 269, 270, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 1095, 1059, 0, 0,
	0, 274, 275, 1135, 276, 277, 278, 279, 280, 600,
	1108, 0, 281, 1115, 282, 1114, 0, 1125, 283, 284,
	285, 286, 287, 288, 1061, 1094, 1028, 289, 1155, 1156,
	607, 0, 290, 291, 1101, 0, 1082, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 1136, 314, 315, 1085, 1083,
	1084, 1091, 1087, 1086, 1090, 316, 317, 318, 319, 1118,
	2509, 1112, 1111, 1032, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 1103, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 1038,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	1126, 1127, 350, 1050, 261, 0, 0, 0, 0, 0,
	351, 352, 353, 1110, 0, 0, 0, 354, 0, 355,
	0, 0, 1137, 356, 357, 1123, 1124, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 1133, 0, 1060,
	367, 0, 368, 369, 370, 2510, 372, 1096, 1097, 1100,
	449, 1139, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 262, 379, 380, 381, 383, 0, 1138, 382,
	1105, 1106, 0, 1066, 0, 384, 385, 1140, 1098, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	1134, 1143, 400, 401, 1144, 0, 402, 0, 0, 0,
	403, 404, 407, 1089, 1088, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 2511, 417, 2508, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 1029,
	263, 1147, 446, 447, 1051, 1099, 448, 1113, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 1148, 459, 1149, 1128, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	1129, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 1109, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 1150, 510, 511, 512, 513,
	1039, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 2512, 0, 530, 531, 529, 532, 533,
	534, 1092, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 1107, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 1154, 551, 552, 553,
	554, 1130, 557, 0, 558, 559, 1027, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	1119, 1120, 1121, 1122, 0, 577, 0, 569, 570, 571,
	1131, 572, 1132, 1049, 573, 574, 575, 576, 0, 578,
	579, 0, 1033, 580, 581, 582, 584, 585, 583, 586,
	1093, 587, 0, 0, 588, 589, 590, 646, 1116, 1153,
	0, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 2507, 598, 1030, 0, 0, 0, 0,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 0,
	1024, 1025, 0, 0, 0, 0, 0, 0, 0, 1055,
	0, 0, 2503, 1053, 2506, 2513, 1044, 1045, 1041, 1042,
	1054, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 266, 265, 267, 268, 269, 270, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 1095, 1059, 0,
	0, 0, 274, 275, 1135, 276, 277, 278, 279, 280,
	600, 1108, 0, 281, 1115, 282, 1114, 0, 1125, 283,
	284, 285, 286, 287, 288, 1061, 1094, 1028, 289, 1155,
	1156, 607, 0, 290, 291, 1101, 0, 1082, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 1136, 314, 315, 1085,
	1083, 1084, 1091, 1087, 1086, 1090, 316, 317, 318, 319,
	1118, 2509, 1112, 1111, 1032, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 1103, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	1038, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 1126, 1127, 350, 1050, 261, 0, 0, 0, 0,
	0, 351, 352, 353, 1110, 0, 0, 0, 354, 0,
	355, 0, 0, 1137, 356, 357, 1123, 1124, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 1133, 0,
	1060, 367, 0, 368, 369, 370, 2510, 372, 1096, 1097,
	1100, 449, 1139, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 262, 379, 380, 381, 383, 0, 1138,
	382, 1105, 1106, 0, 1066, 0, 384, 385, 1140, 1098,
	1141, 386, 387, 388, 1142, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 1134, 1143, 400, 401, 1144, 0, 402, 0, 0,
	0, 403, 404, 407, 1089, 1088, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 2511, 417, 2508,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1145, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1146, 436,
	1029, 263, 1147, 446, 447, 1051, 1099, 448, 1113, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 1148, 459, 1149, 1128, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 1129, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 1109, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 1150, 510, 511, 512,
	513, 1039, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 2512, 0, 530, 531, 529, 532,
	533, 534, 1092, 535, 536, 519, 520, 537, 538, 1151,
	539, 540, 541, 542, 543, 544, 1107, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 1154, 551, 552,
	553, 554, 1130, 557, 0, 558, 559, 1027, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 1119, 1120, 1121, 1122, 0, 577, 0, 569, 570,
	571, 1131, 572, 1132, 1049, 573, 574, 575, 576, 0,
	578, 579, 0, 1033, 580, 581, 582, 584, 585, 583,
	586, 1093, 587, 0, 0, 588, 589, 590, 646, 1116,
	1153, 0, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 2507, 598, 1030, 0, 0, 0,
	0, 0, 0, 0, 1026, 0, 0, 0, 0, 0,
	0, 1024, 1025, 1071, 1043, 1044, 1045, 1041, 1042, 1054,
	1055, 0, 0, 0, 1053, 0, 0, 0, 0, 0,
	264, 266, 265, 267, 268, 269, 270, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 1095, 1059, 0, 0,
	0, 274, 275, 1135, 276, 277, 278, 279, 280, 600,
	1108, 0, 281, 1115, 282, 1114, 0, 1125, 283, 284,
	285, 286, 287, 288, 1061, 1094, 1028, 289, 1155, 1156,
	607, 0, 290, 291, 1101, 0, 1082, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 1136, 314, 315, 1085, 1083,
	1084, 1091, 1087, 1086, 1090, 316, 317, 318, 319, 1118,
	320, 1112, 1111, 1032, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 1103, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 1038,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	1126, 1127, 350, 1050, 261, 0, 0, 0, 0, 0,
	351, 352, 353, 1110, 0, 0, 0, 354, 0, 355,
	0, 0, 1137, 356, 357, 1123, 1124, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 1133, 0, 1060,
	367, 0, 368, 369, 370, 371, 372, 1096, 1097, 1100,
	449, 1139, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 262, 379, 380, 381, 383, 0, 1138, 382,
	1105, 1106, 0, 1066, 0, 384, 385, 1140, 1098, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	1134, 1143, 400, 401, 1144, 0, 402, 0, 0, 0,
	403, 404, 407, 1089, 1088, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 1029,
	263, 1147, 446, 447, 1051, 1099, 448, 1113, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 1148, 459, 1149, 1128, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	1129, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 1109, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 1150, 510, 511, 512, 513,
	1039, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 1092, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 1107, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 1154, 551, 552, 553,
	554, 1130, 557, 0, 558, 559, 1027, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	1119, 1120, 1121, 1122, 0, 577, 0, 569, 570, 571,
	1131, 572, 1132, 1049, 573, 574, 575, 576, 0, 578,
	579, 0, 1033, 580, 581, 582, 584, 585, 583, 586,
	1093, 587, 0, 0, 588, 589, 590, 646, 1116, 1153,
	0, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 1030, 0, 0, 0, 0,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 0,
	1024, 1025, 0, 0, 0, 0, 0, 1789, 0, 1055,
	0, 0, 0, 1053, 1071, 1043, 1044, 1045, 1041, 1042,
	1054, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 266, 265, 267, 268, 269, 270, 271, 2297,
	272, 273, 0, 0, 0, 0, 0, 1095, 1059, 0,
	0, 0, 274, 275, 1135, 276, 277, 278, 279, 280,
	600, 1108, 0, 281, 1115, 282, 1114, 0, 1125, 283,
	284, 285, 286, 287, 288, 1061, 1094, 1028, 289, 1155,
	1156, 607, 0, 290, 291, 1101, 0, 1082, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 1136, 314, 315, 1085,
	1083, 1084, 1091, 1087, 1086, 1090, 316, 317, 318, 319,
	1118, 320, 1112, 1111, 1032, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 1103, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	1038, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 1126, 1127, 350, 1050, 261, 0, 0, 0, 0,
	0, 351, 352, 353, 1110, 0, 0, 0, 354, 0,
	355, 0, 0, 1137, 356, 357, 1123, 1124, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 1133, 0,
	1060, 367, 0, 368, 369, 370, 371, 372, 1096, 1097,
	1100, 449, 1139, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 262, 379, 380, 381, 383, 0, 1138,
	382, 1105, 1106, 0, 1066, 0, 384, 385, 1140, 1098,
	1141, 386, 387, 388, 1142, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 1134, 1143, 400, 401, 1144, 0, 402, 0, 0,
	0, 403, 404, 407, 1089, 1088, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1145, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1146, 436,
	1029, 263, 1147, 446, 447, 1051, 1099, 448, 1113, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 1148, 459, 1149, 1128, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 1129, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 1109, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 1150, 510, 511, 512,
	513, 1039, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 1092, 535, 536, 519, 520, 537, 538, 1151,
	539, 540, 541, 542, 543, 544, 1107, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 1154, 551, 552,
	553, 554, 1130, 557, 0, 558, 559, 1027, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 1119, 1120, 1121, 1122, 0, 577, 0, 569, 570,
	571, 1131, 572, 1132, 1049, 573, 574, 575, 576, 0,
	578, 579, 0, 1033, 580, 581, 582, 584, 585, 583,
	586, 1093, 587, 0, 0, 588, 589, 590, 646, 1116,
	1153, 0, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 1030, 0, 0, 0,
	0, 0, 0, 0, 1026, 0, 0, 0, 0, 0,
	0, 1024, 1025, 0, 0, 0, 0, 0, 0, 0,
	1055, 0, 0, 1639, 1053, 1071, 1043, 1044, 1045, 1041,
	1042, 1054, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 266, 265, 267, 268, 269, 270, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 1095, 1059,
	0, 0, 0, 274, 275, 1135, 276, 277, 278, 279,
	280, 600, 1108, 0, 281, 1115, 282, 1114, 0, 1125,
	283, 284, 285, 286, 287, 288, 1061, 1094, 1028, 289,
	1155, 1156, 607, 0, 290, 291, 1101, 0, 1082, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 1136, 314, 315,
	1085, 1083, 1084, 1091, 1087, 1086, 1090, 316, 317, 318,
	319, 1118, 320, 1112, 1111, 1032, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 1103,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 1038, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 1126, 1127, 350, 1050, 261, 0, 0, 0,
	0, 0, 351, 352, 353, 1110, 0, 0, 0, 354,
	0, 355, 0, 0, 1137, 356, 357, 1123, 1124, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 1133,
	0, 1060, 367, 0, 368, 369, 370, 371, 372, 1096,
	1097, 1100, 449, 1139, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 262, 379, 380, 381, 383, 0,
	1138, 382, 1105, 1106, 0, 1066, 0, 384, 385, 1140,
	1098, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 1134, 1143, 400, 401, 1144, 0, 402, 0,
	0, 0, 403, 404, 407, 1089, 1088, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 1029, 263, 1147, 446, 447, 1051, 1099, 448, 1113,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 1148, 459, 1149, 1128,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 1129, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 1109, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 1150, 510, 511,
	512, 513, 1039, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 1092, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 1107, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 1154, 551,
	552, 553, 554, 1130, 557, 0, 558, 559, 1027, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 1119, 1120, 1121, 1122, 0, 577, 0, 569,
	570, 571, 1131, 572, 1132, 1049, 573, 574, 575, 576,
	0, 578, 579, 0, 1033, 580, 581, 582, 584, 585,
	583, 586, 1093, 587, 0, 0, 588, 589, 590, 646,
	1116, 1153, 0, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 1030, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 0, 0,
	0, 0, 1024, 1025, 0, 0, 0, 0, 0, 0,
	0, 1055, 0, 0, 1573, 1053, 1071, 1043, 1044, 1045,
	1041, 1042, 1054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 266, 265, 267, 268, 269, 270,
	271, 0, 272, 273, 0, 0, 0, 0, 0, 1095,
	1059, 0, 0, 0, 274, 275, 1135, 276, 277, 278,
	279, 280, 600, 1108, 0, 281, 1115, 282, 1114, 0,
	1125, 283, 284, 285, 286, 287, 288, 1061, 1094, 1028,
	289, 1155, 1156, 607, 0, 290, 291, 1101, 0, 1082,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 1136, 314,
	315, 1085, 1083, 1084, 1091, 1087, 1086, 1090, 316, 317,
	318, 319, 1118, 320, 1112, 1111, 1032, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	1103, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 1038, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 1126, 1127, 350, 1050, 261, 0, 0,
	0, 0, 0, 351, 352, 353, 1110, 0, 0, 0,
	354, 0, 355, 0, 0, 1137, 356, 357, 1123, 1124,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	1133, 0, 1060, 367, 0, 368, 369, 370, 371, 372,
	1096, 1097, 1100, 449, 1139, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 262, 379, 380, 381, 383,
	0, 1138, 382, 1105, 1106, 0, 1066, 0, 384, 385,
	1140, 1098, 1141, 386, 387, 388, 1142, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 1134, 1143, 400, 401, 1144, 0, 402,
	0, 0, 0, 403, 404, 407, 1089, 1088, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 1145, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	1146, 436, 1029, 263, 1147, 446, 447, 1051, 1099, 448,
	1113, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 1148, 459, 1149,
	1128, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 1129, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 1109,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 1150, 510,
	511, 512, 513, 1039, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 1092, 535, 536, 519, 520, 537,
	538, 1151, 539, 540, 541, 542, 543, 544, 1107, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 1154,
	551, 552, 553, 554, 1130, 557, 0, 558, 559, 1027,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 1119, 1120, 1121, 1122, 0, 577, 0,
	569, 570, 571, 1131, 572, 1132, 1049, 573, 574, 575,
	576, 0, 578, 579, 0, 1033, 580, 581, 582, 584,
	585, 583, 586, 1093, 587, 0, 0, 588, 589, 590,
	646, 1116, 1153, 0, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 1030, 0,
	0, 0, 0, 0, 0, 0, 1026, 0, 0, 0,
	0, 0, 0, 1024, 1025, 0, 0, 0, 0, 0,
	0, 0, 1055, 0, 0, 1568, 1053, 1071, 1043, 1044,
	1045, 1041, 1042, 1054, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 266, 265, 267, 268, 269,
	270, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	1095, 1059, 0, 0, 0, 274, 275, 1135, 276, 277,
	278, 279, 280, 600, 1108, 0, 281, 1115, 282, 1114,
	0, 1125, 283, 284, 285, 286, 287, 288, 1061, 1094,
	1028, 289, 1155, 1156, 607, 0, 290, 291, 1101, 0,
	1082, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 1136,
	314, 315, 1085, 1083, 1084, 1091, 1087, 1086, 1090, 316,
	317, 318, 319, 1118, 320, 1112, 1111, 1032, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 1103, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 1038, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 1126, 1127, 350, 1050, 261, 0,
	0, 0, 0, 0, 351, 352, 353, 1110, 0, 0,
	0, 354, 0, 355, 0, 0, 1137, 356, 357, 1123,
	1124, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 1133, 0, 1060, 367, 0, 368, 369, 370, 371,
	372, 1096, 1097, 1100, 449, 1139, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 262, 379, 380, 381,
	383, 0, 1138, 382, 1105, 1106, 0, 1066, 0, 384,
	385, 1140, 1098, 1141, 386, 387, 388, 1142, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 1134, 1143, 400, 401, 1144, 0,
	402, 0, 0, 0, 403, 404, 407, 1089, 1088, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1145, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1146, 436, 1029, 263, 1147, 446, 447, 1051, 1099,
	448, 1113, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 1148, 459,
	1149, 1128, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 1129, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	1109, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 1150,
	510, 511, 512, 513, 1039, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 1092, 535, 536, 519, 520,
	537, 538, 1151, 539, 540, 541, 542, 543, 544, 1107,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	1154, 551, 552, 553, 554, 1130, 557, 0, 558, 559,
	1027, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 1119, 1120, 1121, 1122, 0, 577,
	0, 569, 570, 571, 1131, 572, 1132, 1049, 573, 574,
	575, 576, 0, 578, 579, 0, 1033, 580, 581, 582,
	584, 585, 583, 586, 1093, 587, 0, 0, 588, 589,
	590, 646, 1116, 1153, 0, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 1030,
	0, 0, 0, 0, 0, 0, 0, 1026, 0, 0,
	0, 0, 0, 0, 1024, 1025, 0, 0, 0, 0,
	0, 0, 0, 1055, 0, 0, 1559, 1053, 1071, 1043,
	1044, 1045, 1041, 1042, 1054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 266, 265, 267, 268,
	269, 270, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 1095, 1059, 0, 0, 0, 274, 275, 1135, 276,
	277, 278, 279, 280, 600, 1108, 0, 281, 1115, 282,
	1114, 0, 1125, 283, 284, 285, 286, 287, 288, 1061,
	1094, 1028, 289, 1155, 1156, 607, 0, 290, 291, 1101,
	0, 1082, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086, 1090,
	316, 317, 318, 319, 1118, 320, 1112, 1111, 1032, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 1103, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 1038, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 1126, 1127, 350, 1050, 261,
	0, 0, 0, 0, 0, 351, 352, 353, 1110, 0,
	0, 0, 354, 0, 355, 0, 0, 1137, 356, 357,
	1123, 1124, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 1133, 0, 1060, 367, 0, 368, 369, 370,
	371, 372, 1096, 1097, 1100, 449, 1139, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 262, 379, 380,
	381, 383, 0, 1138, 382, 1105, 1106, 0, 1066, 0,
	384, 385, 1140, 1098, 1141, 386, 387, 388, 1142, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 1134, 1143, 400, 401, 1144,
	0, 402, 0, 0, 0, 403, 404, 407, 1089, 1088,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1145,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1146, 436, 1029, 263, 1147, 446, 447, 1051,
	1099, 448, 1113, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 1148,
	459, 1149, 1128, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 1129, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 1109, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	1150, 510, 511, 512, 513, 1039, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 1092, 535, 536, 519,
	520, 537, 538, 1151, 539, 540, 541, 542, 543, 544,
	1107, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 1154, 551, 552, 553, 554, 1130, 557, 0, 558,
	559, 1027, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 1119, 1120, 1121, 1122, 0,
	577, 0, 569, 570, 571, 1131, 572, 1132, 1049, 573,
	574, 575, 576, 0, 578, 579, 0, 1033, 580, 581,
	582, 584, 585, 583, 586, 1093, 587, 0, 0, 588,
	589, 590, 646, 1116, 1153, 0, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	1030, 0, 0, 0, 0, 0, 0, 0, 1026, 0,
	0, 0, 0, 0, 0, 1024, 1025, 0, 0, 0,
	0, 0, 0, 0, 1055, 0, 0, 1554, 1053, 1071,
	1043, 1044, 1045, 1041, 1042, 1054, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 266, 265, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 1095, 1059, 0, 0, 0, 274, 275, 1135,
	276, 277, 278, 279, 280, 600, 1108, 0, 281, 1115,
	282, 1114, 0, 1125, 283, 284, 285, 286, 287, 288,
	1061, 1094, 1028, 289, 1155, 1156, 607, 0, 290, 291,
	1101, 0, 1082, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086,
	1090, 316, 317, 318, 319, 1118, 320, 1112, 1111, 1032,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 1103, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 1038, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 1126, 1127, 350, 1050,
	261, 0, 0, 0, 0, 0, 351, 352, 353, 1110,
	0, 0, 0, 354, 0, 355, 0, 0, 1137, 356,
	357, 1123, 1124, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 1133, 0, 1060, 367, 0, 368, 369,
	370, 371, 372, 1096, 1097, 1100, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 262, 379,
	380, 381, 383, 0, 1138, 382, 1105, 1106, 0, 1066,
	0, 384, 385, 1140, 1098, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 1134, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 1089,
	1088, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 1029, 263, 1147, 446, 447,
	1051, 1099, 448, 1113, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 1128, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 1129, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 1109, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 1039, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 1092, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 1107, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 1154, 551, 552, 553, 554, 1130, 557, 0,
	558, 559, 1027, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 1119, 1120, 1121, 1122,
	0, 577, 0, 569, 570, 571, 1131, 572, 1132, 1049,
	573, 574, 575, 576, 0, 578, 579, 0, 1033, 580,
	581, 582, 584, 585, 583, 586, 1093, 587, 0, 0,
	588, 589, 590, 646, 1116, 1153, 0, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 1030, 0, 0, 0, 0, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 0, 1024, 1025, 0, 0,
	0, 0, 0, 0, 0, 1055, 0, 0, 1468, 1053,
	1071, 1043, 1044, 1045, 1041, 1042, 1054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 266, 265,
	267, 268, 269, 270, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 274, 275,
	1135, 276, 277, 278, 279, 280, 600, 1108, 0, 281,
	1115, 282, 1114, 0, 1125, 283, 284, 285, 286, 287,
	288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0, 290,
	291, 1101, 0, 1082, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087,
	1086, 1090, 316, 317, 318, 319, 1118, 320, 1112, 1111,
	1032, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1103, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1038, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1126, 1127, 350,
	1050, 261, 0, 0, 0, 0, 0, 351, 352, 353,
	1110, 0, 0, 0, 354, 0, 355, 0, 0, 1137,
	356, 357, 1123, 1124, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1133, 0, 1060, 367, 0, 368,
	369, 370, 371, 372, 1467, 1097, 1100, 449, 1139, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 262,
	379, 380, 381, 383, 0, 1138, 382, 1105, 1106, 0,
	1066, 0, 384, 385, 1140, 1098, 1141, 386, 387, 388,
	1142, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1134, 1143, 400,
	401, 1144, 0, 402, 0, 0, 0, 403, 404, 407,
	1089, 1088, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1145, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1146, 436, 1029, 263, 1147, 446,
	447, 1051, 1099, 448, 1113, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1148, 459, 1149, 1128, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1129, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1109, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1150, 510, 511, 512, 513, 1039, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1092, 535,
	536, 519, 520, 537, 538, 1151, 539, 540, 541, 542,
	543, 544, 1107, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1154, 551, 552, 553, 554, 1130, 557,
	0, 558, 559, 1027, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1119, 1120, 1121,
	1122, 0, 577, 0, 569, 570, 571, 1131, 572, 1132,
	1049, 573, 574, 575, 576, 0, 578, 579, 0, 1033,
	580, 581, 582, 584, 585, 583, 586, 1093, 587, 0,
	0, 588, 589, 590, 646, 1116, 1153, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 1030, 0, 0, 0, 0, 0, 0, 0,
	1026, 0, 0, 0, 0, 0, 0, 1024, 1025, 0,
	0, 0, 0, 0, 0, 0, 1055, 0, 0, 1462,
	1053, 1071, 1043, 1044, 1045, 1041, 1042, 1054, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 266,
	265, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 1095, 1059, 0, 0, 0, 274,
	275, 1135, 276, 277, 278, 279, 280, 600, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 320, 1112,
	1111, 1032, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 261, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 1060, 367, 0,
	368, 369, 370, 371, 372, 1461, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	262, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 1029, 263, 1147,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 1039, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 1027, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 578, 579, 0,
	1033, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1030, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 1024, 1025,
	0, 0, 0, 0, 0, 0, 0, 1055, 0, 0,
	1455, 1053, 1071, 1043, 1044, 1045, 1041, 1042, 1054, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	266, 265, 267, 268, 269, 270, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 1095, 1059, 0, 0, 0,
	274, 275, 1135, 276, 277, 278, 279, 280, 600, 1108,
	0, 281, 1115, 282, 1114, 0, 1125, 283, 284, 285,
	286, 287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607,
	0, 290, 291, 1101, 0, 1082, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 1136, 314, 315, 1085, 1083, 1084,
	1091, 1087, 1086, 1090, 316, 317, 318, 319, 1118, 320,
	1112, 1111, 1032, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 1103, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 1038, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 1126,
	1127, 350, 1050, 261, 0, 0, 0, 0, 0, 351,
	352, 353, 1110, 0, 0, 0, 354, 0, 355, 0,
	0, 1137, 356, 357, 1123, 1124, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 1133, 0, 1060, 367,
	0, 368, 369, 370, 371, 372, 1096, 1097, 1100, 449,
	1139, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 262, 379, 380, 381, 383, 0, 1138, 382, 1105,
	1106, 0, 1066, 0, 384, 385, 1140, 1098, 1141, 386,
	387, 388, 1142, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 1134,
	1143, 400, 401, 1144, 0, 402, 0, 0, 0, 403,
	404, 407, 1089, 1088, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1145, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1146, 436, 1029, 263,
	1147, 446, 447, 1051, 1099, 448, 1113, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 1148, 459, 1149, 1128, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 1129,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 1109, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 1150, 510, 511, 512, 513, 1039,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	1092, 535, 536, 519, 520, 537, 538, 1151, 539, 540,
	541, 542, 543, 544, 1107, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 1154, 551, 552, 553, 554,
	1130, 557, 0, 558, 559, 1027, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 1119,
	1120, 1121, 1122, 0, 577, 0, 569, 570, 571, 1131,
	572, 1132, 1049, 573, 574, 575, 576, 0, 578, 579,
	0, 1033, 580, 581, 582, 584, 585, 583, 586, 1093,
	587, 0, 0, 588, 589, 590, 646, 1116, 1153, 0,
	592, 591, 593, 649, 0, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 1030, 0, 0, 0, 0, 0,
	0, 0, 1026, 0, 0, 0, 0, 0, 0, 1024,
	1025, 0, 0, 0, 0, 0, 0, 0, 1055, 0,
	0, 1280, 1053, 1071, 1043, 1044, 1045, 1041, 1042, 1054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 266, 265, 267, 268, 269, 270, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 1095, 1059, 0, 0,
	0, 274, 275, 1135, 276, 277, 278, 279, 280, 600,
	1108, 0, 281, 1115, 282, 1114, 0, 1125, 283, 284,
	285, 286, 287, 288, 1061, 1094, 1028, 289, 1155, 1156,
	607, 0, 290, 291, 1101, 0, 1082, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 1136, 314, 315, 1085, 1083,
	1084, 1091, 1087, 1086, 1090, 316, 317, 318, 319, 1118,
	320, 1112, 1111, 1032, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 1103, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 1038,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	1126, 1127, 350, 1050, 261, 0, 0, 0, 0, 0,
	351, 352, 353, 1110, 0, 0, 0, 354, 0, 355,
	0, 0, 1137, 356, 357, 1123, 1124, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 1133, 0, 1060,
	367, 0, 368, 369, 370, 371, 372, 1096, 1097, 1100,
	449, 1139, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 262, 379, 380, 381, 383, 0, 1138, 382,
	1105, 1106, 0, 1066, 0, 384, 385, 1140, 1098, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	1134, 1143, 400, 401, 1144, 0, 402, 0, 0, 0,
	403, 404, 407, 1089, 1088, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 1029,
	263, 1147, 446, 447, 1051, 1099, 448, 1113, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 1148, 459, 1149, 1128, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	1129, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 1109, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 1150, 510, 511, 512, 513,
	1039, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 1092, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 1107, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 1154, 551, 552, 553,
	554, 1130, 557, 0, 558, 559, 1027, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	1119, 1120, 1121, 1122, 0, 577, 0, 569, 570, 571,
	1131, 572, 1132, 1049, 573, 574, 575, 576, 0, 578,
	579, 0, 1033, 580, 581, 582, 584, 585, 583, 586,
	1093, 587, 0, 0, 588, 589, 590, 646, 1116, 1153,
	0, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 1030, 0, 0, 0, 0,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 0,
	1024, 1025, 1071, 1043, 1044, 1045, 1041, 1042, 1054, 1055,
	0, 0, 0, 1053, 0, 0, 0, 0, 0, 264,
	266, 265, 267, 268, 269, 270, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 1095, 1059, 0, 0, 0,
	274, 275, 1135, 276, 277, 278, 279, 280, 600, 1108,
	0, 281, 1115, 282, 1114, 0, 1125, 283, 284, 285,
	286, 287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607,
	0, 290, 291, 1101, 0, 1082, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 1136, 314, 315, 1085, 1083, 1084,
	1091, 1087, 1086, 1090, 316, 317, 318, 319, 1118, 320,
	1112, 1111, 1032, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 1103, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 1038, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 1126,
	1127, 350, 1050, 261, 0, 0, 0, 0, 0, 351,
	352, 353, 1110, 0, 0, 0, 354, 0, 355, 0,
	0, 1137, 356, 357, 1123, 1124, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 1133, 0, 1060, 367,
	0, 368, 369, 370, 371, 372, 1096, 1097, 1100, 449,
	1139, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 262, 379, 380, 381, 383, 0, 1138, 382, 1105,
	1106, 0, 1066, 0, 384, 385, 1140, 1098, 1141, 386,
	387, 388, 1142, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 1134,
	1143, 400, 401, 1144, 0, 402, 0, 0, 0, 403,
	404, 407, 1089, 1088, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1145, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1146, 436, 1029, 263,
	1147, 446, 447, 1051, 1099, 448, 1113, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 1148, 459, 1149, 1128, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 1129,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 1109, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 1150, 510, 511, 512, 513, 1039,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	1092, 535, 536, 519, 520, 537, 538, 1151, 539, 540,
	541, 542, 543, 544, 1107, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 1154, 551, 552, 553, 554,
	1130, 557, 0, 558, 559, 1027, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 1119,
	1120, 1121, 1122, 0, 577, 0, 569, 570, 571, 1131,
	572, 1132, 1049, 573, 574, 575, 576, 0, 578, 579,
	0, 1033, 580, 581, 582, 584, 585, 583, 586, 1093,
	587, 0, 0, 588, 589, 590, 646, 1116, 1153, 0,
	592, 591, 593, 649, 0, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 1030, 0, 0, 0, 0, 0,
	0, 0, 1026, 0, 0, 0, 0, 0, 0, 1024,
	1025, 1071, 1043, 1044, 1045, 1041, 1042, 1054, 1055, 0,
	0, 0, 1053, 0, 0, 0, 0, 0, 264, 266,
	265, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 1095, 1059, 0, 0, 0, 274,
	275, 1135, 276, 277, 278, 279, 280, 600, 1108, 0,
	281, 1115, 282, 1114, 0, 1125, 283, 284, 285, 286,
	287, 288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 4383, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 1118, 320, 1112,
	1111, 1032, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 1103, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 1038, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 1050, 261, 0, 0, 0, 0, 0, 351, 352,
	353, 1110, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 1123, 1124, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 1060, 367, 0,
	368, 369, 370, 371, 372, 1096, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	262, 379, 380, 381, 383, 0, 1138, 382, 1105, 1106,
	0, 1066, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 1029, 263, 1147,
	446, 447, 1051, 1099, 448, 1113, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 1109, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 1039, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 1107, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 1154, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 1027, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 1119, 1120,
	1121, 1122, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 1049, 573, 574, 575, 576, 0, 4382, 579, 0,
	1033, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 1116, 1153, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1030, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 1024, 1025,
	1071, 1043, 1044, 1045, 1041, 1042, 1054, 1055, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 264, 266, 265,
	267, 268, 269, 270, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 1095, 1059, 0, 0, 0, 274, 275,
	1135, 276, 277, 278, 279, 280, 4381, 1108, 0, 281,
	1115, 282, 1114, 0, 1125, 283, 284, 285, 286, 287,
	288, 1061, 1094, 1028, 289, 1155, 1156, 607, 0, 290,
	291, 1101, 0, 1082, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1136, 314, 4383, 1085, 1083, 1084, 1091, 1087,
	1086, 1090, 316, 317, 318, 319, 1118, 320, 1112, 1111,
	1032, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1103, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1038, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1126, 1127, 350,
	1050, 261, 0, 0, 0, 0, 0, 351, 352, 353,
	1110, 0, 0, 0, 354, 0, 355, 0, 0, 1137,
	356, 357, 1123, 1124, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1133, 0, 1060, 367, 0, 368,
	369, 370, 371, 372, 1096, 1097, 1100, 449, 1139, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 262,
	379, 380, 381, 383, 0, 1138, 382, 1105, 1106, 0,
	1066, 0, 384, 385, 1140, 1098, 1141, 386, 387, 388,
	1142, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1134, 1143, 400,
	401, 1144, 0, 402, 0, 0, 0, 403, 404, 407,
	1089, 1088, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1145, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1146, 436, 1029, 263, 1147, 446,
	447, 1051, 1099, 448, 1113, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1148, 459, 1149, 1128, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1129, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1109, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1150, 510, 511, 512, 513, 1039, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1092, 535,
	536, 519, 520, 537, 538, 1151, 539, 540, 541, 542,
	543, 544, 1107, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1154, 551, 552, 553, 554, 1130, 557,
	0, 558, 559, 1027, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1119, 1120, 1121,
	1122, 0, 577, 0, 569, 570, 571, 1131, 572, 1132,
	1049, 573, 574, 575, 576, 0, 4382, 579, 0, 1033,
	580, 581, 582, 584, 585, 583, 586, 1093, 587, 0,
	0, 588, 589, 590, 646, 1116, 1153, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 1030, 0, 0, 0, 0, 0, 0, 0,
	1026, 0, 0, 0, 0, 0, 0, 1024, 1025, 1071,
	1043, 1044, 1045, 1041, 1042, 1054, 1055, 0, 0, 0,
	1053, 0, 0, 0, 0, 0, 264, 266, 265, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 1095, 1059, 0, 0, 0, 274, 275, 1135,
	276, 277, 278, 279, 280, 600, 1108, 0, 281, 1115,
	282, 1114, 0, 1125, 283, 284, 285, 286, 287, 288,
	1061, 1094, 1028, 289, 1155, 1156, 607, 0, 290, 291,
	1101, 0, 1082, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 4058, 315, 1085, 1083, 1084, 1091, 1087, 1086,
	1090, 316, 317, 318, 319, 1118, 320, 1112, 1111, 1032,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 1103, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 1038, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 1126, 1127, 350, 1050,
	261, 0, 0, 0, 0, 0, 351, 352, 353, 1110,
	0, 0, 0, 354, 0, 355, 0, 0, 1137, 356,
	357, 1123, 1124, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 1133, 0, 4059, 367, 0, 368, 369,
	370, 371, 372, 1096, 1097, 1100, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 262, 379,
	380, 381, 383, 0, 1138, 382, 1105, 1106, 0, 1066,
	0, 384, 385, 1140, 1098, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 1134, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 1089,
	1088, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 1029, 263, 1147, 446, 447,
	1051, 1099, 448, 1113, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 1128, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 1129, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 1109, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 4057, 1039, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 1092, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 1107, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 1154, 551, 552, 553, 554, 1130, 557, 0,
	558, 559, 1027, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 1119, 1120, 1121, 1122,
	0, 577, 0, 569, 570, 571, 1131, 572, 1132, 1049,
	573, 574, 575, 576, 0, 578, 579, 0, 1033, 580,
	581, 582, 584, 585, 583, 586, 1093, 587, 0, 0,
	588, 589, 590, 646, 1116, 1153, 0, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 1030, 0, 0, 0, 0, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 0, 1024, 1025, 1071, 1043,
	1044, 1045, 2963, 2964, 1054, 1055, 0, 0, 0, 1053,
	0, 0, 0, 0, 0, 264, 266, 265, 267, 268,
	269, 270, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 1095, 1059, 0, 0, 0, 274, 275, 1135, 276,
	277, 278, 279, 280, 600, 1108, 0, 281, 1115, 282,
	1114, 0, 1125, 283, 284, 285, 286, 287, 288, 1061,
	1094, 1028, 289, 1155, 1156, 607, 0, 290, 291, 1101,
	0, 1082, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086, 1090,
	316, 317, 318, 319, 1118, 320, 1112, 1111, 1032, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 1103, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 1038, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 1126, 1127, 350, 1050, 261,
	0, 0, 0, 0, 0, 351, 352, 353, 1110, 0,
	0, 0, 354, 0, 355, 0, 0, 1137, 356, 357,
	1123, 1124, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 1133, 0, 1060, 367, 0, 368, 369, 370,
	371, 372, 1096, 1097, 1100, 449, 1139, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 262, 379, 380,
	381, 383, 0, 1138, 382, 1105, 1106, 0, 1066, 0,
	384, 385, 1140, 1098, 1141, 386, 387, 388, 1142, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 1134, 1143, 400, 401, 1144,
	0, 402, 0, 0, 0, 403, 404, 407, 1089, 1088,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1145,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1146, 436, 1029, 263, 1147, 446, 447, 1051,
	1099, 448, 1113, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 1148,
	459, 1149, 1128, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 1129, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 1109, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	1150, 510, 511, 512, 513, 1039, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 1092, 535, 536, 519,
	520, 537, 538, 1151, 539, 540, 541, 542, 543, 544,
	1107, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 1154, 551, 552, 553, 554, 1130, 557, 0, 558,
	559, 1027, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 1119, 1120, 1121, 1122, 0,
	577, 0, 569, 570, 571, 1131, 572, 1132, 1049, 573,
	574, 575, 576, 0, 578, 579, 0, 1033, 580, 581,
	582, 584, 585, 583, 586, 1093, 587, 0, 0, 588,
	589, 590, 646, 1116, 1153, 0, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	1030, 0, 0, 0, 0, 0, 0, 0, 1026, 0,
	0, 0, 0, 0, 0, 1024, 1025, 1071, 1043, 1044,
	1045, 2961, 2962, 1054, 1055, 0, 0, 0, 1053, 0,
	0, 0, 0, 0, 264, 266, 265, 267, 268, 269,
	270, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	1095, 1059, 0, 0, 0, 274, 275, 1135, 276, 277,
	278, 279, 280, 600, 1108, 0, 281, 1115, 282, 1114,
	0, 1125, 283, 284, 285, 286, 287, 288, 1061, 1094,
	1028, 289, 1155, 1156, 607, 0, 290, 291, 1101, 0,
	1082, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 1136,
	314, 315, 1085, 1083, 1084, 1091, 1087, 1086, 1090, 316,
	317, 318, 319, 1118, 320, 1112, 1111, 1032, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 1103, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 1038, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 1126, 1127, 350, 1050, 261, 0,
	0, 0, 0, 0, 351, 352, 353, 1110, 0, 0,
	0, 354, 0, 355, 0, 0, 1137, 356, 357, 1123,
	1124, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 1133, 0, 1060, 367, 0, 368, 369, 370, 371,
	372, 1096, 1097, 1100, 449, 1139, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 262, 379, 380, 381,
	383, 0, 1138, 382, 1105, 1106, 0, 1066, 0, 384,
	385, 1140, 1098, 1141, 386, 387, 388, 1142, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 1134, 1143, 400, 401, 1144, 0,
	402, 0, 0, 0, 403, 404, 407, 1089, 1088, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1145, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1146, 436, 1029, 263, 1147, 446, 447, 1051, 1099,
	448, 1113, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 1148, 459,
	1149, 1128, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 1129, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	1109, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 1150,
	510, 511, 512, 513, 1039, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 1092, 535, 536, 519, 520,
	537, 538, 1151, 539, 540, 541, 542, 543, 544, 1107,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	1154, 551, 552, 553, 554, 1130, 557, 0, 558, 559,
	1027, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 1119, 1120, 1121, 1122, 0, 577,
	0, 569, 570, 571, 1131, 572, 1132, 1049, 573, 574,
	575, 576, 0, 578, 579, 0, 1033, 580, 581, 582,
	584, 585, 583, 586, 1093, 587, 0, 0, 588, 589,
	590, 646, 1116, 1153, 0, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 1030,
	0, 0, 0, 0, 0, 0, 0, 1026, 0, 0,
	0, 0, 0, 0, 1024, 1025, 1071, 1043, 1044, 1045,
	1041, 1042, 1054, 1055, 0, 0, 0, 1053, 0, 0,
	0, 0, 0, 264, 266, 265, 267, 268, 269, 270,
	271, 0, 272, 273, 0, 0, 0, 0, 0, 1095,
	1059, 0, 0, 0, 274, 275, 1135, 276, 277, 278,
	279, 280, 600, 1108, 0, 281, 1115, 282, 1114, 0,
	1125, 283, 284, 285, 286, 287, 288, 1061, 1094, 1028,
	289, 1155, 1156, 607, 0, 290, 291, 1101, 0, 1082,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 1136, 314,
	315, 1085, 1083, 1084, 1091, 1087, 1086, 1090, 316, 317,
	318, 319, 1118, 320, 1112, 1111, 1032, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	1103, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 1038, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 1126, 1127, 350, 1050, 261, 0, 0,
	0, 0, 0, 351, 352, 353, 1110, 0, 0, 0,
	354, 0, 355, 0, 0, 1137, 356, 357, 1123, 1124,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	1133, 0, 1060, 367, 0, 368, 369, 370, 371, 372,
	1096, 1097, 1100, 449, 1139, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 262, 379, 380, 381, 383,
	0, 1138, 382, 1105, 1106, 0, 1066, 0, 384, 385,
	1140, 1098, 1141, 386, 387, 388, 1142, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 1134, 1143, 400, 401, 1144, 0, 402,
	0, 0, 0, 403, 404, 407, 1089, 1088, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 1145, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	1146, 436, 1029, 263, 1147, 446, 447, 1051, 1099, 448,
	1113, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 1148, 459, 1149,
	1128, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 1129, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 1109,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 1150, 510,
	511, 512, 513, 1039, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 1092, 535, 536, 519, 520, 537,
	538, 1151, 539, 540, 541, 542, 543, 544, 1107, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 1154,
	551, 552, 553, 554, 1130, 557, 0, 558, 559, 1027,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 1119, 1120, 1121, 1122, 0, 577, 0,
	569, 570, 571, 1131, 572, 1132, 1049, 573, 574, 575,
	576, 0, 578, 579, 0, 1033, 580, 581, 582, 584,
	585, 583, 586, 1093, 587, 0, 0, 588, 589, 590,
	646, 1116, 1153, 0, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 1030, 0,
	0, 0, 0, 0, 0, 0, 1026, 0, 0, 0,
	0, 0, 0, 2305, 2306, 1071, 1043, 1044, 1045, 1041,
	1042, 1054, 1055, 0, 0, 0, 1053, 0, 0, 0,
	0, 0, 264, 266, 265, 267, 268, 269, 270, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 1095, 1059,
	0, 0, 0, 274, 275, 1135, 276, 277, 278, 279,
	280, 600, 1108, 0, 281, 1115, 282, 1114, 0, 1125,
	283, 284, 285, 286, 287, 288, 1061, 1094, 0, 289,
	1155, 1156, 607, 0, 290, 291, 1101, 0, 1082, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 1136, 314, 315,
	1085, 1083, 1084, 1091, 1087, 1086, 1090, 316, 317, 318,
	319, 1118, 320, 1112, 1111, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 1103,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 1038, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 1126, 1127, 350, 1050, 261, 0, 0, 0,
	0, 0, 351, 352, 353, 1110, 0, 0, 0, 354,
	0, 355, 0, 0, 1137, 356, 357, 1123, 1124, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 1133,
	0, 1060, 367, 0, 368, 369, 370, 371, 372, 1096,
	1097, 1100, 449, 1139, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 262, 379, 380, 381, 383, 0,
	1138, 382, 1105, 1106, 0, 1066, 0, 384, 385, 1140,
	1098, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 1134, 1143, 400, 401, 1144, 0, 402, 0,
	0, 0, 403, 404, 407, 1089, 1088, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 0, 263, 1147, 446, 447, 1051, 1099, 448, 1113,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 1148, 459, 1149, 1128,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 1129, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 1109, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 1150, 510, 511,
	512, 513, 1039, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 1092, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 1107, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 1154, 551,
	552, 553, 554, 1130, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 1119, 1120, 1121, 1122, 0, 577, 0, 569,
	570, 571, 1131, 572, 1132, 1049, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 1093, 587, 0, 0, 588, 589, 590, 646,
	1116, 1153, 0, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 2525, 0, 0, 0, 0,
	0, 0, 2523, 2524, 1071, 1043, 1044, 1045, 1041, 1042,
	1054, 1055, 0, 0, 0, 1053, 0, 0, 0, 0,
	0, 264, 266, 265, 267, 268, 269, 270, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 1095, 1059, 0,
	0, 0, 274, 275, 1135, 276, 277, 278, 279, 280,
	600, 1108, 0, 281, 1115, 282, 1114, 0, 1125, 283,
	284, 285, 286, 287, 288, 1061, 1094, 0, 289, 1155,
	1156, 607, 0, 290, 291, 1101, 0, 1082, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 1136, 314, 315, 1085,
	1083, 1084, 1091, 1087, 1086, 1090, 316, 317, 318, 319,
	1118, 320, 1112, 1111, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 1103, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	1038, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 1126, 1127, 350, 1050, 261, 0, 0, 0, 0,
	0, 351, 352, 353, 1110, 0, 0, 0, 354, 0,
	355, 0, 0, 1137, 356, 357, 1123, 1124, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 1133, 0,
	1060, 367, 0, 368, 369, 370, 371, 372, 1096, 1097,
	1100, 449, 1139, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 262, 379, 380, 381, 383, 0, 1138,
	382, 1105, 1106, 0, 1066, 0, 384, 385, 1140, 1098,
	1141, 386, 387, 388, 1142, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 1134, 1143, 400, 401, 1144, 0, 402, 0, 0,
	0, 403, 404, 407, 1089, 1088, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1145, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1146, 436,
	0, 263, 1147, 446, 447, 1051, 1099, 448, 1113, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 1148, 459, 1149, 1128, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 1129, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 1109, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 1150, 510, 511, 512,
	513, 2956, 2957, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 1092, 535, 536, 519, 520, 537, 538, 1151,
	539, 540, 541, 542, 543, 544, 1107, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 1154, 551, 552,
	553, 554, 1130, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 1119, 1120, 1121, 1122, 0, 577, 0, 569, 570,
	571, 1131, 572, 1132, 1049, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 1093, 587, 0, 0, 588, 589, 590, 646, 1116,
	1153, 0, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2029, 2030, 1071, 1043, 1044, 1045, 1041, 1042, 1054,
	1055, 0, 0, 0, 1053, 0, 0, 0, 0, 0,
	264, 266, 265, 267, 268, 269, 270, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 1095, 1059, 0, 0,
	0, 274, 275, 1135, 276, 277, 278, 279, 280, 0,
	1108, 0, 281, 1115, 282, 1114, 0, 1125, 283, 284,
	285, 286, 287, 288, 1061, 1094, 1028, 289, 1155, 1156,
	607, 0, 290, 291, 1101, 0, 1082, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 1136, 314, 4383, 1085, 1083,
	1084, 1091, 1087, 1086, 1090, 316, 317, 318, 319, 1118,
	320, 1112, 1111, 1032, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 1103, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 1038,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	1126, 1127, 350, 1050, 261, 0, 0, 0, 0, 0,
	351, 352, 353, 1110, 0, 0, 0, 354, 0, 355,
	0, 0, 1137, 356, 357, 1123, 1124, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 1133, 0, 1060,
	367, 0, 368, 369, 370, 371, 372, 1096, 1097, 1100,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 262, 379, 380, 381, 383, 0, 1138, 382,
	1105, 1106, 0, 1066, 0, 384, 385, 0, 1098, 0,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	1134, 1143, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 404, 407, 1089, 1088, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 1029,
	263, 0, 446, 447, 1051, 1099, 448, 1113, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 1148, 459, 1149, 1128, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	1129, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 1109, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 1150, 510, 511, 512, 513,
	1039, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 1092, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 1107, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 1154, 551, 552, 553,
	554, 1130, 557, 0, 558, 559, 1027, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	1119, 1120, 1121, 1122, 0, 577, 0, 569, 570, 571,
	1131, 572, 1132, 1049, 573, 574, 575, 576, 0, 4382,
	579, 0, 1033, 580, 581, 582, 584, 585, 583, 586,
	1093, 587, 0, 0, 588, 589, 590, 646, 1116, 1153,
	0, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1017, 0, 1193, 0, 0,
	1024, 1025, 0, 0, 0, 0, 0, 0, 0, 1055,
	0, 0, 0, 1053, 264, 266, 265, 267, 268, 269,
	270, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	1095, 0, 0, 0, 0, 274, 275, 1135, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 1094,
	0, 289, 605, 606, 607, 0, 290, 291, 1101, 0,
	1082, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 1136,
	314, 315, 1085, 1083, 1084, 1091, 1087, 1086, 1090, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 1126, 1127, 350, 0, 261, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 1137, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 1133, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 1096, 1097, 1100, 449, 1139, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 262, 379, 380, 381,
	383, 0, 1138, 382, 622, 623, 0, 624, 0, 384,
	385, 1140, 1098, 1141, 386, 387, 388, 1142, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 1179, 396,
	398, 397, 0, 399, 1134, 1143, 400, 401, 1144, 0,
	402, 0, 0, 0, 403, 404, 407, 1089, 1088, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1145, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1146, 436, 0, 263, 1147, 446, 447, 0, 1099,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 1185,
	454, 455, 456, 0, 0, 457, 458, 629, 1148, 459,
	1149, 1128, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 1129, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 1150,
	510, 511, 512, 513, 636, 1187, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 223, 530,
	531, 529, 532, 533, 534, 1092, 535, 536, 519, 520,
	537, 538, 1151, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 1130, 557, 0, 558, 559,
	0, 556, 225, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 1131, 572, 1132, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 1093, 587, 0, 0, 588, 589,
	590, 1543, 647, 648, 0, 592, 591, 593, 649, 1193,
	0, 0, 217, 594, 595, 650, 596, 597, 598, 0,
	0, 218, 0, 0, 0, 0, 264, 266, 265, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 0, 0,
	0, 1183, 1095, 1875, 0, 0, 0, 274, 275, 1135,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 1094, 0, 289, 605, 606, 607, 0, 290, 291,
	1101, 0, 1082, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086,
	1090, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 1126, 1127, 350, 0,
	261, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 1137, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 1133, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 1096, 1097, 1100, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 262, 379,
	380, 381, 383, 0, 1138, 382, 622, 623, 0, 624,
	0, 384, 385, 1140, 1098, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	1179, 396, 398, 397, 0, 399, 1134, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 1089,
	1088, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 0, 263, 1147, 446, 447,
	0, 1099, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 1185, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 1128, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 1129, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 636, 1187, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	223, 530, 531, 529, 532, 533, 534, 1092, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 1130, 557, 0,
	558, 559, 0, 556, 225, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 1131, 572, 1132, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 1093, 587, 0, 0,
	588, 589, 590, 1543, 647, 648, 0, 592, 591, 593,
	649, 3140, 0, 1193, 217, 594, 595, 650, 596, 597,
	598, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	264, 266, 265, 267, 268, 269, 270, 271, 0, 272,
	273, 0, 0, 1183, 0, 1875, 1095, 0, 0, 0,
	0, 274, 275, 1135, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 1094, 0, 289, 605, 606,
	607, 0, 290, 291, 1101, 0, 1082, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 1136, 314, 315, 1085, 1083,
	1084, 1091, 1087, 1086, 1090, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	1126, 1127, 350, 0, 261, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 1137, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 1133, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 1096, 1097, 1100,
	449, 1139, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 262, 379, 380, 381, 383, 0, 1138, 382,
	622, 623, 0, 624, 0, 384, 385, 1140, 1098, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 1179, 396, 398, 397, 0, 399,
	1134, 1143, 400, 401, 1144, 0, 402, 0, 0, 0,
	403, 404, 407, 1089, 1088, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 0,
	263, 1147, 446, 447, 0, 1099, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 1185, 454, 455, 456, 0,
	0, 457, 458, 629, 1148, 459, 1149, 1128, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	1129, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 1150, 510, 511, 512, 513,
	636, 1187, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 1092, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 1130, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	1131, 572, 1132, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	1093, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	0, 592, 591, 593, 649, 1175, 0, 1193, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 266, 265, 267, 268, 269,
	270, 271, 0, 272, 273, 0, 0, 1183, 0, 1181,
	1095, 0, 0, 0, 0, 274, 275, 1135, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 1094,
	0, 289, 605, 606, 607, 0, 290, 291, 1101, 0,
	1082, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 1136,
	314, 315, 1085, 1083, 1084, 1091, 1087, 1086, 1090, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 1126, 1127, 350, 0, 261, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 1137, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 1133, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 1096, 1097, 1100, 449, 1139, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 262, 379, 380, 381,
	383, 0, 1138, 382, 622, 623, 0, 624, 0, 384,
	385, 1140, 1098, 1141, 386, 387, 388, 1142, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 1179, 396,
	398, 397, 0, 399, 1134, 1143, 400, 401, 1144, 0,
	402, 0, 0, 0, 403, 404, 407, 1089, 1088, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1145, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1146, 436, 0, 263, 1147, 446, 447, 0, 1099,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 1185,
	454, 455, 456, 0, 0, 457, 458, 629, 1148, 459,
	1149, 1128, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 1129, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 1150,
	510, 511, 512, 513, 636, 1187, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 1092, 535, 536, 519, 520,
	537, 538, 1151, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 1130, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 1131, 572, 1132, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 1093, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 0, 592, 591, 593, 649, 1193,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 0, 0, 0, 0, 0, 264, 266, 265, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 0, 0,
	0, 1183, 1095, 1181, 0, 0, 0, 274, 275, 1135,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 1094, 0, 289, 605, 606, 607, 0, 290, 291,
	1101, 0, 1082, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 314, 315, 1085, 1083, 1084, 1091, 1087, 1086,
	1090, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 1126, 1127, 350, 0,
	261, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 1137, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 1133, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 1096, 1097, 1100, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 262, 379,
	380, 381, 383, 0, 1138, 382, 622, 623, 0, 624,
	0, 384, 385, 1140, 1098, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	1179, 396, 398, 397, 0, 399, 1134, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 1089,
	1088, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 0, 263, 1147, 446, 447,
	0, 1099, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 1185, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 1128, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 1129, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 636, 1187, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 1092, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 1130, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 1131, 572, 1132, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 1093, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 0, 592, 591, 593,
	649, 1193, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 0, 0, 0, 0, 0, 264, 266,
	265, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	0, 0, 0, 1183, 1095, 1181, 0, 0, 0, 274,
	275, 1135, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 1094, 0, 289, 605, 606, 607, 0,
	290, 291, 1101, 0, 1082, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 1085, 1083, 1084, 1091,
	1087, 1086, 1090, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1126, 1127,
	350, 0, 261, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1133, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 1096, 1097, 1100, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	262, 379, 380, 381, 383, 0, 1138, 382, 622, 623,
	0, 624, 0, 384, 385, 1140, 1098, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 1134, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 1089, 1088, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 0, 263, 1147,
	446, 447, 0, 1099, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 1128, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1129, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1092,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 1130,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 1131, 572,
	1132, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 1093, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 1193, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	264, 266, 265, 267, 268, 269, 270, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 1095, 3904, 0, 0,
	0, 274, 275, 1135, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 1094, 0, 289, 605, 606,
	607, 0, 290, 291, 1101, 0, 1082, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 1136, 314, 315, 1085, 1083,
	1084, 1091, 1087, 1086, 1090, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	1126, 1127, 350, 0, 261, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 1137, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 1133, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 1096, 1097, 1100,
	449, 1139, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 262, 379, 380, 381, 383, 0, 1138, 382,
	622, 623, 0, 624, 0, 384, 385, 1140, 1098, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	1134, 1143, 400, 401, 1144, 0, 402, 0, 0, 0,
	403, 404, 407, 1089, 1088, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 0,
	263, 1147, 446, 447, 0, 1099, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 1148, 459, 1149, 1128, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	1129, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 1150, 510, 511, 512, 513,
	636, 1187, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 1092, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 1130, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	1131, 572, 1132, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	1093, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	0, 592, 591, 593, 649, 1017, 0, 1273, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 266, 265, 267, 268, 269,
	270, 271, 0, 272, 273, 0, 0, 0, 0, 1774,
	599, 0, 0, 0, 0, 274, 275, 1135, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	1278, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 1136,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 261, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 1137, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 1139, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 1138, 382, 622, 623, 0, 624, 0, 384,
	385, 1140, 625, 1141, 386, 387, 388, 1142, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 1143, 400, 401, 1144, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1145, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1146, 436, 0, 0, 1147, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 1148, 459,
	1149, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 1150,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 223, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 1151, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 225, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 1543, 647, 648, 0, 592, 591, 593, 649, 1540,
	0, 1273, 217, 594, 595, 650, 596, 597, 598, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 264, 266,
	265, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	0, 0, 0, 182, 599, 0, 0, 0, 0, 274,
	275, 1135, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 1278, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 261, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 1138, 382, 622, 623,
	0, 624, 0, 384, 385, 1140, 625, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 0, 0, 1147,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 223, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 225, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 1543, 647, 648, 0, 592,
	591, 593, 649, 0, 0, 0, 217, 594, 595, 650,
	596, 597, 598, 0, 0, 218, 0, 0, 0, 0,
	0, 1273, 1272, 0, 0, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 264, 266,
	265, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 274,
	275, 1135, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 1278, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 261, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 1138, 382, 622, 623,
	0, 624, 0, 384, 385, 1140, 625, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 0, 0, 1147,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 1273, 1272, 0, 0, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1565, 264, 266,
	265, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 274,
	275, 1135, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 1278, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 261, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 1138, 382, 622, 623,
	0, 624, 0, 384, 385, 1140, 625, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 0, 0, 1147,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 1273, 2120, 0, 0, 0, 0, 2121, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3410, 264, 266,
	265, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 274,
	275, 1135, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 1278, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 261, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 1138, 382, 622, 623,
	0, 624, 0, 384, 385, 1140, 625, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 2119, 398, 397, 0, 399, 626, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 0, 0, 1147,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 1273, 1272, 0, 0, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1565, 264, 266,
	265, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 274,
	275, 1135, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 1278, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 261, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 1138, 382, 622, 623,
	0, 624, 0, 384, 385, 1140, 625, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 0, 0, 1147,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 1193, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	264, 266, 265, 267, 268, 269, 270, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 1095, 1549, 0, 0,
	0, 274, 275, 1135, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 1094, 0, 289, 605, 606,
	607, 0, 290, 291, 1101, 0, 1082, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 1136, 314, 315, 1085, 1083,
	1084, 1091, 1087, 1086, 1090, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	1126, 1127, 350, 0, 261, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 1137, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 1133, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 1096, 1097, 1100,
	449, 1139, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 262, 379, 380, 381, 383, 0, 1138, 382,
	622, 623, 0, 624, 0, 384, 385, 1140, 1098, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	1134, 1143, 400, 401, 1144, 0, 402, 0, 0, 0,
	403, 404, 407, 1089, 1088, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 0,
	263, 1147, 446, 447, 0, 1099, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 1148, 459, 1149, 1128, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	1129, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 1150, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 1092, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 1130, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	1131, 572, 1132, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	1093, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	0, 592, 591, 593, 649, 1017, 0, 258, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 266, 265, 267, 268, 269,
	270, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 274, 275, 0, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 0, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 0, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 223, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 225, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 1543, 647, 648, 0, 592, 591, 593, 649, 258,
	0, 0, 217, 594, 595, 650, 596, 597, 598, 0,
	0, 218, 0, 0, 0, 0, 264, 266, 265, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 599, 182, 0, 0, 0, 274, 275, 0,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	261, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 0, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 0, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 262, 379,
	380, 381, 383, 0, 0, 382, 622, 623, 0, 624,
	0, 384, 385, 0, 625, 0, 386, 387, 388, 0,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 0, 400, 401,
	0, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	0, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 0, 436, 0, 263, 0, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	0, 459, 0, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 0, 592, 591, 593,
	649, 258, 2874, 0, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 0, 0, 0, 0, 0, 264, 266,
	265, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 599, 1889, 0, 0, 0, 274,
	275, 0, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 0, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 0, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 258, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	264, 266, 265, 267, 268, 269, 270, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 599, 4535, 0, 0,
	0, 274, 275, 0, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 261, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 619, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 262, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 385, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	263, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	258, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 264, 266, 265,
	267, 268, 269, 270, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 3362, 274, 275,
	0, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 261, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 262,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 263, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 258, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 264, 266, 265, 267, 268, 269,
	270, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 1537, 274, 275, 0, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 0, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 0, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 0, 592, 591, 593, 649, 258,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 0, 0, 0, 0, 0, 264, 266, 265, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 599, 2862, 0, 0, 0, 274, 275, 0,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	0, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 0, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 0, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 0, 379,
	380, 381, 383, 0, 0, 382, 622, 623, 0, 624,
	0, 384, 385, 0, 625, 0, 386, 387, 388, 0,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 0, 400, 401,
	0, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	0, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 0, 436, 0, 0, 0, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	0, 459, 0, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 0, 592, 591, 593,
	649, 258, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 0, 0, 0, 0, 0, 264, 266,
	265, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 599, 3513, 0, 0, 0, 274,
	275, 0, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 0, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 0, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 861, 0, 769, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 266, 265, 267, 268, 269, 270, 271,
	0, 272, 273, 0, 0, 0, 0, 2194, 599, 0,
	0, 0, 0, 274, 275, 0, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 776,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 261, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 859, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 262, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 0,
	436, 0, 263, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	774, 560, 561, 562, 563, 564, 775, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 767, 0, 769,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 266, 265, 267,
	268, 269, 270, 271, 779, 272, 273, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 274, 275, 0,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 776, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	261, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 0, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 0, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 262, 379,
	380, 381, 383, 0, 0, 382, 622, 623, 0, 624,
	0, 384, 385, 0, 625, 0, 386, 387, 388, 0,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 0, 400, 401,
	0, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	0, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 0, 436, 0, 263, 0, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	0, 459, 0, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 774, 560, 561, 562, 563, 564,
	775, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 1926, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 264, 266, 265, 267, 268, 269, 270,
	271, 0, 272, 273, 0, 0, 0, 0, 779, 0,
	0, 0, 0, 0, 274, 275, 1135, 276, 277, 278,
	279, 280, 0, 1932, 0, 281, 1922, 282, 1938, 0,
	1945, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 1948, 1949, 0, 0, 290, 291, 0, 0, 1278,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 1136, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 1118, 320, 1936, 1935, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	1103, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 0, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 0, 351, 352, 353, 1934, 0, 0, 0,
	354, 0, 355, 0, 0, 1137, 356, 357, 1943, 1944,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	0, 0, 0, 367, 0, 368, 369, 370, 371, 372,
	0, 0, 0, 449, 1139, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 1138, 382, 1929, 1930, 0, 1925, 0, 384, 385,
	1140, 0, 1141, 386, 387, 388, 1142, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 0, 1143, 400, 401, 1144, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 1145, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	1146, 436, 0, 0, 1147, 446, 447, 0, 0, 448,
	1937, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 0, 1148, 459, 1149,
	0, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 1919, 472, 473, 474, 1920,
	475, 476, 477, 0, 478, 0, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 1933,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 1150, 510,
	511, 512, 513, 0, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 1151, 539, 540, 541, 542, 543, 544, 1931, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 1947,
	551, 552, 553, 554, 0, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 1939, 1940, 1941, 1942, 0, 577, 0,
	569, 570, 571, 0, 572, 0, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	0, 1923, 1946, 0, 592, 591, 593, 0, 0, 769,
	0, 0, 594, 595, 0, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 266, 265, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 1913, 274, 275, 0,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 776, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	261, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 0, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 0, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 262, 379,
	380, 381, 383, 0, 0, 382, 622, 623, 0, 624,
	0, 384, 385, 0, 625, 0, 386, 387, 388, 0,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 0, 400, 401,
	0, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	0, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 0, 436, 0, 263, 0, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	0, 459, 0, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 774, 560, 561, 562, 563, 564,
	775, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 769, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 264, 266, 265, 267, 268, 269, 270,
	271, 0, 272, 273, 0, 0, 0, 0, 779, 599,
	0, 0, 0, 0, 274, 275, 0, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	776, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 261, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 262, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 263, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 2235,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 2236, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 774, 560, 561, 562, 563, 564, 775, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 2237,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 1995, 0,
	1273, 1962, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 266, 265,
	267, 268, 269, 270, 271, 779, 272, 273, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 274, 275,
	1135, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 1278, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1136, 314, 315, 0, 0, 0, 0, 0,
	0, 1959, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 261, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 1137,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 1139, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 1138, 382, 622, 623, 0,
	624, 0, 384, 385, 1140, 625, 1141, 386, 387, 388,
	1142, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 1143, 400,
	401, 1144, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1145, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1146, 436, 0, 0, 1147, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1148, 459, 1149, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1150, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1960, 535,
	536, 519, 520, 537, 538, 1151, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 1956, 0, 1273, 1962, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 266, 265, 267, 268, 269, 270, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 274, 275, 1135, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 1278, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 1136, 314, 315, 0,
	0, 0, 0, 0, 0, 1959, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 261, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 1137, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 1139, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 0, 379, 380, 381, 383, 0, 1138,
	382, 622, 623, 0, 624, 0, 384, 385, 1140, 625,
	1141, 386, 387, 388, 1142, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 1143, 400, 401, 1144, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1145, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1146, 436,
	0, 0, 1147, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 1148, 459, 1149, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 1150, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 1960, 535, 536, 519, 520, 537, 538, 1151,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 769, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 264, 266,
	265, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 274,
	275, 0, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 776, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 261, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	262, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 263, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 1952, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 774, 560, 561, 562,
	563, 564, 775, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 1951, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 769, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 264, 266, 265, 267, 268,
	269, 270, 271, 0, 272, 273, 0, 0, 0, 0,
	779, 599, 0, 0, 0, 0, 274, 275, 0, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 776, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 261,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 262, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 263, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 1905, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 774, 560, 561, 562, 563, 564, 775,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 1904, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 0, 592, 591, 593, 649,
	0, 0, 1273, 1962, 594, 595, 650, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	266, 265, 267, 268, 269, 270, 271, 779, 272, 273,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	274, 275, 1135, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 1278, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 1136, 314, 315, 0, 0, 0,
	0, 0, 0, 1959, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 261, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 1137, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	1139, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 1138, 382, 622,
	623, 0, 624, 0, 384, 385, 1140, 625, 1141, 386,
	387, 388, 1142, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	1143, 400, 401, 1144, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1145, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1146, 436, 0, 0,
	1147, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 1148, 459, 1149, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 1150, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	1960, 535, 536, 519, 520, 537, 538, 1151, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 0, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 1273, 1272, 0, 0, 0, 0,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 266, 265, 267, 268, 269, 270, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 274, 275, 1135, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 1278, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 1136, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 261, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 1137, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 1139, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 0, 379, 380, 381, 383, 0, 1138,
	382, 622, 623, 0, 624, 0, 384, 385, 1140, 625,
	1141, 386, 387, 388, 1142, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 1143, 400, 401, 1144, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1145, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1146, 436,
	0, 0, 1147, 446, 447, 3698, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 1148, 459, 1149, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 1150, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 1151,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 0, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 1273, 1272, 0, 0,
	0, 0, 1270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 266, 265, 267, 268, 269, 270,
	271, 0, 272, 273, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 274, 275, 1135, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 1278,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 1136, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 261, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 1137, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 1139, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 1138, 382, 622, 623, 0, 624, 0, 384, 385,
	1140, 625, 1141, 386, 387, 388, 1142, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 1143, 400, 401, 1144, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 1145, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	1146, 436, 0, 0, 1147, 446, 447, 3334, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 1148, 459, 1149,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 1150, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 1151, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 258, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	264, 266, 265, 267, 268, 269, 270, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 599, 0, 0, 0,
	0, 274, 275, 0, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 261, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 619, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 262, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 385, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	263, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	0, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 1593, 0, 1273, 1272, 0,
	0, 0, 0, 1270, 0, 0, 0, 0, 0, 0,
	0, 0, 779, 0, 264, 266, 265, 267, 268, 269,
	270, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 274, 275, 1135, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	1278, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 1136,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 261, 0,
	0, 0, 0, 0, 1592, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 1137, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 1139, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 1138, 382, 622, 623, 0, 624, 0, 384,
	385, 1140, 625, 1141, 386, 387, 388, 1142, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 1143, 400, 401, 1144, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1145, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1146, 436, 0, 0, 1147, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 1148, 459,
	1149, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 1591, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 1150,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 1590, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 1151, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 0, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 1512,
	0, 1273, 1272, 0, 0, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 266,
	265, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 274,
	275, 1135, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 1278, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1136, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 261, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	1137, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 1511, 620, 621, 449, 1139,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 1138, 382, 622, 623,
	0, 624, 0, 384, 385, 1140, 625, 1141, 386, 387,
	388, 1142, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 1143,
	400, 401, 1144, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1145, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1146, 436, 0, 0, 1147,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1148, 459, 1149, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1150, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 1151, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1473, 0, 1273, 1272, 0, 0, 0,
	0, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 266, 265, 267, 268, 269, 270, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 274, 275, 1135, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 1278, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 1136, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 261, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 1137, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 1139, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 0, 379, 380, 381, 383, 0,
	1138, 382, 622, 623, 0, 624, 0, 384, 385, 1140,
	625, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 1143, 400, 401, 1144, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 0, 0, 1147, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 1148, 459, 1149, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 1150, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 1441, 0, 1273,
	1272, 0, 0, 0, 0, 1270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 266, 265, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 274, 275, 1135,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 1278, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	261, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 1137, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 1440, 620, 621, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 0, 379,
	380, 381, 383, 0, 1138, 382, 622, 623, 0, 624,
	0, 384, 385, 1140, 625, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 0, 0, 1147, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 0, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 1267, 0, 1273, 1272, 0, 0, 0, 0, 1270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 266, 265, 267, 268, 269, 270, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 599, 0, 0, 0,
	0, 274, 275, 1135, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 1278, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 1136, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 261, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 1137, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 1266, 620, 621,
	449, 1139, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 0, 379, 380, 381, 383, 0, 1138, 382,
	622, 623, 0, 624, 0, 384, 385, 1140, 625, 1141,
	386, 387, 388, 1142, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 1143, 400, 401, 1144, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1145, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1146, 436, 0,
	0, 1147, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 1148, 459, 1149, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 1150, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 1151, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	0, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 1273, 1272, 0, 0, 0,
	0, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 266, 265, 267, 268, 269, 270, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 274, 275, 1135, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 1278, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 1136, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 261, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 1137, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 1139, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 0, 379, 380, 381, 383, 0,
	1138, 382, 622, 623, 0, 624, 0, 384, 385, 1140,
	625, 1141, 386, 387, 388, 1142, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 1143, 400, 401, 1144, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1145, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1146,
	436, 0, 0, 1147, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 1148, 459, 1149, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 1150, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	1151, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 1273, 1962, 0,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 264, 266, 265, 267, 268, 269,
	270, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 274, 275, 1135, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	1278, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 1136,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 2002, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 261, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 1137, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 1139, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 1138, 382, 622, 623, 0, 624, 0, 384,
	385, 1140, 625, 1141, 386, 387, 388, 1142, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 1143, 400, 401, 1144, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1145, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1146, 436, 0, 0, 1147, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 1148, 459,
	1149, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 1150,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 1151, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 0, 592, 591, 593, 649, 1273,
	1272, 0, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 0, 0, 0, 0, 0, 264, 266, 265, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 274, 275, 1135,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 1278, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1136, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	261, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 1137, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 1139, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 0, 379,
	380, 381, 383, 0, 1138, 382, 622, 623, 0, 624,
	0, 384, 385, 1140, 625, 1141, 386, 387, 388, 1142,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 1143, 400, 401,
	1144, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1145, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1146, 436, 0, 0, 1147, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	1148, 459, 1149, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1150, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 1151, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 1273, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 264, 266, 265, 267, 268, 269, 270,
	271, 0, 272, 273, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 274, 275, 1135, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 1278,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 1136, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 261, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 1137, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 1139, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 1138, 382, 622, 623, 0, 624, 0, 384, 385,
	1140, 625, 1141, 386, 387, 388, 1142, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 1143, 400, 401, 1144, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 1145, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	1146, 436, 0, 0, 1147, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 1148, 459, 1149,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 1150, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 1151, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 258, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	264, 266, 265, 267, 268, 269, 270, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 599, 0, 0, 0,
	0, 274, 275, 0, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 2691, 290, 291, 608, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 2688, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 2695, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 2887, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	2694, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 619, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 2884, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 2886, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 2883, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	0, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 2693, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 2885, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	258, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 264, 266, 265,
	267, 268, 269, 270, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 274, 275,
	0, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 2691, 290,
	291, 608, 0, 0, 2685, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 2688,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 2695, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 0, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 2694, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 2684, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 0, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 2693, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 2692,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 1661, 0, 258, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 266, 265, 267, 268, 269, 270, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 274, 275, 0, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 261, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 262, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 263, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 1664, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 1662,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 0, 1663, 591, 593, 649, 1419, 0, 258, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 266, 265, 267, 268,
	269, 270, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 274, 275, 0, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 261,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 1421, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 262, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 263, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	1185, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 0, 592, 591, 593, 649,
	1416, 0, 258, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	266, 265, 267, 268, 269, 270, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	274, 275, 0, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 261, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 1418, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 262, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 263,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 1185, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 1324, 0, 258, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 266, 265, 267, 268, 269, 270,
	271, 0, 272, 273, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 274, 275, 0, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 261, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	1326, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 262, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 263, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 1185, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 682, 0,
	258, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 266, 265,
	267, 681, 269, 270, 271, 671, 272, 273, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 274, 275,
	0, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 674, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 0, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 675, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 0, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 676, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 670, 0, 258, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 266, 265, 267, 268, 269, 270, 271, 671,
	272, 273, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 274, 275, 0, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 674, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 0, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 675, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 0, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 0, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 676, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 258, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 264, 266,
	265, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 274,
	275, 0, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 261, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	262, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 263, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 1185, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 258, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 264, 266, 265, 267, 268,
	269, 270, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 274, 275, 0, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 261,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 262, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 3291, 436, 0, 263, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 0, 592, 591, 593, 649,
	2833, 0, 258, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	266, 265, 267, 268, 269, 270, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	274, 275, 0, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 261, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 2832, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 262, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 263,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 2207, 0, 258, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 266, 265, 267, 268, 269, 270,
	271, 0, 272, 273, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 274, 275, 0, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 261, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 262, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 263, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 258, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	264, 266, 265, 267, 268, 269, 270, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 599, 0, 0, 0,
	0, 274, 275, 0, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 261, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 619, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 262, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 385, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	263, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 2152, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	0, 592, 591, 593, 649, 2158, 0, 258, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 266, 265, 267, 268, 269,
	270, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 274, 275, 0, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 261, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 2157, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 262, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 263, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 0, 592, 591, 593, 649, 2145,
	0, 258, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 266,
	265, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 274,
	275, 0, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 261, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 2147, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	262, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 263, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 258, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 264, 266, 265, 267, 268,
	269, 270, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 274, 275, 0, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 261,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 2116, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 262, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 263, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	1185, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 0, 592, 591, 593, 649,
	1515, 0, 258, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	266, 265, 267, 268, 269, 270, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	274, 275, 0, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 261, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 262, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 263,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 1436, 0, 258, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 266, 265, 267, 268, 269, 270,
	271, 0, 272, 273, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 274, 275, 0, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 261, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 262, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 263, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 1429, 0,
	258, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 266, 265,
	267, 268, 269, 270, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 274, 275,
	0, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 261, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 1431, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 262,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 263, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 1257, 0, 258, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 266, 265, 267, 268, 269, 270, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 274, 275, 0, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 261, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 1256, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 262, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 263, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 0, 592, 591, 593, 649, 1247, 0, 258, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 266, 265, 267, 268,
	269, 270, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 274, 275, 0, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 261,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 1246, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 262, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 263, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 0, 592, 591, 593, 649,
	1244, 0, 258, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	266, 265, 267, 268, 269, 270, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	274, 275, 0, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 261, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 1243, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 262, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 263,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 1239, 0, 258, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 266, 265, 267, 268, 269, 270,
	271, 0, 272, 273, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 274, 275, 0, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 261, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	1238, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 262, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 263, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 652, 0,
	258, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 266, 265,
	267, 268, 269, 270, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 274, 275,
	0, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 261, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 262,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 263, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 249, 0, 258, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 266, 265, 267, 268, 269, 270, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 274, 275, 0, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 261, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 262, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 263, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 258, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 264, 266,
	265, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 274,
	275, 0, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 261, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	262, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 263, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 258, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 264, 266, 265, 267, 268,
	269, 270, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 274, 275, 0, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 674, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 0,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	675, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 0, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 676,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 258, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 264, 266, 265, 267, 268, 269, 270, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 274, 275, 0, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 2244,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 261, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 262, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 0,
	436, 0, 263, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 258, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 264,
	266, 265, 267, 268, 269, 270, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	274, 275, 0, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 2242, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 261, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 262, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 263,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 258,
	592, 591, 593, 649, 0, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 264, 266, 265, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 274, 275, 0,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 2240, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	261, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 0, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 0, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 262, 379,
	380, 381, 383, 0, 0, 382, 622, 623, 0, 624,
	0, 384, 385, 0, 625, 0, 386, 387, 388, 0,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 0, 400, 401,
	0, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	0, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 0, 436, 0, 263, 0, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	0, 459, 0, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 258, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 264, 266, 265, 267, 268, 269, 270,
	271, 0, 272, 273, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 274, 275, 0, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 261, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	2164, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 262, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 263, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 258, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	264, 266, 265, 267, 268, 269, 270, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 599, 0, 0, 0,
	0, 274, 275, 0, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 261, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 1981, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 262, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 385, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	263, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	258, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 264, 266, 265,
	267, 268, 269, 270, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 274, 275,
	0, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 261, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 1975, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 262,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 263, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 848, 0, 258, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 266, 265, 267, 268, 269, 270, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 274, 275, 0, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 0, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 0, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 847, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 0, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 846,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 258, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 264, 266,
	265, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 274,
	275, 0, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 2887, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 0, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 3964, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 258, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 264, 266, 265, 267, 268,
	269, 270, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 3630, 275, 0, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 0,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 3631, 436, 0, 0, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 3633, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 3629,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 0, 592, 591, 593, 649,
	739, 0, 258, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	266, 265, 267, 268, 269, 270, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	274, 275, 1294, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 1292,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 0, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 740, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 0,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 736, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 1295, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 735,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 739, 0, 258, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 266, 265, 267, 268, 269, 270,
	271, 0, 272, 273, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 274, 275, 1294, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 1292, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 0, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 740, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 0, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 736, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 1295, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 735, 641, 642, 643, 0, 577, 0,
	569, 1293, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 661, 0,
	258, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 266, 265,
	267, 268, 269, 270, 271, 660, 272, 273, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 274, 275,
	0, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 0, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 0, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	659, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 258, 2874, 0, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 264,
	266, 265, 267, 268, 269, 270, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	274, 275, 0, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 0, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 0,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 258, 3974, 0, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 0, 0, 0, 0,
	0, 264, 266, 265, 267, 268, 269, 270, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 274, 275, 0, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 0, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 0, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 0, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 258, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 264, 266,
	265, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 274,
	275, 0, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 0, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 3876, 436, 0, 0, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 258, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 264, 266, 265, 267, 268,
	269, 270, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 274, 275, 0, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 3669, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 0,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 0, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 258, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 264, 266, 265, 267, 268, 269, 270, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 599, 0,
	2577, 0, 0, 274, 275, 0, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 0, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 0, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 0,
	436, 0, 0, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 258, 2874, 0,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 264, 266, 265, 267, 268, 269,
	270, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 274, 275, 0, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 0, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 0, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 2871, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 258, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 264, 266, 265, 267, 268, 269, 270, 271, 2217,
	272, 273, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 274, 275, 0, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 0, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 0, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 0, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 0, 592, 591, 593, 649, 2205, 0, 258, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 266, 265, 267, 268,
	269, 270, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 274, 275, 0, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 0,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 0, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 0, 592, 591, 593, 649,
	739, 0, 258, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	266, 265, 267, 268, 269, 270, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	274, 275, 0, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 729, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 0, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 740, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 0,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 736, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 1548, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 735,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 1521, 0, 258, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 266, 265, 267, 268, 269, 270,
	271, 0, 272, 273, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 274, 275, 0, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 0, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	1520, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 0, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 1506, 0,
	258, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 266, 265,
	267, 268, 269, 270, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 274, 275,
	0, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 0, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 1504, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 0, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 1500, 0, 258, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 266, 265, 267, 268, 269, 270, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 274, 275, 0, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 0, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 0, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 0, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 0, 592, 591, 593, 649, 1477, 0, 258, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 266, 265, 267, 268,
	269, 270, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 274, 275, 0, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 0,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 1475, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 0, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 0, 592, 591, 593, 649,
	1438, 0, 258, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	266, 265, 267, 268, 269, 270, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	274, 275, 0, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 0, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 0,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 1424, 0, 258, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 266, 265, 267, 268, 269, 270,
	271, 0, 272, 273, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 274, 275, 0, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 0, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 0, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 1262, 0,
	258, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 266, 265,
	267, 268, 269, 270, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 274, 275,
	0, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 0, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 1261, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 0, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 1253, 0, 258, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 266, 265, 267, 268, 269, 270, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 274, 275, 0, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 0, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 1252, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 0, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 0, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 258, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 264, 266,
	265, 267, 268, 269, 270, 271, 1206, 272, 273, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 274,
	275, 0, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 0, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 0, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 258, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 264, 266, 265, 267, 268,
	269, 270, 271, 745, 272, 273, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 274, 275, 0, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 0,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 0, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 0, 592, 591, 593, 649,
	739, 0, 258, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	266, 265, 267, 268, 269, 270, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	274, 275, 0, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 729, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 727, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 0, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	728, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 740, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 0,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 730,
	514, 0, 515, 516, 522, 523, 517, 518, 736, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 731, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 735,
	641, 642, 643, 0, 577, 0, 569, 733, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 721, 0, 258, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 266, 265, 267, 268, 269, 270,
	271, 0, 272, 273, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 274, 275, 0, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 0, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 0, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 722, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 684, 0,
	258, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 266, 265,
	267, 268, 269, 270, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 274, 275,
	0, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 0, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 0, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 678, 0, 258, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 266, 265, 267, 268, 269, 270, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 274, 275, 0, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 0, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 0, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 0, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 0, 592, 591, 593, 649, 656, 0, 258, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 266, 265, 267, 268,
	269, 270, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 274, 275, 0, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 0,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 0, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 258, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 264, 266, 265, 267, 268, 269, 270, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 274, 275, 0, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 0, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 0, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 0,
	436, 0, 0, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 258, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 264,
	266, 265, 267, 268, 269, 270, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	274, 275, 0, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 0, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 3380, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 0,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 258,
	592, 591, 593, 649, 0, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 264, 266, 265, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 274, 275, 0,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	0, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 0, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 3328, 620, 621, 449, 0, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 0, 379,
	380, 381, 383, 0, 0, 382, 622, 623, 0, 624,
	0, 384, 385, 0, 625, 0, 386, 387, 388, 0,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 0, 400, 401,
	0, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	0, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 0, 436, 0, 0, 0, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	0, 459, 0, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 258, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 264, 266, 265, 267, 268, 269, 270,
	271, 0, 272, 273, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 274, 275, 0, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 0, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	3262, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 0, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 258, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	264, 266, 265, 267, 268, 269, 270, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 599, 0, 0, 0,
	0, 274, 275, 0, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 0, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 3260, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 0, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 385, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	0, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	258, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 264, 266, 265,
	267, 268, 269, 270, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 274, 275,
	0, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 0, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 3245, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 0, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 258, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 264, 266, 265, 267, 268, 269,
	270, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 274, 275, 0, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 0, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 2842, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 0, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 258, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 264, 266, 265, 267, 268, 269, 270, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 274, 275, 0, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 0, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 0, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 0, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 722, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 258, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 264, 266,
	265, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 599, 0, 2181, 0, 0, 274,
	275, 0, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 0, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 0, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	0, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 258, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 264, 266, 265, 267, 268,
	269, 270, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 274, 275, 0, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 0,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 1224, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 0, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 258, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 264, 266, 265, 267, 268, 269, 270, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 274, 275, 0, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 0, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 0, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 0,
	436, 0, 0, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	1158, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 258, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 264,
	266, 265, 267, 268, 269, 270, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	274, 275, 0, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 0, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 0,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 0,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 0, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 0, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	0, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 0, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 1708, 1709, 0, 1741, 1742, 1743,
	1751, 1752, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1744, 1739, 0,
	0, 0, 0, 1708, 1709, 1711, 1741, 1742, 1743, 1751,
	1752, 1753, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1744, 1739, 0, 0,
	0, 0, 0, 0, 1711, 0, 0, 0, 0, 1710,
	1708, 1709, 1757, 1741, 1742, 1743, 1751, 1752, 1753, 1730,
	0, 0, 0, 0, 0, 0, 0, 0, 1727, 0,
	0, 0, 0, 1744, 1739, 0, 0, 0, 1710, 0,
	0, 1711, 0, 0, 0, 0, 0, 0, 1730, 1757,
	0, 0, 0, 0, 0, 0, 0, 1727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1710, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1730, 0, 0, 0, 0,
	0, 0, 0, 0, 1727, 0, 0, 0, 0, 0,
	1733, 1734, 1735, 1736, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1733,
	1734, 1735, 1736, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 1748, 0, 0, 1758, 0,
	0, 0, 0, 0, 1738, 1740, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1733, 1734, 1735, 1736,
	0, 1754, 0, 1755, 1748, 0, 1716, 1758, 0, 0,
	1725, 1726, 0, 1738, 1740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	1754, 0, 1755, 0, 0, 0, 0, 0, 0, 1725,
	1726, 1748, 0, 1731, 1758, 0, 0, 0, 0, 0,
	1738, 1740, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 1755,
	0, 0, 1731, 0, 0, 0, 1725, 1726, 0, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 0, 1731,
	0, 0, 0, 0, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 0, 0, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 0, 0, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 0, 0, 1732, 0, 0, 0, 0,
	1708, 1709, 0, 1741, 1742, 1743, 1751, 1752, 1753, 0,
	0, 0, 1737, 0, 0, 0, 0, 0, 0, 0,
	0, 1749, 0, 1744, 1739, 0, 0, 0, 0, 0,
	0, 1711, 1732, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1749, 0,
	0, 0, 0, 0, 0, 1710, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1730, 0, 0, 0, 0,
	0, 0, 0, 0, 1727, 0, 0, 0, 0, 1747,
	0, 0, 0, 0, 1722, 1723, 1729, 1750, 1728, 1724,
	0, 1721, 1719, 1720, 1712, 1713, 1714, 1715, 1717, 1718,
	0, 0, 0, 0, 4205, 0, 0, 0, 1747, 0,
	0, 0, 0, 1722, 1723, 1729, 1750, 1728, 1724, 0,
	1721, 1719, 1720, 1712, 1713, 1714, 1715, 1717, 1718, 0,
	0, 0, 0, 4042, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1747, 1733, 1734, 1735, 1736,
	1722, 1723, 1729, 1750, 1728, 1724, 1716, 1721, 1719, 1720,
	1712, 1713, 1714, 1715, 1717, 1718, 0, 0, 0, 0,
	3900, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1708, 1709, 0, 1741, 1742, 1743, 1751, 1752,
	1753, 1748, 0, 0, 1758, 0, 0, 0, 0, 0,
	1738, 1740, 0, 0, 0, 1744, 1739, 0, 0, 0,
	0, 0, 0, 1711, 0, 0, 0, 1754, 0, 1755,
	0, 1757, 0, 0, 0, 0, 1725, 1726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 1710, 1708, 1709,
	0, 1741, 1742, 1743, 1751, 1752, 1753, 1730, 0, 1731,
	0, 0, 0, 0, 0, 0, 1727, 0, 0, 0,
	0, 1744, 1739, 0, 0, 0, 0, 0, 0, 1711,
	0, 0, 0, 0, 0, 0, 0, 1757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1710, 0, 0, 0, 0, 0, 1745,
	0, 0, 0, 1730, 0, 0, 0, 0, 0, 0,
	0, 0, 1727, 0, 0, 0, 0, 0, 1733, 1734,
	1735, 1736, 0, 0, 0, 0, 0, 0, 1716, 0,
	0, 0, 0, 0, 0, 0, 1708, 1709, 0, 1741,
	1742, 1743, 1751, 1752, 1753, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1744,
	1739, 0, 1737, 1748, 0, 0, 1758, 1711, 0, 0,
	0, 0, 1738, 1740, 0, 1757, 0, 0, 0, 0,
	0, 0, 1732, 0, 1733, 1734, 1735, 1736, 0, 1754,
	0, 1755, 0, 0, 1716, 0, 0, 0, 1725, 1726,
	0, 1710, 0, 0, 0, 0, 0, 0, 1749, 0,
	0, 1730, 0, 0, 0, 0, 1746, 0, 0, 0,
	1727, 0, 0, 0, 0, 0, 0, 0, 0, 1748,
	0, 1731, 1758, 0, 0, 0, 0, 0, 1738, 1740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 1755, 0, 0,
	0, 0, 0, 0, 1725, 1726, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 1745, 1733, 1734, 1735, 1736, 0, 1731, 0, 0,
	0, 0, 1716, 0, 0, 1747, 0, 0, 0, 0,
	1722, 1723, 1729, 1750, 1728, 1724, 0, 1721, 1719, 1720,
	1712, 1713, 1714, 1715, 1717, 1718, 0, 0, 0, 0,
	3835, 0, 0, 0, 0, 0, 0, 1748, 0, 1756,
	1758, 0, 0, 0, 0, 0, 1738, 1740, 0, 0,
	0, 0, 0, 0, 1737, 0, 0, 1745, 0, 0,
	0, 0, 0, 1754, 0, 1755, 0, 0, 0, 0,
	0, 0, 1725, 1726, 1732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1708, 1709,
	1746, 1741, 1742, 1743, 1751, 1752, 1753, 0, 0, 0,
	1749, 0, 0, 0, 0, 1731, 0, 0, 0, 0,
	0, 1744, 1739, 0, 0, 0, 0, 0, 0, 1711,
	1737, 0, 0, 0, 0, 0, 0, 1757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1732, 0, 0, 0, 0, 0, 0, 1756, 0, 0,
	0, 0, 0, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1730, 0, 1745, 1749, 0, 0, 0,
	0, 0, 1727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 0,
	0, 0, 1722, 1723, 1729, 1750, 1728, 1724, 0, 1721,
	1719, 1720, 1712, 1713, 1714, 1715, 1717, 1718, 0, 0,
	0, 0, 3834, 0, 0, 0, 0, 0, 1737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1733, 1734, 1735, 1736, 1732, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 1747, 0, 0, 0, 0, 1722, 1723,
	1729, 1750, 1728, 1724, 1749, 1721, 1719, 1720, 1712, 1713,
	1714, 1715, 1717, 1718, 0, 0, 0, 0, 3833, 1748,
	0, 0, 1758, 0, 0, 0, 0, 0, 1738, 1740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 1755, 0, 0,
	0, 0, 0, 0, 1725, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 0, 0, 1722, 1723, 1729, 1750,
	1728, 1724, 0, 1721, 1719, 1720, 1712, 1713, 1714, 1715,
	1717, 1718, 0, 0, 0, 0, 3518, 0, 0, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1708, 1709, 0, 1741, 1742, 1743, 1751,
	1752, 1753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1744, 1739, 0, 0,
	0, 0, 0, 0, 1711, 0, 0, 0, 0, 0,
	1737, 0, 1757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1732, 0, 0, 0, 0, 0, 0, 0, 1710, 1708,
	1709, 0, 1741, 1742, 1743, 1751, 1752, 1753, 1730, 0,
	0, 0, 0, 0, 0, 0, 1749, 1727, 0, 0,
	0, 0, 1744, 1739, 0, 0, 0, 0, 0, 0,
	1711, 0, 0, 0, 0, 0, 0, 0, 1757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1730, 0, 0, 0, 0, 0,
	0, 0, 0, 1727, 0, 0, 0, 0, 0, 1733,
	1734, 1735, 1736, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1747, 0, 0, 0, 0, 1722, 1723,
	1729, 1750, 1728, 1724, 0, 1721, 1719, 1720, 1712, 1713,
	1714, 1715, 1717, 1718, 1748, 0, 0, 1758, 3036, 0,
	0, 0, 0, 1738, 1740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1733, 1734, 1735, 1736, 0,
	1754, 0, 1755, 0, 0, 1716, 0, 0, 0, 1725,
	1726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 1708, 1709, 0, 1741, 1742, 1743, 1751, 1752, 1753,
	1748, 0, 1731, 1758, 0, 0, 0, 0, 0, 1738,
	1740, 0, 0, 0, 1744, 1739, 0, 0, 0, 0,
	0, 0, 1711, 0, 0, 0, 1754, 0, 1755, 0,
	1757, 0, 0, 0, 0, 1725, 1726, 0, 0, 0,
	0, 0, 0, 0, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 1710, 0, 0, 0,
	0, 0, 1745, 0, 0, 0, 1730, 0, 1731, 0,
	0, 0, 0, 0, 0, 1727, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1737, 0, 0, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1732, 0, 1733, 1734, 1735,
	1736, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1737, 1748, 0, 0, 1758, 0, 0, 0, 0,
	0, 1738, 1740, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 0, 0, 1754, 0,
	1755, 0, 0, 0, 0, 0, 0, 1725, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 1749, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1731, 0, 0, 0, 0, 0, 0, 0, 1747, 0,
	0, 0, 0, 1722, 1723, 1729, 1750, 1728, 1724, 0,
	1721, 1719, 1720, 1712, 1713, 1714, 1715, 1717, 1718, 0,
	0, 0, 0, 3035, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 0, 0, 1722,
	1723, 1729, 1750, 1728, 1724, 0, 1721, 1719, 1720, 1712,
	1713, 1714, 1715, 1717, 1718, 0, 0, 1708, 1709, 3034,
	1741, 1742, 1743, 1751, 1752, 1753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1744, 1739, 0, 1737, 0, 0, 0, 0, 1711, 0,
	0, 0, 0, 0, 0, 0, 1757, 0, 0, 0,
	0, 0, 0, 1732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1708, 1709, 0, 1741, 1742, 1743, 1751,
	1752, 1753, 1710, 0, 0, 0, 0, 0, 0, 1749,
	0, 0, 1730, 0, 0, 0, 1744, 1739, 0, 0,
	0, 1727, 0, 0, 1711, 0, 0, 0, 0, 0,
	0, 0, 1757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1730, 0,
	0, 0, 0, 0, 0, 0, 0, 1727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1733, 1734, 1735, 1736, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 1747, 0, 0, 0,
	0, 1722, 1723, 1729, 1750, 1728, 1724, 0, 1721, 1719,
	1720, 1712, 1713, 1714, 1715, 1717, 1718, 0, 0, 0,
	0, 3033, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 1758, 0, 0, 0, 0, 0, 1738, 1740, 1733,
	1734, 1735, 1736, 0, 0, 0, 0, 0, 0, 1716,
	4452, 0, 0, 0, 1754, 0, 1755, 0, 0, 0,
	0, 0, 0, 1725, 1726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 1748, 0, 0, 1758, 0, 0,
	0, 0, 0, 1738, 1740, 0, 1731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 1755, 0, 0, 0, 0, 0, 0, 1725,
	1726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1731, 0, 0, 0, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1708, 1709, 0, 1741, 1742,
	1743, 1751, 1752, 1753, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1744, 1739,
	0, 0, 1745, 0, 0, 0, 1711, 0, 0, 1737,
	0, 0, 0, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1732,
	0, 0, 0, 0, 4451, 0, 0, 0, 0, 0,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 0, 0, 1749, 0, 0, 0, 1727,
	0, 0, 0, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1733, 1734, 1735, 1736, 0, 0, 0, 0, 0,
	0, 1716, 0, 3120, 0, 0, 3119, 0, 0, 0,
	0, 0, 1747, 0, 0, 0, 0, 1722, 1723, 1729,
	1750, 1728, 1724, 0, 1721, 1719, 1720, 1712, 1713, 1714,
	1715, 1717, 1718, 0, 0, 3000, 1748, 0, 0, 1758,
	0, 0, 0, 0, 0, 1738, 1740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 1755, 0, 0, 0, 1747, 0,
	0, 1725, 1726, 1722, 1723, 1729, 1750, 1728, 1724, 0,
	1721, 1719, 1720, 1712, 1713, 1714, 1715, 1717, 1718, 1746,
	0, 0, 1708, 1709, 0, 1741, 1742, 1743, 1751, 1752,
	1753, 0, 0, 0, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1744, 1739, 0, 0, 0,
	0, 2971, 0, 1711, 0, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1710, 0, 0,
	0, 0, 0, 0, 1745, 0, 0, 1730, 0, 0,
	0, 0, 0, 0, 0, 0, 1727, 0, 0, 0,
	0, 0, 0, 0, 2550, 0, 0, 0, 0, 0,
	0, 1708, 1709, 0, 1741, 1742, 1743, 1751, 1752, 1753,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2972, 0, 1744, 1739, 0, 0, 0, 2549,
	0, 0, 1711, 0, 0, 0, 0, 1737, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1732, 1733, 1734,
	1735, 1736, 0, 0, 0, 0, 1710, 0, 1716, 0,
	0, 0, 0, 0, 0, 0, 1730, 0, 0, 0,
	0, 0, 0, 1749, 0, 1727, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1748, 0, 0, 1758, 0, 0, 0,
	0, 0, 1738, 1740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1754,
	0, 1755, 0, 0, 0, 0, 0, 0, 1725, 1726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 1733, 1734, 1735,
	1736, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 1731, 0, 0, 0, 0, 0, 0, 0, 0,
	1747, 0, 0, 0, 0, 1722, 1723, 1729, 1750, 1728,
	1724, 0, 1721, 1719, 1720, 1712, 1713, 1714, 1715, 1717,
	1718, 0, 1748, 0, 0, 1758, 0, 0, 0, 0,
	0, 1738, 1740, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1754, 0,
	1755, 1745, 0, 0, 0, 0, 0, 1725, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 1708, 1709,
	0, 1741, 1742, 1743, 1751, 1752, 1753, 0, 0, 0,
	1731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1744, 1739, 0, 0, 0, 0, 0, 0, 1711,
	0, 0, 0, 0, 1737, 0, 0, 1757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 0, 1732, 0, 0, 0, 0, 0,
	0, 0, 0, 1710, 0, 0, 0, 0, 0, 0,
	1745, 0, 0, 1730, 0, 0, 0, 0, 0, 0,
	1749, 0, 1727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1708, 1709, 0,
	1741, 1742, 1743, 1751, 1752, 1753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1744, 1739, 0, 0, 0, 0, 0, 0, 1711, 0,
	0, 0, 0, 1737, 0, 0, 1757, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1732, 1733, 1734, 1735, 1736, 0, 0,
	0, 0, 1710, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 1730, 0, 0, 0, 0, 1747, 0, 1749,
	0, 1727, 1722, 1723, 1729, 1750, 1728, 1724, 0, 1721,
	1719, 1720, 1712, 1713, 1714, 1715, 1717, 1718, 0, 1748,
	0, 0, 1758, 0, 0, 0, 0, 0, 1738, 1740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 1755, 0, 0,
	0, 0, 0, 0, 1725, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 1733, 1734, 1735, 1736, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 1731, 0, 0,
	0, 0, 0, 0, 0, 0, 1747, 0, 0, 0,
	0, 1722, 1723, 1729, 1750, 1728, 1724, 0, 1721, 1719,
	1720, 1712, 1713, 1714, 1715, 1717, 1718, 0, 1748, 0,
	0, 1758, 0, 0, 0, 0, 0, 1738, 1740, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 1755, 1745, 1014, 0,
	0, 0, 0, 1725, 1726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 1708, 1709, 0, 1741, 1742, 1743,
	1751, 1752, 1753, 0, 0, 0, 1731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1744, 1739, 0,
	0, 0, 0, 0, 0, 1711, 0, 0, 0, 0,
	1737, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1756, 0,
	1732, 0, 0, 0, 0, 0, 0, 0, 0, 1710,
	0, 0, 0, 0, 0, 0, 1745, 0, 0, 1730,
	0, 0, 0, 0, 0, 0, 1749, 0, 1727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1708, 1709, 0, 1741, 1742, 1743, 1751,
	1752, 1753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1744, 1739, 0, 0,
	0, 3121, 0, 0, 1711, 0, 0, 0, 0, 1737,
	0, 0, 1757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1732,
	1733, 1734, 1735, 1736, 0, 0, 0, 0, 1710, 0,
	1716, 0, 0, 0, 0, 3126, 0, 0, 1730, 0,
	0, 0, 0, 1747, 0, 1749, 0, 1727, 1722, 1723,
	1729, 1750, 1728, 1724, 0, 1721, 1719, 1720, 1712, 1713,
	1714, 1715, 1717, 1718, 0, 1748, 0, 0, 1758, 0,
	0, 0, 0, 0, 1738, 1740, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3499, 0, 0, 0, 0,
	0, 1754, 0, 1755, 0, 0, 0, 0, 0, 0,
	1725, 1726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 1733,
	1734, 1735, 1736, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 0, 0, 1722, 1723, 1729,
	1750, 1728, 1724, 0, 1721, 1719, 1720, 1712, 1713, 1714,
	1715, 1717, 1718, 0, 1748, 0, 0, 1758, 0, 0,
	0, 0, 0, 1738, 1740, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 1755, 1745, 0, 0, 0, 0, 0, 1725,
	1726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	1708, 1709, 0, 1741, 1742, 1743, 1751, 1752, 1753, 0,
	0, 0, 1731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1744, 1739, 0, 0, 0, 0, 0,
	0, 1711, 0, 0, 0, 0, 1737, 0, 0, 1757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1756, 0, 1732, 0, 0, 0,
	0, 0, 0, 0, 0, 1710, 0, 0, 0, 0,
	0, 0, 1745, 0, 0, 1730, 0, 0, 0, 0,
	0, 0, 1749, 0, 1727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1708,
	1709, 0, 1741, 1742, 1743, 1751, 1752, 1753, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1744, 1739, 0, 0, 0, 3037, 0, 0,
	1711, 0, 0, 0, 0, 1737, 0, 0, 1757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1732, 1733, 1734, 1735, 1736,
	0, 0, 0, 0, 1710, 0, 1716, 0, 0, 0,
	0, 0, 0, 0, 1730, 0, 0, 0, 0, 1747,
	0, 1749, 0, 1727, 1722, 1723, 1729, 1750, 1728, 1724,
	0, 1721, 1719, 1720, 1712, 1713, 1714, 1715, 1717, 1718,
	0, 1748, 0, 0, 1758, 0, 0, 0, 0, 0,
	1738, 1740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 1755,
	0, 0, 0, 0, 0, 0, 1725, 1726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 1733, 1734, 1735, 1736, 0,
	0, 0, 0, 0, 0, 1716, 0, 0, 0, 1731,
	0, 0, 0, 0, 0, 0, 0, 0, 1747, 0,
	0, 0, 0, 1722, 1723, 1729, 1750, 1728, 1724, 0,
	1721, 1719, 1720, 1712, 1713, 1714, 1715, 1717, 1718, 0,
	1748, 0, 0, 1758, 0, 0, 0, 0, 0, 1738,
	1740, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 1755, 1745,
	0, 0, 0, 0, 0, 1725, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3088,
	0, 0, 0, 1746, 0, 0, 1708, 1709, 0, 1741,
	1742, 1743, 1751, 1752, 1753, 0, 0, 0, 1731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1744,
	1739, 0, 0, 0, 0, 0, 0, 1711, 0, 0,
	0, 0, 1737, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1756, 0, 1732, 0, 0, 0, 0, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 0, 0, 1745, 0,
	0, 1730, 0, 0, 0, 0, 0, 0, 1749, 0,
	1727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1708, 1709, 0, 1741, 1742,
	1743, 1751, 1752, 1753, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1744, 1739,
	0, 0, 0, 0, 0, 0, 1711, 0, 0, 0,
	0, 1737, 0, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 1733, 1734, 1735, 1736, 0, 0, 0, 0,
	1710, 0, 1716, 0, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 0, 0, 1747, 0, 1749, 0, 1727,
	1722, 1723, 1729, 1750, 1728, 1724, 0, 1721, 1719, 1720,
	1712, 1713, 1714, 1715, 1717, 1718, 0, 1748, 0, 0,
	1758, 0, 0, 0, 0, 0, 1738, 1740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1754, 0, 1755, 0, 0, 0, 0,
	0, 0, 1725, 1726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 703, 0, 0, 0,
	1746, 1733, 1734, 1735, 1736, 0, 0, 0, 0, 0,
	0, 1716, 0, 0, 0, 1731, 686, 0, 0, 0,
	0, 0, 687, 0, 1747, 0, 0, 0, 0, 1722,
	1723, 1729, 1750, 1728, 1724, 0, 1721, 1719, 1720, 1712,
	1713, 1714, 1715, 1717, 1718, 0, 1748, 0, 0, 1758,
	0, 0, 0, 0, 0, 1738, 1740, 1756, 0, 0,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 689, 1754, 0, 1755, 1745, 0, 0, 0, 0,
	0, 1725, 1726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 690, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 1708, 1709, 0, 1741, 1742, 1743, 1751, 1752,
	1753, 0, 709, 0, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1739, 0, 0, 0,
	0, 691, 0, 1711, 0, 0, 0, 0, 1737, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 692, 0, 1756, 0, 1732, 0,
	0, 0, 0, 0, 0, 0, 0, 1710, 0, 0,
	0, 0, 0, 0, 0, 693, 0, 1730, 694, 0,
	0, 0, 0, 0, 1749, 0, 1727, 0, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1732, 1733, 1734,
	1735, 1736, 0, 0, 0, 0, 0, 0, 1716, 0,
	0, 0, 0, 0, 0, 0, 705, 0, 0, 0,
	0, 1747, 0, 1749, 0, 0, 1722, 1723, 1729, 1750,
	1728, 1724, 0, 1721, 1719, 1720, 1712, 1713, 1714, 1715,
	1717, 1718, 0, 1748, 0, 0, 1758, 0, 0, 0,
	796, 0, 1738, 1740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1754,
	798, 1755, 0, 0, 0, 0, 799, 0, 1725, 1726,
	0, 0, 0, 0, 0, 696, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1731, 0, 716, 800, 697, 817, 0, 0, 0,
	1747, 0, 0, 0, 0, 1722, 1723, 1729, 1750, 1728,
	1724, 0, 1721, 1719, 1720, 1712, 1713, 1714, 1715, 1717,
	1718, 801, 0, 0, 0, 0, 802, 0, 0, 0,
	0, 717, 0, 1756, 0, 0, 0, 0, 698, 0,
	0, 0, 713, 714, 711, 0, 825, 0, 0, 0,
	706, 0, 803, 699, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 797, 0,
	0, 0, 700, 707, 0, 0, 0, 0, 0, 0,
	0, 0, 701, 0, 0, 0, 0, 0, 0, 804,
	0, 0, 805, 0, 1737, 0, 702, 0, 0, 0,
	0, 710, 0, 827, 0, 0, 0, 718, 0, 0,
	0, 0, 0, 0, 1732, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 0,
	0, 0, 1722, 1723, 1729, 1750, 1728, 1724, 806, 1721,
	1719, 1720, 1712, 1713, 1714, 1715, 1717, 1718, 0, 808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 795, 0, 818, 0,
	0, 0, 0, 0, 0, 0, 0, 810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 811, 0, 0, 812,
	830, 0, 829, 0, 0, 0, 813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	814, 0, 0, 0, 0, 822, 0, 0, 0, 0,
	0, 831, 0, 828, 0, 0, 0, 0, 0, 719,
}
var sqlPact = [...]int{

	7741, -1000, -1000, -1000, -1000, 201, -1000, -1000, 199, 196,
	193, 191, 190, 189, 182, 180, 177, 176, 175, -1000,
	-1000, -1000, -1000, -1000, -1000, 174, -1000, -1000, 173, -1000,
	170, 166, 165, -1000, -1000, 163, -1000, 162, -1000, -1000,
	-1000, -1000, 158, 156, 152, 85710, 85176, 86237, 2207, 105884,
	93116, 2091, 76660, 105350, 76126, 104816, 2047, 14242, 104282, 2645,
	151, -1000, 103748, 150, 149, 148, -1000, 103214, -1000, 1984,
	-1000, 146, 4574, 61695, 144, 143, 142, 2407, 138, -1000,
	137, 136, 133, -1000, 117398, 1460, -1000, 131, 129, -1000,
	4761, 90460, 128, 120, 2431, 119, 118, 61161, 117, 116,
	2263, 2813, -1000, -1000, 1994, -1000, -1000, 114, 111, 110,
	109, 108, 106, 105, 104, 103, 99, 98, -1000, 96,
	95, 94, 87, 86, -1000, 85, 84, 83, -1000, 82,
	81, 77, 76, 75, 73, 71, 70, 68, 67, 66,
	65, 62, 59, -1000, 15160, -1000, 1799, 1665, 1664, 1654,
	1635, 1613, 975, 50, 49, 48, 42, 39, 32, 26,
	24, 23, -1000, 22, 21, 20, 18, 16, 15, 14,
	12, 124, 9, 4, 3, -2, -3, -4, -5, 2638,
	-1000, 1542, 970, 28489, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 111681, 106411, -6,
	-133, -7, -1000, 3219, 872, 50983, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 290, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 502, 1906, 724, -1000, -1000, -1000, 102687,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2206, -71,
	-1000, 1927, -1000, -1000, -1000, -1000, -1000, 717, -1000, 2197,
	268, 2137, -1000, -1000, -1000, 3272, 2358, 3660, 3656, 3653,
	3652, 3651, 111154, 1701, 3648, 2433, 3647, 3646, 3642, 3641,
	3640, 3638, 3637, -1000, 84642, 1013, 84108, 83574, 3288, 102160,
	83040, 101626, 70269, 43239, 923, 3271, -1000, -1000, -1000, -1000,
	-1000, -1000, 106411, -1000, 1012, -1000, -1000, 3636, 3634, 2024,
	715, 92582, -1000, 1845, -1000, 921, 30166, -1000, 1313, -1000,
	30166, 278, -1000, -1000, -1000, -1000, -1000, -1000, 3633, 3632,
	3630, 3629, 3628, -1000, -1000, 75592, 21729, 75058, 74524, 101092,
	21185, 82506, 81972, 100558, 69725, 1011, 1467, -1000, -1000, -1000,
	-1000, -1000, -1000, -43, 67549, 3412, 106411, -1000, 277, -1000,
	-1000, -1000, -1000, -1000, -1000, 42668, 797, 42097, 716, 41526,
	600, -1000, -1000, -1000, -1000, 69181, -1000, 100024, 2331, 3627,
	3626, 1107, 3625, 3153, 1700, 3624, 1818, 1195, 3623, 3621,
	3620, 3619, 3618, 3617, 3616, 1411, 99490, 2902, 98956, 1681,
	68637, 1007, 81438, 86237, 2561, 98422, 1452, 1381, -1000, -1000,
	-1000, -1000, 2985, 2807, 2802, 1287, -1000, -1000, -1000, -1000,
	53647, 6074, 5197, 117084, 97888, 55847, 86237, 86237, -1000, -1000,
	-1000, -1000, -1000, 40955, 663, 40384, 887, -1000, -1000, 54197,
	2852, -1000, -1000, -1000, -1000, 39813, 588, 39242, 742, 106411,
	-1000, 2897, 1879, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2048, 1595,
	3447, 2670, 68093, 2009, 1350, 3228, 2981, 2977, 1479, 2976,
	3615, 2487, 2963, 2962, 2957, 2955, 2954, 1505, 2516, 297,
	27918, 2881, 1611, 38671, 1456, 1480, 2953, 2952, 3458, 1914,
	1949, 1965, 73990, 3613, 3609, 3197, 2951, 2946, 2943, -1000,
	2850, -1000, -1000, -1000, -1000, 1419, -1000, -1000, -1000, -1000,
	77187, -1000, -1000, 1841, -1000, -1000, 1841, -1000, -1000, -1000,
	-1000, -1000, 1290, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1542, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2138, -1000, 1996, -1000, -1000,
	2464, 3183, 3183, 3183, 3270, 487, 481, -1000, 124, -1000,
	-1000, 116825, -1000, -1000, 43798, 43798, 43798, 43798, 43798, 43798,
	43798, 2052, -1000, 713, -1000, -1000, 775, -1000, 712, 595,
	-1000, -1000, -1000, -1000, -1000, -1000, 709, -1000, -1000, -1000,
	-1000, -1000, -1000, 3412, -1000, 24504, -1000, -1000, -1000, 469,
	708, 43798, -1000, -1000, 3487, 3486, 899, -1000, 276, 940,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2896, 707, 705, -1000, 702, 701, 699, 696,
	692, -1000, -1000, -1000, 690, 689, 687, 684, 683, 682,
	680, 677, -1000, 1951, -1000, -1000, -1000, -1000, -1000, -1000,
	636, 630, 630, 630, -1000, 996, -1000, -1000, -1000, 303,
	626, 289, 624, 623, 622, -1000, 676, 675, 670, 669,
	665, 664, 661, 659, 657, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 989, -1000, -1000, -1000, -1000, -44, 106411, -1000,
	502, -44, -1000, -1000, 656, -1000, 32414, 32414, 32414, -1000,
	-1000, 2195, 43798, -1000, 2903, -1000, -37, -37, 871, 52579,
	-1000, 49915, 871, 576, 794, 57445, -1000, 2845, -1000, -1000,
	655, 267, -1000, -1000, -1000, -1000, 22271, 2841, 106411, 106411,
	86237, 86237, 86237, 3077, 43798, -1000, -1000, 65404, 106411, 86764,
	-1000, -1000, 3365, 62222, 64877, 106411, 2884, 64350, 3608, -1000,
	-1000, -1000, -1000, -1000, 3056, 3607, 3604, 3603, -1000, 106411,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 204, 3055, -1000,
	-1000, 89926, 204, 3054, -1000, 204, 3049, -1000, 89399, -1000,
	-1000, 2193, 3048, -1000, -1000, 217, 3047, -1000, -1000, -1000,
	209, 3046, -1000, -1000, 259, -69, 3044, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 116825,
	-1000, -1000, -1000, 63816, -1000, 3193, -1000, -1000, 106411, -1000,
	43798, -1000, 3364, 1643, 71343, 3303, -54, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2413, 2380, 1131, 2243, -1000, 3108,
	1549, -1000, 30166, 3142, -1000, -1000, -1000, 246, 22271, -1000,
	-1000, -1000, -1000, -1000, -1000, 3539, 3043, 1437, -1000, 2235,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1810, 3042, -1000,
	3441, 3041, 1778, -1000, -1000, 2467, -1000, 3186, -1000, -1000,
	1523, 3037, -36, -1000, -1000, 2289, -1000, 1897, -1000, 961,
	3036, -1000, 80904, 55297, 54197, 67549, -48, -1000, -1000, -1000,
	-1000, -181, -1000, 20641, 116825, -1000, -1000, -1000, -1000, 1697,
	116825, 903, -1000, -1000, 3035, -1000, 116825, 890, -1000, -1000,
	3033, -1000, 2883, -1000, -1000, 2318, -1000, -1000, 3600, -1000,
	-1000, 3599, -1000, 3598, 3597, 3596, -1000, 1691, 1925, 3594,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 80377, 2194,
	-1000, -1000, 79309, -1000, 2317, 3302, -1000, 79843, 1006, -1000,
	961, 2316, -1000, 88872, 889, -1000, 3593, 3269, 2629, 961,
	2312, -1000, -1000, -1000, -1000, -1000, 987, -1000, 59036, -1000,
	59036, -1000, 1560, -1000, 110627, -37, 86237, 3412, -1000, -70,
	-1000, -1000, -1000, 872, -1000, 53113, -1000, 53113, 92048, 70811,
	947, 671, 60627, 116825, -1000, -1000, -1000, -1000, 116825, -1000,
	-1000, -1000, -185, -1000, -1000, 70811, 54197, 116825, -1000, -1000,
	-1000, -1000, 116825, -1000, -1000, -1000, 70811, 79309, -1000, 97354,
	78782, -1000, -1000, 1395, 2458, -1000, -1000, -1000, 70811, 1264,
	70811, 70811, 70811, -1000, 96820, -1000, -1000, 2006, 1415, 3184,
	1990, 86237, -1000, 1843, -1000, -1000, -1000, 3211, 106411, -1000,
	-1000, 2882, -1000, 63282, 88345, -1000, 87818, -1000, 87291, -1000,
	86237, -1000, 86237, -1000, 3592, 3591, 3590, 3589, -1000, 3587,
	3203, -1000, 116825, 3202, -1000, 3585, 3296, 2881, 116825, -1000,
	2947, 1615, 1610, 106411, -1000, -1000, 106411, -1000, 106411, -1000,
	-1000, -1000, 1513, -1000, -1000, 2411, -1000, -1000, -1000, -1000,
	86237, -1000, -1000, -1000, -1000, -1000, -1000, 2875, -1000, 1676,
	-1000, 1793, -1000, 3165, -1000, 1378, -1000, -1000, 219, -1000,
	-1000, -54, -1000, 110100, -1000, 2464, -1000, 106411, -1000, 2394,
	2867, 2873, 1580, 2155, 2521, -1000, 38100, 2382, 47152, 2234,
	124, -1000, -1000, 124, 124, 29607, -1000, -1000, 62222, 62222,
	22271, 1305, 43798, 43798, 43798, 43798, 43798, 43798, 43798, 43798,
	43798, 43798, 43798, 43798, 43798, 43798, 43798, 43798, 43798, 43798,
	43798, 43798, 43798, 43798, 43798, 43798, 43798, 43798, 43798, 43798,
	43798, 43798, 43798, 43798, 43798, 43798, 43798, 2297, 43798, 1283,
	43798, 43798, 43798, 43798, 1923, -1000, -1000, 1930, 552, 1960,
	-1000, 3413, 3413, 3413, 1288, 1288, 117181, 117181, 633, 3584,
	775, -1000, 43798, -1000, 72, 43798, 22815, -1000, 481, 8503,
	2337, -1000, 479, 23386, -1000, -1000, -1000, 24504, 595, 37529,
	43798, 984, 116825, -1000, -1000, 1329, 3426, 20098, 2910, 2718,
	649, 826, 824, 27347, 26776, 26205, 25634, 814, 43798, 43798,
	43798, 43798, 43798, 43798, 43798, 43798, -1000, -1000, 3445, -1000,
	3426, -1000, -1000, -1000, -1000, 3426, 1302, 1298, 3426, -1000,
	3426, 3426, 6920, 6920, 36970, 36399, 35828, 47711, 35257, 43798,
	25063, 34686, 34115, -1000, 106411, -44, 3362, 43798, 257, -1000,
	115500, -1000, 257, 257, 647, -72, 116825, 2655, 2655, 51515,
	2324, 2061, 2061, 2061, -1000, 871, 15725, 871, 95761, 2074,
	871, 871, 241, 243, 477, 49383, 2903, 95761, 752, 642,
	-11, -12, -16, -1000, -1000, -21, -30, -1000, -1000, 86237,
	640, 22815, 22271, 240, 1454, -77, 2558, 2553, 2536, -1000,
	2535, 1748, -78, 1272, 86237, 106411, -143, -1000, 5218, -84,
	-1000, 1294, 235, 3426, -1000, -1000, -1000, -1000, -1000, 3583,
	3581, -1000, 988, 639, 637, 294, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 636, 630, 630, 630, -1000, 303,
	626, 289, 624, 623, 622, -1000, -1000, -1000, -1000, -1000,
	2840, 86237, 106411, -181, 86764, -79, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 106411, -1000, -1000, -1000, 3580, -1000,
	86237, -1000, -1000, 86237, 204, 3031, -1000, 86237, -1000, 86237,
	200, 3030, -1000, -1000, 106411, -1000, 86237, 86237, -1000, 106411,
	106411, 106411, 70811, 70811, 218, -1000, 86237, 865, -85, 1111,
	-54, -1000, -1000, -1000, 1841, -1000, 1685, -1000, -1000, -1000,
	-1000, -1000, -1000, 1420, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 899, -1000, -1000, -1000, -1000, -1000, -1000, 3450,
	3431, -45, -1000, -1000, 22271, -1000, -55, 1702, 2115, -1000,
	73456, 2232, 3182, 3579, 2615, 3169, 1559, -1000, 1489, 1271,
	3263, 77187, 3319, 3337, 157, -1000, 2839, -1000, -1000, 913,
	1645, 1689, 1217, 77187, 3441, -1000, 62222, -1000, 2542, 3262,
	1370, 1376, 1370, 1370, 1364, -1000, 77187, 1662, 1212, 1210,
	1887, 1882, -1000, -1000, -1000, 1209, 1208, 827, 1868, -1000,
	-56, 3316, 3334, 125, -1000, 2836, 1205, -1000, -1000, 86237,
	22271, 1518, 1506, 1658, 1203, -47, -1000, 3310, 3307, 1200,
	1193, -1000, 4557, -1000, 70811, 1773, 3029, 2669, 868, 2652,
	-1000, -1000, 868, -48, 67549, 106411, 234, -1000, 72, 43798,
	43798, 72, 43798, 72, 3294, 3028, -1000, -1000, -1000, -1000,
	-1000, 3578, 1905, 2429, -1000, -1000, 620, 2308, 2834, 106411,
	2572, -49, 86237, -1000, 3026, 65938, 3441, 2307, -1000, -1000,
	78248, -1000, 3022, 502, 2306, -1000, 667, 3577, -1000, 109573,
	-1000, 3193, 1317, 3021, 1060, 710, 3358, -1000, 710, 59563,
	-1000, 106411, -1000, -37, 601, 72402, -86, -91, 476, -1000,
	96293, 106411, 1059, 72929, 106411, 3132, 957, 54197, -1000, -92,
	-185, 2651, 947, 947, 868, -1000, 868, -1000, 86237, 2872,
	-1000, -1000, 70811, 947, 947, 947, -1000, -1000, -1000, -1000,
	3576, 3575, 3573, -1000, -1000, -1000, 958, 86237, 106411, 86237,
	-1000, 233, -1000, 106411, -1000, 106411, 106411, 86237, -1000, 958,
	106411, 958, 106411, 958, 106411, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 72, 43798, -1000, -1000, 3572, 1575, -1000, 2871,
	-1000, 2868, -1000, 1, -1000, -1000, -1000, -1000, -1000, 1904,
	86237, 86237, 86237, 86237, 106411, -1000, 106411, 86237, -1000, 77187,
	-1000, 2394, 2867, -1000, -1000, -1000, -1000, -1000, -1000, 1384,
	2144, -1000, 2498, -1000, 1533, -1000, -1000, -1000, 116825, 48270,
	-1000, -1000, 116825, 1828, -1000, 46593, 46034, -1000, -1000, 1644,
	86237, 2585, -1000, 2585, -117, -1000, 115401, 2496, 86237, -1000,
	-1000, -1000, -1000, -1000, 893, 1392, 1392, 1295, 1295, 1295,
	1295, 3309, 453, 1262, 440, 9843, 9843, 1937, 1937, 1937,
	1937, 1937, 9843, 357, 1288, 1288, 357, 357, 357, 357,
	357, 1288, 1288, 1288, 9843, 9843, 9843, 117181, 116924, 12780,
	43798, 43798, 1191, 1889, 552, 11269, 43798, 13927, 13927, 13927,
	13927, -1000, 1964, -1000, -1000, -1000, -1000, 2830, 617, 47711,
	47711, -1000, -1000, -1000, -1000, 23945, 43798, -1000, -1000, -1000,
	-1000, 33544, -1000, -1000, 114786, -317, 475, -114, 0, -1000,
	43798, 43798, 43798, 474, -1000, 232, 43798, 106411, -1000, 13211,
	746, -101, -1000, -102, 1373, -1000, 43798, -1000, -1000, 1189,
	-1000, 1188, 1187, 1186, -1000, 615, 472, -1000, 231, -1000,
	2059, 614, 613, 43798, -1000, -1000, -1000, -1000, -1000, 114420,
	-1000, -1000, 114228, -1000, -1000, 114162, -1000, -1000, 113807, -1000,
	-1000, -1000, 116568, 13155, 12531, 11957, 6077, 11070, 11021, -104,
	470, -112, 467, 878, 877, 451, 437, 411, -115, -1000,
	3571, 3570, 3569, -1000, 3568, 3566, 3565, -1000, 3564, 3562,
	3560, -1000, 3559, 3558, 3557, -1000, 3554, 3553, 3552, -1000,
	3551, 3550, 3549, -1000, 3548, 3547, 3546, -1000, 3545, 3544,
	3543, -118, 409, -1000, 2828, -114, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 407, -1000, 406, -1000, 116469, -114,
	404, 6825, -1000, 47711, 47711, 47711, -1000, 403, -1000, 115144,
	-1000, 116212, 32985, 32985, 32985, 394, 116113, 43798, -114, -126,
	-1000, -134, -1000, -1000, 538, -141, 978, 32414, 50449, 22271,
	-1000, 978, 978, 43798, -1000, 43798, 2514, -1000, -1000, -1000,
	-1000, 2511, 2153, 2655, 51515, -1000, -1000, -1000, -1000, 95761,
	-1000, 3412, 2984, -1000, 95761, -1000, -1000, 106411, 502, -1000,
	95761, 95761, 22271, 871, -1000, 871, 95761, 773, -1000, -1000,
	-1000, -1000, -1000, 393, 56379, 0, 228, 22271, 961, -1000,
	2577, 2577, 2577, 2577, -1000, -1000, 106411, 1185, -51, -120,
	3393, -1000, 2007, -1000, 62222, -1000, 765, 1196, 22271, -1000,
	-1000, -1000, 611, -1000, 3426, 3426, -1000, 3426, 106411, 2826,
	249, 183, 65938, 65938, 3541, -1000, -1000, 204, -1000, 86237,
	204, 204, -1000, 86237, 86237, 2193, -1000, 217, -1000, 209,
	-1000, -1000, -69, -1000, 973, 30166, -1000, 1841, -1000, -1000,
	1493, -1000, 1888, -1000, 1291, -1000, -1000, -1000, -1000, 30166,
	-1000, 4573, 106411, 106411, 86237, -1000, 106411, -1000, 2076, 3391,
	1885, 2408, 2402, -1000, 2304, 109046, 2284, 62222, 106411, -1000,
	-1000, 609, 937, 2494, 2478, 1057, 106411, 106411, 2468, 108519,
	107992, -1000, 3536, 106411, 1978, 43798, 65938, 2028, 2070, 72,
	72, -1000, -1000, 72, 608, 1394, 86237, 86237, 106411, 86237,
	1767, -1000, -1000, -1000, -1000, -1000, 77714, -1000, -1000, 3442,
	3435, -1000, 1370, -1000, -1000, -1000, 1370, 3441, 1765, 106411,
	86237, 65938, 106411, 106411, 1638, 106411, 1053, -1000, 827, 1985,
	72, 72, -1000, -1000, 72, 606, 22271, 1881, -1000, 2932,
	106411, 3483, 106411, 106411, 106411, 65938, 3210, 107465, 106411, 106411,
	65938, 4557, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 67022, 1065, 961, 1626, 1184, 77187, 54197,
	955, 54197, 2636, -1000, -1000, 19555, -1000, 116825, 116825, -1000,
	116825, -1000, 62755, 106411, -1000, 1001, 106411, 72929, 936, 3018,
	58509, -181, 947, 70811, 86237, -49, 106411, -1000, -1000, 3441,
	3007, 502, 2301, -1000, 70811, 3357, 3005, 605, 3535, 3534,
	-1000, 2184, 2287, -1000, -1000, 106938, 3068, 827, 106411, 978,
	51515, 1787, -1000, 56913, 1032, 106411, 1800, 113, -1000, -1000,
	-1000, -14, 106411, -1000, 784, -1000, -1000, 601, 601, 947,
	-255, 602, -1000, 856, 855, 54747, 70811, -146, -1000, -1000,
	-1000, -1000, 2284, 86237, 106411, 1253, 2621, 106411, -148, -1000,
	226, 596, -1000, 2410, -1000, -1000, 957, 54197, 2825, -1000,
	-1000, 969, -1000, 1351, 947, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -38, 106411, -181, -181, -50,
	-51, -1000, 958, -1000, 958, -1000, 958, -1000, 116825, -1000,
	-1000, 1574, 1545, 106411, -1000, 22271, 106411, 86237, 22271, 86237,
	2857, 2856, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1086, -1000, 1828, 2143, -1000, 595, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2379, -1000, -53, 29607,
	873, -1000, -1000, 86237, -39, 43798, 43798, 10416, 9487, 43798,
	47711, 47711, -1000, 43798, 6133, -1000, -1000, -1000, -1000, -1000,
	2824, 593, 43798, 62222, 7020, 6427, -1000, 392, 10269, 357,
	-1000, 43798, -1000, 391, 31855, -1000, 115757, -64, -149, -1000,
	16281, -114, -157, -1000, -1000, 763, -1000, 3064, -1000, 43798,
	115856, 2320, 1977, 1747, 1596, 3426, 3479, 19012, -1000, 60095,
	982, 2084, 113555, -1000, -1000, -1000, -1000, 62222, 62222, 43798,
	43798, -1000, 43798, 43798, 43798, -1000, -1000, -1000, 3426, 922,
	-1000, -1000, -1000, 922, -1000, -1000, 1370, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1370, -1000, 43798, -1000, -1000, 2809, 43798, -1000,
	62222, 62222, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711,
	47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711,
	47711, 2441, 47711, 3411, 3411, 3411, -1000, 2779, 2809, 43798,
	43798, 62222, 389, 388, 385, -1000, 43798, -114, -1000, -1000,
	601, 592, -1000, 2369, -1000, 2709, -1000, 43798, -1000, -156,
	-1000, 2903, -1000, -1000, 2709, 2709, -162, 116825, 51515, 51515,
	-1000, 591, 43798, 2446, -1000, -1000, 745, -315, -1000, 854,
	-1000, -1000, -1000, -1000, -1000, 502, -1000, -1000, -1000, 225,
	95761, 95761, 741, -1000, -163, -1000, -1000, -164, -1000, 3355,
	383, 22271, -1000, 978, 3160, -1000, -1000, -1000, -1000, -1000,
	-1000, -181, 106411, 106411, 2132, 3471, -1000, 3428, 761, 739,
	213, 3426, 372, 365, 364, -181, 106411, 106411, 106411, -1000,
	-1000, -1000, -1000, 204, -1000, -1000, -1000, 200, -1000, -1000,
	-1000, -1000, 2546, -1000, -54, -1000, -1000, -1000, 43798, -1000,
	-1000, 3181, 1182, 1180, -1000, -1000, -1000, -1000, 3255, 91514,
	3390, 1871, 1866, 3002, -1000, 2280, -1000, 1037, -1000, 1935,
	-1000, 43798, 590, 2618, 589, 587, 3531, 1878, 3529, 1058,
	3001, 2193, 2998, 2193, -1000, -1000, -1000, 929, -1000, 116825,
	-1000, 586, 585, -1000, -55, 1594, 2036, 964, -1000, -1000,
	43798, 43798, 95234, -1000, 433, 3186, -41, -1000, -1000, 1621,
	1174, -1000, -1000, -1000, -1000, 3441, 1607, 1173, -1000, -1000,
	-1000, -1000, -1000, -1000, 963, -1000, 2924, 2921, 106411, -1000,
	962, -1000, -1000, 43798, -1000, -56, 1170, 3312, 2279, 86237,
	1168, -1000, 1162, -1000, -1000, -1000, 3305, 2193, 2996, 1163,
	-1000, -1000, -1000, -1000, -1000, 66480, -1000, 106411, 86237, 1582,
	868, -1000, 2480, 868, 955, 2808, -1000, 2525, -1000, 86237,
	3527, 356, -165, -58, 62222, 3354, -1000, 2211, 532, 86237,
	907, -1000, 3412, -1000, -1000, -1000, -1000, 3299, 86237, 3352,
	2991, 961, 72, 86237, 3470, -1000, -1000, 86237, 2980, 2181,
	2270, 2420, 827, 71875, 961, 2080, -67, -1000, 1800, 31284,
	3175, -180, -1000, -1000, -1000, 978, 59563, 51515, 43798, 3524,
	-187, -1000, -1000, -1000, -1000, -1000, 93648, 93648, 70811, 70811,
	70811, 947, 106411, 106411, 72929, -1000, -1000, 584, 106411, 106411,
	583, -1000, 106411, 106411, 3520, 70811, -60, 580, -1000, 848,
	847, 846, -1000, -1000, -1000, -1000, -1000, -1000, -185, 72,
	-1000, 2128, 86237, -1000, 18469, -1000, -1000, -1000, -1000, -1000,
	-1000, 958, -1000, -1000, 2017, 2230, 2017, 1772, 1768, -1000,
	2140, -1000, -1000, -1000, -1000, 2522, 3178, 22271, 3283, 13927,
	43798, 43798, 5055, 6316, 432, 13927, 43798, 43798, 62222, 8543,
	-188, 43798, 43798, -1000, 43798, 736, 116825, 3465, 43798, 355,
	343, -1000, -1000, -1000, 3423, -1000, -1000, -1000, 116825, 43798,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 341, -1000, 210,
	-1000, -1000, -1000, 112208, -1000, 43798, 340, 3251, -1000, 337,
	334, 9135, 530, 113447, 113381, 113189, 332, -1000, -1000, 331,
	329, 116825, 2779, 116825, -1000, -1000, 1022, 1022, 1328, 1328,
	1328, 1328, 3411, 333, 1379, 790, 1066, 1066, 1066, 1088,
	1009, 1009, 1066, 1066, 1066, 2804, 2412, 577, 2506, -1000,
	-1000, 116825, 116825, 317, -1000, -1000, -1000, -114, 316, 601,
	-1000, 2707, 3250, 116825, -1000, 51515, 2707, 2707, -1000, -1000,
	2153, 106411, 116825, 51515, -1000, 2984, -1000, 16835, -1000, 22271,
	-1000, -1000, -1000, -1000, 3412, -1000, 56379, -1000, 574, -1000,
	2, -1000, 3160, -1000, 845, -1000, -181, -181, -1000, -1000,
	734, 3519, 758, 22271, 315, -1000, -1000, -1000, -181, -181,
	-181, -1000, -1000, -1000, 3130, 116825, 106411, 106411, 1491, 94707,
	1757, -1000, -1000, 2401, -1000, 3389, 3382, 106411, 2974, -1000,
	2118, -1000, 1057, 112809, 52047, -1000, 52047, 106411, -1000, -1000,
	1867, 2501, 1101, -1000, 3214, 106411, -1000, 106411, -1000, -1000,
	106411, 106411, 86237, 106411, -1000, 2959, -189, 116825, -61, -1000,
	841, -1000, 1339, -1000, 17926, 106411, 86237, 106411, 86237, 2043,
	-1000, -1000, -1000, 2933, -197, 22271, -1000, 3464, 3462, 2973,
	3223, 3460, 106411, -1000, 106411, 86237, 3129, -1000, -1000, -1000,
	-1000, 1602, 1160, 955, -62, 573, -1000, 840, -1000, -1000,
	836, 955, -1000, 70811, 54197, 502, -1000, 2608, -1000, 90987,
	2161, 72, -1000, 3516, 94180, 571, -1000, 2120, -1000, 733,
	65938, 3441, 72, 86237, -1000, -1000, 502, 309, -63, -1000,
	1041, 22271, 86237, 2969, 2414, 827, 71875, -1000, 1317, 2521,
	-1000, -66, -1000, 550, 72, 2080, -1000, -67, 116825, -1000,
	833, -1000, -198, -1000, -1000, 308, -1000, 3127, 3125, -1000,
	2734, 52047, 568, 567, 106411, 3124, -1000, -1000, -199, 2460,
	2460, 70811, 54197, 70811, 957, -1000, 2261, -1000, -1000, -1000,
	-1000, -1000, 22271, 1599, -1000, 564, 563, -1000, -1000, -1000,
	-1000, 3178, 13927, 13927, 43798, 43798, 43798, 13927, 8543, -204,
	-1000, 13927, 13927, -114, -1000, -1000, 115757, -1000, -1000, -1000,
	116825, -1000, 17383, 2020, -1000, 112772, -1000, 29607, -1000, -1000,
	43798, 43798, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	47711, 2792, 562, 62222, -1000, -1000, 304, 976, 43798, 45475,
	2903, 976, 976, -1000, -205, -1000, -1000, -1000, 3412, 2,
	-1000, -1000, 3509, 22271, -1000, 70811, 756, -1000, 3508, -1000,
	-1000, -1000, -1000, -1000, 2646, -1000, -1000, -1000, 2400, -1000,
	1147, -1000, -1000, 106411, -1000, 106411, -1000, 22271, 106411, 2767,
	2254, -1000, 937, 2452, 561, 47711, 86237, 867, -1000, 3375,
	2706, -212, -1000, 106411, 43798, 106411, -213, -214, 2242, -1000,
	-1000, 2236, 43798, -1000, 62222, 560, 2193, 2193, -215, -220,
	-1000, -1000, 43798, 1146, 106411, 30725, -1000, 3505, 3186, -1000,
	-1000, -1000, -1000, 106411, 43798, 1143, -1000, -1000, -1000, 3459,
	2193, 22271, -1000, 2193, 2193, 3223, 1100, 106411, 86237, -1000,
	2340, 2340, 70811, 54197, -1000, -69, 955, 3347, 2603, 3504,
	-1000, -1000, -1000, -1000, 2451, -1000, -1000, 106411, 2445, 948,
	-1000, -221, -1000, 830, 829, 72929, 936, 915, -1000, -1000,
	-1000, -1000, 502, 3342, -1000, 3456, 556, 106411, 2179, 553,
	22271, 3173, 827, 71875, -1000, 3068, 1800, -1000, 2266, 106411,
	3162, -1000, 2521, 552, -1000, 947, 549, 547, 2529, 2529,
	-222, 52047, 52047, -223, 544, 947, -1000, -228, -1000, -1000,
	-1000, -1000, -73, -1000, 843, 842, -1000, -1000, 86237, 86237,
	43798, 43798, -1000, 13927, 13927, 13927, -1000, 269, -1000, -1000,
	2080, 3247, -1000, -83, 112743, 14928, 5028, 47711, 62222, -229,
	-1000, -1000, 106411, 116825, -97, -1000, 116825, 541, 540, 417,
	-1000, -1000, -1000, 729, -1000, -1000, 3503, -1000, 106411, -1000,
	106411, -1000, 2064, -1000, -1000, -1000, 106411, 2268, -1000, -1000,
	1056, 43798, 2506, 539, 43798, -1000, 3338, -1000, 2582, 2776,
	1880, 52047, -1000, 3178, -1000, 14568, -1000, 1040, 1884, -1000,
	-1000, 116825, 3223, 52047, -1000, -1000, 537, 533, 116825, 527,
	828, 2791, -1000, -1000, -1000, -1000, 116825, 517, 3312, -1000,
	-1000, -1000, -1000, 2193, 86237, -1000, -1000, -1000, -236, -1000,
	-1000, 1902, 72, 1985, 2642, -1000, 2161, 505, -1000, -1000,
	2152, 2528, -1000, 94180, 30166, 30166, 258, 3329, 915, -1000,
	3419, -1000, 3323, 72, -1000, 52047, -1000, 86237, 52047, 2173,
	1941, 2391, 71875, -1000, 2420, -1000, -1000, -237, 106411, 1800,
	-1000, -1000, 70811, 70811, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1040, -238, -239, -1000, 70811,
	-1000, -1000, 2261, -1000, 106411, -1000, 106411, -1000, -1000, -244,
	-246, -1000, 2190, 43798, 29607, -1000, -1000, 5028, -249, -1000,
	-98, -1000, 3313, 45475, 3502, 3501, 3495, -1000, -1000, -1000,
	-1000, -1000, -1000, 2967, 2704, 13993, 2371, 106411, 386, -1000,
	2775, -1000, -1000, 2603, 504, -1000, -1000, -1000, -1000, 873,
	106411, 2603, 2694, 86237, 1042, -252, 2017, 2017, 43798, 29048,
	2041, 43798, -1000, -1000, 3223, -1000, 2758, 3425, -1000, 936,
	-1000, 2027, 106411, -1000, 3207, -1000, 3121, -1000, -1000, -1000,
	2608, 72, -1000, -1000, 72, -1000, -254, 1041, -259, 86237,
	1873, -1000, 827, -1000, 2414, 978, -1000, -1000, -260, -261,
	1880, 1040, 946, -262, -1000, -268, -269, -1000, -1000, 159,
	44916, 44916, 44916, -114, -117, -1000, 106411, 503, -1000, -1000,
	-1000, -1000, 2918, 952, -1000, 2157, 1870, 74, 1067, -1000,
	-1000, 1985, 106411, -1000, -1000, -1000, 951, 502, -1000, 43798,
	1040, -270, -1000, 1031, -271, -1000, 1024, -277, -1000, 2781,
	-1000, -278, 2193, 949, 3289, -1000, -1000, -1000, 2152, 86237,
	-279, -1000, -1000, 2226, -1000, 2603, 948, -1000, 1040, 501,
	1880, 499, 1434, 827, -1000, -1000, 1370, 3173, 3074, 947,
	947, 2603, 1880, 978, 498, 947, -1000, -1000, -1000, 2983,
	-1000, 48829, 2151, 1751, 114842, 2983, 2983, -1000, -1000, 106411,
	3278, -1000, 2169, 2158, 1465, -1000, -1000, -1000, -1000, -1000,
	-1000, 2706, -284, 3274, 2371, 116825, 2603, -1000, 2017, 2641,
	-1000, 2017, 2765, -1000, 1986, -1000, -1000, -1000, 1637, 3402,
	-1000, 495, -1000, 106411, 1723, 1653, 3494, 1985, 2152, 1880,
	52047, 2603, 52047, -1000, -1000, 106411, -1000, 1941, 1275, -1000,
	-1000, 1985, 2603, -1000, -1000, -1000, 1761, 3371, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 821, -1000, 3105, -1000,
	1082, 2238, 2238, 978, -1000, 808, 2157, -1000, -1000, 494,
	-1000, 493, -1000, 2105, -1000, -1000, 106411, -1000, -1000, 3491,
	-1000, 936, -1000, 2603, -285, 1985, -286, -1000, -181, 1873,
	-1000, 1556, 946, 1985, 1622, -1000, -1000, 2065, 44357, 43798,
	-1000, 3396, -1000, -1000, 2454, -1000, -1000, 43798, 2706, 43798,
	43798, 57977, -287, -1000, 2152, 1985, 1040, 946, 1880, 1434,
	59563, 978, 946, -1000, -1000, -1000, 116825, -1000, -1000, -1000,
	116825, -1000, -296, -299, -255, 93648, 2141, -1000, 946, 1880,
	978, 2603, -1000, -267, -1000, 978, 1985, 1140, -306, -1000,
	-1000, -1000, 978, 2603, -1000, 1985, -1000, -1000, -1000, 489,
	-1000, -1000, 1985, 946, 43798, 946, 978, -308, 978, -1000,
	1985, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4331, 4329, 4325, 4324, 4322, 4321, 4318, 4315, 4313,
	4311, 4310, 4309, 4307, 4305, 4300, 4298, 4297, 4294, 4291,
	4289, 4285, 4284, 4283, 4282, 4281, 4280, 4279, 4278, 4276,
	4271, 4270, 4269, 4268, 4267, 4266, 4265, 4264, 4263, 4262,
	4260, 4259, 4257, 4256, 4255, 4253, 4251, 4248, 4246, 4241,
	4239, 4238, 4235, 4234, 4233, 4227, 4222, 4220, 4219, 50,
	4218, 4215, 4213, 4212, 4210, 4209, 4207, 4206, 4203, 4202,
	4195, 4194, 4189, 4188, 4186, 4183, 4182, 4180, 4176, 51,
	4171, 249, 4170, 4169, 4168, 4167, 4166, 4165, 4164, 4162,
	4161, 4160, 4158, 4157, 248, 4155, 146, 4154, 4153, 4152,
	4149, 4148, 247, 4143, 4142, 4141, 4139, 258, 4138, 4137,
	4136, 4131, 4129, 4128, 4127, 4125, 4124, 4123, 4121, 86,
	181, 4118, 4117, 586, 4116, 4114, 4113, 4109, 4106, 4105,
	4103, 4102, 4100, 4098, 223, 4095, 245, 4093, 4091, 4089,
	4088, 4087, 4086, 4084, 4083, 4081, 4080, 4079, 4070, 4068,
	4067, 4066, 4062, 4060, 4059, 4058, 4055, 4045, 4043, 4027,
	4023, 4022, 4021, 4018, 4015, 4011, 4010, 4009, 4007, 4005,
	4004, 4003, 255, 179, 4002, 3999, 244, 243, 3998, 3997,
	3996, 3987, 3985, 120, 5, 30, 3984, 3983, 87, 82,
	73, 88, 92, 89, 3981, 101, 3980, 111, 57, 3979,
	12, 13, 145, 217, 6065, 209, 3977, 3975, 3974, 219,
	178, 3970, 216, 3966, 3964, 3963, 3962, 56, 48, 159,
	172, 156, 152, 280, 3961, 143, 90, 80, 52, 38,
	11, 64, 235, 19, 3960, 234, 6, 125, 25, 3958,
	3956, 3955, 3950, 3169, 110, 3949, 242, 222, 148, 3948,
	3947, 3945, 892, 3941, 3939, 44, 3938, 206, 72, 116,
	24, 115, 3934, 136, 33, 3930, 161, 71, 3924, 141,
	91, 77, 8580, 4184, 3922, 97, 54, 112, 60, 155,
	154, 180, 109, 142, 144, 185, 198, 193, 163, 40,
	3920, 224, 3919, 3345, 85, 160, 3917, 3916, 3914, 78,
	183, 100, 3912, 3910, 68, 7, 2, 4, 173, 26,
	108, 41, 20, 3909, 28, 3907, 3904, 3902, 3899, 3898,
	37, 150, 3897, 256, 3895, 66, 49, 22, 3891, 119,
	191, 3890, 207, 121, 3887, 3886, 225, 188, 174, 3885,
	43, 205, 3882, 3878, 3875, 3871, 3868, 124, 3, 118,
	3867, 3865, 133, 3863, 47, 212, 182, 3860, 67, 3859,
	3856, 157, 95, 131, 254, 106, 200, 107, 196, 169,
	202, 3855, 3854, 3853, 175, 3851, 3848, 195, 137, 3845,
	3843, 238, 259, 75, 39, 69, 210, 70, 177, 158,
	3842, 187, 3840, 3838, 257, 167, 190, 1, 29, 94,
	117, 3837, 18, 204, 140, 214, 103, 3836, 5995, 2400,
	2080, 3834, 3833, 126, 113, 65, 105, 138, 240, 62,
	3830, 3825, 2439, 3824, 3821, 3820, 3818, 170, 3817, 3815,
	3813, 132, 153, 213, 3811, 83, 59, 45, 15, 114,
	230, 250, 102, 197, 151, 231, 3810, 3808, 3804, 165,
	3803, 93, 168, 3802, 186, 233, 3798, 3797, 135, 3796,
	139, 618, 58, 134, 3795, 203, 3792, 3786, 3778, 3777,
	3775, 3771, 3768, 278, 208, 3766, 3763, 3762, 31, 171,
	3761, 236, 318, 166, 81, 46, 3760, 99, 2059, 3759,
	162, 130, 53, 239, 104, 241, 3755, 4258, 55, 3754,
	0, 11570, 6746, 10165, 11053, 3752, 4497, 3751, 3748, 3746,
	189, 122, 3745, 3741, 3738, 96, 3737, 76, 3736, 3735,
	61, 3734, 21, 8, 9, 27, 23, 454, 324, 3733,
	3730, 16, 123, 127, 3728, 251, 201, 3727, 3724, 3723,
	3721, 84, 3720, 36, 3718, 34, 3713, 3712, 42, 14,
	35, 3711, 3708, 232, 3707, 199, 221, 3706, 147, 3705,
	3334, 129, 3703, 3702, 227, 79, 3700, 274, 3696, 3298,
	3693, 3692, 17, 3691, 3684, 220, 164, 194, 3681, 3679,
	149, 3677, 3674, 3673, 271, 3672, 3671, 32, 3670, 10,
	3668, 3667, 192, 3118, 3666, 3665, 63, 3664, 176,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 11,
	11, 7, 7, 7, 8, 8, 8, 8, 46, 46,
	9, 9, 9, 9, 9, 9, 9, 9, 9, 34,
	29, 30, 31, 32, 10, 10, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 16, 16, 35, 35, 17,
	17, 37, 37, 18, 18, 38, 38, 564, 564, 21,
	40, 22, 41, 15, 565, 565, 565, 565, 33, 23,
	42, 26, 26, 26, 26, 26, 186, 186, 186, 186,
	20, 20, 36, 36, 220, 220, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 563, 563, 222, 222, 221, 216, 216, 566, 566,
	223, 223, 223, 225, 225, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 462, 462, 462, 495, 495, 494,
	494, 494, 493, 493, 579, 579, 580, 580, 580, 580,
	580, 122, 122, 360, 360, 360, 48, 48, 48, 48,
	48, 558, 558, 188, 188, 188, 190, 190, 189, 189,
	189, 189, 70, 70, 571, 571, 572, 572, 570, 573,
	573, 573, 187, 187, 187, 118, 118, 118, 118, 119,
	119, 120, 120, 191, 191, 191, 193, 193, 192, 192,
	192, 192, 192, 192, 192, 192, 197, 103, 103, 103,
	103, 103, 103, 103, 103, 103, 98, 98, 497, 497,
	498, 498, 182, 182, 183, 183, 183, 183, 184, 184,
	185, 185, 185, 62, 194, 194, 196, 196, 195, 195,
	50, 50, 50, 50, 50, 50, 50, 51, 51, 51,
	51, 51, 52, 52, 52, 52, 52, 52, 53, 53,
	53, 53, 53, 53, 60, 60, 60, 60, 173, 173,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 67, 67, 67, 581, 581, 581, 581, 581, 581,
	581, 581, 581, 581, 581, 581, 581, 581, 581, 581,
	581, 581, 581, 582, 582, 583, 583, 584, 584, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 76, 76, 322, 322,
	292, 292, 77, 77, 77, 78, 78, 79, 79, 64,
	64, 556, 556, 337, 337, 453, 453, 81, 81, 359,
	359, 82, 82, 82, 82, 82, 82, 83, 83, 83,
	83, 83, 83, 83, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 91, 91,
	91, 91, 91, 92, 92, 92, 89, 89, 89, 86,
	86, 86, 85, 85, 85, 90, 90, 90, 555, 281,
	281, 88, 88, 88, 87, 87, 87, 338, 338, 93,
	93, 93, 93, 293, 94, 94, 94, 94, 94, 94,
	94, 94, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 97, 97, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 97, 455, 455, 95, 95, 95,
	420, 420, 99, 99, 99, 375, 375, 100, 100, 100,
	100, 100, 101, 101, 101, 101, 101, 101, 121, 121,
	121, 121, 121, 121, 560, 560, 330, 330, 246, 246,
	246, 246, 111, 111, 111, 111, 112, 112, 112, 113,
	113, 178, 178, 128, 128, 128, 128, 128, 127, 127,
	127, 127, 127, 127, 54, 54, 54, 55, 55, 56,
	56, 57, 57, 58, 58, 59, 59, 59, 59, 59,
	130, 130, 576, 576, 132, 129, 129, 129, 131, 131,
	131, 131, 133, 134, 134, 134, 134, 134, 134, 134,
	134, 135, 135, 487, 487, 346, 346, 485, 485, 507,
	507, 486, 486, 297, 297, 297, 297, 297, 298, 298,
	298, 496, 496, 496, 496, 496, 496, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 179, 179, 180, 181, 181, 181, 181,
	181, 158, 158, 158, 172, 172, 172, 172, 172, 172,
	172, 161, 161, 161, 146, 146, 137, 137, 137, 137,
	137, 137, 137, 141, 141, 141, 141, 141, 141, 141,
	141, 138, 138, 148, 148, 148, 148, 148, 142, 142,
	143, 143, 143, 143, 168, 168, 145, 145, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 139, 139, 139,
	139, 150, 150, 150, 150, 382, 382, 382, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 171,
	171, 171, 171, 171, 171, 574, 574, 575, 575, 165,
	165, 165, 165, 165, 165, 434, 434, 159, 159, 159,
	159, 164, 164, 164, 164, 167, 167, 167, 167, 365,
	365, 156, 156, 156, 157, 157, 157, 162, 162, 163,
	160, 160, 166, 166, 166, 166, 140, 140, 140, 586,
	586, 586, 169, 169, 155, 155, 170, 170, 170, 170,
	170, 170, 170, 170, 152, 152, 152, 151, 151, 151,
	151, 154, 154, 154, 154, 153, 144, 557, 557, 553,
	553, 553, 553, 553, 553, 553, 553, 554, 554, 554,
	554, 559, 559, 104, 104, 104, 104, 104, 114, 114,
	114, 114, 114, 105, 105, 105, 105, 105, 107, 107,
	106, 106, 106, 106, 71, 71, 71, 71, 71, 14,
	14, 14, 72, 72, 200, 200, 200, 311, 311, 201,
	201, 305, 305, 305, 305, 198, 198, 199, 199, 73,
	73, 587, 587, 587, 567, 567, 567, 568, 568, 568,
	568, 568, 568, 299, 299, 300, 300, 400, 400, 400,
	400, 400, 303, 303, 303, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 306, 306, 224, 224, 224, 309,
	310, 310, 307, 307, 308, 308, 308, 313, 313, 312,
	315, 315, 314, 399, 516, 516, 518, 518, 518, 518,
	518, 518, 518, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 383, 383, 588, 588, 514, 514,
	514, 515, 510, 510, 511, 511, 511, 511, 511, 301,
	301, 302, 302, 302, 302, 512, 513, 328, 328, 438,
	517, 517, 519, 519, 521, 589, 589, 589, 589, 589,
	589, 590, 590, 590, 398, 398, 397, 397, 320, 320,
	522, 522, 522, 522, 523, 523, 523, 523, 523, 526,
	525, 524, 524, 524, 524, 524, 75, 75, 75, 362,
	362, 361, 361, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 175, 175,
	249, 249, 69, 69, 69, 12, 12, 12, 569, 569,
	569, 74, 74, 74, 74, 74, 74, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 562, 562, 561,
	561, 250, 250, 592, 592, 80, 80, 80, 80, 80,
	80, 80, 456, 456, 457, 457, 68, 68, 68, 68,
	68, 384, 384, 381, 381, 380, 380, 327, 327, 436,
	436, 436, 437, 254, 254, 255, 255, 217, 217, 217,
	28, 27, 19, 19, 24, 24, 25, 25, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	44, 44, 44, 44, 47, 47, 43, 43, 43, 43,
	45, 45, 39, 39, 577, 577, 578, 578, 110, 110,
	115, 115, 115, 115, 115, 116, 116, 116, 116, 117,
	117, 117, 117, 126, 126, 174, 174, 174, 174, 174,
	174, 174, 49, 49, 49, 49, 61, 61, 61, 61,
	124, 594, 594, 594, 125, 125, 125, 593, 593, 247,
	247, 394, 394, 395, 395, 595, 595, 396, 396, 396,
	396, 396, 240, 239, 241, 241, 242, 242, 66, 66,
	66, 233, 233, 232, 230, 230, 499, 499, 235, 235,
	236, 236, 226, 226, 227, 227, 228, 228, 229, 229,
	238, 238, 596, 596, 102, 102, 102, 177, 177, 291,
	291, 291, 391, 391, 391, 321, 321, 261, 261, 393,
	393, 393, 393, 358, 358, 358, 176, 176, 335, 335,
	348, 348, 349, 349, 450, 450, 350, 108, 108, 109,
	109, 123, 123, 204, 204, 202, 202, 202, 202, 202,
	202, 202, 202, 209, 209, 210, 210, 211, 211, 212,
	213, 213, 213, 213, 339, 339, 214, 214, 214, 203,
	203, 203, 205, 205, 205, 205, 205, 205, 205, 208,
	208, 208, 208, 215, 215, 215, 207, 207, 533, 533,
	533, 535, 535, 537, 537, 536, 536, 532, 532, 534,
	534, 591, 591, 364, 364, 364, 318, 319, 316, 316,
	317, 317, 325, 325, 323, 324, 324, 326, 326, 435,
	435, 435, 218, 218, 218, 355, 355, 355, 355, 356,
	356, 387, 387, 385, 385, 385, 385, 386, 386, 388,
	388, 388, 389, 389, 390, 390, 352, 352, 353, 353,
	354, 354, 354, 354, 416, 416, 206, 206, 206, 332,
	332, 332, 333, 333, 406, 406, 406, 406, 406, 406,
	407, 407, 405, 405, 405, 405, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 440, 441, 441, 334, 334,
	442, 392, 392, 551, 551, 551, 552, 552, 433, 433,
	443, 443, 443, 443, 443, 443, 431, 431, 432, 432,
	451, 452, 452, 368, 368, 368, 368, 366, 366, 369,
	369, 369, 369, 369, 367, 367, 444, 444, 444, 444,
	357, 357, 445, 445, 445, 445, 446, 447, 447, 448,
	448, 401, 402, 402, 458, 458, 458, 458, 460, 331,
	331, 331, 331, 331, 509, 508, 508, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 475, 475,
	475, 475, 475, 475, 475, 461, 461, 461, 461, 461,
	465, 465, 465, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 466, 466, 471, 471, 472, 472,
	472, 467, 468, 473, 473, 473, 473, 597, 597, 477,
	477, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	463, 463, 463, 470, 470, 470, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 376,
	376, 378, 378, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	410, 410, 410, 410, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 527,
	527, 527, 527, 527, 527, 527, 527, 412, 412, 530,
	530, 531, 531, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 538, 538, 539, 539, 541, 541, 542, 542,
	543, 544, 544, 544, 545, 546, 546, 540, 540, 547,
	547, 547, 547, 548, 548, 549, 549, 549, 549, 549,
	550, 550, 550, 550, 550, 422, 422, 423, 423, 429,
	429, 429, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 251, 251,
	251, 251, 251, 344, 344, 342, 342, 342, 345, 345,
	343, 343, 341, 341, 340, 340, 419, 419, 417, 417,
	421, 421, 370, 370, 476, 476, 476, 476, 476, 476,
	476, 476, 371, 371, 371, 379, 372, 372, 373, 373,
	373, 373, 373, 413, 414, 374, 374, 374, 415, 415,
	424, 428, 428, 427, 426, 426, 425, 425, 403, 403,
	404, 404, 351, 351, 598, 598, 347, 347, 449, 449,
	449, 449, 295, 295, 336, 336, 294, 294, 286, 286,
	287, 287, 287, 287, 329, 329, 430, 430, 478, 478,
	479, 479, 480, 480, 481, 481, 482, 483, 484, 418,
	418, 271, 270, 258, 259, 269, 268, 267, 257, 260,
	264, 265, 266, 262, 263, 277, 276, 275, 231, 234,
	282, 283, 283, 285, 285, 284, 284, 273, 274, 454,
	256, 288, 288, 289, 289, 289, 290, 290, 290, 290,
	252, 252, 253, 253, 278, 278, 279, 280, 280, 272,
	272, 272, 243, 243, 243, 244, 244, 245, 245, 492,
	492, 489, 489, 489, 490, 490, 490, 491, 491, 491,
	491, 488, 488, 488, 488, 488, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 501, 501, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 503, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 506, 506,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 1, 3, 1, 1, 1, 3, 4, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 6,
	6, 6, 4, 4, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 5,
	5, 6, 6, 4, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 6, 5, 6, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	3, 2, 1, 1, 3, 1, 3, 2, 2, 0,
	1, 1, 0, 2, 0, 7, 10, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 6, 7,
	9, 6, 2, 2, 3, 0, 8, 6, 8, 7,
	2, 0, 1, 2, 5, 0, 1, 3, 3, 1,
	1, 3, 12, 3, 1, 0, 1, 1, 2, 3,
	3, 0, 4, 6, 0, 5, 6, 8, 2, 1,
	3, 1, 3, 2, 5, 0, 1, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 6, 4, 9,
	7, 12, 12, 12, 9, 2, 7, 2, 1, 1,
	1, 3, 3, 0, 3, 1, 3, 1, 1, 3,
	2, 5, 0, 7, 2, 0, 1, 2, 3, 1,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 6, 6, 6, 6, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 6, 3, 3, 4, 3, 3, 4, 3, 4,
	4, 4, 3, 5, 7, 3, 3, 4, 3, 3,
	3, 3, 3, 2, 0, 1, 0, 1, 0, 4,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	5, 1, 2, 1, 3, 2, 0, 9, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 6,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 1, 1,
	3, 4, 6, 3, 3, 5, 3, 1, 3, 2,
	2, 2, 2, 1, 2, 2, 5, 3, 3, 6,
	6, 3, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 3, 5, 7, 2,
	3, 0, 3, 5, 2, 3, 0, 2, 3, 2,
	3, 2, 6, 4, 7, 7, 7, 2, 6, 4,
	7, 7, 7, 2, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 1, 1, 5, 3, 2, 6, 3, 3,
	4, 4, 3, 1, 3, 2, 3, 3, 1, 3,
	1, 2, 1, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 2, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 1, 3, 3, 3, 3,
	3, 2, 3, 3, 1, 1, 1, 1, 1, 2,
	2, 5, 7, 3, 3, 3, 4, 4, 6, 5,
	5, 5, 3, 4, 4, 3, 4, 4, 3, 4,
	4, 5, 3, 5, 5, 5, 7, 3, 3, 3,
	2, 6, 4, 3, 2, 3, 4, 3, 5, 3,
	6, 5, 6, 3, 5, 6, 3, 4, 3, 4,
	3, 3, 4, 4, 5, 0, 1, 1, 3, 2,
	4, 3, 3, 5, 3, 4, 3, 5, 3, 3,
	4, 4, 5, 3, 3, 1, 1, 0, 2, 5,
	4, 6, 4, 6, 4, 1, 0, 3, 4, 4,
	5, 7, 5, 3, 3, 3, 4, 4, 5, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 3, 4, 3, 1,
	1, 1, 2, 3, 2, 3, 6, 6, 7, 9,
	7, 9, 3, 4, 10, 10, 3, 5, 5, 5,
	3, 4, 4, 5, 3, 2, 5, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 6, 5, 8, 3, 6,
	6, 3, 12, 15, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 8, 0, 1, 1, 0, 2,
	1, 0, 1, 0, 9, 9, 3, 1, 3, 7,
	1, 3, 11, 3, 2, 0, 3, 1, 2, 2,
	3, 2, 6, 2, 1, 2, 2, 8, 4, 2,
	5, 5, 5, 2, 2, 0, 1, 3, 11, 12,
	8, 5, 3, 1, 5, 10, 7, 11, 3, 3,
	0, 2, 4, 3, 3, 1, 5, 1, 3, 1,
	2, 0, 1, 2, 2, 0, 1, 3, 3, 2,
	2, 1, 1, 1, 4, 0, 6, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 4, 2,
	2, 2, 4, 7, 3, 4, 6, 3, 1, 1,
	1, 8, 10, 11, 7, 10, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 3, 0, 1, 8, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 17, 20, 16, 19,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 2,
	4, 2, 3, 1, 0, 2, 0, 1, 1, 0,
	9, 6, 6, 8, 6, 8, 5, 7, 2, 6,
	4, 4, 4, 5, 3, 3, 4, 3, 6, 4,
	6, 7, 8, 9, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 8, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 12, 15,
	3, 1, 0, 4, 3, 0, 1, 1, 4, 4,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	4, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 4,
	8, 11, 5, 2, 2, 0, 10, 3, 2, 0,
	1, 3, 1, 1, 3, 3, 5, 6, 4, 5,
	4, 1, 1, 3, 3, 1, 2, 4, 4, 2,
	3, 5, 5, 1, 3, 1, 0, 1, 2, 3,
	2, 4, 2, 3, 0, 2, 0, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 8,
	8, 8, 2, 4, 4, 4, 2, 2, 2, 2,
	3, 1, 3, 1, 2, 6, 7, 1, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 1, 0, 3, 3, 5, 1, 3, 3,
	4, 5, 2, 2, 0, 2, 2, 1, 1, 1,
	0, 1, 0, 2, 2, 5, 4, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 3,
	1, 3, 3, 3, 2, 0, 4, 2, 5, 3,
	2, 0, 1, 3, 3, 5, 1, 1, 1, 1,
	1, 3, 2, 4, 4, 0, 4, 4, 3, 4,
	1, 5, 3, 4, 5, 5, 1, 5, 1, 3,
	2, 0, 3, 0, 2, 3, 1, 3, 2, 0,
	3, 5, 6, 4, 6, 4, 3, 2, 1, 0,
	5, 1, 0, 2, 2, 2, 1, 1, 0, 1,
	1, 1, 1, 0, 4, 2, 1, 2, 2, 4,
	1, 3, 1, 2, 3, 2, 4, 1, 0, 1,
	0, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 3, 5, 1, 2, 1,
	1, 1, 1, 1, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 1,
	1, 4, 4, 6, 6, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 5, 4, 1, 2,
	1, 4, 1, 1, 2, 1, 1, 1, 1, 1,
	0, 1, 2, 5, 1, 4, 2, 5, 1, 4,
	3, 3, 0, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 1,
	0, 1, 4, 1, 3, 3, 3, 5, 2, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 4, 3, 4, 3, 4, 3,
	4, 4, 3, 6, 5, 5, 5, 4, 4, 3,
	4, 3, 5, 0, 5, 0, 2, 0, 1, 3,
	3, 2, 2, 0, 6, 1, 0, 3, 0, 3,
	3, 3, 0, 1, 4, 2, 2, 2, 2, 2,
	3, 2, 2, 3, 0, 4, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 3, 5, 7, 1, 7, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 573, -96, -93, -62, -60, -99, -100,
	-82, -101, -95, -121, -126, -108, -109, -110, -122, -128,
	-174, -179, -180, -181, -3, -48, -50, -63, -81, -83,
	-94, -103, -102, -104, -111, -118, -114, -98, -54, -123,
	-127, -136, -175, -176, -177, 33, 32, 100, 80, 151,
	126, 134, 196, 374, 415, 426, 388, 139, 407, 393,
	-131, -132, 443, -49, -61, -125, -124, 73, 127, 402,
	-4, -12, 30, 46, -51, -52, -53, 62, -69, -65,
	-76, -70, -67, -581, 102, -534, -84, -87, -117, -585,
	158, 214, -105, -106, 357, -112, -113, 409, -115, -116,
	411, 159, -56, -55, 153, -202, -204, -129, -130, -178,
	-137, -138, -139, -140, -141, -142, -143, -168, -144, -145,
	-146, -147, -148, -149, -153, -171, -150, -151, -152, -154,
	-155, -160, -156, -157, -158, -159, -161, -162, -164, -165,
	-166, -167, -169, -170, 448, -163, 505, 49, 462, 82,
	143, 419, 21, -5, -6, -7, -8, -9, -10, -11,
	-14, -13, -64, -66, -68, -71, -72, -73, -80, -74,
	-75, -533, -85, -86, -89, -91, -92, -88, -90, 408,
	-205, -203, 570, 520, -16, -21, -22, -17, -18, -20,
	-23, -19, -24, -25, -35, -40, -41, -37, -38, -36,
	-39, -42, -43, -44, -45, -46, -47, -27, -33, -34,
	-28, -29, -30, -31, -32, -15, -26, 539, 548, -208,
	-206, -207, -215, 435, 528, 479, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 573, 573, 573, -293, 2,
	-273, -278, -279, -280, -272, -243, -503, -506, 4, -500,
	-504, 165, 223, 321, 21, 23, 22, 24, 25, 26,
	27, 28, 30, 31, 42, 43, 45, 46, 47, 48,
	49, 53, 55, 59, 60, 61, 62, 63, 64, 68,
	73, 74, 79, 80, 81, 82, 83, 84, 85, 91,
	88, 89, 90, 92, 94, 96, 97, 98, 99, 100,
	101, 103, 104, 105, 107, 108, 116, 117, 118, 119,
	121, 126, 127, 130, 125, 129, 132, 133, 134, 137,
	138, 139, 141, 142, 144, 145, 146, 148, 149, 151,
	152, 153, 156, 154, 487, 155, 157, 158, 159, 160,
	163, 171, 172, 173, 178, 180, 184, 185, 188, 189,
	190, 191, 192, 193, 194, 195, 197, 201, 203, 204,
	205, 206, 207, 213, 214, 216, 217, 218, 219, 224,
	225, 226, 230, 227, 236, 237, 241, 242, 243, 245,
	249, 250, 251, 252, 253, 254, 256, 258, 257, 260,
	263, 264, 267, 271, 272, 276, 277, 273, 278, 279,
	281, 282, 285, 283, 286, 287, 284, 288, 290, 291,
	292, 293, 294, 295, 296, 297, 298, 299, 300, 301,
	289, 304, 302, 306, 307, 308, 319, 317, 312, 313,
	309, 314, 310, 311, 315, 316, 323, 324, 327, 211,
	329, 330, 333, 351, 337, 338, 339, 342, 343, 346,
	349, 350, 352, 353, 354, 355, 356, 357, 358, 359,
	361, 362, 364, 365, 366, 368, 369, 370, 372, 374,
	375, 377, 378, 380, 381, 382, 383, 384, 385, 386,
	388, 390, 389, 391, 393, 395, 396, 397, 402, 407,
	404, 405, 406, 408, 409, 410, 411, 413, 414, 415,
	417, 418, 419, 420, 422, 424, 425, 428, 429, 445,
	446, 464, 426, 427, 430, 431, 432, 433, 434, 438,
	436, 437, 439, 440, 441, 443, 444, 447, 448, 450,
	451, 452, 453, 454, 455, 458, 460, 461, 462, 463,
	465, 468, 469, 470, 471, 466, 478, 473, 475, 476,
	480, 481, 482, 483, 484, 485, 486, 488, 490, 498,
	499, 500, 502, 505, 506, 507, 508, 496, 510, 511,
	514, 515, 516, 519, 517, 518, 520, 522, 525, 526,
	527, 533, 532, 534, 540, 541, 543, 544, 545, 37,
	50, 51, 54, 56, 58, 69, 70, 71, 75, 122,
	123, 150, 161, 162, 174, 186, 187, 198, 200, 208,
	209, 210, 231, 232, 234, 239, 261, 326, 328, 344,
	348, 363, 367, 371, 373, 387, 421, 456, 467, 472,
	491, 492, 493, 494, 501, 503, 528, 529, 530, 535,
	542, -293, 2, -273, 335, -266, 2, -243, -243, 374,
	29, 2, 29, 362, 437, 482, 484, 2, -560, -330,
	2, 29, -246, -243, 102, 196, 435, -266, 2, -560,
	-330, 25, 2, -243, 2, 349, 22, 28, 66, 77,
	98, 137, 160, 181, 184, -584, 351, 381, 424, 439,
	478, 488, 502, 2, 532, 282, 436, 479, 223, 118,
	507, 430, -569, 428, 429, 349, 379, 417, 199, 521,
	-247, 2, 426, -243, 282, 2, 573, 94, 272, 74,
	421, 440, -134, 499, -133, 491, 430, -135, -487, 2,
	304, -243, 573, 573, 573, 29, -256, -243, 479, 223,
	430, 118, 476, 573, 2, 479, 354, 532, 436, 118,
	384, 223, 507, 430, -569, 282, -558, 2, -553, 4,
	-504, -500, -287, -286, 479, 485, 118, -280, -272, 563,
	-279, 573, 573, 573, 2, 242, 243, 383, 382, 440,
	441, 573, 573, 573, 573, 428, 2, 160, 22, 28,
	66, 93, 98, 124, 181, 184, 340, -582, 351, 381,
	439, 478, 481, 488, 502, -568, 463, 68, 430, -567,
	-569, 282, 507, 137, -380, 118, 272, 195, 515, 484,
	482, 513, 130, 230, 518, 517, 573, 573, -96, 2,
	570, 33, 32, 139, 443, -197, 479, 235, 2, -243,
	573, 573, 2, 242, 243, 428, 429, 573, 573, 182,
	-553, 2, 573, 573, 2, 242, 243, 428, 429, 235,
	2, 68, 432, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 573, 2, -172, 440, 463,
	205, 47, 46, 74, 29, 380, 79, 355, 119, 145,
	508, 197, 223, 224, 250, 93, 94, -382, 45, 243,
	242, 429, -574, 428, -434, 480, 431, 437, 475, 254,
	426, 499, 102, 522, 418, 545, 384, 385, 397, 273,
	154, 4, 118, 304, 442, 491, 272, 425, 358, 84,
	-591, 2, 479, -593, 2, 499, 499, 2, -593, 2,
	-593, 2, -593, 2, -594, 499, 542, 573, 573, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, -203, -205, -204, 573, 573, 573,
	573, 573, 573, 573, -172, 440, 2, 74, 29, -323,
	-325, 512, 233, 147, 341, -202, -204, 2, -533, -485,
	2, -408, -507, -410, 561, 562, 554, 477, 67, 320,
	546, -422, 124, 513, 335, -506, -411, -424, 150, 421,
	-345, 8, 9, 5, 6, 7, -252, -412, -418, 504,
	164, 325, -290, 574, 10, 570, -530, -204, -423, 38,
	200, 65, -489, -289, -253, -461, 234, -288, -272, -527,
	-528, 4, -500, -501, -490, -464, -472, -468, -469, -475,
	-243, -503, 77, 110, 111, 109, 114, 113, 275, 274,
	115, 112, 442, 521, 66, 37, 208, 209, 239, 326,
	210, 75, -529, 138, -502, 231, 232, 456, 51, 387,
	174, 123, 122, 328, 56, 54, 529, -473, 120, 491,
	492, 493, 494, 186, 187, 58, 161, 162, 348, 371,
	472, 501, 503, 198, 261, 44, 106, 183, 229, 212,
	238, 240, 244, 262, 265, 305, 318, 322, 345, 347,
	416, 449, -597, 530, 467, 69, 70, -535, 389, -536,
	-266, -535, 573, 573, 575, 573, -316, -318, -319, 2,
	29, 135, 570, 2, -439, 2, -440, -444, -204, 255,
	-443, 570, -441, 568, -273, 336, -531, 422, -527, -528,
	-252, -272, -289, 4, -500, -502, 572, -320, 570, 118,
	479, 78, 223, -375, 570, -243, 29, 335, 495, 575,
	-317, 378, -420, 570, 335, 182, 338, 60, 286, 2,
	2, 2, 2, 2, 208, -243, 479, 117, 2, 253,
	2, 2, 2, 2, 2, 2, 2, -338, 208, 2,
	-273, 532, -338, 208, 2, -338, 208, 2, -381, 2,
	87, -257, 208, 2, -243, -281, 208, 2, -276, -278,
	-285, 208, 2, -283, -243, -498, 208, 2, -497, -492,
	10, -491, 5, 4, -500, -504, -501, -503, 77, -408,
	2, -123, 2, 60, -243, 532, 2, 2, 445, 2,
	570, -134, 71, 499, 44, 440, -395, 2, -396, -239,
	-240, -241, -451, -242, 241, 377, 386, 549, 128, 320,
	545, -485, -576, 182, 553, 495, -485, -346, 572, 2,
	2, 2, 2, 2, 2, -444, 208, -273, 2, -270,
	-488, 4, -500, -504, -501, -505, 29, 32, 33, 34,
	36, 38, 39, 40, 41, 57, 65, 66, 72, 76,
	78, 87, 93, 102, 109, 110, 112, 111, 113, 114,
	115, 124, 128, 131, 135, 136, 140, 143, 147, 164,
	166, 179, 181, 182, 196, 199, 202, 215, 228, 233,
	235, 255, 259, 266, 274, 275, 320, 325, 331, 335,
	336, 340, 341, 360, 376, 392, 412, 435, 442, 459,
	474, 479, 489, 495, 497, 504, 512, 513, 521, 523,
	531, 536, 537, 538, 539, -506, 2, -444, 208, 2,
	-275, 208, -444, -278, 2, -257, 2, -269, -488, 2,
	-294, 208, -273, -274, -278, -276, 2, -283, 2, -497,
	208, 2, 532, 235, 495, 575, -336, -286, -287, -484,
	8, -329, -243, 572, -408, 2, -123, -107, 2, 179,
	-408, 208, 2, -123, 208, 2, -408, 208, 2, -123,
	208, 2, -571, 2, -497, 208, -243, 2, 286, 2,
	2, 502, 2, 98, 479, 117, 2, 406, -583, 424,
	506, 2, 2, 2, 2, 2, 2, 2, 479, -262,
	2, -243, 179, -283, 208, -284, 2, 436, -592, 389,
	-497, 208, 2, 532, -276, 2, -276, 223, 237, -257,
	208, 2, 484, 482, 484, 482, 182, 2, 235, 2,
	235, 2, -445, 2, -446, -440, -447, 568, 336, -455,
	2, -454, -491, 528, -96, 570, -96, 570, 440, 570,
	-497, -273, -273, -408, 2, -123, -107, 2, -408, 2,
	-123, 2, -120, -119, -497, 570, 182, -408, 2, -123,
	-107, 2, -408, 2, -123, 2, -197, 179, 2, 118,
	479, -172, 2, 179, 523, 2, 8, 2, 215, -497,
	431, 385, 171, 2, 445, 2, 446, 74, -382, 545,
	74, 182, 2, 182, 2, -365, 2, 539, 182, 2,
	2, -557, 2, 335, 182, 2, 182, 2, 182, 2,
	182, 2, 182, 2, 382, 441, 500, 243, 2, -123,
	536, -107, -408, 536, 2, -575, 179, 429, -408, 2,
	498, 252, 155, 182, -365, 2, 182, 2, 182, 2,
	5, 2, 383, 464, 2, 241, 377, 464, 2, -273,
	-586, 2, 479, 532, 436, 2, 2, 88, 89, 182,
	2, 182, 2, 182, 2, 182, 545, 2, -357, -444,
	-394, -395, -394, 495, -323, -325, -172, 445, 2, -209,
	-355, -211, 179, -385, -386, -212, 266, 166, 331, -213,
	-364, 29, 135, -364, -364, 60, 571, 571, 11, 12,
	76, 42, 561, 562, 563, 564, 177, 565, 566, 559,
	560, 558, 551, 552, 556, 247, 248, 95, 555, 553,
	86, 280, 423, 167, 168, 169, 170, 403, 221, 35,
	222, 14, 15, 16, 34, 340, 265, 546, 212, 449,
	554, 17, 18, 19, 238, 240, 322, 50, 215, -251,
	-296, -408, -408, -408, -408, -408, -408, -408, 347, 570,
	-351, -403, 568, -204, 570, 570, 570, -484, -204, -408,
	-422, 571, -343, 570, -204, -422, -417, 570, 421, 568,
	570, -425, -408, 5, 5, 5, 570, 572, -538, 540,
	179, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 373, -466, 570, -465,
	570, -465, -465, 533, -463, 570, 548, 541, 570, -463,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 533, 575, -535, -320, 570, -347, -449,
	-408, 563, -347, -347, 335, -340, -408, 106, -368, 244,
	305, 183, 262, 416, 229, -405, 574, -405, -433, 548,
	-204, -441, -272, -204, -443, 570, -439, -433, -97, -484,
	-81, -94, -102, -123, -136, -176, -177, 563, -273, 570,
	182, 570, 572, -488, 182, -329, -257, -273, -288, -289,
	-294, 134, -340, -553, 507, 430, -329, -246, 39, -419,
	-458, -459, -509, 574, -508, -461, -471, -467, -470, 363,
	367, -490, 54, 529, -473, 234, 4, -500, -502, 231,
	232, 456, 51, 387, 174, 123, 122, 328, 56, 491,
	492, 493, 494, 186, 187, 58, 530, 467, 69, 70,
	-553, 507, 430, -329, 179, -495, 2, -494, -493, 115,
	442, -491, 5, 2, 150, 2, 2, 2, -243, -223,
	575, 64, 410, 150, -338, 208, -223, 150, -223, 150,
	-295, 208, -294, -223, 150, -223, 575, 150, -223, 575,
	150, 572, 575, 150, -495, 2, -381, -487, -340, 39,
	-395, 2, 124, -493, -595, 575, 264, -298, 279, 319,
	204, 336, 543, 329, 128, -496, 5, 4, -418, -430,
	124, 272, 234, -478, -480, 8, -479, 9, -481, 561,
	562, -486, -485, 108, 572, -488, -220, 404, 443, -219,
	24, 30, 139, 225, 308, 526, 156, -308, 226, 350,
	354, 150, 460, 516, -564, -565, 427, 486, 487, 90,
	329, 443, 404, 150, -361, -363, 39, 116, 308, 349,
	61, 218, 284, 285, 462, 535, 150, 443, 404, 350,
	24, 139, -235, -232, -565, 99, 404, 473, 376, -565,
	-222, 460, 516, -564, -565, 427, 404, -221, -308, 150,
	574, 24, 404, 443, 350, -579, -580, 139, 30, 404,
	350, -561, -532, 539, 150, -444, 208, -572, -119, 256,
	5, 10, -119, -336, 575, 575, -488, 563, 429, 428,
	150, 150, 150, 150, 179, 320, 2, 2, 2, 2,
	2, 184, -567, -584, 2, 2, -273, 208, -322, 335,
	-556, -337, 479, -273, 320, 44, -275, 208, 2, -278,
	532, -561, 320, -277, 208, -273, 39, 570, 2, -381,
	2, 223, -532, 320, -445, -291, -273, -440, -291, 443,
	-266, 39, -405, -273, 571, 575, -455, -455, -497, -185,
	539, 182, 102, 570, 570, -197, -452, 575, -451, -498,
	-120, -497, -497, -556, -257, 2, -273, 2, 479, 245,
	-497, -185, 215, -497, -497, -497, -487, 29, 446, 2,
	382, 441, 500, 89, 446, 2, -273, 479, 118, 223,
	80, -243, -559, 179, -554, 417, 430, 507, -553, -273,
	118, -273, 118, -273, 118, -273, -273, 2, 2, 2,
	2, 2, 85, 85, 2, 46, -575, 179, 2, 498,
	2, 498, 2, -243, -243, -243, 463, 264, -273, 179,
	479, 223, 479, 223, 118, 74, 118, 479, -223, 575,
	-247, -209, -355, -487, -356, -355, -210, -209, -212, 179,
	386, 517, 308, 447, 249, -386, -385, 29, -408, -390,
	173, 307, -408, -388, -410, 561, 562, -479, -481, -339,
	329, -203, -203, -203, -326, -435, -408, 376, 223, -460,
	-458, -458, -271, -488, 491, -408, -408, -408, -408, -408,
	-408, -408, -408, -408, -408, -408, -408, -408, -408, -408,
	-408, -408, -408, -408, -408, -408, -408, -408, -408, -408,
	-408, -408, -408, -408, -408, -408, -408, -408, -408, -408,
	265, 212, 449, 50, 215, -408, 495, -408, -408, -408,
	-408, 302, 320, 325, 504, 164, 514, 135, 329, -598,
	474, 41, -415, -204, -344, 570, -429, 36, 459, 29,
	-422, 570, 2, -403, -408, -404, -341, -340, -340, 571,
	531, 29, 135, 563, 2, 571, 575, 39, 571, -408,
	-341, -421, -417, -340, -428, -427, 536, -376, -377, 544,
	289, 121, 206, 287, -378, 434, -482, 8, -488, 563,
	-539, 172, 199, 570, 571, 2, 571, 2, 571, -408,
	2, 571, -408, 2, 571, -408, 2, 571, -408, 2,
	571, 2, -408, -408, -408, -408, -408, -408, -408, -340,
	8, -482, -482, 491, 491, -482, -482, -482, -474, 363,
	364, 365, 366, 267, 268, 269, 270, 367, 368, 369,
	370, 294, 295, 296, 297, 290, 291, 292, 293, 298,
	299, 300, 301, 191, 192, 193, 194, 187, 188, 189,
	190, -474, -370, 2, -476, -340, 4, 544, 289, 121,
	206, 287, 434, 5, -370, 2, -371, 2, -408, -340,
	-372, -409, -410, 561, 562, 554, -422, -373, 2, -408,
	-341, -408, 57, 259, 497, -374, -408, 182, -340, -340,
	2, -340, 2, -536, 39, -340, -332, 575, 182, 39,
	4, -332, -332, 570, 571, 575, -369, 203, 283, 278,
	237, -369, -439, -368, 244, -366, 345, -366, -366, -433,
	-258, 568, 576, -488, -433, -432, -431, 39, -266, 342,
	-433, -433, 572, 571, -432, 569, -551, 570, 573, 573,
	573, 573, 573, -273, 570, -340, -488, 572, 465, 571,
	238, 238, 238, 238, 422, 571, 495, -555, -281, -285,
	539, -96, 337, 571, 575, -331, 38, 568, 572, -482,
	2, 2, -477, 533, 570, 570, -377, 570, 182, -555,
	-285, -330, 575, 495, -243, 2, -273, -338, -223, 150,
	-338, -338, -223, 575, 150, -257, -276, -281, -283, -285,
	-243, -497, -498, -223, -277, -576, 571, 499, -396, -297,
	386, 458, 405, 438, 476, 8, 9, 8, 9, 575,
	-488, 575, -577, 93, 495, 78, 430, -237, 273, 396,
	308, 479, 421, -399, 208, 78, -510, -260, 93, -511,
	-243, 72, 513, 376, 181, 148, -577, 93, 376, -577,
	93, 2, 225, 93, 443, 463, 495, 60, -444, 42,
	42, 29, -123, 260, 182, 545, 479, 223, 430, 495,
	-444, -363, -458, 116, 284, 285, 60, -483, -478, 561,
	562, -483, 60, -483, -483, -483, 539, -275, -444, 430,
	495, 495, 395, 395, 495, 495, -596, 553, 395, 575,
	42, 42, 29, -123, 260, 182, 495, -294, -258, 527,
	43, 527, 495, 43, 430, 495, 575, 43, 43, 495,
	495, -562, -248, 105, 314, 277, 315, 97, 311, 96,
	310, 103, 312, 104, 313, 534, 323, 63, 309, 288,
	316, -249, -250, 356, 525, -497, 443, 404, 150, 215,
	-452, 215, -452, -286, -243, 572, -123, -408, -408, -123,
	-408, -123, 46, 150, 2, -592, 253, 570, -301, 320,
	182, -329, -453, 235, 575, -337, 150, -494, -362, -361,
	320, -277, 208, 2, 150, -320, 320, 144, 570, 384,
	2, -259, 208, -244, -243, -381, -226, 483, 150, -359,
	523, -391, -123, 570, 124, 39, -391, -348, -349, -450,
	-350, -260, 570, -266, -405, -96, -454, 571, 571, 571,
	-184, 339, -183, -243, 5, -197, 523, -300, -400, -399,
	-514, -515, -510, 265, 223, 513, 237, 165, -321, -261,
	-260, 117, -191, 539, -119, 571, -452, 215, -185, -185,
	-452, -452, -273, 179, -497, -185, -185, -185, 2, 2,
	2, -365, -273, -257, -294, -273, 572, -329, -329, -285,
	-281, -365, -257, -365, -257, -365, -257, -123, -408, 2,
	440, 179, 179, 572, -365, 384, 118, 479, 354, 223,
	-273, -294, -273, -294, -257, -257, -273, -444, -356, -210,
	336, 249, 447, -388, -389, -410, 421, 422, -389, 421,
	422, 8, 9, 8, 9, -214, 451, 324, -338, 575,
	-217, 40, 131, 249, -273, 545, 146, -408, -408, 495,
	-598, 474, -415, 146, -408, 302, 325, 504, 164, 514,
	135, 329, 182, 570, -409, -409, 571, -342, -408, -408,
	569, 578, 571, -325, 575, -323, -408, -340, -340, 571,
	572, -340, -329, 569, 569, 575, 571, -426, -427, 140,
	-408, 495, 495, 495, 495, 570, 571, 572, -544, 346,
	570, 570, -408, 571, 571, 571, 571, 39, 575, 575,
	575, 571, 575, 575, 575, 571, 571, 571, 575, 571,
	545, 545, 571, 571, 571, 571, 575, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 571, 575, 571, 182, 571, 571, -379, 360, 571,
	11, 12, 561, 562, 563, 564, 177, 565, 566, 559,
	560, 558, 551, 552, 553, 86, 280, 423, 14, 15,
	16, 238, 215, -409, -409, -409, 571, -413, -414, 182,
	179, 39, -374, -374, -374, 571, 182, -340, 571, 571,
	570, -537, 282, 320, 571, -402, -401, 537, -449, -333,
	2, -439, -268, -488, -402, -402, -340, -408, 244, 244,
	-367, 523, 335, -369, -439, -432, -484, -407, -406, 180,
	40, 131, 317, 211, -432, -266, -320, -432, -432, -488,
	-433, -433, -431, 571, -552, -484, 571, -334, -442, -531,
	-325, 572, -488, -194, -532, -173, 5, 325, -173, -173,
	-173, -329, 495, 495, 25, 361, -458, 568, 569, 8,
	-488, 570, -482, -482, -482, -329, 182, 182, 182, -494,
	-494, 2, -223, -338, -223, -223, -294, -295, -223, -223,
	-223, -360, 539, -485, -395, 511, 83, 386, 491, -485,
	-219, 404, -260, -260, -273, -282, -243, 195, 396, 26,
	396, 264, 264, 320, -399, 208, -225, 320, -458, -267,
	-243, 570, -383, 541, 249, 249, 523, -260, -267, 249,
	208, -260, 208, -267, 2, -267, -563, 386, 330, -408,
	-494, 271, 384, 321, -220, 404, 443, -123, -123, -123,
	570, -576, 523, 134, -273, -294, -273, -282, -277, 443,
	404, 318, -288, -483, -483, -361, 443, 404, -282, -275,
	-494, -231, -243, -231, 430, -257, 395, 545, -596, -221,
	-123, -123, -123, 570, -258, -222, 404, 5, 208, -260,
	5, -243, -260, -282, -494, -580, 24, -260, 208, -260,
	-282, -494, -248, -497, 325, 519, -561, 430, 495, -444,
	-119, -188, 539, -119, -182, 219, 563, -558, -243, 532,
	-243, -299, -302, -300, -260, -200, -201, 541, 539, 150,
	-292, -273, 568, -185, -497, -273, -283, -284, 150, -320,
	320, -497, 39, 150, 570, 2, 2, 335, 320, -259,
	208, -227, 141, -596, -257, -402, -333, -358, -393, 412,
	335, -321, 528, -266, -358, -335, 575, 182, 553, 572,
	-321, -448, 563, -96, -96, -185, 575, 570, 553, 553,
	570, -497, -497, 571, 575, -225, -273, -259, 223, 223,
	-265, -244, 571, 575, 572, 570, -193, 339, -192, 142,
	251, 236, 452, 453, 454, 455, 133, -191, -120, 182,
	-57, 539, 479, -185, 574, -243, -365, -365, -365, 440,
	440, -243, -269, -257, -273, -270, -294, 179, 179, 517,
	-389, 336, 276, -435, -218, 547, -273, 574, -408, -408,
	146, 146, -408, -409, -409, -408, 146, 182, 570, -408,
	-419, 34, 34, 571, 575, -404, -408, 571, 531, -325,
	-325, 571, 563, -488, 574, 571, -417, 143, -408, 489,
	289, 206, 287, -378, 287, -378, -378, -482, 5, -488,
	563, -545, -263, 570, -243, 537, -324, 341, 571, -460,
	-458, -408, -408, -408, -408, -408, -482, -463, -463, -478,
	-478, -408, -413, -408, -460, -458, -409, -409, -409, -409,
	-409, -409, -409, -409, -409, -409, -409, -409, -409, -409,
	-409, -409, -409, -409, -409, 135, 320, 329, -409, -414,
	-413, -408, -408, -458, 571, 571, 571, -340, -96, 570,
	282, -352, 199, -408, -452, 575, -352, -352, 571, -439,
	-439, 570, -408, 244, 569, 575, 577, 553, -320, 572,
	-431, -432, 569, 571, 575, 571, 575, -392, 39, 571,
	-488, -402, -196, -195, 132, 53, -329, -329, 338, 5,
	8, 568, 569, 572, -482, 571, 571, 571, -329, -329,
	-329, -223, -223, 117, 308, -408, 495, 495, 60, 495,
	42, 318, -231, 421, 26, 396, 396, 150, 320, 525,
	-516, -511, 148, -408, 570, 223, 570, 570, 2, -216,
	139, 443, -578, 2, 523, 150, -223, 150, -223, 543,
	570, 570, 495, 430, -237, 539, -340, -408, -186, 124,
	-487, -565, 574, -565, 574, 430, 495, 430, 495, 539,
	163, 163, -231, 539, -340, 495, -462, 48, 27, 320,
	-276, 495, 495, -223, 150, 507, 443, -497, 325, -282,
	-277, 443, 404, -452, -190, 339, -189, 142, 414, 133,
	251, -452, -188, 182, 235, -277, 2, 571, 571, 575,
	-517, 39, 333, 333, 570, -273, -77, 539, -451, -484,
	44, -275, 39, 150, -561, -123, -277, -456, -457, 5,
	-273, 150, 335, 320, -228, 258, -596, -492, -532, -325,
	-358, -347, 321, 91, 571, -402, -349, -333, -408, 2,
	571, -183, -184, -497, -497, -497, -185, -197, -197, -400,
	-303, 570, -259, -244, 570, -197, -261, 2, -498, 575,
	570, 553, 553, 553, -452, -123, 339, -273, 563, -365,
	-310, -309, 354, 329, -310, 421, 421, 336, 173, 254,
	-217, -258, -408, -408, 146, 34, 34, -408, -408, -419,
	571, -408, -408, -340, 569, 5, -408, 571, 571, 8,
	-408, 571, 572, -546, -243, -408, 571, 60, 571, 571,
	575, 575, 571, 571, 571, 571, 571, 571, 571, -414,
	182, 135, 329, 570, 571, 571, -96, -416, 202, 60,
	-439, -416, -416, -367, -329, -439, -406, -258, 568, -488,
	-484, -442, 570, 572, -195, 553, 569, 2, 568, -488,
	571, 117, -260, -260, 479, 421, 318, -231, 421, 264,
	26, 26, -399, 150, -518, 93, -520, 76, 165, 102,
	320, 325, 513, 376, 72, 124, 392, -588, 39, 550,
	571, -327, -436, -531, 570, -243, -327, -329, 320, 470,
	124, 320, 124, 117, 507, 79, -260, -267, -329, -329,
	-273, -282, 157, 571, 575, 553, 2, 563, 563, -282,
	-277, -282, -275, 352, 157, 571, -258, 5, 5, 150,
	-255, 76, 5, -260, -260, -276, 117, 430, 495, -188,
	575, 570, 553, 553, -188, -498, -119, -320, -311, 225,
	-260, -515, -512, -513, 376, -519, -521, 165, 376, -123,
	2, -199, -198, -243, 5, 570, -301, 339, 569, -494,
	-362, -123, -277, -320, 571, 575, -384, 523, -258, -273,
	150, -229, 257, -596, -492, -226, -387, -385, 136, 570,
	335, -123, -325, 553, 571, 571, 117, 117, 217, 149,
	-327, 570, 570, -329, 117, 571, -192, -193, -497, -119,
	-497, -191, -58, -59, 223, 93, 359, -270, 479, 223,
	570, 570, -217, -408, -408, -408, 571, -325, -488, 563,
	-540, 354, 571, -435, -408, -408, -409, 182, 570, -419,
	571, -541, 538, -408, -353, -354, -408, 420, 107, 200,
	-541, -541, 571, -484, 2, -497, 568, 2, 215, 264,
	495, -399, -267, -271, -264, -243, 165, 208, 325, -383,
	249, 570, -409, -273, 570, 2, 31, -589, 128, 228,
	571, 575, -437, -254, -243, -408, -437, 571, 571, 325,
	325, -408, -458, 570, -223, -223, 571, 571, -408, 495,
	-487, 100, -485, 2, -565, -257, -408, 495, 5, -223,
	-271, -223, -223, -255, 507, -282, -277, -189, -190, -497,
	-119, -188, 39, -306, 227, 2, -517, 249, -264, 249,
	-587, 539, 571, 575, 553, 553, -299, -200, -78, -79,
	496, -451, -320, 39, 5, 570, -243, 335, 570, -258,
	-238, 92, -596, -492, -227, -358, 321, -329, 93, -387,
	-415, -185, 570, 570, -304, 81, 94, 125, 207, 185,
	224, 463, 468, 29, -304, 571, -327, -327, 571, 570,
	-185, 571, 575, 29, 570, 29, 570, -273, -294, -340,
	-340, 571, -325, 60, 575, 571, 571, -409, -419, 571,
	-542, -543, -263, 575, 570, 570, 444, 569, 2, -231,
	-231, -520, -264, 320, 523, -408, -245, 570, -408, 39,
	228, 129, 213, -398, -590, 101, 471, 216, -436, -217,
	571, -397, 523, 392, -255, -327, 570, 570, 570, 553,
	182, 570, -462, -223, -276, 571, -570, 390, -123, -307,
	-308, 215, 570, -305, 335, 117, 308, -198, -485, -485,
	571, 39, -79, 9, 39, -123, -327, -273, -327, 335,
	-233, -232, 266, -492, -228, 571, -267, -358, -498, -498,
	-397, 571, 571, -498, -59, -329, -329, 571, 571, -547,
	384, 422, 201, -340, -326, 571, 575, 39, -354, 2,
	2, 2, 150, 203, 571, -522, 281, -243, 571, 129,
	213, -306, 570, -218, -437, -306, 203, -273, -566, 523,
	571, -313, -312, -309, -315, -314, -309, -340, -485, 100,
	352, -340, -255, -573, 183, -572, 5, 10, -200, 352,
	-328, -438, -260, 82, 117, -311, -123, -123, 571, -384,
	571, -273, -230, -499, 395, 397, -596, -229, -402, 571,
	571, -398, -397, -201, 539, 571, 571, 571, 571, -548,
	-549, 50, 510, 108, -408, -548, -548, -543, -545, 165,
	539, -523, -526, -525, 335, 450, 183, 353, 571, 470,
	535, -307, -329, 539, -320, -408, -397, 571, 575, 528,
	571, 575, 528, 571, 182, 571, -223, -187, 539, 46,
	-305, -273, 571, 575, 375, 130, 139, -306, -587, -397,
	570, -398, 570, -236, -235, -596, -478, -238, 136, -185,
	-185, -306, -398, -402, -185, -550, 148, -549, 372, 178,
	421, 372, 178, -550, -550, -264, 55, -525, 335, -526,
	335, 517, 130, -589, 571, 55, -522, -306, -312, 215,
	-314, 182, 352, 428, -572, 31, 570, -438, 422, 422,
	2, -307, -305, -398, -327, -306, -327, -234, -329, -233,
	321, 517, -307, -306, 108, 199, 490, 308, 34, 553,
	-524, 308, 410, 64, 443, -524, -402, 553, -523, 570,
	570, 339, -329, 2, -200, -306, 571, -307, 571, -230,
	443, -201, -307, 421, 343, -549, -408, 23, 325, 124,
	-408, -589, -340, -340, -184, 570, 571, -305, -307, -397,
	-201, -398, -236, -348, -402, -201, 571, 571, -184, -224,
	64, 410, -201, -398, -402, -306, -402, -402, -307, 495,
	571, -402, -306, -307, 570, -307, -201, -340, -201, -402,
	571, -402, -307,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 502, 503, 505, 506, 507, 509,
	510, 512, 514, 516, 517, 518, 520, 521, 523, 524,
	525, 526, 527, 529, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	593, 595, 0, 1255, 1257, 1259, 1261, 0, 735, 0,
	36, 37, 0, -2, 300, 302, 304, 0, 330, 332,
	333, 335, 337, 339, -2, 0, 437, 438, 440, 442,
	-2, 0, 913, 915, 0, 582, 584, 0, 918, 920,
	0, 0, 604, 605, 0, 1361, -2, 598, 600, 602,
	667, 669, 671, 673, 675, 677, 679, 681, 683, 684,
	686, 688, 690, 692, 694, 695, 697, 699, 701, 702,
	704, 706, 708, 710, 712, 714, 716, 718, 720, 722,
	724, 726, 728, 730, -2, 732, -2, -2, 0, -2,
	-2, -2, 1273, 40, 42, 44, 46, 48, 50, 52,
	54, 56, 388, 389, 391, 393, 395, 397, 400, 402,
	404, 1419, 444, 446, 448, 450, 452, 454, 456, 0,
	-2, 1433, 0, 0, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 96, 97, 98, 99, 100, 101,
	102, 103, 71, 72, 74, 75, 76, 80, 81, 82,
	83, 84, 85, 86, 87, 94, 69, 0, 0, 1392,
	1394, 1396, 1398, -2, 0, 0, 5, 9, 11, 13,
	15, 17, 19, 21, 23, 25, 27, 29, 504, 508,
	511, 513, 515, 519, 522, 528, 530, 532, 489, 490,
	493, 2097, 2114, 2115, 2116, 2119, 2120, 2121, 2122, 2123,
	2124, 2553, 2634, 2635, 2146, 2147, 2148, 2149, 2150, 2151,
	2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161,
	2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171,
	2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181,
	2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191,
	2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201,
	2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211,
	2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221,
	2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231,
	2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241,
	2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251,
	2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261,
	2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271,
	2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281,
	2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291,
	2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301,
	2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311,
	2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321,
	2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331,
	2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341,
	2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381,
	2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391,
	2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411,
	2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
	2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 491, 492, 1079, 0, 556, 554, 2082, 557, 2361,
	559, 561, 431, 432, 433, 434, 435, 436, 0, 575,
	567, 1431, 576, 578, 579, 580, 581, 551, 549, 0,
	575, 2150, 573, 1253, 1254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 443, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 367, 1128, 1129, 1130,
	1238, 1239, 2404, 1280, 0, 212, 594, -2, -2, -2,
	2518, -2, 626, -2, 633, 2522, 2406, 638, 0, 640,
	-2, 643, 1256, 1258, 1260, 733, 734, 2100, 0, 0,
	0, 0, 0, 38, 39, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 222, -2,
	-2, -2, -2, 0, 0, 2447, 2200, 2050, 2116, 2053,
	2048, 301, 303, 305, 306, 0, 0, 0, 0, 0,
	0, 331, 334, 336, 338, -2, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 972, 964,
	965, 1185, 0, 0, 0, -2, 439, 441, 494, 495,
	0, 1420, 1420, -2, 0, 0, 0, 0, 275, 266,
	914, 916, 917, 0, 0, 0, 0, 583, 585, 0,
	0, 248, 919, 921, 922, 0, 0, 0, 0, 0,
	277, 0, 0, 599, 601, 603, 668, 670, 672, 674,
	676, 678, 680, 682, 685, 687, 689, 691, 693, 696,
	698, 700, 703, 705, 707, 709, 711, 713, 715, 717,
	719, 721, 723, 725, 727, 729, 731, 741, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, -2, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 827, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 895,
	0, 744, 746, 747, 748, 0, 807, 825, 826, 835,
	0, 1119, 1421, 1282, 1263, 1277, 1282, 1265, 1266, 1267,
	1268, 1269, 1274, 1276, 1270, 1271, 1272, 41, 43, 45,
	47, 49, 51, 53, 55, 57, 390, 392, 394, 396,
	398, 401, 403, 405, -2, 1390, 1391, 445, 447, 449,
	451, 453, 455, 457, 586, 0, 588, 0, 745, -2,
	0, 1425, 1425, 1425, 0, 0, 1391, 1389, 0, 591,
	592, 647, 648, 1693, 0, 0, 0, 0, 0, 0,
	0, 1947, 1779, 0, 649, -2, 1810, 1812, 2493, 2518,
	1946, 1814, 1815, 1816, 1817, 1818, 0, 1820, 1821, 1822,
	1823, 1824, 1825, 0, 1827, 0, 1832, 1833, 1834, 0,
	2500, 2027, 2110, -2, 0, 0, 2506, 2106, 0, 1913,
	1850, -2, -2, 2133, 2112, 1625, 1626, 1627, 1628, 1629,
	-2, -2, 2536, 1854, 1855, 1856, 1857, 1858, 1859, 1860,
	1861, 1862, 1863, 1864, 0, 2481, 2501, 2502, 2507, 2509,
	2503, 2490, 1875, 2212, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1652, 1661, -2,
	-2, -2, -2, -2, -2, -2, 2494, 2495, 2512, 2515,
	2521, 2526, 2527, 2499, 2508, 2535, 2537, 2538, 2539, 2540,
	2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550,
	2551, 2552, 1653, -2, -2, -2, -2, 1408, 2374, 1411,
	1079, 1409, 1393, 1395, 0, 1397, 0, 0, 0, 1402,
	1428, 1426, 0, 1477, 1406, 1407, 1495, 1495, 1519, 0,
	1500, 0, 1519, 1420, 1546, 0, 1506, 2396, 1851, 1852,
	0, 2116, 2111, -2, -2, 2533, 0, 0, 0, 0,
	0, 0, 0, 552, 0, 558, 560, 0, 0, 0,
	574, 1430, 0, 0, 0, 0, 0, 0, 0, 370,
	371, 372, 373, 374, 2501, 0, 0, 0, 379, 0,
	381, 382, 383, 384, 385, 386, 387, 182, 2501, 462,
	487, 0, 182, 2501, 465, 182, 2501, 468, 0, 471,
	1183, 182, 2501, 474, 2078, 182, 2501, 477, 479, 2086,
	182, 2501, 483, 2093, 2091, 484, 2501, 486, 280, 278,
	279, 2129, 2130, 2137, 2138, 2139, 2140, 2534, 2536, 1249,
	1250, 1251, 1252, 0, 1279, 1184, 596, 597, 0, 621,
	0, 625, 2489, -2, 0, 2415, -2, 629, 1283, 1287,
	1288, 1289, 1290, 1291, 0, 0, 0, 0, 1296, 0,
	0, 635, 0, 0, 622, 623, 641, 644, 0, 736,
	737, 738, 739, 740, 68, 0, 2501, 1546, 70, 0,
	2072, 2141, 2142, 2143, 2144, 2145, 2554, 2555, 2556, 2557,
	2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567,
	2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577,
	2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587,
	2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597,
	2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607,
	2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617,
	2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627,
	2628, 2629, 2630, 2631, 2632, 2633, 73, 0, 2501, 77,
	0, 2501, 0, -2, 88, 0, 95, 0, 2075, 104,
	0, 2501, 0, 2047, -2, 0, 193, 0, 941, -2,
	2501, 1127, 0, 0, 0, 0, 904, 2044, 2049, 905,
	2068, 906, 2054, 0, 307, 308, 309, 310, 311, 0,
	312, 2501, 314, 315, 0, 317, 318, 2501, 320, 321,
	0, 323, 0, 233, 234, 2501, 342, 343, 0, 345,
	346, 0, 348, 0, 0, 0, 352, -2, 368, 0,
	365, 355, 356, 358, 359, 360, 361, 362, 0, 409,
	407, 2083, 0, -2, 2501, 0, 938, 0, 0, 1164,
	-2, 2501, 1124, 0, 1170, 1166, 0, -2, 0, 1418,
	2501, 1300, 968, 969, 970, 971, 1558, 428, 0, 1326,
	0, 1328, 0, 1347, 1552, 1495, 0, 0, 1557, 0,
	-2, 545, 2099, -2, 497, 0, 498, 0, -2, 0,
	292, 0, 0, 923, 924, 925, 926, 927, 930, 931,
	932, 933, 1532, 251, 249, 0, 0, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 0, 0, 606, 0,
	0, 742, 743, 0, 0, 753, 754, 755, 0, 292,
	2407, 2370, 2233, 762, 0, 765, 768, -2, 0, 0,
	0, 0, 772, 0, 777, 778, 779, 0, 0, 783,
	785, 912, 787, 0, 0, 789, 0, 793, 0, 796,
	0, 798, 0, 800, -2, -2, -2, -2, 811, -2,
	0, 814, 816, 0, 818, -2, 0, 827, 823, 824,
	0, 0, 0, 0, 843, 844, 0, 853, 0, 856,
	857, 858, 0, 860, 861, 0, 863, 864, 865, 866,
	0, 868, 869, -2, -2, 873, 875, 0, 882, 0,
	886, 0, 890, 0, 894, 0, 749, 750, 182, 1550,
	1262, -2, 1264, 0, -2, 0, 587, 0, 590, 1450,
	1376, 1373, 0, 1447, 1448, 1377, 0, 0, 0, 1384,
	0, 1423, 1424, 0, 0, 0, 1363, 1364, 0, 0,
	0, 0, 1952, 1953, 1954, 1955, 1956, 1957, 1960, 1961,
	1958, 1959, 1962, 1963, 0, 0, 0, 0, 0, 1964,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1965, 1966, 1967, 0, 0, 1969, 0, 1971, 0,
	0, 0, 0, 0, 0, 1758, 1760, 2035, 0, 0,
	1968, 1698, 1699, 1700, 1701, 1702, 1737, 1738, 0, 0,
	1811, 2032, 2031, 1813, 0, 1983, 0, 1826, -2, 0,
	1947, 1978, 0, 0, 1835, 1836, 1837, 0, 0, 1983,
	0, 0, 2026, 1847, 1848, 1690, 0, 0, 1915, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1639, 1638, 0, 1640,
	0, 1641, 1642, 1649, 1662, 0, 0, 0, 0, 1666,
	0, 0, 0, 0, 0, 0, 0, 2007, -2, 0,
	0, 0, 0, 1654, 0, 1410, 0, 0, 1481, 2036,
	2040, 2041, 1481, 1481, 0, 0, 1984, 1543, 1543, 0,
	0, 1538, 1538, 1538, 1536, 1519, 0, 1519, 1529, 0,
	1519, 1519, 0, -2, 1500, 0, 0, 1529, 0, 1513,
	533, 535, 537, 539, 540, 541, 543, 1547, 1548, 0,
	0, 0, 0, 2117, 0, 0, 0, 0, 0, 2102,
	0, 0, 0, 0, 2457, 2406, 563, 577, 1420, 0,
	1986, 1573, 1577, 0, 1579, 1580, 1581, 1582, 1583, 0,
	0, 1574, -2, 1650, 1652, 1673, 2134, 2135, 2136, 1633,
	1634, 1635, 1636, 1637, 1645, 1632, 1632, 1632, 1643, 1672,
	1664, 1672, 1668, 1618, 1619, 1620, 1655, 1656, 1657, 1658,
	0, 2457, 2406, 569, 0, 0, 1358, 197, 199, 200,
	201, 202, 203, 369, 0, 376, 377, 378, 0, 458,
	0, 180, 181, 0, 182, 2501, 463, 0, 466, 0,
	182, 2501, 2042, 472, 0, 475, 0, 0, 481, 0,
	0, 0, 0, 0, 182, 1360, 0, 0, 0, 0,
	-2, 631, 636, 637, 0, 1285, 0, 1292, 658, 659,
	660, 1294, 1295, 0, 1297, 634, 661, 662, 663, 664,
	665, 666, 0, 2056, 2057, 2058, 2059, 2062, 2063, 0,
	0, 632, 651, 639, 0, 645, 105, 1235, 0, 144,
	0, 1235, 1235, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 129, 140, 117, 118, 0,
	0, 0, 0, 0, 78, 1101, 0, 1104, 0, 0,
	0, 0, 0, 0, 0, 1117, 0, 0, 0, 0,
	0, 0, 92, 93, 128, 0, 0, 1323, 0, 123,
	107, 0, 0, 0, 130, 142, 0, 173, 175, 0,
	0, 0, 0, 0, 0, 192, 204, 0, 0, 0,
	0, 1125, 0, 1417, 0, 0, 2501, 0, 1532, 2278,
	-2, -2, 1532, 903, 0, 0, 2117, 2052, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 347, 349, 350,
	351, 0, 1163, 0, 357, 399, 1050, 2501, 0, 0,
	426, 421, 0, 423, 0, 0, 1100, 2501, 1098, 2087,
	0, 1122, 0, 1079, 2501, 2085, 0, 0, 1171, 2126,
	1180, 1184, 1313, 0, 430, 0, 1329, 1331, 0, 0,
	1553, 0, 1555, 1495, 1420, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 255, 0, 1531, 0,
	1532, 249, 292, 292, 1532, 608, 1532, 610, 0, 0,
	756, 757, 0, 292, 292, 292, 763, 764, 766, 767,
	-2, -2, -2, 883, 769, 770, 850, 0, 0, 0,
	849, 782, 786, 0, 897, 2392, 2406, 2457, 910, 850,
	2200, 850, 2200, 850, 2200, 797, 799, 802, 838, 846,
	810, 815, 0, 0, 820, 828, -2, 0, 830, 0,
	832, 0, 834, 850, 851, 854, 859, 862, 867, 0,
	0, 0, 0, 0, 0, 891, 892, 0, 1118, 0,
	1275, 1450, 1376, 589, 1367, 1449, 1368, 1375, 1378, 0,
	0, 1380, 0, 1382, 0, 1445, 1446, 1453, 1454, 0,
	1464, 1465, 1457, 0, -2, 0, 0, 1460, 1461, 1386,
	0, 1403, 1404, 1405, 1434, 1437, 1199, 0, 2634, 1694,
	1568, 1695, 1696, 2071, 0, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, -2, -2, -2, -2, -2,
	-2, -2, -2, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, -2, -2, -2, 1735, 1736, -2,
	1970, 1972, 0, 2035, 0, -2, 0, -2, -2, -2,
	-2, 1755, 0, 1757, 1762, 1764, 1766, 0, 0, 0,
	0, 2034, 1776, 2018, 2019, 0, 0, 1949, 1950, 1951,
	1761, 0, 1780, 2033, 2030, 0, 0, 1982, 1433, 1839,
	0, 0, 0, 0, 1846, 1831, 1980, 0, 1979, 0,
	0, 0, 1990, 0, 2025, 2021, 0, 2069, 1689, 1676,
	1677, 1678, 1679, 1680, 1681, 1691, 0, 2066, 2103, 2109,
	1923, 0, 0, 0, 1876, 1877, 1878, 1879, 1880, 0,
	1882, 1883, 0, 1885, 1886, 0, 1888, 1889, 0, 1891,
	1892, 1893, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1586,
	0, 0, 0, 1590, 0, 0, 0, 1594, 0, 0,
	0, 1598, 0, 0, 0, 1602, 0, 0, 0, 1606,
	0, 0, 0, 1610, 0, 0, 0, 1614, 0, 0,
	0, 0, 0, 1895, 0, 1993, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 1897, 0, 1899, 1984, 2004,
	0, 0, 1781, 0, 0, 0, 1947, 0, 1902, 1984,
	2012, 0, 0, 0, 0, 0, 1984, 0, 2017, 0,
	1909, 0, 1911, 1412, 0, 0, 1563, 0, 0, 0,
	2039, 1563, 1563, 0, 1476, 0, 0, 1539, 1540, 1541,
	1542, 0, 0, 1543, 0, 1533, 1537, 1534, 1535, 1529,
	1492, 0, 0, 2073, 1529, 1498, 1528, 0, 1079, 1518,
	1529, 1529, 0, -2, 1502, 1519, 0, 0, 534, 536,
	538, 542, 544, 0, 0, 1433, -2, 0, -2, 1078,
	0, 0, 0, 0, 553, 555, 0, 0, 478, 0,
	0, 547, 0, 550, 0, 1564, 1567, 0, 0, 1578,
	1584, 1585, 0, -2, 0, 0, 1674, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 488, 182, 460, 0,
	182, 182, 469, 0, 0, 182, 480, 182, 2094, 182,
	2092, 281, 485, 1359, 215, 0, 624, 0, 1284, 1293,
	0, 655, 0, 657, 0, 2060, 2064, 2061, 2065, 0,
	646, 0, 0, 0, 0, 1234, 0, 1206, 0, 0,
	0, 0, 0, 148, 2501, 0, 184, 0, 0, 1043,
	2079, 0, 1035, 0, 0, 2219, 0, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 114, 119, 0, 0, 0, 0, 0, 0, 0,
	0, 1102, 1103, 1105, 1112, 1114, 0, 1108, 2067, 0,
	0, 1109, 0, 1111, 1113, 1115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1322, 1323, 0,
	0, 0, 116, 120, 0, 0, 0, 0, 2046, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1159, 1157, 1137, 1138, 1139, 1140, 1141, 1142, 1143,
	1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153,
	1154, 1155, 1156, 0, 0, -2, 0, 0, 0, 0,
	225, 0, 283, 2045, 2055, 0, 928, 929, 313, 316,
	319, 322, 221, 0, 353, 0, 0, 974, 949, 0,
	0, 408, 292, 0, 0, 422, 2096, 936, 1096, 1099,
	0, 1079, 2501, 1136, 0, 0, 0, 0, 0, 0,
	1169, 0, 2501, 2074, 2125, 2126, 1315, 1323, 0, 1563,
	0, 1345, 1332, 0, 0, 0, 1345, 1349, 1350, 1352,
	1353, 0, 0, 1554, 1560, 496, 546, 1420, 1420, 292,
	290, 2338, 288, 285, 287, 0, 0, 0, 975, 977,
	978, 979, 184, 0, 2126, 1035, 2267, 2126, 0, 1335,
	1337, 0, 245, 0, 252, 250, 255, 0, 0, 420,
	607, 612, 751, 0, 292, 759, 760, 761, 804, 840,
	848, 771, 773, 774, 775, 0, 0, 911, 907, 908,
	909, 788, 850, 791, 850, 794, 850, 813, 817, 822,
	829, 0, 0, 0, 842, 0, 0, 0, 0, 0,
	0, 0, 887, 888, 889, 893, 896, 1551, 1371, 1372,
	1374, 0, 1383, 0, 0, 1459, -2, -2, 1458, 1462,
	1463, -2, -2, -2, -2, 1379, 0, 1388, 1385, 0,
	1444, 1197, 1198, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 1777, 0, -2, 1756, 1759, 1763, 1765, 1767,
	0, 0, 0, 0, 0, 0, 1973, 0, 1975, 1778,
	2028, 2031, 1945, 0, 0, 1432, 1433, 1433, 0, 1845,
	0, 1981, 0, 1988, 1989, 0, 1838, 0, 2022, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 0, 1881, 1884, 1887, 1890, 0, 0, 0,
	0, 1870, 0, 0, 0, 1874, 1644, 1630, 0, 1672,
	1670, 1671, 1665, 1672, 1669, 1622, 0, 1587, 1588, 1589,
	1591, 1592, 1593, 1595, 1596, 1597, 1599, 1600, 1601, 1603,
	1604, 1605, 1607, 1608, 1609, 1611, 1612, 1613, 1615, 1616,
	1617, 1621, 0, 1894, 0, 1896, 1898, 0, 0, 1900,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 1785, 1786, 1901, 2010, 2011, 0,
	0, 0, 0, 0, 0, 1907, 0, 2016, 1908, 1910,
	1420, 0, 1413, 0, 1478, 1467, 1562, 0, 2037, 1532,
	1480, 1482, 2038, 2076, 1467, 1467, 0, 1985, 0, 0,
	1523, 0, 0, 0, 1525, 1496, 0, 0, 1490, 0,
	1486, 1487, 1488, 1489, 1497, 1079, 1527, 1499, 1503, 2103,
	0, 1529, 0, 1514, 0, 1516, 1549, 0, 1508, 1511,
	0, 0, 2118, 1563, 0, 324, 328, 329, 325, 326,
	327, 562, 0, 0, 0, 0, 1987, 0, 1569, 0,
	1575, 0, 0, 0, 0, 568, 0, 0, 0, 198,
	1357, 375, 459, 182, 464, 467, 2043, 182, 473, 476,
	482, 211, 0, 620, -2, 653, 654, 656, 0, 652,
	145, 1235, 0, 0, 1202, 1204, 2090, 1208, 0, 0,
	0, 0, 0, 0, 150, 2501, 159, 0, 1015, 0,
	2077, 0, 0, 0, 0, 0, 0, 1237, 0, 0,
	2501, 182, 2501, 182, 162, 164, 167, 0, 172, 169,
	170, 0, 0, 1006, 106, 1235, 0, 109, 113, 121,
	0, 0, 0, 127, 0, 0, 0, 1220, 1226, 0,
	0, 1106, 1107, 1110, 1116, 79, 0, 0, 1224, 1230,
	89, 90, 2088, 91, 0, 1201, 0, 0, 0, 174,
	111, 115, 122, 0, 1232, 108, 0, 196, 0, 0,
	0, 188, 0, 189, 190, 205, 0, 182, 2501, 0,
	939, 940, 1158, 1120, 1121, 0, 1126, 0, 0, 0,
	1532, 217, 0, 1532, 225, 0, 2051, 0, 341, 0,
	0, 0, 0, 973, 1061, 0, 944, 0, 0, 0,
	414, 410, 0, 419, 425, 424, -2, 0, 0, 0,
	0, -2, 0, 0, 1173, 1167, 1168, 0, 0, 0,
	2501, 1317, 1323, 0, 1418, 1433, 429, 1324, 1345, 0,
	0, 0, 1334, 1330, 1327, 1563, 0, 0, 0, 0,
	0, 1556, 1559, 499, 500, 267, 0, 0, 0, 0,
	0, 292, 0, 0, 0, 980, 984, 0, 2126, 2126,
	0, 2081, 0, 0, 0, 0, 253, 0, 256, 0,
	0, 0, 261, 262, 263, 264, 265, 246, 1532, 0,
	609, 0, 0, 758, 0, 781, 790, 792, 795, 831,
	833, 850, 876, 877, 1001, 0, 1001, 0, 0, 1381,
	0, 1456, 1387, 1438, 1439, 0, 1199, 0, 1697, 1740,
	0, 0, -2, 0, 0, 1744, 0, 0, 0, -2,
	0, 0, 0, 1974, 1976, 0, 2030, 1840, 0, 0,
	0, 1844, 1828, 1829, 0, 1948, 1991, 2020, 2024, 0,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 0, 2070, 2104,
	2108, 1921, 1922, 1926, 2084, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 1663, 1667, 0,
	0, 1992, 2003, 2005, 1782, 1783, 1787, 1788, 1789, 1790,
	1791, 1792, 1793, 1794, 1795, 1796, -2, -2, -2, 1800,
	1801, 1802, -2, -2, -2, 0, 0, 0, 2006, 2008,
	2009, 2013, 2014, 0, 1904, 1905, 1906, 2015, 0, 1420,
	1414, 1475, 0, 1561, 1479, 0, 1475, 1475, 1427, 1521,
	0, 0, 1545, 0, 1493, 0, 1494, 0, 1526, 0,
	1501, 1504, 1505, 1515, 0, 1507, 0, 1510, 0, 1840,
	-2, 293, 294, 296, 0, 299, 565, 566, 564, 548,
	0, 0, 1571, 0, 0, 1647, 1651, 1675, 571, 572,
	570, 461, 470, 213, 0, 1530, 0, 0, 0, 0,
	2156, 1214, 1215, 2518, 1217, 0, 0, 0, 0, 183,
	1013, 1042, 0, 0, 0, 1034, 0, 0, 1048, 152,
	0, 0, 0, 160, 0, 0, 157, 0, 166, 171,
	0, 0, 0, 0, 1207, 0, 0, 124, 125, 126,
	0, 131, 0, 132, 0, 0, 0, 0, 0, 0,
	1308, 1309, 1303, 0, 0, 0, 185, 0, 0, 0,
	1196, 0, 0, 207, 0, 0, 0, 1161, 1162, 1221,
	1227, 0, 0, 225, 223, 0, 226, 0, 229, 230,
	0, 225, 219, 0, 0, 1079, 354, 947, 1049, 0,
	1051, 0, 945, 0, 0, 1050, 406, 0, 413, 0,
	0, 1100, 0, 0, 1123, 1134, 1079, 0, 1172, 1174,
	1182, 0, 0, 0, 1319, 1323, 0, 1312, 1313, 1452,
	1325, 1343, -2, 0, 0, 1433, 1351, 1348, 1354, 1355,
	0, 289, 0, 284, 286, 0, 270, 0, 0, 976,
	981, 0, 0, 0, 0, 0, 1336, 1338, 0, 0,
	0, 0, 0, 0, 255, 276, 0, 752, 776, 841,
	878, 1000, 0, 0, 880, 0, 0, 1455, 1442, 1443,
	1440, 1199, 1742, 1746, 0, 0, 0, 1748, -2, 0,
	1770, -2, -2, 1977, 2029, 1819, 1433, 1841, 1843, 1830,
	2023, 1692, 0, 1928, 1925, 0, 1912, 0, 1865, 1866,
	0, 0, 1869, 1871, 1872, 1873, 1631, 1624, 1623, 2002,
	0, 0, 0, 0, 1903, 1415, 0, 1917, 0, 0,
	1483, 1917, 1917, 1522, 0, 1524, 1491, 1484, 0, 2104,
	1517, 1509, 0, 0, 297, 0, 1565, 1570, 0, 1576,
	1646, 214, 146, 147, 0, 1210, 1211, 1212, 0, 1216,
	0, 1219, 149, 0, 1014, 0, 1017, 0, 0, 0,
	0, 1024, 1035, 0, 0, 0, 0, 0, 1036, 0,
	1065, 0, 1187, 1194, 0, -2, 0, 0, 0, 154,
	177, 0, 0, 1236, 0, 0, 182, 182, 0, 0,
	1203, 1205, 0, 0, 0, 0, 134, 0, 0, 1222,
	1228, 1225, 1231, 0, 0, 0, 1233, 194, 195, 0,
	182, 0, 187, 182, 182, 1196, 0, 0, 0, 216,
	0, 0, 0, 0, 218, 282, 225, 0, 995, 0,
	1061, 1053, 1054, 1055, 0, 1060, 1062, 0, 0, 961,
	946, 0, 957, 0, 0, 974, 949, 0, 411, 937,
	1097, 1131, 1079, 0, 1165, 0, 0, 0, 0, 0,
	0, 1321, 1323, 0, 1314, 1315, 1345, 1451, 0, 0,
	0, 1333, 1452, 0, 291, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 257, 0, 258, 259,
	260, 247, 611, 613, 0, 0, 619, 999, 0, 0,
	0, 0, 1441, 1750, -2, -2, 1771, 0, 2105, 2107,
	1433, 0, 1914, 1435, 0, 0, -2, 0, 0, 0,
	1416, 1399, 0, 1474, 1466, 1468, 1470, 2395, 2196, 2500,
	1400, 1401, 1544, 0, 1512, 298, 0, 1572, 0, 1213,
	0, 151, 0, 1018, 1019, 2080, 1021, 0, 1023, 1025,
	1026, 0, 1029, 2128, 0, 1033, 0, 1044, 1066, 0,
	1075, 0, 1189, 1199, 1193, 0, 1191, 1077, 0, 153,
	155, 176, 1196, 0, 156, 165, 0, 0, 110, 0,
	0, 2191, 137, 135, 133, 1200, 112, 0, 196, 206,
	1195, 191, 208, 182, 0, 1223, 1229, 227, 0, 228,
	231, 0, 0, 1003, 0, 948, 1052, 0, 1063, 1064,
	951, 0, 950, 0, 0, 0, 0, 0, 412, 415,
	0, 418, 0, 0, 1175, 0, 1181, 0, 0, 0,
	1302, 0, 0, 1316, 1317, 427, 1339, 0, 0, 1345,
	1356, 269, 0, 0, 982, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 983, 1077, 0, 0, 1041, 0,
	274, 254, 0, 615, 0, 617, 0, 879, 881, 0,
	0, 1842, 1932, 0, 0, 1867, 1868, -2, 0, 1808,
	1916, 1918, 0, 0, 0, 0, 0, 1485, 1566, 1209,
	1218, 1016, 1020, 0, 0, 0, 1083, 0, 0, 1037,
	0, 1069, 1070, 995, 0, 1071, 1072, 1073, 1188, 1444,
	1194, 995, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 186, 209, 1196, 224, 241, 0, 1132, 949,
	1002, 0, 0, 959, 0, 962, 0, 958, 955, 956,
	947, 0, 416, 417, 0, 1135, 0, 1182, 0, 0,
	1305, 1301, 1323, 1318, 1319, 1563, 1342, 1346, 0, 0,
	1075, 1077, 949, 0, 614, 0, 0, 884, 885, 0,
	0, 0, 0, 1927, 1436, 1809, 0, 0, 1469, 1471,
	1472, 1473, 0, 0, 1028, 1088, 0, 0, 0, 1067,
	1068, 1003, 0, 1192, 1190, 1046, 0, 1079, 158, 0,
	1077, 0, 1007, 0, 0, 1010, 0, 0, 138, 2191,
	136, 0, 182, 244, 0, 238, 236, 237, 951, 0,
	0, 1057, 1059, 0, 963, 995, 961, 1133, 1077, 0,
	1075, 0, 1311, 1323, 1306, 1307, 0, 1321, 0, 292,
	292, 995, 1075, 1563, 0, 292, 616, 618, 1924, 1944,
	1933, -2, 2460, 2197, 0, 1944, 1944, 1919, 1920, 0,
	0, 1030, 1084, 1085, 0, 1080, 1081, 1082, 2127, 1031,
	1032, 1065, 0, 0, 1083, 178, 995, 1004, 0, 0,
	1005, 0, 0, 141, 0, 143, 210, 232, 0, 0,
	942, 0, 1056, 0, 0, 0, 0, 1003, 951, 1075,
	0, 995, 0, 1298, 1310, 0, 1320, 1302, 0, 271,
	272, 1003, 995, 1040, 273, 1929, 0, 0, 1935, 1936,
	1937, 1938, 1939, 1930, 1931, 1022, 0, 1086, 0, 1087,
	0, 0, 0, 1563, 1074, 0, 1088, 163, 1008, 0,
	1011, 0, 139, 0, 239, 240, 0, 1058, 952, 0,
	954, 949, 960, 995, 0, 1003, 0, 1304, 2089, 1305,
	1340, 0, 949, 1003, 0, 1941, 1942, 0, 0, 0,
	1089, 0, 1092, 1093, 0, 1090, 1045, 0, 1065, 0,
	0, 0, 0, 953, 951, 1003, 1077, 949, 1075, 1311,
	0, 1563, 949, 1940, 1943, 1934, 1027, 1091, 1094, 1095,
	1076, 1047, 0, 0, 242, 0, 998, 943, 949, 1075,
	1563, 995, 1299, 1563, 1038, 1563, 1003, 0, 0, 994,
	996, 997, 1563, 995, 1178, 1003, 1341, 1039, 1009, 0,
	243, 1176, 1003, 949, 0, 949, 1563, 0, 1563, 1179,
	1003, 1177, 1012,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 559, 3, 565, 560, 3,
	570, 571, 563, 561, 575, 562, 572, 564, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 578, 3,
	551, 553, 552, 556, 574, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 568, 3, 569, 566, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 576, 558, 577, 554,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 555, 57894, 557,
	57895, 567, 57896, 573, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1280
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1285
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1287
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1290
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1291
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1292
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1293
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1294
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1295
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1296
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1297
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1298
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1299
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1300
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1307
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "ALTER")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1323
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1324
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1325
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1326
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1327
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1328
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1386
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1412
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1425
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1442
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1446
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1450
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1476
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1480
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1486
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1495
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1504
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1513
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1537
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1569
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1573
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1577
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1583
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1587
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1593
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1602
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1613
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1617
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1623
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1631
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1641
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1645
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1655
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1666
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1673
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1685
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1692
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1700
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1705
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1709
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1714
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1720
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1728
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1739
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 131:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1749
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 132:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1759
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1768
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1779
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 135:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1785
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1793
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1797
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1801
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1805
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1811
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1816
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1853
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1858
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1863
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1868
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1873
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1878
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1883
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1888
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1893
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1919
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1929
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1936
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1939
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1945
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 163:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1952
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1960
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1976
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1985
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1997
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].union.user(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2012
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2013
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2017
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2021
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2035
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = nil
		}
	case 178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2049
		{
			sqlVAL.union.val = nil
		}
	case 180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2056
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2060
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2064
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 185:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2121
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2158
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2162
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2165
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2169
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2183
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2189
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2193
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2200
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2205
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2212
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2220
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2244
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2251
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2255
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 216:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2334
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2338
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2342
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2358
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2365
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2369
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2382
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2469
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2480
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = nil
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2497
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2519
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2523
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.union.val = nil
		}
	case 245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2586
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2595
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2620
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2639
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2652
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2676
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2682
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2719
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2724
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2728
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2734
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2739
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2744
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2749
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2754
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2758
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2777
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2785
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2793
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2797
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2807
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2813
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2817
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2831
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2835
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2845
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2849
		{
			sqlVAL.union.val = nil
		}
	case 293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2861
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2877
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2887
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2891
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2899
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2911
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2912
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2913
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2914
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2932
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2934
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2938
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2941
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2968
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2974
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2977
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2987
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2996
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3004
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3013
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3025
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3038
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3044
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3049
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3061
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3063
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3064
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3065
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3066
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3067
		{
			return helpWith(sqllex, "CREATE")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3074
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3077
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3080
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3083
		{
			return unimplemented(sqllex, "create access method")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3084
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3085
		{
			return unimplemented(sqllex, "create cast")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3086
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3087
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3088
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3089
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3090
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3091
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3092
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3093
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3094
		{
			return unimplemented(sqllex, "create operator")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3095
		{
			return unimplemented(sqllex, "create publication")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3096
		{
			return unimplemented(sqllex, "create rule")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3097
		{
			return unimplemented(sqllex, "create server")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3098
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3099
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3100
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3101
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3104
		{
		}
	case 364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3105
		{
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3108
		{
		}
	case 366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3109
		{
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3112
		{
		}
	case 368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3113
		{
		}
	case 369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3116
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3117
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3118
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3119
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3120
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3121
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3122
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3123
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3124
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3125
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3126
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3127
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3128
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3130
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3131
		{
			return unimplemented(sqllex, "drop server")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3132
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3133
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3134
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3138
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3139
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3140
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3141
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3142
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3144
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3145
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3146
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3147
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3165
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3169
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3173
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3179
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3183
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3192
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3205
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3211
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3215
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3226
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3238
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3254
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3289
		{

			sqlVAL.union.val = nil
		}
	case 427:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3303
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3313
		{
			return helpWith(sqllex, "DELETE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3316
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3317
		{
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3325
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3328
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3329
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3330
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3331
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3332
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3341
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3342
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3343
		{
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3344
		{
			return helpWith(sqllex, "DROP")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3347
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3348
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3349
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3350
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3351
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3352
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3353
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3365
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3378
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3386
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3401
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3416
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3424
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3433
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3441
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3449
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3457
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3464
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3471
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3479
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3486
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3490
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3496
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3500
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3509
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3517
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3532
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3539
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3543
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3548
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3561
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3566
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3573
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3600
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3607
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3609
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3617
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3625
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3633
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3641
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3652
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3656
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3659
		{
			return helpWith(sqllex, "DELETE")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3661
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3662
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3663
		{
			return helpWith(sqllex, "INSERT")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3666
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3668
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3676
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3677
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3678
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3683
		{
			return helpWith(sqllex, "DELETE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3684
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3685
		{
			return helpWith(sqllex, "INSERT")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3687
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3691
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3710
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3718
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3726
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3730
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3734
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3751
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3759
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3763
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3767
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3777
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3785
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3789
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3792
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3818
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3822
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3826
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3839
		{
			return helpWith(sqllex, "GRANT")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3861
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3865
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3869
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3873
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3877
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3886
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3895
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3905
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3923
		{
			return helpWith(sqllex, "RESET")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3924
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3939
		{
			return helpWith(sqllex, "RESET")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3947
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3950
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3964
		{
			return helpWith(sqllex, "USE")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3968
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3969
		{
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3970
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3971
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3975
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3976
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3977
		{
			return helpWith(sqllex, "USE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3993
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4008
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4011
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4037
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4041
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4045
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4051
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4061
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4073
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4077
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4088
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4091
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4101
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4121
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4126
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4145
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4150
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4153
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4157
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4176
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4183
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4188
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4193
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4198
		{
			return unimplemented(sqllex, "set from current")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4199
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4207
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4212
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4229
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4265
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4283
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4287
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4293
		{
			sqlVAL.union.val = tree.Low
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4297
		{
			sqlVAL.union.val = tree.Normal
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = tree.High
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4312
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4316
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4320
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4325
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4329
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4344
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4345
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4346
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4347
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4348
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4349
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4350
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4351
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4353
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4354
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4355
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4359
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4360
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4361
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4363
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4364
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4365
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4366
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4367
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4368
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4369
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4372
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4373
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4376
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{
			return helpWith(sqllex, "SHOW")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4385
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4388
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4392
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4397
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4402
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4407
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4412
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4424
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.str = "client_encoding"
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.str = "timezone"
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4439
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4457
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4461
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4472
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4480
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4488
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4520
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4529
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4537
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4547
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4554
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4556
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4559
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4568
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4579
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4595
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4599
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4602
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4610
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4613
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4620
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4624
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4634
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4643
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4650
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4653
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4666
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4674
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4685
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4687
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4691
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4695
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4698
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4700
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4707
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4718
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4720
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4723
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4731
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4734
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4736
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4739
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4743
		{
			sqlVAL.union.val = true
		}
	case 806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = true
		}
	case 807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = false
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4758
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4765
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4766
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4768
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4779
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4781
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4789
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4797
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4807
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4813
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4815
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4821
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4829
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4833
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4837
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 827:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4843
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4858
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4861
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4863
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4866
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4868
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4872
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4875
		{
			sqlVAL.union.val = true
		}
	case 836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4876
		{
			sqlVAL.union.val = false
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4884
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4889
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4900
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4920
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4923
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4933
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4938
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4941
		{
			sqlVAL.union.val = true
		}
	case 850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = false
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4949
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4956
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4970
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4977
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4981
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4985
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4998
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5006
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5011
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5016
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5020
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5028
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5032
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5036
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5049
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5052
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5063
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5067
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5075
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5083
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5091
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5098
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5105
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5109
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5120
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5128
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5134
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5143
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5152
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5155
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5165
		{
			sqlVAL.union.val = &tree.ShowRegions{}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5169
		{
			sqlVAL.union.val = &tree.ShowRegions{
				FromDatabase: true,
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = &tree.ShowRegions{
				FromDatabase: true,
				DatabaseName: tree.Name(sqlDollar[5].str),
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5181
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5185
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5191
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5198
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 898:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5327
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5331
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5370
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5374
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5379
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5383
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5391
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5400
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5404
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5415
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5432
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5433
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5434
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5444
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5445
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5446
		{
			return helpWith(sqllex, "RESUME")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5456
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5464
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5473
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5478
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5497
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5505
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5507
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5513
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5521
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5527
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5534
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5548
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5568
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5576
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5615
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[9].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[10].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[11].union.storageParams(),
				OnCommit:      sqlDollar[12].union.createTableOnCommitSetting(),
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5630
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[12].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[13].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[14].union.storageParams(),
				OnCommit:      sqlDollar[15].union.createTableOnCommitSetting(),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5648
		{

			sqlVAL.union.val = nil
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5654
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5660
		{
			sqlVAL.str = ""
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5664
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = nil
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5687
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5691
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5697
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5701
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5707
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5711
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 959:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5717
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5731
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5746
		{
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5747
		{
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5748
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5766
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5768
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5772
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5774
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5776
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 974:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5791
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5803
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5829
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 984:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5840
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5843
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5844
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5846
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5847
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5853
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5869
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5874
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5892
		{
			sqlVAL.str = ""
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5905
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5912
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5919
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5925
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5929
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5935
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5949
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5955
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5969
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5994
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6002
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6032
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6036
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6065
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6079
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = true
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = false
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6100
		{
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6101
		{
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6106
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6146
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6158
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6176
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[4].union.idxElems(),
					Storing:     sqlDollar[6].union.nameList(),
					Interleave:  sqlDollar[7].union.interleave(),
					PartitionBy: sqlDollar[8].union.partitionBy(),
					Predicate:   sqlDollar[10].union.expr(),
				},
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6201
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6212
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6223
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6229
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6239
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6254
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6261
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6267
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6278
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6282
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6294
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6298
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6314
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6319
		{
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6320
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6321
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6322
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6323
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6324
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6396
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6480
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6489
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6497
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6505
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6508
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6513
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6523
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6526
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6528
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6530
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6533
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6536
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6538
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6551
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6576
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6591
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6597
		{
			sqlVAL.union.val = true
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6601
		{

			sqlVAL.union.val = true
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = false
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6616
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6630
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6642
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6654
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6664
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6674
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6686
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6694
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6698
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6710
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6714
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6746
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6759
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6765
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = nil
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6784
		{
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6785
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6801
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6803
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6805
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6807
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6809
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6811
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6849
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6867
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6886
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6903
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6920
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6924
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6939
		{
			sqlVAL.union.val = false
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.union.val = true
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6949
		{
			sqlVAL.union.val = false
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6955
		{
			sqlVAL.union.val = true
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = false
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6978
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6984
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6990
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6998
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7023
		{
			sqlVAL.str = ""
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7026
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.str = ""
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7039
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7051
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7057
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7063
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7071
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.union.val = &tree.AlterTableRegionalAffinity{
				Name:             sqlDollar[3].union.unresolvedObjectName(),
				RegionalAffinity: sqlDollar[5].union.regionAffinity(),
				IfExists:         false,
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = &tree.AlterTableRegionalAffinity{
				Name:             sqlDollar[5].union.unresolvedObjectName(),
				RegionalAffinity: sqlDollar[7].union.regionAffinity(),
				IfExists:         true,
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelGlobal,
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				TableRegion:           tree.Name(sqlDollar[6].str),
				RegionalAffinityLevel: tree.RegionalAffinityLevelTable,
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7116
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelRowLevel,
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelGlobal,
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				TableRegion:           tree.Name(sqlDollar[4].str),
				RegionalAffinityLevel: tree.RegionalAffinityLevelTable,
			}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelRowLevel,
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelGlobal,
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7147
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				TableRegion:           tree.Name(sqlDollar[3].str),
				RegionalAffinityLevel: tree.RegionalAffinityLevelTable,
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7154
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelRowLevel,
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelGlobal,
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7166
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				TableRegion:           tree.Name(sqlDollar[6].str),
				RegionalAffinityLevel: tree.RegionalAffinityLevelTable,
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelRowLevel,
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7229
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7235
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7247
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7253
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7267
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7273
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7290
		{
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7291
		{
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7294
		{
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7295
		{
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7306
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7324
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7333
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7354
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7362
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7383
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7391
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7402
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7406
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7407
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7408
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7427
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7432
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7445
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7450
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7459
		{
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7460
		{
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7461
		{
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7478
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7481
		{
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7482
		{
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7510
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7523
		{
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7525
		{
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7529
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7542
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7546
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7578
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7616
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7621
		{
			sqlVAL.str = ""
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7632
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7642
		{

		}
	case 1308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.str = ""
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7676
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7680
		{
			sqlVAL.str = ""
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7686
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7690
		{
			sqlVAL.str = ""
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7700
		{
			sqlVAL.str = ""
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7706
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7714
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7719
		{
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7720
		{
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7735
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7749
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7767
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7771
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7780
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7799
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7805
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7829
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7856
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7860
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7869
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7898
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7930
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7945
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7951
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7966
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8069
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8093
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8110
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8145
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8146
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8147
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8208
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8212
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8245
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8252
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8264
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8268
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8289
		{
			sqlVAL.union.val = true
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = false
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8321
		{
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8322
		{
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = nil
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8335
		{
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8336
		{
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = true
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = false
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = false
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = true
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8365
		{
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8366
		{
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8369
		{
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8370
		{
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8401
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8411
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8432
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8437
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8453
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8466
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8487
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8499
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8517
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8532
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8554
		{
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8555
		{
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8558
		{
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8559
		{
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8593
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8594
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8595
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8625
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8627
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8642
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8664
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8669
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8674
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8685
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8697
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8716
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8724
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8755
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8765
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8792
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8796
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8800
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8811
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8841
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8852
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8874
		{
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8876
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = nil
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = true
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = false
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8956
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.str = tree.AstFull
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.str = tree.AstRight
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.str = tree.AstInner
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8993
		{
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8994
		{
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.str = tree.AstHash
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.str = ""
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9063
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9068
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9086
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9092
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9098
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9108
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = true
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = false
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = true
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = false
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9157
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9170
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9178
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9179
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9197
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9199
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9207
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9220
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9227
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9236
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9276
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9288
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9289
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9293
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9294
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9295
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9297
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9298
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9299
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9301
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9302
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9303
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9305
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9306
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9307
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9308
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9309
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9310
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9311
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9313
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9314
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9315
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9317
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9318
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9319
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9321
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9322
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9323
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = types.Geography
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9328
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9338
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9346
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9372
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9380
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = nil
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = types.Int2
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = types.Int
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = types.Float4
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = types.Float
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9423
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9431
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9439
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = types.Bool
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9453
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.union.val = types.Float
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9472
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9478
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9486
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9500
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = types.String
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.union.val = true
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = false
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = types.Date
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9549
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9557
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9571
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9580
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9588
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9605
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = true
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = false
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqlVAL.union.val = false
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = types.Interval
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9629
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9672
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9713
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9728
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = nil
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9758
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9818
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9851
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9863
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9879
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9883
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9899
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9915
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9919
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9943
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10070
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10076
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10136
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10158
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10230
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10234
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10250
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10348
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10352
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10357
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10383
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10392
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10407
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10437
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10448
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10449
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10464
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10473
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10539
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10588
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10664
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10669
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10678
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10680
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10684
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10687
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10696
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10705
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10710
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10715
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10720
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10725
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10734
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10735
		{
			return unimplemented(sqllex, "treat")
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10756
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10761
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10777
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10781
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10808
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10831
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.str = ""
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10897
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10910
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10938
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10978
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11007
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = tree.Any
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = tree.Some
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = tree.All
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = tree.Div
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = tree.LT
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = tree.GT
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = tree.LE
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = tree.GE
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = tree.NE
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = tree.Like
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11052
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11290
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11309
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11329
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11368
		{
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11369
		{
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11373
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11377
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11400
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11412
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11422
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11441
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11449
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11493
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11499
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11518
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11522
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11534
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11538
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11547
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11558
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11567
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11575
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11587
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11676
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11680
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11690
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11730
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11734
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11800
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11813
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11820
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.str = ""
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11851
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
