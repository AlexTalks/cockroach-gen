// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:76

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:722
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12859

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1478,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	258, 379,
	-2, 0,
	-1, 73,
	240, 225,
	504, 225,
	-2, 0,
	-1, 86,
	228, 1226,
	242, 1226,
	258, 375,
	384, 375,
	394, 996,
	430, 375,
	442, 996,
	488, 996,
	515, 375,
	541, 996,
	-2, 0,
	-1, 92,
	133, 1478,
	235, 1478,
	526, 1478,
	527, 1478,
	-2, 0,
	-1, 108,
	151, 1449,
	170, 1449,
	183, 1449,
	238, 1449,
	271, 1449,
	336, 1449,
	346, 1449,
	521, 1449,
	-2, 1420,
	-1, 147,
	159, 857,
	257, 857,
	387, 824,
	447, 824,
	487, 824,
	507, 857,
	509, 824,
	-2, 0,
	-1, 149,
	4, 1480,
	21, 1480,
	22, 1480,
	23, 1480,
	24, 1480,
	25, 1480,
	26, 1480,
	27, 1480,
	28, 1480,
	30, 1480,
	31, 1480,
	37, 1480,
	42, 1480,
	43, 1480,
	45, 1480,
	46, 1480,
	47, 1480,
	48, 1480,
	49, 1480,
	50, 1480,
	51, 1480,
	52, 1480,
	54, 1480,
	55, 1480,
	56, 1480,
	57, 1480,
	59, 1480,
	60, 1480,
	61, 1480,
	62, 1480,
	63, 1480,
	64, 1480,
	65, 1480,
	69, 1480,
	70, 1480,
	71, 1480,
	72, 1480,
	74, 1480,
	75, 1480,
	76, 1480,
	80, 1480,
	81, 1480,
	82, 1480,
	83, 1480,
	84, 1480,
	85, 1480,
	86, 1480,
	89, 1480,
	90, 1480,
	91, 1480,
	92, 1480,
	93, 1480,
	95, 1480,
	97, 1480,
	98, 1480,
	99, 1480,
	100, 1480,
	101, 1480,
	102, 1480,
	104, 1480,
	105, 1480,
	106, 1480,
	108, 1480,
	109, 1480,
	110, 1480,
	118, 1480,
	119, 1480,
	120, 1480,
	121, 1480,
	122, 1480,
	124, 1480,
	125, 1480,
	126, 1480,
	128, 1480,
	129, 1480,
	130, 1480,
	132, 1480,
	133, 1480,
	134, 1480,
	136, 1480,
	137, 1480,
	138, 1480,
	141, 1480,
	142, 1480,
	143, 1480,
	145, 1480,
	146, 1480,
	148, 1480,
	149, 1480,
	150, 1480,
	152, 1480,
	153, 1480,
	154, 1480,
	155, 1480,
	156, 1480,
	157, 1480,
	158, 1480,
	159, 1480,
	160, 1480,
	161, 1480,
	162, 1480,
	163, 1480,
	164, 1480,
	165, 1480,
	166, 1480,
	167, 1480,
	169, 1480,
	175, 1480,
	176, 1480,
	177, 1480,
	178, 1480,
	182, 1480,
	184, 1480,
	188, 1480,
	189, 1480,
	190, 1480,
	191, 1480,
	192, 1480,
	193, 1480,
	194, 1480,
	195, 1480,
	196, 1480,
	197, 1480,
	198, 1480,
	199, 1480,
	200, 1480,
	202, 1480,
	203, 1480,
	205, 1480,
	206, 1480,
	208, 1480,
	209, 1480,
	210, 1480,
	211, 1480,
	212, 1480,
	213, 1480,
	214, 1480,
	215, 1480,
	216, 1480,
	218, 1480,
	219, 1480,
	221, 1480,
	222, 1480,
	223, 1480,
	224, 1480,
	228, 1480,
	229, 1480,
	230, 1480,
	231, 1480,
	232, 1480,
	235, 1480,
	236, 1480,
	237, 1480,
	239, 1480,
	241, 1480,
	242, 1480,
	244, 1480,
	246, 1480,
	247, 1480,
	248, 1480,
	250, 1480,
	254, 1480,
	255, 1480,
	256, 1480,
	257, 1480,
	258, 1480,
	259, 1480,
	261, 1480,
	262, 1480,
	263, 1480,
	265, 1480,
	266, 1480,
	268, 1480,
	269, 1480,
	272, 1480,
	276, 1480,
	277, 1480,
	278, 1480,
	281, 1480,
	282, 1480,
	283, 1480,
	284, 1480,
	286, 1480,
	287, 1480,
	288, 1480,
	289, 1480,
	290, 1480,
	291, 1480,
	292, 1480,
	293, 1480,
	294, 1480,
	295, 1480,
	296, 1480,
	297, 1480,
	298, 1480,
	299, 1480,
	300, 1480,
	301, 1480,
	302, 1480,
	303, 1480,
	304, 1480,
	305, 1480,
	306, 1480,
	307, 1480,
	309, 1480,
	311, 1480,
	312, 1480,
	313, 1480,
	314, 1480,
	315, 1480,
	316, 1480,
	317, 1480,
	318, 1480,
	319, 1480,
	320, 1480,
	321, 1480,
	322, 1480,
	324, 1480,
	326, 1480,
	328, 1480,
	329, 1480,
	331, 1480,
	332, 1480,
	333, 1480,
	334, 1480,
	335, 1480,
	338, 1480,
	341, 1480,
	342, 1480,
	343, 1480,
	344, 1480,
	347, 1480,
	348, 1480,
	349, 1480,
	351, 1480,
	353, 1480,
	354, 1480,
	355, 1480,
	356, 1480,
	357, 1480,
	358, 1480,
	359, 1480,
	360, 1480,
	361, 1480,
	362, 1480,
	363, 1480,
	364, 1480,
	366, 1480,
	367, 1480,
	368, 1480,
	369, 1480,
	370, 1480,
	371, 1480,
	372, 1480,
	373, 1480,
	374, 1480,
	375, 1480,
	376, 1480,
	377, 1480,
	378, 1480,
	379, 1480,
	380, 1480,
	382, 1480,
	383, 1480,
	385, 1480,
	386, 1480,
	387, 1480,
	388, 1480,
	389, 1480,
	390, 1480,
	391, 1480,
	392, 1480,
	393, 1480,
	394, 1480,
	395, 1480,
	396, 1480,
	398, 1480,
	400, 1480,
	401, 1480,
	402, 1480,
	407, 1480,
	409, 1480,
	410, 1480,
	411, 1480,
	412, 1480,
	413, 1480,
	414, 1480,
	415, 1480,
	416, 1480,
	417, 1480,
	419, 1480,
	420, 1480,
	421, 1480,
	423, 1480,
	424, 1480,
	425, 1480,
	426, 1480,
	427, 1480,
	428, 1480,
	430, 1480,
	431, 1480,
	432, 1480,
	433, 1480,
	434, 1480,
	435, 1480,
	436, 1480,
	437, 1480,
	438, 1480,
	439, 1480,
	440, 1480,
	442, 1480,
	443, 1480,
	444, 1480,
	445, 1480,
	446, 1480,
	447, 1480,
	449, 1480,
	450, 1480,
	451, 1480,
	452, 1480,
	453, 1480,
	454, 1480,
	456, 1480,
	457, 1480,
	458, 1480,
	459, 1480,
	460, 1480,
	461, 1480,
	462, 1480,
	464, 1480,
	466, 1480,
	467, 1480,
	468, 1480,
	469, 1480,
	470, 1480,
	471, 1480,
	472, 1480,
	473, 1480,
	474, 1480,
	475, 1480,
	476, 1480,
	477, 1480,
	478, 1480,
	479, 1480,
	480, 1480,
	481, 1480,
	483, 1480,
	484, 1480,
	486, 1480,
	487, 1480,
	489, 1480,
	490, 1480,
	491, 1480,
	492, 1480,
	493, 1480,
	494, 1480,
	495, 1480,
	496, 1480,
	497, 1480,
	499, 1480,
	500, 1480,
	501, 1480,
	502, 1480,
	503, 1480,
	505, 1480,
	507, 1480,
	508, 1480,
	509, 1480,
	510, 1480,
	511, 1480,
	512, 1480,
	514, 1480,
	515, 1480,
	516, 1480,
	517, 1480,
	519, 1480,
	520, 1480,
	523, 1480,
	524, 1480,
	525, 1480,
	526, 1480,
	527, 1480,
	528, 1480,
	529, 1480,
	531, 1480,
	534, 1480,
	535, 1480,
	536, 1480,
	537, 1480,
	538, 1480,
	539, 1480,
	541, 1480,
	542, 1480,
	543, 1480,
	544, 1480,
	550, 1480,
	551, 1480,
	552, 1480,
	553, 1480,
	554, 1480,
	555, 1480,
	-2, 0,
	-1, 150,
	1, 1335,
	131, 1335,
	246, 1335,
	325, 1335,
	382, 1335,
	391, 1335,
	559, 1335,
	583, 1335,
	-2, 0,
	-1, 152,
	1, 1335,
	583, 1335,
	-2, 0,
	-1, 153,
	1, 1335,
	583, 1335,
	-2, 0,
	-1, 154,
	1, 1335,
	504, 1335,
	583, 1335,
	-2, 0,
	-1, 182,
	151, 1448,
	170, 1448,
	183, 1448,
	238, 1448,
	271, 1448,
	336, 1448,
	346, 1448,
	521, 1448,
	-2, 1423,
	-1, 228,
	4, 1487,
	5, 1487,
	6, 1487,
	7, 1487,
	8, 1487,
	9, 1487,
	10, 1487,
	21, 1487,
	22, 1487,
	23, 1487,
	24, 1487,
	25, 1487,
	26, 1487,
	27, 1487,
	28, 1487,
	30, 1487,
	31, 1487,
	37, 1487,
	38, 1487,
	42, 1487,
	43, 1487,
	44, 1487,
	45, 1487,
	46, 1487,
	47, 1487,
	48, 1487,
	49, 1487,
	50, 1487,
	51, 1487,
	52, 1487,
	54, 1487,
	55, 1487,
	56, 1487,
	57, 1487,
	59, 1487,
	60, 1487,
	61, 1487,
	62, 1487,
	63, 1487,
	64, 1487,
	65, 1487,
	66, 1487,
	67, 1487,
	68, 1487,
	69, 1487,
	70, 1487,
	71, 1487,
	72, 1487,
	74, 1487,
	75, 1487,
	76, 1487,
	78, 1487,
	80, 1487,
	81, 1487,
	82, 1487,
	83, 1487,
	84, 1487,
	85, 1487,
	86, 1487,
	89, 1487,
	90, 1487,
	91, 1487,
	92, 1487,
	93, 1487,
	95, 1487,
	97, 1487,
	98, 1487,
	99, 1487,
	100, 1487,
	101, 1487,
	102, 1487,
	104, 1487,
	105, 1487,
	106, 1487,
	107, 1487,
	108, 1487,
	109, 1487,
	110, 1487,
	111, 1487,
	112, 1487,
	113, 1487,
	114, 1487,
	115, 1487,
	116, 1487,
	117, 1487,
	118, 1487,
	119, 1487,
	120, 1487,
	121, 1487,
	122, 1487,
	123, 1487,
	124, 1487,
	125, 1487,
	126, 1487,
	127, 1487,
	128, 1487,
	129, 1487,
	130, 1487,
	132, 1487,
	133, 1487,
	134, 1487,
	136, 1487,
	137, 1487,
	138, 1487,
	141, 1487,
	142, 1487,
	143, 1487,
	145, 1487,
	146, 1487,
	148, 1487,
	149, 1487,
	150, 1487,
	152, 1487,
	153, 1487,
	154, 1487,
	155, 1487,
	156, 1487,
	157, 1487,
	158, 1487,
	159, 1487,
	160, 1487,
	161, 1487,
	162, 1487,
	163, 1487,
	164, 1487,
	165, 1487,
	166, 1487,
	167, 1487,
	168, 1487,
	169, 1487,
	175, 1487,
	176, 1487,
	177, 1487,
	178, 1487,
	182, 1487,
	184, 1487,
	187, 1487,
	188, 1487,
	189, 1487,
	190, 1487,
	191, 1487,
	192, 1487,
	193, 1487,
	194, 1487,
	195, 1487,
	196, 1487,
	197, 1487,
	198, 1487,
	199, 1487,
	200, 1487,
	202, 1487,
	203, 1487,
	205, 1487,
	206, 1487,
	208, 1487,
	209, 1487,
	210, 1487,
	211, 1487,
	212, 1487,
	213, 1487,
	214, 1487,
	215, 1487,
	216, 1487,
	217, 1487,
	218, 1487,
	219, 1487,
	221, 1487,
	222, 1487,
	223, 1487,
	224, 1487,
	228, 1487,
	229, 1487,
	230, 1487,
	231, 1487,
	232, 1487,
	234, 1487,
	235, 1487,
	236, 1487,
	237, 1487,
	239, 1487,
	241, 1487,
	242, 1487,
	243, 1487,
	244, 1487,
	245, 1487,
	246, 1487,
	247, 1487,
	248, 1487,
	249, 1487,
	250, 1487,
	254, 1487,
	255, 1487,
	256, 1487,
	257, 1487,
	258, 1487,
	259, 1487,
	261, 1487,
	262, 1487,
	263, 1487,
	265, 1487,
	266, 1487,
	267, 1487,
	268, 1487,
	269, 1487,
	270, 1487,
	272, 1487,
	276, 1487,
	277, 1487,
	278, 1487,
	279, 1487,
	280, 1487,
	281, 1487,
	282, 1487,
	283, 1487,
	284, 1487,
	286, 1487,
	287, 1487,
	288, 1487,
	289, 1487,
	290, 1487,
	291, 1487,
	292, 1487,
	293, 1487,
	294, 1487,
	295, 1487,
	296, 1487,
	297, 1487,
	298, 1487,
	299, 1487,
	300, 1487,
	301, 1487,
	302, 1487,
	303, 1487,
	304, 1487,
	305, 1487,
	306, 1487,
	307, 1487,
	309, 1487,
	310, 1487,
	311, 1487,
	312, 1487,
	313, 1487,
	314, 1487,
	315, 1487,
	316, 1487,
	317, 1487,
	318, 1487,
	319, 1487,
	320, 1487,
	321, 1487,
	322, 1487,
	323, 1487,
	324, 1487,
	325, 1487,
	326, 1487,
	327, 1487,
	328, 1487,
	329, 1487,
	330, 1487,
	331, 1487,
	332, 1487,
	333, 1487,
	334, 1487,
	335, 1487,
	338, 1487,
	342, 1487,
	343, 1487,
	344, 1487,
	347, 1487,
	348, 1487,
	349, 1487,
	350, 1487,
	351, 1487,
	352, 1487,
	353, 1487,
	354, 1487,
	355, 1487,
	356, 1487,
	357, 1487,
	358, 1487,
	359, 1487,
	360, 1487,
	361, 1487,
	362, 1487,
	363, 1487,
	364, 1487,
	366, 1487,
	367, 1487,
	368, 1487,
	369, 1487,
	370, 1487,
	371, 1487,
	372, 1487,
	373, 1487,
	374, 1487,
	375, 1487,
	376, 1487,
	377, 1487,
	378, 1487,
	379, 1487,
	380, 1487,
	382, 1487,
	383, 1487,
	385, 1487,
	386, 1487,
	387, 1487,
	388, 1487,
	389, 1487,
	390, 1487,
	391, 1487,
	392, 1487,
	393, 1487,
	394, 1487,
	395, 1487,
	396, 1487,
	398, 1487,
	400, 1487,
	401, 1487,
	402, 1487,
	407, 1487,
	409, 1487,
	410, 1487,
	411, 1487,
	412, 1487,
	413, 1487,
	414, 1487,
	415, 1487,
	416, 1487,
	417, 1487,
	419, 1487,
	420, 1487,
	421, 1487,
	422, 1487,
	423, 1487,
	424, 1487,
	425, 1487,
	426, 1487,
	427, 1487,
	428, 1487,
	430, 1487,
	431, 1487,
	432, 1487,
	433, 1487,
	434, 1487,
	435, 1487,
	436, 1487,
	437, 1487,
	438, 1487,
	439, 1487,
	440, 1487,
	442, 1487,
	443, 1487,
	444, 1487,
	445, 1487,
	446, 1487,
	447, 1487,
	448, 1487,
	449, 1487,
	450, 1487,
	451, 1487,
	452, 1487,
	453, 1487,
	454, 1487,
	455, 1487,
	456, 1487,
	457, 1487,
	458, 1487,
	459, 1487,
	460, 1487,
	461, 1487,
	462, 1487,
	464, 1487,
	466, 1487,
	467, 1487,
	468, 1487,
	469, 1487,
	470, 1487,
	471, 1487,
	472, 1487,
	473, 1487,
	474, 1487,
	475, 1487,
	476, 1487,
	477, 1487,
	478, 1487,
	479, 1487,
	480, 1487,
	481, 1487,
	483, 1487,
	484, 1487,
	485, 1487,
	486, 1487,
	487, 1487,
	489, 1487,
	490, 1487,
	491, 1487,
	492, 1487,
	493, 1487,
	494, 1487,
	495, 1487,
	496, 1487,
	497, 1487,
	499, 1487,
	500, 1487,
	501, 1487,
	502, 1487,
	503, 1487,
	505, 1487,
	507, 1487,
	508, 1487,
	509, 1487,
	510, 1487,
	511, 1487,
	512, 1487,
	513, 1487,
	514, 1487,
	515, 1487,
	516, 1487,
	517, 1487,
	519, 1487,
	520, 1487,
	522, 1487,
	523, 1487,
	524, 1487,
	525, 1487,
	526, 1487,
	527, 1487,
	528, 1487,
	529, 1487,
	530, 1487,
	531, 1487,
	534, 1487,
	535, 1487,
	536, 1487,
	537, 1487,
	538, 1487,
	539, 1487,
	541, 1487,
	542, 1487,
	543, 1487,
	544, 1487,
	550, 1487,
	551, 1487,
	552, 1487,
	553, 1487,
	554, 1487,
	555, 1487,
	556, 1487,
	564, 1487,
	571, 1487,
	572, 1487,
	573, 1487,
	580, 1487,
	584, 1487,
	-2, 0,
	-1, 722,
	4, 1224,
	21, 1224,
	22, 1224,
	23, 1224,
	24, 1224,
	25, 1224,
	26, 1224,
	27, 1224,
	28, 1224,
	30, 1224,
	31, 1224,
	37, 1224,
	42, 1224,
	43, 1224,
	45, 1224,
	46, 1224,
	47, 1224,
	48, 1224,
	49, 1224,
	50, 1224,
	51, 1224,
	52, 1224,
	54, 1224,
	55, 1224,
	56, 1224,
	57, 1224,
	59, 1224,
	60, 1224,
	61, 1224,
	62, 1224,
	63, 1224,
	64, 1224,
	65, 1224,
	69, 1224,
	70, 1224,
	71, 1224,
	72, 1224,
	74, 1224,
	75, 1224,
	76, 1224,
	80, 1224,
	81, 1224,
	82, 1224,
	83, 1224,
	84, 1224,
	85, 1224,
	86, 1224,
	89, 1224,
	90, 1224,
	91, 1224,
	92, 1224,
	93, 1224,
	95, 1224,
	97, 1224,
	98, 1224,
	99, 1224,
	100, 1224,
	101, 1224,
	102, 1224,
	104, 1224,
	105, 1224,
	106, 1224,
	108, 1224,
	109, 1224,
	110, 1224,
	118, 1224,
	119, 1224,
	120, 1224,
	121, 1224,
	122, 1224,
	124, 1224,
	125, 1224,
	126, 1224,
	128, 1224,
	129, 1224,
	130, 1224,
	132, 1224,
	133, 1224,
	134, 1224,
	136, 1224,
	137, 1224,
	138, 1224,
	141, 1224,
	142, 1224,
	143, 1224,
	145, 1224,
	146, 1224,
	148, 1224,
	149, 1224,
	150, 1224,
	152, 1224,
	153, 1224,
	154, 1224,
	155, 1224,
	156, 1224,
	157, 1224,
	158, 1224,
	159, 1224,
	160, 1224,
	161, 1224,
	162, 1224,
	163, 1224,
	164, 1224,
	165, 1224,
	166, 1224,
	167, 1224,
	169, 1224,
	175, 1224,
	176, 1224,
	177, 1224,
	178, 1224,
	182, 1224,
	184, 1224,
	188, 1224,
	189, 1224,
	190, 1224,
	191, 1224,
	192, 1224,
	193, 1224,
	194, 1224,
	195, 1224,
	196, 1224,
	197, 1224,
	198, 1224,
	199, 1224,
	200, 1224,
	202, 1224,
	203, 1224,
	205, 1224,
	206, 1224,
	208, 1224,
	209, 1224,
	210, 1224,
	211, 1224,
	212, 1224,
	213, 1224,
	214, 1224,
	215, 1224,
	216, 1224,
	218, 1224,
	219, 1224,
	221, 1224,
	222, 1224,
	223, 1224,
	224, 1224,
	228, 1224,
	229, 1224,
	230, 1224,
	231, 1224,
	232, 1224,
	235, 1224,
	236, 1224,
	237, 1224,
	239, 1224,
	241, 1224,
	242, 1224,
	244, 1224,
	246, 1224,
	247, 1224,
	248, 1224,
	250, 1224,
	254, 1224,
	255, 1224,
	256, 1224,
	257, 1224,
	258, 1224,
	259, 1224,
	261, 1224,
	262, 1224,
	263, 1224,
	265, 1224,
	266, 1224,
	268, 1224,
	269, 1224,
	272, 1224,
	276, 1224,
	277, 1224,
	278, 1224,
	281, 1224,
	282, 1224,
	283, 1224,
	284, 1224,
	286, 1224,
	287, 1224,
	288, 1224,
	289, 1224,
	290, 1224,
	291, 1224,
	292, 1224,
	293, 1224,
	294, 1224,
	295, 1224,
	296, 1224,
	297, 1224,
	298, 1224,
	299, 1224,
	300, 1224,
	301, 1224,
	302, 1224,
	303, 1224,
	304, 1224,
	305, 1224,
	306, 1224,
	307, 1224,
	309, 1224,
	311, 1224,
	312, 1224,
	313, 1224,
	314, 1224,
	315, 1224,
	316, 1224,
	317, 1224,
	318, 1224,
	319, 1224,
	320, 1224,
	321, 1224,
	322, 1224,
	324, 1224,
	326, 1224,
	328, 1224,
	329, 1224,
	331, 1224,
	332, 1224,
	333, 1224,
	334, 1224,
	335, 1224,
	338, 1224,
	342, 1224,
	343, 1224,
	344, 1224,
	347, 1224,
	348, 1224,
	349, 1224,
	351, 1224,
	353, 1224,
	354, 1224,
	355, 1224,
	356, 1224,
	357, 1224,
	358, 1224,
	359, 1224,
	360, 1224,
	361, 1224,
	362, 1224,
	363, 1224,
	364, 1224,
	366, 1224,
	367, 1224,
	368, 1224,
	369, 1224,
	370, 1224,
	371, 1224,
	372, 1224,
	373, 1224,
	374, 1224,
	375, 1224,
	376, 1224,
	377, 1224,
	378, 1224,
	379, 1224,
	380, 1224,
	382, 1224,
	383, 1224,
	385, 1224,
	386, 1224,
	387, 1224,
	388, 1224,
	389, 1224,
	390, 1224,
	391, 1224,
	392, 1224,
	393, 1224,
	394, 1224,
	395, 1224,
	396, 1224,
	398, 1224,
	400, 1224,
	401, 1224,
	402, 1224,
	407, 1224,
	409, 1224,
	410, 1224,
	411, 1224,
	412, 1224,
	413, 1224,
	414, 1224,
	415, 1224,
	416, 1224,
	417, 1224,
	419, 1224,
	420, 1224,
	421, 1224,
	423, 1224,
	424, 1224,
	425, 1224,
	426, 1224,
	427, 1224,
	428, 1224,
	430, 1224,
	431, 1224,
	432, 1224,
	433, 1224,
	434, 1224,
	435, 1224,
	436, 1224,
	437, 1224,
	438, 1224,
	439, 1224,
	440, 1224,
	442, 1224,
	443, 1224,
	444, 1224,
	445, 1224,
	446, 1224,
	447, 1224,
	449, 1224,
	450, 1224,
	451, 1224,
	452, 1224,
	453, 1224,
	454, 1224,
	456, 1224,
	457, 1224,
	458, 1224,
	459, 1224,
	460, 1224,
	461, 1224,
	462, 1224,
	464, 1224,
	466, 1224,
	467, 1224,
	468, 1224,
	469, 1224,
	470, 1224,
	471, 1224,
	472, 1224,
	473, 1224,
	474, 1224,
	475, 1224,
	476, 1224,
	477, 1224,
	478, 1224,
	479, 1224,
	480, 1224,
	481, 1224,
	483, 1224,
	484, 1224,
	486, 1224,
	487, 1224,
	489, 1224,
	490, 1224,
	491, 1224,
	492, 1224,
	493, 1224,
	494, 1224,
	495, 1224,
	496, 1224,
	497, 1224,
	499, 1224,
	500, 1224,
	501, 1224,
	502, 1224,
	503, 1224,
	505, 1224,
	507, 1224,
	508, 1224,
	509, 1224,
	510, 1224,
	511, 1224,
	512, 1224,
	514, 1224,
	515, 1224,
	516, 1224,
	517, 1224,
	519, 1224,
	520, 1224,
	523, 1224,
	524, 1224,
	525, 1224,
	526, 1224,
	527, 1224,
	528, 1224,
	529, 1224,
	531, 1224,
	534, 1224,
	535, 1224,
	536, 1224,
	537, 1224,
	538, 1224,
	539, 1224,
	541, 1224,
	542, 1224,
	543, 1224,
	544, 1224,
	550, 1224,
	551, 1224,
	552, 1224,
	553, 1224,
	554, 1224,
	555, 1224,
	-2, 0,
	-1, 741,
	186, 2245,
	504, 2245,
	563, 2245,
	582, 2245,
	-2, 0,
	-1, 742,
	186, 2349,
	504, 2349,
	563, 2349,
	582, 2349,
	-2, 0,
	-1, 743,
	186, 2232,
	504, 2232,
	563, 2232,
	582, 2232,
	-2, 0,
	-1, 745,
	186, 2479,
	504, 2479,
	563, 2479,
	582, 2479,
	-2, 0,
	-1, 747,
	186, 2519,
	504, 2519,
	563, 2519,
	582, 2519,
	-2, 0,
	-1, 754,
	186, 2376,
	504, 2376,
	563, 2376,
	582, 2376,
	-2, 660,
	-1, 783,
	582, 2180,
	585, 2180,
	-2, 927,
	-1, 784,
	582, 2182,
	585, 2182,
	-2, 928,
	-1, 785,
	582, 2181,
	585, 2181,
	-2, 929,
	-1, 786,
	585, 2107,
	-2, 930,
	-1, 809,
	183, 239,
	-2, 0,
	-1, 833,
	44, 2154,
	-2, 0,
	-1, 834,
	541, 1202,
	-2, 997,
	-1, 850,
	4, 1616,
	21, 1616,
	22, 1616,
	23, 1616,
	24, 1616,
	25, 1616,
	26, 1616,
	27, 1616,
	28, 1616,
	30, 1616,
	31, 1616,
	37, 1616,
	42, 1616,
	43, 1616,
	45, 1616,
	46, 1616,
	47, 1616,
	48, 1616,
	49, 1616,
	50, 1616,
	51, 1616,
	52, 1616,
	54, 1616,
	55, 1616,
	56, 1616,
	57, 1616,
	59, 1616,
	60, 1616,
	61, 1616,
	62, 1616,
	63, 1616,
	64, 1616,
	65, 1616,
	69, 1616,
	70, 1616,
	71, 1616,
	72, 1616,
	74, 1616,
	75, 1616,
	76, 1616,
	80, 1616,
	81, 1616,
	82, 1616,
	83, 1616,
	84, 1616,
	85, 1616,
	86, 1616,
	89, 1616,
	90, 1616,
	91, 1616,
	92, 1616,
	93, 1616,
	95, 1616,
	97, 1616,
	98, 1616,
	99, 1616,
	100, 1616,
	101, 1616,
	102, 1616,
	104, 1616,
	105, 1616,
	106, 1616,
	108, 1616,
	109, 1616,
	110, 1616,
	118, 1616,
	119, 1616,
	120, 1616,
	121, 1616,
	122, 1616,
	124, 1616,
	125, 1616,
	126, 1616,
	128, 1616,
	129, 1616,
	130, 1616,
	132, 1616,
	133, 1616,
	134, 1616,
	136, 1616,
	137, 1616,
	138, 1616,
	141, 1616,
	142, 1616,
	143, 1616,
	145, 1616,
	146, 1616,
	148, 1616,
	149, 1616,
	150, 1616,
	152, 1616,
	153, 1616,
	154, 1616,
	155, 1616,
	156, 1616,
	157, 1616,
	158, 1616,
	159, 1616,
	160, 1616,
	161, 1616,
	162, 1616,
	163, 1616,
	164, 1616,
	165, 1616,
	166, 1616,
	167, 1616,
	169, 1616,
	175, 1616,
	176, 1616,
	177, 1616,
	178, 1616,
	182, 1616,
	184, 1616,
	188, 1616,
	189, 1616,
	190, 1616,
	191, 1616,
	192, 1616,
	193, 1616,
	194, 1616,
	195, 1616,
	196, 1616,
	197, 1616,
	198, 1616,
	199, 1616,
	200, 1616,
	202, 1616,
	203, 1616,
	205, 1616,
	206, 1616,
	208, 1616,
	209, 1616,
	210, 1616,
	211, 1616,
	212, 1616,
	213, 1616,
	214, 1616,
	215, 1616,
	216, 1616,
	218, 1616,
	219, 1616,
	221, 1616,
	222, 1616,
	223, 1616,
	224, 1616,
	228, 1616,
	229, 1616,
	230, 1616,
	231, 1616,
	232, 1616,
	235, 1616,
	236, 1616,
	237, 1616,
	239, 1616,
	241, 1616,
	242, 1616,
	244, 1616,
	246, 1616,
	247, 1616,
	248, 1616,
	250, 1616,
	254, 1616,
	255, 1616,
	256, 1616,
	257, 1616,
	258, 1616,
	259, 1616,
	261, 1616,
	262, 1616,
	263, 1616,
	265, 1616,
	266, 1616,
	268, 1616,
	269, 1616,
	272, 1616,
	276, 1616,
	277, 1616,
	278, 1616,
	281, 1616,
	282, 1616,
	283, 1616,
	284, 1616,
	286, 1616,
	287, 1616,
	288, 1616,
	289, 1616,
	290, 1616,
	291, 1616,
	292, 1616,
	293, 1616,
	294, 1616,
	295, 1616,
	296, 1616,
	297, 1616,
	298, 1616,
	299, 1616,
	300, 1616,
	301, 1616,
	302, 1616,
	303, 1616,
	304, 1616,
	305, 1616,
	306, 1616,
	307, 1616,
	309, 1616,
	311, 1616,
	312, 1616,
	313, 1616,
	314, 1616,
	315, 1616,
	316, 1616,
	317, 1616,
	318, 1616,
	319, 1616,
	320, 1616,
	321, 1616,
	322, 1616,
	324, 1616,
	326, 1616,
	328, 1616,
	329, 1616,
	331, 1616,
	332, 1616,
	333, 1616,
	334, 1616,
	335, 1616,
	338, 1616,
	342, 1616,
	343, 1616,
	344, 1616,
	347, 1616,
	348, 1616,
	349, 1616,
	351, 1616,
	353, 1616,
	354, 1616,
	355, 1616,
	356, 1616,
	357, 1616,
	358, 1616,
	359, 1616,
	360, 1616,
	361, 1616,
	362, 1616,
	363, 1616,
	364, 1616,
	366, 1616,
	367, 1616,
	368, 1616,
	369, 1616,
	370, 1616,
	371, 1616,
	372, 1616,
	373, 1616,
	374, 1616,
	375, 1616,
	376, 1616,
	377, 1616,
	378, 1616,
	379, 1616,
	380, 1616,
	382, 1616,
	383, 1616,
	385, 1616,
	386, 1616,
	387, 1616,
	388, 1616,
	389, 1616,
	390, 1616,
	391, 1616,
	392, 1616,
	393, 1616,
	394, 1616,
	395, 1616,
	396, 1616,
	398, 1616,
	400, 1616,
	401, 1616,
	402, 1616,
	407, 1616,
	409, 1616,
	410, 1616,
	411, 1616,
	412, 1616,
	413, 1616,
	414, 1616,
	415, 1616,
	416, 1616,
	417, 1616,
	419, 1616,
	420, 1616,
	421, 1616,
	423, 1616,
	424, 1616,
	425, 1616,
	426, 1616,
	427, 1616,
	428, 1616,
	430, 1616,
	431, 1616,
	432, 1616,
	433, 1616,
	434, 1616,
	435, 1616,
	436, 1616,
	437, 1616,
	438, 1616,
	439, 1616,
	440, 1616,
	442, 1616,
	443, 1616,
	444, 1616,
	445, 1616,
	446, 1616,
	447, 1616,
	449, 1616,
	450, 1616,
	451, 1616,
	452, 1616,
	453, 1616,
	454, 1616,
	456, 1616,
	457, 1616,
	458, 1616,
	459, 1616,
	460, 1616,
	461, 1616,
	462, 1616,
	464, 1616,
	466, 1616,
	467, 1616,
	468, 1616,
	469, 1616,
	470, 1616,
	471, 1616,
	472, 1616,
	473, 1616,
	474, 1616,
	475, 1616,
	476, 1616,
	477, 1616,
	478, 1616,
	479, 1616,
	480, 1616,
	481, 1616,
	483, 1616,
	484, 1616,
	486, 1616,
	487, 1616,
	489, 1616,
	490, 1616,
	491, 1616,
	492, 1616,
	493, 1616,
	494, 1616,
	495, 1616,
	496, 1616,
	497, 1616,
	499, 1616,
	500, 1616,
	501, 1616,
	502, 1616,
	503, 1616,
	505, 1616,
	507, 1616,
	508, 1616,
	509, 1616,
	510, 1616,
	511, 1616,
	512, 1616,
	514, 1616,
	515, 1616,
	516, 1616,
	517, 1616,
	519, 1616,
	520, 1616,
	523, 1616,
	524, 1616,
	525, 1616,
	526, 1616,
	527, 1616,
	528, 1616,
	529, 1616,
	531, 1616,
	534, 1616,
	535, 1616,
	536, 1616,
	537, 1616,
	538, 1616,
	539, 1616,
	541, 1616,
	542, 1616,
	543, 1616,
	544, 1616,
	550, 1616,
	551, 1616,
	552, 1616,
	553, 1616,
	554, 1616,
	555, 1616,
	-2, 0,
	-1, 858,
	258, 379,
	-2, 0,
	-1, 928,
	387, 825,
	447, 825,
	487, 825,
	509, 825,
	-2, 0,
	-1, 929,
	387, 824,
	447, 824,
	487, 824,
	509, 824,
	-2, 764,
	-1, 933,
	1, 871,
	579, 871,
	581, 871,
	583, 871,
	-2, 0,
	-1, 934,
	1, 799,
	579, 799,
	581, 799,
	583, 799,
	-2, 0,
	-1, 935,
	1, 803,
	579, 803,
	581, 803,
	583, 803,
	-2, 0,
	-1, 936,
	1, 926,
	183, 926,
	579, 926,
	581, 926,
	583, 926,
	-2, 0,
	-1, 944,
	1, 830,
	579, 830,
	581, 830,
	583, 830,
	-2, 0,
	-1, 950,
	1, 871,
	579, 871,
	581, 871,
	583, 871,
	-2, 0,
	-1, 951,
	1, 873,
	579, 873,
	581, 873,
	583, 873,
	-2, 0,
	-1, 952,
	1, 876,
	579, 876,
	581, 876,
	583, 876,
	-2, 0,
	-1, 958,
	1, 894,
	579, 894,
	581, 894,
	583, 894,
	-2, 0,
	-1, 959,
	1, 896,
	579, 896,
	581, 896,
	583, 896,
	-2, 0,
	-1, 964,
	1, 921,
	579, 921,
	581, 921,
	583, 921,
	-2, 0,
	-1, 1010,
	170, 1491,
	183, 1491,
	271, 1491,
	336, 1491,
	-2, 1427,
	-1, 1025,
	170, 1490,
	183, 1490,
	271, 1490,
	336, 1490,
	-2, 1424,
	-1, 1051,
	582, 2179,
	-2, 668,
	-1, 1079,
	5, 2171,
	580, 2169,
	-2, 2160,
	-1, 1087,
	5, 2192,
	580, 2189,
	-2, 2180,
	-1, 1088,
	5, 2193,
	580, 2190,
	-2, 2181,
	-1, 1096,
	582, 2177,
	-2, 2159,
	-1, 1097,
	580, 2601,
	-2, 2178,
	-1, 1120,
	580, 2600,
	-2, 2194,
	-1, 1121,
	5, 1691,
	-2, 2571,
	-1, 1122,
	5, 1692,
	-2, 2572,
	-1, 1123,
	5, 1693,
	-2, 2586,
	-1, 1124,
	5, 1694,
	-2, 2550,
	-1, 1125,
	5, 1695,
	-2, 2584,
	-1, 1126,
	5, 1703,
	-2, 2563,
	-1, 1127,
	5, 1690,
	-2, 2559,
	-1, 1128,
	5, 1690,
	-2, 2558,
	-1, 1129,
	5, 1690,
	-2, 2577,
	-1, 1130,
	5, 1701,
	-2, 2552,
	-1, 1131,
	5, 1706,
	-2, 2551,
	-1, 1132,
	5, 1708,
	-2, 2596,
	-1, 1135,
	5, 1730,
	-2, 2589,
	-1, 1136,
	5, 1722,
	-2, 2590,
	-1, 1137,
	5, 1730,
	-2, 2591,
	-1, 1138,
	5, 1726,
	-2, 2592,
	-1, 1139,
	5, 1676,
	-2, 2564,
	-1, 1140,
	5, 1677,
	-2, 2565,
	-1, 1141,
	5, 1678,
	-2, 2553,
	-1, 1169,
	5, 1713,
	-2, 2597,
	-1, 1170,
	5, 1714,
	-2, 2587,
	-1, 1171,
	5, 1715,
	542, 1715,
	-2, 2554,
	-1, 1172,
	5, 1716,
	542, 1716,
	-2, 2555,
	-1, 1209,
	580, 2189,
	-2, 2180,
	-1, 1210,
	580, 2190,
	-2, 2181,
	-1, 1309,
	186, 2519,
	504, 2519,
	563, 2519,
	582, 2519,
	-2, 0,
	-1, 1312,
	1, 646,
	583, 646,
	-2, 1343,
	-1, 1440,
	355, 2155,
	409, 2155,
	449, 2155,
	573, 2155,
	-2, 2145,
	-1, 1451,
	584, 2155,
	-2, 2156,
	-1, 1456,
	1, 1199,
	579, 1199,
	581, 1199,
	583, 1199,
	-2, 1476,
	-1, 1504,
	394, 996,
	541, 996,
	-2, 374,
	-1, 1521,
	44, 2153,
	-2, 962,
	-1, 1528,
	1, 1199,
	579, 1199,
	581, 1199,
	583, 1199,
	-2, 1476,
	-1, 1536,
	4, 1224,
	21, 1224,
	22, 1224,
	23, 1224,
	24, 1224,
	25, 1224,
	26, 1224,
	27, 1224,
	28, 1224,
	30, 1224,
	31, 1224,
	37, 1224,
	42, 1224,
	43, 1224,
	45, 1224,
	46, 1224,
	47, 1224,
	48, 1224,
	49, 1224,
	50, 1224,
	51, 1224,
	52, 1224,
	54, 1224,
	55, 1224,
	56, 1224,
	57, 1224,
	59, 1224,
	60, 1224,
	61, 1224,
	62, 1224,
	63, 1224,
	64, 1224,
	65, 1224,
	69, 1224,
	70, 1224,
	71, 1224,
	72, 1224,
	74, 1224,
	75, 1224,
	76, 1224,
	80, 1224,
	81, 1224,
	82, 1224,
	83, 1224,
	84, 1224,
	85, 1224,
	86, 1224,
	89, 1224,
	90, 1224,
	91, 1224,
	92, 1224,
	93, 1224,
	95, 1224,
	97, 1224,
	98, 1224,
	99, 1224,
	100, 1224,
	101, 1224,
	102, 1224,
	104, 1224,
	105, 1224,
	106, 1224,
	108, 1224,
	109, 1224,
	110, 1224,
	118, 1224,
	119, 1224,
	120, 1224,
	121, 1224,
	122, 1224,
	124, 1224,
	125, 1224,
	126, 1224,
	128, 1224,
	129, 1224,
	130, 1224,
	132, 1224,
	133, 1224,
	134, 1224,
	136, 1224,
	137, 1224,
	138, 1224,
	141, 1224,
	142, 1224,
	143, 1224,
	145, 1224,
	146, 1224,
	148, 1224,
	149, 1224,
	150, 1224,
	152, 1224,
	153, 1224,
	154, 1224,
	155, 1224,
	156, 1224,
	157, 1224,
	158, 1224,
	159, 1224,
	160, 1224,
	161, 1224,
	162, 1224,
	163, 1224,
	164, 1224,
	165, 1224,
	166, 1224,
	167, 1224,
	175, 1224,
	176, 1224,
	177, 1224,
	178, 1224,
	182, 1224,
	184, 1224,
	188, 1224,
	189, 1224,
	190, 1224,
	191, 1224,
	192, 1224,
	193, 1224,
	194, 1224,
	195, 1224,
	196, 1224,
	197, 1224,
	198, 1224,
	199, 1224,
	200, 1224,
	202, 1224,
	203, 1224,
	205, 1224,
	206, 1224,
	208, 1224,
	209, 1224,
	210, 1224,
	211, 1224,
	212, 1224,
	213, 1224,
	214, 1224,
	215, 1224,
	216, 1224,
	218, 1224,
	219, 1224,
	221, 1224,
	222, 1224,
	223, 1224,
	224, 1224,
	229, 1224,
	230, 1224,
	231, 1224,
	232, 1224,
	235, 1224,
	236, 1224,
	237, 1224,
	239, 1224,
	241, 1224,
	242, 1224,
	244, 1224,
	246, 1224,
	247, 1224,
	248, 1224,
	250, 1224,
	254, 1224,
	255, 1224,
	256, 1224,
	257, 1224,
	258, 1224,
	259, 1224,
	261, 1224,
	262, 1224,
	263, 1224,
	265, 1224,
	266, 1224,
	268, 1224,
	269, 1224,
	272, 1224,
	276, 1224,
	277, 1224,
	278, 1224,
	281, 1224,
	282, 1224,
	283, 1224,
	284, 1224,
	286, 1224,
	287, 1224,
	288, 1224,
	289, 1224,
	290, 1224,
	291, 1224,
	292, 1224,
	293, 1224,
	294, 1224,
	295, 1224,
	296, 1224,
	297, 1224,
	298, 1224,
	299, 1224,
	300, 1224,
	301, 1224,
	302, 1224,
	303, 1224,
	304, 1224,
	305, 1224,
	306, 1224,
	307, 1224,
	309, 1224,
	311, 1224,
	312, 1224,
	313, 1224,
	314, 1224,
	315, 1224,
	316, 1224,
	317, 1224,
	318, 1224,
	319, 1224,
	320, 1224,
	321, 1224,
	322, 1224,
	324, 1224,
	328, 1224,
	329, 1224,
	331, 1224,
	332, 1224,
	333, 1224,
	334, 1224,
	335, 1224,
	338, 1224,
	340, 1224,
	342, 1224,
	343, 1224,
	344, 1224,
	347, 1224,
	348, 1224,
	349, 1224,
	351, 1224,
	353, 1224,
	354, 1224,
	355, 1224,
	356, 1224,
	357, 1224,
	358, 1224,
	359, 1224,
	360, 1224,
	361, 1224,
	362, 1224,
	363, 1224,
	364, 1224,
	366, 1224,
	367, 1224,
	368, 1224,
	369, 1224,
	370, 1224,
	371, 1224,
	372, 1224,
	373, 1224,
	374, 1224,
	375, 1224,
	376, 1224,
	377, 1224,
	378, 1224,
	379, 1224,
	380, 1224,
	382, 1224,
	383, 1224,
	385, 1224,
	386, 1224,
	387, 1224,
	388, 1224,
	389, 1224,
	390, 1224,
	391, 1224,
	392, 1224,
	393, 1224,
	394, 1224,
	395, 1224,
	396, 1224,
	398, 1224,
	400, 1224,
	401, 1224,
	402, 1224,
	407, 1224,
	409, 1224,
	410, 1224,
	411, 1224,
	412, 1224,
	413, 1224,
	414, 1224,
	415, 1224,
	416, 1224,
	417, 1224,
	419, 1224,
	420, 1224,
	421, 1224,
	423, 1224,
	424, 1224,
	425, 1224,
	426, 1224,
	427, 1224,
	428, 1224,
	430, 1224,
	431, 1224,
	432, 1224,
	433, 1224,
	434, 1224,
	435, 1224,
	436, 1224,
	437, 1224,
	438, 1224,
	439, 1224,
	440, 1224,
	442, 1224,
	443, 1224,
	444, 1224,
	445, 1224,
	446, 1224,
	447, 1224,
	449, 1224,
	450, 1224,
	451, 1224,
	452, 1224,
	453, 1224,
	454, 1224,
	456, 1224,
	457, 1224,
	458, 1224,
	459, 1224,
	460, 1224,
	461, 1224,
	462, 1224,
	464, 1224,
	466, 1224,
	467, 1224,
	468, 1224,
	469, 1224,
	470, 1224,
	471, 1224,
	472, 1224,
	473, 1224,
	474, 1224,
	475, 1224,
	476, 1224,
	477, 1224,
	478, 1224,
	479, 1224,
	480, 1224,
	481, 1224,
	483, 1224,
	484, 1224,
	486, 1224,
	487, 1224,
	489, 1224,
	490, 1224,
	491, 1224,
	492, 1224,
	493, 1224,
	494, 1224,
	495, 1224,
	496, 1224,
	497, 1224,
	499, 1224,
	500, 1224,
	501, 1224,
	502, 1224,
	503, 1224,
	505, 1224,
	507, 1224,
	508, 1224,
	509, 1224,
	510, 1224,
	511, 1224,
	512, 1224,
	514, 1224,
	515, 1224,
	516, 1224,
	517, 1224,
	519, 1224,
	520, 1224,
	523, 1224,
	524, 1224,
	525, 1224,
	526, 1224,
	527, 1224,
	528, 1224,
	529, 1224,
	531, 1224,
	534, 1224,
	535, 1224,
	536, 1224,
	537, 1224,
	538, 1224,
	539, 1224,
	541, 1224,
	542, 1224,
	543, 1224,
	544, 1224,
	550, 1224,
	551, 1224,
	552, 1224,
	553, 1224,
	554, 1224,
	555, 1224,
	-2, 0,
	-1, 1559,
	1, 519,
	579, 519,
	581, 519,
	583, 519,
	-2, 1447,
	-1, 1562,
	4, 2595,
	11, 2595,
	12, 2595,
	14, 2595,
	15, 2595,
	16, 2595,
	17, 2595,
	18, 2595,
	19, 2595,
	21, 2595,
	22, 2595,
	23, 2595,
	24, 2595,
	25, 2595,
	26, 2595,
	27, 2595,
	28, 2595,
	30, 2595,
	31, 2595,
	34, 2595,
	35, 2595,
	37, 2595,
	39, 2595,
	42, 2595,
	43, 2595,
	45, 2595,
	46, 2595,
	47, 2595,
	48, 2595,
	49, 2595,
	50, 2595,
	51, 2595,
	52, 2595,
	54, 2595,
	55, 2595,
	56, 2595,
	57, 2595,
	59, 2595,
	60, 2595,
	61, 2595,
	62, 2595,
	63, 2595,
	64, 2595,
	65, 2595,
	69, 2595,
	70, 2595,
	71, 2595,
	72, 2595,
	74, 2595,
	75, 2595,
	76, 2595,
	77, 2595,
	80, 2595,
	81, 2595,
	82, 2595,
	83, 2595,
	84, 2595,
	85, 2595,
	86, 2595,
	87, 2595,
	89, 2595,
	90, 2595,
	91, 2595,
	92, 2595,
	93, 2595,
	95, 2595,
	96, 2595,
	97, 2595,
	98, 2595,
	99, 2595,
	100, 2595,
	101, 2595,
	102, 2595,
	104, 2595,
	105, 2595,
	106, 2595,
	107, 2595,
	108, 2595,
	109, 2595,
	110, 2595,
	118, 2595,
	119, 2595,
	120, 2595,
	121, 2595,
	122, 2595,
	124, 2595,
	125, 2595,
	126, 2595,
	128, 2595,
	129, 2595,
	130, 2595,
	132, 2595,
	133, 2595,
	134, 2595,
	136, 2595,
	137, 2595,
	138, 2595,
	141, 2595,
	142, 2595,
	143, 2595,
	145, 2595,
	146, 2595,
	148, 2595,
	149, 2595,
	150, 2595,
	152, 2595,
	153, 2595,
	154, 2595,
	155, 2595,
	156, 2595,
	157, 2595,
	158, 2595,
	159, 2595,
	160, 2595,
	161, 2595,
	162, 2595,
	163, 2595,
	164, 2595,
	165, 2595,
	166, 2595,
	167, 2595,
	171, 2595,
	172, 2595,
	173, 2595,
	174, 2595,
	175, 2595,
	176, 2595,
	177, 2595,
	178, 2595,
	181, 2595,
	182, 2595,
	184, 2595,
	187, 2595,
	188, 2595,
	189, 2595,
	190, 2595,
	191, 2595,
	192, 2595,
	193, 2595,
	194, 2595,
	195, 2595,
	196, 2595,
	197, 2595,
	198, 2595,
	199, 2595,
	200, 2595,
	202, 2595,
	203, 2595,
	205, 2595,
	206, 2595,
	208, 2595,
	209, 2595,
	210, 2595,
	211, 2595,
	212, 2595,
	213, 2595,
	214, 2595,
	215, 2595,
	216, 2595,
	217, 2595,
	218, 2595,
	219, 2595,
	220, 2595,
	221, 2595,
	222, 2595,
	223, 2595,
	224, 2595,
	226, 2595,
	227, 2595,
	229, 2595,
	230, 2595,
	231, 2595,
	232, 2595,
	234, 2595,
	235, 2595,
	236, 2595,
	237, 2595,
	239, 2595,
	241, 2595,
	242, 2595,
	243, 2595,
	244, 2595,
	245, 2595,
	246, 2595,
	247, 2595,
	248, 2595,
	249, 2595,
	250, 2595,
	252, 2595,
	253, 2595,
	254, 2595,
	255, 2595,
	256, 2595,
	257, 2595,
	258, 2595,
	259, 2595,
	261, 2595,
	262, 2595,
	263, 2595,
	265, 2595,
	266, 2595,
	267, 2595,
	268, 2595,
	269, 2595,
	270, 2595,
	272, 2595,
	276, 2595,
	277, 2595,
	278, 2595,
	281, 2595,
	282, 2595,
	283, 2595,
	284, 2595,
	285, 2595,
	286, 2595,
	287, 2595,
	288, 2595,
	289, 2595,
	290, 2595,
	291, 2595,
	292, 2595,
	293, 2595,
	294, 2595,
	295, 2595,
	296, 2595,
	297, 2595,
	298, 2595,
	299, 2595,
	300, 2595,
	301, 2595,
	302, 2595,
	303, 2595,
	304, 2595,
	305, 2595,
	306, 2595,
	307, 2595,
	309, 2595,
	310, 2595,
	311, 2595,
	312, 2595,
	313, 2595,
	314, 2595,
	315, 2595,
	316, 2595,
	317, 2595,
	318, 2595,
	319, 2595,
	320, 2595,
	321, 2595,
	322, 2595,
	324, 2595,
	327, 2595,
	328, 2595,
	329, 2595,
	331, 2595,
	332, 2595,
	333, 2595,
	334, 2595,
	335, 2595,
	338, 2595,
	342, 2595,
	343, 2595,
	344, 2595,
	345, 2595,
	347, 2595,
	348, 2595,
	349, 2595,
	351, 2595,
	353, 2595,
	354, 2595,
	355, 2595,
	356, 2595,
	357, 2595,
	358, 2595,
	359, 2595,
	360, 2595,
	361, 2595,
	362, 2595,
	363, 2595,
	364, 2595,
	366, 2595,
	367, 2595,
	368, 2595,
	369, 2595,
	370, 2595,
	371, 2595,
	372, 2595,
	373, 2595,
	374, 2595,
	375, 2595,
	376, 2595,
	377, 2595,
	378, 2595,
	379, 2595,
	380, 2595,
	382, 2595,
	383, 2595,
	385, 2595,
	386, 2595,
	387, 2595,
	388, 2595,
	389, 2595,
	390, 2595,
	391, 2595,
	392, 2595,
	393, 2595,
	394, 2595,
	395, 2595,
	396, 2595,
	398, 2595,
	400, 2595,
	401, 2595,
	402, 2595,
	407, 2595,
	408, 2595,
	409, 2595,
	410, 2595,
	411, 2595,
	412, 2595,
	413, 2595,
	414, 2595,
	415, 2595,
	416, 2595,
	417, 2595,
	419, 2595,
	420, 2595,
	421, 2595,
	422, 2595,
	423, 2595,
	424, 2595,
	425, 2595,
	426, 2595,
	427, 2595,
	428, 2595,
	429, 2595,
	430, 2595,
	431, 2595,
	432, 2595,
	433, 2595,
	434, 2595,
	435, 2595,
	436, 2595,
	437, 2595,
	438, 2595,
	439, 2595,
	440, 2595,
	442, 2595,
	443, 2595,
	444, 2595,
	445, 2595,
	446, 2595,
	447, 2595,
	449, 2595,
	450, 2595,
	451, 2595,
	452, 2595,
	453, 2595,
	454, 2595,
	455, 2595,
	456, 2595,
	457, 2595,
	458, 2595,
	459, 2595,
	460, 2595,
	461, 2595,
	462, 2595,
	464, 2595,
	466, 2595,
	467, 2595,
	468, 2595,
	469, 2595,
	470, 2595,
	471, 2595,
	472, 2595,
	473, 2595,
	474, 2595,
	475, 2595,
	476, 2595,
	477, 2595,
	478, 2595,
	479, 2595,
	480, 2595,
	481, 2595,
	483, 2595,
	484, 2595,
	486, 2595,
	487, 2595,
	489, 2595,
	490, 2595,
	491, 2595,
	492, 2595,
	493, 2595,
	494, 2595,
	495, 2595,
	496, 2595,
	497, 2595,
	499, 2595,
	500, 2595,
	501, 2595,
	502, 2595,
	503, 2595,
	505, 2595,
	507, 2595,
	508, 2595,
	509, 2595,
	510, 2595,
	511, 2595,
	512, 2595,
	514, 2595,
	515, 2595,
	516, 2595,
	517, 2595,
	519, 2595,
	520, 2595,
	523, 2595,
	524, 2595,
	525, 2595,
	526, 2595,
	527, 2595,
	528, 2595,
	529, 2595,
	531, 2595,
	534, 2595,
	535, 2595,
	536, 2595,
	537, 2595,
	538, 2595,
	539, 2595,
	541, 2595,
	542, 2595,
	543, 2595,
	544, 2595,
	550, 2595,
	551, 2595,
	552, 2595,
	553, 2595,
	554, 2595,
	555, 2595,
	556, 2595,
	558, 2595,
	561, 2595,
	562, 2595,
	563, 2595,
	564, 2595,
	565, 2595,
	566, 2595,
	568, 2595,
	569, 2595,
	570, 2595,
	571, 2595,
	572, 2595,
	573, 2595,
	574, 2595,
	575, 2595,
	576, 2595,
	578, 2595,
	581, 2595,
	582, 2595,
	584, 2595,
	585, 2595,
	-2, 0,
	-1, 1567,
	186, 2479,
	504, 2479,
	563, 2479,
	582, 2479,
	-2, 0,
	-1, 1616,
	387, 825,
	447, 825,
	487, 825,
	509, 825,
	-2, 0,
	-1, 1643,
	1, 820,
	579, 820,
	581, 820,
	583, 820,
	-2, 0,
	-1, 1644,
	1, 858,
	579, 858,
	581, 858,
	583, 858,
	-2, 0,
	-1, 1645,
	1, 866,
	579, 866,
	581, 866,
	583, 866,
	-2, 0,
	-1, 1648,
	1, 829,
	579, 829,
	581, 829,
	583, 829,
	-2, 0,
	-1, 1650,
	1, 833,
	579, 833,
	581, 833,
	583, 833,
	-2, 0,
	-1, 1656,
	1, 840,
	579, 840,
	581, 840,
	583, 840,
	-2, 0,
	-1, 1685,
	1, 2541,
	579, 2541,
	581, 2541,
	582, 2541,
	583, 2541,
	-2, 892,
	-1, 1686,
	1, 2476,
	579, 2476,
	581, 2476,
	582, 2476,
	583, 2476,
	-2, 893,
	-1, 1704,
	1, 1338,
	583, 1338,
	-2, 1343,
	-1, 1707,
	170, 1490,
	183, 1490,
	271, 1490,
	336, 1490,
	-2, 1428,
	-1, 1801,
	151, 1449,
	170, 1449,
	183, 1449,
	238, 1449,
	271, 1449,
	336, 1449,
	346, 1449,
	521, 1449,
	-2, 1891,
	-1, 1861,
	581, 2041,
	-2, 0,
	-1, 1896,
	151, 1449,
	170, 1449,
	183, 1449,
	238, 1449,
	271, 1449,
	336, 1449,
	346, 1449,
	521, 1449,
	-2, 1577,
	-1, 1945,
	580, 1718,
	-2, 1706,
	-1, 2023,
	1, 648,
	583, 648,
	-2, 1343,
	-1, 2149,
	220, 240,
	-2, 2188,
	-1, 2150,
	220, 241,
	-2, 285,
	-1, 2254,
	1, 822,
	579, 822,
	581, 822,
	583, 822,
	-2, 0,
	-1, 2255,
	1, 860,
	579, 860,
	581, 860,
	583, 860,
	-2, 0,
	-1, 2256,
	1, 868,
	579, 868,
	581, 868,
	583, 868,
	-2, 0,
	-1, 2290,
	1, 842,
	579, 842,
	581, 842,
	583, 842,
	-2, 0,
	-1, 2343,
	427, 1517,
	428, 1517,
	-2, 1751,
	-1, 2374,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1771,
	-1, 2375,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1772,
	-1, 2376,
	96, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1773,
	-1, 2377,
	96, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1774,
	-1, 2378,
	96, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1775,
	-1, 2379,
	96, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1776,
	-1, 2380,
	96, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1777,
	-1, 2381,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1778,
	-1, 2393,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1790,
	-1, 2394,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1791,
	-1, 2395,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1792,
	-1, 2398,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1797,
	-1, 2404,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1801,
	-1, 2406,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1809,
	-1, 2407,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1810,
	-1, 2408,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1811,
	-1, 2409,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1812,
	-1, 2545,
	5, 2192,
	186, 2052,
	580, 2189,
	-2, 2180,
	-1, 2546,
	186, 2053,
	-2, 2546,
	-1, 2547,
	186, 2054,
	-2, 2375,
	-1, 2548,
	186, 2055,
	-2, 2263,
	-1, 2549,
	186, 2056,
	-2, 2316,
	-1, 2550,
	186, 2057,
	-2, 2360,
	-1, 2551,
	186, 2058,
	-2, 2474,
	-1, 2552,
	186, 2059,
	-2, 1874,
	-1, 2622,
	1, 1578,
	2, 1578,
	107, 1578,
	151, 1578,
	170, 1578,
	183, 1578,
	187, 1578,
	204, 1578,
	207, 1578,
	234, 1578,
	238, 1578,
	249, 1578,
	267, 1578,
	271, 1578,
	310, 1578,
	336, 1578,
	340, 1578,
	346, 1578,
	418, 1578,
	422, 1578,
	521, 1578,
	532, 1578,
	547, 1578,
	548, 1578,
	549, 1578,
	559, 1578,
	579, 1578,
	581, 1578,
	583, 1578,
	585, 1578,
	-2, 1577,
	-1, 2635,
	580, 2161,
	-2, 2175,
	-1, 2637,
	1, 301,
	547, 301,
	-2, 1476,
	-1, 2662,
	580, 1717,
	-2, 1707,
	-1, 2839,
	1, 1199,
	579, 1199,
	581, 1199,
	583, 1199,
	-2, 1476,
	-1, 3007,
	341, 1520,
	-2, 2585,
	-1, 3008,
	341, 1521,
	-2, 2460,
	-1, 3012,
	427, 2118,
	428, 2118,
	-2, 1872,
	-1, 3013,
	427, 2122,
	428, 2122,
	-2, 1873,
	-1, 3014,
	427, 2119,
	428, 2119,
	-2, 1872,
	-1, 3015,
	427, 2123,
	428, 2123,
	-2, 1873,
	-1, 3028,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1799,
	-1, 3029,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1803,
	-1, 3035,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1805,
	-1, 3275,
	1, 645,
	579, 645,
	581, 645,
	583, 645,
	-2, 1343,
	-1, 3429,
	44, 2153,
	-2, 963,
	-1, 3434,
	1, 1199,
	579, 1199,
	581, 1199,
	583, 1199,
	-2, 1476,
	-1, 3539,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1807,
	-1, 3546,
	243, 0,
	245, 0,
	327, 0,
	-2, 1826,
	-1, 3613,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1855,
	-1, 3614,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1856,
	-1, 3615,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1857,
	-1, 3619,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1861,
	-1, 3620,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1862,
	-1, 3621,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1863,
	-1, 3667,
	580, 2162,
	-2, 2176,
	-1, 3833,
	582, 2703,
	-2, 1402,
	-1, 3891,
	243, 0,
	245, 0,
	327, 0,
	-2, 1827,
	-1, 3894,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1830,
	-1, 3895,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1832,
	-1, 3992,
	582, 2177,
	-2, 1234,
	-1, 4132,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1831,
	-1, 4133,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1833,
	-1, 4144,
	243, 0,
	-2, 1864,
	-1, 4315,
	243, 0,
	-2, 1865,
	-1, 4504,
	51, 0,
	217, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 2549,
}

const sqlPrivate = 57344

const sqlLast = 122988

var sqlAct = [...]int{
	264, 4497, 3418, 4686, 4600, 4237, 2904, 2917, 3186, 4556,
	3417, 4377, 4190, 4347, 4355, 4485, 4503, 4514, 4627, 2071,
	4472, 4496, 4398, 4456, 4515, 1202, 4373, 3874, 4516, 2146,
	4569, 4268, 4453, 4436, 4176, 3578, 4244, 4319, 4084, 1213,
	2789, 4089, 1468, 3531, 4195, 4153, 4050, 4502, 3825, 4121,
	1035, 1281, 2353, 3817, 4031, 4064, 4071, 3301, 2769, 3021,
	4073, 3973, 4253, 1086, 3762, 1274, 1285, 3989, 3451, 2005,
	4282, 1716, 2230, 2727, 785, 2421, 3988, 1932, 4094, 3798,
	3784, 3445, 3782, 2361, 3403, 3413, 3304, 2801, 2926, 4149,
	1902, 3490, 2577, 2939, 2354, 1345, 3492, 2874, 2893, 2863,
	785, 752, 2928, 2079, 3670, 3229, 3209, 3201, 3169, 1026,
	1624, 3873, 860, 2890, 3192, 2936, 2919, 2888, 3359, 1437,
	2228, 2905, 3930, 2140, 3190, 2925, 2141, 4601, 2729, 2090,
	1871, 1034, 173, 3323, 2358, 3168, 2615, 1847, 4320, 3298,
	2465, 2434, 2194, 3638, 1079, 1444, 1279, 1809, 2867, 2935,
	1523, 2463, 2614, 780, 2136, 2117, 2124, 1583, 3005, 4,
	2816, 2059, 2875, 1085, 1933, 1193, 1083, 2063, 1704, 1328,
	1253, 258, 2003, 2595, 2454, 2418, 1872, 2768, 3236, 1090,
	2049, 2574, 2342, 2325, 3415, 1581, 1088, 2323, 1276, 3286,
	782, 1560, 2647, 2898, 1264, 1526, 2181, 4399, 786, 2711,
	1314, 683, 2646, 787, 1881, 2929, 2457, 2585, 2604, 257,
	1196, 1175, 1891, 2541, 2507, 1842, 2435, 107, 1888, 1717,
	1794, 182, 1718, 2324, 173, 2617, 2326, 1267, 1656, 1643,
	746, 1210, 734, 1463, 2180, 1192, 1558, 183, 2207, 2078,
	1551, 2347, 4557, 1133, 1064, 791, 1981, 1978, 2221, 686,
	44, 43, 853, 41, 32, 30, 694, 28, 922, 1173,
	1198, 1723, 3056, 1703, 1474, 942, 3652, 3052, 3653, 3188,
	1323, 791, 709, 1994, 1994, 669, 4699, 4689, 1081, 691,
	2594, 3470, 834, 794, 1030, 1467, 1030, 1649, 1994, 1994,
	875, 155, 1994, 1994, 1205, 4674, 2229, 4673, 3461, 2594,
	72, 2594, 46, 45, 4663, 3259, 4645, 3460, 2155, 794,
	4194, 4643, 4588, 3258, 1323, 4194, 2155, 73, 1062, 4545,
	150, 2587, 1231, 4546, 4538, 1731, 1732, 4536, 2594, 3470,
	4533, 2594, 4530, 77, 4534, 4500, 4531, 2155, 4499, 2155,
	3642, 256, 2155, 4498, 67, 1190, 4493, 2015, 72, 1762,
	2015, 48, 3020, 152, 4492, 4483, 1734, 4481, 2015, 4194,
	4478, 4194, 4451, 4423, 4256, 73, 4194, 2653, 4416, 2594,
	4415, 47, 2594, 86, 2594, 1208, 4410, 4424, 4409, 4403,
	4194, 77, 4194, 2155, 1590, 4369, 4317, 2649, 4299, 4042,
	2653, 1733, 3860, 4296, 1204, 1011, 3244, 2155, 3065, 50,
	68, 4293, 1031, 4246, 3066, 4194, 4210, 4247, 51, 4321,
	2155, 1010, 4209, 57, 4201, 4200, 2155, 153, 2155, 4194,
	4193, 86, 4160, 2155, 4194, 49, 2155, 106, 4312, 4300,
	4134, 4113, 92, 103, 2653, 2015, 4256, 4102, 4026, 92,
	1020, 3470, 2594, 4011, 2015, 3642, 1025, 2594, 1176, 1176,
	3893, 3841, 2672, 3835, 2653, 3487, 1576, 3487, 3796, 3662,
	3660, 858, 3797, 3663, 3661, 3645, 1731, 1732, 1476, 2594,
	2586, 52, 1774, 1775, 1776, 106, 1224, 2012, 3562, 4082,
	92, 103, 2155, 1177, 3558, 4042, 4012, 3486, 2594, 93,
	1762, 3487, 3477, 3860, 3185, 1739, 3478, 1734, 2594, 3180,
	1179, 3179, 1180, 2594, 1488, 2594, 1780, 3132, 3106, 3098,
	3096, 3133, 3107, 3099, 2594, 3067, 2943, 2915, 1482, 2594,
	2015, 2217, 2914, 2594, 1475, 3055, 2217, 2695, 2460, 1731,
	1732, 2594, 1733, 2671, 2652, 2644, 3478, 93, 2653, 2594,
	1761, 1763, 1753, 2792, 2710, 2028, 2638, 1731, 1732, 1206,
	2155, 1750, 2593, 1762, 2216, 2083, 2594, 1225, 2217, 1993,
	1734, 228, 2009, 2012, 2869, 1476, 2154, 1731, 1732, 2811,
	2708, 1762, 1867, 1462, 3747, 3534, 3510, 1889, 1734, 2129,
	2631, 3462, 2630, 1626, 2629, 2628, 2627, 1731, 1732, 1181,
	1178, 1762, 1019, 1018, 1017, 1733, 1016, 1015, 1734, 1754,
	3463, 1467, 1014, 1013, 1009, 1008, 1007, 228, 230, 1006,
	1005, 1004, 1003, 1733, 1002, 2461, 2982, 3946, 1734, 1001,
	1000, 999, 998, 997, 1995, 1995, 1756, 1757, 1758, 1759,
	996, 995, 96, 1733, 994, 993, 1739, 1476, 920, 1995,
	1995, 919, 918, 1995, 1995, 917, 916, 915, 914, 53,
	913, 912, 911, 1733, 230, 910, 909, 229, 908, 907,
	2651, 906, 905, 56, 904, 903, 902, 901, 59, 222,
	900, 899, 1771, 898, 897, 1781, 896, 69, 223, 895,
	96, 1761, 1763, 58, 181, 99, 894, 102, 893, 892,
	891, 54, 890, 889, 888, 154, 2462, 3460, 2459, 1739,
	184, 878, 55, 229, 1225, 1476, 877, 1748, 1749, 873,
	3905, 228, 2012, 872, 866, 1487, 865, 1739, 228, 62,
	2586, 1225, 1980, 2901, 147, 1769, 228, 1290, 1088, 1481,
	852, 147, 181, 99, 851, 102, 808, 1739, 151, 807,
	1754, 806, 805, 1755, 1761, 1763, 184, 797, 796, 2490,
	795, 1088, 767, 758, 757, 1088, 756, 1739, 230, 228,
	740, 252, 1761, 1763, 251, 230, 250, 859, 249, 248,
	247, 1348, 147, 230, 246, 1348, 245, 244, 39, 1290,
	243, 242, 1761, 1763, 149, 241, 240, 239, 238, 3141,
	3142, 2476, 3683, 2682, 1993, 237, 236, 235, 234, 185,
	1088, 1327, 1088, 1754, 1088, 1332, 230, 229, 2012, 2009,
	1290, 3656, 2671, 2318, 229, 233, 232, 231, 4096, 222,
	1318, 1754, 229, 228, 3488, 3232, 222, 3078, 223, 3141,
	3142, 1651, 149, 3061, 222, 223, 1290, 2965, 2883, 2850,
	2657, 1754, 1452, 223, 2464, 1447, 2636, 185, 2621, 2057,
	184, 1892, 2474, 3, 2014, 229, 1290, 184, 1915, 4303,
	1820, 1290, 3183, 1760, 1470, 184, 1334, 222, 1212, 1088,
	230, 1088, 1850, 4521, 1730, 1290, 223, 4501, 4480, 1849,
	1466, 1088, 1594, 1088, 1755, 1735, 1736, 1737, 1738, 1740,
	1741, 1258, 1261, 4384, 4309, 228, 4301, 4148, 184, 4188,
	3184, 1853, 4324, 1532, 1535, 3156, 4103, 1850, 4081, 3955,
	1772, 1811, 3928, 3927, 1849, 3921, 1312, 1271, 3920, 229,
	3919, 3912, 3911, 3909, 1454, 3904, 2224, 3901, 1290, 3141,
	3142, 222, 3159, 3160, 3161, 1341, 1848, 1434, 1439, 2797,
	223, 3900, 230, 228, 3795, 2753, 1088, 1755, 3801, 1088,
	3687, 3686, 3889, 3685, 3666, 3141, 3142, 228, 2458, 3147,
	791, 1992, 184, 228, 3633, 1755, 3632, 3631, 3554, 3550,
	3227, 3176, 3167, 3140, 3137, 3136, 1307, 1580, 3141, 3142,
	1521, 3159, 3160, 3161, 2666, 1755, 3134, 1465, 173, 173,
	230, 229, 1464, 3105, 3104, 3103, 3100, 1595, 794, 3147,
	3097, 1442, 3077, 222, 230, 3156, 3060, 3053, 2916, 2223,
	230, 1770, 223, 2622, 1818, 2447, 1563, 1565, 4098, 1773,
	1751, 1747, 1730, 1744, 1742, 1743, 1735, 1736, 1737, 1738,
	1740, 1741, 1813, 2162, 184, 1298, 1189, 228, 1811, 229,
	2160, 1088, 1088, 1088, 1088, 1088, 1088, 1088, 3745, 2197,
	1729, 222, 1318, 229, 3156, 1318, 4693, 4637, 4636, 229,
	223, 1665, 1812, 3157, 1810, 222, 1275, 3802, 1538, 4602,
	4555, 222, 1088, 1031, 223, 4553, 1214, 3580, 1088, 2885,
	223, 4443, 184, 4376, 230, 4365, 1554, 1742, 1743, 1735,
	1736, 1737, 1738, 1740, 1741, 4362, 184, 4361, 3250, 3147,
	4360, 4341, 184, 3157, 1744, 1742, 1743, 1735, 1736, 1737,
	1738, 1740, 1741, 4323, 1440, 228, 4325, 1451, 1275, 4322,
	1708, 228, 4297, 4281, 4280, 3147, 1743, 1735, 1736, 1737,
	1738, 1740, 1741, 229, 1575, 1033, 1557, 2424, 4266, 1731,
	1732, 854, 1702, 4263, 4262, 222, 1589, 4257, 3147, 1737,
	1738, 1740, 1741, 4206, 223, 3181, 4014, 4184, 4146, 4129,
	1800, 3162, 230, 4128, 4110, 4109, 4067, 4043, 230, 72,
	1734, 857, 856, 4070, 3224, 3945, 2900, 3926, 3861, 1275,
	1275, 3855, 1600, 1088, 1088, 1088, 73, 3163, 3852, 1088,
	3802, 2430, 3733, 3732, 3718, 1617, 1210, 3717, 1210, 3715,
	3648, 3636, 77, 3157, 3545, 1733, 1798, 3158, 3489, 1652,
	3162, 229, 3471, 1348, 3437, 3372, 1869, 229, 3334, 3303,
	3252, 1088, 3082, 222, 785, 3081, 3076, 3044, 2862, 222,
	1950, 785, 223, 1856, 1290, 1855, 1854, 1851, 223, 1843,
	1731, 1732, 86, 1841, 2664, 2663, 1705, 3158, 2633, 2626,
	1713, 2592, 3157, 1712, 184, 2472, 1011, 1918, 4097, 1205,
	184, 1205, 1914, 1870, 1865, 1864, 1863, 1929, 1862, 1861,
	2884, 1734, 1010, 1707, 1976, 1852, 1860, 1859, 1858, 1857,
	1709, 1878, 858, 1838, 1837, 1836, 1835, 1834, 1923, 1031,
	1726, 1727, 1833, 1832, 1831, 1830, 106, 1829, 1828, 1827,
	1290, 92, 103, 1826, 1825, 1824, 1733, 1088, 1813, 1739,
	1799, 1290, 1899, 1925, 1875, 1876, 1797, 1792, 1552, 1306,
	1229, 228, 1220, 3951, 3897, 3682, 1323, 3659, 2489, 1088,
	3651, 173, 3064, 2655, 2624, 1348, 4164, 3953, 3141, 3142,
	1208, 3681, 1208, 2073, 1844, 1845, 1812, 3158, 3151, 3143,
	3144, 3145, 3146, 3148, 3149, 3248, 3466, 1795, 93, 1204,
	2048, 1204, 1922, 2048, 1910, 2048, 1331, 4634, 230, 1324,
	2475, 4626, 2790, 1556, 4363, 4258, 4249, 4248, 4101, 2055,
	4045, 4254, 1318, 4044, 1921, 2046, 3152, 3150, 3151, 3143,
	3144, 3145, 3146, 3148, 3149, 791, 3158, 4013, 3948, 2021,
	1176, 3864, 791, 2225, 3863, 3862, 2020, 3654, 1897, 1944,
	4304, 1900, 1890, 3805, 1926, 1031, 228, 229, 2773, 3473,
	3472, 1973, 3532, 1323, 3337, 1330, 1892, 1700, 1997, 222,
	3757, 2473, 1850, 794, 1868, 1323, 3730, 1616, 223, 1849,
	794, 991, 3102, 1919, 3101, 3026, 2755, 4302, 1326, 2126,
	1909, 1908, 2034, 1907, 1905, 1904, 1894, 1903, 3305, 1833,
	184, 1290, 1290, 230, 1822, 3366, 1833, 3070, 3420, 4567,
	3419, 1348, 3482, 1947, 228, 1930, 1625, 4187, 2023, 3153,
	3154, 3155, 4150, 1666, 1320, 992, 3152, 3150, 3151, 3143,
	3144, 3145, 3146, 3148, 3149, 2246, 2019, 1329, 2222, 4245,
	4541, 96, 4526, 4513, 3404, 2940, 1626, 1297, 1938, 2083,
	2142, 3809, 229, 3759, 1206, 3754, 1206, 3145, 3146, 3148,
	3149, 230, 3738, 3507, 222, 3273, 3188, 3582, 3153, 3154,
	3155, 2455, 4522, 223, 2662, 3152, 3150, 3151, 3143, 3144,
	3145, 3146, 3148, 3149, 1866, 1846, 2111, 2017, 2116, 3411,
	4535, 2121, 2191, 181, 99, 184, 102, 2026, 3141, 3142,
	1451, 1531, 1459, 1325, 1301, 1290, 1257, 1290, 2051, 1290,
	229, 2041, 2808, 4532, 228, 3456, 4180, 2805, 3710, 1473,
	228, 1480, 222, 1486, 4356, 1290, 1290, 2803, 859, 1819,
	2198, 223, 4085, 147, 4450, 4338, 1290, 3308, 3725, 4523,
	2089, 2923, 2897, 3396, 4585, 847, 1451, 3526, 1290, 4586,
	1290, 1290, 1290, 184, 1188, 4227, 3277, 4616, 2147, 2152,
	1321, 230, 3772, 4001, 2460, 2144, 1498, 230, 1604, 1322,
	2696, 1506, 989, 785, 791, 987, 2232, 1663, 4688, 972,
	2109, 2296, 985, 983, 4220, 2187, 3141, 3142, 1574, 2333,
	1579, 2294, 2192, 149, 1460, 4212, 4171, 1557, 3279, 980,
	1588, 1465, 1593, 4040, 2035, 2204, 1464, 1664, 185, 3249,
	229, 2714, 794, 4039, 3770, 3769, 229, 3041, 3761, 3753,
	3752, 3750, 222, 2714, 2227, 2108, 2712, 2120, 222, 3771,
	3749, 223, 3737, 3697, 3696, 3400, 2153, 223, 2712, 1735,
	1736, 1737, 1738, 1740, 1741, 2303, 3039, 848, 2331, 3399,
	3243, 2461, 3075, 184, 3074, 2250, 1507, 3073, 3072, 855,
	1088, 3030, 1088, 1650, 2024, 1313, 2814, 4015, 3147, 1088,
	2813, 2201, 1950, 1950, 1348, 1662, 1088, 1088, 1088, 1088,
	1088, 1088, 1088, 1088, 1088, 1088, 1088, 1088, 1088, 1088,
	1088, 1088, 1088, 1088, 1088, 1088, 1088, 1088, 1088, 1088,
	1088, 1088, 1088, 1088, 1088, 1088, 1088, 1088, 1088, 1088,
	1088, 2233, 1088, 2214, 1088, 1088, 1088, 1088, 2173, 2212,
	2810, 1554, 1031, 2209, 1031, 2209, 2206, 2172, 2210, 2335,
	1331, 4181, 2462, 2799, 2459, 3305, 1088, 1323, 1307, 1088,
	1088, 2218, 2788, 2219, 791, 1741, 2787, 1088, 2783, 1602,
	2782, 1088, 2322, 1088, 1088, 1331, 3147, 4617, 3336, 3364,
	2503, 1348, 2781, 2272, 2222, 2760, 2238, 1088, 1088, 1088,
	1088, 2237, 1088, 1088, 1088, 1088, 1088, 1088, 1088, 1088,
	2759, 2722, 794, 1029, 2645, 3036, 2405, 2254, 2332, 1330,
	1706, 2080, 2894, 1324, 1324, 4127, 2502, 2245, 1088, 1088,
	1088, 1088, 1088, 1088, 1088, 1088, 1088, 2190, 3037, 2455,
	2363, 1088, 3042, 2656, 1330, 2171, 2311, 2040, 2039, 2757,
	2308, 2048, 2050, 1210, 2076, 3508, 2985, 2290, 977, 1502,
	1348, 2436, 2437, 1544, 1556, 1543, 2359, 2360, 3960, 1210,
	3985, 2777, 2346, 3149, 1243, 2436, 2452, 1542, 72, 1541,
	2316, 1944, 1944, 2081, 2082, 1088, 1348, 1618, 1461, 2242,
	3157, 2330, 1647, 2770, 2771, 73, 2770, 2771, 2770, 2771,
	1028, 2498, 2321, 1515, 3981, 2320, 2334, 2327, 2703, 2319,
	2464, 77, 4621, 2077, 2333, 1011, 1205, 2731, 1011, 1011,
	2544, 2544, 2558, 2114, 2436, 2946, 2420, 2578, 2580, 3959,
	2451, 2350, 1205, 2584, 2351, 2352, 1520, 4349, 1320, 1320,
	3997, 2420, 2637, 2745, 3365, 1947, 1947, 2609, 1906, 1597,
	1699, 86, 2255, 2310, 2500, 1661, 2300, 1675, 3982, 2501,
	3003, 1910, 2504, 2988, 2505, 2506, 3516, 2601, 850, 849,
	2043, 2428, 4585, 2331, 3018, 3721, 4647, 2634, 2426, 2091,
	1938, 1938, 2259, 1899, 2432, 1031, 1290, 1290, 1711, 1679,
	1305, 858, 1646, 1626, 1031, 1647, 3713, 1208, 1031, 2449,
	1626, 2253, 2095, 2807, 2744, 106, 4622, 2211, 1030, 3515,
	92, 103, 1614, 1208, 2256, 2979, 1204, 1325, 1325, 2464,
	3568, 3038, 3276, 2623, 2458, 2600, 3141, 3142, 1348, 2734,
	886, 3040, 1204, 173, 3158, 2806, 1658, 4630, 2691, 4650,
	2804, 2540, 2553, 4038, 4574, 2685, 2717, 2658, 2569, 2582,
	2802, 2329, 3751, 2590, 2591, 1644, 4351, 1527, 2602, 2092,
	2262, 2650, 1950, 1176, 2606, 2607, 3734, 93, 1598, 3748,
	1318, 2608, 1852, 2613, 1321, 1321, 2619, 2620, 2713, 1897,
	3398, 2719, 2045, 1322, 1322, 4126, 1031, 2648, 3143, 3144,
	3145, 3146, 3148, 3149, 2987, 1646, 4519, 967, 2159, 2158,
	1348, 3569, 3017, 3362, 2809, 1525, 1287, 2780, 981, 2756,
	2307, 981, 1217, 2332, 1290, 4624, 2295, 1645, 981, 982,
	2044, 2758, 1024, 2723, 2984, 2665, 2293, 1880, 1603, 2687,
	1088, 1088, 2693, 1088, 2669, 981, 4597, 2676, 3995, 2560,
	4605, 2679, 4604, 2680, 3571, 1844, 1845, 2668, 845, 2670,
	844, 2083, 2643, 3964, 1215, 785, 3977, 1290, 681, 2716,
	2694, 3978, 3453, 2096, 4420, 765, 3779, 2263, 2800, 2718,
	3879, 1206, 2688, 2686, 3150, 3151, 3143, 3144, 3145, 3146,
	3148, 3149, 3878, 1027, 2717, 676, 2330, 1206, 1290, 2762,
	1999, 2778, 2866, 2001, 4677, 2721, 3147, 1504, 2697, 2006,
	1290, 3288, 1290, 2008, 2881, 2684, 3454, 1884, 2011, 1994,
	96, 2748, 3980, 2309, 968, 2699, 2064, 1290, 3707, 2719,
	3780, 2127, 2065, 2986, 2761, 2733, 2763, 1501, 3983, 2097,
	2098, 3010, 3011, 1676, 2701, 2736, 2739, 2779, 2845, 1275,
	2726, 1944, 1242, 2847, 2772, 2774, 2775, 2776, 3706, 2464,
	3291, 1323, 1323, 2093, 1887, 2908, 2720, 4487, 1088, 4488,
	3778, 1218, 181, 99, 1022, 102, 967, 4520, 2702, 1882,
	2937, 3375, 763, 2139, 4432, 2717, 4430, 4168, 2786, 2402,
	2966, 3722, 2967, 3965, 3453, 4628, 1275, 1885, 2700, 228,
	3996, 1024, 2464, 2791, 2094, 2785, 791, 859, 2784, 4357,
	3157, 4623, 147, 2963, 2877, 1947, 2922, 2718, 1039, 1088,
	2719, 3787, 1601, 4350, 967, 1088, 1088, 3985, 173, 2130,
	3785, 1275, 1275, 1465, 2944, 2137, 791, 2138, 2848, 2949,
	1883, 2950, 4371, 2721, 794, 2066, 230, 1023, 2860, 1024,
	1938, 2960, 3735, 1527, 978, 2871, 2912, 4418, 2990, 2870,
	2992, 3981, 2070, 3979, 2970, 3974, 2972, 2941, 2974, 3278,
	3203, 3320, 149, 1673, 794, 4518, 2732, 3032, 2892, 1677,
	1088, 1088, 3972, 730, 2903, 1227, 1088, 185, 2983, 2913,
	2924, 3976, 2419, 968, 2115, 229, 4419, 2942, 4629, 1088,
	1088, 3986, 1839, 3246, 2720, 1088, 1088, 222, 2718, 887,
	4573, 1088, 969, 3289, 2911, 3982, 223, 2427, 2099, 2910,
	1088, 1088, 1088, 1440, 2052, 2053, 1088, 3319, 4059, 2127,
	4123, 4631, 2067, 2072, 2721, 1674, 1088, 2261, 184, 2968,
	3788, 968, 2258, 2715, 2969, 1599, 3324, 1710, 2131, 1304,
	1451, 2127, 1886, 1088, 3158, 2400, 798, 3975, 2403, 3033,
	2416, 2252, 3353, 4548, 2998, 2947, 2948, 1678, 2074, 3063,
	2962, 1613, 1615, 4549, 3875, 4139, 2954, 2955, 2956, 2123,
	3345, 3009, 2971, 2841, 2973, 3000, 2975, 2714, 2999, 2414,
	764, 4596, 2103, 2086, 2100, 2720, 3326, 4470, 4461, 2346,
	3019, 3004, 2737, 2122, 4023, 879, 699, 1791, 2399, 3080,
	2446, 2605, 4651, 3058, 3059, 2068, 3354, 1030, 3062, 2993,
	2618, 3584, 2995, 4638, 4069, 3869, 3787, 3054, 3783, 3141,
	3142, 1216, 3678, 677, 3346, 3785, 2118, 2842, 766, 2106,
	1232, 3880, 762, 1088, 1088, 1088, 2104, 2087, 3528, 3001,
	1631, 970, 1088, 1088, 1088, 4678, 3352, 1088, 3031, 3325,
	867, 2074, 3202, 4378, 4122, 2081, 2082, 1088, 1210, 1348,
	1995, 4074, 4517, 1088, 3344, 1088, 4584, 2840, 3800, 3195,
	3196, 969, 4582, 4397, 1210, 1451, 2102, 2085, 4265, 3823,
	4075, 3441, 2179, 1275, 1877, 2119, 3143, 3144, 3145, 3146,
	3148, 3149, 1348, 971, 3786, 4572, 2083, 1230, 3069, 678,
	1223, 3282, 1721, 3977, 1210, 2112, 1884, 1348, 3978, 668,
	1720, 3924, 1031, 3876, 2349, 2084, 1720, 2036, 2410, 969,
	1451, 1205, 1451, 1715, 1950, 3622, 4656, 3217, 1348, 3230,
	4060, 4203, 4202, 2317, 4274, 3788, 2411, 1205, 2033, 3178,
	3237, 2412, 1290, 1290, 4337, 2417, 3824, 679, 2107, 680,
	2134, 2339, 3765, 1887, 1047, 3197, 4000, 3709, 3242, 3980,
	3299, 3442, 3433, 3999, 3295, 1088, 2882, 1205, 2603, 2876,
	2864, 3207, 2205, 2199, 2193, 3983, 2185, 2165, 3211, 1088,
	3256, 3672, 2073, 2401, 3567, 1495, 1885, 3226, 3205, 3147,
	4124, 799, 800, 1290, 1234, 4379, 3693, 3637, 1950, 4437,
	4547, 3529, 1208, 739, 2132, 4400, 4169, 3966, 1021, 4090,
	970, 1719, 3826, 2031, 3231, 3274, 1088, 1719, 1208, 3293,
	2073, 1204, 3267, 3173, 3174, 3175, 2764, 2069, 3292, 3280,
	1290, 3206, 3223, 3189, 3235, 3673, 3215, 1204, 2301, 1318,
	880, 881, 3218, 3219, 2133, 2029, 3204, 2861, 1208, 1720,
	1245, 3500, 1290, 2032, 1290, 3283, 3284, 4243, 970, 2243,
	3493, 3674, 971, 3671, 2126, 3310, 4241, 1204, 3315, 4183,
	1348, 3317, 2126, 3212, 3253, 3254, 1721, 3255, 3311, 2738,
	3309, 1290, 1721, 3313, 3296, 1290, 2340, 4072, 3247, 3239,
	3240, 3241, 3650, 3157, 3307, 868, 869, 3339, 3306, 3786,
	3979, 3881, 3367, 1944, 3024, 3221, 3925, 3222, 1290, 3002,
	971, 3623, 3216, 1791, 3200, 1290, 3199, 1290, 1648, 3264,
	3624, 1348, 3210, 2642, 2413, 2641, 3268, 2752, 785, 4655,
	2640, 802, 801, 2639, 2415, 3275, 3792, 2868, 3986, 1290,
	1028, 1886, 4344, 4191, 3500, 1536, 4051, 3378, 3281, 3380,
	1719, 1290, 3384, 3493, 3214, 3495, 3390, 3373, 1550, 1537,
	2105, 3998, 3300, 4238, 1548, 885, 2742, 1947, 1210, 2796,
	3494, 3716, 3357, 3343, 3361, 3449, 1206, 1944, 1632, 2873,
	3327, 3483, 1922, 3882, 2203, 3407, 2115, 3432, 4380, 3694,
	803, 804, 1206, 1290, 1290, 3335, 2765, 2766, 4107, 4593,
	4375, 4166, 1938, 2945, 3348, 3447, 3416, 2851, 2846, 2844,
	2854, 3351, 2856, 2231, 2113, 1607, 1290, 4178, 3341, 3368,
	4440, 3349, 1206, 3440, 4345, 3350, 3374, 882, 883, 2677,
	4447, 1205, 3376, 3397, 4434, 2681, 3387, 3158, 3931, 3639,
	3355, 1947, 3458, 2471, 2937, 4192, 3393, 1695, 3495, 2692,
	2596, 4465, 4595, 2937, 2110, 1348, 2899, 3675, 1348, 2899,
	3213, 4179, 1561, 3494, 4537, 3238, 1697, 4106, 2306, 3385,
	1694, 2305, 3402, 3391, 3405, 2762, 1938, 4364, 3171, 3401,
	3443, 3409, 870, 871, 2599, 2114, 3363, 4145, 738, 3429,
	3428, 1088, 3450, 3430, 1451, 1451, 1692, 1088, 1088, 791,
	3923, 1088, 1088, 1088, 1670, 1088, 4441, 1668, 3502, 3791,
	4346, 3170, 1208, 3544, 1088, 1950, 173, 173, 3485, 3481,
	3455, 1642, 1640, 1088, 3505, 2598, 1088, 1638, 3522, 3464,
	2597, 1204, 1348, 3501, 1636, 2976, 1634, 794, 3504, 3479,
	3257, 1088, 3524, 3135, 3467, 3468, 1628, 1623, 1621, 1348,
	3043, 3491, 3512, 3521, 3513, 2865, 3514, 1546, 2798, 1950,
	1950, 1088, 1088, 2754, 1088, 1088, 1088, 2667, 2312, 1451,
	1917, 1913, 3496, 3497, 3498, 3499, 3152, 3150, 3151, 3143,
	3144, 3145, 3146, 3148, 3149, 3530, 3425, 1698, 1031, 1585,
	3523, 1715, 3547, 3448, 2190, 1880, 1549, 2292, 3457, 2981,
	3518, 3503, 1547, 884, 2980, 2952, 1088, 2328, 1657, 2267,
	1088, 2184, 1950, 1950, 1088, 1088, 1088, 1088, 1088, 1088,
	1088, 1088, 1088, 1088, 1088, 1088, 1088, 1088, 1088, 1088,
	1088, 1088, 1088, 3527, 1088, 3469, 3596, 3556, 3557, 2164,
	3377, 1088, 1088, 1950, 1977, 1823, 1596, 2470, 1088, 1519,
	1696, 4512, 4024, 3756, 1693, 4433, 3755, 4025, 4010, 1088,
	4088, 4291, 3597, 979, 3552, 3496, 3497, 3498, 3499, 4030,
	1210, 1210, 3509, 4570, 1088, 1884, 3970, 3822, 3813, 4561,
	1691, 3768, 3728, 3519, 3563, 3726, 1206, 3574, 1669, 3579,
	3708, 1667, 3525, 3586, 1944, 3570, 3572, 3573, 3564, 1275,
	4083, 3436, 3431, 1348, 3421, 1641, 1639, 2895, 3594, 3446,
	3593, 1637, 3595, 3668, 4283, 2887, 2880, 2872, 1635, 2858,
	1633, 2843, 1887, 2359, 3587, 2683, 3655, 4284, 2678, 2163,
	1627, 1622, 1620, 1205, 1205, 2161, 2143, 1882, 1944, 1944,
	3634, 1545, 2128, 2101, 3599, 2088, 3601, 3626, 2075, 1724,
	1088, 2016, 2013, 2010, 2007, 1885, 3676, 3677, 1947, 2002,
	4285, 2000, 1996, 1987, 1924, 3022, 4586, 4074, 1185, 2037,
	3688, 3689, 3690, 3388, 1088, 3627, 2359, 3602, 2291, 2137,
	2315, 3641, 2996, 173, 3646, 3647, 4075, 2994, 4475, 4112,
	4105, 1944, 1944, 1938, 4104, 1186, 4037, 3956, 1883, 2938,
	1451, 2056, 1947, 1947, 1500, 1088, 1088, 3630, 2714, 3643,
	3644, 3635, 2714, 4276, 1208, 1208, 984, 986, 988, 3834,
	2743, 4287, 1944, 2712, 4269, 2083, 2313, 2740, 3657, 1689,
	1690, 2257, 1266, 1204, 1204, 4474, 726, 1938, 1938, 2202,
	1984, 2287, 1265, 1088, 4286, 3658, 2286, 4002, 1096, 2264,
	4032, 1619, 4311, 1731, 1732, 1947, 1947, 2746, 3932, 1725,
	3023, 4288, 3910, 3684, 3260, 3261, 3698, 1290, 1731, 1732,
	1290, 3322, 2314, 2747, 2767, 1728, 1299, 1233, 4589, 3702,
	4580, 682, 4542, 2857, 1734, 2289, 1947, 1950, 3810, 2747,
	1938, 1938, 3389, 253, 260, 260, 260, 3739, 671, 672,
	3712, 687, 671, 687, 697, 1187, 1984, 737, 3743, 778,
	1886, 755, 3744, 3746, 3766, 3294, 761, 1984, 1290, 1733,
	2186, 1938, 260, 835, 1088, 1266, 3731, 3736, 1266, 1310,
	2805, 3764, 1210, 1088, 1733, 3760, 693, 2803, 3836, 2812,
	665, 2795, 864, 1290, 1290, 1290, 2751, 2793, 260, 3843,
	2749, 2762, 3342, 3763, 2794, 4425, 3758, 3827, 4391, 2750,
	1290, 3790, 4385, 4343, 4330, 3806, 4260, 4236, 4172, 4170,
	4167, 3820, 3812, 3799, 3356, 1290, 3358, 3665, 3435, 2902,
	2583, 1348, 2022, 1931, 3828, 3807, 4625, 4189, 1206, 1206,
	3968, 3831, 4467, 3781, 3967, 1205, 3789, 4468, 3331, 3332,
	3705, 3290, 3333, 3386, 2908, 1348, 3245, 3392, 1088, 1088,
	4387, 3859, 4654, 3777, 1088, 1088, 1950, 1467, 4599, 1088,
	1088, 3811, 1088, 2612, 3793, 4467, 1088, 3902, 3814, 3830,
	4468, 2937, 3141, 3142, 1731, 1732, 2466, 1088, 2706, 2707,
	2704, 2705, 3369, 3370, 1606, 3829, 3371, 3680, 2706, 3816,
	1605, 3300, 3837, 1088, 3832, 2704, 3838, 3842, 3775, 3848,
	3849, 2499, 3819, 3883, 4261, 3865, 1944, 3854, 4221, 3856,
	3853, 671, 671, 3857, 3850, 1672, 1208, 4034, 1671, 260,
	4029, 4028, 3898, 3679, 3575, 3382, 3379, 1817, 1816, 4640,
	4606, 4429, 3884, 3892, 3866, 1204, 4428, 4427, 3872, 4326,
	4239, 4289, 4216, 4165, 3877, 4162, 4062, 4290, 3263, 3952,
	3858, 3265, 3266, 1210, 3896, 3840, 3269, 3794, 3270, 3724,
	3271, 1210, 3719, 3439, 3438, 1348, 3316, 1348, 3262, 3131,
	1947, 3130, 3867, 3129, 1210, 3128, 3127, 3126, 3125, 3124,
	3123, 3122, 3121, 3120, 3119, 1290, 1290, 3118, 3117, 3116,
	3115, 3114, 3113, 3112, 1348, 3111, 3110, 3109, 3108, 3230,
	2978, 3937, 2959, 2958, 2957, 1938, 2886, 2859, 2741, 2674,
	2660, 1561, 2659, 1561, 2431, 2288, 1205, 2285, 3922, 2284,
	2283, 2282, 2281, 2200, 1205, 2174, 1210, 2170, 1210, 2169,
	1275, 2168, 2167, 2166, 3847, 1944, 1990, 1205, 1989, 1988,
	1986, 1688, 1687, 1629, 1514, 1513, 1512, 1511, 1290, 1510,
	1509, 3990, 3940, 3990, 1508, 1503, 1499, 1497, 1348, 1496,
	1290, 1339, 3943, 1290, 1338, 3936, 1803, 3933, 1337, 3939,
	1808, 3994, 1348, 1336, 1335, 3938, 3934, 3935, 173, 3944,
	3957, 3958, 1303, 2190, 3947, 4005, 4006, 1302, 1252, 1205,
	1206, 1205, 1251, 1250, 1249, 1248, 4004, 1208, 1247, 1947,
	1246, 1244, 1290, 1290, 3993, 1208, 3929, 3969, 1239, 1238,
	4003, 1237, 1236, 1235, 1168, 2027, 1204, 990, 1208, 976,
	4348, 1290, 3984, 2304, 1204, 1681, 91, 1505, 3962, 821,
	85, 2135, 3723, 1348, 1938, 947, 4464, 1204, 1290, 1489,
	4370, 829, 4449, 4049, 3808, 3318, 2815, 4036, 2266, 1630,
	2268, 3225, 4033, 4047, 4035, 2625, 4417, 3906, 3079, 4027,
	4318, 4138, 2469, 1210, 1821, 3182, 4080, 87, 1072, 1118,
	1208, 4058, 1208, 1290, 1290, 1290, 4041, 4091, 4057, 3971,
	3711, 4052, 2927, 4022, 4046, 4055, 1348, 4054, 3990, 1204,
	1935, 1204, 1937, 1038, 1351, 4486, 2038, 1078, 1088, 1088,
	1088, 2054, 2047, 4019, 4092, 2661, 2543, 1095, 4111, 1092,
	4053, 1939, 4095, 4068, 1941, 1094, 1348, 1093, 1940, 4077,
	4086, 1088, 1840, 1091, 1088, 1088, 1205, 1934, 3818, 2906,
	3465, 1555, 1553, 949, 1088, 4008, 2042, 1950, 4093, 4108,
	2425, 2453, 1088, 1088, 3068, 1814, 1053, 1074, 4017, 2450,
	1228, 4020, 1063, 1052, 4130, 3208, 4100, 1348, 3187, 1290,
	4048, 3452, 3664, 4115, 2338, 839, 4079, 4114, 3138, 2456,
	4119, 1206, 1219, 2566, 2559, 2555, 3272, 2896, 1701, 1206,
	4152, 4125, 1793, 2907, 1333, 1348, 1056, 2423, 1805, 3048,
	2348, 3459, 1206, 1088, 3228, 2654, 4471, 3583, 2178, 1184,
	1183, 1226, 1088, 1182, 4455, 4452, 2125, 1208, 3851, 3414,
	1088, 2030, 1950, 2698, 4147, 4141, 1783, 3422, 1068, 4135,
	1450, 1088, 3193, 3484, 1088, 1516, 1204, 760, 4196, 1080,
	1782, 4117, 2836, 2835, 4158, 4159, 1088, 4340, 1319, 1317,
	4174, 1316, 4161, 1348, 1206, 1315, 1206, 4199, 4613, 4676,
	1290, 3720, 227, 3016, 1722, 1290, 1290, 1714, 224, 226,
	225, 4063, 1221, 3669, 3234, 4540, 3741, 3406, 4175, 4173,
	2343, 23, 22, 21, 4215, 111, 4182, 42, 20, 127,
	146, 145, 119, 144, 143, 142, 141, 148, 140, 4251,
	139, 134, 138, 137, 136, 1241, 135, 133, 131, 1348,
	132, 4226, 1290, 126, 4242, 2190, 130, 260, 129, 260,
	260, 128, 1270, 260, 1280, 125, 1944, 124, 123, 122,
	1210, 1210, 121, 1275, 4213, 1300, 4223, 120, 118, 4259,
	4217, 117, 3776, 4231, 755, 116, 4232, 115, 114, 1088,
	1088, 4270, 4240, 4235, 113, 3990, 3990, 112, 751, 748,
	4275, 3416, 4255, 61, 60, 110, 1088, 1950, 260, 109,
	260, 260, 1270, 4250, 260, 260, 1280, 19, 4271, 40,
	14, 65, 66, 4273, 18, 13, 4205, 260, 35, 1469,
	1947, 1206, 4095, 1205, 1205, 4272, 4267, 4278, 4292, 4277,
	90, 1944, 101, 4230, 100, 1088, 4294, 4295, 1088, 36,
	1493, 98, 2151, 97, 34, 1210, 17, 4306, 16, 2561,
	15, 95, 94, 4234, 33, 1938, 31, 1210, 11, 1518,
	9, 8, 1280, 4336, 3815, 37, 260, 260, 1901, 1270,
	3990, 4307, 4308, 12, 4316, 5, 3691, 178, 4228, 177,
	3692, 180, 3990, 176, 179, 89, 4335, 175, 755, 2073,
	260, 260, 174, 88, 29, 1947, 10, 170, 4310, 1088,
	1088, 4218, 4252, 3804, 1208, 1208, 4353, 4374, 1205, 1088,
	4358, 80, 4352, 864, 1210, 172, 171, 1210, 169, 168,
	1205, 1290, 167, 1204, 1204, 3727, 81, 3729, 78, 166,
	1938, 1290, 1290, 4359, 3868, 4327, 4366, 84, 165, 3990,
	4332, 79, 3990, 4368, 83, 82, 27, 6, 1290, 4382,
	4383, 64, 7, 4381, 4120, 3506, 104, 105, 4408, 38,
	76, 75, 1088, 1088, 4389, 4386, 4393, 4388, 74, 26,
	63, 4402, 1088, 1984, 1346, 4255, 1944, 1205, 1445, 25,
	1205, 211, 4406, 4407, 4404, 210, 260, 4401, 209, 1208,
	4394, 208, 3767, 4396, 207, 4413, 4405, 4414, 206, 4411,
	4412, 1208, 4279, 4442, 1561, 260, 205, 204, 1204, 199,
	198, 4446, 4298, 1088, 1088, 4422, 1088, 4426, 203, 201,
	1204, 200, 202, 197, 214, 213, 219, 218, 217, 216,
	215, 212, 221, 196, 4469, 195, 194, 192, 4454, 4457,
	1947, 188, 187, 191, 193, 190, 189, 4444, 186, 4445,
	220, 4466, 163, 164, 4421, 71, 162, 161, 1208, 160,
	159, 1208, 4491, 158, 4459, 157, 156, 70, 24, 1088,
	1088, 1088, 4494, 4463, 4495, 1938, 2, 1204, 1206, 1206,
	1204, 4476, 1, 0, 4482, 0, 0, 0, 0, 0,
	0, 4489, 0, 0, 4490, 0, 0, 0, 0, 0,
	4473, 1088, 0, 0, 0, 4458, 0, 0, 4462, 0,
	4009, 4511, 4510, 0, 4524, 0, 4529, 4508, 4509, 1451,
	0, 0, 4018, 0, 0, 4021, 2429, 0, 0, 0,
	0, 4543, 4550, 0, 0, 0, 4525, 0, 4527, 0,
	0, 1803, 0, 0, 0, 0, 4552, 4554, 0, 4566,
	4564, 0, 0, 0, 0, 1088, 0, 0, 0, 4565,
	0, 0, 0, 1206, 4551, 0, 0, 0, 0, 0,
	0, 4571, 4560, 0, 0, 1206, 0, 4558, 0, 0,
	0, 0, 0, 4076, 0, 4591, 0, 4587, 0, 4577,
	4578, 4583, 0, 0, 4581, 2565, 0, 4579, 4559, 0,
	0, 0, 2073, 671, 1210, 0, 1210, 0, 4594, 4454,
	4611, 4590, 4457, 4608, 4592, 0, 4609, 4603, 0, 1275,
	4374, 4619, 4598, 0, 260, 4620, 260, 4607, 4061, 3990,
	260, 3990, 1206, 4615, 0, 1206, 4618, 0, 3045, 3046,
	0, 4078, 0, 1469, 1270, 260, 4633, 260, 0, 0,
	0, 4614, 260, 1469, 687, 4632, 0, 0, 4635, 260,
	1469, 0, 0, 0, 4099, 4642, 0, 1205, 4641, 1205,
	4473, 4648, 0, 0, 1991, 0, 1088, 1088, 0, 0,
	4610, 4646, 4612, 4644, 0, 1088, 260, 1088, 1088, 0,
	0, 4649, 4652, 260, 0, 4639, 4661, 4667, 4658, 0,
	0, 0, 4672, 4664, 4670, 0, 4669, 4671, 4666, 4668,
	0, 0, 0, 0, 4665, 0, 0, 0, 4680, 4679,
	4675, 0, 0, 0, 4683, 4687, 4682, 3006, 0, 4684,
	4681, 4685, 0, 755, 0, 0, 0, 4691, 0, 4690,
	0, 0, 0, 0, 1088, 4695, 0, 4697, 1208, 0,
	1208, 4687, 0, 4701, 4698, 4692, 4700, 0, 0, 0,
	0, 0, 0, 4694, 0, 0, 0, 1204, 0, 1204,
	0, 2908, 72, 0, 0, 0, 0, 0, 0, 4659,
	4660, 0, 3164, 3165, 3166, 0, 0, 0, 0, 73,
	0, 4562, 4563, 0, 0, 0, 0, 4568, 0, 0,
	0, 0, 72, 0, 0, 77, 0, 2561, 2561, 0,
	0, 0, 4229, 0, 0, 0, 1916, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 4696, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1984, 1984,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 858, 0, 0, 260, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 92, 103, 0, 3141, 3142, 1984,
	3159, 3160, 3161, 0, 0, 858, 0, 0, 0, 2064,
	0, 0, 1206, 0, 1206, 2065, 0, 0, 0, 106,
	0, 0, 0, 0, 92, 103, 0, 0, 2058, 0,
	0, 0, 0, 0, 260, 0, 1984, 2831, 260, 0,
	0, 2561, 2561, 2561, 260, 0, 0, 0, 0, 0,
	260, 93, 0, 0, 0, 0, 0, 0, 1984, 1284,
	1984, 0, 0, 0, 0, 0, 260, 0, 260, 0,
	2823, 2821, 671, 3156, 260, 0, 0, 2825, 2827, 2817,
	0, 93, 0, 0, 0, 0, 755, 1984, 0, 0,
	864, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4207, 4208, 0, 0, 0,
	0, 1456, 0, 0, 0, 260, 0, 1270, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2066, 0,
	0, 0, 755, 4222, 0, 4224, 0, 4225, 0, 260,
	0, 0, 1491, 0, 0, 2070, 2265, 0, 0, 0,
	0, 260, 260, 0, 260, 4372, 260, 0, 260, 0,
	260, 0, 0, 2565, 2156, 0, 0, 3147, 1528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4392,
	0, 0, 262, 2297, 0, 0, 2298, 0, 2299, 0,
	0, 0, 0, 1569, 96, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 1582, 0, 0,
	0, 0, 0, 0, 0, 2067, 2072, 0, 0, 0,
	0, 0, 0, 0, 96, 737, 0, 0, 0, 755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2565, 2565, 0, 181, 99, 0, 102,
	0, 0, 0, 0, 0, 2819, 0, 0, 0, 0,
	1608, 0, 0, 0, 0, 0, 2833, 0, 0, 0,
	0, 3157, 0, 228, 0, 0, 181, 99, 0, 102,
	0, 859, 0, 0, 0, 0, 147, 2832, 2824, 2822,
	2826, 2828, 2818, 2820, 2834, 0, 0, 0, 2068, 0,
	0, 2830, 0, 228, 4477, 0, 0, 0, 0, 0,
	4479, 859, 0, 0, 0, 0, 147, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 4367, 1731,
	1732, 0, 0, 0, 2837, 0, 0, 0, 0, 0,
	3330, 3540, 3541, 0, 2074, 0, 149, 0, 0, 0,
	230, 0, 0, 1762, 0, 0, 0, 0, 0, 0,
	1734, 185, 0, 0, 0, 0, 0, 0, 1051, 229,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 671, 2565, 2565, 2565,
	223, 185, 0, 0, 3328, 1733, 0, 0, 2064, 229,
	0, 260, 0, 0, 2065, 1753, 0, 0, 0, 0,
	671, 222, 1566, 0, 1750, 3158, 0, 260, 0, 671,
	223, 0, 0, 0, 0, 0, 0, 2362, 0, 0,
	0, 260, 0, 0, 3329, 0, 0, 0, 0, 0,
	0, 0, 1564, 0, 0, 0, 260, 1280, 0, 0,
	0, 0, 0, 3603, 3604, 3605, 3606, 3607, 3608, 3609,
	3610, 3611, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619,
	3620, 3621, 0, 3625, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1756,
	1757, 1758, 1759, 260, 1280, 0, 687, 0, 0, 1739,
	0, 0, 0, 0, 0, 0, 2673, 2838, 0, 0,
	2561, 2561, 260, 0, 2467, 260, 2829, 2066, 0, 260,
	2069, 260, 0, 0, 0, 0, 1270, 0, 260, 260,
	0, 1280, 1280, 2689, 2070, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 1761, 1763, 0, 3153, 3154, 3155,
	0, 0, 0, 0, 3152, 3150, 3151, 3143, 3144, 3145,
	3146, 3148, 3149, 0, 0, 4539, 0, 0, 0, 0,
	1748, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 1754, 2067, 2072, 0, 260, 0, 2635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 2561, 2561, 2561, 2561, 2561, 2561, 2561, 2561,
	2561, 2561, 2561, 2561, 2561, 2561, 2561, 2561, 2561, 2561,
	2561, 0, 2561, 0, 0, 0, 0, 260, 1731, 1732,
	0, 0, 0, 0, 0, 0, 768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1762, 260, 2849, 0, 1984, 0, 0, 1734,
	0, 0, 0, 0, 0, 0, 0, 2068, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 1469, 0,
	0, 260, 0, 260, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 1733, 0, 0, 0, 0, 0,
	2891, 0, 0, 0, 1753, 0, 1760, 0, 0, 2062,
	2730, 0, 671, 2074, 0, 0, 0, 0, 0, 0,
	0, 2920, 864, 0, 2730, 2730, 0, 1755, 0, 0,
	0, 2709, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 773, 0, 0, 0, 0,
	260, 1270, 260, 2060, 0, 0, 1469, 0, 1469, 1280,
	260, 0, 0, 1270, 0, 1270, 0, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1756, 1757,
	1758, 1759, 0, 0, 0, 0, 0, 0, 1739, 0,
	0, 0, 0, 2061, 0, 0, 260, 260, 260, 260,
	1270, 0, 0, 1270, 0, 260, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2565, 2565, 732, 0,
	0, 0, 0, 1761, 1763, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 1037, 0,
	0, 0, 775, 1751, 1747, 0, 1744, 1742, 1743, 1735,
	1736, 1737, 1738, 1740, 1741, 0, 0, 0, 0, 0,
	0, 2220, 0, 0, 0, 0, 0, 0, 0, 2069,
	0, 0, 0, 0, 0, 0, 0, 1284, 2234, 0,
	0, 0, 1754, 0, 0, 0, 0, 0, 2236, 0,
	0, 0, 0, 1051, 0, 0, 0, 1051, 0, 0,
	2244, 779, 2247, 2248, 2249, 0, 0, 0, 0, 0,
	0, 0, 0, 1432, 0, 0, 0, 1432, 0, 0,
	0, 0, 0, 0, 0, 1469, 0, 0, 2565, 2565,
	2565, 2565, 2565, 2565, 2565, 2565, 2565, 2565, 2565, 2565,
	2565, 2565, 2565, 2565, 2565, 2565, 2565, 0, 2565, 0,
	0, 0, 0, 0, 0, 3141, 3142, 0, 3159, 3160,
	3161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 770, 1984, 0, 0, 0, 3888, 0,
	0, 0, 0, 0, 0, 0, 1984, 0, 0, 1984,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 774, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1731, 1732, 0, 1764, 1765,
	1766, 1774, 1775, 1776, 0, 0, 1755, 0, 0, 0,
	0, 3156, 0, 0, 0, 0, 0, 731, 1767, 1762,
	0, 0, 0, 0, 0, 0, 1734, 1984, 0, 0,
	777, 0, 0, 0, 0, 1780, 772, 0, 0, 0,
	0, 0, 0, 0, 3141, 3142, 260, 3159, 3160, 3161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1733, 260, 0, 0, 0, 0, 671, 0, 0,
	0, 1753, 671, 0, 0, 671, 0, 0, 671, 671,
	1750, 0, 769, 0, 671, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1469, 3147, 0, 0, 0, 0,
	776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3156, 0, 0, 0, 733, 0, 1469, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 0, 260, 0, 0,
	0, 260, 260, 0, 0, 1744, 1742, 1743, 1735, 1736,
	1737, 1738, 1740, 1741, 0, 1756, 1757, 1758, 1759, 0,
	0, 0, 0, 0, 0, 1739, 0, 3162, 0, 0,
	2730, 2730, 260, 4144, 3287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2730, 0, 0, 3302, 0, 0,
	0, 0, 0, 0, 0, 2730, 3302, 0, 2730, 3302,
	0, 1771, 3302, 0, 1781, 0, 0, 0, 0, 3157,
	1761, 1763, 0, 0, 3147, 260, 260, 3287, 0, 260,
	0, 0, 3194, 0, 0, 0, 0, 1777, 0, 1778,
	0, 0, 4185, 0, 0, 0, 1748, 1749, 0, 3287,
	0, 260, 0, 3360, 3360, 0, 0, 1270, 0, 1731,
	1732, 0, 0, 0, 1769, 3220, 1984, 0, 0, 0,
	0, 0, 2730, 0, 2730, 0, 3383, 2730, 3287, 1754,
	3233, 2730, 3287, 1762, 0, 0, 3162, 1120, 0, 0,
	1734, 0, 0, 0, 0, 0, 0, 0, 2690, 1284,
	0, 3251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 1733, 260, 3410, 3157, 0,
	3412, 2730, 0, 0, 260, 1753, 0, 0, 260, 1768,
	0, 1280, 0, 0, 1750, 1432, 0, 0, 0, 0,
	0, 0, 2561, 0, 0, 0, 260, 0, 0, 0,
	0, 2891, 0, 3158, 1270, 0, 260, 0, 0, 2730,
	1295, 671, 0, 0, 0, 0, 0, 0, 2730, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 1037, 3887, 260,
	2891, 0, 1760, 2891, 0, 4315, 0, 0, 0, 0,
	0, 2561, 0, 0, 0, 0, 0, 0, 0, 1756,
	1757, 1758, 1759, 1755, 0, 0, 2839, 0, 0, 1739,
	0, 0, 0, 0, 3511, 0, 0, 0, 0, 0,
	0, 0, 1471, 0, 1477, 0, 1483, 0, 0, 1772,
	0, 3517, 0, 0, 1270, 260, 0, 260, 0, 0,
	0, 1051, 0, 1270, 0, 0, 0, 1432, 0, 0,
	0, 0, 3158, 0, 1761, 1763, 3141, 3142, 0, 3159,
	3160, 3161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 3233, 3153, 3154, 3155, 0, 3549,
	1748, 1749, 3152, 3150, 3151, 3143, 3144, 3145, 3146, 3148,
	3149, 1572, 0, 1577, 0, 0, 0, 0, 1211, 0,
	0, 0, 0, 1586, 0, 1591, 0, 0, 0, 2953,
	0, 0, 0, 1754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3581,
	1770, 0, 3156, 0, 0, 1745, 1746, 1752, 1773, 1751,
	1747, 0, 1744, 1742, 1743, 1735, 1736, 1737, 1738, 1740,
	1741, 0, 0, 0, 2561, 3915, 0, 0, 0, 3914,
	0, 0, 0, 0, 0, 0, 0, 0, 1653, 0,
	0, 1659, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1432, 3153, 3154, 3155, 0, 0, 0,
	0, 3152, 3150, 3151, 3143, 3144, 3145, 3146, 3148, 3149,
	0, 0, 0, 0, 0, 0, 0, 0, 1445, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3147, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 260,
	1731, 1732, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 1784, 1785, 1786, 1787, 1788, 1789, 1790,
	671, 671, 3141, 3142, 1762, 3159, 3160, 3161, 2565, 0,
	0, 1734, 0, 0, 0, 3560, 0, 0, 3162, 0,
	0, 0, 1469, 1469, 1802, 3548, 0, 0, 0, 0,
	1815, 0, 3576, 0, 0, 0, 1469, 1469, 1469, 0,
	0, 0, 0, 0, 0, 0, 1733, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 0,
	3157, 0, 0, 0, 0, 1750, 0, 2565, 0, 3360,
	0, 0, 0, 0, 0, 0, 0, 0, 3156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 755, 0, 0, 0, 3543,
	0, 0, 0, 1751, 1747, 0, 1744, 1742, 1743, 1735,
	1736, 1737, 1738, 1740, 1741, 1873, 1873, 1873, 0, 0,
	1756, 1757, 1758, 1759, 0, 0, 3360, 0, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3147, 0, 0, 0, 1432, 3287, 0, 260,
	0, 0, 0, 0, 0, 0, 3667, 0, 0, 0,
	260, 0, 0, 0, 0, 1761, 1763, 0, 0, 0,
	260, 0, 0, 0, 3158, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	260, 1748, 1749, 0, 0, 0, 0, 0, 0, 0,
	2565, 0, 0, 0, 3162, 0, 0, 0, 0, 2730,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 2920,
	2920, 0, 0, 0, 1754, 864, 864, 2730, 0, 0,
	0, 2891, 2891, 1432, 0, 864, 2730, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3157, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1211, 0, 0, 0, 0, 0,
	0, 0, 1432, 0, 0, 0, 3153, 3154, 3155, 0,
	0, 0, 0, 3152, 3150, 3151, 3143, 3144, 3145, 3146,
	3148, 3149, 0, 0, 0, 0, 0, 0, 1432, 3907,
	0, 0, 0, 0, 0, 0, 0, 0, 1211, 0,
	0, 0, 1211, 0, 0, 0, 1211, 1760, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 1211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3158, 260, 0, 0, 0, 0, 0, 1469, 0, 260,
	3394, 0, 0, 1211, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1211, 0, 0, 0, 0, 1211, 0,
	0, 3426, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1211, 3434, 0, 2730, 2730, 0, 3360, 0,
	0, 0, 0, 0, 0, 0, 0, 2730, 0, 0,
	0, 0, 0, 0, 3992, 0, 3992, 1469, 0, 0,
	1432, 0, 0, 0, 0, 2730, 0, 3302, 0, 0,
	0, 1469, 1469, 260, 3287, 3475, 3476, 0, 0, 0,
	0, 0, 0, 0, 0, 1211, 0, 3287, 0, 260,
	3287, 0, 260, 0, 1751, 1747, 0, 1744, 1742, 1743,
	1735, 1736, 1737, 1738, 1740, 1741, 0, 2730, 0, 2730,
	260, 0, 3153, 3154, 3155, 0, 0, 0, 0, 3152,
	3150, 3151, 3143, 3144, 3145, 3146, 3148, 3149, 0, 0,
	0, 0, 1432, 0, 0, 0, 2730, 0, 0, 0,
	0, 4065, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	3942, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3992, 0, 0, 1469, 0, 0, 3954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2337, 0, 2341, 0, 0, 0, 0, 0,
	0, 2355, 0, 0, 0, 0, 0, 0, 2364, 2365,
	2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375,
	2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385,
	2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395,
	2396, 2397, 2398, 0, 2404, 0, 2406, 2407, 2408, 2409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2433, 2730,
	0, 3302, 0, 0, 4177, 0, 0, 0, 0, 1802,
	0, 0, 260, 2448, 0, 0, 0, 0, 0, 4197,
	0, 4197, 0, 0, 0, 0, 0, 0, 0, 2478,
	2481, 2484, 2487, 0, 2491, 2492, 2493, 2494, 2495, 2496,
	2497, 755, 0, 1211, 0, 1211, 0, 0, 0, 0,
	0, 0, 1270, 0, 0, 0, 0, 0, 0, 0,
	1211, 0, 2557, 0, 2568, 2570, 2575, 3287, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 1951, 0, 1346,
	0, 1211, 0, 0, 0, 0, 0, 0, 4177, 0,
	0, 0, 0, 0, 0, 0, 2730, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4136,
	0, 0, 0, 0, 4264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3992, 3992,
	0, 0, 0, 0, 0, 0, 0, 1211, 0, 0,
	4136, 0, 0, 0, 0, 260, 260, 0, 1211, 2536,
	2537, 2538, 2539, 2532, 2533, 2534, 2535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2362, 3581,
	0, 0, 1211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3360, 4329, 0, 0, 4331,
	3360, 4334, 0, 0, 0, 0, 0, 4177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3992, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3992, 2362, 0, 0, 3773,
	2512, 2513, 2514, 2515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 2524, 2525, 2526, 2527, 2520, 2521, 2522,
	2523, 2528, 2529, 2530, 2531, 0, 4065, 0, 0, 0,
	0, 1432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3992, 0, 260, 3992, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3302, 0, 0, 1211, 1211,
	0, 0, 0, 0, 1432, 3844, 3845, 3846, 1211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1432,
	0, 1469, 1284, 1469, 0, 0, 2508, 2509, 2510, 2511,
	2516, 2517, 2518, 2519, 0, 0, 0, 0, 0, 0,
	1432, 0, 0, 0, 0, 0, 0, 0, 0, 4431,
	0, 0, 2852, 2853, 0, 2855, 0, 0, 0, 0,
	4438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4197, 0, 0, 260, 1051, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1051, 0, 0, 0, 2730, 0, 0, 0, 0,
	0, 0, 1211, 0, 1211, 0, 1211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 1211, 1211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1211, 1731, 1732, 0, 1764, 1765, 1766,
	1774, 1775, 1776, 3581, 0, 1211, 0, 1211, 1211, 1211,
	0, 0, 0, 0, 0, 0, 0, 0, 1762, 0,
	0, 0, 1469, 0, 0, 1734, 0, 0, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	2977, 0, 1432, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1733, 0, 0, 0, 0, 0, 0, 3949, 3950, 0,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 1750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4177, 0, 1432, 0, 0, 0, 1784, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2730, 0, 0, 0, 1951,
	1951, 1211, 3992, 0, 3992, 0, 0, 1469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3028, 3029, 1756, 1757, 1758, 1759, 3035, 0,
	0, 0, 0, 0, 1739, 0, 0, 1731, 1732, 0,
	1764, 1765, 1766, 1774, 1775, 1776, 0, 3049, 3050, 0,
	0, 1469, 0, 2448, 1284, 0, 0, 0, 0, 0,
	1767, 1762, 3057, 0, 0, 0, 0, 0, 1734, 0,
	1771, 0, 0, 1781, 0, 0, 0, 1780, 3071, 1761,
	1763, 0, 0, 0, 0, 0, 0, 2920, 1211, 0,
	0, 0, 0, 0, 0, 3083, 2730, 1432, 0, 0,
	1432, 0, 0, 1733, 0, 1748, 1749, 0, 0, 0,
	0, 2920, 0, 1753, 0, 0, 0, 0, 0, 0,
	0, 0, 1750, 1769, 0, 4116, 0, 4118, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1754, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1211, 0, 0, 0, 0, 0, 0, 1211, 0, 0,
	0, 0, 0, 0, 0, 0, 1211, 0, 0, 0,
	0, 0, 0, 0, 1432, 0, 0, 0, 0, 0,
	0, 0, 0, 1211, 0, 0, 0, 0, 0, 0,
	0, 1432, 0, 0, 2575, 2575, 2575, 1756, 1757, 1758,
	1759, 0, 0, 0, 0, 0, 0, 1739, 0, 1873,
	0, 4163, 0, 0, 0, 0, 0, 3198, 0, 0,
	0, 0, 0, 0, 1731, 1732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 0, 0, 1781, 0, 1762, 0,
	0, 0, 1761, 1763, 0, 1734, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 1777,
	0, 1778, 0, 0, 0, 0, 0, 0, 1748, 1749,
	0, 0, 1755, 1211, 1211, 0, 0, 0, 0, 0,
	1733, 0, 0, 0, 0, 0, 1769, 0, 0, 0,
	1753, 0, 0, 0, 0, 0, 0, 4233, 1772, 1750,
	0, 1754, 0, 0, 0, 0, 0, 1037, 0, 0,
	0, 0, 0, 0, 0, 1211, 0, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1432, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 1951,
	0, 0, 0, 3538, 0, 0, 0, 0, 3321, 0,
	0, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1756, 1757, 1758, 1759, 0, 0,
	0, 0, 0, 0, 1739, 0, 0, 1211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1770,
	0, 1211, 0, 0, 1745, 1746, 1752, 1773, 1751, 1747,
	0, 1744, 1742, 1743, 1735, 1736, 1737, 1738, 1740, 1741,
	0, 0, 0, 0, 1760, 0, 0, 0, 0, 1761,
	1763, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1211, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1748, 1749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 0, 0, 0, 1211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1211, 1754, 1211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1284, 1284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1770, 0, 0, 0, 0, 1745, 1746, 1752,
	1773, 1751, 1747, 0, 1744, 1742, 1743, 1735, 1736, 1737,
	1738, 1740, 1741, 0, 0, 0, 0, 3092, 0, 0,
	0, 3093, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1760, 0, 1432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 2355, 0, 0, 0, 1432, 0, 3535,
	3536, 0, 0, 3539, 0, 0, 0, 3542, 0, 0,
	0, 0, 0, 0, 0, 0, 3546, 0, 0, 0,
	0, 0, 0, 0, 0, 3553, 0, 0, 3198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3565, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3588, 3589, 0, 3590, 3591, 3592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1731, 1732, 0,
	1764, 1765, 1766, 1774, 1775, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3598, 0,
	1767, 1762, 3600, 0, 0, 0, 0, 1432, 1734, 1432,
	0, 0, 0, 0, 0, 0, 0, 1780, 1751, 1747,
	0, 1744, 1742, 1743, 1735, 1736, 1737, 1738, 1740, 1741,
	0, 0, 0, 3628, 3629, 0, 1432, 0, 0, 0,
	0, 0, 0, 1733, 0, 0, 0, 0, 0, 0,
	0, 3640, 0, 1753, 0, 0, 0, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 3649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1211, 1211, 0, 0, 0,
	1432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1097, 1211, 0, 0, 1432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1211,
	0, 0, 0, 0, 0, 0, 0, 1756, 1757, 1758,
	1759, 1211, 3695, 0, 1211, 0, 0, 1739, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 261, 261, 0,
	0, 1951, 0, 0, 0, 1211, 3714, 0, 0, 0,
	0, 0, 0, 0, 0, 1432, 0, 0, 0, 1211,
	1211, 0, 0, 1771, 261, 0, 1781, 0, 0, 0,
	0, 0, 1761, 1763, 0, 0, 0, 0, 3740, 0,
	0, 0, 0, 0, 0, 0, 0, 1731, 1732, 1777,
	261, 1778, 0, 0, 0, 0, 0, 0, 1748, 1749,
	0, 0, 0, 0, 0, 0, 0, 0, 1432, 0,
	1211, 1762, 0, 0, 0, 1951, 1769, 0, 1734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 1432, 0,
	0, 0, 0, 0, 0, 0, 0, 1211, 0, 0,
	0, 0, 0, 1733, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1753, 0, 0, 0, 0, 0, 1211,
	0, 1211, 1750, 1779, 0, 0, 0, 0, 0, 1432,
	0, 0, 0, 0, 0, 0, 0, 1211, 0, 0,
	0, 1768, 0, 0, 0, 0, 1873, 0, 1211, 0,
	0, 0, 1211, 0, 0, 3839, 0, 1432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1211, 3537, 0, 0, 0,
	0, 0, 1211, 0, 1211, 0, 0, 0, 1211, 0,
	0, 0, 0, 0, 0, 0, 1051, 1756, 1757, 1758,
	1759, 0, 0, 0, 1760, 0, 1211, 1739, 0, 0,
	0, 0, 0, 0, 0, 1432, 0, 0, 1211, 0,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	3885, 3886, 0, 0, 0, 1211, 3890, 3891, 0, 0,
	0, 3894, 3895, 0, 0, 0, 0, 0, 3899, 0,
	0, 1772, 1761, 1763, 0, 0, 0, 0, 0, 3903,
	1211, 1211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1432, 0, 0, 0, 3908, 0, 0, 1748, 1749,
	0, 0, 0, 1211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1211, 0, 0, 1211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1770, 0, 0, 0, 0, 1745, 1746, 1752,
	1773, 1751, 1747, 0, 1744, 1742, 1743, 1735, 1736, 1737,
	1738, 1740, 1741, 1731, 1732, 0, 0, 2444, 0, 0,
	0, 2445, 1951, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1762, 0, 1211,
	0, 0, 0, 0, 1734, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1951, 1951, 0, 0,
	0, 1051, 1051, 0, 1760, 0, 0, 0, 0, 1733,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 0, 0, 0, 1755, 0, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1951,
	1951, 0, 1731, 1732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 0, 0, 0,
	1951, 0, 3034, 1734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1756, 1757, 1758, 1759, 1211, 1211, 0,
	0, 0, 0, 1739, 0, 0, 1051, 0, 1733, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 0, 0, 0, 0, 0, 0, 1750, 0, 0,
	1211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4131, 4132, 4133, 0, 0, 0, 0, 0, 1761, 1763,
	0, 1751, 1747, 0, 1744, 1742, 1743, 1735, 1736, 1737,
	1738, 1740, 1741, 2355, 0, 0, 4142, 4143, 0, 0,
	0, 0, 0, 0, 1748, 1749, 0, 0, 0, 0,
	0, 3027, 0, 0, 4151, 4154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 1757, 1758, 1759, 0, 1754, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 261,
	0, 261, 261, 0, 0, 261, 0, 1293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4198, 0, 0, 0, 0, 0,
	0, 0, 4204, 0, 0, 0, 0, 1761, 1763, 0,
	0, 0, 0, 4211, 0, 0, 1037, 0, 0, 0,
	261, 1293, 261, 261, 0, 1293, 261, 261, 4219, 1293,
	0, 0, 0, 1748, 1749, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 1211, 0, 0, 1211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1293, 0, 0, 0, 1951, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 1293, 0, 261, 261,
	0, 0, 0, 0, 0, 1211, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 0, 1293, 0, 0, 1211,
	0, 1293, 261, 261, 0, 0, 0, 0, 0, 0,
	1211, 1211, 1211, 0, 0, 1293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1211, 0, 0, 0, 0, 0, 1211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1293, 0,
	0, 0, 1211, 0, 0, 0, 0, 4339, 0, 1760,
	4342, 0, 0, 1951, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 1747, 0,
	1744, 1742, 1743, 1735, 1736, 1737, 1738, 1740, 1741, 0,
	0, 1037, 1037, 0, 0, 0, 0, 0, 0, 0,
	0, 4390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1211, 0, 0, 0, 717, 0, 0, 0, 1211, 0,
	0, 0, 1211, 0, 1211, 0, 0, 0, 0, 0,
	0, 1211, 0, 0, 700, 2355, 0, 0, 0, 0,
	701, 0, 1211, 1211, 4154, 0, 0, 0, 0, 0,
	0, 1211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1751, 1747, 0, 1744,
	1742, 1743, 1735, 1736, 1737, 1738, 1740, 1741, 0, 702,
	0, 0, 0, 1211, 0, 1211, 1037, 0, 0, 0,
	703, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1211, 0, 0, 0, 0,
	0, 704, 0, 0, 0, 1211, 0, 1211, 0, 0,
	1211, 0, 0, 0, 0, 0, 0, 0, 0, 1211,
	0, 0, 0, 723, 0, 0, 0, 0, 0, 0,
	0, 4507, 4507, 4507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 705, 0, 0, 0, 0, 0, 1211,
	1211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 4528, 0, 0, 706, 0, 1211, 0,
	0, 0, 0, 1293, 0, 0, 0, 261, 261, 261,
	1211, 0, 0, 0, 261, 1211, 0, 707, 0, 0,
	708, 261, 0, 0, 1293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 732, 0, 0, 0,
	1211, 0, 0, 0, 0, 0, 0, 4507, 261, 0,
	1211, 1211, 1211, 0, 0, 261, 0, 0, 0, 0,
	722, 0, 717, 1211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 700, 0, 0, 0, 0, 0, 701, 0,
	1293, 0, 0, 1211, 0, 0, 0, 0, 0, 0,
	0, 1293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1951, 0, 0, 0, 0, 719,
	0, 0, 0, 0, 0, 1293, 0, 702, 0, 0,
	0, 0, 0, 0, 1211, 0, 1211, 0, 703, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 704,
	0, 0, 1211, 0, 0, 0, 0, 0, 4507, 4653,
	0, 0, 0, 0, 0, 0, 0, 4657, 0, 0,
	0, 723, 0, 0, 0, 0, 729, 0, 710, 1951,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 730, 0, 711, 0,
	1211, 0, 0, 0, 706, 0, 0, 1211, 0, 0,
	0, 0, 1211, 1211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 707, 0, 0, 708, 0,
	261, 1293, 1293, 261, 0, 731, 0, 0, 0, 0,
	0, 1293, 712, 0, 732, 0, 727, 728, 725, 0,
	0, 0, 0, 0, 720, 0, 1211, 713, 0, 1211,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 1211, 1211, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 261, 0, 714, 0,
	721, 0, 261, 0, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 0, 1951, 0, 0, 0, 261, 0,
	261, 0, 0, 716, 0, 0, 261, 719, 724, 0,
	0, 0, 0, 0, 0, 1293, 0, 1293, 0, 1293,
	0, 0, 733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 718, 0, 1293, 1293, 0, 0, 0,
	0, 0, 1211, 0, 0, 0, 1293, 261, 0, 0,
	261, 0, 0, 0, 1211, 0, 0, 0, 1293, 0,
	1293, 1293, 1293, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 710, 0, 0, 0,
	0, 0, 0, 261, 261, 0, 261, 0, 261, 0,
	261, 0, 261, 1731, 1732, 0, 1764, 1765, 1766, 1774,
	1775, 1776, 0, 0, 730, 0, 711, 0, 0, 0,
	0, 1211, 0, 0, 1211, 0, 1767, 1762, 1211, 0,
	0, 0, 0, 0, 1734, 0, 0, 0, 1211, 1211,
	0, 0, 261, 1780, 0, 0, 0, 0, 0, 1084,
	0, 0, 0, 731, 0, 1211, 0, 0, 0, 0,
	712, 0, 0, 0, 727, 728, 725, 0, 0, 1733,
	0, 0, 720, 0, 0, 713, 0, 0, 0, 1753,
	0, 0, 0, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 0, 0, 1293, 259, 259, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 714, 0, 721, 0,
	0, 0, 0, 792, 0, 0, 0, 715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 716, 0, 0, 0, 0, 724, 0, 0, 792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	733, 0, 0, 1756, 1757, 1758, 1759, 0, 0, 0,
	0, 718, 0, 1739, 0, 0, 0, 0, 0, 0,
	0, 1293, 1731, 1732, 0, 1764, 1765, 1766, 1774, 1775,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 1762, 0, 0, 1771,
	0, 0, 1781, 1734, 0, 0, 0, 0, 1761, 1763,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 1778, 0, 0,
	0, 0, 0, 1200, 1748, 1749, 0, 0, 1733, 0,
	1293, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 0, 1769, 0, 0, 0, 0, 1750, 0, 0,
	0, 0, 0, 261, 0, 0, 1293, 1754, 0, 0,
	1207, 0, 0, 0, 0, 0, 0, 0, 261, 255,
	255, 667, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1211, 0, 1211, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 1768, 0, 0,
	0, 0, 1756, 1757, 1758, 1759, 0, 0, 0, 0,
	0, 0, 1739, 0, 261, 0, 0, 261, 0, 0,
	0, 261, 0, 261, 0, 0, 0, 0, 0, 0,
	261, 261, 0, 0, 0, 0, 1293, 1293, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 1771, 0,
	0, 1781, 0, 0, 0, 0, 0, 1761, 1763, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 1778, 0, 1293, 0,
	0, 1755, 0, 1748, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 1769, 0, 0, 0, 0, 0, 1772, 0, 261,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	1293, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 1293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 1768, 0, 0, 0,
	810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	812, 0, 0, 261, 0, 261, 813, 1293, 1770, 0,
	0, 0, 261, 1745, 1746, 1752, 1773, 1751, 1747, 0,
	1744, 1742, 1743, 1735, 1736, 1737, 1738, 1740, 1741, 0,
	0, 0, 0, 0, 0, 0, 0, 3913, 1293, 1760,
	0, 0, 0, 0, 0, 814, 0, 831, 0, 0,
	1293, 0, 1293, 0, 0, 0, 0, 0, 0, 0,
	1755, 0, 0, 261, 0, 0, 0, 1293, 0, 0,
	0, 0, 815, 0, 0, 0, 0, 816, 0, 0,
	0, 0, 261, 0, 261, 0, 1772, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 840,
	0, 0, 0, 0, 0, 817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 838,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 261,
	261, 261, 0, 0, 0, 0, 0, 261, 0, 261,
	0, 0, 811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 818, 0, 0, 819, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 842, 261, 0,
	0, 0, 732, 0, 0, 0, 0, 1770, 0, 0,
	0, 0, 1745, 1746, 1752, 1773, 1751, 1747, 0, 1744,
	1742, 1743, 1735, 1736, 1737, 1738, 1740, 1741, 0, 0,
	0, 0, 0, 0, 0, 0, 3551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	259, 259, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 259, 259, 0, 0, 259, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 820, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 823, 0, 0, 0, 0, 0,
	0, 259, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 731, 0, 0, 0, 0, 0, 0, 0, 1293,
	0, 0, 809, 0, 833, 0, 0, 0, 0, 0,
	0, 0, 1256, 824, 1256, 1256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1293, 0, 0, 0, 0, 830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1293, 0, 0,
	0, 0, 0, 0, 825, 0, 0, 259, 826, 845,
	0, 844, 0, 1343, 0, 827, 0, 0, 1293, 1449,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 828,
	0, 0, 1293, 1293, 837, 0, 0, 0, 0, 261,
	846, 0, 843, 261, 261, 0, 0, 0, 733, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 1293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1570, 1571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 261, 0,
	1293, 261, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1073, 108,
	0, 0, 1293, 261, 1293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1293, 0, 0, 0, 1293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1293, 0,
	0, 1680, 0, 0, 261, 1293, 0, 1293, 0, 0,
	0, 1293, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 1293,
	261, 108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1293, 0, 0, 0, 1895, 0, 1207, 261, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 1895, 259, 0,
	0, 0, 0, 792, 0, 0, 0, 0, 0, 0,
	792, 0, 0, 1293, 1293, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1293, 259, 0, 0,
	0, 0, 1012, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 1032, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1293, 0, 261, 1293, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1293,
	0, 0, 0, 0, 0, 1911, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1920, 0, 1449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1256, 0, 0, 0, 0, 0, 0, 1449, 259,
	0, 0, 792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1293, 0, 0, 0, 259, 0, 259,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 792, 259, 0, 259, 0, 259, 0, 259,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1293, 0, 2176,
	1293, 261, 0, 2183, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 2196, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 2208, 261, 2208, 0, 0, 0, 261, 0, 2215,
	0, 0, 261, 0, 0, 0, 0, 0, 1293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1293, 1293, 1293, 0, 0, 0, 0,
	2183, 0, 0, 2240, 0, 0, 0, 0, 0, 0,
	1293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2260, 1293, 0, 108, 0, 261,
	0, 1293, 0, 0, 0, 0, 0, 2273, 0, 2275,
	0, 2277, 0, 2279, 0, 2280, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 1293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2302, 0, 0, 0, 0,
	0, 0, 1207, 0, 0, 0, 0, 0, 0, 108,
	0, 108, 0, 108, 0, 0, 0, 0, 1207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 784, 0, 0, 1032, 108, 108, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 108, 0,
	108, 0, 0, 0, 0, 1293, 0, 1293, 0, 0,
	108, 0, 108, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1293, 1293, 0, 0, 0,
	0, 0, 0, 259, 1293, 0, 259, 0, 0, 0,
	259, 0, 259, 0, 0, 0, 0, 0, 0, 259,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 1293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1293, 0,
	1293, 261, 0, 1293, 261, 0, 0, 0, 0, 0,
	0, 0, 1293, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 1293, 1293, 0, 0, 2632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1293, 0, 1012, 261, 0, 0, 0, 259, 0,
	0, 0, 0, 1293, 261, 0, 0, 0, 1293, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 792, 0, 0, 0, 0, 0,
	1801, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 1293, 1293, 1293, 0, 0, 0, 0,
	0, 0, 259, 0, 792, 0, 1293, 2675, 0, 0,
	1256, 259, 0, 0, 1256, 0, 1256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2196, 0, 0, 1293, 0, 0, 0,
	0, 0, 1089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1293, 0, 1293,
	0, 259, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1893, 1293, 1896, 0, 108, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 259, 259,
	259, 0, 0, 0, 0, 0, 259, 0, 259, 0,
	0, 0, 1449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1293, 0, 0, 0, 0, 0, 259,
	1293, 261, 0, 0, 0, 1293, 1293, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2183, 0, 0, 0,
	0, 0, 0, 0, 0, 2196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1293,
	0, 0, 1293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2951, 261, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2961, 0, 2964, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2989, 1449, 2991, 1449, 0, 0, 0, 0, 0,
	2997, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 1256, 0, 0, 0, 0, 0, 0,
	0, 3025, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1291, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 1293, 0, 0, 0, 0, 0, 1207, 0, 0,
	0, 1293, 1293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1207, 0, 0, 0, 0, 1293, 0,
	0, 0, 1349, 0, 0, 0, 1349, 0, 0, 0,
	1291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1895, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1291, 0, 1032, 0, 1032, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 1291, 259, 0,
	0, 0, 259, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1291, 0, 0,
	0, 0, 1291, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 259, 0, 0, 1291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 259, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 1895, 0, 1291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1731, 1732, 0,
	1764, 1765, 1766, 1774, 1775, 1776, 0, 0, 0, 0,
	0, 0, 1012, 0, 0, 1012, 1012, 0, 0, 0,
	1767, 1762, 0, 0, 0, 0, 0, 0, 1734, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 792, 0, 0,
	0, 0, 0, 1733, 0, 259, 0, 0, 0, 259,
	2422, 0, 1256, 1753, 0, 0, 1449, 1449, 0, 0,
	0, 0, 1750, 0, 0, 0, 1032, 259, 0, 0,
	0, 0, 0, 0, 0, 1801, 0, 1207, 0, 1801,
	0, 0, 0, 0, 0, 0, 0, 3285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1292,
	3338, 3340, 0, 0, 2196, 0, 0, 1756, 1757, 1758,
	1759, 0, 0, 0, 0, 0, 0, 1739, 0, 0,
	0, 1194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 1896, 259, 0,
	0, 0, 0, 1350, 0, 0, 0, 1350, 0, 0,
	0, 1292, 0, 1771, 0, 0, 1781, 0, 0, 0,
	0, 0, 1761, 1763, 0, 0, 0, 0, 0, 0,
	108, 0, 0, 0, 259, 0, 0, 0, 0, 1777,
	0, 1778, 1292, 0, 0, 0, 0, 0, 1748, 1749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1349, 0, 1769, 0, 1292, 3423,
	0, 0, 0, 3427, 0, 784, 0, 0, 0, 0,
	0, 1754, 784, 0, 0, 1291, 0, 0, 1292, 0,
	0, 0, 0, 1292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3480, 0, 0, 0, 0, 0,
	0, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1291, 0, 0, 0, 0, 0, 0, 0, 0,
	1292, 0, 1291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 1349, 0, 0, 0,
	3520, 0, 1449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 0, 0, 1207,
	1207, 0, 0, 0, 0, 0, 0, 0, 0, 108,
	0, 0, 0, 0, 0, 1755, 0, 0, 3533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 0, 0, 0, 0, 0, 108, 0, 0,
	108, 0, 108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 108, 0, 0, 108,
	0, 0, 1291, 1291, 0, 108, 0, 0, 0, 0,
	0, 0, 1349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1770, 0, 0, 0, 0, 1745, 1746, 1752,
	1773, 1751, 1747, 0, 1744, 1742, 1743, 1735, 1736, 1737,
	1738, 1740, 1741, 0, 0, 0, 0, 0, 0, 0,
	0, 3095, 0, 0, 0, 108, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 1291, 0, 1291, 0,
	1291, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 1291, 1291, 0, 0,
	0, 259, 0, 0, 0, 1350, 259, 1291, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 1291,
	0, 1291, 1291, 1291, 0, 0, 1292, 0, 0, 0,
	0, 1207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 1292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2196, 0, 0, 0, 0, 3821, 0, 0, 0, 0,
	0, 0, 1207, 0, 0, 0, 0, 0, 0, 0,
	1207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1349, 1895, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1194, 0, 0, 0,
	0, 0, 0, 1292, 1292, 0, 0, 0, 0, 0,
	0, 0, 1194, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 3870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1895, 0, 1895, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1349, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 259, 0, 0, 0, 1349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1292, 0, 1292,
	0, 1292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1292, 1292, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 1292, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	1292, 0, 1292, 1292, 1292, 0, 0, 0, 108, 108,
	0, 0, 108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1895, 0, 0, 0, 0, 1291, 1291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 108, 0, 0, 108, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4007, 0,
	1731, 1732, 0, 1764, 1765, 1766, 1774, 1775, 1776, 0,
	0, 0, 0, 0, 2196, 0, 0, 0, 0, 0,
	0, 0, 0, 1767, 1762, 0, 1350, 0, 0, 0,
	0, 1734, 0, 0, 0, 0, 0, 0, 0, 0,
	1780, 1349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 1291, 1194, 0, 0, 1032,
	0, 0, 0, 0, 0, 0, 1733, 0, 0, 0,
	0, 0, 0, 108, 108, 0, 1753, 2196, 0, 0,
	0, 0, 0, 0, 0, 1750, 0, 4087, 0, 0,
	0, 0, 0, 0, 0, 0, 784, 0, 1291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1291, 0, 1291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1291, 0,
	1756, 1757, 1758, 1759, 0, 0, 0, 0, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 1895,
	1895, 0, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 1771, 0, 1350, 1781,
	0, 0, 0, 0, 0, 1761, 1763, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 1778, 0, 0, 0, 0, 0,
	0, 1748, 1749, 0, 0, 0, 0, 4186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1769,
	0, 0, 0, 0, 1895, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 1895, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 2196, 0, 0, 0, 1292, 1292,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1895, 1768, 259, 1895, 0, 0, 0,
	108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 1194, 1194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4305, 1449, 0, 0, 0, 0, 0, 1760, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 1350, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 1292, 0, 0, 0,
	0, 0, 0, 0, 1772, 0, 0, 1731, 1732, 0,
	1764, 1765, 1766, 1774, 1775, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	1767, 1762, 0, 0, 0, 0, 0, 0, 1734, 1292,
	0, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1292, 0, 0, 1733, 0, 0, 0, 0, 0, 0,
	0, 0, 1292, 1753, 1292, 0, 0, 0, 0, 4395,
	0, 0, 1750, 1349, 0, 0, 0, 0, 0, 1292,
	259, 0, 0, 0, 0, 1770, 0, 0, 1349, 0,
	1745, 1746, 1752, 1773, 1751, 1747, 0, 1744, 1742, 1743,
	1735, 1736, 1737, 1738, 1740, 1741, 0, 0, 0, 1349,
	0, 0, 0, 0, 3094, 0, 0, 0, 0, 0,
	0, 0, 0, 1291, 1291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 108, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1756, 1757, 1758,
	1759, 0, 0, 0, 0, 0, 0, 1739, 0, 0,
	1194, 4448, 0, 1895, 0, 1895, 0, 0, 0, 0,
	0, 0, 0, 0, 1291, 0, 0, 0, 0, 0,
	0, 0, 0, 1731, 1732, 0, 1764, 1765, 1766, 1774,
	1775, 1776, 0, 1771, 0, 0, 1781, 0, 0, 0,
	0, 4484, 1761, 1763, 108, 0, 1767, 1762, 0, 0,
	0, 1291, 0, 0, 1734, 0, 0, 0, 0, 1777,
	0, 1778, 0, 1780, 0, 0, 0, 0, 1748, 1749,
	0, 0, 0, 1291, 0, 1291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1769, 0, 0, 1733,
	0, 1349, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 1754, 1291, 0, 0, 0, 1291, 0, 1750, 0,
	0, 0, 0, 0, 4544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1291,
	0, 0, 0, 0, 0, 0, 1291, 0, 1291, 0,
	0, 0, 1349, 1779, 0, 0, 0, 0, 0, 784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1291, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1291, 0, 0, 108, 0, 0, 0, 0,
	0, 1194, 0, 1756, 1757, 1758, 1759, 0, 0, 1194,
	0, 0, 0, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1291, 1291, 0, 0, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 0, 0, 1771,
	0, 0, 1781, 0, 0, 0, 0, 1291, 1761, 1763,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 1778, 0, 0,
	0, 1350, 0, 0, 1748, 1749, 0, 0, 0, 0,
	0, 1772, 0, 0, 0, 0, 1349, 0, 0, 1349,
	0, 0, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 108, 1779,
	0, 0, 0, 0, 1292, 1292, 0, 0, 0, 0,
	0, 108, 0, 1349, 0, 0, 0, 1768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1349, 0, 1770, 0, 108, 0, 0, 1745, 1746, 1752,
	1773, 1751, 1747, 0, 1744, 1742, 1743, 1735, 1736, 1737,
	1738, 1740, 1741, 0, 0, 1292, 0, 0, 0, 0,
	0, 3091, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1292, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1292, 0, 1292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1772, 0, 0,
	0, 0, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1292, 0, 0, 0, 1292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1292, 0, 0, 0, 0, 0, 0, 1292, 0, 1292,
	0, 0, 0, 1350, 1349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1770, 0,
	0, 0, 0, 1745, 1746, 1752, 1773, 1751, 1747, 0,
	1744, 1742, 1743, 1735, 1736, 1737, 1738, 1740, 1741, 0,
	0, 0, 0, 0, 0, 1292, 1292, 3090, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 0, 0,
	1350, 1731, 1732, 0, 1764, 1765, 1766, 1774, 1775, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 1762, 0, 0, 1291, 0,
	0, 1291, 1734, 0, 0, 0, 0, 0, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1733, 0, 0,
	0, 0, 0, 0, 1350, 0, 0, 1753, 0, 1291,
	0, 0, 0, 0, 0, 0, 1750, 0, 0, 0,
	0, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1291, 1291, 1291, 0, 0, 0,
	0, 0, 0, 0, 0, 108, 0, 0, 0, 0,
	0, 1291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1291, 0, 0, 108,
	0, 0, 1349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 1757, 1758, 1759, 0, 1349, 0, 0, 0,
	0, 1739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1771, 0, 0,
	1781, 0, 0, 0, 0, 0, 1761, 1763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 0, 1778, 0, 0, 0, 0,
	0, 0, 1748, 1749, 0, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1769, 0, 0, 0, 108, 0, 0, 0, 0, 0,
	108, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1349, 0, 1349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1291, 1291, 0, 0,
	0, 0, 0, 0, 0, 1349, 0, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1768, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1349,
	0, 1291, 0, 0, 1291, 0, 0, 0, 0, 0,
	0, 0, 0, 1349, 0, 0, 0, 0, 1760, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1292,
	0, 0, 1292, 0, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 1291, 1291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1291, 0, 0, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 1349, 0, 0, 0, 0, 1291,
	1292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1292, 1292, 1292, 0, 0,
	0, 0, 0, 0, 1291, 1291, 1291, 0, 0, 0,
	0, 0, 1292, 0, 0, 0, 0, 1349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1292, 0, 0,
	0, 0, 0, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1349, 0, 0,
	0, 0, 0, 0, 0, 0, 1770, 1350, 0, 0,
	0, 1745, 1746, 1752, 1773, 1751, 1747, 0, 1744, 1742,
	1743, 1735, 1736, 1737, 1738, 1740, 1741, 0, 0, 0,
	0, 0, 0, 0, 0, 3089, 0, 0, 1349, 0,
	1291, 0, 0, 0, 0, 1731, 1732, 0, 1764, 1765,
	1766, 1774, 1775, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1349, 0, 1767, 1762,
	0, 0, 0, 0, 0, 0, 1734, 0, 0, 0,
	0, 0, 0, 1731, 1732, 1780, 1764, 1765, 1766, 1774,
	1775, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1767, 1762, 0, 0,
	0, 1733, 0, 0, 1734, 0, 0, 0, 0, 0,
	0, 1753, 0, 1780, 1349, 0, 0, 1350, 0, 1350,
	1750, 1291, 0, 0, 0, 0, 1291, 1291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1292, 1292, 1733,
	0, 0, 0, 0, 0, 0, 1350, 0, 0, 1753,
	0, 0, 0, 0, 0, 0, 0, 0, 1750, 0,
	0, 1731, 1732, 0, 1764, 1765, 1766, 1774, 1775, 1776,
	1349, 0, 0, 1291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 1762, 0, 0, 0, 0,
	0, 0, 1734, 0, 0, 1756, 1757, 1758, 1759, 0,
	1292, 1780, 0, 0, 0, 1739, 0, 0, 0, 0,
	1350, 0, 1292, 0, 0, 1292, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 0, 0, 1733, 0, 0,
	0, 0, 0, 1756, 1757, 1758, 1759, 1753, 0, 0,
	0, 1771, 0, 1739, 1781, 0, 1750, 0, 0, 0,
	1761, 1763, 0, 0, 1292, 1292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1777, 0, 1778,
	0, 0, 0, 1292, 0, 0, 1748, 1749, 0, 1771,
	0, 0, 1781, 0, 0, 1350, 0, 0, 1761, 1763,
	1292, 0, 0, 0, 1769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 1778, 0, 1754,
	0, 0, 0, 0, 1748, 1749, 0, 0, 0, 0,
	0, 1756, 1757, 1758, 1759, 1292, 1292, 1292, 0, 0,
	0, 1739, 1769, 0, 0, 0, 0, 0, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	0, 1779, 1291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1291, 1291, 0, 0, 0, 1771, 1350, 1768,
	1781, 0, 0, 0, 0, 0, 1761, 1763, 0, 1291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 1777, 0, 1778, 0, 0, 0, 0,
	0, 0, 1748, 1749, 0, 0, 0, 1768, 0, 1350,
	0, 1292, 0, 0, 0, 0, 0, 0, 0, 0,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 1754, 0, 1350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 1779, 0, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 1350, 0, 0, 0, 0,
	0, 0, 1292, 0, 0, 0, 0, 1292, 1292, 0,
	0, 0, 0, 0, 0, 0, 0, 1772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1350, 0, 0, 1292, 0, 0, 0, 1760, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	1770, 0, 0, 0, 0, 1745, 1746, 1752, 1773, 1751,
	1747, 0, 1744, 1742, 1743, 1735, 1736, 1737, 1738, 1740,
	1741, 0, 0, 0, 0, 1772, 0, 0, 0, 2445,
	0, 0, 0, 0, 0, 0, 0, 0, 1770, 0,
	0, 0, 0, 1745, 1746, 1752, 1773, 1751, 1747, 0,
	1744, 1742, 1743, 1735, 1736, 1737, 1738, 1740, 1741, 0,
	0, 0, 0, 4439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1770, 0, 0, 0,
	0, 1745, 1746, 1752, 1773, 1751, 1747, 0, 1744, 1742,
	1743, 1735, 1736, 1737, 1738, 1740, 1741, 0, 0, 1347,
	0, 0, 0, 1292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1292, 1292, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 1352, 277, 278, 1353, 1354, 1355,
	1292, 1356, 613, 1357, 1358, 1359, 1360, 279, 280, 1151,
	281, 282, 283, 284, 285, 286, 614, 615, 0, 287,
	616, 288, 617, 1361, 618, 289, 290, 291, 292, 293,
	294, 1362, 1363, 0, 295, 619, 620, 621, 1364, 296,
	297, 622, 1365, 1294, 1366, 298, 299, 300, 301, 302,
	303, 304, 0, 1367, 306, 307, 308, 305, 309, 1368,
	310, 0, 311, 312, 313, 314, 315, 316, 1369, 317,
	318, 319, 1152, 320, 321, 322, 1370, 1371, 1373, 1372,
	1374, 1375, 1376, 323, 324, 325, 326, 327, 0, 328,
	623, 624, 1377, 332, 329, 330, 1378, 333, 331, 334,
	1379, 335, 336, 337, 1380, 1381, 338, 339, 340, 1382,
	341, 342, 1383, 343, 344, 345, 1384, 346, 347, 625,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	626, 627, 359, 1385, 266, 1386, 0, 0, 0, 0,
	360, 361, 362, 628, 0, 0, 0, 363, 1387, 364,
	1388, 1389, 1153, 365, 366, 629, 630, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 1390, 376, 631, 1391,
	632, 377, 1392, 378, 379, 380, 381, 382, 633, 634,
	635, 459, 1155, 383, 384, 1393, 385, 386, 387, 388,
	0, 0, 0, 267, 389, 390, 391, 393, 1394, 1154,
	392, 636, 637, 1395, 638, 1396, 394, 395, 1156, 639,
	1157, 396, 397, 398, 1158, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 1397, 406, 408, 407, 1398,
	409, 640, 1159, 410, 411, 1160, 1399, 412, 0, 0,
	0, 413, 414, 417, 1400, 1401, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 1161, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 1162, 446,
	1402, 268, 1163, 456, 457, 1403, 641, 458, 642, 460,
	461, 1404, 0, 462, 0, 1405, 1406, 464, 465, 466,
	1407, 1408, 467, 468, 643, 1164, 469, 1165, 644, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	1409, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 647, 488, 648, 489, 490, 1410, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 649, 500, 502,
	501, 503, 1411, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 1412, 518, 519, 520, 1166, 521, 522,
	523, 524, 650, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 1413, 541, 542, 540,
	543, 544, 545, 1414, 546, 547, 530, 531, 548, 549,
	1167, 550, 551, 552, 553, 554, 555, 651, 0, 556,
	1415, 557, 558, 559, 561, 532, 562, 567, 568, 652,
	563, 564, 565, 566, 653, 570, 571, 1416, 572, 573,
	0, 569, 560, 1417, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 1418, 582, 654, 655, 656, 657, 1419,
	591, 1420, 583, 584, 585, 658, 586, 659, 1421, 587,
	588, 589, 590, 0, 592, 593, 1422, 1423, 594, 595,
	596, 598, 599, 597, 600, 1424, 601, 1425, 0, 602,
	603, 604, 660, 661, 662, 1426, 606, 605, 607, 663,
	1427, 1428, 1429, 1430, 1431, 608, 609, 664, 610, 611,
	612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1347, 0, 0, 0, 0,
	0, 0, 0, 2610, 0, 0, 0, 0, 0, 0,
	0, 2611, 269, 271, 270, 272, 273, 274, 275, 276,
	1352, 277, 278, 1353, 1354, 1355, 0, 1356, 613, 1357,
	1358, 1359, 1360, 279, 280, 1151, 281, 282, 283, 284,
	285, 286, 614, 615, 0, 287, 616, 288, 617, 1361,
	618, 289, 290, 291, 292, 293, 294, 1362, 1363, 0,
	295, 619, 620, 621, 1364, 296, 297, 622, 1365, 1294,
	1366, 298, 299, 300, 301, 302, 303, 304, 0, 1367,
	306, 307, 308, 305, 309, 1368, 310, 0, 311, 312,
	313, 314, 315, 316, 1369, 317, 318, 319, 1152, 320,
	321, 322, 1370, 1371, 1373, 1372, 1374, 1375, 1376, 323,
	324, 325, 326, 327, 0, 328, 623, 624, 1377, 332,
	329, 330, 1378, 333, 331, 334, 1379, 335, 336, 337,
	1380, 1381, 338, 339, 340, 1382, 341, 342, 1383, 343,
	344, 345, 1384, 346, 347, 625, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 626, 627, 359, 1385,
	266, 1386, 0, 0, 0, 0, 360, 361, 362, 628,
	0, 0, 0, 363, 1387, 364, 1388, 1389, 1153, 365,
	366, 629, 630, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 1390, 376, 631, 1391, 632, 377, 1392, 378,
	379, 380, 381, 382, 633, 634, 635, 459, 1155, 383,
	384, 1393, 385, 386, 387, 388, 0, 0, 0, 267,
	389, 390, 391, 393, 1394, 1154, 392, 636, 637, 1395,
	638, 1396, 394, 395, 1156, 639, 1157, 396, 397, 398,
	1158, 399, 0, 0, 0, 400, 401, 402, 403, 404,
	405, 1397, 406, 408, 407, 1398, 409, 640, 1159, 410,
	411, 1160, 1399, 412, 0, 0, 0, 413, 414, 417,
	1400, 1401, 415, 416, 418, 419, 0, 420, 421, 423,
	426, 422, 424, 425, 427, 440, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 442, 0,
	441, 1161, 443, 444, 445, 450, 452, 453, 448, 449,
	451, 454, 455, 447, 1162, 446, 1402, 268, 1163, 456,
	457, 1403, 641, 458, 642, 460, 461, 1404, 0, 462,
	0, 1405, 1406, 464, 465, 466, 1407, 1408, 467, 468,
	643, 1164, 469, 1165, 644, 470, 471, 463, 472, 473,
	474, 475, 476, 477, 478, 479, 1409, 480, 481, 645,
	482, 483, 484, 646, 485, 486, 487, 647, 488, 648,
	489, 490, 1410, 491, 492, 0, 493, 494, 495, 496,
	497, 498, 499, 649, 500, 502, 501, 503, 1411, 504,
	0, 505, 506, 507, 0, 0, 0, 0, 508, 0,
	510, 511, 512, 513, 509, 514, 515, 516, 517, 1412,
	518, 519, 520, 1166, 521, 522, 523, 524, 650, 525,
	0, 526, 527, 533, 534, 528, 529, 535, 536, 537,
	538, 539, 1413, 541, 542, 540, 543, 544, 545, 1414,
	546, 547, 530, 531, 548, 549, 1167, 550, 551, 552,
	553, 554, 555, 651, 0, 556, 1415, 557, 558, 559,
	561, 532, 562, 567, 568, 652, 563, 564, 565, 566,
	653, 570, 571, 1416, 572, 573, 0, 569, 560, 1417,
	574, 575, 576, 577, 578, 579, 580, 353, 581, 1418,
	582, 654, 655, 656, 657, 1419, 591, 1420, 583, 584,
	585, 658, 586, 659, 1421, 587, 588, 589, 590, 0,
	592, 593, 1422, 1423, 594, 595, 596, 598, 599, 597,
	600, 1424, 601, 1425, 0, 602, 603, 604, 660, 661,
	662, 1426, 606, 605, 607, 663, 1427, 1428, 1429, 1430,
	1431, 608, 609, 664, 610, 611, 612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1347,
	0, 0, 0, 0, 3559, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3561, 269, 271, 270, 272,
	273, 274, 275, 276, 1352, 277, 278, 1353, 1354, 1355,
	0, 1356, 613, 1357, 1358, 1359, 1360, 279, 280, 1151,
	281, 282, 283, 284, 285, 286, 614, 615, 0, 287,
	616, 288, 617, 1361, 618, 289, 290, 291, 292, 293,
	294, 1362, 1363, 0, 295, 619, 620, 621, 1364, 296,
	297, 622, 1365, 1294, 1366, 298, 299, 300, 301, 302,
	303, 304, 0, 1367, 306, 307, 308, 305, 309, 1368,
	310, 0, 311, 312, 313, 314, 315, 316, 1369, 317,
	318, 319, 1152, 320, 321, 322, 1370, 1371, 1373, 1372,
	1374, 1375, 1376, 323, 324, 325, 326, 327, 0, 328,
	623, 624, 1377, 332, 329, 330, 1378, 333, 331, 334,
	1379, 335, 336, 337, 1380, 1381, 338, 339, 340, 1382,
	341, 342, 1383, 343, 344, 345, 1384, 346, 347, 625,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	626, 627, 359, 1385, 266, 1386, 0, 0, 0, 0,
	360, 361, 362, 628, 0, 0, 0, 363, 1387, 364,
	1388, 1389, 1153, 365, 366, 629, 630, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 1390, 376, 631, 1391,
	632, 377, 1392, 378, 379, 380, 381, 382, 633, 634,
	635, 459, 1155, 383, 384, 1393, 385, 386, 387, 388,
	0, 0, 0, 267, 389, 390, 391, 393, 1394, 1154,
	392, 636, 637, 1395, 638, 1396, 394, 395, 1156, 639,
	1157, 396, 397, 398, 1158, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 1397, 406, 408, 407, 1398,
	409, 640, 1159, 410, 411, 1160, 1399, 412, 0, 0,
	0, 413, 414, 417, 1400, 1401, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 1161, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 1162, 446,
	1402, 268, 1163, 456, 457, 1403, 641, 458, 642, 460,
	461, 1404, 0, 462, 0, 1405, 1406, 464, 465, 466,
	1407, 1408, 467, 468, 643, 1164, 469, 1165, 644, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	1409, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 647, 488, 648, 489, 490, 1410, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 649, 500, 502,
	501, 503, 1411, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 1412, 518, 519, 520, 1166, 521, 522,
	523, 524, 650, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 1413, 541, 542, 540,
	543, 544, 545, 1414, 546, 547, 530, 531, 548, 549,
	1167, 550, 551, 552, 553, 554, 555, 651, 0, 556,
	1415, 557, 558, 559, 561, 532, 562, 567, 568, 652,
	563, 564, 565, 566, 653, 570, 571, 1416, 572, 573,
	0, 569, 560, 1417, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 1418, 582, 654, 655, 656, 657, 1419,
	591, 1420, 583, 584, 585, 658, 586, 659, 1421, 587,
	588, 589, 590, 0, 592, 593, 1422, 1423, 594, 595,
	596, 598, 599, 597, 600, 1424, 601, 1425, 0, 602,
	603, 604, 660, 661, 662, 1426, 606, 605, 607, 663,
	1427, 1428, 1429, 1430, 1431, 608, 609, 664, 610, 611,
	612, 0, 0, 0, 0, 0, 0, 1347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3941, 269, 271, 270, 272, 273, 274,
	275, 276, 1352, 277, 278, 1353, 1354, 1355, 0, 1356,
	613, 1357, 1358, 1359, 1360, 279, 280, 1151, 281, 282,
	283, 284, 285, 286, 614, 615, 0, 287, 616, 288,
	617, 1361, 618, 289, 290, 291, 292, 293, 294, 1362,
	1363, 0, 295, 619, 620, 621, 1364, 296, 297, 622,
	1365, 1294, 1366, 298, 299, 300, 301, 302, 303, 304,
	0, 1367, 306, 307, 308, 305, 309, 1368, 310, 0,
	311, 312, 313, 314, 315, 316, 1369, 317, 318, 319,
	1152, 320, 321, 322, 1370, 1371, 1373, 1372, 1374, 1375,
	1376, 323, 324, 325, 326, 327, 0, 328, 623, 624,
	1377, 332, 329, 330, 1378, 333, 331, 334, 1379, 335,
	336, 337, 1380, 1381, 338, 339, 340, 1382, 341, 342,
	1383, 343, 344, 345, 1384, 346, 347, 625, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 626, 627,
	359, 1385, 266, 1386, 0, 0, 0, 0, 360, 361,
	362, 628, 0, 0, 0, 363, 1387, 364, 1388, 1389,
	1153, 365, 366, 629, 630, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 1390, 376, 631, 1391, 632, 377,
	1392, 378, 379, 380, 381, 382, 633, 634, 635, 459,
	1155, 383, 384, 1393, 385, 386, 387, 388, 0, 0,
	0, 267, 389, 390, 391, 393, 1394, 1154, 392, 636,
	637, 1395, 638, 1396, 394, 395, 1156, 639, 1157, 396,
	397, 398, 1158, 399, 0, 0, 0, 400, 401, 402,
	403, 404, 405, 1397, 406, 408, 407, 1398, 409, 640,
	1159, 410, 411, 1160, 1399, 412, 0, 0, 0, 413,
	414, 417, 1400, 1401, 415, 416, 418, 419, 0, 420,
	421, 423, 426, 422, 424, 425, 427, 440, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	442, 0, 441, 1161, 443, 444, 445, 450, 452, 453,
	448, 449, 451, 454, 455, 447, 1162, 446, 1402, 268,
	1163, 456, 457, 1403, 641, 458, 642, 460, 461, 1404,
	0, 462, 0, 1405, 1406, 464, 465, 466, 1407, 1408,
	467, 468, 643, 1164, 469, 1165, 644, 470, 471, 463,
	472, 473, 474, 475, 476, 477, 478, 479, 1409, 480,
	481, 645, 482, 483, 484, 646, 485, 486, 487, 647,
	488, 648, 489, 490, 1410, 491, 492, 0, 493, 494,
	495, 496, 497, 498, 499, 649, 500, 502, 501, 503,
	1411, 504, 0, 505, 506, 507, 0, 0, 0, 0,
	508, 0, 510, 511, 512, 513, 509, 514, 515, 516,
	517, 1412, 518, 519, 520, 1166, 521, 522, 523, 524,
	650, 525, 0, 526, 527, 533, 534, 528, 529, 535,
	536, 537, 538, 539, 1413, 541, 542, 540, 543, 544,
	545, 1414, 546, 547, 530, 531, 548, 549, 1167, 550,
	551, 552, 553, 554, 555, 651, 0, 556, 1415, 557,
	558, 559, 561, 532, 562, 567, 568, 652, 563, 564,
	565, 566, 653, 570, 571, 1416, 572, 573, 0, 569,
	560, 1417, 574, 575, 576, 577, 578, 579, 580, 353,
	581, 1418, 582, 654, 655, 656, 657, 1419, 591, 1420,
	583, 584, 585, 658, 586, 659, 1421, 587, 588, 589,
	590, 0, 592, 593, 1422, 1423, 594, 595, 596, 598,
	599, 597, 600, 1424, 601, 1425, 0, 602, 603, 604,
	660, 661, 662, 1426, 606, 605, 607, 663, 1427, 1428,
	1429, 1430, 1431, 608, 609, 664, 610, 611, 612, 0,
	1347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4137, 269, 271, 270,
	272, 273, 274, 275, 276, 1352, 277, 278, 1353, 1354,
	1355, 0, 1356, 613, 1357, 1358, 1359, 1360, 279, 280,
	1151, 281, 282, 283, 284, 285, 286, 614, 615, 0,
	287, 616, 288, 617, 1361, 618, 289, 290, 291, 292,
	293, 294, 1362, 1363, 0, 295, 619, 620, 621, 1364,
	296, 297, 622, 1365, 1294, 1366, 298, 299, 300, 301,
	302, 303, 304, 0, 1367, 306, 307, 308, 305, 309,
	1368, 310, 0, 311, 312, 313, 314, 315, 316, 1369,
	317, 318, 319, 1152, 320, 321, 322, 1370, 1371, 1373,
	1372, 1374, 1375, 1376, 323, 324, 325, 326, 327, 0,
	328, 623, 624, 1377, 332, 329, 330, 1378, 333, 331,
	334, 1379, 335, 336, 337, 1380, 1381, 338, 339, 340,
	1382, 341, 342, 1383, 343, 344, 345, 1384, 346, 347,
	625, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 626, 627, 359, 1385, 266, 1386, 0, 0, 0,
	0, 360, 361, 362, 628, 0, 0, 0, 363, 1387,
	364, 1388, 1389, 1153, 365, 366, 629, 630, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 1390, 376, 631,
	1391, 632, 377, 1392, 378, 379, 380, 381, 382, 633,
	634, 635, 459, 1155, 383, 384, 1393, 385, 386, 387,
	388, 0, 0, 0, 267, 389, 390, 391, 393, 1394,
	1154, 392, 636, 637, 1395, 638, 1396, 394, 395, 1156,
	639, 1157, 396, 397, 398, 1158, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 1397, 406, 408, 407,
	1398, 409, 640, 1159, 410, 411, 1160, 1399, 412, 0,
	0, 0, 413, 414, 417, 1400, 1401, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 1161, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 1162,
	446, 1402, 268, 1163, 456, 457, 1403, 641, 458, 642,
	460, 461, 1404, 0, 462, 0, 1405, 1406, 464, 465,
	466, 1407, 1408, 467, 468, 643, 1164, 469, 1165, 644,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 1409, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 647, 488, 648, 489, 490, 1410, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 649, 500,
	502, 501, 503, 1411, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 1412, 518, 519, 520, 1166, 521,
	522, 523, 524, 650, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 1413, 541, 542,
	540, 543, 544, 545, 1414, 546, 547, 530, 531, 548,
	549, 1167, 550, 551, 552, 553, 554, 555, 651, 0,
	556, 1415, 557, 558, 559, 561, 532, 562, 567, 568,
	652, 563, 564, 565, 566, 653, 570, 571, 1416, 572,
	573, 0, 569, 560, 1417, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 1418, 582, 654, 655, 656, 657,
	1419, 591, 1420, 583, 584, 585, 658, 586, 659, 1421,
	587, 588, 589, 590, 0, 592, 593, 1422, 1423, 594,
	595, 596, 598, 599, 597, 600, 1424, 601, 1425, 0,
	602, 603, 604, 660, 661, 662, 1426, 606, 605, 607,
	663, 1427, 1428, 1429, 1430, 1431, 608, 609, 664, 610,
	611, 612, 0, 1347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4016,
	269, 271, 270, 272, 273, 274, 275, 276, 1352, 277,
	278, 1353, 1354, 1355, 0, 1356, 613, 1357, 1358, 1359,
	1360, 279, 280, 1151, 281, 282, 283, 284, 285, 286,
	614, 615, 0, 287, 616, 288, 617, 1361, 618, 289,
	290, 291, 292, 293, 294, 1362, 1363, 0, 295, 619,
	620, 621, 1364, 296, 297, 622, 1365, 1294, 1366, 298,
	299, 300, 301, 302, 303, 304, 0, 1367, 306, 307,
	308, 305, 309, 1368, 310, 0, 311, 312, 313, 314,
	315, 316, 1369, 317, 318, 319, 1152, 320, 321, 322,
	1370, 1371, 1373, 1372, 1374, 1375, 1376, 323, 324, 325,
	326, 327, 0, 328, 623, 624, 1377, 332, 329, 330,
	1378, 333, 331, 334, 1379, 335, 336, 337, 1380, 1381,
	338, 339, 340, 1382, 341, 342, 1383, 343, 344, 345,
	1384, 346, 347, 625, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 626, 627, 359, 1385, 266, 1386,
	0, 0, 0, 0, 360, 361, 362, 628, 0, 0,
	0, 363, 1387, 364, 1388, 1389, 1153, 365, 366, 629,
	630, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	1390, 376, 631, 1391, 632, 377, 1392, 378, 379, 380,
	381, 382, 633, 634, 635, 459, 1155, 383, 384, 1393,
	385, 386, 387, 388, 0, 0, 0, 267, 389, 390,
	391, 393, 1394, 1154, 392, 636, 637, 1395, 638, 1396,
	394, 395, 1156, 639, 1157, 396, 397, 398, 1158, 399,
	0, 0, 0, 400, 401, 402, 403, 404, 405, 1397,
	406, 408, 407, 1398, 409, 640, 1159, 410, 411, 1160,
	1399, 412, 0, 0, 0, 413, 414, 417, 1400, 1401,
	415, 416, 418, 419, 0, 420, 421, 423, 426, 422,
	424, 425, 427, 440, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 442, 0, 441, 1161,
	443, 444, 445, 450, 452, 453, 448, 449, 451, 454,
	455, 447, 1162, 446, 1402, 268, 1163, 456, 457, 1403,
	641, 458, 642, 460, 461, 1404, 0, 462, 0, 1405,
	1406, 464, 465, 466, 1407, 1408, 467, 468, 643, 1164,
	469, 1165, 644, 470, 471, 463, 472, 473, 474, 475,
	476, 477, 478, 479, 1409, 480, 481, 645, 482, 483,
	484, 646, 485, 486, 487, 647, 488, 648, 489, 490,
	1410, 491, 492, 0, 493, 494, 495, 496, 497, 498,
	499, 649, 500, 502, 501, 503, 1411, 504, 0, 505,
	506, 507, 0, 0, 0, 0, 508, 0, 510, 511,
	512, 513, 509, 514, 515, 516, 517, 1412, 518, 519,
	520, 1166, 521, 522, 523, 524, 650, 525, 0, 526,
	527, 533, 534, 528, 529, 535, 536, 537, 538, 539,
	1413, 541, 542, 540, 543, 544, 545, 1414, 546, 547,
	530, 531, 548, 549, 1167, 550, 551, 552, 553, 554,
	555, 651, 0, 556, 1415, 557, 558, 559, 561, 532,
	562, 567, 568, 652, 563, 564, 565, 566, 653, 570,
	571, 1416, 572, 573, 0, 569, 560, 1417, 574, 575,
	576, 577, 578, 579, 580, 353, 581, 1418, 582, 654,
	655, 656, 657, 1419, 591, 1420, 583, 584, 585, 658,
	586, 659, 1421, 587, 588, 589, 590, 0, 592, 593,
	1422, 1423, 594, 595, 596, 598, 599, 597, 600, 1424,
	601, 1425, 0, 602, 603, 604, 660, 661, 662, 1426,
	606, 605, 607, 663, 1427, 1428, 1429, 1430, 1431, 608,
	609, 664, 610, 611, 612, 0, 1347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3871, 269, 271, 270, 272, 273, 274, 275,
	276, 1352, 277, 278, 1353, 1354, 1355, 0, 1356, 613,
	1357, 1358, 1359, 1360, 279, 280, 1151, 281, 282, 283,
	284, 285, 286, 614, 615, 0, 287, 616, 288, 617,
	1361, 618, 289, 290, 291, 292, 293, 294, 1362, 1363,
	0, 295, 619, 620, 621, 1364, 296, 297, 622, 1365,
	1294, 1366, 298, 299, 300, 301, 302, 303, 304, 0,
	1367, 306, 307, 308, 305, 309, 1368, 310, 0, 311,
	312, 313, 314, 315, 316, 1369, 317, 318, 319, 1152,
	320, 321, 322, 1370, 1371, 1373, 1372, 1374, 1375, 1376,
	323, 324, 325, 326, 327, 0, 328, 623, 624, 1377,
	332, 329, 330, 1378, 333, 331, 334, 1379, 335, 336,
	337, 1380, 1381, 338, 339, 340, 1382, 341, 342, 1383,
	343, 344, 345, 1384, 346, 347, 625, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 626, 627, 359,
	1385, 266, 1386, 0, 0, 0, 0, 360, 361, 362,
	628, 0, 0, 0, 363, 1387, 364, 1388, 1389, 1153,
	365, 366, 629, 630, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 1390, 376, 631, 1391, 632, 377, 1392,
	378, 379, 380, 381, 382, 633, 634, 635, 459, 1155,
	383, 384, 1393, 385, 386, 387, 388, 0, 0, 0,
	267, 389, 390, 391, 393, 1394, 1154, 392, 636, 637,
	1395, 638, 1396, 394, 395, 1156, 639, 1157, 396, 397,
	398, 1158, 399, 0, 0, 0, 400, 401, 402, 403,
	404, 405, 1397, 406, 408, 407, 1398, 409, 640, 1159,
	410, 411, 1160, 1399, 412, 0, 0, 0, 413, 414,
	417, 1400, 1401, 415, 416, 418, 419, 0, 420, 421,
	423, 426, 422, 424, 425, 427, 440, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 442,
	0, 441, 1161, 443, 444, 445, 450, 452, 453, 448,
	449, 451, 454, 455, 447, 1162, 446, 1402, 268, 1163,
	456, 457, 1403, 641, 458, 642, 460, 461, 1404, 0,
	462, 0, 1405, 1406, 464, 465, 466, 1407, 1408, 467,
	468, 643, 1164, 469, 1165, 644, 470, 471, 463, 472,
	473, 474, 475, 476, 477, 478, 479, 1409, 480, 481,
	645, 482, 483, 484, 646, 485, 486, 487, 647, 488,
	648, 489, 490, 1410, 491, 492, 0, 493, 494, 495,
	496, 497, 498, 499, 649, 500, 502, 501, 503, 1411,
	504, 0, 505, 506, 507, 0, 0, 0, 0, 508,
	0, 510, 511, 512, 513, 509, 514, 515, 516, 517,
	1412, 518, 519, 520, 1166, 521, 522, 523, 524, 650,
	525, 0, 526, 527, 533, 534, 528, 529, 535, 536,
	537, 538, 539, 1413, 541, 542, 540, 543, 544, 545,
	1414, 546, 547, 530, 531, 548, 549, 1167, 550, 551,
	552, 553, 554, 555, 651, 0, 556, 1415, 557, 558,
	559, 561, 532, 562, 567, 568, 652, 563, 564, 565,
	566, 653, 570, 571, 1416, 572, 573, 0, 569, 560,
	1417, 574, 575, 576, 577, 578, 579, 580, 353, 581,
	1418, 582, 654, 655, 656, 657, 1419, 591, 1420, 583,
	584, 585, 658, 586, 659, 1421, 587, 588, 589, 590,
	0, 592, 593, 1422, 1423, 594, 595, 596, 598, 599,
	597, 600, 1424, 601, 1425, 0, 602, 603, 604, 660,
	661, 662, 1426, 606, 605, 607, 663, 1427, 1428, 1429,
	1430, 1431, 608, 609, 664, 610, 611, 612, 0, 1347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3577, 269, 271, 270, 272,
	273, 274, 275, 276, 1352, 277, 278, 1353, 1354, 1355,
	0, 1356, 613, 1357, 1358, 1359, 1360, 279, 280, 1151,
	281, 282, 283, 284, 285, 286, 614, 615, 0, 287,
	616, 288, 617, 1361, 618, 289, 290, 291, 292, 293,
	294, 1362, 1363, 0, 295, 619, 620, 621, 1364, 296,
	297, 622, 1365, 1294, 1366, 298, 299, 300, 301, 302,
	303, 304, 0, 1367, 306, 307, 308, 305, 309, 1368,
	310, 0, 311, 312, 313, 314, 315, 316, 1369, 317,
	318, 319, 1152, 320, 321, 322, 1370, 1371, 1373, 1372,
	1374, 1375, 1376, 323, 324, 325, 326, 327, 0, 328,
	623, 624, 1377, 332, 329, 330, 1378, 333, 331, 334,
	1379, 335, 336, 337, 1380, 1381, 338, 339, 340, 1382,
	341, 342, 1383, 343, 344, 345, 1384, 346, 347, 625,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	626, 627, 359, 1385, 266, 1386, 0, 0, 0, 0,
	360, 361, 362, 628, 0, 0, 0, 363, 1387, 364,
	1388, 1389, 1153, 365, 366, 629, 630, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 1390, 376, 631, 1391,
	632, 377, 1392, 378, 379, 380, 381, 382, 633, 634,
	635, 459, 1155, 383, 384, 1393, 385, 386, 387, 388,
	0, 0, 0, 267, 389, 390, 391, 393, 1394, 1154,
	392, 636, 637, 1395, 638, 1396, 394, 395, 1156, 639,
	1157, 396, 397, 398, 1158, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 1397, 406, 408, 407, 1398,
	409, 640, 1159, 410, 411, 1160, 1399, 412, 0, 0,
	0, 413, 414, 417, 1400, 1401, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 1161, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 1162, 446,
	1402, 268, 1163, 456, 457, 1403, 641, 458, 642, 460,
	461, 1404, 0, 462, 0, 1405, 1406, 464, 465, 466,
	1407, 1408, 467, 468, 643, 1164, 469, 1165, 644, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	1409, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 647, 488, 648, 489, 490, 1410, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 649, 500, 502,
	501, 503, 1411, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 1412, 518, 519, 520, 1166, 521, 522,
	523, 524, 650, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 1413, 541, 542, 540,
	543, 544, 545, 1414, 546, 547, 530, 531, 548, 549,
	1167, 550, 551, 552, 553, 554, 555, 651, 0, 556,
	1415, 557, 558, 559, 561, 532, 562, 567, 568, 652,
	563, 564, 565, 566, 653, 570, 571, 1416, 572, 573,
	0, 569, 560, 1417, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 1418, 582, 654, 655, 656, 657, 1419,
	591, 1420, 583, 584, 585, 658, 586, 659, 1421, 587,
	588, 589, 590, 0, 592, 593, 1422, 1423, 594, 595,
	596, 598, 599, 597, 600, 1424, 601, 1425, 0, 602,
	603, 604, 660, 661, 662, 1426, 606, 605, 607, 663,
	1427, 1428, 1429, 1430, 1431, 608, 609, 664, 610, 611,
	612, 0, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3408, 269,
	271, 270, 272, 273, 274, 275, 276, 1352, 277, 278,
	1353, 1354, 1355, 0, 1356, 613, 1357, 1358, 1359, 1360,
	279, 280, 1151, 281, 282, 283, 284, 285, 286, 614,
	615, 0, 287, 616, 288, 617, 1361, 618, 289, 290,
	291, 292, 293, 294, 1362, 1363, 0, 295, 619, 620,
	621, 1364, 296, 297, 622, 1365, 1294, 1366, 298, 299,
	300, 301, 302, 303, 304, 0, 1367, 306, 307, 308,
	305, 309, 1368, 310, 0, 311, 312, 313, 314, 315,
	316, 1369, 317, 318, 319, 1152, 320, 321, 322, 1370,
	1371, 1373, 1372, 1374, 1375, 1376, 323, 324, 325, 326,
	327, 0, 328, 623, 624, 1377, 332, 329, 330, 1378,
	333, 331, 334, 1379, 335, 336, 337, 1380, 1381, 338,
	339, 340, 1382, 341, 342, 1383, 343, 344, 345, 1384,
	346, 347, 625, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 626, 627, 359, 1385, 266, 1386, 0,
	0, 0, 0, 360, 361, 362, 628, 0, 0, 0,
	363, 1387, 364, 1388, 1389, 1153, 365, 366, 629, 630,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 1390,
	376, 631, 1391, 632, 377, 1392, 378, 379, 380, 381,
	382, 633, 634, 635, 459, 1155, 383, 384, 1393, 385,
	386, 387, 388, 0, 0, 0, 267, 389, 390, 391,
	393, 1394, 1154, 392, 636, 637, 1395, 638, 1396, 394,
	395, 1156, 639, 1157, 396, 397, 398, 1158, 399, 0,
	0, 0, 400, 401, 402, 403, 404, 405, 1397, 406,
	408, 407, 1398, 409, 640, 1159, 410, 411, 1160, 1399,
	412, 0, 0, 0, 413, 414, 417, 1400, 1401, 415,
	416, 418, 419, 0, 420, 421, 423, 426, 422, 424,
	425, 427, 440, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 442, 0, 441, 1161, 443,
	444, 445, 450, 452, 453, 448, 449, 451, 454, 455,
	447, 1162, 446, 1402, 268, 1163, 456, 457, 1403, 641,
	458, 642, 460, 461, 1404, 0, 462, 0, 1405, 1406,
	464, 465, 466, 1407, 1408, 467, 468, 643, 1164, 469,
	1165, 644, 470, 471, 463, 472, 473, 474, 475, 476,
	477, 478, 479, 1409, 480, 481, 645, 482, 483, 484,
	646, 485, 486, 487, 647, 488, 648, 489, 490, 1410,
	491, 492, 0, 493, 494, 495, 496, 497, 498, 499,
	649, 500, 502, 501, 503, 1411, 504, 0, 505, 506,
	507, 0, 0, 0, 0, 508, 0, 510, 511, 512,
	513, 509, 514, 515, 516, 517, 1412, 518, 519, 520,
	1166, 521, 522, 523, 524, 650, 525, 0, 526, 527,
	533, 534, 528, 529, 535, 536, 537, 538, 539, 1413,
	541, 542, 540, 543, 544, 545, 1414, 546, 547, 530,
	531, 548, 549, 1167, 550, 551, 552, 553, 554, 555,
	651, 0, 556, 1415, 557, 558, 559, 561, 532, 562,
	567, 568, 652, 563, 564, 565, 566, 653, 570, 571,
	1416, 572, 573, 0, 569, 560, 1417, 574, 575, 576,
	577, 578, 579, 580, 353, 581, 1418, 582, 654, 655,
	656, 657, 1419, 591, 1420, 583, 584, 585, 658, 586,
	659, 1421, 587, 588, 589, 590, 0, 592, 593, 1422,
	1423, 594, 595, 596, 598, 599, 597, 600, 1424, 601,
	1425, 0, 602, 603, 604, 660, 661, 662, 1426, 606,
	605, 607, 663, 1427, 1428, 1429, 1430, 1431, 608, 609,
	664, 610, 611, 612, 0, 1347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2468, 269, 271, 270, 272, 273, 274, 275, 276,
	1352, 277, 278, 1353, 1354, 1355, 0, 1356, 613, 1357,
	1358, 1359, 1360, 279, 280, 1151, 281, 282, 283, 284,
	285, 286, 614, 615, 0, 287, 616, 288, 617, 1361,
	618, 289, 290, 291, 292, 293, 294, 1362, 1363, 0,
	295, 619, 620, 621, 1364, 296, 297, 622, 1365, 1294,
	1366, 298, 299, 300, 301, 302, 303, 304, 0, 1367,
	306, 307, 308, 305, 309, 1368, 310, 0, 311, 312,
	313, 314, 315, 316, 1369, 317, 318, 319, 1152, 320,
	321, 322, 1370, 1371, 1373, 1372, 1374, 1375, 1376, 323,
	324, 325, 326, 327, 0, 328, 623, 624, 1377, 332,
	329, 330, 1378, 333, 331, 334, 1379, 335, 336, 337,
	1380, 1381, 338, 339, 340, 1382, 341, 342, 1383, 343,
	344, 345, 1384, 346, 347, 625, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 626, 627, 359, 1385,
	266, 1386, 0, 0, 0, 0, 360, 361, 362, 628,
	0, 0, 0, 363, 1387, 364, 1388, 1389, 1153, 365,
	366, 629, 630, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 1390, 376, 631, 1391, 632, 377, 1392, 378,
	379, 380, 381, 382, 633, 634, 635, 459, 1155, 383,
	384, 1393, 385, 386, 387, 388, 0, 0, 0, 267,
	389, 390, 391, 393, 1394, 1154, 392, 636, 637, 1395,
	638, 1396, 394, 395, 1156, 639, 1157, 396, 397, 398,
	1158, 399, 0, 0, 0, 400, 401, 402, 403, 404,
	405, 1397, 406, 408, 407, 1398, 409, 640, 1159, 410,
	411, 1160, 1399, 412, 0, 0, 0, 413, 414, 417,
	1400, 1401, 415, 416, 418, 419, 0, 420, 421, 423,
	426, 422, 424, 425, 427, 440, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 442, 0,
	441, 1161, 443, 444, 445, 450, 452, 453, 448, 449,
	451, 454, 455, 447, 1162, 446, 1402, 268, 1163, 456,
	457, 1403, 641, 458, 642, 460, 461, 1404, 0, 462,
	0, 1405, 1406, 464, 465, 466, 1407, 1408, 467, 468,
	643, 1164, 469, 1165, 644, 470, 471, 463, 472, 473,
	474, 475, 476, 477, 478, 479, 1409, 480, 481, 645,
	482, 483, 484, 646, 485, 486, 487, 647, 488, 648,
	489, 490, 1410, 491, 492, 0, 493, 494, 495, 496,
	497, 498, 499, 649, 500, 502, 501, 503, 1411, 504,
	0, 505, 506, 507, 0, 0, 0, 0, 508, 0,
	510, 511, 512, 513, 509, 514, 515, 516, 517, 1412,
	518, 519, 520, 1166, 521, 522, 523, 524, 650, 525,
	0, 526, 527, 533, 534, 528, 529, 535, 536, 537,
	538, 539, 1413, 541, 542, 540, 543, 544, 545, 1414,
	546, 547, 530, 531, 548, 549, 1167, 550, 551, 552,
	553, 554, 555, 651, 0, 556, 1415, 557, 558, 559,
	561, 532, 562, 567, 568, 652, 563, 564, 565, 566,
	653, 570, 571, 1416, 572, 573, 0, 569, 560, 1417,
	574, 575, 576, 577, 578, 579, 580, 353, 581, 1418,
	582, 654, 655, 656, 657, 1419, 591, 1420, 583, 584,
	585, 658, 586, 659, 1421, 587, 588, 589, 590, 0,
	592, 593, 1422, 1423, 594, 595, 596, 598, 599, 597,
	600, 1424, 601, 1425, 0, 602, 603, 604, 660, 661,
	662, 1426, 606, 605, 607, 663, 1427, 1428, 1429, 1430,
	1431, 608, 609, 664, 610, 611, 612, 1443, 0, 1347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2157, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 1352, 277, 278, 1353, 1354, 1355,
	0, 1356, 613, 1357, 1358, 1359, 1360, 279, 280, 1151,
	281, 282, 283, 284, 285, 286, 614, 615, 0, 287,
	616, 288, 617, 1361, 618, 289, 290, 291, 292, 293,
	294, 1362, 1363, 0, 295, 619, 620, 621, 1364, 296,
	297, 622, 1365, 1294, 1366, 298, 299, 300, 301, 302,
	303, 304, 0, 1367, 306, 307, 308, 305, 309, 1368,
	310, 0, 311, 312, 313, 314, 315, 316, 1369, 317,
	318, 319, 1152, 320, 321, 322, 1370, 1371, 1373, 1372,
	1374, 1375, 1376, 323, 324, 325, 326, 327, 0, 328,
	623, 624, 1377, 332, 329, 330, 1378, 333, 331, 334,
	1379, 335, 336, 337, 1380, 1381, 338, 339, 340, 1382,
	341, 342, 1383, 343, 344, 345, 1384, 346, 347, 625,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	626, 627, 359, 1385, 266, 1386, 0, 0, 0, 0,
	360, 361, 362, 628, 0, 0, 0, 363, 1387, 364,
	1388, 1389, 1153, 365, 366, 629, 630, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 1390, 376, 631, 1391,
	632, 377, 1392, 378, 379, 380, 381, 382, 633, 634,
	635, 459, 1155, 383, 384, 1393, 385, 386, 387, 388,
	0, 0, 0, 267, 389, 390, 391, 393, 1394, 1154,
	392, 636, 637, 1395, 638, 1396, 394, 395, 1156, 639,
	1157, 396, 397, 398, 1158, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 1397, 406, 408, 407, 1398,
	409, 640, 1159, 410, 411, 1160, 1399, 412, 0, 0,
	0, 413, 414, 417, 1400, 1401, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 1161, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 1162, 446,
	1402, 268, 1163, 456, 457, 1403, 641, 458, 642, 460,
	461, 1404, 0, 462, 0, 1405, 1406, 464, 465, 466,
	1407, 1408, 467, 468, 643, 1164, 469, 1165, 644, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	1409, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 647, 488, 648, 489, 490, 1410, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 649, 500, 502,
	501, 503, 1411, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 1412, 518, 519, 520, 1166, 521, 522,
	523, 524, 650, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 1413, 541, 542, 540,
	543, 544, 545, 1414, 546, 547, 530, 531, 548, 549,
	1167, 550, 551, 552, 553, 554, 555, 651, 0, 556,
	1415, 557, 558, 559, 561, 532, 562, 567, 568, 652,
	563, 564, 565, 566, 653, 570, 571, 1416, 572, 573,
	0, 569, 560, 1417, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 1418, 582, 654, 655, 656, 657, 1419,
	591, 1420, 583, 584, 585, 658, 586, 659, 1421, 587,
	588, 589, 590, 0, 592, 593, 1422, 1423, 594, 595,
	596, 598, 599, 597, 600, 1424, 601, 1425, 0, 602,
	603, 604, 660, 661, 662, 1426, 606, 605, 607, 663,
	1427, 1428, 1429, 1430, 1431, 608, 609, 664, 610, 611,
	612, 1344, 0, 1347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 271, 270, 272, 273, 274, 275, 276, 1352, 277,
	278, 1353, 1354, 1355, 0, 1356, 613, 1357, 1358, 1359,
	1360, 279, 280, 1151, 281, 282, 283, 284, 285, 286,
	614, 615, 0, 287, 616, 288, 617, 1361, 618, 289,
	290, 291, 292, 293, 294, 1362, 1363, 0, 295, 619,
	620, 621, 1364, 296, 297, 622, 1365, 1294, 1366, 298,
	299, 300, 301, 302, 303, 304, 0, 1367, 306, 307,
	308, 305, 309, 1368, 310, 0, 311, 312, 313, 314,
	315, 316, 1369, 317, 318, 319, 1152, 320, 321, 322,
	1370, 1371, 1373, 1372, 1374, 1375, 1376, 323, 324, 325,
	326, 327, 0, 328, 623, 624, 1377, 332, 329, 330,
	1378, 333, 331, 334, 1379, 335, 336, 337, 1380, 1381,
	338, 339, 340, 1382, 341, 342, 1383, 343, 344, 345,
	1384, 346, 347, 625, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 626, 627, 359, 1385, 266, 1386,
	0, 0, 0, 0, 360, 361, 362, 628, 0, 0,
	0, 363, 1387, 364, 1388, 1389, 1153, 365, 366, 629,
	630, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	1390, 376, 631, 1391, 632, 377, 1392, 378, 379, 380,
	381, 382, 633, 634, 635, 459, 1155, 383, 384, 1393,
	385, 386, 387, 388, 0, 0, 0, 267, 389, 390,
	391, 393, 1394, 1154, 392, 636, 637, 1395, 638, 1396,
	394, 395, 1156, 639, 1157, 396, 397, 398, 1158, 399,
	0, 0, 0, 400, 401, 402, 403, 404, 405, 1397,
	406, 408, 407, 1398, 409, 640, 1159, 410, 411, 1160,
	1399, 412, 0, 0, 0, 413, 414, 417, 1400, 1401,
	415, 416, 418, 419, 0, 420, 421, 423, 426, 422,
	424, 425, 427, 440, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 442, 0, 441, 1161,
	443, 444, 445, 450, 452, 453, 448, 449, 451, 454,
	455, 447, 1162, 446, 1402, 268, 1163, 456, 457, 1403,
	641, 458, 642, 460, 461, 1404, 0, 462, 0, 1405,
	1406, 464, 465, 466, 1407, 1408, 467, 468, 643, 1164,
	469, 1165, 644, 470, 471, 463, 472, 473, 474, 475,
	476, 477, 478, 479, 1409, 480, 481, 645, 482, 483,
	484, 646, 485, 486, 487, 647, 488, 648, 489, 490,
	1410, 491, 492, 0, 493, 494, 495, 496, 497, 498,
	499, 649, 500, 502, 501, 503, 1411, 504, 0, 505,
	506, 507, 0, 0, 0, 0, 508, 0, 510, 511,
	512, 513, 509, 514, 515, 516, 517, 1412, 518, 519,
	520, 1166, 521, 522, 523, 524, 650, 525, 0, 526,
	527, 533, 534, 528, 529, 535, 536, 537, 538, 539,
	1413, 541, 542, 540, 543, 544, 545, 1414, 546, 547,
	530, 531, 548, 549, 1167, 550, 551, 552, 553, 554,
	555, 651, 0, 556, 1415, 557, 558, 559, 561, 532,
	562, 567, 568, 652, 563, 564, 565, 566, 653, 570,
	571, 1416, 572, 573, 0, 569, 560, 1417, 574, 575,
	576, 577, 578, 579, 580, 353, 581, 1418, 582, 654,
	655, 656, 657, 1419, 591, 1420, 583, 584, 585, 658,
	586, 659, 1421, 587, 588, 589, 590, 0, 592, 593,
	1422, 1423, 594, 595, 596, 598, 599, 597, 600, 1424,
	601, 1425, 0, 602, 603, 604, 660, 661, 662, 1426,
	606, 605, 607, 663, 1427, 1428, 1429, 1430, 1431, 608,
	609, 664, 610, 611, 612, 1347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 271, 270, 272, 273, 274, 275, 276,
	1352, 277, 278, 1353, 1354, 1355, 0, 1356, 613, 1357,
	1358, 1359, 1360, 279, 280, 1151, 281, 282, 283, 284,
	285, 286, 614, 615, 0, 287, 616, 288, 617, 1361,
	618, 289, 290, 291, 292, 293, 294, 1362, 1363, 0,
	295, 619, 620, 621, 1364, 296, 297, 622, 1365, 1294,
	1366, 298, 299, 300, 301, 302, 303, 304, 0, 1367,
	306, 307, 308, 305, 309, 1368, 310, 0, 311, 312,
	313, 314, 315, 316, 1369, 317, 318, 319, 1152, 320,
	321, 322, 1370, 1371, 1373, 1372, 1374, 1375, 1376, 323,
	324, 325, 326, 327, 0, 328, 623, 624, 1377, 332,
	329, 330, 1378, 333, 331, 334, 1379, 335, 336, 337,
	1380, 1381, 338, 339, 340, 1382, 341, 342, 1383, 343,
	344, 345, 1384, 346, 347, 625, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 626, 627, 359, 1385,
	266, 1386, 0, 0, 0, 0, 360, 361, 362, 628,
	0, 0, 0, 363, 1387, 364, 1388, 1389, 1153, 365,
	366, 629, 630, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 1390, 376, 631, 1391, 632, 377, 1392, 378,
	379, 380, 381, 382, 633, 634, 635, 459, 1155, 383,
	384, 1393, 385, 386, 387, 388, 0, 0, 0, 267,
	389, 390, 391, 393, 1394, 1154, 392, 636, 637, 1395,
	638, 1396, 394, 395, 1156, 639, 1157, 396, 397, 398,
	1158, 399, 0, 0, 0, 400, 401, 402, 403, 404,
	405, 1397, 406, 408, 407, 1398, 409, 640, 1159, 410,
	411, 1160, 1399, 412, 0, 0, 0, 413, 414, 417,
	1400, 1401, 415, 416, 418, 419, 0, 420, 421, 423,
	426, 422, 424, 425, 427, 440, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 442, 0,
	441, 1161, 443, 444, 445, 450, 452, 453, 448, 449,
	451, 454, 455, 447, 1162, 446, 1402, 268, 1163, 456,
	457, 1403, 641, 458, 642, 460, 461, 1404, 0, 462,
	0, 1405, 1406, 464, 465, 466, 1407, 1408, 467, 468,
	643, 1164, 469, 1165, 644, 470, 471, 463, 472, 473,
	474, 475, 476, 477, 478, 479, 1409, 480, 481, 645,
	482, 483, 484, 646, 485, 486, 487, 647, 488, 648,
	489, 490, 1410, 491, 492, 0, 493, 494, 495, 496,
	497, 498, 499, 649, 500, 502, 501, 503, 1411, 504,
	0, 505, 506, 507, 0, 0, 0, 0, 508, 0,
	510, 511, 512, 513, 509, 514, 515, 516, 517, 1412,
	518, 519, 520, 1166, 521, 522, 523, 524, 650, 525,
	0, 526, 527, 533, 534, 528, 529, 535, 536, 537,
	538, 539, 1413, 541, 542, 540, 543, 544, 545, 1414,
	546, 547, 530, 531, 548, 549, 1167, 550, 551, 552,
	553, 554, 555, 651, 0, 556, 1415, 557, 558, 559,
	561, 532, 562, 567, 568, 652, 563, 564, 565, 566,
	653, 570, 571, 1416, 572, 573, 0, 569, 560, 1417,
	574, 575, 576, 577, 578, 579, 580, 353, 581, 1418,
	582, 654, 655, 656, 657, 1419, 591, 1420, 583, 584,
	585, 658, 586, 659, 1421, 587, 588, 589, 590, 0,
	592, 593, 1422, 1423, 594, 595, 596, 598, 599, 597,
	600, 1424, 601, 1425, 0, 602, 603, 604, 660, 661,
	662, 1426, 606, 605, 607, 663, 1427, 1428, 1429, 1430,
	1431, 608, 609, 664, 610, 611, 612, 2443, 0, 1087,
	1059, 1060, 1061, 1057, 1058, 1070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 2440, 277, 278, 0, 0, 0,
	0, 0, 1111, 1075, 0, 0, 0, 279, 280, 1151,
	281, 282, 283, 284, 285, 286, 614, 1124, 0, 287,
	1131, 288, 1130, 0, 1141, 289, 290, 291, 292, 293,
	294, 1077, 1110, 1044, 295, 1171, 1172, 621, 0, 296,
	297, 1117, 0, 1098, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1152, 320, 321, 322, 1101, 1099, 1100, 1107,
	1103, 1102, 1106, 323, 324, 325, 326, 327, 1134, 328,
	1128, 1127, 1048, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 2441, 0, 338, 1119, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1054,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1142, 1143, 359, 1066, 266, 0, 0, 0, 0, 0,
	360, 361, 362, 1126, 0, 0, 0, 363, 0, 364,
	0, 0, 1153, 365, 366, 1139, 1140, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 1149, 0,
	1076, 377, 0, 378, 379, 380, 381, 382, 1112, 1113,
	1116, 459, 1155, 383, 384, 0, 385, 386, 387, 388,
	0, 0, 0, 267, 389, 390, 391, 393, 0, 1154,
	392, 1121, 1122, 0, 1082, 0, 394, 395, 1156, 1114,
	1157, 396, 397, 398, 1158, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 0, 406, 408, 407, 0,
	409, 1150, 1159, 410, 411, 1160, 0, 412, 0, 0,
	0, 413, 414, 417, 1105, 1104, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 1161, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 1162, 446,
	1045, 268, 1163, 456, 457, 1067, 1115, 458, 1129, 460,
	461, 0, 0, 462, 0, 0, 0, 464, 465, 466,
	0, 0, 467, 468, 643, 1164, 469, 1165, 1144, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 1145, 488, 648, 489, 490, 0, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 1125, 500, 502,
	501, 503, 0, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 0, 518, 519, 520, 1166, 521, 522,
	523, 524, 1055, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 0, 541, 542, 540,
	543, 544, 545, 1108, 546, 547, 530, 531, 548, 549,
	1167, 550, 551, 552, 553, 554, 555, 1123, 0, 556,
	0, 557, 558, 559, 561, 532, 562, 567, 568, 1170,
	563, 564, 565, 566, 1146, 570, 571, 0, 572, 573,
	1043, 569, 560, 0, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 0, 582, 1135, 1136, 1137, 1138, 0,
	591, 0, 583, 584, 585, 1147, 586, 1148, 1065, 587,
	588, 589, 590, 0, 592, 593, 0, 1049, 594, 595,
	596, 598, 599, 597, 600, 1109, 601, 0, 0, 602,
	603, 604, 660, 1132, 1169, 2439, 606, 605, 607, 663,
	0, 0, 0, 0, 0, 608, 609, 664, 610, 611,
	612, 1046, 0, 0, 0, 0, 0, 0, 0, 1042,
	0, 0, 0, 0, 0, 0, 1040, 1041, 2442, 0,
	0, 0, 0, 0, 0, 1071, 2438, 0, 1033, 1069,
	1087, 1059, 1060, 1061, 1057, 1058, 1070, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1111, 1075, 0, 0, 0, 279, 280,
	1151, 281, 282, 283, 284, 285, 286, 614, 1124, 0,
	287, 1131, 288, 1130, 0, 1141, 289, 290, 291, 292,
	293, 294, 1077, 1110, 1044, 295, 1171, 1172, 621, 0,
	296, 297, 1117, 0, 1098, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1152, 320, 321, 322, 1101, 1099, 1100,
	1107, 1103, 1102, 1106, 323, 324, 325, 326, 327, 1134,
	328, 1128, 1127, 1048, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1119, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1054, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1142, 1143, 359, 1066, 266, 0, 0, 0, 0,
	0, 360, 361, 362, 1126, 0, 0, 0, 363, 0,
	364, 0, 0, 1153, 365, 366, 1139, 1140, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 1149,
	0, 1076, 377, 0, 378, 379, 380, 381, 382, 1112,
	1113, 1116, 459, 1155, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 267, 389, 390, 391, 393, 0,
	1154, 392, 1121, 1122, 0, 1082, 0, 394, 395, 1156,
	1114, 1157, 396, 397, 398, 1158, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 1150, 1159, 410, 411, 1160, 0, 412, 0,
	0, 0, 413, 414, 417, 1105, 1104, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 1161, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 1162,
	446, 1045, 268, 1163, 456, 457, 1067, 1115, 458, 1129,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 1164, 469, 1165, 1144,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 1145, 488, 648, 489, 490, 0, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 1125, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 1166, 521,
	522, 523, 524, 1055, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 228, 541, 542,
	540, 543, 544, 545, 1108, 546, 547, 530, 531, 548,
	549, 1167, 550, 551, 552, 553, 554, 555, 1123, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	1170, 563, 564, 565, 566, 1146, 570, 571, 0, 572,
	573, 1043, 569, 560, 230, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 1135, 1136, 1137, 1138,
	0, 591, 0, 583, 584, 585, 1147, 586, 1148, 1065,
	587, 588, 589, 590, 0, 592, 593, 0, 1049, 594,
	595, 596, 598, 599, 597, 600, 1109, 601, 0, 0,
	602, 603, 604, 1562, 1132, 1169, 0, 606, 605, 607,
	663, 0, 0, 0, 0, 222, 608, 609, 664, 610,
	611, 612, 1046, 0, 223, 0, 0, 0, 0, 0,
	1042, 0, 0, 0, 0, 0, 0, 1040, 1041, 1087,
	1059, 1060, 1061, 1057, 1058, 1070, 1806, 1804, 0, 0,
	1069, 0, 0, 0, 0, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1111, 1075, 0, 0, 0, 279, 280, 1151,
	281, 282, 283, 284, 285, 286, 614, 1124, 0, 287,
	1131, 288, 1130, 0, 1141, 289, 290, 291, 292, 293,
	294, 1077, 1110, 1044, 295, 1171, 1172, 621, 0, 296,
	297, 1117, 0, 1098, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1152, 320, 321, 322, 1101, 1099, 1100, 1107,
	1103, 1102, 1106, 323, 324, 325, 326, 327, 1134, 328,
	1128, 1127, 1048, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1119, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1054,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1142, 1143, 359, 1066, 266, 0, 0, 0, 0, 0,
	360, 361, 362, 1126, 0, 0, 0, 363, 0, 364,
	0, 0, 1153, 365, 366, 1139, 1140, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 1149, 0,
	1076, 377, 0, 378, 379, 380, 381, 382, 1112, 1113,
	1116, 459, 1155, 383, 384, 0, 385, 386, 387, 388,
	0, 0, 0, 267, 389, 390, 391, 393, 0, 1154,
	392, 1121, 1122, 0, 1082, 0, 394, 395, 1156, 1114,
	1157, 396, 397, 398, 1158, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 0, 406, 408, 407, 0,
	409, 1150, 1159, 410, 411, 1160, 0, 412, 0, 0,
	0, 413, 414, 417, 1105, 1104, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 1161, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 1162, 446,
	1045, 268, 1163, 456, 457, 1067, 1115, 458, 1129, 460,
	461, 0, 0, 462, 0, 0, 0, 464, 465, 466,
	0, 0, 467, 468, 643, 1164, 469, 1165, 1144, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 1145, 488, 648, 489, 490, 0, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 1125, 500, 502,
	501, 503, 0, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 0, 518, 519, 520, 1166, 521, 522,
	523, 524, 1055, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 228, 541, 542, 540,
	543, 544, 545, 1108, 546, 547, 530, 531, 548, 549,
	1167, 550, 551, 552, 553, 554, 555, 1123, 0, 556,
	0, 557, 558, 559, 561, 532, 562, 567, 568, 1170,
	563, 564, 565, 566, 1146, 570, 571, 0, 572, 573,
	1043, 569, 560, 230, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 0, 582, 1135, 1136, 1137, 1138, 0,
	591, 0, 583, 584, 585, 1147, 586, 1148, 1065, 587,
	588, 589, 590, 0, 592, 593, 0, 1049, 594, 595,
	596, 598, 599, 597, 600, 1109, 601, 0, 0, 602,
	603, 604, 1562, 1132, 1169, 0, 606, 605, 607, 663,
	0, 0, 0, 0, 222, 608, 609, 664, 610, 611,
	612, 1046, 0, 223, 0, 0, 0, 0, 0, 1042,
	0, 0, 0, 0, 0, 0, 1040, 1041, 1087, 1059,
	1060, 1061, 1057, 1058, 1070, 1806, 3047, 0, 0, 1069,
	0, 0, 0, 0, 0, 269, 271, 270, 272, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1111, 1075, 0, 0, 0, 279, 280, 1151, 281,
	282, 283, 284, 285, 286, 614, 1124, 0, 287, 1131,
	288, 1130, 0, 1141, 289, 290, 291, 292, 293, 294,
	1077, 1110, 1044, 295, 1171, 1172, 621, 0, 296, 297,
	1117, 0, 1098, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1152, 320, 321, 322, 1101, 1099, 1100, 1107, 1103,
	1102, 1106, 323, 324, 325, 326, 327, 1134, 328, 1128,
	1127, 1048, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1119, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1054, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1142,
	1143, 359, 1066, 266, 0, 0, 0, 0, 0, 360,
	361, 362, 1126, 0, 0, 0, 363, 0, 364, 0,
	0, 1153, 365, 366, 1139, 1140, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 1149, 0, 1076,
	377, 0, 378, 379, 380, 381, 382, 1112, 1113, 1116,
	459, 1155, 383, 384, 0, 385, 386, 387, 388, 0,
	0, 0, 267, 389, 390, 391, 393, 0, 1154, 392,
	1121, 1122, 0, 1082, 0, 394, 395, 1156, 1114, 1157,
	396, 397, 398, 1158, 399, 0, 0, 0, 400, 401,
	402, 403, 404, 405, 0, 406, 408, 407, 0, 409,
	1150, 1159, 410, 411, 1160, 0, 412, 0, 0, 0,
	413, 414, 417, 1105, 1104, 415, 416, 418, 419, 0,
	420, 421, 423, 426, 422, 424, 425, 427, 440, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 442, 0, 441, 1161, 443, 444, 445, 450, 452,
	453, 448, 449, 451, 454, 455, 447, 1162, 446, 1045,
	268, 1163, 456, 457, 1067, 1115, 458, 1129, 460, 461,
	0, 0, 462, 0, 0, 0, 464, 465, 466, 0,
	0, 467, 468, 643, 1164, 469, 1165, 1144, 470, 471,
	463, 472, 473, 474, 475, 476, 477, 478, 479, 0,
	480, 481, 645, 482, 483, 484, 646, 485, 486, 487,
	1145, 488, 648, 489, 490, 0, 491, 492, 0, 493,
	494, 495, 496, 497, 498, 499, 1125, 500, 502, 501,
	503, 0, 504, 0, 505, 506, 507, 0, 0, 0,
	0, 508, 0, 510, 511, 512, 513, 509, 514, 515,
	516, 517, 0, 518, 519, 520, 1166, 521, 522, 523,
	524, 1055, 525, 0, 526, 527, 533, 534, 528, 529,
	535, 536, 537, 538, 539, 228, 541, 542, 540, 543,
	544, 545, 1108, 546, 547, 530, 531, 548, 549, 1167,
	550, 551, 552, 553, 554, 555, 1123, 0, 556, 0,
	557, 558, 559, 561, 532, 562, 567, 568, 1170, 563,
	564, 565, 566, 1146, 570, 571, 0, 572, 573, 1043,
	569, 560, 230, 574, 575, 576, 577, 578, 579, 580,
	353, 581, 0, 582, 1135, 1136, 1137, 1138, 0, 591,
	0, 583, 584, 585, 1147, 586, 1148, 1065, 587, 588,
	589, 590, 0, 592, 593, 0, 1049, 594, 595, 596,
	598, 599, 597, 600, 1109, 601, 0, 0, 602, 603,
	604, 1562, 1132, 1169, 0, 606, 605, 607, 663, 0,
	0, 0, 0, 222, 608, 609, 664, 610, 611, 612,
	1046, 0, 223, 0, 0, 0, 0, 0, 1042, 0,
	0, 0, 0, 0, 0, 1040, 1041, 1087, 1059, 1060,
	1061, 1057, 1058, 1070, 1806, 1804, 0, 0, 1069, 0,
	0, 0, 0, 0, 269, 271, 270, 272, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1111, 1075, 0, 0, 0, 279, 280, 1151, 281, 282,
	283, 284, 285, 286, 614, 1124, 0, 287, 1131, 288,
	1130, 2571, 1141, 289, 290, 291, 292, 293, 294, 1077,
	1110, 1044, 295, 1171, 1172, 621, 0, 296, 297, 1117,
	0, 1098, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1152, 320, 321, 322, 1101, 1099, 1100, 1107, 1103, 1102,
	1106, 323, 324, 325, 326, 327, 1134, 328, 1128, 1127,
	1048, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1119, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1054, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1142, 1143,
	359, 1066, 266, 0, 0, 0, 0, 0, 360, 361,
	362, 1126, 0, 0, 0, 363, 0, 364, 0, 2576,
	1153, 365, 366, 1139, 1140, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 1149, 0, 1076, 377,
	0, 378, 379, 380, 381, 382, 1112, 1113, 1116, 459,
	1155, 383, 384, 0, 385, 386, 387, 388, 0, 0,
	0, 267, 389, 390, 391, 393, 0, 1154, 392, 1121,
	1122, 0, 1082, 0, 394, 395, 1156, 1114, 1157, 396,
	397, 398, 1158, 399, 0, 0, 0, 400, 401, 402,
	403, 404, 405, 0, 406, 408, 407, 2572, 409, 1150,
	1159, 410, 411, 1160, 0, 412, 0, 0, 0, 413,
	414, 417, 1105, 1104, 415, 416, 418, 419, 0, 420,
	421, 423, 426, 422, 424, 425, 427, 440, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	442, 0, 441, 1161, 443, 444, 445, 450, 452, 453,
	448, 449, 451, 454, 455, 447, 1162, 446, 1045, 268,
	1163, 456, 457, 1067, 1115, 458, 1129, 460, 461, 0,
	0, 462, 0, 0, 0, 464, 465, 466, 0, 0,
	467, 468, 643, 1164, 469, 1165, 1144, 470, 471, 463,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 480,
	481, 645, 482, 483, 484, 646, 485, 486, 487, 1145,
	488, 648, 489, 490, 0, 491, 492, 0, 493, 494,
	495, 496, 497, 498, 499, 1125, 500, 502, 501, 503,
	0, 504, 0, 505, 506, 507, 0, 0, 0, 0,
	508, 0, 510, 511, 512, 513, 509, 514, 515, 516,
	517, 0, 518, 519, 520, 1166, 521, 522, 523, 524,
	1055, 525, 0, 526, 527, 533, 534, 528, 529, 535,
	536, 537, 538, 539, 0, 541, 542, 540, 543, 544,
	545, 1108, 546, 547, 530, 531, 548, 549, 1167, 550,
	551, 552, 553, 554, 555, 1123, 0, 556, 0, 557,
	558, 559, 561, 532, 562, 567, 568, 1170, 563, 564,
	565, 566, 1146, 570, 571, 0, 572, 573, 1043, 569,
	560, 0, 574, 575, 576, 577, 578, 579, 580, 353,
	581, 0, 582, 1135, 1136, 1137, 1138, 0, 591, 2573,
	583, 584, 585, 1147, 586, 1148, 1065, 587, 588, 589,
	590, 0, 592, 593, 0, 1049, 594, 595, 596, 598,
	599, 597, 600, 1109, 601, 0, 0, 602, 603, 604,
	660, 1132, 1169, 0, 606, 605, 607, 663, 0, 0,
	0, 0, 0, 608, 609, 664, 610, 611, 612, 1046,
	0, 0, 0, 0, 0, 0, 0, 1042, 0, 0,
	0, 0, 0, 0, 1040, 1041, 0, 0, 0, 0,
	0, 0, 0, 1071, 0, 0, 2488, 1069, 1087, 1059,
	1060, 1061, 1057, 1058, 1070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 271, 270, 272, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1111, 1075, 0, 0, 0, 279, 280, 1151, 281,
	282, 283, 284, 285, 286, 614, 1124, 0, 287, 1131,
	288, 1130, 0, 1141, 289, 290, 291, 292, 293, 294,
	1077, 1110, 1044, 295, 1171, 1172, 621, 0, 296, 297,
	1117, 0, 1098, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1152, 320, 321, 322, 1101, 1099, 1100, 1107, 1103,
	1102, 1106, 323, 324, 325, 326, 327, 1134, 328, 1128,
	1127, 1048, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1119, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1054, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1142,
	1143, 359, 1066, 266, 0, 0, 0, 0, 0, 360,
	361, 362, 1126, 0, 0, 0, 363, 0, 364, 0,
	0, 1153, 365, 366, 1139, 1140, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 1149, 0, 1076,
	377, 0, 378, 379, 380, 381, 382, 1112, 1113, 1116,
	459, 1155, 383, 384, 0, 385, 386, 387, 388, 0,
	0, 0, 267, 389, 390, 391, 393, 0, 1154, 392,
	1121, 1122, 0, 1082, 0, 394, 395, 1156, 1114, 1157,
	396, 397, 398, 1158, 399, 0, 0, 0, 400, 401,
	402, 403, 404, 405, 0, 406, 408, 407, 0, 409,
	1150, 1159, 410, 411, 1160, 0, 412, 0, 0, 0,
	413, 414, 417, 1105, 1104, 415, 416, 418, 419, 0,
	420, 421, 423, 426, 422, 424, 425, 427, 440, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 442, 0, 441, 1161, 443, 444, 445, 450, 452,
	453, 448, 449, 451, 454, 455, 447, 1162, 446, 1045,
	268, 1163, 456, 457, 1067, 1115, 458, 1129, 460, 461,
	0, 0, 462, 0, 0, 0, 464, 465, 466, 0,
	0, 467, 468, 643, 1164, 469, 1165, 1144, 470, 471,
	463, 472, 473, 474, 475, 476, 477, 478, 479, 0,
	480, 481, 645, 482, 483, 484, 646, 485, 486, 487,
	1145, 488, 648, 489, 490, 0, 491, 492, 0, 493,
	494, 495, 496, 497, 498, 499, 1125, 500, 502, 501,
	503, 0, 504, 0, 505, 506, 507, 0, 0, 0,
	0, 508, 0, 510, 511, 512, 513, 509, 514, 515,
	516, 517, 0, 518, 519, 520, 1166, 521, 522, 523,
	524, 1055, 525, 0, 526, 527, 533, 534, 528, 529,
	535, 536, 537, 538, 539, 0, 541, 542, 540, 543,
	544, 545, 1108, 546, 547, 530, 531, 548, 549, 1167,
	550, 551, 552, 553, 554, 555, 1123, 0, 556, 0,
	557, 558, 559, 561, 532, 562, 567, 568, 1170, 563,
	564, 565, 566, 1146, 570, 571, 0, 572, 573, 1043,
	569, 560, 0, 574, 575, 576, 577, 578, 579, 580,
	353, 581, 0, 582, 1135, 1136, 1137, 1138, 0, 591,
	0, 583, 584, 585, 1147, 586, 1148, 1065, 587, 588,
	589, 590, 0, 592, 593, 0, 1049, 594, 595, 596,
	598, 599, 597, 600, 1109, 601, 0, 0, 602, 603,
	604, 660, 1132, 1169, 0, 606, 605, 607, 663, 0,
	0, 0, 0, 0, 608, 609, 664, 610, 611, 612,
	1046, 0, 0, 0, 0, 0, 0, 0, 1042, 0,
	0, 0, 0, 0, 0, 1040, 1041, 0, 0, 0,
	0, 0, 0, 0, 1071, 2486, 0, 2485, 1069, 1087,
	1059, 1060, 1061, 1057, 1058, 1070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1111, 1075, 0, 0, 0, 279, 280, 1151,
	281, 282, 283, 284, 285, 286, 614, 1124, 0, 287,
	1131, 288, 1130, 0, 1141, 289, 290, 291, 292, 293,
	294, 1077, 1110, 1044, 295, 1171, 1172, 621, 0, 296,
	297, 1117, 0, 1098, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1152, 320, 321, 322, 1101, 1099, 1100, 1107,
	1103, 1102, 1106, 323, 324, 325, 326, 327, 1134, 328,
	1128, 1127, 1048, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1119, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1054,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1142, 1143, 359, 1066, 266, 0, 0, 0, 0, 0,
	360, 361, 362, 1126, 0, 0, 0, 363, 0, 364,
	0, 0, 1153, 365, 366, 1139, 1140, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 1149, 0,
	1076, 377, 0, 378, 379, 380, 381, 382, 1112, 1113,
	1116, 459, 1155, 383, 384, 0, 385, 386, 387, 388,
	0, 0, 0, 267, 389, 390, 391, 393, 0, 1154,
	392, 1121, 1122, 0, 1082, 0, 394, 395, 1156, 1114,
	1157, 396, 397, 398, 1158, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 0, 406, 408, 407, 0,
	409, 1150, 1159, 410, 411, 1160, 0, 412, 0, 0,
	0, 413, 414, 417, 1105, 1104, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 1161, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 1162, 446,
	1045, 268, 1163, 456, 457, 1067, 1115, 458, 1129, 460,
	461, 0, 0, 462, 0, 0, 0, 464, 465, 466,
	0, 0, 467, 468, 643, 1164, 469, 1165, 1144, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 1145, 488, 648, 489, 490, 0, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 1125, 500, 502,
	501, 503, 0, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 0, 518, 519, 520, 1166, 521, 522,
	523, 524, 1055, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 0, 541, 542, 540,
	543, 544, 545, 1108, 546, 547, 530, 531, 548, 549,
	1167, 550, 551, 552, 553, 554, 555, 1123, 0, 556,
	0, 557, 558, 559, 561, 532, 562, 567, 568, 1170,
	563, 564, 565, 566, 1146, 570, 571, 0, 572, 573,
	1043, 569, 560, 0, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 0, 582, 1135, 1136, 1137, 1138, 0,
	591, 0, 583, 584, 585, 1147, 586, 1148, 1065, 587,
	588, 589, 590, 0, 592, 593, 0, 1049, 594, 595,
	596, 598, 599, 597, 600, 1109, 601, 0, 0, 602,
	603, 604, 660, 1132, 1169, 0, 606, 605, 607, 663,
	0, 0, 0, 0, 0, 608, 609, 664, 610, 611,
	612, 1046, 0, 0, 0, 0, 0, 0, 0, 1042,
	0, 0, 0, 0, 0, 0, 1040, 1041, 0, 0,
	0, 0, 0, 0, 0, 1071, 2483, 0, 2482, 1069,
	1087, 1059, 1060, 1061, 1057, 1058, 1070, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1111, 1075, 0, 0, 0, 279, 280,
	1151, 281, 282, 283, 284, 285, 286, 614, 1124, 0,
	287, 1131, 288, 1130, 0, 1141, 289, 290, 291, 292,
	293, 294, 1077, 1110, 1044, 295, 1171, 1172, 621, 0,
	296, 297, 1117, 0, 1098, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1152, 320, 321, 322, 1101, 1099, 1100,
	1107, 1103, 1102, 1106, 323, 324, 325, 326, 327, 1134,
	328, 1128, 1127, 1048, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1119, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1054, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1142, 1143, 359, 1066, 266, 0, 0, 0, 0,
	0, 360, 361, 362, 1126, 0, 0, 0, 363, 0,
	364, 0, 0, 1153, 365, 366, 1139, 1140, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 1149,
	0, 1076, 377, 0, 378, 379, 380, 381, 382, 1112,
	1113, 1116, 459, 1155, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 267, 389, 390, 391, 393, 0,
	1154, 392, 1121, 1122, 0, 1082, 0, 394, 395, 1156,
	1114, 1157, 396, 397, 398, 1158, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 1150, 1159, 410, 411, 1160, 0, 412, 0,
	0, 0, 413, 414, 417, 1105, 1104, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 1161, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 1162,
	446, 1045, 268, 1163, 456, 457, 1067, 1115, 458, 1129,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 1164, 469, 1165, 1144,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 1145, 488, 648, 489, 490, 0, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 1125, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 1166, 521,
	522, 523, 524, 1055, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 0, 541, 542,
	540, 543, 544, 545, 1108, 546, 547, 530, 531, 548,
	549, 1167, 550, 551, 552, 553, 554, 555, 1123, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	1170, 563, 564, 565, 566, 1146, 570, 571, 0, 572,
	573, 1043, 569, 560, 0, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 1135, 1136, 1137, 1138,
	0, 591, 0, 583, 584, 585, 1147, 586, 1148, 1065,
	587, 588, 589, 590, 0, 592, 593, 0, 1049, 594,
	595, 596, 598, 599, 597, 600, 1109, 601, 0, 0,
	602, 603, 604, 660, 1132, 1169, 0, 606, 605, 607,
	663, 0, 0, 0, 0, 0, 608, 609, 664, 610,
	611, 612, 1046, 0, 0, 0, 0, 0, 0, 0,
	1042, 0, 0, 0, 0, 0, 0, 1040, 1041, 0,
	0, 0, 0, 0, 0, 0, 1071, 2480, 0, 2479,
	1069, 1087, 1059, 1060, 1061, 1057, 1058, 1070, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 271,
	270, 272, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1111, 1075, 0, 0, 0, 279,
	280, 1151, 281, 282, 283, 284, 285, 286, 614, 1124,
	0, 287, 1131, 288, 1130, 0, 1141, 289, 290, 291,
	292, 293, 294, 1077, 1110, 1044, 295, 1171, 1172, 621,
	0, 296, 297, 1117, 0, 1098, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1152, 320, 321, 322, 1101, 1099,
	1100, 1107, 1103, 1102, 1106, 323, 324, 325, 326, 327,
	1134, 328, 1128, 1127, 1048, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1119,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1054, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1142, 1143, 359, 1066, 266, 0, 0, 0,
	0, 0, 360, 361, 362, 1126, 0, 0, 0, 363,
	0, 364, 0, 0, 1153, 365, 366, 1139, 1140, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	1149, 0, 1076, 377, 0, 378, 379, 380, 381, 382,
	1112, 1113, 1116, 459, 1155, 383, 384, 0, 385, 386,
	387, 388, 0, 0, 0, 267, 389, 390, 391, 393,
	0, 1154, 392, 1121, 1122, 0, 1082, 0, 394, 395,
	1156, 1114, 1157, 396, 397, 398, 1158, 399, 0, 0,
	0, 400, 401, 402, 403, 404, 405, 0, 406, 408,
	407, 0, 409, 1150, 1159, 410, 411, 1160, 0, 412,
	0, 0, 0, 413, 414, 417, 1105, 1104, 415, 416,
	418, 419, 0, 420, 421, 423, 426, 422, 424, 425,
	427, 440, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 442, 0, 441, 1161, 443, 444,
	445, 450, 452, 453, 448, 449, 451, 454, 455, 447,
	1162, 446, 1045, 268, 1163, 456, 457, 1067, 1115, 458,
	1129, 460, 461, 0, 0, 462, 0, 0, 0, 464,
	465, 466, 0, 0, 467, 468, 643, 1164, 469, 1165,
	1144, 470, 471, 463, 472, 473, 474, 475, 476, 477,
	478, 479, 0, 480, 481, 645, 482, 483, 484, 646,
	485, 486, 487, 1145, 488, 648, 489, 490, 0, 491,
	492, 0, 493, 494, 495, 496, 497, 498, 499, 1125,
	500, 502, 501, 503, 0, 504, 0, 505, 506, 507,
	0, 0, 0, 0, 508, 0, 510, 511, 512, 513,
	509, 514, 515, 516, 517, 0, 518, 519, 520, 1166,
	521, 522, 523, 524, 1055, 525, 0, 526, 527, 533,
	534, 528, 529, 535, 536, 537, 538, 539, 0, 541,
	542, 540, 543, 544, 545, 1108, 546, 547, 530, 531,
	548, 549, 1167, 550, 551, 552, 553, 554, 555, 1123,
	0, 556, 0, 557, 558, 559, 561, 532, 562, 567,
	568, 1170, 563, 564, 565, 566, 1146, 570, 571, 0,
	572, 573, 1043, 569, 560, 0, 574, 575, 576, 577,
	578, 579, 580, 353, 581, 0, 582, 1135, 1136, 1137,
	1138, 0, 591, 0, 583, 584, 585, 1147, 586, 1148,
	1065, 587, 588, 589, 590, 0, 592, 593, 0, 1049,
	594, 595, 596, 598, 599, 597, 600, 1109, 601, 0,
	0, 602, 603, 604, 660, 1132, 1169, 0, 606, 605,
	607, 663, 0, 0, 0, 0, 0, 608, 609, 664,
	610, 611, 612, 1046, 0, 0, 0, 0, 0, 0,
	0, 1042, 0, 0, 0, 0, 0, 0, 1040, 1041,
	0, 0, 0, 0, 0, 0, 0, 1071, 2477, 0,
	1655, 1069, 1087, 1059, 1060, 1061, 1057, 1058, 1070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	271, 270, 272, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1111, 1075, 0, 0, 0,
	279, 280, 1151, 281, 282, 283, 284, 285, 286, 614,
	1124, 0, 287, 1131, 288, 1130, 0, 1141, 289, 290,
	291, 292, 293, 294, 1077, 1110, 1044, 295, 1171, 1172,
	621, 0, 296, 297, 1117, 0, 1098, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1152, 320, 321, 322, 1101,
	1099, 1100, 1107, 1103, 1102, 1106, 323, 324, 325, 326,
	327, 1134, 328, 1128, 1127, 1048, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1119, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1054, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1142, 1143, 359, 1066, 266, 0, 0,
	0, 0, 0, 360, 361, 362, 1126, 0, 0, 0,
	363, 0, 364, 0, 0, 1153, 365, 366, 1139, 1140,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 1149, 0, 1076, 377, 0, 378, 379, 380, 381,
	382, 1112, 1113, 1116, 459, 1155, 383, 384, 0, 385,
	386, 387, 388, 0, 0, 0, 267, 389, 390, 391,
	393, 0, 1154, 392, 1121, 1122, 0, 1082, 0, 394,
	395, 1156, 1114, 1157, 396, 397, 398, 1158, 399, 0,
	0, 0, 400, 401, 402, 403, 404, 405, 0, 406,
	408, 407, 0, 409, 1150, 1159, 410, 411, 1160, 0,
	412, 0, 0, 0, 413, 414, 417, 1105, 1104, 415,
	416, 418, 419, 0, 420, 421, 423, 426, 422, 424,
	425, 427, 440, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 442, 0, 441, 1161, 443,
	444, 445, 450, 452, 453, 448, 449, 451, 454, 455,
	447, 1162, 446, 1045, 268, 1163, 456, 457, 1067, 1115,
	458, 1129, 460, 461, 0, 0, 462, 0, 0, 0,
	464, 465, 466, 0, 0, 467, 468, 643, 1164, 469,
	1165, 1144, 470, 471, 463, 472, 473, 474, 475, 476,
	477, 478, 479, 0, 480, 481, 645, 482, 483, 484,
	646, 485, 486, 487, 1145, 488, 648, 489, 490, 0,
	491, 492, 0, 493, 494, 495, 496, 497, 498, 499,
	1125, 500, 502, 501, 503, 0, 504, 0, 505, 506,
	507, 0, 0, 0, 0, 508, 0, 510, 511, 512,
	513, 509, 514, 515, 516, 517, 0, 518, 519, 520,
	1166, 521, 522, 523, 524, 1055, 525, 0, 526, 527,
	533, 534, 528, 529, 535, 536, 537, 538, 539, 0,
	541, 542, 540, 543, 544, 545, 1108, 546, 547, 530,
	531, 548, 549, 1167, 550, 551, 552, 553, 554, 555,
	1123, 0, 556, 0, 557, 558, 559, 561, 532, 562,
	567, 568, 1170, 563, 564, 565, 566, 1146, 570, 571,
	0, 572, 573, 1043, 569, 560, 0, 574, 575, 576,
	577, 578, 579, 580, 353, 581, 0, 582, 1135, 1136,
	1137, 1138, 0, 591, 0, 583, 584, 585, 1147, 586,
	1148, 1065, 587, 588, 589, 590, 0, 592, 593, 0,
	1049, 594, 595, 596, 598, 599, 597, 600, 1109, 601,
	0, 0, 602, 603, 604, 660, 1132, 1169, 0, 606,
	605, 607, 663, 0, 1654, 0, 0, 0, 608, 609,
	664, 610, 611, 612, 1046, 0, 0, 0, 0, 0,
	0, 0, 1042, 0, 0, 0, 0, 0, 0, 1040,
	1041, 0, 0, 0, 0, 0, 0, 0, 1071, 0,
	0, 1036, 1069, 1087, 1059, 1060, 1061, 1057, 1058, 1070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 271, 270, 272, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1111, 1075, 0, 0,
	0, 279, 280, 1151, 281, 282, 283, 284, 285, 286,
	614, 1124, 0, 287, 1131, 288, 1130, 0, 1141, 289,
	290, 291, 292, 293, 294, 1077, 1110, 1044, 295, 1171,
	1172, 621, 0, 296, 297, 1117, 0, 1098, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1152, 320, 321, 322,
	1101, 1099, 1100, 1107, 1103, 1102, 1106, 323, 324, 325,
	326, 327, 1134, 328, 1128, 1127, 1048, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1119, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1054, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1142, 1143, 359, 1066, 266, 0,
	0, 0, 0, 0, 360, 361, 362, 1126, 0, 0,
	0, 363, 0, 364, 0, 0, 1153, 365, 366, 1139,
	1140, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 1149, 0, 1076, 377, 0, 378, 379, 380,
	381, 382, 1112, 1113, 1116, 459, 1155, 383, 384, 0,
	385, 386, 387, 388, 0, 0, 0, 267, 389, 390,
	391, 393, 0, 1154, 392, 1121, 1122, 0, 1082, 0,
	394, 395, 1156, 1114, 1157, 396, 397, 398, 1158, 399,
	0, 0, 0, 400, 401, 402, 403, 404, 405, 0,
	406, 408, 407, 0, 409, 1150, 1159, 410, 411, 1160,
	0, 412, 0, 0, 0, 413, 414, 417, 1105, 1104,
	415, 416, 418, 419, 0, 420, 421, 423, 426, 422,
	424, 425, 427, 440, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 442, 0, 441, 1161,
	443, 444, 445, 450, 452, 453, 448, 449, 451, 454,
	455, 447, 1162, 446, 1045, 268, 1163, 456, 457, 1067,
	1115, 458, 1129, 460, 461, 0, 0, 462, 0, 1050,
	0, 464, 465, 466, 0, 0, 467, 468, 643, 1164,
	469, 1165, 1144, 470, 471, 463, 472, 473, 474, 475,
	476, 477, 478, 479, 0, 480, 481, 645, 482, 483,
	484, 646, 485, 486, 487, 1145, 488, 648, 489, 490,
	0, 491, 492, 0, 493, 494, 495, 496, 497, 498,
	499, 1125, 500, 502, 501, 503, 0, 504, 0, 505,
	506, 507, 0, 0, 0, 0, 508, 0, 510, 511,
	512, 513, 509, 514, 515, 516, 517, 0, 518, 519,
	520, 1166, 521, 522, 523, 524, 1055, 525, 0, 526,
	527, 533, 534, 528, 529, 535, 536, 537, 538, 539,
	0, 541, 542, 540, 543, 544, 545, 1108, 546, 547,
	530, 531, 548, 549, 1167, 550, 551, 552, 553, 554,
	555, 1123, 0, 556, 0, 557, 558, 559, 561, 532,
	562, 567, 568, 1170, 563, 564, 565, 566, 1146, 570,
	571, 0, 572, 573, 1043, 569, 560, 0, 574, 575,
	576, 577, 578, 579, 580, 353, 581, 0, 582, 1135,
	1136, 1137, 1138, 0, 591, 0, 583, 584, 585, 1147,
	586, 1148, 1065, 587, 588, 589, 590, 0, 592, 593,
	0, 1049, 594, 595, 596, 598, 599, 597, 600, 1109,
	601, 0, 0, 602, 603, 604, 660, 1132, 1169, 0,
	606, 605, 607, 663, 0, 0, 0, 0, 0, 608,
	609, 664, 610, 611, 612, 1046, 0, 0, 0, 0,
	0, 0, 0, 1042, 0, 0, 0, 0, 0, 0,
	1040, 1041, 1087, 1059, 1060, 1061, 1057, 1058, 1070, 1071,
	0, 0, 0, 1069, 0, 0, 0, 0, 0, 269,
	271, 270, 272, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1111, 1075, 0, 0, 0,
	279, 280, 1151, 281, 282, 283, 284, 285, 286, 614,
	1124, 0, 287, 1131, 288, 1130, 0, 1141, 289, 290,
	291, 292, 293, 294, 1077, 1110, 1044, 295, 1171, 1172,
	621, 0, 296, 297, 1117, 0, 1098, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 4460,
	316, 0, 317, 318, 319, 1152, 320, 321, 322, 1101,
	1099, 1100, 1107, 1103, 1102, 1106, 323, 324, 325, 326,
	327, 1134, 328, 1128, 1127, 1048, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1119, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1054, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1142, 1143, 359, 1066, 266, 0, 0,
	0, 0, 0, 360, 361, 362, 1126, 0, 0, 0,
	363, 0, 364, 0, 0, 1153, 365, 366, 1139, 1140,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 1149, 0, 1076, 377, 0, 378, 379, 380, 381,
	382, 1112, 1113, 1116, 459, 1155, 383, 384, 0, 385,
	386, 387, 388, 0, 0, 0, 267, 389, 390, 391,
	393, 0, 1154, 392, 1121, 1122, 0, 1082, 0, 394,
	395, 1156, 1114, 1157, 396, 397, 398, 1158, 399, 0,
	0, 0, 400, 401, 402, 403, 404, 405, 0, 406,
	408, 407, 0, 409, 1150, 1159, 410, 411, 1160, 0,
	412, 0, 0, 0, 413, 414, 417, 1105, 1104, 415,
	416, 418, 419, 0, 420, 421, 423, 426, 422, 424,
	425, 427, 440, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 442, 0, 441, 1161, 443,
	444, 445, 450, 452, 453, 448, 449, 451, 454, 455,
	447, 1162, 446, 1045, 268, 1163, 456, 457, 1067, 1115,
	458, 1129, 460, 461, 0, 0, 462, 0, 1050, 0,
	464, 465, 466, 0, 0, 467, 468, 643, 1164, 469,
	1165, 1144, 470, 471, 463, 472, 473, 474, 475, 476,
	477, 478, 479, 0, 480, 481, 645, 482, 483, 484,
	646, 485, 486, 487, 1145, 488, 648, 489, 490, 0,
	491, 492, 0, 493, 494, 495, 496, 497, 498, 499,
	1125, 500, 502, 501, 503, 0, 504, 0, 505, 506,
	507, 0, 0, 0, 0, 508, 0, 510, 511, 512,
	513, 509, 514, 515, 516, 517, 0, 518, 519, 520,
	1166, 521, 522, 523, 524, 1055, 525, 0, 526, 527,
	533, 534, 528, 529, 535, 536, 537, 538, 539, 0,
	541, 542, 540, 543, 544, 545, 1108, 546, 547, 530,
	531, 548, 549, 1167, 550, 551, 552, 553, 554, 555,
	1123, 0, 556, 0, 557, 558, 559, 561, 532, 562,
	567, 568, 1170, 563, 564, 565, 566, 1146, 570, 571,
	0, 572, 573, 1043, 569, 560, 0, 574, 575, 576,
	577, 578, 579, 580, 353, 581, 0, 582, 1135, 1136,
	1137, 1138, 0, 591, 0, 583, 584, 585, 1147, 586,
	1148, 1065, 587, 588, 589, 590, 0, 592, 593, 0,
	1049, 594, 595, 596, 598, 599, 597, 600, 1109, 601,
	0, 0, 602, 603, 604, 660, 1132, 1169, 0, 606,
	605, 607, 663, 0, 0, 0, 0, 0, 608, 609,
	664, 610, 611, 612, 1046, 0, 0, 0, 0, 0,
	0, 0, 1042, 0, 0, 0, 0, 0, 0, 1040,
	1041, 1087, 1059, 1060, 1061, 1057, 1058, 1070, 1071, 0,
	0, 0, 1069, 0, 0, 0, 0, 0, 269, 271,
	270, 272, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1111, 1075, 0, 0, 0, 279,
	280, 1151, 281, 282, 283, 284, 285, 286, 614, 1124,
	0, 287, 1131, 288, 1130, 0, 1141, 289, 290, 291,
	292, 293, 294, 1077, 1110, 1044, 295, 1171, 1172, 621,
	0, 296, 297, 1117, 0, 1098, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1152, 320, 321, 322, 1101, 1099,
	1100, 1107, 1103, 1102, 1106, 323, 324, 325, 326, 327,
	1134, 328, 1128, 1127, 1048, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1119,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1054, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1142, 1143, 359, 1066, 266, 0, 0, 0,
	0, 0, 360, 361, 362, 1126, 0, 0, 0, 363,
	0, 364, 0, 0, 1153, 365, 366, 1139, 1140, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	1149, 0, 1076, 377, 0, 378, 379, 380, 381, 382,
	1112, 1113, 1116, 459, 1155, 383, 384, 0, 385, 386,
	387, 388, 0, 0, 0, 2357, 389, 390, 391, 393,
	0, 1154, 392, 1121, 1122, 0, 1082, 0, 394, 395,
	1156, 1114, 1157, 396, 397, 398, 1158, 399, 0, 0,
	0, 400, 401, 402, 403, 404, 405, 0, 406, 408,
	407, 0, 409, 1150, 1159, 410, 411, 1160, 0, 412,
	0, 0, 0, 413, 414, 417, 1105, 1104, 415, 416,
	418, 419, 0, 420, 421, 423, 426, 422, 424, 425,
	427, 440, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 442, 0, 441, 1161, 443, 444,
	445, 450, 452, 453, 448, 449, 451, 454, 455, 447,
	1162, 446, 1045, 268, 1163, 456, 457, 1067, 1115, 458,
	1129, 460, 461, 0, 0, 462, 0, 0, 0, 464,
	465, 466, 0, 0, 467, 468, 643, 1164, 469, 1165,
	1144, 470, 471, 463, 472, 473, 474, 475, 476, 477,
	478, 479, 0, 480, 481, 645, 482, 483, 484, 646,
	485, 486, 487, 1145, 488, 648, 489, 490, 2356, 491,
	492, 0, 493, 494, 495, 496, 497, 498, 499, 1125,
	500, 502, 501, 503, 0, 504, 0, 505, 506, 507,
	0, 0, 0, 0, 508, 0, 510, 511, 512, 513,
	509, 514, 515, 516, 517, 0, 518, 519, 520, 1166,
	521, 522, 523, 524, 1055, 525, 0, 526, 527, 533,
	534, 528, 529, 535, 536, 537, 538, 539, 0, 541,
	542, 540, 543, 544, 545, 1108, 546, 547, 530, 531,
	548, 549, 1167, 550, 551, 552, 553, 554, 555, 1123,
	0, 556, 0, 557, 558, 559, 561, 532, 562, 567,
	568, 1170, 563, 564, 565, 566, 1146, 570, 571, 0,
	572, 573, 1043, 569, 560, 0, 574, 575, 576, 577,
	578, 579, 580, 353, 581, 0, 582, 1135, 1136, 1137,
	1138, 0, 591, 0, 583, 584, 585, 1147, 586, 1148,
	1065, 587, 588, 589, 590, 0, 592, 593, 0, 1049,
	594, 595, 596, 598, 599, 597, 600, 1109, 601, 0,
	0, 602, 603, 604, 660, 1132, 1169, 0, 606, 605,
	607, 663, 0, 0, 0, 0, 0, 608, 609, 664,
	610, 611, 612, 1046, 0, 0, 0, 0, 0, 0,
	0, 1042, 0, 0, 0, 0, 0, 0, 1040, 1041,
	1087, 1059, 1060, 1061, 1057, 1058, 1070, 1071, 0, 0,
	0, 1069, 0, 0, 0, 0, 0, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1111, 1075, 0, 0, 0, 279, 280,
	1151, 281, 282, 283, 284, 285, 286, 614, 1124, 0,
	287, 1131, 288, 1130, 0, 1141, 289, 290, 291, 292,
	293, 294, 1077, 1110, 1044, 295, 1171, 1172, 621, 0,
	296, 297, 1117, 0, 1098, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1152, 320, 321, 322, 1101, 1099, 1100,
	1107, 1103, 1102, 1106, 323, 324, 325, 326, 327, 1134,
	328, 1128, 1127, 1048, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1119, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1054, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1142, 1143, 359, 1066, 266, 0, 0, 0, 0,
	0, 360, 361, 362, 1126, 0, 0, 0, 363, 0,
	364, 0, 0, 1153, 365, 366, 1139, 1140, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 1149,
	0, 1076, 377, 0, 378, 379, 380, 381, 382, 1112,
	1113, 1116, 459, 1155, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 267, 389, 390, 391, 393, 0,
	1154, 392, 1121, 1122, 0, 1082, 0, 394, 395, 1156,
	1114, 1157, 396, 397, 398, 1158, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 1150, 1159, 410, 411, 1160, 0, 412, 0,
	0, 0, 413, 414, 417, 1105, 1104, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 1161, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 1162,
	446, 1045, 268, 1163, 456, 457, 1067, 1115, 458, 1129,
	460, 461, 0, 0, 462, 0, 1050, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 1164, 469, 1165, 1144,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 1145, 488, 648, 489, 490, 0, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 1125, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 1166, 521,
	522, 523, 524, 1055, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 0, 541, 542,
	540, 543, 544, 545, 1108, 546, 547, 530, 531, 548,
	549, 1167, 550, 551, 552, 553, 554, 555, 1123, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	1170, 563, 564, 565, 566, 1146, 570, 571, 0, 572,
	573, 1043, 569, 560, 0, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 1135, 1136, 1137, 1138,
	0, 591, 0, 583, 584, 585, 1147, 586, 1148, 1065,
	587, 588, 589, 590, 0, 592, 593, 0, 1049, 594,
	595, 596, 598, 599, 597, 600, 1109, 601, 0, 0,
	602, 603, 604, 660, 1132, 1169, 0, 606, 605, 607,
	663, 0, 0, 0, 0, 0, 608, 609, 664, 610,
	611, 612, 1046, 0, 0, 0, 0, 0, 0, 0,
	1042, 0, 0, 0, 0, 0, 0, 1040, 1041, 1087,
	1059, 1060, 1061, 1057, 1058, 1070, 1071, 0, 0, 0,
	1069, 0, 0, 0, 0, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1111, 1075, 0, 0, 0, 279, 280, 1151,
	281, 282, 283, 284, 285, 286, 614, 1124, 0, 287,
	1131, 288, 1130, 0, 1141, 289, 290, 291, 292, 293,
	294, 1077, 1110, 1044, 295, 1171, 1172, 621, 0, 296,
	297, 1117, 0, 1098, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 4214, 316, 0, 317,
	318, 319, 1152, 320, 321, 322, 1101, 1099, 1100, 1107,
	1103, 1102, 1106, 323, 324, 325, 326, 327, 1134, 328,
	1128, 1127, 1048, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1119, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1054,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1142, 1143, 359, 1066, 266, 0, 0, 0, 0, 0,
	360, 361, 362, 1126, 0, 0, 0, 363, 0, 364,
	0, 0, 1153, 365, 366, 1139, 1140, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 1149, 0,
	1076, 377, 0, 378, 379, 380, 381, 382, 1112, 1113,
	1116, 459, 1155, 383, 384, 0, 385, 386, 387, 388,
	0, 0, 0, 267, 389, 390, 391, 393, 0, 1154,
	392, 1121, 1122, 0, 1082, 0, 394, 395, 1156, 1114,
	1157, 396, 397, 398, 1158, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 0, 406, 408, 407, 0,
	409, 1150, 1159, 410, 411, 1160, 0, 412, 0, 0,
	0, 413, 414, 417, 1105, 1104, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 1161, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 1162, 446,
	1045, 268, 1163, 456, 457, 1067, 1115, 458, 1129, 460,
	461, 0, 0, 462, 0, 1050, 0, 464, 465, 466,
	0, 0, 467, 468, 643, 1164, 469, 1165, 1144, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 1145, 488, 648, 489, 490, 0, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 1125, 500, 502,
	501, 503, 0, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 0, 518, 519, 520, 1166, 521, 522,
	523, 524, 1055, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 0, 541, 542, 540,
	543, 544, 545, 1108, 546, 547, 530, 531, 548, 549,
	1167, 550, 551, 552, 553, 554, 555, 1123, 0, 556,
	0, 557, 558, 559, 561, 532, 562, 567, 568, 1170,
	563, 564, 565, 566, 1146, 570, 571, 0, 572, 573,
	1043, 569, 560, 0, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 0, 582, 1135, 1136, 1137, 1138, 0,
	591, 0, 583, 584, 585, 1147, 586, 1148, 1065, 587,
	588, 589, 590, 0, 592, 593, 0, 1049, 594, 595,
	596, 598, 599, 597, 600, 1109, 601, 0, 0, 602,
	603, 604, 660, 1132, 1169, 0, 606, 605, 607, 663,
	0, 0, 0, 0, 0, 608, 609, 664, 610, 611,
	612, 1046, 0, 0, 0, 0, 0, 0, 0, 1042,
	0, 0, 0, 0, 0, 0, 1040, 1041, 1087, 1059,
	1060, 1061, 1057, 1058, 1070, 1071, 0, 0, 0, 1069,
	0, 0, 0, 0, 0, 269, 271, 270, 272, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1111, 1075, 0, 0, 0, 279, 280, 1151, 281,
	282, 283, 284, 285, 286, 614, 1124, 0, 287, 1131,
	288, 1130, 0, 1141, 289, 290, 291, 292, 293, 294,
	1077, 1110, 1044, 295, 1171, 1172, 621, 0, 296, 297,
	1117, 0, 1098, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1152, 320, 321, 322, 1101, 1099, 1100, 1107, 1103,
	1102, 1106, 323, 324, 325, 326, 327, 1134, 328, 1128,
	1127, 1048, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1119, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1054, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1142,
	1143, 359, 1066, 266, 0, 0, 0, 0, 0, 360,
	361, 362, 1126, 0, 0, 0, 363, 0, 364, 0,
	0, 1153, 365, 366, 1139, 1140, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 1149, 0, 1076,
	377, 0, 378, 379, 380, 381, 382, 1112, 1113, 1116,
	459, 1155, 383, 384, 0, 385, 386, 387, 388, 0,
	0, 0, 267, 389, 390, 391, 393, 0, 1154, 392,
	1121, 1122, 0, 1082, 0, 394, 395, 1156, 1114, 1157,
	396, 397, 398, 1158, 399, 0, 0, 0, 400, 401,
	402, 403, 404, 405, 0, 406, 408, 407, 0, 409,
	1150, 1159, 410, 411, 1160, 0, 412, 0, 0, 0,
	413, 414, 417, 1105, 1104, 415, 416, 418, 419, 0,
	420, 421, 423, 426, 422, 424, 425, 427, 440, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 442, 0, 441, 1161, 443, 444, 445, 450, 452,
	453, 448, 449, 451, 454, 455, 447, 1162, 446, 1045,
	3833, 1163, 456, 457, 1067, 1115, 458, 1129, 460, 461,
	0, 0, 462, 0, 0, 0, 464, 465, 466, 0,
	0, 467, 468, 643, 1164, 469, 1165, 1144, 470, 471,
	463, 472, 473, 474, 475, 476, 477, 478, 479, 0,
	480, 481, 645, 482, 483, 484, 646, 485, 486, 487,
	1145, 488, 648, 489, 490, 0, 491, 492, 0, 493,
	494, 495, 496, 497, 498, 499, 1125, 500, 502, 501,
	503, 0, 504, 0, 505, 506, 507, 0, 0, 0,
	0, 508, 0, 510, 511, 512, 513, 509, 514, 515,
	516, 517, 0, 518, 519, 520, 1166, 521, 522, 523,
	524, 1055, 525, 0, 526, 527, 533, 534, 528, 529,
	535, 536, 537, 538, 539, 0, 541, 542, 540, 543,
	544, 545, 1108, 546, 547, 530, 531, 548, 549, 1167,
	550, 551, 552, 553, 554, 555, 1123, 0, 556, 0,
	557, 558, 559, 561, 532, 562, 567, 568, 1170, 563,
	564, 565, 566, 1146, 570, 571, 0, 572, 573, 1043,
	569, 560, 0, 574, 575, 576, 577, 578, 579, 580,
	353, 581, 0, 582, 1135, 1136, 1137, 1138, 0, 591,
	0, 583, 584, 585, 1147, 586, 1148, 1065, 587, 588,
	589, 590, 0, 592, 593, 0, 1049, 594, 595, 596,
	598, 599, 597, 600, 1109, 601, 0, 0, 602, 603,
	604, 660, 1132, 1169, 0, 606, 605, 607, 663, 0,
	0, 0, 0, 0, 608, 609, 664, 610, 611, 612,
	1046, 0, 0, 0, 0, 0, 0, 0, 1042, 0,
	0, 0, 0, 0, 0, 1040, 1041, 1874, 0, 0,
	0, 0, 0, 0, 1071, 0, 0, 0, 1069, 1087,
	1059, 1060, 1061, 1057, 1058, 1070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1111, 1075, 0, 0, 0, 279, 280, 1151,
	281, 282, 283, 284, 285, 286, 614, 1124, 0, 287,
	1131, 288, 1130, 0, 1141, 289, 290, 291, 292, 293,
	294, 1077, 1110, 1044, 295, 1171, 1172, 621, 0, 296,
	297, 1117, 0, 1098, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1152, 320, 321, 322, 1101, 1099, 1100, 1107,
	1103, 1102, 1106, 323, 324, 325, 326, 327, 1134, 328,
	1128, 1127, 1048, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1119, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1054,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1142, 1143, 359, 1066, 266, 0, 0, 0, 0, 0,
	360, 361, 362, 1126, 0, 0, 0, 363, 0, 364,
	0, 0, 1153, 365, 366, 1139, 1140, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 1149, 0,
	1076, 377, 0, 378, 379, 380, 381, 382, 1112, 1113,
	1116, 459, 1155, 383, 384, 0, 385, 386, 387, 388,
	0, 0, 0, 267, 389, 390, 391, 393, 0, 1154,
	392, 1121, 1122, 0, 1082, 0, 394, 395, 1156, 1114,
	1157, 396, 397, 398, 1158, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 0, 406, 408, 407, 0,
	409, 1150, 1159, 410, 411, 1160, 0, 412, 0, 0,
	0, 413, 414, 417, 1105, 1104, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 1161, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 1162, 446,
	1045, 268, 1163, 456, 457, 1067, 1115, 458, 1129, 460,
	461, 0, 0, 462, 0, 0, 0, 464, 465, 466,
	0, 0, 467, 468, 643, 1164, 469, 1165, 1144, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 1145, 488, 648, 489, 490, 0, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 1125, 500, 502,
	501, 503, 0, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 0, 518, 519, 520, 1166, 521, 522,
	523, 524, 1055, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 0, 541, 542, 540,
	543, 544, 545, 1108, 546, 547, 530, 531, 548, 549,
	1167, 550, 551, 552, 553, 554, 555, 1123, 0, 556,
	0, 557, 558, 559, 561, 532, 562, 567, 568, 1170,
	563, 564, 565, 566, 1146, 570, 571, 0, 572, 573,
	1043, 569, 560, 0, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 0, 582, 1135, 1136, 1137, 1138, 0,
	591, 0, 583, 584, 585, 1147, 586, 1148, 1065, 587,
	588, 589, 590, 0, 592, 593, 0, 1049, 594, 595,
	596, 598, 599, 597, 600, 1109, 601, 0, 0, 602,
	603, 604, 660, 1132, 1169, 3555, 606, 605, 607, 663,
	0, 0, 0, 0, 0, 608, 609, 664, 610, 611,
	612, 1046, 0, 0, 0, 0, 0, 0, 0, 1042,
	0, 0, 0, 0, 0, 0, 1040, 1041, 1087, 1059,
	1060, 1061, 1057, 1058, 1070, 1071, 0, 0, 0, 1069,
	0, 0, 0, 0, 0, 269, 271, 270, 272, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1111, 1075, 0, 0, 0, 279, 280, 1151, 281,
	282, 283, 284, 285, 286, 614, 1124, 0, 287, 1131,
	288, 1130, 0, 1141, 289, 290, 291, 292, 293, 294,
	1077, 1110, 1044, 295, 1171, 1172, 621, 0, 296, 297,
	1117, 0, 1098, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1152, 320, 321, 322, 1101, 1099, 1100, 1107, 1103,
	1102, 1106, 323, 324, 325, 326, 327, 1134, 328, 1128,
	1127, 1048, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1119, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1054, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1142,
	1143, 359, 1066, 266, 0, 0, 0, 0, 0, 360,
	361, 362, 1126, 0, 0, 0, 363, 0, 364, 0,
	0, 1153, 365, 366, 1139, 1140, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 1149, 0, 1076,
	377, 0, 378, 379, 380, 381, 382, 1112, 1113, 1116,
	459, 1155, 383, 384, 0, 385, 386, 387, 388, 0,
	0, 0, 267, 389, 390, 391, 393, 0, 1154, 392,
	1121, 1122, 0, 1082, 0, 394, 395, 1156, 1114, 1157,
	396, 397, 398, 1158, 399, 0, 0, 0, 400, 401,
	402, 403, 404, 405, 0, 406, 408, 407, 0, 409,
	1150, 1159, 410, 411, 1160, 0, 412, 0, 0, 0,
	413, 414, 417, 1105, 1104, 415, 416, 418, 419, 0,
	420, 421, 423, 426, 422, 424, 425, 427, 440, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 442, 0, 441, 1161, 443, 444, 445, 450, 452,
	453, 448, 449, 451, 454, 455, 447, 1162, 446, 1045,
	268, 1163, 456, 457, 1067, 1115, 458, 1129, 460, 461,
	0, 0, 462, 0, 0, 0, 464, 465, 466, 0,
	0, 467, 468, 643, 1164, 469, 1165, 1144, 470, 471,
	463, 472, 473, 474, 475, 476, 477, 478, 479, 0,
	480, 481, 645, 482, 483, 484, 646, 485, 486, 487,
	1145, 488, 648, 489, 490, 0, 491, 492, 0, 493,
	494, 495, 496, 497, 498, 499, 1125, 500, 502, 501,
	503, 0, 504, 0, 505, 506, 507, 0, 0, 0,
	0, 508, 0, 510, 511, 512, 513, 509, 514, 515,
	516, 517, 0, 518, 519, 520, 1166, 521, 522, 523,
	524, 1055, 525, 0, 526, 527, 533, 534, 528, 529,
	535, 536, 537, 538, 539, 0, 541, 542, 540, 543,
	544, 545, 1108, 546, 547, 530, 531, 548, 549, 1167,
	550, 551, 552, 553, 554, 555, 1123, 0, 556, 0,
	557, 558, 559, 561, 532, 562, 567, 568, 1170, 563,
	564, 565, 566, 1146, 570, 571, 0, 572, 573, 1043,
	569, 560, 0, 574, 575, 576, 577, 578, 579, 580,
	353, 581, 0, 582, 1135, 1136, 1137, 1138, 0, 591,
	0, 583, 584, 585, 1147, 586, 1148, 1065, 587, 588,
	589, 590, 0, 592, 593, 0, 1049, 594, 595, 596,
	598, 599, 597, 600, 1109, 601, 0, 0, 602, 603,
	604, 660, 1132, 1169, 0, 606, 605, 607, 663, 0,
	0, 0, 0, 0, 608, 609, 664, 610, 611, 612,
	1046, 0, 0, 0, 0, 0, 0, 0, 1042, 0,
	0, 0, 0, 0, 0, 1040, 1041, 1874, 0, 0,
	0, 0, 0, 0, 1071, 0, 0, 0, 1069, 1087,
	1059, 1060, 1061, 1057, 1058, 1070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1111, 1075, 0, 0, 0, 279, 280, 1151,
	281, 282, 283, 284, 285, 286, 614, 1124, 0, 287,
	1131, 288, 1130, 0, 1141, 289, 290, 291, 292, 293,
	294, 1077, 1110, 1044, 295, 1171, 1172, 621, 0, 296,
	297, 1117, 0, 1098, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1152, 320, 321, 322, 1101, 1099, 1100, 1107,
	1103, 1102, 1106, 323, 324, 325, 326, 327, 1134, 328,
	1128, 1127, 1048, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1119, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1054,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1142, 1143, 359, 1066, 266, 0, 0, 0, 0, 0,
	360, 361, 362, 1126, 0, 0, 0, 363, 0, 364,
	0, 2576, 1153, 365, 366, 1139, 1140, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 1149, 0,
	1076, 377, 0, 378, 379, 380, 381, 382, 1112, 1113,
	1116, 459, 1155, 383, 384, 0, 385, 386, 387, 388,
	0, 0, 0, 267, 389, 390, 391, 393, 0, 1154,
	392, 1121, 1122, 0, 1082, 0, 394, 395, 1156, 1114,
	1157, 396, 397, 398, 1158, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 0, 406, 408, 407, 0,
	409, 1150, 1159, 410, 411, 1160, 0, 412, 0, 0,
	0, 413, 414, 417, 1105, 1104, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 1161, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 1162, 446,
	1045, 268, 1163, 456, 457, 1067, 1115, 458, 1129, 460,
	461, 0, 0, 462, 0, 0, 0, 464, 465, 466,
	0, 0, 467, 468, 643, 1164, 469, 1165, 1144, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 1145, 488, 648, 489, 490, 0, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 1125, 500, 502,
	501, 503, 0, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 0, 518, 519, 520, 1166, 521, 522,
	523, 524, 1055, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 0, 541, 542, 540,
	543, 544, 545, 1108, 546, 547, 530, 531, 548, 549,
	1167, 550, 551, 552, 553, 554, 555, 1123, 0, 556,
	0, 557, 558, 559, 561, 532, 562, 567, 568, 1170,
	563, 564, 565, 566, 1146, 570, 571, 0, 572, 573,
	1043, 569, 560, 0, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 0, 582, 1135, 1136, 1137, 1138, 0,
	591, 0, 583, 584, 585, 1147, 586, 1148, 1065, 587,
	588, 589, 590, 0, 592, 593, 0, 1049, 594, 595,
	596, 598, 599, 597, 600, 1109, 601, 0, 0, 602,
	603, 604, 660, 1132, 1169, 0, 606, 605, 607, 663,
	0, 0, 0, 0, 0, 608, 609, 664, 610, 611,
	612, 1046, 0, 0, 0, 0, 0, 0, 0, 1042,
	0, 0, 0, 0, 0, 0, 1040, 1041, 1087, 1059,
	1060, 1061, 1057, 1058, 1070, 1071, 0, 0, 0, 1069,
	0, 0, 0, 0, 0, 269, 271, 270, 272, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1111, 1075, 0, 0, 0, 279, 280, 1151, 281,
	282, 283, 284, 285, 286, 614, 1124, 0, 287, 1131,
	288, 1130, 0, 1141, 289, 290, 291, 292, 293, 294,
	1077, 1110, 1044, 295, 1171, 1172, 621, 0, 296, 297,
	1117, 0, 1098, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1152, 320, 321, 322, 1101, 1099, 1100, 1107, 1103,
	1102, 1106, 323, 324, 325, 326, 327, 1134, 328, 1128,
	1127, 1048, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1119, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1054, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1142,
	1143, 359, 1066, 266, 0, 0, 0, 0, 0, 360,
	361, 362, 1126, 0, 0, 0, 363, 0, 364, 0,
	0, 1153, 365, 366, 1139, 1140, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 1149, 0, 1076,
	377, 0, 378, 379, 380, 381, 382, 1112, 1113, 1116,
	459, 1155, 383, 384, 0, 385, 386, 387, 388, 0,
	0, 0, 267, 389, 390, 391, 393, 0, 1154, 392,
	1121, 1122, 0, 1082, 0, 394, 395, 1156, 1114, 1157,
	396, 397, 398, 1158, 399, 0, 0, 0, 400, 401,
	402, 403, 404, 405, 0, 406, 408, 407, 0, 409,
	1150, 1159, 410, 411, 1160, 0, 412, 0, 0, 0,
	413, 414, 417, 1105, 1104, 415, 416, 418, 419, 0,
	420, 421, 423, 426, 422, 424, 425, 427, 440, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 442, 0, 441, 1161, 443, 444, 445, 450, 452,
	453, 448, 449, 451, 454, 455, 447, 1162, 446, 1045,
	268, 1163, 456, 457, 1067, 1115, 458, 1129, 460, 461,
	0, 0, 462, 0, 0, 0, 464, 465, 466, 0,
	0, 467, 468, 643, 1164, 469, 1165, 1144, 470, 471,
	463, 472, 473, 474, 475, 476, 477, 478, 479, 0,
	480, 481, 645, 482, 483, 484, 646, 485, 486, 487,
	1145, 488, 648, 489, 490, 0, 491, 492, 0, 493,
	494, 495, 496, 497, 498, 499, 1125, 500, 502, 501,
	503, 0, 504, 0, 505, 506, 507, 0, 0, 0,
	0, 508, 0, 510, 511, 512, 513, 509, 514, 515,
	516, 517, 0, 518, 519, 520, 1166, 521, 522, 523,
	524, 1055, 525, 0, 526, 527, 533, 534, 528, 529,
	535, 536, 537, 538, 539, 0, 541, 542, 540, 543,
	544, 545, 1108, 546, 547, 530, 531, 548, 549, 1167,
	550, 551, 552, 553, 554, 555, 1123, 0, 556, 0,
	557, 558, 559, 561, 532, 562, 567, 568, 1170, 563,
	564, 565, 566, 1146, 570, 571, 0, 572, 573, 1043,
	569, 560, 0, 574, 575, 576, 577, 578, 579, 580,
	353, 581, 0, 582, 1135, 1136, 1137, 1138, 0, 591,
	0, 583, 584, 585, 1147, 586, 1148, 1065, 587, 588,
	589, 590, 0, 592, 593, 0, 1049, 594, 595, 596,
	598, 599, 597, 600, 1109, 601, 0, 0, 602, 603,
	604, 660, 1132, 1169, 0, 606, 605, 607, 663, 0,
	0, 0, 0, 0, 608, 609, 664, 610, 611, 612,
	1046, 0, 0, 0, 0, 0, 0, 0, 1042, 0,
	0, 0, 0, 0, 0, 1040, 1041, 0, 0, 0,
	0, 0, 0, 0, 1071, 1804, 0, 2581, 1069, 1087,
	1059, 1060, 1061, 1057, 1058, 1070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1111, 1075, 0, 0, 0, 279, 280, 1151,
	281, 282, 283, 284, 285, 286, 614, 1124, 0, 287,
	1131, 288, 1130, 0, 1141, 289, 290, 291, 292, 293,
	294, 1077, 1110, 1044, 295, 1171, 1172, 621, 0, 296,
	297, 1117, 0, 1098, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1152, 320, 321, 322, 1101, 1099, 1100, 1107,
	1103, 1102, 1106, 323, 324, 325, 326, 327, 1134, 328,
	1128, 1127, 1048, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1119, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1054,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1142, 1143, 359, 1066, 266, 0, 0, 0, 0, 0,
	360, 361, 362, 1126, 0, 0, 0, 363, 0, 364,
	0, 0, 1153, 365, 366, 1139, 1140, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 1149, 0,
	1076, 377, 0, 378, 379, 380, 381, 382, 1112, 1113,
	1116, 459, 1155, 383, 384, 0, 385, 386, 387, 388,
	0, 0, 0, 267, 389, 390, 391, 393, 0, 1154,
	392, 1121, 1122, 0, 1082, 0, 394, 395, 1156, 1114,
	1157, 396, 397, 398, 1158, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 0, 406, 408, 407, 0,
	409, 1150, 1159, 410, 411, 1160, 0, 412, 0, 0,
	0, 413, 414, 417, 1105, 1104, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 1161, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 1162, 446,
	1045, 268, 1163, 456, 457, 1067, 1115, 458, 1129, 460,
	461, 0, 0, 462, 0, 0, 0, 464, 465, 466,
	0, 0, 467, 468, 643, 1164, 469, 1165, 1144, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 1145, 488, 648, 489, 490, 0, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 1125, 500, 502,
	501, 503, 0, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 0, 518, 519, 520, 1166, 521, 522,
	523, 524, 1055, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 0, 541, 542, 540,
	543, 544, 545, 1108, 546, 547, 530, 531, 548, 549,
	1167, 550, 551, 552, 553, 554, 555, 1123, 0, 556,
	0, 557, 558, 559, 561, 532, 562, 567, 568, 1170,
	563, 564, 565, 566, 1146, 570, 571, 0, 572, 573,
	1043, 569, 560, 0, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 0, 582, 1135, 1136, 1137, 1138, 0,
	591, 0, 583, 584, 585, 1147, 586, 1148, 1065, 587,
	588, 589, 590, 0, 592, 593, 0, 1049, 594, 595,
	596, 598, 599, 597, 600, 1109, 601, 0, 0, 602,
	603, 604, 660, 1132, 1169, 0, 606, 605, 607, 663,
	0, 0, 0, 0, 0, 608, 609, 664, 610, 611,
	612, 1046, 0, 0, 0, 0, 0, 0, 0, 1042,
	0, 0, 0, 0, 0, 0, 1040, 1041, 0, 0,
	0, 0, 0, 0, 0, 1071, 0, 0, 2579, 1069,
	1087, 1059, 1060, 1061, 1057, 1058, 1070, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1111, 1075, 0, 0, 0, 279, 280,
	1151, 281, 282, 283, 284, 285, 286, 614, 1124, 0,
	287, 1131, 288, 1130, 0, 1141, 289, 290, 291, 292,
	293, 294, 1077, 1110, 1044, 295, 1171, 1172, 621, 0,
	296, 297, 1117, 0, 1098, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1152, 320, 321, 322, 1101, 1099, 1100,
	1107, 1103, 1102, 1106, 323, 324, 325, 326, 327, 1134,
	328, 1128, 1127, 1048, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1119, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1054, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1142, 1143, 359, 1066, 266, 0, 0, 0, 0,
	0, 360, 361, 362, 1126, 0, 0, 0, 363, 0,
	364, 0, 0, 1153, 365, 366, 1139, 1140, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 1149,
	0, 1076, 377, 0, 378, 379, 380, 381, 382, 1112,
	1113, 1116, 459, 1155, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 267, 389, 390, 391, 393, 0,
	1154, 392, 1121, 1122, 0, 1082, 0, 394, 395, 1156,
	1114, 1157, 396, 397, 398, 1158, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 1150, 1159, 410, 411, 1160, 0, 412, 0,
	0, 0, 413, 414, 417, 1105, 1104, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 1161, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 1162,
	446, 1045, 268, 1163, 456, 457, 1067, 1115, 458, 1129,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 1164, 469, 1165, 1144,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 1145, 488, 648, 489, 490, 0, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 1125, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 1166, 521,
	522, 523, 524, 1055, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 0, 541, 542,
	540, 543, 544, 545, 1108, 546, 547, 530, 531, 548,
	549, 1167, 550, 551, 552, 553, 554, 555, 1123, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	1170, 563, 564, 565, 566, 1146, 570, 571, 0, 572,
	573, 1043, 569, 560, 0, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 1135, 1136, 1137, 1138,
	0, 591, 0, 583, 584, 585, 1147, 586, 1148, 1065,
	587, 588, 589, 590, 0, 592, 593, 0, 1049, 594,
	595, 596, 598, 599, 597, 600, 1109, 601, 0, 0,
	602, 603, 604, 660, 1132, 1169, 0, 606, 605, 607,
	663, 0, 0, 0, 0, 0, 608, 609, 664, 610,
	611, 612, 1046, 0, 0, 0, 0, 0, 0, 0,
	1042, 0, 0, 0, 0, 0, 0, 1040, 1041, 0,
	0, 0, 0, 0, 0, 0, 1071, 0, 0, 2567,
	1069, 1087, 1059, 1060, 1061, 1057, 1058, 1070, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 271,
	270, 272, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1111, 1075, 0, 0, 0, 279,
	280, 1151, 281, 282, 283, 284, 285, 286, 614, 1124,
	0, 287, 1131, 288, 1130, 0, 1141, 289, 290, 291,
	292, 293, 294, 1077, 1110, 1044, 295, 1171, 1172, 621,
	0, 296, 297, 1117, 0, 1098, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1152, 320, 321, 322, 1101, 1099,
	1100, 1107, 1103, 1102, 1106, 323, 324, 325, 326, 327,
	1134, 328, 1128, 1127, 1048, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1119,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1054, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1142, 1143, 359, 1066, 266, 0, 0, 0,
	0, 0, 360, 361, 362, 1126, 0, 0, 0, 363,
	0, 364, 0, 0, 1153, 365, 366, 1139, 1140, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	1149, 0, 1076, 377, 0, 378, 379, 380, 381, 382,
	1112, 1113, 1116, 459, 1155, 383, 384, 0, 385, 386,
	387, 388, 0, 0, 0, 267, 389, 390, 391, 393,
	0, 1154, 392, 1121, 1122, 0, 1082, 0, 394, 395,
	1156, 1114, 1157, 396, 397, 398, 1158, 399, 0, 0,
	0, 400, 401, 402, 403, 404, 405, 0, 406, 408,
	407, 0, 409, 1150, 1159, 410, 411, 1160, 0, 412,
	0, 0, 0, 413, 414, 417, 1105, 1104, 415, 416,
	418, 419, 0, 420, 421, 423, 426, 422, 424, 425,
	427, 440, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 442, 0, 441, 1161, 443, 444,
	445, 450, 452, 453, 448, 449, 451, 454, 455, 447,
	1162, 446, 1045, 268, 1163, 456, 457, 1067, 1115, 458,
	1129, 460, 461, 0, 0, 462, 0, 0, 0, 464,
	465, 466, 0, 0, 467, 468, 643, 1164, 469, 1165,
	1144, 470, 471, 463, 472, 473, 474, 475, 476, 477,
	478, 479, 0, 480, 481, 645, 482, 483, 484, 646,
	485, 486, 487, 1145, 488, 648, 489, 490, 0, 491,
	492, 0, 493, 494, 495, 496, 497, 498, 499, 1125,
	500, 502, 501, 503, 0, 504, 0, 505, 506, 507,
	0, 0, 0, 0, 508, 0, 510, 511, 512, 513,
	509, 514, 515, 516, 517, 0, 518, 519, 520, 1166,
	521, 522, 523, 524, 1055, 525, 0, 526, 527, 533,
	534, 528, 529, 535, 536, 537, 538, 539, 0, 541,
	542, 540, 543, 544, 545, 1108, 546, 547, 530, 531,
	548, 549, 1167, 550, 551, 552, 553, 554, 555, 1123,
	0, 556, 0, 557, 558, 559, 561, 532, 562, 567,
	568, 1170, 563, 564, 565, 566, 1146, 570, 571, 0,
	572, 573, 1043, 569, 560, 0, 574, 575, 576, 577,
	578, 579, 580, 353, 581, 0, 582, 1135, 1136, 1137,
	1138, 0, 591, 0, 583, 584, 585, 1147, 586, 1148,
	1065, 587, 588, 589, 590, 0, 592, 593, 0, 1049,
	594, 595, 596, 598, 599, 597, 600, 1109, 601, 0,
	0, 602, 603, 604, 660, 1132, 1169, 0, 606, 605,
	607, 663, 0, 0, 0, 0, 0, 608, 609, 664,
	610, 611, 612, 1046, 0, 0, 0, 0, 0, 0,
	0, 1042, 0, 0, 0, 0, 0, 0, 1040, 1041,
	0, 0, 0, 0, 0, 0, 0, 1071, 0, 0,
	2556, 1069, 1087, 1059, 1060, 1061, 1057, 1058, 1070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	271, 270, 272, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1111, 1075, 0, 0, 0,
	279, 280, 1151, 281, 282, 283, 284, 285, 286, 614,
	1124, 0, 287, 1131, 288, 1130, 0, 1141, 289, 290,
	291, 292, 293, 294, 1077, 1110, 1044, 295, 1171, 1172,
	621, 0, 296, 297, 1117, 0, 1098, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1152, 320, 321, 322, 1101,
	1099, 1100, 1107, 1103, 1102, 1106, 323, 324, 325, 326,
	327, 1134, 328, 1128, 1127, 1048, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1119, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1054, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1142, 1143, 359, 1066, 266, 0, 0,
	0, 0, 0, 360, 361, 362, 1126, 0, 0, 0,
	363, 0, 364, 0, 0, 1153, 365, 366, 1139, 1140,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 1149, 0, 1076, 377, 0, 378, 379, 380, 381,
	382, 1112, 1113, 1116, 459, 1155, 383, 384, 0, 385,
	386, 387, 388, 0, 0, 0, 267, 389, 390, 391,
	393, 0, 1154, 392, 1121, 1122, 0, 1082, 0, 394,
	395, 1156, 1114, 1157, 396, 397, 398, 1158, 399, 0,
	0, 0, 400, 401, 402, 403, 404, 405, 0, 406,
	408, 407, 0, 409, 1150, 1159, 410, 411, 1160, 0,
	412, 0, 0, 0, 413, 414, 417, 1105, 1104, 415,
	416, 418, 419, 0, 420, 421, 423, 426, 422, 424,
	425, 427, 440, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 442, 0, 441, 1161, 443,
	444, 445, 450, 452, 453, 448, 449, 451, 454, 455,
	447, 1162, 446, 1045, 268, 1163, 456, 457, 1067, 1115,
	458, 1129, 460, 461, 0, 0, 462, 0, 0, 0,
	464, 465, 466, 0, 0, 467, 468, 643, 1164, 469,
	1165, 1144, 470, 471, 463, 472, 473, 474, 475, 476,
	477, 478, 479, 0, 480, 481, 645, 482, 483, 484,
	646, 485, 486, 487, 1145, 488, 648, 489, 490, 0,
	491, 492, 0, 493, 494, 495, 496, 497, 498, 499,
	1125, 500, 502, 501, 503, 0, 504, 0, 505, 506,
	507, 0, 0, 0, 0, 508, 0, 510, 511, 512,
	513, 509, 514, 515, 516, 517, 0, 518, 519, 520,
	1166, 521, 522, 523, 524, 1055, 525, 0, 526, 527,
	533, 534, 528, 529, 535, 536, 537, 538, 539, 0,
	541, 542, 540, 543, 544, 545, 1108, 546, 547, 530,
	531, 548, 549, 1167, 550, 551, 552, 553, 554, 555,
	1123, 0, 556, 0, 557, 558, 559, 561, 532, 562,
	567, 568, 1170, 563, 564, 565, 566, 1146, 570, 571,
	0, 572, 573, 1043, 569, 560, 0, 574, 575, 576,
	577, 578, 579, 580, 353, 581, 0, 582, 1135, 1136,
	1137, 1138, 0, 591, 0, 583, 584, 585, 1147, 586,
	1148, 1065, 587, 588, 589, 590, 0, 592, 593, 0,
	1049, 594, 595, 596, 598, 599, 597, 600, 1109, 601,
	0, 0, 602, 603, 604, 660, 1132, 1169, 0, 606,
	605, 607, 663, 0, 0, 0, 0, 0, 608, 609,
	664, 610, 611, 612, 1046, 0, 0, 0, 0, 0,
	0, 0, 1042, 0, 0, 0, 0, 0, 0, 1040,
	1041, 0, 0, 0, 0, 0, 0, 0, 1071, 0,
	0, 2554, 1069, 2545, 2552, 1060, 1061, 1057, 1058, 1070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 271, 270, 272, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1111, 1075, 0, 0,
	0, 279, 280, 1151, 281, 282, 283, 284, 285, 286,
	614, 1124, 0, 287, 1131, 288, 1130, 0, 1141, 289,
	290, 291, 292, 293, 294, 1077, 1110, 1044, 295, 1171,
	1172, 621, 0, 296, 297, 1117, 0, 1098, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1152, 320, 321, 322,
	1101, 1099, 1100, 1107, 1103, 1102, 1106, 323, 324, 325,
	326, 327, 1134, 2548, 1128, 1127, 1048, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1119, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1054, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1142, 1143, 359, 1066, 266, 0,
	0, 0, 0, 0, 360, 361, 362, 1126, 0, 0,
	0, 363, 0, 364, 0, 0, 1153, 365, 366, 1139,
	1140, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 1149, 0, 1076, 377, 0, 378, 379, 380,
	2549, 382, 1112, 1113, 1116, 459, 1155, 383, 384, 0,
	385, 386, 387, 388, 0, 0, 0, 267, 389, 390,
	391, 393, 0, 1154, 392, 1121, 1122, 0, 1082, 0,
	394, 395, 1156, 1114, 1157, 396, 397, 398, 1158, 399,
	0, 0, 0, 400, 401, 402, 403, 404, 405, 0,
	406, 408, 407, 0, 409, 1150, 1159, 410, 411, 1160,
	0, 412, 0, 0, 0, 413, 414, 417, 1105, 1104,
	415, 416, 418, 419, 0, 420, 421, 423, 426, 422,
	424, 2550, 427, 2547, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 442, 0, 441, 1161,
	443, 444, 445, 450, 452, 453, 448, 449, 451, 454,
	455, 447, 1162, 446, 1045, 268, 1163, 456, 457, 1067,
	1115, 458, 1129, 460, 461, 0, 0, 462, 0, 0,
	0, 464, 465, 466, 0, 0, 467, 468, 643, 1164,
	469, 1165, 1144, 470, 471, 463, 472, 473, 474, 475,
	476, 477, 478, 479, 0, 480, 481, 645, 482, 483,
	484, 646, 485, 486, 487, 1145, 488, 648, 489, 490,
	0, 491, 492, 0, 493, 494, 495, 496, 497, 498,
	499, 1125, 500, 502, 501, 503, 0, 504, 0, 505,
	506, 507, 0, 0, 0, 0, 508, 0, 510, 511,
	512, 513, 509, 514, 515, 516, 517, 0, 518, 519,
	520, 1166, 521, 522, 523, 524, 1055, 525, 0, 526,
	527, 533, 534, 528, 529, 535, 536, 537, 538, 2551,
	0, 541, 542, 540, 543, 544, 545, 1108, 546, 547,
	530, 531, 548, 549, 1167, 550, 551, 552, 553, 554,
	555, 1123, 0, 556, 0, 557, 558, 559, 561, 532,
	562, 567, 568, 1170, 563, 564, 565, 566, 1146, 570,
	571, 0, 572, 573, 1043, 569, 560, 0, 574, 575,
	576, 577, 578, 579, 580, 353, 581, 0, 582, 1135,
	1136, 1137, 1138, 0, 591, 0, 583, 584, 585, 1147,
	586, 1148, 1065, 587, 588, 589, 590, 0, 592, 593,
	0, 1049, 594, 595, 596, 598, 599, 597, 600, 1109,
	601, 0, 0, 602, 603, 604, 660, 1132, 1169, 0,
	606, 605, 607, 663, 0, 0, 0, 0, 0, 608,
	609, 664, 610, 2546, 612, 1046, 0, 0, 0, 0,
	0, 0, 0, 1042, 0, 0, 0, 0, 0, 0,
	1040, 1041, 0, 0, 0, 0, 0, 0, 0, 1071,
	0, 0, 2542, 1069, 2545, 2552, 1060, 1061, 1057, 1058,
	1070, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 271, 270, 272, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1111, 1075, 0,
	0, 0, 279, 280, 1151, 281, 282, 283, 284, 285,
	286, 614, 1124, 0, 287, 1131, 288, 1130, 0, 1141,
	289, 290, 291, 292, 293, 294, 1077, 1110, 1044, 295,
	1171, 1172, 621, 0, 296, 297, 1117, 0, 1098, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1152, 320, 321,
	322, 1101, 1099, 1100, 1107, 1103, 1102, 1106, 323, 324,
	325, 326, 327, 1134, 2548, 1128, 1127, 1048, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1119, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1054, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1142, 1143, 359, 1066, 266,
	0, 0, 0, 0, 0, 360, 361, 362, 1126, 0,
	0, 0, 363, 0, 364, 0, 0, 1153, 365, 366,
	1139, 1140, 367, 368, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 1149, 0, 1076, 377, 0, 378, 379,
	380, 2549, 382, 1112, 1113, 1116, 459, 1155, 383, 384,
	0, 385, 386, 387, 388, 0, 0, 0, 267, 389,
	390, 391, 393, 0, 1154, 392, 1121, 1122, 0, 1082,
	0, 394, 395, 1156, 1114, 1157, 396, 397, 398, 1158,
	399, 0, 0, 0, 400, 401, 402, 403, 404, 405,
	0, 406, 408, 407, 0, 409, 1150, 1159, 410, 411,
	1160, 0, 412, 0, 0, 0, 413, 414, 417, 1105,
	1104, 415, 416, 418, 419, 0, 420, 421, 423, 426,
	422, 424, 2550, 427, 2547, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 442, 0, 441,
	1161, 443, 444, 445, 450, 452, 453, 448, 449, 451,
	454, 455, 447, 1162, 446, 1045, 268, 1163, 456, 457,
	1067, 1115, 458, 1129, 460, 461, 0, 0, 462, 0,
	0, 0, 464, 465, 466, 0, 0, 467, 468, 643,
	1164, 469, 1165, 1144, 470, 471, 463, 472, 473, 474,
	475, 476, 477, 478, 479, 0, 480, 481, 645, 482,
	483, 484, 646, 485, 486, 487, 1145, 488, 648, 489,
	490, 0, 491, 492, 0, 493, 494, 495, 496, 497,
	498, 499, 1125, 500, 502, 501, 503, 0, 504, 0,
	505, 506, 507, 0, 0, 0, 0, 508, 0, 510,
	511, 512, 513, 509, 514, 515, 516, 517, 0, 518,
	519, 520, 1166, 521, 522, 523, 524, 1055, 525, 0,
	526, 527, 533, 534, 528, 529, 535, 536, 537, 538,
	2551, 0, 541, 542, 540, 543, 544, 545, 1108, 546,
	547, 530, 531, 548, 549, 1167, 550, 551, 552, 553,
	554, 555, 1123, 0, 556, 0, 557, 558, 559, 561,
	532, 562, 567, 568, 1170, 563, 564, 565, 566, 1146,
	570, 571, 0, 572, 573, 1043, 569, 560, 0, 574,
	575, 576, 577, 578, 579, 580, 353, 581, 0, 582,
	1135, 1136, 1137, 1138, 0, 591, 0, 583, 584, 585,
	1147, 586, 1148, 1065, 587, 588, 589, 590, 0, 592,
	593, 0, 1049, 594, 595, 596, 598, 599, 597, 600,
	1109, 601, 0, 0, 602, 603, 604, 660, 1132, 1169,
	0, 606, 605, 607, 663, 0, 0, 0, 0, 0,
	608, 609, 664, 610, 2546, 612, 1046, 0, 0, 0,
	0, 0, 0, 0, 1042, 0, 0, 0, 0, 0,
	0, 1040, 1041, 1087, 1059, 1060, 1061, 1057, 1058, 1070,
	1071, 0, 0, 0, 1069, 0, 0, 0, 0, 0,
	269, 271, 270, 272, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1111, 1075, 0, 0,
	0, 279, 280, 1151, 281, 282, 283, 284, 285, 286,
	614, 1124, 0, 287, 1131, 288, 1130, 0, 1141, 289,
	290, 291, 292, 293, 294, 1077, 1110, 1044, 295, 1171,
	1172, 621, 0, 296, 297, 1117, 0, 1098, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1152, 320, 321, 322,
	1101, 1099, 1100, 1107, 1103, 1102, 1106, 323, 324, 325,
	326, 327, 1134, 328, 1128, 1127, 1048, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1119, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1054, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1142, 1143, 359, 1066, 266, 0,
	0, 0, 0, 0, 360, 361, 362, 1126, 0, 0,
	0, 363, 0, 364, 0, 0, 1153, 365, 366, 1139,
	1140, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 1149, 0, 1076, 377, 0, 378, 379, 380,
	381, 382, 1112, 1113, 1116, 459, 1155, 383, 384, 0,
	385, 386, 387, 388, 0, 0, 0, 267, 389, 390,
	391, 393, 0, 1154, 392, 1121, 1122, 0, 1082, 0,
	394, 395, 1156, 1114, 1157, 396, 397, 398, 1158, 399,
	0, 0, 0, 400, 401, 402, 403, 404, 405, 0,
	406, 408, 407, 0, 409, 1150, 1159, 410, 411, 1160,
	0, 412, 0, 0, 0, 413, 414, 417, 1105, 1104,
	415, 416, 418, 419, 0, 420, 421, 423, 426, 422,
	424, 425, 427, 440, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 442, 0, 441, 1161,
	443, 444, 445, 450, 452, 453, 448, 449, 451, 454,
	455, 447, 1162, 446, 1045, 268, 1163, 456, 457, 1067,
	1115, 458, 1129, 460, 461, 0, 0, 462, 0, 0,
	0, 464, 465, 466, 0, 0, 467, 468, 643, 1164,
	469, 1165, 1144, 470, 471, 463, 472, 473, 474, 475,
	476, 477, 478, 479, 0, 480, 481, 645, 482, 483,
	484, 646, 485, 486, 487, 1145, 488, 648, 489, 490,
	0, 491, 492, 0, 493, 494, 495, 496, 497, 498,
	499, 1125, 500, 502, 501, 503, 0, 504, 0, 505,
	506, 507, 0, 0, 0, 0, 508, 0, 510, 511,
	512, 513, 509, 514, 515, 516, 517, 0, 518, 519,
	520, 1166, 521, 522, 523, 524, 1055, 525, 0, 526,
	527, 533, 534, 528, 529, 535, 536, 537, 538, 539,
	0, 541, 542, 540, 543, 544, 545, 1108, 546, 547,
	530, 531, 548, 549, 1167, 550, 551, 552, 553, 554,
	555, 1123, 0, 556, 0, 557, 558, 559, 561, 532,
	562, 567, 568, 1170, 563, 564, 565, 566, 1146, 570,
	571, 0, 572, 573, 1043, 569, 560, 0, 574, 575,
	576, 577, 578, 579, 580, 353, 581, 0, 582, 1135,
	1136, 1137, 1138, 0, 591, 0, 583, 584, 585, 1147,
	586, 1148, 1065, 587, 588, 589, 590, 0, 592, 593,
	0, 1049, 594, 595, 596, 598, 599, 597, 600, 1109,
	601, 0, 0, 602, 603, 604, 660, 1132, 1169, 0,
	606, 605, 607, 663, 0, 0, 0, 0, 0, 608,
	609, 664, 610, 611, 612, 1046, 0, 0, 0, 0,
	0, 0, 0, 1042, 0, 0, 0, 0, 0, 0,
	1040, 1041, 0, 0, 0, 0, 0, 1812, 0, 1071,
	0, 0, 0, 1069, 1087, 1059, 1060, 1061, 1057, 1058,
	1070, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 271, 270, 272, 273, 274, 275, 276, 2336,
	277, 278, 0, 0, 0, 0, 0, 1111, 1075, 0,
	0, 0, 279, 280, 1151, 281, 282, 283, 284, 285,
	286, 614, 1124, 0, 287, 1131, 288, 1130, 0, 1141,
	289, 290, 291, 292, 293, 294, 1077, 1110, 1044, 295,
	1171, 1172, 621, 0, 296, 297, 1117, 0, 1098, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1152, 320, 321,
	322, 1101, 1099, 1100, 1107, 1103, 1102, 1106, 323, 324,
	325, 326, 327, 1134, 328, 1128, 1127, 1048, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1119, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1054, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1142, 1143, 359, 1066, 266,
	0, 0, 0, 0, 0, 360, 361, 362, 1126, 0,
	0, 0, 363, 0, 364, 0, 0, 1153, 365, 366,
	1139, 1140, 367, 368, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 1149, 0, 1076, 377, 0, 378, 379,
	380, 381, 382, 1112, 1113, 1116, 459, 1155, 383, 384,
	0, 385, 386, 387, 388, 0, 0, 0, 267, 389,
	390, 391, 393, 0, 1154, 392, 1121, 1122, 0, 1082,
	0, 394, 395, 1156, 1114, 1157, 396, 397, 398, 1158,
	399, 0, 0, 0, 400, 401, 402, 403, 404, 405,
	0, 406, 408, 407, 0, 409, 1150, 1159, 410, 411,
	1160, 0, 412, 0, 0, 0, 413, 414, 417, 1105,
	1104, 415, 416, 418, 419, 0, 420, 421, 423, 426,
	422, 424, 425, 427, 440, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 442, 0, 441,
	1161, 443, 444, 445, 450, 452, 453, 448, 449, 451,
	454, 455, 447, 1162, 446, 1045, 268, 1163, 456, 457,
	1067, 1115, 458, 1129, 460, 461, 0, 0, 462, 0,
	0, 0, 464, 465, 466, 0, 0, 467, 468, 643,
	1164, 469, 1165, 1144, 470, 471, 463, 472, 473, 474,
	475, 476, 477, 478, 479, 0, 480, 481, 645, 482,
	483, 484, 646, 485, 486, 487, 1145, 488, 648, 489,
	490, 0, 491, 492, 0, 493, 494, 495, 496, 497,
	498, 499, 1125, 500, 502, 501, 503, 0, 504, 0,
	505, 506, 507, 0, 0, 0, 0, 508, 0, 510,
	511, 512, 513, 509, 514, 515, 516, 517, 0, 518,
	519, 520, 1166, 521, 522, 523, 524, 1055, 525, 0,
	526, 527, 533, 534, 528, 529, 535, 536, 537, 538,
	539, 0, 541, 542, 540, 543, 544, 545, 1108, 546,
	547, 530, 531, 548, 549, 1167, 550, 551, 552, 553,
	554, 555, 1123, 0, 556, 0, 557, 558, 559, 561,
	532, 562, 567, 568, 1170, 563, 564, 565, 566, 1146,
	570, 571, 0, 572, 573, 1043, 569, 560, 0, 574,
	575, 576, 577, 578, 579, 580, 353, 581, 0, 582,
	1135, 1136, 1137, 1138, 0, 591, 0, 583, 584, 585,
	1147, 586, 1148, 1065, 587, 588, 589, 590, 0, 592,
	593, 0, 1049, 594, 595, 596, 598, 599, 597, 600,
	1109, 601, 0, 0, 602, 603, 604, 660, 1132, 1169,
	0, 606, 605, 607, 663, 0, 0, 0, 0, 0,
	608, 609, 664, 610, 611, 612, 1046, 0, 0, 0,
	0, 0, 0, 0, 1042, 0, 0, 0, 0, 0,
	0, 1040, 1041, 0, 0, 0, 0, 0, 0, 0,
	1071, 0, 0, 1660, 1069, 1087, 1059, 1060, 1061, 1057,
	1058, 1070, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 271, 270, 272, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1111, 1075,
	0, 0, 0, 279, 280, 1151, 281, 282, 283, 284,
	285, 286, 614, 1124, 0, 287, 1131, 288, 1130, 0,
	1141, 289, 290, 291, 292, 293, 294, 1077, 1110, 1044,
	295, 1171, 1172, 621, 0, 296, 297, 1117, 0, 1098,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1152, 320,
	321, 322, 1101, 1099, 1100, 1107, 1103, 1102, 1106, 323,
	324, 325, 326, 327, 1134, 328, 1128, 1127, 1048, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1119, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1054, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1142, 1143, 359, 1066,
	266, 0, 0, 0, 0, 0, 360, 361, 362, 1126,
	0, 0, 0, 363, 0, 364, 0, 0, 1153, 365,
	366, 1139, 1140, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 1149, 0, 1076, 377, 0, 378,
	379, 380, 381, 382, 1112, 1113, 1116, 459, 1155, 383,
	384, 0, 385, 386, 387, 388, 0, 0, 0, 267,
	389, 390, 391, 393, 0, 1154, 392, 1121, 1122, 0,
	1082, 0, 394, 395, 1156, 1114, 1157, 396, 397, 398,
	1158, 399, 0, 0, 0, 400, 401, 402, 403, 404,
	405, 0, 406, 408, 407, 0, 409, 1150, 1159, 410,
	411, 1160, 0, 412, 0, 0, 0, 413, 414, 417,
	1105, 1104, 415, 416, 418, 419, 0, 420, 421, 423,
	426, 422, 424, 425, 427, 440, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 442, 0,
	441, 1161, 443, 444, 445, 450, 452, 453, 448, 449,
	451, 454, 455, 447, 1162, 446, 1045, 268, 1163, 456,
	457, 1067, 1115, 458, 1129, 460, 461, 0, 0, 462,
	0, 0, 0, 464, 465, 466, 0, 0, 467, 468,
	643, 1164, 469, 1165, 1144, 470, 471, 463, 472, 473,
	474, 475, 476, 477, 478, 479, 0, 480, 481, 645,
	482, 483, 484, 646, 485, 486, 487, 1145, 488, 648,
	489, 490, 0, 491, 492, 0, 493, 494, 495, 496,
	497, 498, 499, 1125, 500, 502, 501, 503, 0, 504,
	0, 505, 506, 507, 0, 0, 0, 0, 508, 0,
	510, 511, 512, 513, 509, 514, 515, 516, 517, 0,
	518, 519, 520, 1166, 521, 522, 523, 524, 1055, 525,
	0, 526, 527, 533, 534, 528, 529, 535, 536, 537,
	538, 539, 0, 541, 542, 540, 543, 544, 545, 1108,
	546, 547, 530, 531, 548, 549, 1167, 550, 551, 552,
	553, 554, 555, 1123, 0, 556, 0, 557, 558, 559,
	561, 532, 562, 567, 568, 1170, 563, 564, 565, 566,
	1146, 570, 571, 0, 572, 573, 1043, 569, 560, 0,
	574, 575, 576, 577, 578, 579, 580, 353, 581, 0,
	582, 1135, 1136, 1137, 1138, 0, 591, 0, 583, 584,
	585, 1147, 586, 1148, 1065, 587, 588, 589, 590, 0,
	592, 593, 0, 1049, 594, 595, 596, 598, 599, 597,
	600, 1109, 601, 0, 0, 602, 603, 604, 660, 1132,
	1169, 0, 606, 605, 607, 663, 0, 0, 0, 0,
	0, 608, 609, 664, 610, 611, 612, 1046, 0, 0,
	0, 0, 0, 0, 0, 1042, 0, 0, 0, 0,
	0, 0, 1040, 1041, 0, 0, 0, 0, 0, 0,
	0, 1071, 0, 0, 1592, 1069, 1087, 1059, 1060, 1061,
	1057, 1058, 1070, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 271, 270, 272, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1111,
	1075, 0, 0, 0, 279, 280, 1151, 281, 282, 283,
	284, 285, 286, 614, 1124, 0, 287, 1131, 288, 1130,
	0, 1141, 289, 290, 291, 292, 293, 294, 1077, 1110,
	1044, 295, 1171, 1172, 621, 0, 296, 297, 1117, 0,
	1098, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1152,
	320, 321, 322, 1101, 1099, 1100, 1107, 1103, 1102, 1106,
	323, 324, 325, 326, 327, 1134, 328, 1128, 1127, 1048,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1119, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1054, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1142, 1143, 359,
	1066, 266, 0, 0, 0, 0, 0, 360, 361, 362,
	1126, 0, 0, 0, 363, 0, 364, 0, 0, 1153,
	365, 366, 1139, 1140, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 1149, 0, 1076, 377, 0,
	378, 379, 380, 381, 382, 1112, 1113, 1116, 459, 1155,
	383, 384, 0, 385, 386, 387, 388, 0, 0, 0,
	267, 389, 390, 391, 393, 0, 1154, 392, 1121, 1122,
	0, 1082, 0, 394, 395, 1156, 1114, 1157, 396, 397,
	398, 1158, 399, 0, 0, 0, 400, 401, 402, 403,
	404, 405, 0, 406, 408, 407, 0, 409, 1150, 1159,
	410, 411, 1160, 0, 412, 0, 0, 0, 413, 414,
	417, 1105, 1104, 415, 416, 418, 419, 0, 420, 421,
	423, 426, 422, 424, 425, 427, 440, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 442,
	0, 441, 1161, 443, 444, 445, 450, 452, 453, 448,
	449, 451, 454, 455, 447, 1162, 446, 1045, 268, 1163,
	456, 457, 1067, 1115, 458, 1129, 460, 461, 0, 0,
	462, 0, 0, 0, 464, 465, 466, 0, 0, 467,
	468, 643, 1164, 469, 1165, 1144, 470, 471, 463, 472,
	473, 474, 475, 476, 477, 478, 479, 0, 480, 481,
	645, 482, 483, 484, 646, 485, 486, 487, 1145, 488,
	648, 489, 490, 0, 491, 492, 0, 493, 494, 495,
	496, 497, 498, 499, 1125, 500, 502, 501, 503, 0,
	504, 0, 505, 506, 507, 0, 0, 0, 0, 508,
	0, 510, 511, 512, 513, 509, 514, 515, 516, 517,
	0, 518, 519, 520, 1166, 521, 522, 523, 524, 1055,
	525, 0, 526, 527, 533, 534, 528, 529, 535, 536,
	537, 538, 539, 0, 541, 542, 540, 543, 544, 545,
	1108, 546, 547, 530, 531, 548, 549, 1167, 550, 551,
	552, 553, 554, 555, 1123, 0, 556, 0, 557, 558,
	559, 561, 532, 562, 567, 568, 1170, 563, 564, 565,
	566, 1146, 570, 571, 0, 572, 573, 1043, 569, 560,
	0, 574, 575, 576, 577, 578, 579, 580, 353, 581,
	0, 582, 1135, 1136, 1137, 1138, 0, 591, 0, 583,
	584, 585, 1147, 586, 1148, 1065, 587, 588, 589, 590,
	0, 592, 593, 0, 1049, 594, 595, 596, 598, 599,
	597, 600, 1109, 601, 0, 0, 602, 603, 604, 660,
	1132, 1169, 0, 606, 605, 607, 663, 0, 0, 0,
	0, 0, 608, 609, 664, 610, 611, 612, 1046, 0,
	0, 0, 0, 0, 0, 0, 1042, 0, 0, 0,
	0, 0, 0, 1040, 1041, 0, 0, 0, 0, 0,
	0, 0, 1071, 0, 0, 1587, 1069, 1087, 1059, 1060,
	1061, 1057, 1058, 1070, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 271, 270, 272, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1111, 1075, 0, 0, 0, 279, 280, 1151, 281, 282,
	283, 284, 285, 286, 614, 1124, 0, 287, 1131, 288,
	1130, 0, 1141, 289, 290, 291, 292, 293, 294, 1077,
	1110, 1044, 295, 1171, 1172, 621, 0, 296, 297, 1117,
	0, 1098, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1152, 320, 321, 322, 1101, 1099, 1100, 1107, 1103, 1102,
	1106, 323, 324, 325, 326, 327, 1134, 328, 1128, 1127,
	1048, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1119, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1054, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1142, 1143,
	359, 1066, 266, 0, 0, 0, 0, 0, 360, 361,
	362, 1126, 0, 0, 0, 363, 0, 364, 0, 0,
	1153, 365, 366, 1139, 1140, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 1149, 0, 1076, 377,
	0, 378, 379, 380, 381, 382, 1112, 1113, 1116, 459,
	1155, 383, 384, 0, 385, 386, 387, 388, 0, 0,
	0, 267, 389, 390, 391, 393, 0, 1154, 392, 1121,
	1122, 0, 1082, 0, 394, 395, 1156, 1114, 1157, 396,
	397, 398, 1158, 399, 0, 0, 0, 400, 401, 402,
	403, 404, 405, 0, 406, 408, 407, 0, 409, 1150,
	1159, 410, 411, 1160, 0, 412, 0, 0, 0, 413,
	414, 417, 1105, 1104, 415, 416, 418, 419, 0, 420,
	421, 423, 426, 422, 424, 425, 427, 440, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	442, 0, 441, 1161, 443, 444, 445, 450, 452, 453,
	448, 449, 451, 454, 455, 447, 1162, 446, 1045, 268,
	1163, 456, 457, 1067, 1115, 458, 1129, 460, 461, 0,
	0, 462, 0, 0, 0, 464, 465, 466, 0, 0,
	467, 468, 643, 1164, 469, 1165, 1144, 470, 471, 463,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 480,
	481, 645, 482, 483, 484, 646, 485, 486, 487, 1145,
	488, 648, 489, 490, 0, 491, 492, 0, 493, 494,
	495, 496, 497, 498, 499, 1125, 500, 502, 501, 503,
	0, 504, 0, 505, 506, 507, 0, 0, 0, 0,
	508, 0, 510, 511, 512, 513, 509, 514, 515, 516,
	517, 0, 518, 519, 520, 1166, 521, 522, 523, 524,
	1055, 525, 0, 526, 527, 533, 534, 528, 529, 535,
	536, 537, 538, 539, 0, 541, 542, 540, 543, 544,
	545, 1108, 546, 547, 530, 531, 548, 549, 1167, 550,
	551, 552, 553, 554, 555, 1123, 0, 556, 0, 557,
	558, 559, 561, 532, 562, 567, 568, 1170, 563, 564,
	565, 566, 1146, 570, 571, 0, 572, 573, 1043, 569,
	560, 0, 574, 575, 576, 577, 578, 579, 580, 353,
	581, 0, 582, 1135, 1136, 1137, 1138, 0, 591, 0,
	583, 584, 585, 1147, 586, 1148, 1065, 587, 588, 589,
	590, 0, 592, 593, 0, 1049, 594, 595, 596, 598,
	599, 597, 600, 1109, 601, 0, 0, 602, 603, 604,
	660, 1132, 1169, 0, 606, 605, 607, 663, 0, 0,
	0, 0, 0, 608, 609, 664, 610, 611, 612, 1046,
	0, 0, 0, 0, 0, 0, 0, 1042, 0, 0,
	0, 0, 0, 0, 1040, 1041, 0, 0, 0, 0,
	0, 0, 0, 1071, 0, 0, 1578, 1069, 1087, 1059,
	1060, 1061, 1057, 1058, 1070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 271, 270, 272, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1111, 1075, 0, 0, 0, 279, 280, 1151, 281,
	282, 283, 284, 285, 286, 614, 1124, 0, 287, 1131,
	288, 1130, 0, 1141, 289, 290, 291, 292, 293, 294,
	1077, 1110, 1044, 295, 1171, 1172, 621, 0, 296, 297,
	1117, 0, 1098, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1152, 320, 321, 322, 1101, 1099, 1100, 1107, 1103,
	1102, 1106, 323, 324, 325, 326, 327, 1134, 328, 1128,
	1127, 1048, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1119, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1054, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1142,
	1143, 359, 1066, 266, 0, 0, 0, 0, 0, 360,
	361, 362, 1126, 0, 0, 0, 363, 0, 364, 0,
	0, 1153, 365, 366, 1139, 1140, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 1149, 0, 1076,
	377, 0, 378, 379, 380, 381, 382, 1112, 1113, 1116,
	459, 1155, 383, 384, 0, 385, 386, 387, 388, 0,
	0, 0, 267, 389, 390, 391, 393, 0, 1154, 392,
	1121, 1122, 0, 1082, 0, 394, 395, 1156, 1114, 1157,
	396, 397, 398, 1158, 399, 0, 0, 0, 400, 401,
	402, 403, 404, 405, 0, 406, 408, 407, 0, 409,
	1150, 1159, 410, 411, 1160, 0, 412, 0, 0, 0,
	413, 414, 417, 1105, 1104, 415, 416, 418, 419, 0,
	420, 421, 423, 426, 422, 424, 425, 427, 440, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 442, 0, 441, 1161, 443, 444, 445, 450, 452,
	453, 448, 449, 451, 454, 455, 447, 1162, 446, 1045,
	268, 1163, 456, 457, 1067, 1115, 458, 1129, 460, 461,
	0, 0, 462, 0, 0, 0, 464, 465, 466, 0,
	0, 467, 468, 643, 1164, 469, 1165, 1144, 470, 471,
	463, 472, 473, 474, 475, 476, 477, 478, 479, 0,
	480, 481, 645, 482, 483, 484, 646, 485, 486, 487,
	1145, 488, 648, 489, 490, 0, 491, 492, 0, 493,
	494, 495, 496, 497, 498, 499, 1125, 500, 502, 501,
	503, 0, 504, 0, 505, 506, 507, 0, 0, 0,
	0, 508, 0, 510, 511, 512, 513, 509, 514, 515,
	516, 517, 0, 518, 519, 520, 1166, 521, 522, 523,
	524, 1055, 525, 0, 526, 527, 533, 534, 528, 529,
	535, 536, 537, 538, 539, 0, 541, 542, 540, 543,
	544, 545, 1108, 546, 547, 530, 531, 548, 549, 1167,
	550, 551, 552, 553, 554, 555, 1123, 0, 556, 0,
	557, 558, 559, 561, 532, 562, 567, 568, 1170, 563,
	564, 565, 566, 1146, 570, 571, 0, 572, 573, 1043,
	569, 560, 0, 574, 575, 576, 577, 578, 579, 580,
	353, 581, 0, 582, 1135, 1136, 1137, 1138, 0, 591,
	0, 583, 584, 585, 1147, 586, 1148, 1065, 587, 588,
	589, 590, 0, 592, 593, 0, 1049, 594, 595, 596,
	598, 599, 597, 600, 1109, 601, 0, 0, 602, 603,
	604, 660, 1132, 1169, 0, 606, 605, 607, 663, 0,
	0, 0, 0, 0, 608, 609, 664, 610, 611, 612,
	1046, 0, 0, 0, 0, 0, 0, 0, 1042, 0,
	0, 0, 0, 0, 0, 1040, 1041, 0, 0, 0,
	0, 0, 0, 0, 1071, 0, 0, 1573, 1069, 1087,
	1059, 1060, 1061, 1057, 1058, 1070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1111, 1075, 0, 0, 0, 279, 280, 1151,
	281, 282, 283, 284, 285, 286, 614, 1124, 0, 287,
	1131, 288, 1130, 0, 1141, 289, 290, 291, 292, 293,
	294, 1077, 1110, 1044, 295, 1171, 1172, 621, 0, 296,
	297, 1117, 0, 1098, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1152, 320, 321, 322, 1101, 1099, 1100, 1107,
	1103, 1102, 1106, 323, 324, 325, 326, 327, 1134, 328,
	1128, 1127, 1048, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1119, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1054,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1142, 1143, 359, 1066, 266, 0, 0, 0, 0, 0,
	360, 361, 362, 1126, 0, 0, 0, 363, 0, 364,
	0, 0, 1153, 365, 366, 1139, 1140, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 1149, 0,
	1076, 377, 0, 378, 379, 380, 381, 382, 1112, 1113,
	1116, 459, 1155, 383, 384, 0, 385, 386, 387, 388,
	0, 0, 0, 267, 389, 390, 391, 393, 0, 1154,
	392, 1121, 1122, 0, 1082, 0, 394, 395, 1156, 1114,
	1157, 396, 397, 398, 1158, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 0, 406, 408, 407, 0,
	409, 1150, 1159, 410, 411, 1160, 0, 412, 0, 0,
	0, 413, 414, 417, 1105, 1104, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 1161, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 1162, 446,
	1045, 268, 1163, 456, 457, 1067, 1115, 458, 1129, 460,
	461, 0, 0, 462, 0, 0, 0, 464, 465, 466,
	0, 0, 467, 468, 643, 1164, 469, 1165, 1144, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 1145, 488, 648, 489, 490, 0, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 1125, 500, 502,
	501, 503, 0, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 0, 518, 519, 520, 1166, 521, 522,
	523, 524, 1055, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 0, 541, 542, 540,
	543, 544, 545, 1108, 546, 547, 530, 531, 548, 549,
	1167, 550, 551, 552, 553, 554, 555, 1123, 0, 556,
	0, 557, 558, 559, 561, 532, 562, 567, 568, 1170,
	563, 564, 565, 566, 1146, 570, 571, 0, 572, 573,
	1043, 569, 560, 0, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 0, 582, 1135, 1136, 1137, 1138, 0,
	591, 0, 583, 584, 585, 1147, 586, 1148, 1065, 587,
	588, 589, 590, 0, 592, 593, 0, 1049, 594, 595,
	596, 598, 599, 597, 600, 1109, 601, 0, 0, 602,
	603, 604, 660, 1132, 1169, 0, 606, 605, 607, 663,
	0, 0, 0, 0, 0, 608, 609, 664, 610, 611,
	612, 1046, 0, 0, 0, 0, 0, 0, 0, 1042,
	0, 0, 0, 0, 0, 0, 1040, 1041, 0, 0,
	0, 0, 0, 0, 0, 1071, 0, 0, 1485, 1069,
	1087, 1059, 1060, 1061, 1057, 1058, 1070, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1111, 1075, 0, 0, 0, 279, 280,
	1151, 281, 282, 283, 284, 285, 286, 614, 1124, 0,
	287, 1131, 288, 1130, 0, 1141, 289, 290, 291, 292,
	293, 294, 1077, 1110, 1044, 295, 1171, 1172, 621, 0,
	296, 297, 1117, 0, 1098, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1152, 320, 321, 322, 1101, 1099, 1100,
	1107, 1103, 1102, 1106, 323, 324, 325, 326, 327, 1134,
	328, 1128, 1127, 1048, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1119, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1054, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1142, 1143, 359, 1066, 266, 0, 0, 0, 0,
	0, 360, 361, 362, 1126, 0, 0, 0, 363, 0,
	364, 0, 0, 1153, 365, 366, 1139, 1140, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 1149,
	0, 1076, 377, 0, 378, 379, 380, 381, 382, 1484,
	1113, 1116, 459, 1155, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 267, 389, 390, 391, 393, 0,
	1154, 392, 1121, 1122, 0, 1082, 0, 394, 395, 1156,
	1114, 1157, 396, 397, 398, 1158, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 1150, 1159, 410, 411, 1160, 0, 412, 0,
	0, 0, 413, 414, 417, 1105, 1104, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 1161, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 1162,
	446, 1045, 268, 1163, 456, 457, 1067, 1115, 458, 1129,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 1164, 469, 1165, 1144,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 1145, 488, 648, 489, 490, 0, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 1125, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 1166, 521,
	522, 523, 524, 1055, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 0, 541, 542,
	540, 543, 544, 545, 1108, 546, 547, 530, 531, 548,
	549, 1167, 550, 551, 552, 553, 554, 555, 1123, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	1170, 563, 564, 565, 566, 1146, 570, 571, 0, 572,
	573, 1043, 569, 560, 0, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 1135, 1136, 1137, 1138,
	0, 591, 0, 583, 584, 585, 1147, 586, 1148, 1065,
	587, 588, 589, 590, 0, 592, 593, 0, 1049, 594,
	595, 596, 598, 599, 597, 600, 1109, 601, 0, 0,
	602, 603, 604, 660, 1132, 1169, 0, 606, 605, 607,
	663, 0, 0, 0, 0, 0, 608, 609, 664, 610,
	611, 612, 1046, 0, 0, 0, 0, 0, 0, 0,
	1042, 0, 0, 0, 0, 0, 0, 1040, 1041, 0,
	0, 0, 0, 0, 0, 0, 1071, 0, 0, 1479,
	1069, 1087, 1059, 1060, 1061, 1057, 1058, 1070, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 271,
	270, 272, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1111, 1075, 0, 0, 0, 279,
	280, 1151, 281, 282, 283, 284, 285, 286, 614, 1124,
	0, 287, 1131, 288, 1130, 0, 1141, 289, 290, 291,
	292, 293, 294, 1077, 1110, 1044, 295, 1171, 1172, 621,
	0, 296, 297, 1117, 0, 1098, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1152, 320, 321, 322, 1101, 1099,
	1100, 1107, 1103, 1102, 1106, 323, 324, 325, 326, 327,
	1134, 328, 1128, 1127, 1048, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1119,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1054, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1142, 1143, 359, 1066, 266, 0, 0, 0,
	0, 0, 360, 361, 362, 1126, 0, 0, 0, 363,
	0, 364, 0, 0, 1153, 365, 366, 1139, 1140, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	1149, 0, 1076, 377, 0, 378, 379, 380, 381, 382,
	1478, 1113, 1116, 459, 1155, 383, 384, 0, 385, 386,
	387, 388, 0, 0, 0, 267, 389, 390, 391, 393,
	0, 1154, 392, 1121, 1122, 0, 1082, 0, 394, 395,
	1156, 1114, 1157, 396, 397, 398, 1158, 399, 0, 0,
	0, 400, 401, 402, 403, 404, 405, 0, 406, 408,
	407, 0, 409, 1150, 1159, 410, 411, 1160, 0, 412,
	0, 0, 0, 413, 414, 417, 1105, 1104, 415, 416,
	418, 419, 0, 420, 421, 423, 426, 422, 424, 425,
	427, 440, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 442, 0, 441, 1161, 443, 444,
	445, 450, 452, 453, 448, 449, 451, 454, 455, 447,
	1162, 446, 1045, 268, 1163, 456, 457, 1067, 1115, 458,
	1129, 460, 461, 0, 0, 462, 0, 0, 0, 464,
	465, 466, 0, 0, 467, 468, 643, 1164, 469, 1165,
	1144, 470, 471, 463, 472, 473, 474, 475, 476, 477,
	478, 479, 0, 480, 481, 645, 482, 483, 484, 646,
	485, 486, 487, 1145, 488, 648, 489, 490, 0, 491,
	492, 0, 493, 494, 495, 496, 497, 498, 499, 1125,
	500, 502, 501, 503, 0, 504, 0, 505, 506, 507,
	0, 0, 0, 0, 508, 0, 510, 511, 512, 513,
	509, 514, 515, 516, 517, 0, 518, 519, 520, 1166,
	521, 522, 523, 524, 1055, 525, 0, 526, 527, 533,
	534, 528, 529, 535, 536, 537, 538, 539, 0, 541,
	542, 540, 543, 544, 545, 1108, 546, 547, 530, 531,
	548, 549, 1167, 550, 551, 552, 553, 554, 555, 1123,
	0, 556, 0, 557, 558, 559, 561, 532, 562, 567,
	568, 1170, 563, 564, 565, 566, 1146, 570, 571, 0,
	572, 573, 1043, 569, 560, 0, 574, 575, 576, 577,
	578, 579, 580, 353, 581, 0, 582, 1135, 1136, 1137,
	1138, 0, 591, 0, 583, 584, 585, 1147, 586, 1148,
	1065, 587, 588, 589, 590, 0, 592, 593, 0, 1049,
	594, 595, 596, 598, 599, 597, 600, 1109, 601, 0,
	0, 602, 603, 604, 660, 1132, 1169, 0, 606, 605,
	607, 663, 0, 0, 0, 0, 0, 608, 609, 664,
	610, 611, 612, 1046, 0, 0, 0, 0, 0, 0,
	0, 1042, 0, 0, 0, 0, 0, 0, 1040, 1041,
	0, 0, 0, 0, 0, 0, 0, 1071, 0, 0,
	1472, 1069, 1087, 1059, 1060, 1061, 1057, 1058, 1070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	271, 270, 272, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1111, 1075, 0, 0, 0,
	279, 280, 1151, 281, 282, 283, 284, 285, 286, 614,
	1124, 0, 287, 1131, 288, 1130, 0, 1141, 289, 290,
	291, 292, 293, 294, 1077, 1110, 1044, 295, 1171, 1172,
	621, 0, 296, 297, 1117, 0, 1098, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1152, 320, 321, 322, 1101,
	1099, 1100, 1107, 1103, 1102, 1106, 323, 324, 325, 326,
	327, 1134, 328, 1128, 1127, 1048, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1119, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1054, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1142, 1143, 359, 1066, 266, 0, 0,
	0, 0, 0, 360, 361, 362, 1126, 0, 0, 0,
	363, 0, 364, 0, 0, 1153, 365, 366, 1139, 1140,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 1149, 0, 1076, 377, 0, 378, 379, 380, 381,
	382, 1112, 1113, 1116, 459, 1155, 383, 384, 0, 385,
	386, 387, 388, 0, 0, 0, 267, 389, 390, 391,
	393, 0, 1154, 392, 1121, 1122, 0, 1082, 0, 394,
	395, 1156, 1114, 1157, 396, 397, 398, 1158, 399, 0,
	0, 0, 400, 401, 402, 403, 404, 405, 0, 406,
	408, 407, 0, 409, 1150, 1159, 410, 411, 1160, 0,
	412, 0, 0, 0, 413, 414, 417, 1105, 1104, 415,
	416, 418, 419, 0, 420, 421, 423, 426, 422, 424,
	425, 427, 440, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 442, 0, 441, 1161, 443,
	444, 445, 450, 452, 453, 448, 449, 451, 454, 455,
	447, 1162, 446, 1045, 268, 1163, 456, 457, 1067, 1115,
	458, 1129, 460, 461, 0, 0, 462, 0, 0, 0,
	464, 465, 466, 0, 0, 467, 468, 643, 1164, 469,
	1165, 1144, 470, 471, 463, 472, 473, 474, 475, 476,
	477, 478, 479, 0, 480, 481, 645, 482, 483, 484,
	646, 485, 486, 487, 1145, 488, 648, 489, 490, 0,
	491, 492, 0, 493, 494, 495, 496, 497, 498, 499,
	1125, 500, 502, 501, 503, 0, 504, 0, 505, 506,
	507, 0, 0, 0, 0, 508, 0, 510, 511, 512,
	513, 509, 514, 515, 516, 517, 0, 518, 519, 520,
	1166, 521, 522, 523, 524, 1055, 525, 0, 526, 527,
	533, 534, 528, 529, 535, 536, 537, 538, 539, 0,
	541, 542, 540, 543, 544, 545, 1108, 546, 547, 530,
	531, 548, 549, 1167, 550, 551, 552, 553, 554, 555,
	1123, 0, 556, 0, 557, 558, 559, 561, 532, 562,
	567, 568, 1170, 563, 564, 565, 566, 1146, 570, 571,
	0, 572, 573, 1043, 569, 560, 0, 574, 575, 576,
	577, 578, 579, 580, 353, 581, 0, 582, 1135, 1136,
	1137, 1138, 0, 591, 0, 583, 584, 585, 1147, 586,
	1148, 1065, 587, 588, 589, 590, 0, 592, 593, 0,
	1049, 594, 595, 596, 598, 599, 597, 600, 1109, 601,
	0, 0, 602, 603, 604, 660, 1132, 1169, 0, 606,
	605, 607, 663, 0, 0, 0, 0, 0, 608, 609,
	664, 610, 611, 612, 1046, 0, 0, 0, 0, 0,
	0, 0, 1042, 0, 0, 0, 0, 0, 0, 1040,
	1041, 0, 0, 0, 0, 0, 0, 0, 1071, 0,
	0, 1296, 1069, 1087, 1059, 1060, 1061, 1057, 1058, 1070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 271, 270, 272, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1111, 1075, 0, 0,
	0, 279, 280, 1151, 281, 282, 283, 284, 285, 286,
	614, 1124, 0, 287, 1131, 288, 1130, 0, 1141, 289,
	290, 291, 292, 293, 294, 1077, 1110, 1044, 295, 1171,
	1172, 621, 0, 296, 297, 1117, 0, 1098, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1152, 320, 321, 322,
	1101, 1099, 1100, 1107, 1103, 1102, 1106, 323, 324, 325,
	326, 327, 1134, 328, 1128, 1127, 1048, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1119, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1054, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1142, 1143, 359, 1066, 266, 0,
	0, 0, 0, 0, 360, 361, 362, 1126, 0, 0,
	0, 363, 0, 364, 0, 0, 1153, 365, 366, 1139,
	1140, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 1149, 0, 1076, 377, 0, 378, 379, 380,
	381, 382, 1112, 1113, 1116, 459, 1155, 383, 384, 0,
	385, 386, 387, 388, 0, 0, 0, 267, 389, 390,
	391, 393, 0, 1154, 392, 1121, 1122, 0, 1082, 0,
	394, 395, 1156, 1114, 1157, 396, 397, 398, 1158, 399,
	0, 0, 0, 400, 401, 402, 403, 404, 405, 0,
	406, 408, 407, 0, 409, 1150, 1159, 410, 411, 1160,
	0, 412, 0, 0, 0, 413, 414, 417, 1105, 1104,
	415, 416, 418, 419, 0, 420, 421, 423, 426, 422,
	424, 425, 427, 440, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 442, 0, 441, 1161,
	443, 444, 445, 450, 452, 453, 448, 449, 451, 454,
	455, 447, 1162, 446, 1045, 268, 1163, 456, 457, 1067,
	1115, 458, 1129, 460, 461, 0, 0, 462, 0, 0,
	0, 464, 465, 466, 0, 0, 467, 468, 643, 1164,
	469, 1165, 1144, 470, 471, 463, 472, 473, 474, 475,
	476, 477, 478, 479, 0, 480, 481, 645, 482, 483,
	484, 646, 485, 486, 487, 1145, 488, 648, 489, 490,
	0, 491, 492, 0, 493, 494, 495, 496, 497, 498,
	499, 1125, 500, 502, 501, 503, 0, 504, 0, 505,
	506, 507, 0, 0, 0, 0, 508, 0, 510, 511,
	512, 513, 509, 514, 515, 516, 517, 0, 518, 519,
	520, 1166, 521, 522, 523, 524, 1055, 525, 0, 526,
	527, 533, 534, 528, 529, 535, 536, 537, 538, 539,
	0, 541, 542, 540, 543, 544, 545, 1108, 546, 547,
	530, 531, 548, 549, 1167, 550, 551, 552, 553, 554,
	555, 1123, 0, 556, 0, 557, 558, 559, 561, 532,
	562, 567, 568, 1170, 563, 564, 565, 566, 1146, 570,
	571, 0, 572, 573, 1043, 569, 560, 0, 574, 575,
	576, 577, 578, 579, 580, 353, 581, 0, 582, 1135,
	1136, 1137, 1138, 0, 591, 0, 583, 584, 585, 1147,
	586, 1148, 1065, 587, 588, 589, 590, 0, 592, 593,
	0, 1049, 594, 595, 596, 598, 599, 597, 600, 1109,
	601, 0, 0, 602, 603, 604, 660, 1132, 1169, 0,
	606, 605, 607, 663, 0, 0, 0, 0, 0, 608,
	609, 664, 610, 611, 612, 1046, 0, 0, 0, 0,
	0, 0, 0, 1042, 0, 0, 0, 0, 0, 0,
	1040, 1041, 1087, 1059, 1060, 1061, 1057, 1058, 1070, 1071,
	0, 0, 0, 1069, 0, 0, 0, 0, 0, 269,
	271, 270, 272, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1111, 1075, 0, 0, 0,
	279, 280, 1151, 281, 282, 283, 284, 285, 286, 614,
	1124, 0, 287, 1131, 288, 1130, 0, 1141, 289, 290,
	291, 292, 293, 294, 1077, 1110, 1044, 295, 1171, 1172,
	621, 0, 296, 297, 1117, 0, 1098, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1152, 320, 321, 322, 1101,
	1099, 1100, 1107, 1103, 1102, 1106, 323, 324, 325, 326,
	327, 1134, 328, 1128, 1127, 1048, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1119, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 1054, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1142, 1143, 359, 1066, 266, 0, 0,
	0, 0, 0, 360, 361, 362, 1126, 0, 0, 0,
	363, 0, 364, 0, 0, 1153, 365, 366, 1139, 1140,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 1149, 0, 1076, 377, 0, 378, 379, 380, 381,
	382, 1112, 1113, 1116, 459, 1155, 383, 384, 0, 385,
	386, 387, 388, 0, 0, 0, 267, 389, 390, 391,
	393, 0, 1154, 392, 1121, 1122, 0, 1082, 0, 394,
	395, 1156, 1114, 1157, 396, 397, 398, 1158, 399, 0,
	0, 0, 400, 401, 402, 403, 404, 405, 0, 406,
	408, 407, 0, 409, 1150, 1159, 410, 411, 1160, 0,
	412, 0, 0, 0, 413, 414, 417, 1105, 1104, 415,
	416, 418, 419, 0, 420, 421, 423, 426, 422, 424,
	425, 427, 440, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 442, 0, 441, 1161, 443,
	444, 445, 450, 452, 453, 448, 449, 451, 454, 455,
	447, 1162, 446, 1045, 268, 1163, 456, 457, 1067, 1115,
	458, 1129, 460, 461, 0, 0, 462, 0, 0, 0,
	464, 465, 466, 0, 0, 467, 468, 643, 1164, 469,
	1165, 1144, 470, 471, 463, 472, 473, 474, 475, 476,
	477, 478, 479, 0, 480, 481, 645, 482, 483, 484,
	646, 485, 486, 487, 1145, 488, 648, 489, 490, 0,
	491, 492, 0, 493, 494, 495, 496, 497, 498, 499,
	1125, 500, 502, 501, 503, 0, 504, 0, 505, 506,
	507, 0, 0, 0, 0, 508, 0, 510, 511, 512,
	513, 509, 514, 515, 516, 517, 0, 518, 519, 520,
	1166, 521, 522, 523, 524, 1055, 525, 0, 526, 527,
	533, 534, 528, 529, 535, 536, 537, 538, 539, 0,
	541, 542, 540, 543, 544, 545, 1108, 546, 547, 530,
	531, 548, 549, 1167, 550, 551, 552, 553, 554, 555,
	1123, 0, 556, 0, 557, 558, 559, 561, 532, 562,
	567, 568, 1170, 563, 564, 565, 566, 1146, 570, 571,
	0, 572, 573, 1043, 569, 560, 0, 574, 575, 576,
	577, 578, 579, 580, 353, 581, 0, 582, 1135, 1136,
	1137, 1138, 0, 591, 0, 583, 584, 585, 1147, 586,
	1148, 1065, 587, 588, 589, 590, 0, 592, 593, 0,
	1049, 594, 595, 596, 598, 599, 597, 600, 1109, 601,
	0, 0, 602, 603, 604, 660, 1132, 1169, 0, 606,
	605, 607, 663, 0, 0, 0, 0, 0, 608, 609,
	664, 610, 611, 612, 1046, 0, 0, 0, 0, 0,
	0, 0, 1042, 0, 0, 0, 0, 0, 0, 1040,
	1041, 1087, 1059, 1060, 1061, 1057, 1058, 1070, 1071, 0,
	0, 0, 1069, 0, 0, 0, 0, 0, 269, 271,
	270, 272, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1111, 1075, 0, 0, 0, 279,
	280, 1151, 281, 282, 283, 284, 285, 286, 614, 1124,
	0, 287, 1131, 288, 1130, 0, 1141, 289, 290, 291,
	292, 293, 294, 1077, 1110, 1044, 295, 1171, 1172, 621,
	0, 296, 297, 1117, 0, 1098, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1152, 320, 321, 4506, 1101, 1099,
	1100, 1107, 1103, 1102, 1106, 323, 324, 325, 326, 327,
	1134, 328, 1128, 1127, 1048, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1119,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1054, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1142, 1143, 359, 1066, 266, 0, 0, 0,
	0, 0, 360, 361, 362, 1126, 0, 0, 0, 363,
	0, 364, 0, 0, 1153, 365, 366, 1139, 1140, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	1149, 0, 1076, 377, 0, 378, 379, 380, 381, 382,
	1112, 1113, 1116, 459, 1155, 383, 384, 0, 385, 386,
	387, 388, 0, 0, 0, 267, 389, 390, 391, 393,
	0, 1154, 392, 1121, 1122, 0, 1082, 0, 394, 395,
	1156, 1114, 1157, 396, 397, 398, 1158, 399, 0, 0,
	0, 400, 401, 402, 403, 404, 405, 0, 406, 408,
	407, 0, 409, 1150, 1159, 410, 411, 1160, 0, 412,
	0, 0, 0, 413, 414, 417, 1105, 1104, 415, 416,
	418, 419, 0, 420, 421, 423, 426, 422, 424, 425,
	427, 440, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 442, 0, 441, 1161, 443, 444,
	445, 450, 452, 453, 448, 449, 451, 454, 455, 447,
	1162, 446, 1045, 268, 1163, 456, 457, 1067, 1115, 458,
	1129, 460, 461, 0, 0, 462, 0, 0, 0, 464,
	465, 466, 0, 0, 467, 468, 643, 1164, 469, 1165,
	1144, 470, 471, 463, 472, 473, 474, 475, 476, 477,
	478, 479, 0, 480, 481, 645, 482, 483, 484, 646,
	485, 486, 487, 1145, 488, 648, 489, 490, 0, 491,
	492, 0, 493, 494, 495, 496, 497, 498, 499, 1125,
	500, 502, 501, 503, 0, 504, 0, 505, 506, 507,
	0, 0, 0, 0, 508, 0, 510, 511, 512, 513,
	509, 514, 515, 516, 517, 0, 518, 519, 520, 1166,
	521, 522, 523, 524, 1055, 525, 0, 526, 527, 533,
	534, 528, 529, 535, 536, 537, 538, 539, 0, 541,
	542, 540, 543, 544, 545, 1108, 546, 547, 530, 531,
	548, 549, 1167, 550, 551, 552, 553, 554, 555, 1123,
	0, 556, 0, 557, 558, 559, 561, 532, 562, 567,
	568, 1170, 563, 564, 565, 566, 1146, 570, 571, 0,
	572, 573, 1043, 569, 560, 0, 574, 575, 576, 577,
	578, 579, 580, 353, 581, 0, 582, 1135, 1136, 1137,
	1138, 0, 591, 0, 583, 584, 585, 1147, 586, 1148,
	1065, 587, 588, 589, 590, 0, 4505, 593, 0, 1049,
	594, 595, 596, 598, 599, 597, 600, 1109, 601, 0,
	0, 602, 603, 604, 660, 1132, 1169, 0, 606, 605,
	607, 663, 0, 0, 0, 0, 0, 608, 609, 664,
	610, 611, 612, 1046, 0, 0, 0, 0, 0, 0,
	0, 1042, 0, 0, 0, 0, 0, 0, 1040, 1041,
	1087, 1059, 1060, 1061, 1057, 1058, 1070, 1071, 0, 0,
	0, 1069, 0, 0, 0, 0, 0, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 1111, 1075, 0, 0, 0, 279, 280,
	1151, 281, 282, 283, 284, 285, 286, 4504, 1124, 0,
	287, 1131, 288, 1130, 0, 1141, 289, 290, 291, 292,
	293, 294, 1077, 1110, 1044, 295, 1171, 1172, 621, 0,
	296, 297, 1117, 0, 1098, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1152, 320, 321, 4506, 1101, 1099, 1100,
	1107, 1103, 1102, 1106, 323, 324, 325, 326, 327, 1134,
	328, 1128, 1127, 1048, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1119, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1054, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1142, 1143, 359, 1066, 266, 0, 0, 0, 0,
	0, 360, 361, 362, 1126, 0, 0, 0, 363, 0,
	364, 0, 0, 1153, 365, 366, 1139, 1140, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 1149,
	0, 1076, 377, 0, 378, 379, 380, 381, 382, 1112,
	1113, 1116, 459, 1155, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 267, 389, 390, 391, 393, 0,
	1154, 392, 1121, 1122, 0, 1082, 0, 394, 395, 1156,
	1114, 1157, 396, 397, 398, 1158, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 1150, 1159, 410, 411, 1160, 0, 412, 0,
	0, 0, 413, 414, 417, 1105, 1104, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 1161, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 1162,
	446, 1045, 268, 1163, 456, 457, 1067, 1115, 458, 1129,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 1164, 469, 1165, 1144,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 1145, 488, 648, 489, 490, 0, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 1125, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 1166, 521,
	522, 523, 524, 1055, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 0, 541, 542,
	540, 543, 544, 545, 1108, 546, 547, 530, 531, 548,
	549, 1167, 550, 551, 552, 553, 554, 555, 1123, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	1170, 563, 564, 565, 566, 1146, 570, 571, 0, 572,
	573, 1043, 569, 560, 0, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 1135, 1136, 1137, 1138,
	0, 591, 0, 583, 584, 585, 1147, 586, 1148, 1065,
	587, 588, 589, 590, 0, 4505, 593, 0, 1049, 594,
	595, 596, 598, 599, 597, 600, 1109, 601, 0, 0,
	602, 603, 604, 660, 1132, 1169, 0, 606, 605, 607,
	663, 0, 0, 0, 0, 0, 608, 609, 664, 610,
	611, 612, 1046, 0, 0, 0, 0, 0, 0, 0,
	1042, 0, 0, 0, 0, 0, 0, 1040, 1041, 1087,
	1059, 1060, 1061, 1057, 1058, 1070, 1071, 0, 0, 0,
	1069, 0, 0, 0, 0, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1111, 1075, 0, 0, 0, 279, 280, 1151,
	281, 282, 283, 284, 285, 286, 614, 1124, 0, 287,
	1131, 288, 1130, 0, 1141, 289, 290, 291, 292, 293,
	294, 1077, 1110, 1044, 295, 1171, 1172, 621, 0, 296,
	297, 1117, 0, 1098, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1152, 320, 4156, 322, 1101, 1099, 1100, 1107,
	1103, 1102, 1106, 323, 324, 325, 326, 327, 1134, 328,
	1128, 1127, 1048, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1119, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1054,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1142, 1143, 359, 1066, 266, 0, 0, 0, 0, 0,
	360, 361, 362, 1126, 0, 0, 0, 363, 0, 364,
	0, 0, 1153, 365, 366, 1139, 1140, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 1149, 0,
	4157, 377, 0, 378, 379, 380, 381, 382, 1112, 1113,
	1116, 459, 1155, 383, 384, 0, 385, 386, 387, 388,
	0, 0, 0, 267, 389, 390, 391, 393, 0, 1154,
	392, 1121, 1122, 0, 1082, 0, 394, 395, 1156, 1114,
	1157, 396, 397, 398, 1158, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 0, 406, 408, 407, 0,
	409, 1150, 1159, 410, 411, 1160, 0, 412, 0, 0,
	0, 413, 414, 417, 1105, 1104, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 1161, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 1162, 446,
	1045, 268, 1163, 456, 457, 1067, 1115, 458, 1129, 460,
	461, 0, 0, 462, 0, 0, 0, 464, 465, 466,
	0, 0, 467, 468, 643, 1164, 469, 1165, 1144, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 1145, 488, 648, 489, 490, 0, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 1125, 500, 502,
	501, 503, 0, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 0, 518, 519, 520, 1166, 521, 522,
	523, 4155, 1055, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 0, 541, 542, 540,
	543, 544, 545, 1108, 546, 547, 530, 531, 548, 549,
	1167, 550, 551, 552, 553, 554, 555, 1123, 0, 556,
	0, 557, 558, 559, 561, 532, 562, 567, 568, 1170,
	563, 564, 565, 566, 1146, 570, 571, 0, 572, 573,
	1043, 569, 560, 0, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 0, 582, 1135, 1136, 1137, 1138, 0,
	591, 0, 583, 584, 585, 1147, 586, 1148, 1065, 587,
	588, 589, 590, 0, 592, 593, 0, 1049, 594, 595,
	596, 598, 599, 597, 600, 1109, 601, 0, 0, 602,
	603, 604, 660, 1132, 1169, 0, 606, 605, 607, 663,
	0, 0, 0, 0, 0, 608, 609, 664, 610, 611,
	612, 1046, 0, 0, 0, 0, 0, 0, 0, 1042,
	0, 0, 0, 0, 0, 0, 1040, 1041, 1087, 1059,
	1060, 1061, 3014, 3015, 1070, 1071, 0, 0, 0, 1069,
	0, 0, 0, 0, 0, 269, 271, 270, 272, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1111, 1075, 0, 0, 0, 279, 280, 1151, 281,
	282, 283, 284, 285, 286, 614, 1124, 0, 287, 1131,
	288, 1130, 0, 1141, 289, 290, 291, 292, 293, 294,
	1077, 1110, 1044, 295, 1171, 1172, 621, 0, 296, 297,
	1117, 0, 1098, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1152, 320, 321, 322, 1101, 1099, 1100, 1107, 1103,
	1102, 1106, 323, 324, 325, 326, 327, 1134, 328, 1128,
	1127, 1048, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 1119, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 1054, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1142,
	1143, 359, 1066, 266, 0, 0, 0, 0, 0, 360,
	361, 362, 1126, 0, 0, 0, 363, 0, 364, 0,
	0, 1153, 365, 366, 1139, 1140, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 1149, 0, 1076,
	377, 0, 378, 379, 380, 381, 382, 1112, 1113, 1116,
	459, 1155, 383, 384, 0, 385, 386, 387, 388, 0,
	0, 0, 267, 389, 390, 391, 393, 0, 1154, 392,
	1121, 1122, 0, 1082, 0, 394, 395, 1156, 1114, 1157,
	396, 397, 398, 1158, 399, 0, 0, 0, 400, 401,
	402, 403, 404, 405, 0, 406, 408, 407, 0, 409,
	1150, 1159, 410, 411, 1160, 0, 412, 0, 0, 0,
	413, 414, 417, 1105, 1104, 415, 416, 418, 419, 0,
	420, 421, 423, 426, 422, 424, 425, 427, 440, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 442, 0, 441, 1161, 443, 444, 445, 450, 452,
	453, 448, 449, 451, 454, 455, 447, 1162, 446, 1045,
	268, 1163, 456, 457, 1067, 1115, 458, 1129, 460, 461,
	0, 0, 462, 0, 0, 0, 464, 465, 466, 0,
	0, 467, 468, 643, 1164, 469, 1165, 1144, 470, 471,
	463, 472, 473, 474, 475, 476, 477, 478, 479, 0,
	480, 481, 645, 482, 483, 484, 646, 485, 486, 487,
	1145, 488, 648, 489, 490, 0, 491, 492, 0, 493,
	494, 495, 496, 497, 498, 499, 1125, 500, 502, 501,
	503, 0, 504, 0, 505, 506, 507, 0, 0, 0,
	0, 508, 0, 510, 511, 512, 513, 509, 514, 515,
	516, 517, 0, 518, 519, 520, 1166, 521, 522, 523,
	524, 1055, 525, 0, 526, 527, 533, 534, 528, 529,
	535, 536, 537, 538, 539, 0, 541, 542, 540, 543,
	544, 545, 1108, 546, 547, 530, 531, 548, 549, 1167,
	550, 551, 552, 553, 554, 555, 1123, 0, 556, 0,
	557, 558, 559, 561, 532, 562, 567, 568, 1170, 563,
	564, 565, 566, 1146, 570, 571, 0, 572, 573, 1043,
	569, 560, 0, 574, 575, 576, 577, 578, 579, 580,
	353, 581, 0, 582, 1135, 1136, 1137, 1138, 0, 591,
	0, 583, 584, 585, 1147, 586, 1148, 1065, 587, 588,
	589, 590, 0, 592, 593, 0, 1049, 594, 595, 596,
	598, 599, 597, 600, 1109, 601, 0, 0, 602, 603,
	604, 660, 1132, 1169, 0, 606, 605, 607, 663, 0,
	0, 0, 0, 0, 608, 609, 664, 610, 611, 612,
	1046, 0, 0, 0, 0, 0, 0, 0, 1042, 0,
	0, 0, 0, 0, 0, 1040, 1041, 1087, 1059, 1060,
	1061, 3012, 3013, 1070, 1071, 0, 0, 0, 1069, 0,
	0, 0, 0, 0, 269, 271, 270, 272, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1111, 1075, 0, 0, 0, 279, 280, 1151, 281, 282,
	283, 284, 285, 286, 614, 1124, 0, 287, 1131, 288,
	1130, 0, 1141, 289, 290, 291, 292, 293, 294, 1077,
	1110, 1044, 295, 1171, 1172, 621, 0, 296, 297, 1117,
	0, 1098, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1152, 320, 321, 322, 1101, 1099, 1100, 1107, 1103, 1102,
	1106, 323, 324, 325, 326, 327, 1134, 328, 1128, 1127,
	1048, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1119, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1054, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1142, 1143,
	359, 1066, 266, 0, 0, 0, 0, 0, 360, 361,
	362, 1126, 0, 0, 0, 363, 0, 364, 0, 0,
	1153, 365, 366, 1139, 1140, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 1149, 0, 1076, 377,
	0, 378, 379, 380, 381, 382, 1112, 1113, 1116, 459,
	1155, 383, 384, 0, 385, 386, 387, 388, 0, 0,
	0, 267, 389, 390, 391, 393, 0, 1154, 392, 1121,
	1122, 0, 1082, 0, 394, 395, 1156, 1114, 1157, 396,
	397, 398, 1158, 399, 0, 0, 0, 400, 401, 402,
	403, 404, 405, 0, 406, 408, 407, 0, 409, 1150,
	1159, 410, 411, 1160, 0, 412, 0, 0, 0, 413,
	414, 417, 1105, 1104, 415, 416, 418, 419, 0, 420,
	421, 423, 426, 422, 424, 425, 427, 440, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	442, 0, 441, 1161, 443, 444, 445, 450, 452, 453,
	448, 449, 451, 454, 455, 447, 1162, 446, 1045, 268,
	1163, 456, 457, 1067, 1115, 458, 1129, 460, 461, 0,
	0, 462, 0, 0, 0, 464, 465, 466, 0, 0,
	467, 468, 643, 1164, 469, 1165, 1144, 470, 471, 463,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 480,
	481, 645, 482, 483, 484, 646, 485, 486, 487, 1145,
	488, 648, 489, 490, 0, 491, 492, 0, 493, 494,
	495, 496, 497, 498, 499, 1125, 500, 502, 501, 503,
	0, 504, 0, 505, 506, 507, 0, 0, 0, 0,
	508, 0, 510, 511, 512, 513, 509, 514, 515, 516,
	517, 0, 518, 519, 520, 1166, 521, 522, 523, 524,
	1055, 525, 0, 526, 527, 533, 534, 528, 529, 535,
	536, 537, 538, 539, 0, 541, 542, 540, 543, 544,
	545, 1108, 546, 547, 530, 531, 548, 549, 1167, 550,
	551, 552, 553, 554, 555, 1123, 0, 556, 0, 557,
	558, 559, 561, 532, 562, 567, 568, 1170, 563, 564,
	565, 566, 1146, 570, 571, 0, 572, 573, 1043, 569,
	560, 0, 574, 575, 576, 577, 578, 579, 580, 353,
	581, 0, 582, 1135, 1136, 1137, 1138, 0, 591, 0,
	583, 584, 585, 1147, 586, 1148, 1065, 587, 588, 589,
	590, 0, 592, 593, 0, 1049, 594, 595, 596, 598,
	599, 597, 600, 1109, 601, 0, 0, 602, 603, 604,
	660, 1132, 1169, 0, 606, 605, 607, 663, 0, 0,
	0, 0, 0, 608, 609, 664, 610, 611, 612, 1046,
	0, 0, 0, 0, 0, 0, 0, 1042, 0, 0,
	0, 0, 0, 0, 1040, 1041, 1087, 1059, 1060, 1061,
	1057, 1058, 1070, 1071, 0, 0, 0, 1069, 0, 0,
	0, 0, 0, 269, 271, 270, 272, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 1111,
	1075, 0, 0, 0, 279, 280, 1151, 281, 282, 283,
	284, 285, 286, 614, 1124, 0, 287, 1131, 288, 1130,
	0, 1141, 289, 290, 291, 292, 293, 294, 1077, 1110,
	1044, 295, 1171, 1172, 621, 0, 296, 297, 1117, 0,
	1098, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1152,
	320, 321, 322, 1101, 1099, 1100, 1107, 1103, 1102, 1106,
	323, 324, 325, 326, 327, 1134, 328, 1128, 1127, 1048,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 1119, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 1054, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1142, 1143, 359,
	1066, 266, 0, 0, 0, 0, 0, 360, 361, 362,
	1126, 0, 0, 0, 363, 0, 364, 0, 0, 1153,
	365, 366, 1139, 1140, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 1149, 0, 1076, 377, 0,
	378, 379, 380, 381, 382, 1112, 1113, 1116, 459, 1155,
	383, 384, 0, 385, 386, 387, 388, 0, 0, 0,
	267, 389, 390, 391, 393, 0, 1154, 392, 1121, 1122,
	0, 1082, 0, 394, 395, 1156, 1114, 1157, 396, 397,
	398, 1158, 399, 0, 0, 0, 400, 401, 402, 403,
	404, 405, 0, 406, 408, 407, 0, 409, 1150, 1159,
	410, 411, 1160, 0, 412, 0, 0, 0, 413, 414,
	417, 1105, 1104, 415, 416, 418, 419, 0, 420, 421,
	423, 426, 422, 424, 425, 427, 440, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 442,
	0, 441, 1161, 443, 444, 445, 450, 452, 453, 448,
	449, 451, 454, 455, 447, 1162, 446, 1045, 268, 1163,
	456, 457, 1067, 1115, 458, 1129, 460, 461, 0, 0,
	462, 0, 0, 0, 464, 465, 466, 0, 0, 467,
	468, 643, 1164, 469, 1165, 1144, 470, 471, 463, 472,
	473, 474, 475, 476, 477, 478, 479, 0, 480, 481,
	645, 482, 483, 484, 646, 485, 486, 487, 1145, 488,
	648, 489, 490, 0, 491, 492, 0, 493, 494, 495,
	496, 497, 498, 499, 1125, 500, 502, 501, 503, 0,
	504, 0, 505, 506, 507, 0, 0, 0, 0, 508,
	0, 510, 511, 512, 513, 509, 514, 515, 516, 517,
	0, 518, 519, 520, 1166, 521, 522, 523, 524, 1055,
	525, 0, 526, 527, 533, 534, 528, 529, 535, 536,
	537, 538, 539, 0, 541, 542, 540, 543, 544, 545,
	1108, 546, 547, 530, 531, 548, 549, 1167, 550, 551,
	552, 553, 554, 555, 1123, 0, 556, 0, 557, 558,
	559, 561, 532, 562, 567, 568, 1170, 563, 564, 565,
	566, 1146, 570, 571, 0, 572, 573, 1043, 569, 560,
	0, 574, 575, 576, 577, 578, 579, 580, 353, 581,
	0, 582, 1135, 1136, 1137, 1138, 0, 591, 0, 583,
	584, 585, 1147, 586, 1148, 1065, 587, 588, 589, 590,
	0, 592, 593, 0, 1049, 594, 595, 596, 598, 599,
	597, 600, 1109, 601, 0, 0, 602, 603, 604, 660,
	1132, 1169, 0, 606, 605, 607, 663, 0, 0, 0,
	0, 0, 608, 609, 664, 610, 611, 612, 1046, 0,
	0, 0, 0, 0, 0, 0, 1042, 0, 0, 0,
	0, 0, 0, 2344, 2345, 1087, 1059, 1060, 1061, 1057,
	1058, 1070, 1071, 0, 0, 0, 1069, 0, 0, 0,
	0, 0, 269, 271, 270, 272, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1111, 1075,
	0, 0, 0, 279, 280, 1151, 281, 282, 283, 284,
	285, 286, 614, 1124, 0, 287, 1131, 288, 1130, 0,
	1141, 289, 290, 291, 292, 293, 294, 1077, 1110, 0,
	295, 1171, 1172, 621, 0, 296, 297, 1117, 0, 1098,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1152, 320,
	321, 322, 1101, 1099, 1100, 1107, 1103, 1102, 1106, 323,
	324, 325, 326, 327, 1134, 328, 1128, 1127, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1119, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1054, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1142, 1143, 359, 1066,
	266, 0, 0, 0, 0, 0, 360, 361, 362, 1126,
	0, 0, 0, 363, 0, 364, 0, 0, 1153, 365,
	366, 1139, 1140, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 1149, 0, 1076, 377, 0, 378,
	379, 380, 381, 382, 1112, 1113, 1116, 459, 1155, 383,
	384, 0, 385, 386, 387, 388, 0, 0, 0, 267,
	389, 390, 391, 393, 0, 1154, 392, 1121, 1122, 0,
	1082, 0, 394, 395, 1156, 1114, 1157, 396, 397, 398,
	1158, 399, 0, 0, 0, 400, 401, 402, 403, 404,
	405, 0, 406, 408, 407, 0, 409, 1150, 1159, 410,
	411, 1160, 0, 412, 0, 0, 0, 413, 414, 417,
	1105, 1104, 415, 416, 418, 419, 0, 420, 421, 423,
	426, 422, 424, 425, 427, 440, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 442, 0,
	441, 1161, 443, 444, 445, 450, 452, 453, 448, 449,
	451, 454, 455, 447, 1162, 446, 0, 268, 1163, 456,
	457, 1067, 1115, 458, 1129, 460, 461, 0, 0, 462,
	0, 0, 0, 464, 465, 466, 0, 0, 467, 468,
	643, 1164, 469, 1165, 1144, 470, 471, 463, 472, 473,
	474, 475, 476, 477, 478, 479, 0, 480, 481, 645,
	482, 483, 484, 646, 485, 486, 487, 1145, 488, 648,
	489, 490, 0, 491, 492, 0, 493, 494, 495, 496,
	497, 498, 499, 1125, 500, 502, 501, 503, 0, 504,
	0, 505, 506, 507, 0, 0, 0, 0, 508, 0,
	510, 511, 512, 513, 509, 514, 515, 516, 517, 0,
	518, 519, 520, 1166, 521, 522, 523, 524, 1055, 525,
	0, 526, 527, 533, 534, 528, 529, 535, 536, 537,
	538, 539, 0, 541, 542, 540, 543, 544, 545, 1108,
	546, 547, 530, 531, 548, 549, 1167, 550, 551, 552,
	553, 554, 555, 1123, 0, 556, 0, 557, 558, 559,
	561, 532, 562, 567, 568, 1170, 563, 564, 565, 566,
	1146, 570, 571, 0, 572, 573, 0, 569, 560, 0,
	574, 575, 576, 577, 578, 579, 580, 353, 581, 0,
	582, 1135, 1136, 1137, 1138, 0, 591, 0, 583, 584,
	585, 1147, 586, 1148, 1065, 587, 588, 589, 590, 0,
	592, 593, 0, 0, 594, 595, 596, 598, 599, 597,
	600, 1109, 601, 0, 0, 602, 603, 604, 660, 1132,
	1169, 0, 606, 605, 607, 663, 0, 0, 0, 0,
	0, 608, 609, 664, 610, 611, 612, 0, 0, 0,
	0, 0, 0, 0, 0, 2564, 0, 0, 0, 0,
	0, 0, 2562, 2563, 1087, 1059, 1060, 1061, 1057, 1058,
	1070, 1071, 0, 0, 0, 1069, 0, 0, 0, 0,
	0, 269, 271, 270, 272, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 1111, 1075, 0,
	0, 0, 279, 280, 1151, 281, 282, 283, 284, 285,
	286, 614, 1124, 0, 287, 1131, 288, 1130, 0, 1141,
	289, 290, 291, 292, 293, 294, 1077, 1110, 0, 295,
	1171, 1172, 621, 0, 296, 297, 1117, 0, 1098, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1152, 320, 321,
	322, 1101, 1099, 1100, 1107, 1103, 1102, 1106, 323, 324,
	325, 326, 327, 1134, 328, 1128, 1127, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 1119, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 1054, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 1142, 1143, 359, 1066, 266,
	0, 0, 0, 0, 0, 360, 361, 362, 1126, 0,
	0, 0, 363, 0, 364, 0, 0, 1153, 365, 366,
	1139, 1140, 367, 368, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 1149, 0, 1076, 377, 0, 378, 379,
	380, 381, 382, 1112, 1113, 1116, 459, 1155, 383, 384,
	0, 385, 386, 387, 388, 0, 0, 0, 267, 389,
	390, 391, 393, 0, 1154, 392, 1121, 1122, 0, 1082,
	0, 394, 395, 1156, 1114, 1157, 396, 397, 398, 1158,
	399, 0, 0, 0, 400, 401, 402, 403, 404, 405,
	0, 406, 408, 407, 0, 409, 1150, 1159, 410, 411,
	1160, 0, 412, 0, 0, 0, 413, 414, 417, 1105,
	1104, 415, 416, 418, 419, 0, 420, 421, 423, 426,
	422, 424, 425, 427, 440, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 442, 0, 441,
	1161, 443, 444, 445, 450, 452, 453, 448, 449, 451,
	454, 455, 447, 1162, 446, 0, 268, 1163, 456, 457,
	1067, 1115, 458, 1129, 460, 461, 0, 0, 462, 0,
	0, 0, 464, 465, 466, 0, 0, 467, 468, 643,
	1164, 469, 1165, 1144, 470, 471, 463, 472, 473, 474,
	475, 476, 477, 478, 479, 0, 480, 481, 645, 482,
	483, 484, 646, 485, 486, 487, 1145, 488, 648, 489,
	490, 0, 491, 492, 0, 493, 494, 495, 496, 497,
	498, 499, 1125, 500, 502, 501, 503, 0, 504, 0,
	505, 506, 507, 0, 0, 0, 0, 508, 0, 510,
	511, 512, 513, 509, 514, 515, 516, 517, 0, 518,
	519, 520, 1166, 521, 522, 523, 524, 3007, 3008, 0,
	526, 527, 533, 534, 528, 529, 535, 536, 537, 538,
	539, 0, 541, 542, 540, 543, 544, 545, 1108, 546,
	547, 530, 531, 548, 549, 1167, 550, 551, 552, 553,
	554, 555, 1123, 0, 556, 0, 557, 558, 559, 561,
	532, 562, 567, 568, 1170, 563, 564, 565, 566, 1146,
	570, 571, 0, 572, 573, 0, 569, 560, 0, 574,
	575, 576, 577, 578, 579, 580, 353, 581, 0, 582,
	1135, 1136, 1137, 1138, 0, 591, 0, 583, 584, 585,
	1147, 586, 1148, 1065, 587, 588, 589, 590, 0, 592,
	593, 0, 0, 594, 595, 596, 598, 599, 597, 600,
	1109, 601, 0, 0, 602, 603, 604, 660, 1132, 1169,
	0, 606, 605, 607, 663, 0, 0, 0, 0, 0,
	608, 609, 664, 610, 611, 612, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 2053, 1087, 1059, 1060, 1061, 1057, 1058, 1070,
	1071, 0, 0, 0, 1069, 0, 0, 0, 0, 0,
	269, 271, 270, 272, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1111, 1075, 0, 0,
	0, 279, 280, 1151, 281, 282, 283, 284, 285, 286,
	0, 1124, 0, 287, 1131, 288, 1130, 0, 1141, 289,
	290, 291, 292, 293, 294, 1077, 1110, 1044, 295, 1171,
	1172, 621, 0, 296, 297, 1117, 0, 1098, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1152, 320, 321, 4506,
	1101, 1099, 1100, 1107, 1103, 1102, 1106, 323, 324, 325,
	326, 327, 1134, 328, 1128, 1127, 1048, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1119, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1054, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1142, 1143, 359, 1066, 266, 0,
	0, 0, 0, 0, 360, 361, 362, 1126, 0, 0,
	0, 363, 0, 364, 0, 0, 1153, 365, 366, 1139,
	1140, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 1149, 0, 1076, 377, 0, 378, 379, 380,
	381, 382, 1112, 1113, 1116, 459, 0, 383, 384, 0,
	385, 386, 387, 388, 0, 0, 0, 267, 389, 390,
	391, 393, 0, 1154, 392, 1121, 1122, 0, 1082, 0,
	394, 395, 0, 1114, 0, 396, 397, 398, 1158, 399,
	0, 0, 0, 400, 401, 402, 403, 404, 405, 0,
	406, 408, 407, 0, 409, 1150, 1159, 410, 411, 0,
	0, 412, 0, 0, 0, 413, 414, 417, 1105, 1104,
	415, 416, 418, 419, 0, 420, 421, 423, 426, 422,
	424, 425, 427, 440, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 442, 0, 441, 1161,
	443, 444, 445, 450, 452, 453, 448, 449, 451, 454,
	455, 447, 1162, 446, 1045, 268, 0, 456, 457, 1067,
	1115, 458, 1129, 460, 461, 0, 0, 462, 0, 0,
	0, 464, 465, 466, 0, 0, 467, 468, 643, 1164,
	469, 1165, 1144, 470, 471, 463, 472, 473, 474, 475,
	476, 477, 478, 479, 0, 480, 481, 645, 482, 483,
	484, 646, 485, 486, 487, 1145, 488, 648, 489, 490,
	0, 491, 492, 0, 493, 494, 495, 496, 497, 498,
	499, 1125, 500, 502, 501, 503, 0, 504, 0, 505,
	506, 507, 0, 0, 0, 0, 508, 0, 510, 511,
	512, 513, 509, 514, 515, 516, 517, 0, 518, 519,
	520, 1166, 521, 522, 523, 524, 1055, 525, 0, 526,
	527, 533, 534, 528, 529, 535, 536, 537, 538, 539,
	0, 541, 542, 540, 543, 544, 545, 1108, 546, 547,
	530, 531, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 1123, 0, 556, 0, 557, 558, 559, 561, 532,
	562, 567, 568, 1170, 563, 564, 565, 566, 1146, 570,
	571, 0, 572, 573, 1043, 569, 560, 0, 574, 575,
	576, 577, 578, 579, 580, 353, 581, 0, 582, 1135,
	1136, 1137, 1138, 0, 591, 0, 583, 584, 585, 1147,
	586, 1148, 1065, 587, 588, 589, 590, 0, 4505, 593,
	0, 1049, 594, 595, 596, 598, 599, 597, 600, 1109,
	601, 0, 0, 602, 603, 604, 660, 1132, 1169, 0,
	606, 605, 607, 663, 0, 0, 0, 0, 0, 608,
	609, 664, 610, 611, 612, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1033, 0, 1209, 0, 0,
	1040, 1041, 0, 0, 0, 0, 0, 0, 0, 1071,
	0, 0, 0, 1069, 269, 271, 270, 272, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1111, 0, 0, 0, 0, 279, 280, 1151, 281, 282,
	283, 284, 285, 286, 614, 615, 0, 287, 616, 288,
	617, 0, 618, 289, 290, 291, 292, 293, 294, 0,
	1110, 0, 295, 619, 620, 621, 0, 296, 297, 1117,
	0, 1098, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1152, 320, 321, 322, 1101, 1099, 1100, 1107, 1103, 1102,
	1106, 323, 324, 325, 326, 327, 0, 328, 623, 624,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 625, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1142, 1143,
	359, 0, 266, 0, 0, 0, 0, 0, 360, 361,
	362, 628, 0, 0, 0, 363, 0, 364, 0, 0,
	1153, 365, 366, 629, 630, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 1149, 0, 632, 377,
	0, 378, 379, 380, 381, 382, 1112, 1113, 1116, 459,
	1155, 383, 384, 0, 385, 386, 387, 388, 0, 0,
	0, 267, 389, 390, 391, 393, 0, 1154, 392, 636,
	637, 0, 638, 0, 394, 395, 1156, 1114, 1157, 396,
	397, 398, 1158, 399, 0, 0, 0, 400, 401, 402,
	403, 404, 405, 1195, 406, 408, 407, 0, 409, 1150,
	1159, 410, 411, 1160, 0, 412, 0, 0, 0, 413,
	414, 417, 1105, 1104, 415, 416, 418, 419, 0, 420,
	421, 423, 426, 422, 424, 425, 427, 440, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	442, 0, 441, 1161, 443, 444, 445, 450, 452, 453,
	448, 449, 451, 454, 455, 447, 1162, 446, 0, 268,
	1163, 456, 457, 0, 1115, 458, 642, 460, 461, 0,
	0, 462, 0, 0, 1201, 464, 465, 466, 0, 0,
	467, 468, 643, 1164, 469, 1165, 1144, 470, 471, 463,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 480,
	481, 645, 482, 483, 484, 646, 485, 486, 487, 1145,
	488, 648, 489, 490, 0, 491, 492, 0, 493, 494,
	495, 496, 497, 498, 499, 649, 500, 502, 501, 503,
	0, 504, 0, 505, 506, 507, 0, 0, 0, 0,
	508, 0, 510, 511, 512, 513, 509, 514, 515, 516,
	517, 0, 518, 519, 520, 1166, 521, 522, 523, 524,
	650, 1203, 0, 526, 527, 533, 534, 528, 529, 535,
	536, 537, 538, 539, 228, 541, 542, 540, 543, 544,
	545, 1108, 546, 547, 530, 531, 548, 549, 1167, 550,
	551, 552, 553, 554, 555, 651, 0, 556, 0, 557,
	558, 559, 561, 532, 562, 567, 568, 652, 563, 564,
	565, 566, 1146, 570, 571, 0, 572, 573, 0, 569,
	560, 230, 574, 575, 576, 577, 578, 579, 580, 353,
	581, 0, 582, 654, 655, 656, 657, 0, 591, 0,
	583, 584, 585, 1147, 586, 1148, 0, 587, 588, 589,
	590, 0, 592, 593, 0, 0, 594, 595, 596, 598,
	599, 597, 600, 1109, 601, 0, 0, 602, 603, 604,
	1562, 661, 662, 0, 606, 605, 607, 663, 0, 1209,
	0, 0, 222, 608, 609, 664, 610, 611, 612, 0,
	0, 223, 0, 0, 0, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 1199, 1111, 1898, 0, 0, 0, 279, 280, 1151,
	281, 282, 283, 284, 285, 286, 614, 615, 0, 287,
	616, 288, 617, 0, 618, 289, 290, 291, 292, 293,
	294, 0, 1110, 0, 295, 619, 620, 621, 0, 296,
	297, 1117, 0, 1098, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1152, 320, 321, 322, 1101, 1099, 1100, 1107,
	1103, 1102, 1106, 323, 324, 325, 326, 327, 0, 328,
	623, 624, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 625,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1142, 1143, 359, 0, 266, 0, 0, 0, 0, 0,
	360, 361, 362, 628, 0, 0, 0, 363, 0, 364,
	0, 0, 1153, 365, 366, 629, 630, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 1149, 0,
	632, 377, 0, 378, 379, 380, 381, 382, 1112, 1113,
	1116, 459, 1155, 383, 384, 0, 385, 386, 387, 388,
	0, 0, 0, 267, 389, 390, 391, 393, 0, 1154,
	392, 636, 637, 0, 638, 0, 394, 395, 1156, 1114,
	1157, 396, 397, 398, 1158, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 1195, 406, 408, 407, 0,
	409, 1150, 1159, 410, 411, 1160, 0, 412, 0, 0,
	0, 413, 414, 417, 1105, 1104, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 1161, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 1162, 446,
	0, 268, 1163, 456, 457, 0, 1115, 458, 642, 460,
	461, 0, 0, 462, 0, 0, 1201, 464, 465, 466,
	0, 0, 467, 468, 643, 1164, 469, 1165, 1144, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 1145, 488, 648, 489, 490, 0, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 649, 500, 502,
	501, 503, 0, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 0, 518, 519, 520, 1166, 521, 522,
	523, 524, 650, 1203, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 228, 541, 542, 540,
	543, 544, 545, 1108, 546, 547, 530, 531, 548, 549,
	1167, 550, 551, 552, 553, 554, 555, 651, 0, 556,
	0, 557, 558, 559, 561, 532, 562, 567, 568, 652,
	563, 564, 565, 566, 1146, 570, 571, 0, 572, 573,
	0, 569, 560, 230, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 0, 582, 654, 655, 656, 657, 0,
	591, 0, 583, 584, 585, 1147, 586, 1148, 0, 587,
	588, 589, 590, 0, 592, 593, 0, 0, 594, 595,
	596, 598, 599, 597, 600, 1109, 601, 0, 0, 602,
	603, 604, 1562, 661, 662, 0, 606, 605, 607, 663,
	0, 3191, 0, 1209, 222, 608, 609, 664, 610, 611,
	612, 0, 0, 223, 0, 0, 0, 0, 0, 0,
	269, 271, 270, 272, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 1199, 0, 1898, 1111, 0, 0, 0,
	0, 279, 280, 1151, 281, 282, 283, 284, 285, 286,
	614, 615, 0, 287, 616, 288, 617, 0, 618, 289,
	290, 291, 292, 293, 294, 0, 1110, 0, 295, 619,
	620, 621, 0, 296, 297, 1117, 0, 1098, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1152, 320, 321, 322,
	1101, 1099, 1100, 1107, 1103, 1102, 1106, 323, 324, 325,
	326, 327, 0, 328, 623, 624, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 625, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1142, 1143, 359, 0, 266, 0,
	0, 0, 0, 0, 360, 361, 362, 628, 0, 0,
	0, 363, 0, 364, 0, 0, 1153, 365, 366, 629,
	630, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 1149, 0, 632, 377, 0, 378, 379, 380,
	381, 382, 1112, 1113, 1116, 459, 1155, 383, 384, 0,
	385, 386, 387, 388, 0, 0, 0, 267, 389, 390,
	391, 393, 0, 1154, 392, 636, 637, 0, 638, 0,
	394, 395, 1156, 1114, 1157, 396, 397, 398, 1158, 399,
	0, 0, 0, 400, 401, 402, 403, 404, 405, 1195,
	406, 408, 407, 0, 409, 1150, 1159, 410, 411, 1160,
	0, 412, 0, 0, 0, 413, 414, 417, 1105, 1104,
	415, 416, 418, 419, 0, 420, 421, 423, 426, 422,
	424, 425, 427, 440, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 442, 0, 441, 1161,
	443, 444, 445, 450, 452, 453, 448, 449, 451, 454,
	455, 447, 1162, 446, 0, 268, 1163, 456, 457, 0,
	1115, 458, 642, 460, 461, 0, 0, 462, 0, 0,
	1201, 464, 465, 466, 0, 0, 467, 468, 643, 1164,
	469, 1165, 1144, 470, 471, 463, 472, 473, 474, 475,
	476, 477, 478, 479, 0, 480, 481, 645, 482, 483,
	484, 646, 485, 486, 487, 1145, 488, 648, 489, 490,
	0, 491, 492, 0, 493, 494, 495, 496, 497, 498,
	499, 649, 500, 502, 501, 503, 0, 504, 0, 505,
	506, 507, 0, 0, 0, 0, 508, 0, 510, 511,
	512, 513, 509, 514, 515, 516, 517, 0, 518, 519,
	520, 1166, 521, 522, 523, 524, 650, 1203, 0, 526,
	527, 533, 534, 528, 529, 535, 536, 537, 538, 539,
	0, 541, 542, 540, 543, 544, 545, 1108, 546, 547,
	530, 531, 548, 549, 1167, 550, 551, 552, 553, 554,
	555, 651, 0, 556, 0, 557, 558, 559, 561, 532,
	562, 567, 568, 652, 563, 564, 565, 566, 1146, 570,
	571, 0, 572, 573, 0, 569, 560, 0, 574, 575,
	576, 577, 578, 579, 580, 353, 581, 0, 582, 654,
	655, 656, 657, 0, 591, 0, 583, 584, 585, 1147,
	586, 1148, 0, 587, 588, 589, 590, 0, 592, 593,
	0, 0, 594, 595, 596, 598, 599, 597, 600, 1109,
	601, 0, 0, 602, 603, 604, 660, 661, 662, 0,
	606, 605, 607, 663, 0, 1191, 0, 1209, 0, 608,
	609, 664, 610, 611, 612, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 271, 270, 272, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 1199, 0, 1197,
	1111, 0, 0, 0, 0, 279, 280, 1151, 281, 282,
	283, 284, 285, 286, 614, 615, 0, 287, 616, 288,
	617, 0, 618, 289, 290, 291, 292, 293, 294, 0,
	1110, 0, 295, 619, 620, 621, 0, 296, 297, 1117,
	0, 1098, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1152, 320, 321, 322, 1101, 1099, 1100, 1107, 1103, 1102,
	1106, 323, 324, 325, 326, 327, 0, 328, 623, 624,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 625, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1142, 1143,
	359, 0, 266, 0, 0, 0, 0, 0, 360, 361,
	362, 628, 0, 0, 0, 363, 0, 364, 0, 0,
	1153, 365, 366, 629, 630, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 1149, 0, 632, 377,
	0, 378, 379, 380, 381, 382, 1112, 1113, 1116, 459,
	1155, 383, 384, 0, 385, 386, 387, 388, 0, 0,
	0, 267, 389, 390, 391, 393, 0, 1154, 392, 636,
	637, 0, 638, 0, 394, 395, 1156, 1114, 1157, 396,
	397, 398, 1158, 399, 0, 0, 0, 400, 401, 402,
	403, 404, 405, 1195, 406, 408, 407, 0, 409, 1150,
	1159, 410, 411, 1160, 0, 412, 0, 0, 0, 413,
	414, 417, 1105, 1104, 415, 416, 418, 419, 0, 420,
	421, 423, 426, 422, 424, 425, 427, 440, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	442, 0, 441, 1161, 443, 444, 445, 450, 452, 453,
	448, 449, 451, 454, 455, 447, 1162, 446, 0, 268,
	1163, 456, 457, 0, 1115, 458, 642, 460, 461, 0,
	0, 462, 0, 0, 1201, 464, 465, 466, 0, 0,
	467, 468, 643, 1164, 469, 1165, 1144, 470, 471, 463,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 480,
	481, 645, 482, 483, 484, 646, 485, 486, 487, 1145,
	488, 648, 489, 490, 0, 491, 492, 0, 493, 494,
	495, 496, 497, 498, 499, 649, 500, 502, 501, 503,
	0, 504, 0, 505, 506, 507, 0, 0, 0, 0,
	508, 0, 510, 511, 512, 513, 509, 514, 515, 516,
	517, 0, 518, 519, 520, 1166, 521, 522, 523, 524,
	650, 1203, 0, 526, 527, 533, 534, 528, 529, 535,
	536, 537, 538, 539, 0, 541, 542, 540, 543, 544,
	545, 1108, 546, 547, 530, 531, 548, 549, 1167, 550,
	551, 552, 553, 554, 555, 651, 0, 556, 0, 557,
	558, 559, 561, 532, 562, 567, 568, 652, 563, 564,
	565, 566, 1146, 570, 571, 0, 572, 573, 0, 569,
	560, 0, 574, 575, 576, 577, 578, 579, 580, 353,
	581, 0, 582, 654, 655, 656, 657, 0, 591, 0,
	583, 584, 585, 1147, 586, 1148, 0, 587, 588, 589,
	590, 0, 592, 593, 0, 0, 594, 595, 596, 598,
	599, 597, 600, 1109, 601, 0, 0, 602, 603, 604,
	660, 661, 662, 0, 606, 605, 607, 663, 0, 1209,
	0, 0, 0, 608, 609, 664, 610, 611, 612, 0,
	0, 0, 0, 0, 0, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 1199, 1111, 1197, 0, 0, 0, 279, 280, 1151,
	281, 282, 283, 284, 285, 286, 614, 615, 0, 287,
	616, 288, 617, 0, 618, 289, 290, 291, 292, 293,
	294, 0, 1110, 0, 295, 619, 620, 621, 0, 296,
	297, 1117, 0, 1098, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1152, 320, 321, 322, 1101, 1099, 1100, 1107,
	1103, 1102, 1106, 323, 324, 325, 326, 327, 0, 328,
	623, 624, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 625,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1142, 1143, 359, 0, 266, 0, 0, 0, 0, 0,
	360, 361, 362, 628, 0, 0, 0, 363, 0, 364,
	0, 0, 1153, 365, 366, 629, 630, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 1149, 0,
	632, 377, 0, 378, 379, 380, 381, 382, 1112, 1113,
	1116, 459, 1155, 383, 384, 0, 385, 386, 387, 388,
	0, 0, 0, 267, 389, 390, 391, 393, 0, 1154,
	392, 636, 637, 0, 638, 0, 394, 395, 1156, 1114,
	1157, 396, 397, 398, 1158, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 1195, 406, 408, 407, 0,
	409, 1150, 1159, 410, 411, 1160, 0, 412, 0, 0,
	0, 413, 414, 417, 1105, 1104, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 1161, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 1162, 446,
	0, 268, 1163, 456, 457, 0, 1115, 458, 642, 460,
	461, 0, 0, 462, 0, 0, 1201, 464, 465, 466,
	0, 0, 467, 468, 643, 1164, 469, 1165, 1144, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 1145, 488, 648, 489, 490, 0, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 649, 500, 502,
	501, 503, 0, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 0, 518, 519, 520, 1166, 521, 522,
	523, 524, 650, 1203, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 0, 541, 542, 540,
	543, 544, 545, 1108, 546, 547, 530, 531, 548, 549,
	1167, 550, 551, 552, 553, 554, 555, 651, 0, 556,
	0, 557, 558, 559, 561, 532, 562, 567, 568, 652,
	563, 564, 565, 566, 1146, 570, 571, 0, 572, 573,
	0, 569, 560, 0, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 0, 582, 654, 655, 656, 657, 0,
	591, 0, 583, 584, 585, 1147, 586, 1148, 0, 587,
	588, 589, 590, 0, 592, 593, 0, 0, 594, 595,
	596, 598, 599, 597, 600, 1109, 601, 0, 0, 602,
	603, 604, 660, 661, 662, 0, 606, 605, 607, 663,
	0, 1209, 0, 0, 0, 608, 609, 664, 610, 611,
	612, 0, 0, 0, 0, 0, 0, 0, 269, 271,
	270, 272, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 1199, 1111, 1197, 0, 0, 0, 279,
	280, 1151, 281, 282, 283, 284, 285, 286, 614, 615,
	0, 287, 616, 288, 617, 0, 618, 289, 290, 291,
	292, 293, 294, 0, 1110, 0, 295, 619, 620, 621,
	0, 296, 297, 1117, 0, 1098, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1152, 320, 321, 322, 1101, 1099,
	1100, 1107, 1103, 1102, 1106, 323, 324, 325, 326, 327,
	0, 328, 623, 624, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 625, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1142, 1143, 359, 0, 266, 0, 0, 0,
	0, 0, 360, 361, 362, 628, 0, 0, 0, 363,
	0, 364, 0, 0, 1153, 365, 366, 629, 630, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	1149, 0, 632, 377, 0, 378, 379, 380, 381, 382,
	1112, 1113, 1116, 459, 1155, 383, 384, 0, 385, 386,
	387, 388, 0, 0, 0, 267, 389, 390, 391, 393,
	0, 1154, 392, 636, 637, 0, 638, 0, 394, 395,
	1156, 1114, 1157, 396, 397, 398, 1158, 399, 0, 0,
	0, 400, 401, 402, 403, 404, 405, 0, 406, 408,
	407, 0, 409, 1150, 1159, 410, 411, 1160, 0, 412,
	0, 0, 0, 413, 414, 417, 1105, 1104, 415, 416,
	418, 419, 0, 420, 421, 423, 426, 422, 424, 425,
	427, 440, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 442, 0, 441, 1161, 443, 444,
	445, 450, 452, 453, 448, 449, 451, 454, 455, 447,
	1162, 446, 0, 268, 1163, 456, 457, 0, 1115, 458,
	642, 460, 461, 0, 0, 462, 0, 0, 0, 464,
	465, 466, 0, 0, 467, 468, 643, 1164, 469, 1165,
	1144, 470, 471, 463, 472, 473, 474, 475, 476, 477,
	478, 479, 0, 480, 481, 645, 482, 483, 484, 646,
	485, 486, 487, 1145, 488, 648, 489, 490, 0, 491,
	492, 0, 493, 494, 495, 496, 497, 498, 499, 649,
	500, 502, 501, 503, 0, 504, 0, 505, 506, 507,
	0, 0, 0, 0, 508, 0, 510, 511, 512, 513,
	509, 514, 515, 516, 517, 0, 518, 519, 520, 1166,
	521, 522, 523, 524, 650, 525, 0, 526, 527, 533,
	534, 528, 529, 535, 536, 537, 538, 539, 0, 541,
	542, 540, 543, 544, 545, 1108, 546, 547, 530, 531,
	548, 549, 1167, 550, 551, 552, 553, 554, 555, 651,
	0, 556, 0, 557, 558, 559, 561, 532, 562, 567,
	568, 652, 563, 564, 565, 566, 1146, 570, 571, 0,
	572, 573, 0, 569, 560, 0, 574, 575, 576, 577,
	578, 579, 580, 353, 581, 0, 582, 654, 655, 656,
	657, 0, 591, 0, 583, 584, 585, 1147, 586, 1148,
	0, 587, 588, 589, 590, 0, 592, 593, 0, 0,
	594, 595, 596, 598, 599, 597, 600, 1109, 601, 0,
	0, 602, 603, 604, 660, 661, 662, 0, 606, 605,
	607, 663, 1209, 0, 0, 0, 0, 608, 609, 664,
	610, 611, 612, 0, 0, 0, 0, 0, 0, 269,
	271, 270, 272, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1111, 0, 3991, 0, 0,
	279, 280, 1151, 281, 282, 283, 284, 285, 286, 614,
	615, 0, 287, 616, 288, 617, 0, 618, 289, 290,
	291, 292, 293, 294, 0, 1110, 0, 295, 619, 620,
	621, 0, 296, 297, 1117, 0, 1098, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1152, 320, 321, 322, 1101,
	1099, 1100, 1107, 1103, 1102, 1106, 323, 324, 325, 326,
	327, 0, 328, 623, 624, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 625, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1142, 1143, 359, 0, 266, 0, 0,
	0, 0, 0, 360, 361, 362, 628, 0, 0, 0,
	363, 0, 364, 0, 0, 1153, 365, 366, 629, 630,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 1149, 0, 632, 377, 0, 378, 379, 380, 381,
	382, 1112, 1113, 1116, 459, 1155, 383, 384, 0, 385,
	386, 387, 388, 0, 0, 0, 267, 389, 390, 391,
	393, 0, 1154, 392, 636, 637, 0, 638, 0, 394,
	395, 1156, 1114, 1157, 396, 397, 398, 1158, 399, 0,
	0, 0, 400, 401, 402, 403, 404, 405, 0, 406,
	408, 407, 0, 409, 1150, 1159, 410, 411, 1160, 0,
	412, 0, 0, 0, 413, 414, 417, 1105, 1104, 415,
	416, 418, 419, 0, 420, 421, 423, 426, 422, 424,
	425, 427, 440, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 442, 0, 441, 1161, 443,
	444, 445, 450, 452, 453, 448, 449, 451, 454, 455,
	447, 1162, 446, 0, 268, 1163, 456, 457, 0, 1115,
	458, 642, 460, 461, 0, 0, 462, 0, 0, 0,
	464, 465, 466, 0, 0, 467, 468, 643, 1164, 469,
	1165, 1144, 470, 471, 463, 472, 473, 474, 475, 476,
	477, 478, 479, 0, 480, 481, 645, 482, 483, 484,
	646, 485, 486, 487, 1145, 488, 648, 489, 490, 0,
	491, 492, 0, 493, 494, 495, 496, 497, 498, 499,
	649, 500, 502, 501, 503, 0, 504, 0, 505, 506,
	507, 0, 0, 0, 0, 508, 0, 510, 511, 512,
	513, 509, 514, 515, 516, 517, 0, 518, 519, 520,
	1166, 521, 522, 523, 524, 650, 1203, 0, 526, 527,
	533, 534, 528, 529, 535, 536, 537, 538, 539, 0,
	541, 542, 540, 543, 544, 545, 1108, 546, 547, 530,
	531, 548, 549, 1167, 550, 551, 552, 553, 554, 555,
	651, 0, 556, 0, 557, 558, 559, 561, 532, 562,
	567, 568, 652, 563, 564, 565, 566, 1146, 570, 571,
	0, 572, 573, 0, 569, 560, 0, 574, 575, 576,
	577, 578, 579, 580, 353, 581, 0, 582, 654, 655,
	656, 657, 0, 591, 0, 583, 584, 585, 1147, 586,
	1148, 0, 587, 588, 589, 590, 0, 592, 593, 0,
	0, 594, 595, 596, 598, 599, 597, 600, 1109, 601,
	0, 0, 602, 603, 604, 660, 661, 662, 0, 606,
	605, 607, 663, 0, 1033, 0, 1289, 0, 608, 609,
	664, 610, 611, 612, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 271, 270, 272, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 1797, 613,
	0, 0, 0, 0, 279, 280, 1151, 281, 282, 283,
	284, 285, 286, 614, 615, 0, 287, 616, 288, 617,
	0, 618, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 619, 620, 621, 0, 296, 297, 622, 0,
	1294, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1152,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 623, 624, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 625, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 626, 627, 359,
	0, 266, 0, 0, 0, 0, 0, 360, 361, 362,
	628, 0, 0, 0, 363, 0, 364, 0, 0, 1153,
	365, 366, 629, 630, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 631, 0, 632, 377, 0,
	378, 379, 380, 381, 382, 633, 634, 635, 459, 1155,
	383, 384, 0, 385, 386, 387, 388, 0, 0, 0,
	0, 389, 390, 391, 393, 0, 1154, 392, 636, 637,
	0, 638, 0, 394, 395, 1156, 639, 1157, 396, 397,
	398, 1158, 399, 0, 0, 0, 400, 401, 402, 403,
	404, 405, 0, 406, 408, 407, 0, 409, 640, 1159,
	410, 411, 1160, 0, 412, 0, 0, 0, 413, 414,
	417, 0, 0, 415, 416, 418, 419, 0, 420, 421,
	423, 426, 422, 424, 425, 427, 440, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 442,
	0, 441, 1161, 443, 444, 445, 450, 452, 453, 448,
	449, 451, 454, 455, 447, 1162, 446, 0, 0, 1163,
	456, 457, 0, 641, 458, 642, 460, 461, 0, 0,
	462, 0, 0, 0, 464, 465, 466, 0, 0, 467,
	468, 643, 1164, 469, 1165, 644, 470, 471, 463, 472,
	473, 474, 475, 476, 477, 478, 479, 0, 480, 481,
	645, 482, 483, 484, 646, 485, 486, 487, 647, 488,
	648, 489, 490, 0, 491, 492, 0, 493, 494, 495,
	496, 497, 498, 499, 649, 500, 502, 501, 503, 0,
	504, 0, 505, 506, 507, 0, 0, 0, 0, 508,
	0, 510, 511, 512, 513, 509, 514, 515, 516, 517,
	0, 518, 519, 520, 1166, 521, 522, 523, 524, 650,
	525, 0, 526, 527, 533, 534, 528, 529, 535, 536,
	537, 538, 539, 228, 541, 542, 540, 543, 544, 545,
	0, 546, 547, 530, 531, 548, 549, 1167, 550, 551,
	552, 553, 554, 555, 651, 0, 556, 0, 557, 558,
	559, 561, 532, 562, 567, 568, 652, 563, 564, 565,
	566, 653, 570, 571, 0, 572, 573, 0, 569, 560,
	230, 574, 575, 576, 577, 578, 579, 580, 353, 581,
	0, 582, 654, 655, 656, 657, 0, 591, 0, 583,
	584, 585, 658, 586, 659, 0, 587, 588, 589, 590,
	0, 592, 593, 0, 0, 594, 595, 596, 598, 599,
	597, 600, 0, 601, 0, 0, 602, 603, 604, 1562,
	661, 662, 0, 606, 605, 607, 663, 0, 1559, 0,
	1289, 222, 608, 609, 664, 610, 611, 612, 0, 0,
	223, 0, 0, 0, 0, 0, 0, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 184, 613, 0, 0, 0, 0, 279, 280,
	1151, 281, 282, 283, 284, 285, 286, 614, 615, 0,
	287, 616, 288, 617, 0, 618, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 619, 620, 621, 0,
	296, 297, 622, 0, 1294, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1152, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 623, 624, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	625, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 626, 627, 359, 0, 266, 0, 0, 0, 0,
	0, 360, 361, 362, 628, 0, 0, 0, 363, 0,
	364, 0, 0, 1153, 365, 366, 629, 630, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 631,
	0, 632, 377, 0, 378, 379, 380, 381, 382, 633,
	634, 635, 459, 1155, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 0, 389, 390, 391, 393, 0,
	1154, 392, 636, 637, 0, 638, 0, 394, 395, 1156,
	639, 1157, 396, 397, 398, 1158, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 640, 1159, 410, 411, 1160, 0, 412, 0,
	0, 0, 413, 414, 417, 0, 0, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 1161, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 1162,
	446, 0, 0, 1163, 456, 457, 0, 641, 458, 642,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 1164, 469, 1165, 644,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 647, 488, 648, 489, 490, 0, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 649, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 1166, 521,
	522, 523, 524, 650, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 228, 541, 542,
	540, 543, 544, 545, 0, 546, 547, 530, 531, 548,
	549, 1167, 550, 551, 552, 553, 554, 555, 651, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	652, 563, 564, 565, 566, 653, 570, 571, 0, 572,
	573, 0, 569, 560, 230, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 654, 655, 656, 657,
	0, 591, 0, 583, 584, 585, 658, 586, 659, 0,
	587, 588, 589, 590, 0, 592, 593, 0, 0, 594,
	595, 596, 598, 599, 597, 600, 0, 601, 0, 0,
	602, 603, 604, 1562, 661, 662, 0, 606, 605, 607,
	663, 0, 0, 0, 0, 222, 608, 609, 664, 610,
	611, 612, 0, 0, 223, 0, 0, 0, 0, 0,
	1289, 1288, 0, 0, 0, 0, 1286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 613, 0, 0, 0, 0, 279, 280,
	1151, 281, 282, 283, 284, 285, 286, 614, 615, 0,
	287, 616, 288, 617, 0, 618, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 619, 620, 621, 0,
	296, 297, 622, 0, 1294, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1152, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 623, 624, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	625, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 626, 627, 359, 0, 266, 0, 0, 0, 0,
	0, 360, 361, 362, 628, 0, 0, 0, 363, 0,
	364, 0, 0, 1153, 365, 366, 629, 630, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 631,
	0, 632, 377, 0, 378, 379, 380, 381, 382, 633,
	634, 635, 459, 1155, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 0, 389, 390, 391, 393, 0,
	1154, 392, 636, 637, 0, 638, 0, 394, 395, 1156,
	639, 1157, 396, 397, 398, 1158, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 640, 1159, 410, 411, 1160, 0, 412, 0,
	0, 0, 413, 414, 417, 0, 0, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 1161, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 1162,
	446, 0, 0, 1163, 456, 457, 0, 641, 458, 642,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 1164, 469, 1165, 644,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 647, 488, 648, 489, 490, 0, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 649, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 1166, 521,
	522, 523, 524, 650, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 0, 541, 542,
	540, 543, 544, 545, 0, 546, 547, 530, 531, 548,
	549, 1167, 550, 551, 552, 553, 554, 555, 651, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	652, 563, 564, 565, 566, 653, 570, 571, 0, 572,
	573, 0, 569, 560, 0, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 654, 655, 656, 657,
	0, 591, 0, 583, 584, 585, 658, 586, 659, 0,
	587, 588, 589, 590, 0, 592, 593, 0, 0, 594,
	595, 596, 598, 599, 597, 600, 0, 601, 0, 0,
	602, 603, 604, 660, 661, 662, 0, 606, 605, 607,
	663, 0, 0, 0, 0, 0, 608, 609, 664, 610,
	611, 612, 0, 0, 0, 0, 0, 0, 0, 0,
	1289, 1288, 0, 0, 0, 0, 1286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1584, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 613, 0, 0, 0, 0, 279, 280,
	1151, 281, 282, 283, 284, 285, 286, 614, 615, 0,
	287, 616, 288, 617, 0, 618, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 619, 620, 621, 0,
	296, 297, 622, 0, 1294, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1152, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 623, 624, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	625, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 626, 627, 359, 0, 266, 0, 0, 0, 0,
	0, 360, 361, 362, 628, 0, 0, 0, 363, 0,
	364, 0, 0, 1153, 365, 366, 629, 630, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 631,
	0, 632, 377, 0, 378, 379, 380, 381, 382, 633,
	634, 635, 459, 1155, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 0, 389, 390, 391, 393, 0,
	1154, 392, 636, 637, 0, 638, 0, 394, 395, 1156,
	639, 1157, 396, 397, 398, 1158, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 640, 1159, 410, 411, 1160, 0, 412, 0,
	0, 0, 413, 414, 417, 0, 0, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 1161, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 1162,
	446, 0, 0, 1163, 456, 457, 0, 641, 458, 642,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 1164, 469, 1165, 644,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 647, 488, 648, 489, 490, 0, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 649, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 1166, 521,
	522, 523, 524, 650, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 0, 541, 542,
	540, 543, 544, 545, 0, 546, 547, 530, 531, 548,
	549, 1167, 550, 551, 552, 553, 554, 555, 651, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	652, 563, 564, 565, 566, 653, 570, 571, 0, 572,
	573, 0, 569, 560, 0, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 654, 655, 656, 657,
	0, 591, 0, 583, 584, 585, 658, 586, 659, 0,
	587, 588, 589, 590, 0, 592, 593, 0, 0, 594,
	595, 596, 598, 599, 597, 600, 0, 601, 0, 0,
	602, 603, 604, 660, 661, 662, 0, 606, 605, 607,
	663, 0, 0, 0, 0, 0, 608, 609, 664, 610,
	611, 612, 0, 0, 0, 0, 0, 0, 0, 0,
	1289, 1288, 0, 0, 0, 0, 1286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3474, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 613, 0, 0, 0, 0, 279, 280,
	1151, 281, 282, 283, 284, 285, 286, 614, 615, 0,
	287, 616, 288, 617, 0, 618, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 619, 620, 621, 0,
	296, 297, 622, 0, 1294, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1152, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 623, 624, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	625, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 626, 627, 359, 0, 266, 0, 0, 0, 0,
	0, 360, 361, 362, 628, 0, 0, 0, 363, 0,
	364, 0, 0, 1153, 365, 366, 629, 630, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 631,
	0, 632, 377, 0, 378, 379, 380, 381, 382, 633,
	634, 635, 459, 1155, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 0, 389, 390, 391, 393, 0,
	1154, 392, 636, 637, 0, 638, 0, 394, 395, 1156,
	639, 1157, 396, 397, 398, 1158, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 640, 1159, 410, 411, 1160, 0, 412, 0,
	0, 0, 413, 414, 417, 0, 0, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 1161, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 1162,
	446, 0, 0, 1163, 456, 457, 0, 641, 458, 642,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 1164, 469, 1165, 644,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 647, 488, 648, 489, 490, 0, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 649, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 2235, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 1166, 521,
	522, 523, 524, 650, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 0, 541, 542,
	540, 543, 544, 545, 0, 546, 547, 530, 531, 548,
	549, 1167, 550, 551, 552, 553, 554, 555, 651, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	652, 563, 564, 565, 566, 653, 570, 571, 0, 572,
	573, 0, 569, 560, 0, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 654, 655, 656, 657,
	0, 591, 0, 583, 584, 585, 658, 586, 659, 0,
	587, 588, 589, 590, 0, 592, 593, 0, 0, 594,
	595, 596, 598, 599, 597, 600, 0, 601, 0, 0,
	602, 603, 604, 660, 661, 662, 0, 606, 605, 607,
	663, 0, 0, 0, 0, 0, 608, 609, 664, 610,
	611, 612, 0, 0, 0, 0, 0, 0, 0, 0,
	1289, 2149, 0, 0, 0, 0, 2150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1584, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 613, 0, 0, 0, 0, 279, 280,
	1151, 281, 282, 283, 284, 285, 286, 614, 615, 0,
	287, 616, 288, 617, 0, 618, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 619, 620, 621, 0,
	296, 297, 622, 0, 1294, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1152, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 623, 624, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	625, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 626, 627, 359, 0, 266, 0, 0, 0, 0,
	0, 360, 361, 362, 628, 0, 0, 0, 363, 0,
	364, 0, 0, 1153, 365, 366, 629, 630, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 631,
	0, 632, 377, 0, 378, 379, 380, 381, 382, 633,
	634, 635, 459, 1155, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 0, 389, 390, 391, 393, 0,
	1154, 392, 636, 637, 0, 638, 0, 394, 395, 1156,
	639, 1157, 396, 397, 398, 1158, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 2148, 408, 407,
	0, 409, 640, 1159, 410, 411, 1160, 0, 412, 0,
	0, 0, 413, 414, 417, 0, 0, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 1161, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 1162,
	446, 0, 0, 1163, 456, 457, 0, 641, 458, 642,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 1164, 469, 1165, 644,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 647, 488, 648, 489, 490, 0, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 649, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 1166, 521,
	522, 523, 524, 650, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 0, 541, 542,
	540, 543, 544, 545, 0, 546, 547, 530, 531, 548,
	549, 1167, 550, 551, 552, 553, 554, 555, 651, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	652, 563, 564, 565, 566, 653, 570, 571, 0, 572,
	573, 0, 569, 560, 0, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 654, 655, 656, 657,
	0, 591, 0, 583, 584, 585, 658, 586, 659, 0,
	587, 588, 589, 590, 0, 592, 593, 0, 0, 594,
	595, 596, 598, 599, 597, 600, 0, 601, 0, 0,
	602, 603, 604, 660, 661, 662, 0, 606, 605, 607,
	663, 0, 0, 0, 0, 0, 608, 609, 664, 610,
	611, 612, 0, 0, 0, 0, 0, 0, 0, 0,
	1289, 1288, 0, 0, 0, 0, 1286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1584, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 613, 0, 0, 0, 0, 279, 280,
	1151, 281, 282, 283, 284, 285, 286, 614, 615, 0,
	287, 616, 288, 617, 0, 618, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 619, 620, 621, 0,
	296, 297, 622, 0, 1294, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1152, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 623, 624, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	625, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 626, 627, 359, 0, 266, 0, 0, 0, 0,
	0, 360, 361, 362, 628, 0, 0, 0, 363, 0,
	364, 0, 0, 1153, 365, 366, 629, 630, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 631,
	0, 632, 377, 0, 378, 379, 380, 381, 382, 633,
	634, 635, 459, 1155, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 0, 389, 390, 391, 393, 0,
	1154, 392, 636, 637, 0, 638, 0, 394, 395, 1156,
	639, 1157, 396, 397, 398, 1158, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 640, 1159, 410, 411, 1160, 0, 412, 0,
	0, 0, 413, 414, 417, 0, 0, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 1161, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 1162,
	446, 0, 0, 1163, 456, 457, 0, 641, 458, 642,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 1164, 469, 1165, 644,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 647, 488, 648, 489, 490, 0, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 649, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 1166, 521,
	522, 523, 524, 650, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 0, 541, 542,
	540, 543, 544, 545, 0, 546, 547, 530, 531, 548,
	549, 1167, 550, 551, 552, 553, 554, 555, 651, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	652, 563, 564, 565, 566, 653, 570, 571, 0, 572,
	573, 0, 569, 560, 0, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 654, 655, 656, 657,
	0, 591, 0, 583, 584, 585, 658, 586, 659, 0,
	587, 588, 589, 590, 0, 592, 593, 0, 0, 594,
	595, 596, 598, 599, 597, 600, 0, 601, 0, 0,
	602, 603, 604, 660, 661, 662, 0, 606, 605, 607,
	663, 1209, 0, 0, 0, 0, 608, 609, 664, 610,
	611, 612, 0, 0, 0, 0, 0, 0, 269, 271,
	270, 272, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1111, 0, 1568, 0, 0, 279,
	280, 1151, 281, 282, 283, 284, 285, 286, 614, 615,
	0, 287, 616, 288, 617, 0, 618, 289, 290, 291,
	292, 293, 294, 0, 1110, 0, 295, 619, 620, 621,
	0, 296, 297, 1117, 0, 1098, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1152, 320, 321, 322, 1101, 1099,
	1100, 1107, 1103, 1102, 1106, 323, 324, 325, 326, 327,
	0, 328, 623, 624, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 625, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1142, 1143, 359, 0, 266, 0, 0, 0,
	0, 0, 360, 361, 362, 628, 0, 0, 0, 363,
	0, 364, 0, 0, 1153, 365, 366, 629, 630, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	1149, 0, 632, 377, 0, 378, 379, 380, 381, 382,
	1112, 1113, 1116, 459, 1155, 383, 384, 0, 385, 386,
	387, 388, 0, 0, 0, 267, 389, 390, 391, 393,
	0, 1154, 392, 636, 637, 0, 638, 0, 394, 395,
	1156, 1114, 1157, 396, 397, 398, 1158, 399, 0, 0,
	0, 400, 401, 402, 403, 404, 405, 0, 406, 408,
	407, 0, 409, 1150, 1159, 410, 411, 1160, 0, 412,
	0, 0, 0, 413, 414, 417, 1105, 1104, 415, 416,
	418, 419, 0, 420, 421, 423, 426, 422, 424, 425,
	427, 440, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 442, 0, 441, 1161, 443, 444,
	445, 450, 452, 453, 448, 449, 451, 454, 455, 447,
	1162, 446, 0, 268, 1163, 456, 457, 0, 1115, 458,
	642, 460, 461, 0, 0, 462, 0, 0, 0, 464,
	465, 466, 0, 0, 467, 468, 643, 1164, 469, 1165,
	1144, 470, 471, 463, 472, 473, 474, 475, 476, 477,
	478, 479, 0, 480, 481, 645, 482, 483, 484, 646,
	485, 486, 487, 1145, 488, 648, 489, 490, 0, 491,
	492, 0, 493, 494, 495, 496, 497, 498, 499, 649,
	500, 502, 501, 503, 0, 504, 0, 505, 506, 507,
	0, 0, 0, 0, 508, 0, 510, 511, 512, 513,
	509, 514, 515, 516, 517, 0, 518, 519, 520, 1166,
	521, 522, 523, 524, 650, 525, 0, 526, 527, 533,
	534, 528, 529, 535, 536, 537, 538, 539, 0, 541,
	542, 540, 543, 544, 545, 1108, 546, 547, 530, 531,
	548, 549, 1167, 550, 551, 552, 553, 554, 555, 651,
	0, 556, 0, 557, 558, 559, 561, 532, 562, 567,
	568, 652, 563, 564, 565, 566, 1146, 570, 571, 0,
	572, 573, 0, 569, 560, 0, 574, 575, 576, 577,
	578, 579, 580, 353, 581, 0, 582, 654, 655, 656,
	657, 0, 591, 0, 583, 584, 585, 1147, 586, 1148,
	0, 587, 588, 589, 590, 0, 592, 593, 0, 0,
	594, 595, 596, 598, 599, 597, 600, 1109, 601, 0,
	0, 602, 603, 604, 660, 661, 662, 0, 606, 605,
	607, 663, 1033, 0, 263, 0, 0, 608, 609, 664,
	610, 611, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 271, 270, 272, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 613, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 614, 615, 0, 287, 616, 288, 617, 0, 618,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	619, 620, 621, 0, 296, 297, 622, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 623, 624, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 625, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 626, 627, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 628, 0,
	0, 0, 363, 0, 364, 0, 0, 0, 365, 366,
	629, 630, 367, 368, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 631, 0, 632, 377, 0, 378, 379,
	380, 381, 382, 633, 634, 635, 459, 0, 383, 384,
	0, 385, 386, 387, 388, 0, 0, 0, 0, 389,
	390, 391, 393, 0, 0, 392, 636, 637, 0, 638,
	0, 394, 395, 0, 639, 0, 396, 397, 398, 0,
	399, 0, 0, 0, 400, 401, 402, 403, 404, 405,
	0, 406, 408, 407, 0, 409, 640, 0, 410, 411,
	0, 0, 412, 0, 0, 0, 413, 414, 417, 0,
	0, 415, 416, 418, 419, 0, 420, 421, 423, 426,
	422, 424, 425, 427, 440, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 442, 0, 441,
	0, 443, 444, 445, 450, 452, 453, 448, 449, 451,
	454, 455, 447, 0, 446, 0, 0, 0, 456, 457,
	0, 641, 458, 642, 460, 461, 0, 0, 462, 0,
	0, 0, 464, 465, 466, 0, 0, 467, 468, 643,
	0, 469, 0, 644, 470, 471, 463, 472, 473, 474,
	475, 476, 477, 478, 479, 0, 480, 481, 645, 482,
	483, 484, 646, 485, 486, 487, 647, 488, 648, 489,
	490, 0, 491, 492, 0, 493, 494, 495, 496, 497,
	498, 499, 649, 500, 502, 501, 503, 0, 504, 0,
	505, 506, 507, 0, 0, 0, 0, 508, 0, 510,
	511, 512, 513, 509, 514, 515, 516, 517, 0, 518,
	519, 520, 0, 521, 522, 523, 524, 650, 525, 0,
	526, 527, 533, 534, 528, 529, 535, 536, 537, 538,
	539, 228, 541, 542, 540, 543, 544, 545, 0, 546,
	547, 530, 531, 548, 549, 0, 550, 551, 552, 553,
	554, 555, 651, 0, 556, 0, 557, 558, 559, 561,
	532, 562, 567, 568, 652, 563, 564, 565, 566, 653,
	570, 571, 0, 572, 573, 0, 569, 560, 230, 574,
	575, 576, 577, 578, 579, 580, 353, 581, 0, 582,
	654, 655, 656, 657, 0, 591, 0, 583, 584, 585,
	658, 586, 659, 0, 587, 588, 589, 590, 0, 592,
	593, 0, 0, 594, 595, 596, 598, 599, 597, 600,
	0, 601, 0, 0, 602, 603, 604, 1562, 661, 662,
	0, 606, 605, 607, 663, 263, 0, 0, 0, 222,
	608, 609, 664, 610, 611, 612, 0, 0, 223, 0,
	0, 0, 269, 271, 270, 272, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 613, 0,
	184, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 614, 615, 0, 287, 616, 288, 617, 0,
	618, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 619, 620, 621, 0, 296, 297, 622, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 623, 624, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 625, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 626, 627, 359, 0,
	266, 0, 0, 0, 0, 0, 360, 361, 362, 628,
	0, 0, 0, 363, 0, 364, 0, 0, 0, 365,
	366, 629, 630, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 631, 0, 632, 377, 0, 378,
	379, 380, 381, 382, 633, 634, 635, 459, 0, 383,
	384, 0, 385, 386, 387, 388, 0, 0, 0, 267,
	389, 390, 391, 393, 0, 0, 392, 636, 637, 0,
	638, 0, 394, 395, 0, 639, 0, 396, 397, 398,
	0, 399, 0, 0, 0, 400, 401, 402, 403, 404,
	405, 0, 406, 408, 407, 0, 409, 640, 0, 410,
	411, 0, 0, 412, 0, 0, 0, 413, 414, 417,
	0, 0, 415, 416, 418, 419, 0, 420, 421, 423,
	426, 422, 424, 425, 427, 440, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 442, 0,
	441, 0, 443, 444, 445, 450, 452, 453, 448, 449,
	451, 454, 455, 447, 0, 446, 0, 268, 0, 456,
	457, 0, 641, 458, 642, 460, 461, 0, 0, 462,
	0, 0, 0, 464, 465, 466, 0, 0, 467, 468,
	643, 0, 469, 0, 644, 470, 471, 463, 472, 473,
	474, 475, 476, 477, 478, 479, 0, 480, 481, 645,
	482, 483, 484, 646, 485, 486, 487, 647, 488, 648,
	489, 490, 0, 491, 492, 0, 493, 494, 495, 496,
	497, 498, 499, 649, 500, 502, 501, 503, 0, 504,
	0, 505, 506, 507, 0, 0, 0, 0, 508, 0,
	510, 511, 512, 513, 509, 514, 515, 516, 517, 0,
	518, 519, 520, 0, 521, 522, 523, 524, 650, 525,
	0, 526, 527, 533, 534, 528, 529, 535, 536, 537,
	538, 539, 0, 541, 542, 540, 543, 544, 545, 0,
	546, 547, 530, 531, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 651, 0, 556, 0, 557, 558, 559,
	561, 532, 562, 567, 568, 652, 563, 564, 565, 566,
	653, 570, 571, 0, 572, 573, 0, 569, 560, 0,
	574, 575, 576, 577, 578, 579, 580, 353, 581, 0,
	582, 654, 655, 656, 657, 0, 591, 0, 583, 584,
	585, 658, 586, 659, 0, 587, 588, 589, 590, 0,
	592, 593, 0, 0, 594, 595, 596, 598, 599, 597,
	600, 0, 601, 0, 0, 602, 603, 604, 660, 661,
	662, 0, 606, 605, 607, 663, 263, 2921, 0, 0,
	0, 608, 609, 664, 610, 611, 612, 0, 0, 0,
	0, 0, 0, 269, 271, 270, 272, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 613,
	0, 1912, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 614, 615, 0, 287, 616, 288, 617,
	0, 618, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 619, 620, 621, 0, 296, 297, 622, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 623, 624, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 625, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 626, 627, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	628, 0, 0, 0, 363, 0, 364, 0, 0, 0,
	365, 366, 629, 630, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 631, 0, 632, 377, 0,
	378, 379, 380, 381, 382, 633, 634, 635, 459, 0,
	383, 384, 0, 385, 386, 387, 388, 0, 0, 0,
	0, 389, 390, 391, 393, 0, 0, 392, 636, 637,
	0, 638, 0, 394, 395, 0, 639, 0, 396, 397,
	398, 0, 399, 0, 0, 0, 400, 401, 402, 403,
	404, 405, 0, 406, 408, 407, 0, 409, 640, 0,
	410, 411, 0, 0, 412, 0, 0, 0, 413, 414,
	417, 0, 0, 415, 416, 418, 419, 0, 420, 421,
	423, 426, 422, 424, 425, 427, 440, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 442,
	0, 441, 0, 443, 444, 445, 450, 452, 453, 448,
	449, 451, 454, 455, 447, 0, 446, 0, 0, 0,
	456, 457, 0, 641, 458, 642, 460, 461, 0, 0,
	462, 0, 0, 0, 464, 465, 466, 0, 0, 467,
	468, 643, 0, 469, 0, 644, 470, 471, 463, 472,
	473, 474, 475, 476, 477, 478, 479, 0, 480, 481,
	645, 482, 483, 484, 646, 485, 486, 487, 647, 488,
	648, 489, 490, 0, 491, 492, 0, 493, 494, 495,
	496, 497, 498, 499, 649, 500, 502, 501, 503, 0,
	504, 0, 505, 506, 507, 0, 0, 0, 0, 508,
	0, 510, 511, 512, 513, 509, 514, 515, 516, 517,
	0, 518, 519, 520, 0, 521, 522, 523, 524, 650,
	525, 0, 526, 527, 533, 534, 528, 529, 535, 536,
	537, 538, 539, 0, 541, 542, 540, 543, 544, 545,
	0, 546, 547, 530, 531, 548, 549, 0, 550, 551,
	552, 553, 554, 555, 651, 0, 556, 0, 557, 558,
	559, 561, 532, 562, 567, 568, 652, 563, 564, 565,
	566, 653, 570, 571, 0, 572, 573, 0, 569, 560,
	0, 574, 575, 576, 577, 578, 579, 580, 353, 581,
	0, 582, 654, 655, 656, 657, 0, 591, 0, 583,
	584, 585, 658, 586, 659, 0, 587, 588, 589, 590,
	0, 592, 593, 0, 0, 594, 595, 596, 598, 599,
	597, 600, 0, 601, 0, 0, 602, 603, 604, 660,
	661, 662, 263, 606, 605, 607, 663, 0, 0, 0,
	0, 0, 608, 609, 664, 610, 611, 612, 0, 269,
	271, 270, 272, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 613, 0, 0, 0, 0,
	279, 280, 4662, 281, 282, 283, 284, 285, 286, 614,
	615, 0, 287, 616, 288, 617, 0, 618, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 619, 620,
	621, 0, 296, 297, 622, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 623, 624, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 625, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 626, 627, 359, 0, 266, 0, 0,
	0, 0, 0, 360, 361, 362, 628, 0, 0, 0,
	363, 0, 364, 0, 0, 0, 365, 366, 629, 630,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 631, 0, 632, 377, 0, 378, 379, 380, 381,
	382, 633, 634, 635, 459, 0, 383, 384, 0, 385,
	386, 387, 388, 0, 0, 0, 267, 389, 390, 391,
	393, 0, 0, 392, 636, 637, 0, 638, 0, 394,
	395, 0, 639, 0, 396, 397, 398, 0, 399, 0,
	0, 0, 400, 401, 402, 403, 404, 405, 0, 406,
	408, 407, 0, 409, 640, 0, 410, 411, 0, 0,
	412, 0, 0, 0, 413, 414, 417, 0, 0, 415,
	416, 418, 419, 0, 420, 421, 423, 426, 422, 424,
	425, 427, 440, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 442, 0, 441, 0, 443,
	444, 445, 450, 452, 453, 448, 449, 451, 454, 455,
	447, 0, 446, 0, 268, 0, 456, 457, 0, 641,
	458, 642, 460, 461, 0, 0, 462, 0, 0, 0,
	464, 465, 466, 0, 0, 467, 468, 643, 0, 469,
	0, 644, 470, 471, 463, 472, 473, 474, 475, 476,
	477, 478, 479, 0, 480, 481, 645, 482, 483, 484,
	646, 485, 486, 487, 647, 488, 648, 489, 490, 0,
	491, 492, 0, 493, 494, 495, 496, 497, 498, 499,
	649, 500, 502, 501, 503, 0, 504, 0, 505, 506,
	507, 0, 0, 0, 0, 508, 0, 510, 511, 512,
	513, 509, 514, 515, 516, 517, 0, 518, 519, 520,
	0, 521, 522, 523, 524, 650, 525, 0, 526, 527,
	533, 534, 528, 529, 535, 536, 537, 538, 539, 0,
	541, 542, 540, 543, 544, 545, 0, 546, 547, 530,
	531, 548, 549, 0, 550, 551, 552, 553, 554, 555,
	651, 0, 556, 0, 557, 558, 559, 561, 532, 562,
	567, 568, 652, 563, 564, 565, 566, 653, 570, 571,
	0, 572, 573, 0, 569, 560, 0, 574, 575, 576,
	577, 578, 579, 580, 353, 581, 0, 582, 654, 655,
	656, 657, 0, 591, 0, 583, 584, 585, 658, 586,
	659, 0, 587, 588, 589, 590, 0, 592, 593, 0,
	0, 594, 595, 596, 598, 599, 597, 600, 0, 601,
	0, 0, 602, 603, 604, 660, 661, 662, 0, 606,
	605, 607, 663, 0, 263, 0, 0, 0, 608, 609,
	664, 610, 611, 612, 0, 0, 0, 0, 0, 0,
	0, 269, 271, 270, 272, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 3424, 613, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 614, 615, 0, 287, 616, 288, 617, 0, 618,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	619, 620, 621, 0, 296, 297, 622, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 623, 624, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 625, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 626, 627, 359, 0, 266,
	0, 0, 0, 0, 0, 360, 361, 362, 628, 0,
	0, 0, 363, 0, 364, 0, 0, 0, 365, 366,
	629, 630, 367, 368, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 631, 0, 632, 377, 0, 378, 379,
	380, 381, 382, 633, 634, 635, 459, 0, 383, 384,
	0, 385, 386, 387, 388, 0, 0, 0, 267, 389,
	390, 391, 393, 0, 0, 392, 636, 637, 0, 638,
	0, 394, 395, 0, 639, 0, 396, 397, 398, 0,
	399, 0, 0, 0, 400, 401, 402, 403, 404, 405,
	0, 406, 408, 407, 0, 409, 640, 0, 410, 411,
	0, 0, 412, 0, 0, 0, 413, 414, 417, 0,
	0, 415, 416, 418, 419, 0, 420, 421, 423, 426,
	422, 424, 425, 427, 440, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 442, 0, 441,
	0, 443, 444, 445, 450, 452, 453, 448, 449, 451,
	454, 455, 447, 0, 446, 0, 268, 0, 456, 457,
	0, 641, 458, 642, 460, 461, 0, 0, 462, 0,
	0, 0, 464, 465, 466, 0, 0, 467, 468, 643,
	0, 469, 0, 644, 470, 471, 463, 472, 473, 474,
	475, 476, 477, 478, 479, 0, 480, 481, 645, 482,
	483, 484, 646, 485, 486, 487, 647, 488, 648, 489,
	490, 0, 491, 492, 0, 493, 494, 495, 496, 497,
	498, 499, 649, 500, 502, 501, 503, 0, 504, 0,
	505, 506, 507, 0, 0, 0, 0, 508, 0, 510,
	511, 512, 513, 509, 514, 515, 516, 517, 0, 518,
	519, 520, 0, 521, 522, 523, 524, 650, 525, 0,
	526, 527, 533, 534, 528, 529, 535, 536, 537, 538,
	539, 0, 541, 542, 540, 543, 544, 545, 0, 546,
	547, 530, 531, 548, 549, 0, 550, 551, 552, 553,
	554, 555, 651, 0, 556, 0, 557, 558, 559, 561,
	532, 562, 567, 568, 652, 563, 564, 565, 566, 653,
	570, 571, 0, 572, 573, 0, 569, 560, 0, 574,
	575, 576, 577, 578, 579, 580, 353, 581, 0, 582,
	654, 655, 656, 657, 0, 591, 0, 583, 584, 585,
	658, 586, 659, 0, 587, 588, 589, 590, 0, 592,
	593, 0, 0, 594, 595, 596, 598, 599, 597, 600,
	0, 601, 0, 0, 602, 603, 604, 660, 661, 662,
	0, 606, 605, 607, 663, 0, 263, 0, 0, 0,
	608, 609, 664, 610, 611, 612, 0, 0, 0, 0,
	0, 0, 0, 269, 271, 270, 272, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 1556, 613,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 614, 615, 0, 287, 616, 288, 617,
	0, 618, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 619, 620, 621, 0, 296, 297, 622, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 623, 624, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 625, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 626, 627, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	628, 0, 0, 0, 363, 0, 364, 0, 0, 0,
	365, 366, 629, 630, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 631, 0, 632, 377, 0,
	378, 379, 380, 381, 382, 633, 634, 635, 459, 0,
	383, 384, 0, 385, 386, 387, 388, 0, 0, 0,
	0, 389, 390, 391, 393, 0, 0, 392, 636, 637,
	0, 638, 0, 394, 395, 0, 639, 0, 396, 397,
	398, 0, 399, 0, 0, 0, 400, 401, 402, 403,
	404, 405, 0, 406, 408, 407, 0, 409, 640, 0,
	410, 411, 0, 0, 412, 0, 0, 0, 413, 414,
	417, 0, 0, 415, 416, 418, 419, 0, 420, 421,
	423, 426, 422, 424, 425, 427, 440, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 442,
	0, 441, 0, 443, 444, 445, 450, 452, 453, 448,
	449, 451, 454, 455, 447, 0, 446, 0, 0, 0,
	456, 457, 0, 641, 458, 642, 460, 461, 0, 0,
	462, 0, 0, 0, 464, 465, 466, 0, 0, 467,
	468, 643, 0, 469, 0, 644, 470, 471, 463, 472,
	473, 474, 475, 476, 477, 478, 479, 0, 480, 481,
	645, 482, 483, 484, 646, 485, 486, 487, 647, 488,
	648, 489, 490, 0, 491, 492, 0, 493, 494, 495,
	496, 497, 498, 499, 649, 500, 502, 501, 503, 0,
	504, 0, 505, 506, 507, 0, 0, 0, 0, 508,
	0, 510, 511, 512, 513, 509, 514, 515, 516, 517,
	0, 518, 519, 520, 0, 521, 522, 523, 524, 650,
	525, 0, 526, 527, 533, 534, 528, 529, 535, 536,
	537, 538, 539, 0, 541, 542, 540, 543, 544, 545,
	0, 546, 547, 530, 531, 548, 549, 0, 550, 551,
	552, 553, 554, 555, 651, 0, 556, 0, 557, 558,
	559, 561, 532, 562, 567, 568, 652, 563, 564, 565,
	566, 653, 570, 571, 0, 572, 573, 0, 569, 560,
	0, 574, 575, 576, 577, 578, 579, 580, 353, 581,
	0, 582, 654, 655, 656, 657, 0, 591, 0, 583,
	584, 585, 658, 586, 659, 0, 587, 588, 589, 590,
	0, 592, 593, 0, 0, 594, 595, 596, 598, 599,
	597, 600, 0, 601, 0, 0, 602, 603, 604, 660,
	661, 662, 263, 606, 605, 607, 663, 0, 0, 0,
	0, 0, 608, 609, 664, 610, 611, 612, 0, 269,
	271, 270, 272, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 613, 0, 0, 0, 0,
	279, 280, 2909, 281, 282, 283, 284, 285, 286, 614,
	615, 0, 287, 616, 288, 617, 0, 618, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 619, 620,
	621, 0, 296, 297, 622, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 623, 624, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 625, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 626, 627, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 628, 0, 0, 0,
	363, 0, 364, 0, 0, 0, 365, 366, 629, 630,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 631, 0, 632, 377, 0, 378, 379, 380, 381,
	382, 633, 634, 635, 459, 0, 383, 384, 0, 385,
	386, 387, 388, 0, 0, 0, 0, 389, 390, 391,
	393, 0, 0, 392, 636, 637, 0, 638, 0, 394,
	395, 0, 639, 0, 396, 397, 398, 0, 399, 0,
	0, 0, 400, 401, 402, 403, 404, 405, 0, 406,
	408, 407, 0, 409, 640, 0, 410, 411, 0, 0,
	412, 0, 0, 0, 413, 414, 417, 0, 0, 415,
	416, 418, 419, 0, 420, 421, 423, 426, 422, 424,
	425, 427, 440, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 442, 0, 441, 0, 443,
	444, 445, 450, 452, 453, 448, 449, 451, 454, 455,
	447, 0, 446, 0, 0, 0, 456, 457, 0, 641,
	458, 642, 460, 461, 0, 0, 462, 0, 0, 0,
	464, 465, 466, 0, 0, 467, 468, 643, 0, 469,
	0, 644, 470, 471, 463, 472, 473, 474, 475, 476,
	477, 478, 479, 0, 480, 481, 645, 482, 483, 484,
	646, 485, 486, 487, 647, 488, 648, 489, 490, 0,
	491, 492, 0, 493, 494, 495, 496, 497, 498, 499,
	649, 500, 502, 501, 503, 0, 504, 0, 505, 506,
	507, 0, 0, 0, 0, 508, 0, 510, 511, 512,
	513, 509, 514, 515, 516, 517, 0, 518, 519, 520,
	0, 521, 522, 523, 524, 650, 525, 0, 526, 527,
	533, 534, 528, 529, 535, 536, 537, 538, 539, 0,
	541, 542, 540, 543, 544, 545, 0, 546, 547, 530,
	531, 548, 549, 0, 550, 551, 552, 553, 554, 555,
	651, 0, 556, 0, 557, 558, 559, 561, 532, 562,
	567, 568, 652, 563, 564, 565, 566, 653, 570, 571,
	0, 572, 573, 0, 569, 560, 0, 574, 575, 576,
	577, 578, 579, 580, 353, 581, 0, 582, 654, 655,
	656, 657, 0, 591, 0, 583, 584, 585, 658, 586,
	659, 0, 587, 588, 589, 590, 0, 592, 593, 0,
	0, 594, 595, 596, 598, 599, 597, 600, 0, 601,
	0, 0, 602, 603, 604, 660, 661, 662, 263, 606,
	605, 607, 663, 0, 0, 0, 0, 0, 608, 609,
	664, 610, 611, 612, 0, 269, 271, 270, 272, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 613, 0, 0, 0, 0, 279, 280, 3580, 281,
	282, 283, 284, 285, 286, 614, 615, 0, 287, 616,
	288, 617, 0, 618, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 619, 620, 621, 0, 296, 297,
	622, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 623,
	624, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 625, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 626,
	627, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 628, 0, 0, 0, 363, 0, 364, 0,
	0, 0, 365, 366, 629, 630, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 631, 0, 632,
	377, 0, 378, 379, 380, 381, 382, 633, 634, 635,
	459, 0, 383, 384, 0, 385, 386, 387, 388, 0,
	0, 0, 0, 389, 390, 391, 393, 0, 0, 392,
	636, 637, 0, 638, 0, 394, 395, 0, 639, 0,
	396, 397, 398, 0, 399, 0, 0, 0, 400, 401,
	402, 403, 404, 405, 0, 406, 408, 407, 0, 409,
	640, 0, 410, 411, 0, 0, 412, 0, 0, 0,
	413, 414, 417, 0, 0, 415, 416, 418, 419, 0,
	420, 421, 423, 426, 422, 424, 425, 427, 440, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 442, 0, 441, 0, 443, 444, 445, 450, 452,
	453, 448, 449, 451, 454, 455, 447, 0, 446, 0,
	0, 0, 456, 457, 0, 641, 458, 642, 460, 461,
	0, 0, 462, 0, 0, 0, 464, 465, 466, 0,
	0, 467, 468, 643, 0, 469, 0, 644, 470, 471,
	463, 472, 473, 474, 475, 476, 477, 478, 479, 0,
	480, 481, 645, 482, 483, 484, 646, 485, 486, 487,
	647, 488, 648, 489, 490, 0, 491, 492, 0, 493,
	494, 495, 496, 497, 498, 499, 649, 500, 502, 501,
	503, 0, 504, 0, 505, 506, 507, 0, 0, 0,
	0, 508, 0, 510, 511, 512, 513, 509, 514, 515,
	516, 517, 0, 518, 519, 520, 0, 521, 522, 523,
	524, 650, 525, 0, 526, 527, 533, 534, 528, 529,
	535, 536, 537, 538, 539, 0, 541, 542, 540, 543,
	544, 545, 0, 546, 547, 530, 531, 548, 549, 0,
	550, 551, 552, 553, 554, 555, 651, 0, 556, 0,
	557, 558, 559, 561, 532, 562, 567, 568, 652, 563,
	564, 565, 566, 653, 570, 571, 0, 572, 573, 0,
	569, 560, 0, 574, 575, 576, 577, 578, 579, 580,
	353, 581, 0, 582, 654, 655, 656, 657, 0, 591,
	0, 583, 584, 585, 658, 586, 659, 0, 587, 588,
	589, 590, 0, 592, 593, 0, 0, 594, 595, 596,
	598, 599, 597, 600, 0, 601, 0, 0, 602, 603,
	604, 660, 661, 662, 0, 606, 605, 607, 663, 0,
	876, 0, 783, 0, 608, 609, 664, 610, 611, 612,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	271, 270, 272, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 2226, 613, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 614,
	615, 0, 287, 616, 288, 617, 0, 618, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 619, 620,
	621, 0, 296, 297, 622, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 790,
	327, 0, 328, 623, 624, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 625, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 626, 627, 359, 0, 266, 0, 0,
	0, 0, 0, 360, 361, 362, 628, 0, 0, 0,
	363, 0, 364, 0, 874, 0, 365, 366, 629, 630,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 631, 0, 632, 377, 0, 378, 379, 380, 381,
	382, 633, 634, 635, 459, 0, 383, 384, 0, 385,
	386, 387, 388, 0, 0, 0, 267, 389, 390, 391,
	393, 0, 0, 392, 636, 637, 0, 638, 0, 394,
	395, 0, 639, 0, 396, 397, 398, 0, 399, 0,
	0, 0, 400, 401, 402, 403, 404, 405, 0, 406,
	408, 407, 0, 409, 640, 0, 410, 411, 0, 0,
	412, 0, 0, 0, 413, 414, 417, 0, 0, 415,
	416, 418, 419, 0, 420, 421, 423, 426, 422, 424,
	425, 427, 440, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 442, 0, 441, 0, 443,
	444, 445, 450, 452, 453, 448, 449, 451, 454, 455,
	447, 0, 446, 0, 268, 0, 456, 457, 0, 641,
	458, 642, 460, 461, 0, 0, 462, 0, 0, 0,
	464, 465, 466, 0, 0, 467, 468, 643, 0, 469,
	0, 644, 470, 471, 463, 472, 473, 474, 475, 476,
	477, 478, 479, 0, 480, 481, 645, 482, 483, 484,
	646, 485, 486, 487, 647, 488, 648, 489, 490, 0,
	491, 492, 0, 493, 494, 495, 496, 497, 498, 499,
	649, 500, 502, 501, 503, 0, 504, 0, 505, 506,
	507, 0, 0, 0, 0, 508, 0, 510, 511, 512,
	513, 509, 514, 515, 516, 517, 0, 518, 519, 520,
	0, 521, 522, 523, 524, 650, 525, 0, 526, 527,
	533, 534, 528, 529, 535, 536, 537, 538, 539, 0,
	541, 542, 540, 543, 544, 545, 0, 546, 547, 530,
	531, 548, 549, 0, 550, 551, 552, 553, 554, 555,
	651, 0, 556, 0, 557, 558, 559, 561, 532, 562,
	567, 568, 652, 563, 564, 565, 566, 653, 570, 571,
	0, 572, 573, 0, 569, 560, 788, 574, 575, 576,
	577, 578, 789, 580, 353, 581, 0, 582, 654, 655,
	656, 657, 0, 591, 0, 583, 584, 585, 658, 586,
	659, 0, 587, 588, 589, 590, 0, 592, 593, 0,
	0, 594, 595, 596, 598, 599, 597, 600, 0, 601,
	0, 0, 602, 603, 604, 660, 661, 662, 0, 606,
	605, 607, 663, 0, 781, 0, 783, 0, 608, 609,
	664, 610, 611, 612, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 271, 270, 272, 273, 274, 275,
	276, 793, 277, 278, 0, 0, 0, 0, 0, 613,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 614, 615, 0, 287, 616, 288, 617,
	0, 618, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 619, 620, 621, 0, 296, 297, 622, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 790, 327, 0, 328, 623, 624, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 625, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 626, 627, 359,
	0, 266, 0, 0, 0, 0, 0, 360, 361, 362,
	628, 0, 0, 0, 363, 0, 364, 0, 0, 0,
	365, 366, 629, 630, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 631, 0, 632, 377, 0,
	378, 379, 380, 381, 382, 633, 634, 635, 459, 0,
	383, 384, 0, 385, 386, 387, 388, 0, 0, 0,
	267, 389, 390, 391, 393, 0, 0, 392, 636, 637,
	0, 638, 0, 394, 395, 0, 639, 0, 396, 397,
	398, 0, 399, 0, 0, 0, 400, 401, 402, 403,
	404, 405, 0, 406, 408, 407, 0, 409, 640, 0,
	410, 411, 0, 0, 412, 0, 0, 0, 413, 414,
	417, 0, 0, 415, 416, 418, 419, 0, 420, 421,
	423, 426, 422, 424, 425, 427, 440, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 442,
	0, 441, 0, 443, 444, 445, 450, 452, 453, 448,
	449, 451, 454, 455, 447, 0, 446, 0, 268, 0,
	456, 457, 0, 641, 458, 642, 460, 461, 0, 0,
	462, 0, 0, 0, 464, 465, 466, 0, 0, 467,
	468, 643, 0, 469, 0, 644, 470, 471, 463, 472,
	473, 474, 475, 476, 477, 478, 479, 0, 480, 481,
	645, 482, 483, 484, 646, 485, 486, 487, 647, 488,
	648, 489, 490, 0, 491, 492, 0, 493, 494, 495,
	496, 497, 498, 499, 649, 500, 502, 501, 503, 0,
	504, 0, 505, 506, 507, 0, 0, 0, 0, 508,
	0, 510, 511, 512, 513, 509, 514, 515, 516, 517,
	0, 518, 519, 520, 0, 521, 522, 523, 524, 650,
	525, 0, 526, 527, 533, 534, 528, 529, 535, 536,
	537, 538, 539, 0, 541, 542, 540, 543, 544, 545,
	0, 546, 547, 530, 531, 548, 549, 0, 550, 551,
	552, 553, 554, 555, 651, 0, 556, 0, 557, 558,
	559, 561, 532, 562, 567, 568, 652, 563, 564, 565,
	566, 653, 570, 571, 0, 572, 573, 0, 569, 560,
	788, 574, 575, 576, 577, 578, 789, 580, 353, 581,
	0, 582, 654, 655, 656, 657, 0, 591, 0, 583,
	584, 585, 658, 586, 659, 0, 587, 588, 589, 590,
	0, 592, 593, 0, 0, 594, 595, 596, 598, 599,
	597, 600, 0, 601, 0, 0, 602, 603, 604, 660,
	661, 662, 1949, 606, 605, 607, 663, 0, 0, 0,
	0, 0, 608, 609, 664, 610, 611, 612, 0, 269,
	271, 270, 272, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 793, 0, 0, 0, 0,
	279, 280, 1151, 281, 282, 283, 284, 285, 286, 0,
	1955, 0, 287, 1945, 288, 1961, 0, 1968, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 1971, 1972,
	0, 0, 296, 297, 0, 0, 1294, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1152, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 1134, 328, 1959, 1958, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	1119, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 0, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 1957, 0, 0, 0,
	363, 0, 364, 0, 0, 1153, 365, 366, 1966, 1967,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 0, 0, 0, 377, 0, 378, 379, 380, 381,
	382, 0, 0, 0, 459, 1155, 383, 384, 0, 385,
	386, 387, 388, 0, 0, 0, 0, 389, 390, 391,
	393, 0, 1154, 392, 1952, 1953, 0, 1948, 0, 394,
	395, 1156, 0, 1157, 396, 397, 398, 1158, 399, 0,
	0, 0, 400, 401, 402, 403, 404, 405, 0, 406,
	408, 407, 0, 409, 0, 1159, 410, 411, 1160, 0,
	412, 0, 0, 0, 413, 414, 417, 0, 0, 415,
	416, 418, 419, 0, 420, 421, 423, 426, 422, 424,
	425, 427, 440, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 442, 0, 441, 1161, 443,
	444, 445, 450, 452, 453, 448, 449, 451, 454, 455,
	447, 1162, 446, 0, 0, 1163, 456, 457, 0, 0,
	458, 1960, 460, 461, 0, 0, 462, 0, 0, 0,
	464, 465, 466, 0, 0, 467, 468, 0, 1164, 469,
	1165, 0, 470, 471, 463, 472, 473, 474, 475, 476,
	477, 478, 479, 0, 480, 481, 1942, 482, 483, 484,
	1943, 485, 486, 487, 0, 488, 0, 489, 490, 0,
	491, 492, 0, 493, 494, 495, 496, 497, 498, 499,
	1956, 500, 502, 501, 503, 0, 504, 0, 505, 506,
	507, 0, 0, 0, 0, 508, 0, 510, 511, 512,
	513, 509, 514, 515, 516, 517, 0, 518, 519, 520,
	1166, 521, 522, 523, 524, 0, 525, 0, 526, 527,
	533, 534, 528, 529, 535, 536, 537, 538, 539, 0,
	541, 542, 540, 543, 544, 545, 0, 546, 547, 530,
	531, 548, 549, 1167, 550, 551, 552, 553, 554, 555,
	1954, 0, 556, 0, 557, 558, 559, 561, 532, 562,
	567, 568, 1970, 563, 564, 565, 566, 0, 570, 571,
	0, 572, 573, 0, 569, 560, 0, 574, 575, 576,
	577, 578, 579, 580, 353, 581, 0, 582, 1962, 1963,
	1964, 1965, 0, 591, 0, 583, 584, 585, 0, 586,
	0, 0, 587, 588, 589, 590, 0, 592, 593, 0,
	0, 594, 595, 596, 598, 599, 597, 600, 0, 601,
	0, 0, 602, 603, 604, 0, 1946, 1969, 0, 606,
	605, 607, 783, 0, 0, 0, 0, 0, 608, 609,
	0, 610, 611, 612, 0, 0, 0, 0, 0, 269,
	271, 270, 272, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 613, 0, 0, 0, 0,
	279, 280, 1936, 281, 282, 283, 284, 285, 286, 614,
	615, 0, 287, 616, 288, 617, 0, 618, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 619, 620,
	621, 0, 296, 297, 622, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 790,
	327, 0, 328, 623, 624, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 625, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 626, 627, 359, 0, 266, 0, 0,
	0, 0, 0, 360, 361, 362, 628, 0, 0, 0,
	363, 0, 364, 0, 0, 0, 365, 366, 629, 630,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 631, 0, 632, 377, 0, 378, 379, 380, 381,
	382, 633, 634, 635, 459, 0, 383, 384, 0, 385,
	386, 387, 388, 0, 0, 0, 267, 389, 390, 391,
	393, 0, 0, 392, 636, 637, 0, 638, 0, 394,
	395, 0, 639, 0, 396, 397, 398, 0, 399, 0,
	0, 0, 400, 401, 402, 403, 404, 405, 0, 406,
	408, 407, 0, 409, 640, 0, 410, 411, 0, 0,
	412, 0, 0, 0, 413, 414, 417, 0, 0, 415,
	416, 418, 419, 0, 420, 421, 423, 426, 422, 424,
	425, 427, 440, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 442, 0, 441, 0, 443,
	444, 445, 450, 452, 453, 448, 449, 451, 454, 455,
	447, 0, 446, 0, 268, 0, 456, 457, 0, 641,
	458, 642, 460, 461, 0, 0, 462, 0, 0, 0,
	464, 465, 466, 0, 0, 467, 468, 643, 0, 469,
	0, 644, 470, 471, 463, 472, 473, 474, 475, 476,
	477, 478, 479, 0, 480, 481, 645, 482, 483, 484,
	646, 485, 486, 487, 647, 488, 648, 489, 490, 0,
	491, 492, 0, 493, 494, 495, 496, 497, 498, 499,
	649, 500, 502, 501, 503, 0, 504, 0, 505, 506,
	507, 0, 0, 0, 0, 508, 0, 510, 511, 512,
	513, 509, 514, 515, 516, 517, 0, 518, 519, 520,
	0, 521, 522, 523, 524, 650, 525, 0, 526, 527,
	533, 534, 528, 529, 535, 536, 537, 538, 539, 0,
	541, 542, 540, 543, 544, 545, 0, 546, 547, 530,
	531, 548, 549, 0, 550, 551, 552, 553, 554, 555,
	651, 0, 556, 0, 557, 558, 559, 561, 532, 562,
	567, 568, 652, 563, 564, 565, 566, 653, 570, 571,
	0, 572, 573, 0, 569, 560, 788, 574, 575, 576,
	577, 578, 789, 580, 353, 581, 0, 582, 654, 655,
	656, 657, 0, 591, 0, 583, 584, 585, 658, 586,
	659, 0, 587, 588, 589, 590, 0, 592, 593, 0,
	0, 594, 595, 596, 598, 599, 597, 600, 0, 601,
	0, 0, 602, 603, 604, 660, 661, 662, 0, 606,
	605, 607, 663, 783, 0, 0, 0, 0, 608, 609,
	664, 610, 611, 612, 0, 0, 0, 0, 0, 0,
	269, 271, 270, 272, 273, 274, 275, 276, 0, 277,
	278, 793, 0, 0, 0, 0, 613, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	614, 615, 0, 287, 616, 288, 617, 0, 618, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 619,
	620, 621, 0, 296, 297, 622, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	790, 327, 0, 328, 623, 624, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 625, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 626, 627, 359, 0, 266, 0,
	0, 0, 0, 0, 360, 361, 362, 628, 0, 0,
	0, 363, 0, 364, 0, 0, 0, 365, 366, 629,
	630, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 631, 0, 632, 377, 0, 378, 379, 380,
	381, 382, 633, 634, 635, 459, 0, 383, 384, 0,
	385, 386, 387, 388, 0, 0, 0, 267, 389, 390,
	391, 393, 0, 0, 392, 636, 637, 0, 638, 0,
	394, 395, 0, 639, 0, 396, 397, 398, 0, 399,
	0, 0, 0, 400, 401, 402, 403, 404, 405, 0,
	406, 408, 407, 0, 409, 640, 0, 410, 411, 0,
	0, 412, 0, 0, 0, 413, 414, 417, 0, 0,
	415, 416, 418, 419, 0, 420, 421, 423, 426, 422,
	424, 425, 427, 440, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 442, 0, 441, 0,
	443, 444, 445, 450, 452, 453, 448, 449, 451, 454,
	455, 447, 0, 446, 0, 268, 0, 456, 457, 0,
	641, 458, 642, 460, 461, 0, 0, 462, 0, 0,
	0, 464, 465, 466, 0, 0, 467, 468, 643, 0,
	469, 0, 644, 470, 471, 463, 472, 473, 474, 475,
	476, 477, 478, 479, 0, 480, 481, 645, 482, 483,
	484, 646, 485, 486, 487, 647, 488, 648, 489, 490,
	0, 491, 492, 0, 493, 494, 495, 496, 497, 498,
	499, 649, 500, 502, 501, 503, 0, 504, 0, 505,
	506, 507, 0, 0, 0, 0, 508, 0, 510, 511,
	512, 513, 509, 514, 515, 516, 517, 0, 518, 519,
	520, 0, 2269, 522, 523, 524, 650, 525, 0, 526,
	527, 533, 534, 528, 529, 2270, 536, 537, 538, 539,
	0, 541, 542, 540, 543, 544, 545, 0, 546, 547,
	530, 531, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 651, 0, 556, 0, 557, 558, 559, 561, 532,
	562, 567, 568, 652, 563, 564, 565, 566, 653, 570,
	571, 0, 572, 573, 0, 569, 560, 788, 574, 575,
	576, 577, 578, 789, 580, 353, 581, 0, 582, 654,
	655, 656, 657, 0, 591, 0, 583, 584, 585, 658,
	586, 659, 0, 587, 588, 2271, 590, 0, 592, 593,
	0, 0, 594, 595, 596, 598, 599, 597, 600, 0,
	601, 0, 0, 602, 603, 604, 660, 661, 662, 0,
	606, 605, 607, 663, 0, 2018, 0, 1289, 1985, 608,
	609, 664, 610, 611, 612, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 271, 270, 272, 273, 274,
	275, 276, 793, 277, 278, 0, 0, 0, 0, 0,
	613, 0, 0, 0, 0, 279, 280, 1151, 281, 282,
	283, 284, 285, 286, 614, 615, 0, 287, 616, 288,
	617, 0, 618, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 619, 620, 621, 0, 296, 297, 622,
	0, 1294, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1152, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	1982, 323, 324, 325, 326, 327, 0, 328, 623, 624,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 625, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 626, 627,
	359, 0, 266, 0, 0, 0, 0, 0, 360, 361,
	362, 628, 0, 0, 0, 363, 0, 364, 0, 0,
	1153, 365, 366, 629, 630, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 631, 0, 632, 377,
	0, 378, 379, 380, 381, 382, 633, 634, 635, 459,
	1155, 383, 384, 0, 385, 386, 387, 388, 0, 0,
	0, 0, 389, 390, 391, 393, 0, 1154, 392, 636,
	637, 0, 638, 0, 394, 395, 1156, 639, 1157, 396,
	397, 398, 1158, 399, 0, 0, 0, 400, 401, 402,
	403, 404, 405, 0, 406, 408, 407, 0, 409, 640,
	1159, 410, 411, 1160, 0, 412, 0, 0, 0, 413,
	414, 417, 0, 0, 415, 416, 418, 419, 0, 420,
	421, 423, 426, 422, 424, 425, 427, 440, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	442, 0, 441, 1161, 443, 444, 445, 450, 452, 453,
	448, 449, 451, 454, 455, 447, 1162, 446, 0, 0,
	1163, 456, 457, 0, 641, 458, 642, 460, 461, 0,
	0, 462, 0, 0, 0, 464, 465, 466, 0, 0,
	467, 468, 643, 1164, 469, 1165, 644, 470, 471, 463,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 480,
	481, 645, 482, 483, 484, 646, 485, 486, 487, 647,
	488, 648, 489, 490, 0, 491, 492, 0, 493, 494,
	495, 496, 497, 498, 499, 649, 500, 502, 501, 503,
	0, 504, 0, 505, 506, 507, 0, 0, 0, 0,
	508, 0, 510, 511, 512, 513, 509, 514, 515, 516,
	517, 0, 518, 519, 520, 1166, 521, 522, 523, 524,
	650, 525, 0, 526, 527, 533, 534, 528, 529, 535,
	536, 537, 538, 539, 0, 541, 542, 540, 543, 544,
	545, 1983, 546, 547, 530, 531, 548, 549, 1167, 550,
	551, 552, 553, 554, 555, 651, 0, 556, 0, 557,
	558, 559, 561, 532, 562, 567, 568, 652, 563, 564,
	565, 566, 653, 570, 571, 0, 572, 573, 0, 569,
	560, 0, 574, 575, 576, 577, 578, 579, 580, 353,
	581, 0, 582, 654, 655, 656, 657, 0, 591, 0,
	583, 584, 585, 658, 586, 659, 0, 587, 588, 589,
	590, 0, 592, 593, 0, 0, 594, 595, 596, 598,
	599, 597, 600, 0, 601, 0, 0, 602, 603, 604,
	660, 661, 662, 0, 606, 605, 607, 663, 1979, 0,
	1289, 1985, 0, 608, 609, 664, 610, 611, 612, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 613, 0, 0, 0, 0, 279, 280,
	1151, 281, 282, 283, 284, 285, 286, 614, 615, 0,
	287, 616, 288, 617, 0, 618, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 619, 620, 621, 0,
	296, 297, 622, 0, 1294, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1152, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 1982, 323, 324, 325, 326, 327, 0,
	328, 623, 624, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	625, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 626, 627, 359, 0, 266, 0, 0, 0, 0,
	0, 360, 361, 362, 628, 0, 0, 0, 363, 0,
	364, 0, 0, 1153, 365, 366, 629, 630, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 631,
	0, 632, 377, 0, 378, 379, 380, 381, 382, 633,
	634, 635, 459, 1155, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 0, 389, 390, 391, 393, 0,
	1154, 392, 636, 637, 0, 638, 0, 394, 395, 1156,
	639, 1157, 396, 397, 398, 1158, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 640, 1159, 410, 411, 1160, 0, 412, 0,
	0, 0, 413, 414, 417, 0, 0, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 1161, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 1162,
	446, 0, 0, 1163, 456, 457, 0, 641, 458, 642,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 1164, 469, 1165, 644,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 647, 488, 648, 489, 490, 0, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 649, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 1166, 521,
	522, 523, 524, 650, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 0, 541, 542,
	540, 543, 544, 545, 1983, 546, 547, 530, 531, 548,
	549, 1167, 550, 551, 552, 553, 554, 555, 651, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	652, 563, 564, 565, 566, 653, 570, 571, 0, 572,
	573, 0, 569, 560, 0, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 654, 655, 656, 657,
	0, 591, 0, 583, 584, 585, 658, 586, 659, 0,
	587, 588, 589, 590, 0, 592, 593, 0, 0, 594,
	595, 596, 598, 599, 597, 600, 0, 601, 0, 0,
	602, 603, 604, 660, 661, 662, 783, 606, 605, 607,
	663, 0, 0, 0, 0, 0, 608, 609, 664, 610,
	611, 612, 0, 269, 271, 270, 272, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 613,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 614, 615, 0, 287, 616, 288, 617,
	0, 618, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 619, 620, 621, 0, 296, 297, 622, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 790, 327, 0, 328, 623, 624, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 625, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 626, 627, 359,
	0, 266, 0, 0, 0, 0, 0, 360, 361, 362,
	628, 0, 0, 0, 363, 0, 364, 0, 0, 0,
	365, 366, 629, 630, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 631, 0, 632, 377, 0,
	378, 379, 380, 381, 382, 633, 634, 635, 459, 0,
	383, 384, 0, 385, 386, 387, 388, 0, 0, 0,
	267, 389, 390, 391, 393, 0, 0, 392, 636, 637,
	0, 638, 0, 394, 395, 0, 639, 0, 396, 397,
	398, 0, 399, 0, 0, 0, 400, 401, 402, 403,
	404, 405, 0, 406, 408, 407, 0, 409, 640, 0,
	410, 411, 0, 0, 412, 0, 0, 0, 413, 414,
	417, 0, 0, 415, 416, 418, 419, 0, 420, 421,
	423, 426, 422, 424, 425, 427, 440, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 442,
	0, 441, 0, 443, 444, 445, 450, 452, 453, 448,
	449, 451, 454, 455, 447, 0, 446, 0, 268, 0,
	456, 457, 0, 641, 458, 642, 460, 461, 0, 0,
	462, 0, 0, 0, 464, 465, 466, 0, 0, 467,
	468, 643, 0, 469, 0, 644, 470, 471, 463, 472,
	473, 474, 475, 476, 477, 478, 479, 0, 480, 481,
	645, 482, 483, 484, 646, 485, 486, 487, 647, 488,
	648, 489, 490, 0, 491, 492, 0, 493, 494, 495,
	496, 497, 498, 499, 649, 500, 502, 501, 503, 0,
	504, 0, 505, 506, 507, 0, 0, 0, 0, 508,
	0, 510, 511, 512, 513, 509, 514, 515, 516, 517,
	0, 518, 519, 520, 0, 521, 522, 523, 524, 650,
	525, 0, 526, 527, 533, 534, 528, 529, 1975, 536,
	537, 538, 539, 0, 541, 542, 540, 543, 544, 545,
	0, 546, 547, 530, 531, 548, 549, 0, 550, 551,
	552, 553, 554, 555, 651, 0, 556, 0, 557, 558,
	559, 561, 532, 562, 567, 568, 652, 563, 564, 565,
	566, 653, 570, 571, 0, 572, 573, 0, 569, 560,
	788, 574, 575, 576, 577, 578, 789, 580, 353, 581,
	0, 582, 654, 655, 656, 657, 0, 591, 0, 583,
	584, 585, 658, 586, 659, 0, 587, 588, 1974, 590,
	0, 592, 593, 0, 0, 594, 595, 596, 598, 599,
	597, 600, 0, 601, 0, 0, 602, 603, 604, 660,
	661, 662, 0, 606, 605, 607, 663, 783, 0, 0,
	0, 0, 608, 609, 664, 610, 611, 612, 0, 0,
	0, 0, 0, 0, 269, 271, 270, 272, 273, 274,
	275, 276, 0, 277, 278, 793, 0, 0, 0, 0,
	613, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 614, 615, 0, 287, 616, 288,
	617, 0, 618, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 619, 620, 621, 0, 296, 297, 622,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 790, 327, 0, 328, 623, 624,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 625, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 626, 627,
	359, 0, 266, 0, 0, 0, 0, 0, 360, 361,
	362, 628, 0, 0, 0, 363, 0, 364, 0, 0,
	0, 365, 366, 629, 630, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 631, 0, 632, 377,
	0, 378, 379, 380, 381, 382, 633, 634, 635, 459,
	0, 383, 384, 0, 385, 386, 387, 388, 0, 0,
	0, 267, 389, 390, 391, 393, 0, 0, 392, 636,
	637, 0, 638, 0, 394, 395, 0, 639, 0, 396,
	397, 398, 0, 399, 0, 0, 0, 400, 401, 402,
	403, 404, 405, 0, 406, 408, 407, 0, 409, 640,
	0, 410, 411, 0, 0, 412, 0, 0, 0, 413,
	414, 417, 0, 0, 415, 416, 418, 419, 0, 420,
	421, 423, 426, 422, 424, 425, 427, 440, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	442, 0, 441, 0, 443, 444, 445, 450, 452, 453,
	448, 449, 451, 454, 455, 447, 0, 446, 0, 268,
	0, 456, 457, 0, 641, 458, 642, 460, 461, 0,
	0, 462, 0, 0, 0, 464, 465, 466, 0, 0,
	467, 468, 643, 0, 469, 0, 644, 470, 471, 463,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 480,
	481, 645, 482, 483, 484, 646, 485, 486, 487, 647,
	488, 648, 489, 490, 0, 491, 492, 0, 493, 494,
	495, 496, 497, 498, 499, 649, 500, 502, 501, 503,
	0, 504, 0, 505, 506, 507, 0, 0, 0, 0,
	508, 0, 510, 511, 512, 513, 509, 514, 515, 516,
	517, 0, 518, 519, 520, 0, 521, 522, 523, 524,
	650, 525, 0, 526, 527, 533, 534, 528, 529, 1928,
	536, 537, 538, 539, 0, 541, 542, 540, 543, 544,
	545, 0, 546, 547, 530, 531, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 651, 0, 556, 0, 557,
	558, 559, 561, 532, 562, 567, 568, 652, 563, 564,
	565, 566, 653, 570, 571, 0, 572, 573, 0, 569,
	560, 788, 574, 575, 576, 577, 578, 789, 580, 353,
	581, 0, 582, 654, 655, 656, 657, 0, 591, 0,
	583, 584, 585, 658, 586, 659, 0, 587, 588, 1927,
	590, 0, 592, 593, 0, 0, 594, 595, 596, 598,
	599, 597, 600, 0, 601, 0, 0, 602, 603, 604,
	660, 661, 662, 0, 606, 605, 607, 663, 1289, 1985,
	0, 0, 0, 608, 609, 664, 610, 611, 612, 0,
	0, 0, 0, 0, 0, 269, 271, 270, 272, 273,
	274, 275, 276, 0, 277, 278, 793, 0, 0, 0,
	0, 613, 0, 0, 0, 0, 279, 280, 1151, 281,
	282, 283, 284, 285, 286, 614, 615, 0, 287, 616,
	288, 617, 0, 618, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 619, 620, 621, 0, 296, 297,
	622, 0, 1294, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1152, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 1982, 323, 324, 325, 326, 327, 0, 328, 623,
	624, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 625, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 626,
	627, 359, 0, 266, 0, 0, 0, 0, 0, 360,
	361, 362, 628, 0, 0, 0, 363, 0, 364, 0,
	0, 1153, 365, 366, 629, 630, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 631, 0, 632,
	377, 0, 378, 379, 380, 381, 382, 633, 634, 635,
	459, 1155, 383, 384, 0, 385, 386, 387, 388, 0,
	0, 0, 0, 389, 390, 391, 393, 0, 1154, 392,
	636, 637, 0, 638, 0, 394, 395, 1156, 639, 1157,
	396, 397, 398, 1158, 399, 0, 0, 0, 400, 401,
	402, 403, 404, 405, 0, 406, 408, 407, 0, 409,
	640, 1159, 410, 411, 1160, 0, 412, 0, 0, 0,
	413, 414, 417, 0, 0, 415, 416, 418, 419, 0,
	420, 421, 423, 426, 422, 424, 425, 427, 440, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 442, 0, 441, 1161, 443, 444, 445, 450, 452,
	453, 448, 449, 451, 454, 455, 447, 1162, 446, 0,
	0, 1163, 456, 457, 0, 641, 458, 642, 460, 461,
	0, 0, 462, 0, 0, 0, 464, 465, 466, 0,
	0, 467, 468, 643, 1164, 469, 1165, 644, 470, 471,
	463, 472, 473, 474, 475, 476, 477, 478, 479, 0,
	480, 481, 645, 482, 483, 484, 646, 485, 486, 487,
	647, 488, 648, 489, 490, 0, 491, 492, 0, 493,
	494, 495, 496, 497, 498, 499, 649, 500, 502, 501,
	503, 0, 504, 0, 505, 506, 507, 0, 0, 0,
	0, 508, 0, 510, 511, 512, 513, 509, 514, 515,
	516, 517, 0, 518, 519, 520, 1166, 521, 522, 523,
	524, 650, 525, 0, 526, 527, 533, 534, 528, 529,
	535, 536, 537, 538, 539, 0, 541, 542, 540, 543,
	544, 545, 1983, 546, 547, 530, 531, 548, 549, 1167,
	550, 551, 552, 553, 554, 555, 651, 0, 556, 0,
	557, 558, 559, 561, 532, 562, 567, 568, 652, 563,
	564, 565, 566, 653, 570, 571, 0, 572, 573, 0,
	569, 560, 0, 574, 575, 576, 577, 578, 579, 580,
	353, 581, 0, 582, 654, 655, 656, 657, 0, 591,
	0, 583, 584, 585, 658, 586, 659, 0, 587, 588,
	589, 590, 0, 592, 593, 0, 0, 594, 595, 596,
	598, 599, 597, 600, 0, 601, 0, 0, 602, 603,
	604, 660, 661, 662, 0, 606, 605, 607, 663, 0,
	0, 0, 0, 0, 608, 609, 664, 610, 611, 612,
	1289, 1288, 0, 0, 0, 0, 1286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 613, 0, 0, 0, 0, 279, 280,
	1151, 281, 282, 283, 284, 285, 286, 614, 615, 0,
	287, 616, 288, 617, 0, 618, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 619, 620, 621, 0,
	296, 297, 622, 0, 1294, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1152, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 623, 624, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	625, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 626, 627, 359, 0, 266, 0, 0, 0, 0,
	0, 360, 361, 362, 628, 0, 0, 0, 363, 0,
	364, 0, 0, 1153, 365, 366, 629, 630, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 631,
	0, 632, 377, 0, 378, 379, 380, 381, 382, 633,
	634, 635, 459, 1155, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 0, 389, 390, 391, 393, 0,
	1154, 392, 636, 637, 0, 638, 0, 394, 395, 1156,
	639, 1157, 396, 397, 398, 1158, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 640, 1159, 410, 411, 1160, 0, 412, 0,
	0, 0, 413, 414, 417, 0, 0, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 1161, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 1162,
	446, 0, 0, 1163, 456, 457, 3774, 641, 458, 642,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 1164, 469, 1165, 644,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 647, 488, 648, 489, 490, 0, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 649, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 1166, 521,
	522, 523, 524, 650, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 0, 541, 542,
	540, 543, 544, 545, 0, 546, 547, 530, 531, 548,
	549, 1167, 550, 551, 552, 553, 554, 555, 651, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	652, 563, 564, 565, 566, 653, 570, 571, 0, 572,
	573, 0, 569, 560, 0, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 654, 655, 656, 657,
	0, 591, 0, 583, 584, 585, 658, 586, 659, 0,
	587, 588, 589, 590, 0, 592, 593, 0, 0, 594,
	595, 596, 598, 599, 597, 600, 0, 601, 0, 0,
	602, 603, 604, 660, 661, 662, 0, 606, 605, 607,
	663, 0, 0, 0, 0, 0, 608, 609, 664, 610,
	611, 612, 1289, 1288, 0, 0, 0, 0, 1286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	271, 270, 272, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 613, 0, 0, 0, 0,
	279, 280, 1151, 281, 282, 283, 284, 285, 286, 614,
	615, 0, 287, 616, 288, 617, 0, 618, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 619, 620,
	621, 0, 296, 297, 622, 0, 1294, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1152, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 623, 624, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 625, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 626, 627, 359, 0, 266, 0, 0,
	0, 0, 0, 360, 361, 362, 628, 0, 0, 0,
	363, 0, 364, 0, 0, 1153, 365, 366, 629, 630,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 631, 0, 632, 377, 0, 378, 379, 380, 381,
	382, 633, 634, 635, 459, 1155, 383, 384, 0, 385,
	386, 387, 388, 0, 0, 0, 0, 389, 390, 391,
	393, 0, 1154, 392, 636, 637, 0, 638, 0, 394,
	395, 1156, 639, 1157, 396, 397, 398, 1158, 399, 0,
	0, 0, 400, 401, 402, 403, 404, 405, 0, 406,
	408, 407, 0, 409, 640, 1159, 410, 411, 1160, 0,
	412, 0, 0, 0, 413, 414, 417, 0, 0, 415,
	416, 418, 419, 0, 420, 421, 423, 426, 422, 424,
	425, 427, 440, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 442, 0, 441, 1161, 443,
	444, 445, 450, 452, 453, 448, 449, 451, 454, 455,
	447, 1162, 446, 0, 0, 1163, 456, 457, 3395, 641,
	458, 642, 460, 461, 0, 0, 462, 0, 0, 0,
	464, 465, 466, 0, 0, 467, 468, 643, 1164, 469,
	1165, 644, 470, 471, 463, 472, 473, 474, 475, 476,
	477, 478, 479, 0, 480, 481, 645, 482, 483, 484,
	646, 485, 486, 487, 647, 488, 648, 489, 490, 0,
	491, 492, 0, 493, 494, 495, 496, 497, 498, 499,
	649, 500, 502, 501, 503, 0, 504, 0, 505, 506,
	507, 0, 0, 0, 0, 508, 0, 510, 511, 512,
	513, 509, 514, 515, 516, 517, 0, 518, 519, 520,
	1166, 521, 522, 523, 524, 650, 525, 0, 526, 527,
	533, 534, 528, 529, 535, 536, 537, 538, 539, 0,
	541, 542, 540, 543, 544, 545, 0, 546, 547, 530,
	531, 548, 549, 1167, 550, 551, 552, 553, 554, 555,
	651, 0, 556, 0, 557, 558, 559, 561, 532, 562,
	567, 568, 652, 563, 564, 565, 566, 653, 570, 571,
	0, 572, 573, 0, 569, 560, 0, 574, 575, 576,
	577, 578, 579, 580, 353, 581, 0, 582, 654, 655,
	656, 657, 0, 591, 0, 583, 584, 585, 658, 586,
	659, 0, 587, 588, 589, 590, 0, 592, 593, 0,
	0, 594, 595, 596, 598, 599, 597, 600, 0, 601,
	0, 0, 602, 603, 604, 660, 661, 662, 263, 606,
	605, 607, 663, 0, 0, 0, 0, 0, 608, 609,
	664, 610, 611, 612, 0, 269, 271, 270, 272, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 613, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 614, 615, 0, 287, 616,
	288, 617, 0, 618, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 619, 620, 621, 0, 296, 297,
	622, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 623,
	624, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 625, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 626,
	627, 359, 0, 266, 0, 0, 0, 0, 0, 360,
	361, 362, 628, 0, 0, 0, 363, 0, 364, 0,
	0, 0, 365, 366, 629, 630, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 631, 0, 632,
	377, 0, 378, 379, 380, 381, 382, 633, 634, 635,
	459, 0, 383, 384, 0, 385, 386, 387, 388, 0,
	0, 0, 267, 389, 390, 391, 393, 0, 0, 392,
	636, 637, 0, 638, 0, 394, 395, 0, 639, 0,
	396, 397, 398, 0, 399, 0, 0, 0, 400, 401,
	402, 403, 404, 405, 0, 406, 408, 407, 0, 409,
	640, 0, 410, 411, 0, 0, 412, 0, 0, 0,
	413, 414, 417, 0, 0, 415, 416, 418, 419, 0,
	420, 421, 423, 426, 422, 424, 425, 427, 440, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 442, 0, 441, 0, 443, 444, 445, 450, 452,
	453, 448, 449, 451, 454, 455, 447, 0, 446, 0,
	268, 0, 456, 457, 0, 641, 458, 642, 460, 461,
	0, 0, 462, 0, 0, 0, 464, 465, 466, 0,
	0, 467, 468, 643, 0, 469, 0, 644, 470, 471,
	463, 472, 473, 474, 475, 476, 477, 478, 479, 0,
	480, 481, 645, 482, 483, 484, 646, 485, 486, 487,
	647, 488, 648, 489, 490, 0, 491, 492, 0, 493,
	494, 495, 496, 497, 498, 499, 649, 500, 502, 501,
	503, 0, 504, 0, 505, 506, 507, 0, 0, 0,
	0, 508, 0, 510, 511, 512, 513, 509, 514, 515,
	516, 517, 0, 518, 519, 520, 0, 521, 522, 523,
	524, 650, 525, 0, 526, 527, 533, 534, 528, 529,
	535, 536, 537, 538, 539, 0, 541, 542, 540, 543,
	544, 545, 0, 546, 547, 530, 531, 548, 549, 0,
	550, 551, 552, 553, 554, 555, 651, 0, 556, 0,
	557, 558, 559, 561, 532, 562, 567, 568, 652, 563,
	564, 565, 566, 653, 570, 571, 0, 572, 573, 0,
	569, 560, 0, 574, 575, 576, 577, 578, 579, 580,
	353, 581, 0, 582, 654, 655, 656, 657, 0, 591,
	0, 583, 584, 585, 658, 586, 659, 0, 587, 588,
	589, 590, 0, 592, 593, 0, 0, 594, 595, 596,
	598, 599, 597, 600, 0, 601, 0, 0, 602, 603,
	604, 660, 661, 662, 0, 606, 605, 607, 663, 0,
	0, 0, 0, 0, 608, 609, 664, 610, 611, 612,
	1612, 0, 1289, 1288, 0, 0, 0, 0, 1286, 0,
	0, 0, 0, 0, 0, 0, 0, 793, 0, 269,
	271, 270, 272, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 613, 0, 0, 0, 0,
	279, 280, 1151, 281, 282, 283, 284, 285, 286, 614,
	615, 0, 287, 616, 288, 617, 0, 618, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 619, 620,
	621, 0, 296, 297, 622, 0, 1294, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1152, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 623, 624, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 625, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 626, 627, 359, 0, 266, 0, 0,
	0, 0, 0, 1611, 361, 362, 628, 0, 0, 0,
	363, 0, 364, 0, 0, 1153, 365, 366, 629, 630,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 631, 0, 632, 377, 0, 378, 379, 380, 381,
	382, 633, 634, 635, 459, 1155, 383, 384, 0, 385,
	386, 387, 388, 0, 0, 0, 0, 389, 390, 391,
	393, 0, 1154, 392, 636, 637, 0, 638, 0, 394,
	395, 1156, 639, 1157, 396, 397, 398, 1158, 399, 0,
	0, 0, 400, 401, 402, 403, 404, 405, 0, 406,
	408, 407, 0, 409, 640, 1159, 410, 411, 1160, 0,
	412, 0, 0, 0, 413, 414, 417, 0, 0, 415,
	416, 418, 419, 0, 420, 421, 423, 426, 422, 424,
	425, 427, 440, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 442, 0, 441, 1161, 443,
	444, 445, 450, 452, 453, 448, 449, 451, 454, 455,
	447, 1162, 446, 0, 0, 1163, 456, 457, 0, 641,
	458, 642, 460, 461, 0, 0, 462, 0, 0, 0,
	464, 465, 466, 0, 0, 467, 468, 643, 1164, 469,
	1165, 644, 470, 471, 463, 472, 473, 474, 475, 476,
	477, 478, 479, 0, 480, 481, 645, 482, 483, 484,
	646, 485, 486, 487, 647, 488, 648, 489, 490, 0,
	491, 492, 0, 493, 494, 495, 496, 497, 1610, 499,
	649, 500, 502, 501, 503, 0, 504, 0, 505, 506,
	507, 0, 0, 0, 0, 508, 0, 510, 511, 512,
	513, 509, 514, 515, 516, 517, 0, 518, 519, 520,
	1166, 521, 522, 523, 524, 650, 525, 0, 526, 527,
	533, 534, 528, 529, 535, 1609, 537, 538, 539, 0,
	541, 542, 540, 543, 544, 545, 0, 546, 547, 530,
	531, 548, 549, 1167, 550, 551, 552, 553, 554, 555,
	651, 0, 556, 0, 557, 558, 559, 561, 532, 562,
	567, 568, 652, 563, 564, 565, 566, 653, 570, 571,
	0, 572, 573, 0, 569, 560, 0, 574, 575, 576,
	577, 578, 579, 580, 353, 581, 0, 582, 654, 655,
	656, 657, 0, 591, 0, 583, 584, 585, 658, 586,
	659, 0, 587, 588, 589, 590, 0, 592, 593, 0,
	0, 594, 595, 596, 598, 599, 597, 600, 0, 601,
	0, 0, 602, 603, 604, 660, 661, 662, 0, 606,
	605, 607, 663, 0, 0, 0, 0, 0, 608, 609,
	664, 610, 611, 612, 1530, 0, 1289, 1288, 0, 0,
	0, 0, 1286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 271, 270, 272, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 613,
	0, 0, 0, 0, 279, 280, 1151, 281, 282, 283,
	284, 285, 286, 614, 615, 0, 287, 616, 288, 617,
	0, 618, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 619, 620, 621, 0, 296, 297, 622, 0,
	1294, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1152,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 623, 624, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 625, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 626, 627, 359,
	0, 266, 0, 0, 0, 0, 0, 360, 361, 362,
	628, 0, 0, 0, 363, 0, 364, 0, 0, 1153,
	365, 366, 629, 630, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 631, 0, 632, 377, 0,
	378, 379, 380, 381, 382, 1529, 634, 635, 459, 1155,
	383, 384, 0, 385, 386, 387, 388, 0, 0, 0,
	0, 389, 390, 391, 393, 0, 1154, 392, 636, 637,
	0, 638, 0, 394, 395, 1156, 639, 1157, 396, 397,
	398, 1158, 399, 0, 0, 0, 400, 401, 402, 403,
	404, 405, 0, 406, 408, 407, 0, 409, 640, 1159,
	410, 411, 1160, 0, 412, 0, 0, 0, 413, 414,
	417, 0, 0, 415, 416, 418, 419, 0, 420, 421,
	423, 426, 422, 424, 425, 427, 440, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 442,
	0, 441, 1161, 443, 444, 445, 450, 452, 453, 448,
	449, 451, 454, 455, 447, 1162, 446, 0, 0, 1163,
	456, 457, 0, 641, 458, 642, 460, 461, 0, 0,
	462, 0, 0, 0, 464, 465, 466, 0, 0, 467,
	468, 643, 1164, 469, 1165, 644, 470, 471, 463, 472,
	473, 474, 475, 476, 477, 478, 479, 0, 480, 481,
	645, 482, 483, 484, 646, 485, 486, 487, 647, 488,
	648, 489, 490, 0, 491, 492, 0, 493, 494, 495,
	496, 497, 498, 499, 649, 500, 502, 501, 503, 0,
	504, 0, 505, 506, 507, 0, 0, 0, 0, 508,
	0, 510, 511, 512, 513, 509, 514, 515, 516, 517,
	0, 518, 519, 520, 1166, 521, 522, 523, 524, 650,
	525, 0, 526, 527, 533, 534, 528, 529, 535, 536,
	537, 538, 539, 0, 541, 542, 540, 543, 544, 545,
	0, 546, 547, 530, 531, 548, 549, 1167, 550, 551,
	552, 553, 554, 555, 651, 0, 556, 0, 557, 558,
	559, 561, 532, 562, 567, 568, 652, 563, 564, 565,
	566, 653, 570, 571, 0, 572, 573, 0, 569, 560,
	0, 574, 575, 576, 577, 578, 579, 580, 353, 581,
	0, 582, 654, 655, 656, 657, 0, 591, 0, 583,
	584, 585, 658, 586, 659, 0, 587, 588, 589, 590,
	0, 592, 593, 0, 0, 594, 595, 596, 598, 599,
	597, 600, 0, 601, 0, 0, 602, 603, 604, 660,
	661, 662, 0, 606, 605, 607, 663, 0, 0, 0,
	0, 0, 608, 609, 664, 610, 611, 612, 1490, 0,
	1289, 1288, 0, 0, 0, 0, 1286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 613, 0, 0, 0, 0, 279, 280,
	1151, 281, 282, 283, 284, 285, 286, 614, 615, 0,
	287, 616, 288, 617, 0, 618, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 619, 620, 621, 0,
	296, 297, 622, 0, 1294, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1152, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 623, 624, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	625, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 626, 627, 359, 0, 266, 0, 0, 0, 0,
	0, 360, 361, 362, 628, 0, 0, 0, 363, 0,
	364, 0, 0, 1153, 365, 366, 629, 630, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 631,
	0, 632, 377, 0, 378, 379, 380, 381, 382, 633,
	634, 635, 459, 1155, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 0, 389, 390, 391, 393, 0,
	1154, 392, 636, 637, 0, 638, 0, 394, 395, 1156,
	639, 1157, 396, 397, 398, 1158, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 640, 1159, 410, 411, 1160, 0, 412, 0,
	0, 0, 413, 414, 417, 0, 0, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 1161, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 1162,
	446, 0, 0, 1163, 456, 457, 0, 641, 458, 642,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 1164, 469, 1165, 644,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 647, 488, 648, 489, 490, 0, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 649, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 1166, 521,
	522, 523, 524, 650, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 0, 541, 542,
	540, 543, 544, 545, 0, 546, 547, 530, 531, 548,
	549, 1167, 550, 551, 552, 553, 554, 555, 651, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	652, 563, 564, 565, 566, 653, 570, 571, 0, 572,
	573, 0, 569, 560, 0, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 654, 655, 656, 657,
	0, 591, 0, 583, 584, 585, 658, 586, 659, 0,
	587, 588, 589, 590, 0, 592, 593, 0, 0, 594,
	595, 596, 598, 599, 597, 600, 0, 601, 0, 0,
	602, 603, 604, 660, 661, 662, 0, 606, 605, 607,
	663, 0, 0, 0, 0, 0, 608, 609, 664, 610,
	611, 612, 1458, 0, 1289, 1288, 0, 0, 0, 0,
	1286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 271, 270, 272, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 613, 0, 0,
	0, 0, 279, 280, 1151, 281, 282, 283, 284, 285,
	286, 614, 615, 0, 287, 616, 288, 617, 0, 618,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	619, 620, 621, 0, 296, 297, 622, 0, 1294, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1152, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 623, 624, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 625, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 626, 627, 359, 0, 266,
	0, 0, 0, 0, 0, 360, 361, 362, 628, 0,
	0, 0, 363, 0, 364, 0, 0, 1153, 365, 366,
	629, 630, 367, 368, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 631, 0, 632, 377, 0, 378, 379,
	380, 381, 382, 1457, 634, 635, 459, 1155, 383, 384,
	0, 385, 386, 387, 388, 0, 0, 0, 0, 389,
	390, 391, 393, 0, 1154, 392, 636, 637, 0, 638,
	0, 394, 395, 1156, 639, 1157, 396, 397, 398, 1158,
	399, 0, 0, 0, 400, 401, 402, 403, 404, 405,
	0, 406, 408, 407, 0, 409, 640, 1159, 410, 411,
	1160, 0, 412, 0, 0, 0, 413, 414, 417, 0,
	0, 415, 416, 418, 419, 0, 420, 421, 423, 426,
	422, 424, 425, 427, 440, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 442, 0, 441,
	1161, 443, 444, 445, 450, 452, 453, 448, 449, 451,
	454, 455, 447, 1162, 446, 0, 0, 1163, 456, 457,
	0, 641, 458, 642, 460, 461, 0, 0, 462, 0,
	0, 0, 464, 465, 466, 0, 0, 467, 468, 643,
	1164, 469, 1165, 644, 470, 471, 463, 472, 473, 474,
	475, 476, 477, 478, 479, 0, 480, 481, 645, 482,
	483, 484, 646, 485, 486, 487, 647, 488, 648, 489,
	490, 0, 491, 492, 0, 493, 494, 495, 496, 497,
	498, 499, 649, 500, 502, 501, 503, 0, 504, 0,
	505, 506, 507, 0, 0, 0, 0, 508, 0, 510,
	511, 512, 513, 509, 514, 515, 516, 517, 0, 518,
	519, 520, 1166, 521, 522, 523, 524, 650, 525, 0,
	526, 527, 533, 534, 528, 529, 535, 536, 537, 538,
	539, 0, 541, 542, 540, 543, 544, 545, 0, 546,
	547, 530, 531, 548, 549, 1167, 550, 551, 552, 553,
	554, 555, 651, 0, 556, 0, 557, 558, 559, 561,
	532, 562, 567, 568, 652, 563, 564, 565, 566, 653,
	570, 571, 0, 572, 573, 0, 569, 560, 0, 574,
	575, 576, 577, 578, 579, 580, 353, 581, 0, 582,
	654, 655, 656, 657, 0, 591, 0, 583, 584, 585,
	658, 586, 659, 0, 587, 588, 589, 590, 0, 592,
	593, 0, 0, 594, 595, 596, 598, 599, 597, 600,
	0, 601, 0, 0, 602, 603, 604, 660, 661, 662,
	0, 606, 605, 607, 663, 0, 0, 0, 0, 0,
	608, 609, 664, 610, 611, 612, 1283, 0, 1289, 1288,
	0, 0, 0, 0, 1286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 271, 270, 272, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 613, 0, 0, 0, 0, 279, 280, 1151, 281,
	282, 283, 284, 285, 286, 614, 615, 0, 287, 616,
	288, 617, 0, 618, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 619, 620, 621, 0, 296, 297,
	622, 0, 1294, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1152, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 623,
	624, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 625, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 626,
	627, 359, 0, 266, 0, 0, 0, 0, 0, 360,
	361, 362, 628, 0, 0, 0, 363, 0, 364, 0,
	0, 1153, 365, 366, 629, 630, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 631, 0, 632,
	377, 0, 378, 379, 380, 381, 382, 1282, 634, 635,
	459, 1155, 383, 384, 0, 385, 386, 387, 388, 0,
	0, 0, 0, 389, 390, 391, 393, 0, 1154, 392,
	636, 637, 0, 638, 0, 394, 395, 1156, 639, 1157,
	396, 397, 398, 1158, 399, 0, 0, 0, 400, 401,
	402, 403, 404, 405, 0, 406, 408, 407, 0, 409,
	640, 1159, 410, 411, 1160, 0, 412, 0, 0, 0,
	413, 414, 417, 0, 0, 415, 416, 418, 419, 0,
	420, 421, 423, 426, 422, 424, 425, 427, 440, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 442, 0, 441, 1161, 443, 444, 445, 450, 452,
	453, 448, 449, 451, 454, 455, 447, 1162, 446, 0,
	0, 1163, 456, 457, 0, 641, 458, 642, 460, 461,
	0, 0, 462, 0, 0, 0, 464, 465, 466, 0,
	0, 467, 468, 643, 1164, 469, 1165, 644, 470, 471,
	463, 472, 473, 474, 475, 476, 477, 478, 479, 0,
	480, 481, 645, 482, 483, 484, 646, 485, 486, 487,
	647, 488, 648, 489, 490, 0, 491, 492, 0, 493,
	494, 495, 496, 497, 498, 499, 649, 500, 502, 501,
	503, 0, 504, 0, 505, 506, 507, 0, 0, 0,
	0, 508, 0, 510, 511, 512, 513, 509, 514, 515,
	516, 517, 0, 518, 519, 520, 1166, 521, 522, 523,
	524, 650, 525, 0, 526, 527, 533, 534, 528, 529,
	535, 536, 537, 538, 539, 0, 541, 542, 540, 543,
	544, 545, 0, 546, 547, 530, 531, 548, 549, 1167,
	550, 551, 552, 553, 554, 555, 651, 0, 556, 0,
	557, 558, 559, 561, 532, 562, 567, 568, 652, 563,
	564, 565, 566, 653, 570, 571, 0, 572, 573, 0,
	569, 560, 0, 574, 575, 576, 577, 578, 579, 580,
	353, 581, 0, 582, 654, 655, 656, 657, 0, 591,
	0, 583, 584, 585, 658, 586, 659, 0, 587, 588,
	589, 590, 0, 592, 593, 0, 0, 594, 595, 596,
	598, 599, 597, 600, 0, 601, 0, 0, 602, 603,
	604, 660, 661, 662, 0, 606, 605, 607, 663, 0,
	0, 0, 0, 0, 608, 609, 664, 610, 611, 612,
	1289, 1288, 0, 0, 0, 0, 1286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 613, 0, 0, 0, 0, 279, 280,
	1151, 281, 282, 283, 284, 285, 286, 614, 615, 0,
	287, 616, 288, 617, 0, 618, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 619, 620, 621, 0,
	296, 297, 622, 0, 1294, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1152, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 623, 624, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	625, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 626, 627, 359, 0, 266, 0, 0, 0, 0,
	0, 360, 361, 362, 628, 0, 0, 0, 363, 0,
	364, 0, 0, 1153, 365, 366, 629, 630, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 631,
	0, 632, 377, 0, 378, 379, 380, 381, 382, 633,
	634, 635, 459, 1155, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 0, 389, 390, 391, 393, 0,
	1154, 392, 636, 637, 0, 638, 0, 394, 395, 1156,
	639, 1157, 396, 397, 398, 1158, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 640, 1159, 410, 411, 1160, 0, 412, 0,
	0, 0, 413, 414, 417, 0, 0, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 1161, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 1162,
	446, 0, 0, 1163, 456, 457, 0, 641, 458, 642,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 1164, 469, 1165, 644,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 647, 488, 648, 489, 490, 0, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 649, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 1166, 521,
	522, 523, 524, 650, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 0, 541, 542,
	540, 543, 544, 545, 0, 546, 547, 530, 531, 548,
	549, 1167, 550, 551, 552, 553, 554, 555, 651, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	652, 563, 564, 565, 566, 653, 570, 571, 0, 572,
	573, 0, 569, 560, 0, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 654, 655, 656, 657,
	0, 591, 0, 583, 584, 585, 658, 586, 659, 0,
	587, 588, 589, 590, 0, 592, 593, 0, 0, 594,
	595, 596, 598, 599, 597, 600, 0, 601, 0, 0,
	602, 603, 604, 660, 661, 662, 0, 606, 605, 607,
	663, 1289, 1985, 0, 0, 0, 608, 609, 664, 610,
	611, 612, 0, 0, 0, 0, 0, 0, 269, 271,
	270, 272, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 613, 0, 0, 0, 0, 279,
	280, 1151, 281, 282, 283, 284, 285, 286, 614, 615,
	0, 287, 616, 288, 617, 0, 618, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 619, 620, 621,
	0, 296, 297, 622, 0, 1294, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1152, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 623, 624, 2025, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 625, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 626, 627, 359, 0, 266, 0, 0, 0,
	0, 0, 360, 361, 362, 628, 0, 0, 0, 363,
	0, 364, 0, 0, 1153, 365, 366, 629, 630, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	631, 0, 632, 377, 0, 378, 379, 380, 381, 382,
	633, 634, 635, 459, 1155, 383, 384, 0, 385, 386,
	387, 388, 0, 0, 0, 0, 389, 390, 391, 393,
	0, 1154, 392, 636, 637, 0, 638, 0, 394, 395,
	1156, 639, 1157, 396, 397, 398, 1158, 399, 0, 0,
	0, 400, 401, 402, 403, 404, 405, 0, 406, 408,
	407, 0, 409, 640, 1159, 410, 411, 1160, 0, 412,
	0, 0, 0, 413, 414, 417, 0, 0, 415, 416,
	418, 419, 0, 420, 421, 423, 426, 422, 424, 425,
	427, 440, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 442, 0, 441, 1161, 443, 444,
	445, 450, 452, 453, 448, 449, 451, 454, 455, 447,
	1162, 446, 0, 0, 1163, 456, 457, 0, 641, 458,
	642, 460, 461, 0, 0, 462, 0, 0, 0, 464,
	465, 466, 0, 0, 467, 468, 643, 1164, 469, 1165,
	644, 470, 471, 463, 472, 473, 474, 475, 476, 477,
	478, 479, 0, 480, 481, 645, 482, 483, 484, 646,
	485, 486, 487, 647, 488, 648, 489, 490, 0, 491,
	492, 0, 493, 494, 495, 496, 497, 498, 499, 649,
	500, 502, 501, 503, 0, 504, 0, 505, 506, 507,
	0, 0, 0, 0, 508, 0, 510, 511, 512, 513,
	509, 514, 515, 516, 517, 0, 518, 519, 520, 1166,
	521, 522, 523, 524, 650, 525, 0, 526, 527, 533,
	534, 528, 529, 535, 536, 537, 538, 539, 0, 541,
	542, 540, 543, 544, 545, 0, 546, 547, 530, 531,
	548, 549, 1167, 550, 551, 552, 553, 554, 555, 651,
	0, 556, 0, 557, 558, 559, 561, 532, 562, 567,
	568, 652, 563, 564, 565, 566, 653, 570, 571, 0,
	572, 573, 0, 569, 560, 0, 574, 575, 576, 577,
	578, 579, 580, 353, 581, 0, 582, 654, 655, 656,
	657, 0, 591, 0, 583, 584, 585, 658, 586, 659,
	0, 587, 588, 589, 590, 0, 592, 593, 0, 0,
	594, 595, 596, 598, 599, 597, 600, 0, 601, 0,
	0, 602, 603, 604, 660, 661, 662, 0, 606, 605,
	607, 663, 1289, 1288, 0, 0, 0, 608, 609, 664,
	610, 611, 612, 0, 0, 0, 0, 0, 0, 269,
	271, 270, 272, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 613, 0, 0, 0, 0,
	279, 280, 1151, 281, 282, 283, 284, 285, 286, 614,
	615, 0, 287, 616, 288, 617, 0, 618, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 619, 620,
	621, 0, 296, 297, 622, 0, 1294, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1152, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 623, 624, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 625, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 626, 627, 359, 0, 266, 0, 0,
	0, 0, 0, 360, 361, 362, 628, 0, 0, 0,
	363, 0, 364, 0, 0, 1153, 365, 366, 629, 630,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 631, 0, 632, 377, 0, 378, 379, 380, 381,
	382, 633, 634, 635, 459, 1155, 383, 384, 0, 385,
	386, 387, 388, 0, 0, 0, 0, 389, 390, 391,
	393, 0, 1154, 392, 636, 637, 0, 638, 0, 394,
	395, 1156, 639, 1157, 396, 397, 398, 1158, 399, 0,
	0, 0, 400, 401, 402, 403, 404, 405, 0, 406,
	408, 407, 0, 409, 640, 1159, 410, 411, 1160, 0,
	412, 0, 0, 0, 413, 414, 417, 0, 0, 415,
	416, 418, 419, 0, 420, 421, 423, 426, 422, 424,
	425, 427, 440, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 442, 0, 441, 1161, 443,
	444, 445, 450, 452, 453, 448, 449, 451, 454, 455,
	447, 1162, 446, 0, 0, 1163, 456, 457, 0, 641,
	458, 642, 460, 461, 0, 0, 462, 0, 0, 0,
	464, 465, 466, 0, 0, 467, 468, 643, 1164, 469,
	1165, 644, 470, 471, 463, 472, 473, 474, 475, 476,
	477, 478, 479, 0, 480, 481, 645, 482, 483, 484,
	646, 485, 486, 487, 647, 488, 648, 489, 490, 0,
	491, 492, 0, 493, 494, 495, 496, 497, 498, 499,
	649, 500, 502, 501, 503, 0, 504, 0, 505, 506,
	507, 0, 0, 0, 0, 508, 0, 510, 511, 512,
	513, 509, 514, 515, 516, 517, 0, 518, 519, 520,
	1166, 521, 522, 523, 524, 650, 525, 0, 526, 527,
	533, 534, 528, 529, 535, 536, 537, 538, 539, 0,
	541, 542, 540, 543, 544, 545, 0, 546, 547, 530,
	531, 548, 549, 1167, 550, 551, 552, 553, 554, 555,
	651, 0, 556, 0, 557, 558, 559, 561, 532, 562,
	567, 568, 652, 563, 564, 565, 566, 653, 570, 571,
	0, 572, 573, 0, 569, 560, 0, 574, 575, 576,
	577, 578, 579, 580, 353, 581, 0, 582, 654, 655,
	656, 657, 0, 591, 0, 583, 584, 585, 658, 586,
	659, 0, 587, 588, 589, 590, 0, 592, 593, 0,
	0, 594, 595, 596, 598, 599, 597, 600, 0, 601,
	0, 0, 602, 603, 604, 660, 661, 662, 1289, 606,
	605, 607, 663, 0, 0, 0, 0, 0, 608, 609,
	664, 610, 611, 612, 0, 269, 271, 270, 272, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 613, 0, 0, 0, 0, 279, 280, 1151, 281,
	282, 283, 284, 285, 286, 614, 615, 0, 287, 616,
	288, 617, 0, 618, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 619, 620, 621, 0, 296, 297,
	622, 0, 1294, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1152, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 623,
	624, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 625, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 626,
	627, 359, 0, 266, 0, 0, 0, 0, 0, 360,
	361, 362, 628, 0, 0, 0, 363, 0, 364, 0,
	0, 1153, 365, 366, 629, 630, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 631, 0, 632,
	377, 0, 378, 379, 380, 381, 382, 633, 634, 635,
	459, 1155, 383, 384, 0, 385, 386, 387, 388, 0,
	0, 0, 0, 389, 390, 391, 393, 0, 1154, 392,
	636, 637, 0, 638, 0, 394, 395, 1156, 639, 1157,
	396, 397, 398, 1158, 399, 0, 0, 0, 400, 401,
	402, 403, 404, 405, 0, 406, 408, 407, 0, 409,
	640, 1159, 410, 411, 1160, 0, 412, 0, 0, 0,
	413, 414, 417, 0, 0, 415, 416, 418, 419, 0,
	420, 421, 423, 426, 422, 424, 425, 427, 440, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 442, 0, 441, 1161, 443, 444, 445, 450, 452,
	453, 448, 449, 451, 454, 455, 447, 1162, 446, 0,
	0, 1163, 456, 457, 0, 641, 458, 642, 460, 461,
	0, 0, 462, 0, 0, 0, 464, 465, 466, 0,
	0, 467, 468, 643, 1164, 469, 1165, 644, 470, 471,
	463, 472, 473, 474, 475, 476, 477, 478, 479, 0,
	480, 481, 645, 482, 483, 484, 646, 485, 486, 487,
	647, 488, 648, 489, 490, 0, 491, 492, 0, 493,
	494, 495, 496, 497, 498, 499, 649, 500, 502, 501,
	503, 0, 504, 0, 505, 506, 507, 0, 0, 0,
	0, 508, 0, 510, 511, 512, 513, 509, 514, 515,
	516, 517, 0, 518, 519, 520, 1166, 521, 522, 523,
	524, 650, 525, 0, 526, 527, 533, 534, 528, 529,
	535, 536, 537, 538, 539, 0, 541, 542, 540, 543,
	544, 545, 0, 546, 547, 530, 531, 548, 549, 1167,
	550, 551, 552, 553, 554, 555, 651, 0, 556, 0,
	557, 558, 559, 561, 532, 562, 567, 568, 652, 563,
	564, 565, 566, 653, 570, 571, 0, 572, 573, 0,
	569, 560, 0, 574, 575, 576, 577, 578, 579, 580,
	353, 581, 0, 582, 654, 655, 656, 657, 0, 591,
	0, 583, 584, 585, 658, 586, 659, 0, 587, 588,
	589, 590, 0, 592, 593, 0, 0, 594, 595, 596,
	598, 599, 597, 600, 0, 601, 0, 0, 602, 603,
	604, 660, 661, 662, 263, 606, 605, 607, 663, 0,
	0, 0, 0, 0, 608, 609, 664, 610, 611, 612,
	0, 269, 271, 270, 272, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 613, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 614, 615, 0, 287, 616, 288, 617, 0, 618,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	619, 620, 621, 2731, 296, 297, 622, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 2728, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 623, 624, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 2735, 347, 625, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 626, 627, 359, 0, 2934,
	0, 0, 0, 0, 0, 360, 361, 362, 628, 0,
	0, 0, 363, 0, 364, 2734, 0, 0, 365, 366,
	629, 630, 367, 368, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 631, 0, 632, 377, 0, 378, 379,
	380, 381, 382, 633, 634, 635, 459, 0, 383, 384,
	0, 385, 386, 387, 388, 0, 0, 0, 2931, 389,
	390, 391, 393, 0, 0, 392, 636, 637, 0, 638,
	0, 394, 2933, 0, 639, 0, 396, 397, 398, 0,
	399, 0, 0, 0, 400, 401, 402, 403, 404, 405,
	0, 406, 408, 407, 0, 409, 640, 0, 410, 411,
	2930, 0, 412, 0, 0, 0, 413, 414, 417, 0,
	0, 415, 416, 418, 419, 0, 420, 421, 423, 426,
	422, 424, 425, 427, 440, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 442, 0, 441,
	0, 443, 444, 445, 450, 452, 453, 448, 449, 451,
	454, 455, 447, 0, 446, 0, 0, 0, 456, 457,
	0, 641, 458, 642, 460, 461, 0, 0, 462, 0,
	0, 0, 464, 465, 466, 0, 0, 467, 468, 643,
	0, 469, 0, 644, 470, 471, 463, 472, 473, 474,
	475, 476, 477, 478, 479, 0, 480, 481, 645, 482,
	483, 484, 646, 485, 486, 487, 647, 488, 648, 489,
	490, 2733, 491, 492, 0, 493, 494, 495, 496, 497,
	498, 499, 649, 500, 502, 501, 503, 0, 504, 0,
	505, 506, 507, 0, 0, 0, 0, 508, 0, 510,
	511, 512, 513, 509, 514, 515, 516, 517, 0, 518,
	519, 520, 0, 521, 522, 523, 524, 650, 525, 0,
	526, 527, 533, 534, 528, 529, 535, 536, 537, 538,
	539, 0, 541, 542, 540, 543, 544, 545, 0, 546,
	547, 530, 531, 548, 549, 0, 550, 551, 552, 553,
	554, 555, 651, 0, 556, 0, 557, 558, 559, 561,
	532, 562, 567, 568, 652, 563, 564, 565, 566, 653,
	570, 571, 0, 572, 573, 0, 569, 560, 0, 574,
	575, 576, 577, 578, 579, 580, 353, 581, 0, 582,
	654, 655, 656, 657, 0, 591, 0, 583, 584, 585,
	658, 586, 659, 0, 587, 588, 589, 590, 0, 592,
	593, 0, 2932, 594, 595, 596, 598, 599, 597, 600,
	0, 601, 0, 0, 602, 603, 604, 660, 661, 662,
	263, 606, 605, 607, 663, 0, 0, 0, 0, 0,
	608, 609, 664, 610, 611, 612, 0, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 613, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 614, 615, 0,
	287, 616, 288, 617, 0, 618, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 619, 620, 621, 2731,
	296, 297, 622, 0, 0, 2725, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	2728, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 623, 624, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 2735, 347,
	625, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 626, 627, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 628, 0, 0, 0, 363, 0,
	364, 2734, 0, 0, 365, 366, 629, 630, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 631,
	0, 632, 377, 0, 378, 379, 380, 381, 382, 2724,
	634, 635, 459, 0, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 0, 389, 390, 391, 393, 0,
	0, 392, 636, 637, 0, 638, 0, 394, 395, 0,
	639, 0, 396, 397, 398, 0, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 640, 0, 410, 411, 0, 0, 412, 0,
	0, 0, 413, 414, 417, 0, 0, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 0, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 0,
	446, 0, 0, 0, 456, 457, 0, 641, 458, 642,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 0, 469, 0, 644,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 647, 488, 648, 489, 490, 2733, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 649, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 0, 521,
	522, 523, 524, 650, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 0, 541, 542,
	540, 543, 544, 545, 0, 546, 547, 530, 531, 548,
	549, 0, 550, 551, 552, 553, 554, 555, 651, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	652, 563, 564, 565, 566, 653, 570, 571, 0, 572,
	573, 0, 569, 560, 0, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 654, 655, 656, 657,
	0, 591, 0, 583, 584, 585, 658, 586, 659, 0,
	587, 588, 589, 590, 0, 592, 593, 0, 2732, 594,
	595, 596, 598, 599, 597, 600, 0, 601, 0, 0,
	602, 603, 604, 660, 661, 662, 0, 606, 605, 607,
	663, 1683, 0, 263, 0, 0, 608, 609, 664, 610,
	611, 612, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 271, 270, 272, 273, 274, 275, 276, 1682, 277,
	278, 0, 0, 0, 0, 0, 613, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	614, 615, 0, 287, 616, 288, 617, 0, 618, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 619,
	620, 621, 0, 296, 297, 622, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 623, 624, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 625, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 626, 627, 359, 0, 266, 0,
	0, 0, 0, 0, 360, 361, 362, 628, 0, 0,
	0, 363, 0, 364, 0, 0, 0, 365, 366, 629,
	630, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 631, 0, 632, 377, 0, 378, 379, 380,
	381, 382, 633, 634, 635, 459, 0, 383, 384, 0,
	385, 386, 387, 388, 0, 0, 0, 267, 389, 390,
	391, 393, 0, 0, 392, 636, 637, 0, 638, 0,
	394, 395, 0, 639, 0, 396, 397, 398, 0, 399,
	0, 0, 0, 400, 401, 402, 403, 404, 405, 0,
	406, 408, 407, 0, 409, 640, 0, 410, 411, 0,
	0, 412, 0, 0, 0, 413, 414, 417, 0, 0,
	415, 416, 418, 419, 0, 420, 421, 423, 426, 422,
	424, 425, 427, 440, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 442, 0, 441, 0,
	443, 444, 445, 450, 452, 453, 448, 449, 451, 454,
	455, 447, 0, 446, 0, 268, 0, 456, 457, 0,
	641, 458, 642, 460, 461, 0, 0, 462, 0, 0,
	0, 464, 465, 466, 0, 0, 467, 468, 643, 0,
	469, 0, 644, 470, 471, 463, 472, 473, 474, 475,
	476, 477, 478, 479, 0, 480, 481, 645, 482, 483,
	484, 646, 485, 486, 487, 647, 488, 648, 489, 490,
	0, 491, 492, 0, 493, 494, 495, 496, 497, 498,
	499, 649, 500, 502, 501, 503, 0, 504, 0, 505,
	506, 507, 0, 0, 0, 0, 508, 0, 510, 511,
	512, 513, 509, 514, 515, 516, 517, 0, 518, 519,
	520, 0, 521, 522, 523, 524, 650, 525, 0, 526,
	527, 533, 534, 528, 529, 535, 536, 537, 538, 539,
	0, 1686, 542, 540, 543, 544, 545, 0, 546, 547,
	530, 531, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 651, 0, 556, 0, 557, 558, 559, 561, 532,
	562, 567, 568, 652, 563, 564, 565, 566, 653, 570,
	571, 0, 572, 573, 0, 569, 560, 1684, 574, 575,
	576, 577, 578, 579, 580, 353, 581, 0, 582, 654,
	655, 656, 657, 0, 591, 0, 583, 584, 585, 658,
	586, 659, 0, 587, 588, 589, 590, 0, 592, 593,
	0, 0, 594, 595, 596, 598, 599, 597, 600, 0,
	601, 0, 0, 602, 603, 604, 660, 661, 662, 0,
	1685, 605, 607, 663, 1436, 0, 263, 0, 0, 608,
	609, 664, 610, 611, 612, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 271, 270, 272, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 613,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 614, 615, 0, 287, 616, 288, 617,
	0, 618, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 619, 620, 621, 0, 296, 297, 622, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 623, 624, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 625, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 626, 627, 359,
	0, 266, 0, 0, 0, 0, 0, 360, 361, 362,
	628, 0, 0, 0, 363, 0, 364, 0, 0, 0,
	365, 366, 629, 630, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 631, 0, 632, 377, 0,
	378, 379, 380, 381, 382, 1438, 634, 635, 459, 0,
	383, 384, 0, 385, 386, 387, 388, 0, 0, 0,
	267, 389, 390, 391, 393, 0, 0, 392, 636, 637,
	0, 638, 0, 394, 395, 0, 639, 0, 396, 397,
	398, 0, 399, 0, 0, 0, 400, 401, 402, 403,
	404, 405, 0, 406, 408, 407, 0, 409, 640, 0,
	410, 411, 0, 0, 412, 0, 0, 0, 413, 414,
	417, 0, 0, 415, 416, 418, 419, 0, 420, 421,
	423, 426, 422, 424, 425, 427, 440, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 442,
	0, 441, 0, 443, 444, 445, 450, 452, 453, 448,
	449, 451, 454, 455, 447, 0, 446, 0, 268, 0,
	456, 457, 0, 641, 458, 642, 460, 461, 0, 0,
	462, 0, 0, 1201, 464, 465, 466, 0, 0, 467,
	468, 643, 0, 469, 0, 644, 470, 471, 463, 472,
	473, 474, 475, 476, 477, 478, 479, 0, 480, 481,
	645, 482, 483, 484, 646, 485, 486, 487, 647, 488,
	648, 489, 490, 0, 491, 492, 0, 493, 494, 495,
	496, 497, 498, 499, 649, 500, 502, 501, 503, 0,
	504, 0, 505, 506, 507, 0, 0, 0, 0, 508,
	0, 510, 511, 512, 513, 509, 514, 515, 516, 517,
	0, 518, 519, 520, 0, 521, 522, 523, 524, 650,
	525, 0, 526, 527, 533, 534, 528, 529, 535, 536,
	537, 538, 539, 0, 541, 542, 540, 543, 544, 545,
	0, 546, 547, 530, 531, 548, 549, 0, 550, 551,
	552, 553, 554, 555, 651, 0, 556, 0, 557, 558,
	559, 561, 532, 562, 567, 568, 652, 563, 564, 565,
	566, 653, 570, 571, 0, 572, 573, 0, 569, 560,
	0, 574, 575, 576, 577, 578, 579, 580, 353, 581,
	0, 582, 654, 655, 656, 657, 0, 591, 0, 583,
	584, 585, 658, 586, 659, 0, 587, 588, 589, 590,
	0, 592, 593, 0, 0, 594, 595, 596, 598, 599,
	597, 600, 0, 601, 0, 0, 602, 603, 604, 660,
	661, 662, 0, 606, 605, 607, 663, 1433, 0, 263,
	0, 0, 608, 609, 664, 610, 611, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 613, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 614, 615, 0, 287,
	616, 288, 617, 0, 618, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 619, 620, 621, 0, 296,
	297, 622, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	623, 624, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 625,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	626, 627, 359, 0, 266, 0, 0, 0, 0, 0,
	360, 361, 362, 628, 0, 0, 0, 363, 0, 364,
	0, 0, 0, 365, 366, 629, 630, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 631, 0,
	632, 377, 0, 378, 379, 380, 381, 382, 1435, 634,
	635, 459, 0, 383, 384, 0, 385, 386, 387, 388,
	0, 0, 0, 267, 389, 390, 391, 393, 0, 0,
	392, 636, 637, 0, 638, 0, 394, 395, 0, 639,
	0, 396, 397, 398, 0, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 0, 406, 408, 407, 0,
	409, 640, 0, 410, 411, 0, 0, 412, 0, 0,
	0, 413, 414, 417, 0, 0, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 0, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 0, 446,
	0, 268, 0, 456, 457, 0, 641, 458, 642, 460,
	461, 0, 0, 462, 0, 0, 1201, 464, 465, 466,
	0, 0, 467, 468, 643, 0, 469, 0, 644, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 647, 488, 648, 489, 490, 0, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 649, 500, 502,
	501, 503, 0, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 0, 518, 519, 520, 0, 521, 522,
	523, 524, 650, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 0, 541, 542, 540,
	543, 544, 545, 0, 546, 547, 530, 531, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 651, 0, 556,
	0, 557, 558, 559, 561, 532, 562, 567, 568, 652,
	563, 564, 565, 566, 653, 570, 571, 0, 572, 573,
	0, 569, 560, 0, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 0, 582, 654, 655, 656, 657, 0,
	591, 0, 583, 584, 585, 658, 586, 659, 0, 587,
	588, 589, 590, 0, 592, 593, 0, 0, 594, 595,
	596, 598, 599, 597, 600, 0, 601, 0, 0, 602,
	603, 604, 660, 661, 662, 0, 606, 605, 607, 663,
	1340, 0, 263, 0, 0, 608, 609, 664, 610, 611,
	612, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	271, 270, 272, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 613, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 614,
	615, 0, 287, 616, 288, 617, 0, 618, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 619, 620,
	621, 0, 296, 297, 622, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 623, 624, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 625, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 626, 627, 359, 0, 266, 0, 0,
	0, 0, 0, 360, 361, 362, 628, 0, 0, 0,
	363, 0, 364, 0, 0, 0, 365, 366, 629, 630,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 631, 0, 632, 377, 0, 378, 379, 380, 381,
	382, 1342, 634, 635, 459, 0, 383, 384, 0, 385,
	386, 387, 388, 0, 0, 0, 267, 389, 390, 391,
	393, 0, 0, 392, 636, 637, 0, 638, 0, 394,
	395, 0, 639, 0, 396, 397, 398, 0, 399, 0,
	0, 0, 400, 401, 402, 403, 404, 405, 0, 406,
	408, 407, 0, 409, 640, 0, 410, 411, 0, 0,
	412, 0, 0, 0, 413, 414, 417, 0, 0, 415,
	416, 418, 419, 0, 420, 421, 423, 426, 422, 424,
	425, 427, 440, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 442, 0, 441, 0, 443,
	444, 445, 450, 452, 453, 448, 449, 451, 454, 455,
	447, 0, 446, 0, 268, 0, 456, 457, 0, 641,
	458, 642, 460, 461, 0, 0, 462, 0, 0, 1201,
	464, 465, 466, 0, 0, 467, 468, 643, 0, 469,
	0, 644, 470, 471, 463, 472, 473, 474, 475, 476,
	477, 478, 479, 0, 480, 481, 645, 482, 483, 484,
	646, 485, 486, 487, 647, 488, 648, 489, 490, 0,
	491, 492, 0, 493, 494, 495, 496, 497, 498, 499,
	649, 500, 502, 501, 503, 0, 504, 0, 505, 506,
	507, 0, 0, 0, 0, 508, 0, 510, 511, 512,
	513, 509, 514, 515, 516, 517, 0, 518, 519, 520,
	0, 521, 522, 523, 524, 650, 525, 0, 526, 527,
	533, 534, 528, 529, 535, 536, 537, 538, 539, 0,
	541, 542, 540, 543, 544, 545, 0, 546, 547, 530,
	531, 548, 549, 0, 550, 551, 552, 553, 554, 555,
	651, 0, 556, 0, 557, 558, 559, 561, 532, 562,
	567, 568, 652, 563, 564, 565, 566, 653, 570, 571,
	0, 572, 573, 0, 569, 560, 0, 574, 575, 576,
	577, 578, 579, 580, 353, 581, 0, 582, 654, 655,
	656, 657, 0, 591, 0, 583, 584, 585, 658, 586,
	659, 0, 587, 588, 589, 590, 0, 592, 593, 0,
	0, 594, 595, 596, 598, 599, 597, 600, 0, 601,
	0, 0, 602, 603, 604, 660, 661, 662, 0, 606,
	605, 607, 663, 696, 0, 263, 0, 0, 608, 609,
	664, 610, 611, 612, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 271, 270, 272, 695, 274, 275, 276,
	685, 277, 278, 0, 0, 0, 0, 0, 613, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 614, 615, 0, 287, 616, 288, 617, 0,
	618, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 619, 620, 621, 0, 296, 297, 622, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 688, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 623, 624, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 625, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 626, 627, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 628,
	0, 0, 0, 363, 0, 364, 0, 0, 0, 365,
	366, 629, 630, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 689, 376, 631, 0, 632, 377, 0, 378,
	379, 380, 381, 382, 633, 634, 635, 459, 0, 383,
	384, 0, 385, 386, 387, 388, 0, 0, 0, 0,
	389, 390, 391, 393, 0, 0, 392, 636, 637, 0,
	638, 0, 394, 395, 0, 639, 0, 396, 397, 398,
	0, 399, 0, 0, 0, 400, 401, 402, 403, 404,
	405, 0, 406, 408, 407, 0, 409, 640, 0, 410,
	411, 0, 0, 412, 0, 0, 0, 413, 414, 417,
	0, 0, 415, 416, 418, 419, 0, 420, 421, 423,
	426, 422, 424, 425, 427, 440, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 442, 0,
	441, 0, 443, 444, 445, 450, 452, 453, 448, 449,
	451, 454, 455, 447, 0, 446, 0, 0, 0, 456,
	457, 0, 641, 458, 642, 460, 461, 0, 0, 462,
	0, 0, 0, 464, 465, 466, 0, 0, 467, 468,
	643, 0, 469, 0, 644, 470, 471, 463, 472, 473,
	474, 475, 476, 477, 478, 479, 0, 480, 481, 645,
	482, 483, 484, 646, 485, 486, 487, 647, 488, 648,
	489, 490, 0, 491, 492, 0, 493, 494, 495, 496,
	497, 498, 499, 649, 500, 502, 501, 503, 0, 504,
	0, 505, 506, 507, 0, 0, 0, 0, 508, 0,
	510, 511, 512, 513, 509, 514, 515, 516, 517, 0,
	518, 519, 520, 0, 521, 522, 523, 524, 650, 525,
	0, 526, 527, 533, 534, 528, 529, 535, 536, 537,
	538, 539, 690, 541, 542, 540, 543, 544, 545, 0,
	546, 547, 530, 531, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 651, 0, 556, 0, 557, 558, 559,
	561, 532, 562, 567, 568, 652, 563, 564, 565, 566,
	653, 570, 571, 0, 572, 573, 0, 569, 560, 0,
	574, 575, 576, 577, 578, 579, 580, 353, 581, 0,
	582, 654, 655, 656, 657, 0, 591, 0, 583, 584,
	585, 658, 586, 659, 0, 587, 588, 589, 590, 0,
	592, 593, 0, 0, 594, 595, 596, 598, 599, 597,
	600, 0, 601, 0, 0, 602, 603, 604, 660, 661,
	662, 0, 606, 605, 607, 663, 684, 0, 263, 0,
	0, 608, 609, 664, 610, 611, 612, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 271, 270, 272, 273,
	274, 275, 276, 685, 277, 278, 0, 0, 0, 0,
	0, 613, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 614, 615, 0, 287, 616,
	288, 617, 0, 618, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 619, 620, 621, 0, 296, 297,
	622, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 688, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 623,
	624, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 625, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 626,
	627, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 628, 0, 0, 0, 363, 0, 364, 0,
	0, 0, 365, 366, 629, 630, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 689, 376, 631, 0, 632,
	377, 0, 378, 379, 380, 381, 382, 633, 634, 635,
	459, 0, 383, 384, 0, 385, 386, 387, 388, 0,
	0, 0, 0, 389, 390, 391, 393, 0, 0, 392,
	636, 637, 0, 638, 0, 394, 395, 0, 639, 0,
	396, 397, 398, 0, 399, 0, 0, 0, 400, 401,
	402, 403, 404, 405, 0, 406, 408, 407, 0, 409,
	640, 0, 410, 411, 0, 0, 412, 0, 0, 0,
	413, 414, 417, 0, 0, 415, 416, 418, 419, 0,
	420, 421, 423, 426, 422, 424, 425, 427, 440, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 442, 0, 441, 0, 443, 444, 445, 450, 452,
	453, 448, 449, 451, 454, 455, 447, 0, 446, 0,
	0, 0, 456, 457, 0, 641, 458, 642, 460, 461,
	0, 0, 462, 0, 0, 0, 464, 465, 466, 0,
	0, 467, 468, 643, 0, 469, 0, 644, 470, 471,
	463, 472, 473, 474, 475, 476, 477, 478, 479, 0,
	480, 481, 645, 482, 483, 484, 646, 485, 486, 487,
	647, 488, 648, 489, 490, 0, 491, 492, 0, 493,
	494, 495, 496, 497, 498, 499, 649, 500, 502, 501,
	503, 0, 504, 0, 505, 506, 507, 0, 0, 0,
	0, 508, 0, 510, 511, 512, 513, 509, 514, 515,
	516, 517, 0, 518, 519, 520, 0, 521, 522, 523,
	524, 650, 525, 0, 526, 527, 533, 534, 528, 529,
	535, 536, 537, 538, 539, 690, 541, 542, 540, 543,
	544, 545, 0, 546, 547, 530, 531, 548, 549, 0,
	550, 551, 552, 553, 554, 555, 651, 0, 556, 0,
	557, 558, 559, 561, 532, 562, 567, 568, 652, 563,
	564, 565, 566, 653, 570, 571, 0, 572, 573, 0,
	569, 560, 0, 574, 575, 576, 577, 578, 579, 580,
	353, 581, 0, 582, 654, 655, 656, 657, 0, 591,
	0, 583, 584, 585, 658, 586, 659, 0, 587, 588,
	589, 590, 0, 592, 593, 0, 0, 594, 595, 596,
	598, 599, 597, 600, 0, 601, 0, 0, 602, 603,
	604, 660, 661, 662, 263, 606, 605, 607, 663, 0,
	0, 0, 0, 0, 608, 609, 664, 610, 611, 612,
	0, 269, 271, 270, 272, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 613, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 614, 615, 0, 287, 616, 288, 617, 0, 618,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	619, 620, 621, 0, 296, 297, 622, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 623, 624, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 625, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 626, 627, 359, 0, 266,
	0, 0, 0, 0, 0, 360, 361, 362, 628, 0,
	0, 0, 363, 0, 364, 0, 0, 0, 365, 366,
	629, 630, 367, 368, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 631, 0, 632, 377, 0, 378, 379,
	380, 381, 382, 633, 634, 635, 459, 0, 383, 384,
	0, 385, 386, 387, 388, 0, 0, 0, 267, 389,
	390, 391, 393, 0, 0, 392, 636, 637, 0, 638,
	0, 394, 395, 0, 639, 0, 396, 397, 398, 0,
	399, 0, 0, 0, 400, 401, 402, 403, 404, 405,
	0, 406, 408, 407, 0, 409, 640, 0, 410, 411,
	0, 0, 412, 0, 0, 0, 413, 414, 417, 0,
	0, 415, 416, 418, 419, 0, 420, 421, 423, 426,
	422, 424, 425, 427, 440, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 442, 0, 441,
	0, 443, 444, 445, 450, 452, 453, 448, 449, 451,
	454, 455, 447, 0, 446, 0, 268, 0, 456, 457,
	0, 641, 458, 642, 460, 461, 0, 0, 462, 0,
	0, 1201, 464, 465, 466, 0, 0, 467, 468, 643,
	0, 469, 0, 644, 470, 471, 463, 472, 473, 474,
	475, 476, 477, 478, 479, 0, 480, 481, 645, 482,
	483, 484, 646, 485, 486, 487, 647, 488, 648, 489,
	490, 0, 491, 492, 0, 493, 494, 495, 496, 497,
	498, 499, 649, 500, 502, 501, 503, 0, 504, 0,
	505, 506, 507, 0, 0, 0, 0, 508, 0, 510,
	511, 512, 513, 509, 514, 515, 516, 517, 0, 518,
	519, 520, 0, 521, 522, 523, 524, 650, 525, 0,
	526, 527, 533, 534, 528, 529, 535, 536, 537, 538,
	539, 0, 541, 542, 540, 543, 544, 545, 0, 546,
	547, 530, 531, 548, 549, 0, 550, 551, 552, 553,
	554, 555, 651, 0, 556, 0, 557, 558, 559, 561,
	532, 562, 567, 568, 652, 563, 564, 565, 566, 653,
	570, 571, 0, 572, 573, 0, 569, 560, 0, 574,
	575, 576, 577, 578, 579, 580, 353, 581, 0, 582,
	654, 655, 656, 657, 0, 591, 0, 583, 584, 585,
	658, 586, 659, 0, 587, 588, 589, 590, 0, 592,
	593, 0, 0, 594, 595, 596, 598, 599, 597, 600,
	0, 601, 0, 0, 602, 603, 604, 660, 661, 662,
	263, 606, 605, 607, 663, 0, 0, 0, 0, 0,
	608, 609, 664, 610, 611, 612, 0, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 613, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 614, 615, 0,
	287, 616, 288, 617, 0, 618, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 619, 620, 621, 0,
	296, 297, 622, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 623, 624, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	625, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 626, 627, 359, 0, 266, 0, 0, 0, 0,
	0, 360, 361, 362, 628, 0, 0, 0, 363, 0,
	364, 0, 0, 0, 365, 366, 629, 630, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 631,
	0, 632, 377, 0, 378, 379, 380, 381, 382, 633,
	634, 635, 459, 0, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 267, 389, 390, 391, 393, 0,
	0, 392, 636, 637, 0, 638, 0, 394, 395, 0,
	639, 0, 396, 397, 398, 0, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 640, 0, 410, 411, 0, 0, 412, 0,
	0, 0, 413, 414, 417, 0, 0, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 0, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 3347,
	446, 0, 268, 0, 456, 457, 0, 641, 458, 642,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 0, 469, 0, 644,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 647, 488, 648, 489, 490, 0, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 649, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 0, 521,
	522, 523, 524, 650, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 0, 541, 542,
	540, 543, 544, 545, 0, 546, 547, 530, 531, 548,
	549, 0, 550, 551, 552, 553, 554, 555, 651, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	652, 563, 564, 565, 566, 653, 570, 571, 0, 572,
	573, 0, 569, 560, 0, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 654, 655, 656, 657,
	0, 591, 0, 583, 584, 585, 658, 586, 659, 0,
	587, 588, 589, 590, 0, 592, 593, 0, 0, 594,
	595, 596, 598, 599, 597, 600, 0, 601, 0, 0,
	602, 603, 604, 660, 661, 662, 0, 606, 605, 607,
	663, 2879, 0, 263, 0, 0, 608, 609, 664, 610,
	611, 612, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 271, 270, 272, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 613, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	614, 615, 0, 287, 616, 288, 617, 0, 618, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 619,
	620, 621, 0, 296, 297, 622, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 623, 624, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 625, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 626, 627, 359, 0, 266, 0,
	0, 0, 0, 0, 360, 361, 362, 628, 0, 0,
	0, 363, 0, 364, 0, 0, 0, 365, 366, 629,
	630, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 631, 0, 632, 377, 0, 378, 379, 380,
	381, 382, 2878, 634, 635, 459, 0, 383, 384, 0,
	385, 386, 387, 388, 0, 0, 0, 267, 389, 390,
	391, 393, 0, 0, 392, 636, 637, 0, 638, 0,
	394, 395, 0, 639, 0, 396, 397, 398, 0, 399,
	0, 0, 0, 400, 401, 402, 403, 404, 405, 0,
	406, 408, 407, 0, 409, 640, 0, 410, 411, 0,
	0, 412, 0, 0, 0, 413, 414, 417, 0, 0,
	415, 416, 418, 419, 0, 420, 421, 423, 426, 422,
	424, 425, 427, 440, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 442, 0, 441, 0,
	443, 444, 445, 450, 452, 453, 448, 449, 451, 454,
	455, 447, 0, 446, 0, 268, 0, 456, 457, 0,
	641, 458, 642, 460, 461, 0, 0, 462, 0, 0,
	0, 464, 465, 466, 0, 0, 467, 468, 643, 0,
	469, 0, 644, 470, 471, 463, 472, 473, 474, 475,
	476, 477, 478, 479, 0, 480, 481, 645, 482, 483,
	484, 646, 485, 486, 487, 647, 488, 648, 489, 490,
	0, 491, 492, 0, 493, 494, 495, 496, 497, 498,
	499, 649, 500, 502, 501, 503, 0, 504, 0, 505,
	506, 507, 0, 0, 0, 0, 508, 0, 510, 511,
	512, 513, 509, 514, 515, 516, 517, 0, 518, 519,
	520, 0, 521, 522, 523, 524, 650, 525, 0, 526,
	527, 533, 534, 528, 529, 535, 536, 537, 538, 539,
	0, 541, 542, 540, 543, 544, 545, 0, 546, 547,
	530, 531, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 651, 0, 556, 0, 557, 558, 559, 561, 532,
	562, 567, 568, 652, 563, 564, 565, 566, 653, 570,
	571, 0, 572, 573, 0, 569, 560, 0, 574, 575,
	576, 577, 578, 579, 580, 353, 581, 0, 582, 654,
	655, 656, 657, 0, 591, 0, 583, 584, 585, 658,
	586, 659, 0, 587, 588, 589, 590, 0, 592, 593,
	0, 0, 594, 595, 596, 598, 599, 597, 600, 0,
	601, 0, 0, 602, 603, 604, 660, 661, 662, 0,
	606, 605, 607, 663, 2241, 0, 263, 0, 0, 608,
	609, 664, 610, 611, 612, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 271, 270, 272, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 613,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 614, 615, 0, 287, 616, 288, 617,
	0, 618, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 619, 620, 621, 0, 296, 297, 622, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 623, 624, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 625, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 626, 627, 359,
	0, 266, 0, 0, 0, 0, 0, 360, 361, 362,
	628, 0, 0, 0, 363, 0, 364, 0, 0, 0,
	365, 366, 629, 630, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 631, 0, 632, 377, 0,
	378, 379, 380, 381, 382, 633, 634, 635, 459, 0,
	383, 384, 0, 385, 386, 387, 388, 0, 0, 0,
	267, 389, 390, 391, 393, 0, 0, 392, 636, 637,
	0, 638, 0, 394, 395, 0, 639, 0, 396, 397,
	398, 0, 399, 0, 0, 0, 400, 401, 402, 403,
	404, 405, 0, 406, 408, 407, 0, 409, 640, 0,
	410, 411, 0, 0, 412, 0, 0, 0, 413, 414,
	417, 0, 0, 415, 416, 418, 419, 0, 420, 421,
	423, 426, 422, 424, 425, 427, 440, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 442,
	0, 441, 0, 443, 444, 445, 450, 452, 453, 448,
	449, 451, 454, 455, 447, 0, 446, 0, 268, 0,
	456, 457, 0, 641, 458, 642, 460, 461, 0, 0,
	462, 0, 0, 0, 464, 465, 466, 0, 0, 467,
	468, 643, 0, 469, 0, 644, 470, 471, 463, 472,
	473, 474, 475, 476, 477, 478, 479, 0, 480, 481,
	645, 482, 483, 484, 646, 485, 486, 487, 647, 488,
	648, 489, 490, 0, 491, 492, 0, 493, 494, 495,
	496, 497, 498, 499, 649, 500, 502, 501, 503, 0,
	504, 0, 505, 506, 507, 0, 0, 0, 0, 508,
	0, 510, 511, 512, 513, 509, 514, 515, 516, 517,
	0, 518, 519, 520, 0, 521, 522, 523, 524, 650,
	525, 0, 526, 527, 533, 534, 528, 529, 535, 536,
	537, 538, 539, 0, 541, 542, 540, 543, 544, 545,
	0, 546, 547, 530, 531, 548, 549, 0, 550, 551,
	552, 553, 554, 555, 651, 0, 556, 0, 557, 558,
	559, 561, 532, 562, 567, 568, 652, 563, 564, 565,
	566, 653, 570, 571, 0, 572, 573, 0, 569, 560,
	0, 574, 575, 576, 577, 578, 579, 580, 353, 581,
	0, 582, 654, 655, 656, 657, 0, 591, 0, 583,
	584, 585, 658, 586, 659, 0, 587, 588, 589, 590,
	0, 592, 593, 0, 0, 594, 595, 596, 598, 599,
	597, 600, 0, 601, 0, 0, 602, 603, 604, 660,
	661, 662, 263, 606, 605, 607, 663, 0, 0, 0,
	0, 0, 608, 609, 664, 610, 611, 612, 0, 269,
	271, 270, 272, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 613, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 614,
	615, 0, 287, 616, 288, 617, 0, 618, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 619, 620,
	621, 0, 296, 297, 622, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 623, 624, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 625, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 626, 627, 359, 0, 266, 0, 0,
	0, 0, 0, 360, 361, 362, 628, 0, 0, 0,
	363, 0, 364, 0, 0, 0, 365, 366, 629, 630,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 631, 0, 632, 377, 0, 378, 379, 380, 381,
	382, 633, 634, 635, 459, 0, 383, 384, 0, 385,
	386, 387, 388, 0, 0, 0, 267, 389, 390, 391,
	393, 0, 0, 392, 636, 637, 0, 638, 0, 394,
	395, 0, 639, 0, 396, 397, 398, 0, 399, 0,
	0, 0, 400, 401, 402, 403, 404, 405, 0, 406,
	408, 407, 0, 409, 640, 0, 410, 411, 0, 0,
	412, 0, 0, 0, 413, 414, 417, 0, 0, 415,
	416, 418, 419, 0, 420, 421, 423, 426, 422, 424,
	425, 427, 440, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 442, 0, 441, 0, 443,
	444, 445, 450, 452, 453, 448, 449, 451, 454, 455,
	447, 0, 446, 0, 268, 0, 456, 457, 0, 641,
	458, 642, 460, 461, 0, 0, 462, 0, 0, 0,
	464, 465, 466, 0, 0, 467, 468, 643, 0, 469,
	0, 644, 470, 471, 463, 472, 473, 474, 475, 476,
	477, 478, 479, 0, 480, 481, 645, 482, 483, 484,
	646, 485, 486, 487, 647, 488, 648, 489, 490, 0,
	491, 492, 0, 493, 494, 495, 496, 497, 498, 499,
	649, 500, 502, 501, 503, 0, 504, 0, 505, 506,
	507, 0, 0, 0, 0, 508, 0, 510, 511, 512,
	513, 509, 514, 515, 516, 517, 0, 518, 519, 520,
	0, 521, 522, 523, 524, 650, 525, 0, 526, 527,
	533, 534, 528, 529, 535, 536, 537, 538, 539, 0,
	541, 542, 540, 543, 544, 545, 0, 546, 547, 530,
	531, 548, 549, 0, 550, 551, 552, 553, 554, 555,
	651, 0, 556, 0, 557, 558, 559, 561, 532, 562,
	567, 568, 652, 563, 564, 565, 566, 653, 570, 571,
	0, 572, 573, 0, 569, 560, 2182, 574, 575, 576,
	577, 578, 579, 580, 353, 581, 0, 582, 654, 655,
	656, 657, 0, 591, 0, 583, 584, 585, 658, 586,
	659, 0, 587, 588, 589, 590, 0, 592, 593, 0,
	0, 594, 595, 596, 598, 599, 597, 600, 0, 601,
	0, 0, 602, 603, 604, 660, 661, 662, 0, 606,
	605, 607, 663, 2189, 0, 263, 0, 0, 608, 609,
	664, 610, 611, 612, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 271, 270, 272, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 613, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 614, 615, 0, 287, 616, 288, 617, 0,
	618, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 619, 620, 621, 0, 296, 297, 622, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 623, 624, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 625, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 626, 627, 359, 0,
	266, 0, 0, 0, 0, 0, 360, 361, 362, 628,
	0, 0, 0, 363, 0, 364, 0, 0, 0, 365,
	366, 629, 630, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 631, 0, 632, 377, 0, 378,
	379, 380, 381, 382, 2188, 634, 635, 459, 0, 383,
	384, 0, 385, 386, 387, 388, 0, 0, 0, 267,
	389, 390, 391, 393, 0, 0, 392, 636, 637, 0,
	638, 0, 394, 395, 0, 639, 0, 396, 397, 398,
	0, 399, 0, 0, 0, 400, 401, 402, 403, 404,
	405, 0, 406, 408, 407, 0, 409, 640, 0, 410,
	411, 0, 0, 412, 0, 0, 0, 413, 414, 417,
	0, 0, 415, 416, 418, 419, 0, 420, 421, 423,
	426, 422, 424, 425, 427, 440, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 442, 0,
	441, 0, 443, 444, 445, 450, 452, 453, 448, 449,
	451, 454, 455, 447, 0, 446, 0, 268, 0, 456,
	457, 0, 641, 458, 642, 460, 461, 0, 0, 462,
	0, 0, 0, 464, 465, 466, 0, 0, 467, 468,
	643, 0, 469, 0, 644, 470, 471, 463, 472, 473,
	474, 475, 476, 477, 478, 479, 0, 480, 481, 645,
	482, 483, 484, 646, 485, 486, 487, 647, 488, 648,
	489, 490, 0, 491, 492, 0, 493, 494, 495, 496,
	497, 498, 499, 649, 500, 502, 501, 503, 0, 504,
	0, 505, 506, 507, 0, 0, 0, 0, 508, 0,
	510, 511, 512, 513, 509, 514, 515, 516, 517, 0,
	518, 519, 520, 0, 521, 522, 523, 524, 650, 525,
	0, 526, 527, 533, 534, 528, 529, 535, 536, 537,
	538, 539, 0, 541, 542, 540, 543, 544, 545, 0,
	546, 547, 530, 531, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 651, 0, 556, 0, 557, 558, 559,
	561, 532, 562, 567, 568, 652, 563, 564, 565, 566,
	653, 570, 571, 0, 572, 573, 0, 569, 560, 0,
	574, 575, 576, 577, 578, 579, 580, 353, 581, 0,
	582, 654, 655, 656, 657, 0, 591, 0, 583, 584,
	585, 658, 586, 659, 0, 587, 588, 589, 590, 0,
	592, 593, 0, 0, 594, 595, 596, 598, 599, 597,
	600, 0, 601, 0, 0, 602, 603, 604, 660, 661,
	662, 0, 606, 605, 607, 663, 2175, 0, 263, 0,
	0, 608, 609, 664, 610, 611, 612, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 271, 270, 272, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 613, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 614, 615, 0, 287, 616,
	288, 617, 0, 618, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 619, 620, 621, 0, 296, 297,
	622, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 623,
	624, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 625, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 626,
	627, 359, 0, 266, 0, 0, 0, 0, 0, 360,
	361, 362, 628, 0, 0, 0, 363, 0, 364, 0,
	0, 0, 365, 366, 629, 630, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 631, 0, 632,
	377, 0, 378, 379, 380, 381, 382, 2177, 634, 635,
	459, 0, 383, 384, 0, 385, 386, 387, 388, 0,
	0, 0, 267, 389, 390, 391, 393, 0, 0, 392,
	636, 637, 0, 638, 0, 394, 395, 0, 639, 0,
	396, 397, 398, 0, 399, 0, 0, 0, 400, 401,
	402, 403, 404, 405, 0, 406, 408, 407, 0, 409,
	640, 0, 410, 411, 0, 0, 412, 0, 0, 0,
	413, 414, 417, 0, 0, 415, 416, 418, 419, 0,
	420, 421, 423, 426, 422, 424, 425, 427, 440, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 442, 0, 441, 0, 443, 444, 445, 450, 452,
	453, 448, 449, 451, 454, 455, 447, 0, 446, 0,
	268, 0, 456, 457, 0, 641, 458, 642, 460, 461,
	0, 0, 462, 0, 0, 0, 464, 465, 466, 0,
	0, 467, 468, 643, 0, 469, 0, 644, 470, 471,
	463, 472, 473, 474, 475, 476, 477, 478, 479, 0,
	480, 481, 645, 482, 483, 484, 646, 485, 486, 487,
	647, 488, 648, 489, 490, 0, 491, 492, 0, 493,
	494, 495, 496, 497, 498, 499, 649, 500, 502, 501,
	503, 0, 504, 0, 505, 506, 507, 0, 0, 0,
	0, 508, 0, 510, 511, 512, 513, 509, 514, 515,
	516, 517, 0, 518, 519, 520, 0, 521, 522, 523,
	524, 650, 525, 0, 526, 527, 533, 534, 528, 529,
	535, 536, 537, 538, 539, 0, 541, 542, 540, 543,
	544, 545, 0, 546, 547, 530, 531, 548, 549, 0,
	550, 551, 552, 553, 554, 555, 651, 0, 556, 0,
	557, 558, 559, 561, 532, 562, 567, 568, 652, 563,
	564, 565, 566, 653, 570, 571, 0, 572, 573, 0,
	569, 560, 0, 574, 575, 576, 577, 578, 579, 580,
	353, 581, 0, 582, 654, 655, 656, 657, 0, 591,
	0, 583, 584, 585, 658, 586, 659, 0, 587, 588,
	589, 590, 0, 592, 593, 0, 0, 594, 595, 596,
	598, 599, 597, 600, 0, 601, 0, 0, 602, 603,
	604, 660, 661, 662, 263, 606, 605, 607, 663, 0,
	0, 0, 0, 0, 608, 609, 664, 610, 611, 612,
	0, 269, 271, 270, 272, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 613, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 614, 615, 0, 287, 616, 288, 617, 0, 618,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	619, 620, 621, 0, 296, 297, 622, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 623, 624, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 625, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 626, 627, 359, 0, 266,
	0, 0, 0, 0, 0, 360, 361, 362, 628, 0,
	0, 0, 363, 0, 364, 0, 0, 0, 365, 366,
	629, 630, 367, 368, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 631, 0, 632, 377, 0, 378, 379,
	380, 381, 382, 2145, 634, 635, 459, 0, 383, 384,
	0, 385, 386, 387, 388, 0, 0, 0, 267, 389,
	390, 391, 393, 0, 0, 392, 636, 637, 0, 638,
	0, 394, 395, 0, 639, 0, 396, 397, 398, 0,
	399, 0, 0, 0, 400, 401, 402, 403, 404, 405,
	0, 406, 408, 407, 0, 409, 640, 0, 410, 411,
	0, 0, 412, 0, 0, 0, 413, 414, 417, 0,
	0, 415, 416, 418, 419, 0, 420, 421, 423, 426,
	422, 424, 425, 427, 440, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 442, 0, 441,
	0, 443, 444, 445, 450, 452, 453, 448, 449, 451,
	454, 455, 447, 0, 446, 0, 268, 0, 456, 457,
	0, 641, 458, 642, 460, 461, 0, 0, 462, 0,
	0, 1201, 464, 465, 466, 0, 0, 467, 468, 643,
	0, 469, 0, 644, 470, 471, 463, 472, 473, 474,
	475, 476, 477, 478, 479, 0, 480, 481, 645, 482,
	483, 484, 646, 485, 486, 487, 647, 488, 648, 489,
	490, 0, 491, 492, 0, 493, 494, 495, 496, 497,
	498, 499, 649, 500, 502, 501, 503, 0, 504, 0,
	505, 506, 507, 0, 0, 0, 0, 508, 0, 510,
	511, 512, 513, 509, 514, 515, 516, 517, 0, 518,
	519, 520, 0, 521, 522, 523, 524, 650, 525, 0,
	526, 527, 533, 534, 528, 529, 535, 536, 537, 538,
	539, 0, 541, 542, 540, 543, 544, 545, 0, 546,
	547, 530, 531, 548, 549, 0, 550, 551, 552, 553,
	554, 555, 651, 0, 556, 0, 557, 558, 559, 561,
	532, 562, 567, 568, 652, 563, 564, 565, 566, 653,
	570, 571, 0, 572, 573, 0, 569, 560, 0, 574,
	575, 576, 577, 578, 579, 580, 353, 581, 0, 582,
	654, 655, 656, 657, 0, 591, 0, 583, 584, 585,
	658, 586, 659, 0, 587, 588, 589, 590, 0, 592,
	593, 0, 0, 594, 595, 596, 598, 599, 597, 600,
	0, 601, 0, 0, 602, 603, 604, 660, 661, 662,
	0, 606, 605, 607, 663, 1534, 0, 263, 0, 0,
	608, 609, 664, 610, 611, 612, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 271, 270, 272, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	613, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 614, 615, 0, 287, 616, 288,
	617, 0, 618, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 619, 620, 621, 0, 296, 297, 622,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 623, 624,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 625, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 626, 627,
	359, 0, 266, 0, 0, 0, 0, 0, 360, 361,
	362, 628, 0, 0, 0, 363, 0, 364, 0, 0,
	0, 365, 366, 629, 630, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 631, 0, 632, 377,
	0, 378, 379, 380, 381, 382, 1533, 634, 635, 459,
	0, 383, 384, 0, 385, 386, 387, 388, 0, 0,
	0, 267, 389, 390, 391, 393, 0, 0, 392, 636,
	637, 0, 638, 0, 394, 395, 0, 639, 0, 396,
	397, 398, 0, 399, 0, 0, 0, 400, 401, 402,
	403, 404, 405, 0, 406, 408, 407, 0, 409, 640,
	0, 410, 411, 0, 0, 412, 0, 0, 0, 413,
	414, 417, 0, 0, 415, 416, 418, 419, 0, 420,
	421, 423, 426, 422, 424, 425, 427, 440, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	442, 0, 441, 0, 443, 444, 445, 450, 452, 453,
	448, 449, 451, 454, 455, 447, 0, 446, 0, 268,
	0, 456, 457, 0, 641, 458, 642, 460, 461, 0,
	0, 462, 0, 0, 0, 464, 465, 466, 0, 0,
	467, 468, 643, 0, 469, 0, 644, 470, 471, 463,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 480,
	481, 645, 482, 483, 484, 646, 485, 486, 487, 647,
	488, 648, 489, 490, 0, 491, 492, 0, 493, 494,
	495, 496, 497, 498, 499, 649, 500, 502, 501, 503,
	0, 504, 0, 505, 506, 507, 0, 0, 0, 0,
	508, 0, 510, 511, 512, 513, 509, 514, 515, 516,
	517, 0, 518, 519, 520, 0, 521, 522, 523, 524,
	650, 525, 0, 526, 527, 533, 534, 528, 529, 535,
	536, 537, 538, 539, 0, 541, 542, 540, 543, 544,
	545, 0, 546, 547, 530, 531, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 651, 0, 556, 0, 557,
	558, 559, 561, 532, 562, 567, 568, 652, 563, 564,
	565, 566, 653, 570, 571, 0, 572, 573, 0, 569,
	560, 0, 574, 575, 576, 577, 578, 579, 580, 353,
	581, 0, 582, 654, 655, 656, 657, 0, 591, 0,
	583, 584, 585, 658, 586, 659, 0, 587, 588, 589,
	590, 0, 592, 593, 0, 0, 594, 595, 596, 598,
	599, 597, 600, 0, 601, 0, 0, 602, 603, 604,
	660, 661, 662, 0, 606, 605, 607, 663, 1453, 0,
	263, 0, 0, 608, 609, 664, 610, 611, 612, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 613, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 614, 615, 0,
	287, 616, 288, 617, 0, 618, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 619, 620, 621, 0,
	296, 297, 622, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 623, 624, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	625, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 626, 627, 359, 0, 266, 0, 0, 0, 0,
	0, 360, 361, 362, 628, 0, 0, 0, 363, 0,
	364, 0, 0, 0, 365, 366, 629, 630, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 631,
	0, 632, 377, 0, 378, 379, 380, 381, 382, 633,
	634, 635, 459, 0, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 267, 389, 390, 391, 393, 0,
	0, 392, 636, 637, 0, 638, 0, 394, 395, 0,
	639, 0, 396, 397, 398, 0, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 640, 0, 410, 411, 0, 0, 412, 0,
	0, 0, 413, 414, 417, 0, 0, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 0, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 0,
	446, 0, 268, 0, 456, 457, 0, 641, 458, 642,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 0, 469, 0, 644,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 647, 488, 648, 489, 490, 0, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 649, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 0, 521,
	522, 523, 524, 650, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 0, 541, 542,
	540, 543, 544, 545, 0, 546, 547, 530, 531, 548,
	549, 0, 550, 551, 552, 553, 554, 555, 651, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	652, 563, 564, 565, 566, 653, 570, 571, 0, 572,
	573, 0, 569, 560, 0, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 654, 655, 656, 657,
	0, 591, 0, 583, 584, 585, 658, 586, 659, 0,
	587, 588, 589, 590, 0, 592, 593, 0, 0, 594,
	595, 596, 598, 599, 597, 600, 0, 601, 0, 0,
	602, 603, 604, 660, 661, 662, 0, 606, 605, 607,
	663, 1446, 0, 263, 0, 0, 608, 609, 664, 610,
	611, 612, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 271, 270, 272, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 613, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	614, 615, 0, 287, 616, 288, 617, 0, 618, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 619,
	620, 621, 0, 296, 297, 622, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 623, 624, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 625, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 626, 627, 359, 0, 266, 0,
	0, 0, 0, 0, 360, 361, 362, 628, 0, 0,
	0, 363, 0, 364, 0, 0, 0, 365, 366, 629,
	630, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 631, 0, 632, 377, 0, 378, 379, 380,
	381, 382, 1448, 634, 635, 459, 0, 383, 384, 0,
	385, 386, 387, 388, 0, 0, 0, 267, 389, 390,
	391, 393, 0, 0, 392, 636, 637, 0, 638, 0,
	394, 395, 0, 639, 0, 396, 397, 398, 0, 399,
	0, 0, 0, 400, 401, 402, 403, 404, 405, 0,
	406, 408, 407, 0, 409, 640, 0, 410, 411, 0,
	0, 412, 0, 0, 0, 413, 414, 417, 0, 0,
	415, 416, 418, 419, 0, 420, 421, 423, 426, 422,
	424, 425, 427, 440, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 442, 0, 441, 0,
	443, 444, 445, 450, 452, 453, 448, 449, 451, 454,
	455, 447, 0, 446, 0, 268, 0, 456, 457, 0,
	641, 458, 642, 460, 461, 0, 0, 462, 0, 0,
	0, 464, 465, 466, 0, 0, 467, 468, 643, 0,
	469, 0, 644, 470, 471, 463, 472, 473, 474, 475,
	476, 477, 478, 479, 0, 480, 481, 645, 482, 483,
	484, 646, 485, 486, 487, 647, 488, 648, 489, 490,
	0, 491, 492, 0, 493, 494, 495, 496, 497, 498,
	499, 649, 500, 502, 501, 503, 0, 504, 0, 505,
	506, 507, 0, 0, 0, 0, 508, 0, 510, 511,
	512, 513, 509, 514, 515, 516, 517, 0, 518, 519,
	520, 0, 521, 522, 523, 524, 650, 525, 0, 526,
	527, 533, 534, 528, 529, 535, 536, 537, 538, 539,
	0, 541, 542, 540, 543, 544, 545, 0, 546, 547,
	530, 531, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 651, 0, 556, 0, 557, 558, 559, 561, 532,
	562, 567, 568, 652, 563, 564, 565, 566, 653, 570,
	571, 0, 572, 573, 0, 569, 560, 0, 574, 575,
	576, 577, 578, 579, 580, 353, 581, 0, 582, 654,
	655, 656, 657, 0, 591, 0, 583, 584, 585, 658,
	586, 659, 0, 587, 588, 589, 590, 0, 592, 593,
	0, 0, 594, 595, 596, 598, 599, 597, 600, 0,
	601, 0, 0, 602, 603, 604, 660, 661, 662, 0,
	606, 605, 607, 663, 1273, 0, 263, 0, 0, 608,
	609, 664, 610, 611, 612, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 271, 270, 272, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 613,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 614, 615, 0, 287, 616, 288, 617,
	0, 618, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 619, 620, 621, 0, 296, 297, 622, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 623, 624, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 625, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 626, 627, 359,
	0, 266, 0, 0, 0, 0, 0, 360, 361, 362,
	628, 0, 0, 0, 363, 0, 364, 0, 0, 0,
	365, 366, 629, 630, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 631, 0, 632, 377, 0,
	378, 379, 380, 381, 382, 1272, 634, 635, 459, 0,
	383, 384, 0, 385, 386, 387, 388, 0, 0, 0,
	267, 389, 390, 391, 393, 0, 0, 392, 636, 637,
	0, 638, 0, 394, 395, 0, 639, 0, 396, 397,
	398, 0, 399, 0, 0, 0, 400, 401, 402, 403,
	404, 405, 0, 406, 408, 407, 0, 409, 640, 0,
	410, 411, 0, 0, 412, 0, 0, 0, 413, 414,
	417, 0, 0, 415, 416, 418, 419, 0, 420, 421,
	423, 426, 422, 424, 425, 427, 440, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 442,
	0, 441, 0, 443, 444, 445, 450, 452, 453, 448,
	449, 451, 454, 455, 447, 0, 446, 0, 268, 0,
	456, 457, 0, 641, 458, 642, 460, 461, 0, 0,
	462, 0, 0, 0, 464, 465, 466, 0, 0, 467,
	468, 643, 0, 469, 0, 644, 470, 471, 463, 472,
	473, 474, 475, 476, 477, 478, 479, 0, 480, 481,
	645, 482, 483, 484, 646, 485, 486, 487, 647, 488,
	648, 489, 490, 0, 491, 492, 0, 493, 494, 495,
	496, 497, 498, 499, 649, 500, 502, 501, 503, 0,
	504, 0, 505, 506, 507, 0, 0, 0, 0, 508,
	0, 510, 511, 512, 513, 509, 514, 515, 516, 517,
	0, 518, 519, 520, 0, 521, 522, 523, 524, 650,
	525, 0, 526, 527, 533, 534, 528, 529, 535, 536,
	537, 538, 539, 0, 541, 542, 540, 543, 544, 545,
	0, 546, 547, 530, 531, 548, 549, 0, 550, 551,
	552, 553, 554, 555, 651, 0, 556, 0, 557, 558,
	559, 561, 532, 562, 567, 568, 652, 563, 564, 565,
	566, 653, 570, 571, 0, 572, 573, 0, 569, 560,
	0, 574, 575, 576, 577, 578, 579, 580, 353, 581,
	0, 582, 654, 655, 656, 657, 0, 591, 0, 583,
	584, 585, 658, 586, 659, 0, 587, 588, 589, 590,
	0, 592, 593, 0, 0, 594, 595, 596, 598, 599,
	597, 600, 0, 601, 0, 0, 602, 603, 604, 660,
	661, 662, 0, 606, 605, 607, 663, 1263, 0, 263,
	0, 0, 608, 609, 664, 610, 611, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 613, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 614, 615, 0, 287,
	616, 288, 617, 0, 618, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 619, 620, 621, 0, 296,
	297, 622, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	623, 624, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 625,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	626, 627, 359, 0, 266, 0, 0, 0, 0, 0,
	360, 361, 362, 628, 0, 0, 0, 363, 0, 364,
	0, 0, 0, 365, 366, 629, 630, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 631, 0,
	632, 377, 0, 378, 379, 380, 381, 382, 1262, 634,
	635, 459, 0, 383, 384, 0, 385, 386, 387, 388,
	0, 0, 0, 267, 389, 390, 391, 393, 0, 0,
	392, 636, 637, 0, 638, 0, 394, 395, 0, 639,
	0, 396, 397, 398, 0, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 0, 406, 408, 407, 0,
	409, 640, 0, 410, 411, 0, 0, 412, 0, 0,
	0, 413, 414, 417, 0, 0, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 0, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 0, 446,
	0, 268, 0, 456, 457, 0, 641, 458, 642, 460,
	461, 0, 0, 462, 0, 0, 0, 464, 465, 466,
	0, 0, 467, 468, 643, 0, 469, 0, 644, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 647, 488, 648, 489, 490, 0, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 649, 500, 502,
	501, 503, 0, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 0, 518, 519, 520, 0, 521, 522,
	523, 524, 650, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 0, 541, 542, 540,
	543, 544, 545, 0, 546, 547, 530, 531, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 651, 0, 556,
	0, 557, 558, 559, 561, 532, 562, 567, 568, 652,
	563, 564, 565, 566, 653, 570, 571, 0, 572, 573,
	0, 569, 560, 0, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 0, 582, 654, 655, 656, 657, 0,
	591, 0, 583, 584, 585, 658, 586, 659, 0, 587,
	588, 589, 590, 0, 592, 593, 0, 0, 594, 595,
	596, 598, 599, 597, 600, 0, 601, 0, 0, 602,
	603, 604, 660, 661, 662, 0, 606, 605, 607, 663,
	1260, 0, 263, 0, 0, 608, 609, 664, 610, 611,
	612, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	271, 270, 272, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 613, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 614,
	615, 0, 287, 616, 288, 617, 0, 618, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 619, 620,
	621, 0, 296, 297, 622, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 623, 624, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 625, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 626, 627, 359, 0, 266, 0, 0,
	0, 0, 0, 360, 361, 362, 628, 0, 0, 0,
	363, 0, 364, 0, 0, 0, 365, 366, 629, 630,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 631, 0, 632, 377, 0, 378, 379, 380, 381,
	382, 1259, 634, 635, 459, 0, 383, 384, 0, 385,
	386, 387, 388, 0, 0, 0, 267, 389, 390, 391,
	393, 0, 0, 392, 636, 637, 0, 638, 0, 394,
	395, 0, 639, 0, 396, 397, 398, 0, 399, 0,
	0, 0, 400, 401, 402, 403, 404, 405, 0, 406,
	408, 407, 0, 409, 640, 0, 410, 411, 0, 0,
	412, 0, 0, 0, 413, 414, 417, 0, 0, 415,
	416, 418, 419, 0, 420, 421, 423, 426, 422, 424,
	425, 427, 440, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 442, 0, 441, 0, 443,
	444, 445, 450, 452, 453, 448, 449, 451, 454, 455,
	447, 0, 446, 0, 268, 0, 456, 457, 0, 641,
	458, 642, 460, 461, 0, 0, 462, 0, 0, 0,
	464, 465, 466, 0, 0, 467, 468, 643, 0, 469,
	0, 644, 470, 471, 463, 472, 473, 474, 475, 476,
	477, 478, 479, 0, 480, 481, 645, 482, 483, 484,
	646, 485, 486, 487, 647, 488, 648, 489, 490, 0,
	491, 492, 0, 493, 494, 495, 496, 497, 498, 499,
	649, 500, 502, 501, 503, 0, 504, 0, 505, 506,
	507, 0, 0, 0, 0, 508, 0, 510, 511, 512,
	513, 509, 514, 515, 516, 517, 0, 518, 519, 520,
	0, 521, 522, 523, 524, 650, 525, 0, 526, 527,
	533, 534, 528, 529, 535, 536, 537, 538, 539, 0,
	541, 542, 540, 543, 544, 545, 0, 546, 547, 530,
	531, 548, 549, 0, 550, 551, 552, 553, 554, 555,
	651, 0, 556, 0, 557, 558, 559, 561, 532, 562,
	567, 568, 652, 563, 564, 565, 566, 653, 570, 571,
	0, 572, 573, 0, 569, 560, 0, 574, 575, 576,
	577, 578, 579, 580, 353, 581, 0, 582, 654, 655,
	656, 657, 0, 591, 0, 583, 584, 585, 658, 586,
	659, 0, 587, 588, 589, 590, 0, 592, 593, 0,
	0, 594, 595, 596, 598, 599, 597, 600, 0, 601,
	0, 0, 602, 603, 604, 660, 661, 662, 0, 606,
	605, 607, 663, 1255, 0, 263, 0, 0, 608, 609,
	664, 610, 611, 612, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 271, 270, 272, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 613, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 614, 615, 0, 287, 616, 288, 617, 0,
	618, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 619, 620, 621, 0, 296, 297, 622, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 623, 624, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 625, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 626, 627, 359, 0,
	266, 0, 0, 0, 0, 0, 360, 361, 362, 628,
	0, 0, 0, 363, 0, 364, 0, 0, 0, 365,
	366, 629, 630, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 631, 0, 632, 377, 0, 378,
	379, 380, 381, 382, 1254, 634, 635, 459, 0, 383,
	384, 0, 385, 386, 387, 388, 0, 0, 0, 267,
	389, 390, 391, 393, 0, 0, 392, 636, 637, 0,
	638, 0, 394, 395, 0, 639, 0, 396, 397, 398,
	0, 399, 0, 0, 0, 400, 401, 402, 403, 404,
	405, 0, 406, 408, 407, 0, 409, 640, 0, 410,
	411, 0, 0, 412, 0, 0, 0, 413, 414, 417,
	0, 0, 415, 416, 418, 419, 0, 420, 421, 423,
	426, 422, 424, 425, 427, 440, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 442, 0,
	441, 0, 443, 444, 445, 450, 452, 453, 448, 449,
	451, 454, 455, 447, 0, 446, 0, 268, 0, 456,
	457, 0, 641, 458, 642, 460, 461, 0, 0, 462,
	0, 0, 0, 464, 465, 466, 0, 0, 467, 468,
	643, 0, 469, 0, 644, 470, 471, 463, 472, 473,
	474, 475, 476, 477, 478, 479, 0, 480, 481, 645,
	482, 483, 484, 646, 485, 486, 487, 647, 488, 648,
	489, 490, 0, 491, 492, 0, 493, 494, 495, 496,
	497, 498, 499, 649, 500, 502, 501, 503, 0, 504,
	0, 505, 506, 507, 0, 0, 0, 0, 508, 0,
	510, 511, 512, 513, 509, 514, 515, 516, 517, 0,
	518, 519, 520, 0, 521, 522, 523, 524, 650, 525,
	0, 526, 527, 533, 534, 528, 529, 535, 536, 537,
	538, 539, 0, 541, 542, 540, 543, 544, 545, 0,
	546, 547, 530, 531, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 651, 0, 556, 0, 557, 558, 559,
	561, 532, 562, 567, 568, 652, 563, 564, 565, 566,
	653, 570, 571, 0, 572, 573, 0, 569, 560, 0,
	574, 575, 576, 577, 578, 579, 580, 353, 581, 0,
	582, 654, 655, 656, 657, 0, 591, 0, 583, 584,
	585, 658, 586, 659, 0, 587, 588, 589, 590, 0,
	592, 593, 0, 0, 594, 595, 596, 598, 599, 597,
	600, 0, 601, 0, 0, 602, 603, 604, 660, 661,
	662, 0, 606, 605, 607, 663, 666, 0, 263, 0,
	0, 608, 609, 664, 610, 611, 612, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 271, 270, 272, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 613, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 614, 615, 0, 287, 616,
	288, 617, 0, 618, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 619, 620, 621, 0, 296, 297,
	622, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 623,
	624, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 625, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 626,
	627, 359, 0, 266, 0, 0, 0, 0, 0, 360,
	361, 362, 628, 0, 0, 0, 363, 0, 364, 0,
	0, 0, 365, 366, 629, 630, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 631, 0, 632,
	377, 0, 378, 379, 380, 381, 382, 633, 634, 635,
	459, 0, 383, 384, 0, 385, 386, 387, 388, 0,
	0, 0, 267, 389, 390, 391, 393, 0, 0, 392,
	636, 637, 0, 638, 0, 394, 395, 0, 639, 0,
	396, 397, 398, 0, 399, 0, 0, 0, 400, 401,
	402, 403, 404, 405, 0, 406, 408, 407, 0, 409,
	640, 0, 410, 411, 0, 0, 412, 0, 0, 0,
	413, 414, 417, 0, 0, 415, 416, 418, 419, 0,
	420, 421, 423, 426, 422, 424, 425, 427, 440, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 442, 0, 441, 0, 443, 444, 445, 450, 452,
	453, 448, 449, 451, 454, 455, 447, 0, 446, 0,
	268, 0, 456, 457, 0, 641, 458, 642, 460, 461,
	0, 0, 462, 0, 0, 0, 464, 465, 466, 0,
	0, 467, 468, 643, 0, 469, 0, 644, 470, 471,
	463, 472, 473, 474, 475, 476, 477, 478, 479, 0,
	480, 481, 645, 482, 483, 484, 646, 485, 486, 487,
	647, 488, 648, 489, 490, 0, 491, 492, 0, 493,
	494, 495, 496, 497, 498, 499, 649, 500, 502, 501,
	503, 0, 504, 0, 505, 506, 507, 0, 0, 0,
	0, 508, 0, 510, 511, 512, 513, 509, 514, 515,
	516, 517, 0, 518, 519, 520, 0, 521, 522, 523,
	524, 650, 525, 0, 526, 527, 533, 534, 528, 529,
	535, 536, 537, 538, 539, 0, 541, 542, 540, 543,
	544, 545, 0, 546, 547, 530, 531, 548, 549, 0,
	550, 551, 552, 553, 554, 555, 651, 0, 556, 0,
	557, 558, 559, 561, 532, 562, 567, 568, 652, 563,
	564, 565, 566, 653, 570, 571, 0, 572, 573, 0,
	569, 560, 0, 574, 575, 576, 577, 578, 579, 580,
	353, 581, 0, 582, 654, 655, 656, 657, 0, 591,
	0, 583, 584, 585, 658, 586, 659, 0, 587, 588,
	589, 590, 0, 592, 593, 0, 0, 594, 595, 596,
	598, 599, 597, 600, 0, 601, 0, 0, 602, 603,
	604, 660, 661, 662, 0, 606, 605, 607, 663, 254,
	0, 263, 0, 0, 608, 609, 664, 610, 611, 612,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 271,
	270, 272, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 613, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 614, 615,
	0, 287, 616, 288, 617, 0, 618, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 619, 620, 621,
	0, 296, 297, 622, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 623, 624, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 625, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 626, 627, 359, 0, 266, 0, 0, 0,
	0, 0, 360, 361, 362, 628, 0, 0, 0, 363,
	0, 364, 0, 0, 0, 365, 366, 629, 630, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	631, 0, 632, 377, 0, 378, 379, 380, 381, 382,
	633, 634, 635, 459, 0, 383, 384, 0, 385, 386,
	387, 388, 0, 0, 0, 267, 389, 390, 391, 393,
	0, 0, 392, 636, 637, 0, 638, 0, 394, 395,
	0, 639, 0, 396, 397, 398, 0, 399, 0, 0,
	0, 400, 401, 402, 403, 404, 405, 0, 406, 408,
	407, 0, 409, 640, 0, 410, 411, 0, 0, 412,
	0, 0, 0, 413, 414, 417, 0, 0, 415, 416,
	418, 419, 0, 420, 421, 423, 426, 422, 424, 425,
	427, 440, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 442, 0, 441, 0, 443, 444,
	445, 450, 452, 453, 448, 449, 451, 454, 455, 447,
	0, 446, 0, 268, 0, 456, 457, 0, 641, 458,
	642, 460, 461, 0, 0, 462, 0, 0, 0, 464,
	465, 466, 0, 0, 467, 468, 643, 0, 469, 0,
	644, 470, 471, 463, 472, 473, 474, 475, 476, 477,
	478, 479, 0, 480, 481, 645, 482, 483, 484, 646,
	485, 486, 487, 647, 488, 648, 489, 490, 0, 491,
	492, 0, 493, 494, 495, 496, 497, 498, 499, 649,
	500, 502, 501, 503, 0, 504, 0, 505, 506, 507,
	0, 0, 0, 0, 508, 0, 510, 511, 512, 513,
	509, 514, 515, 516, 517, 0, 518, 519, 520, 0,
	521, 522, 523, 524, 650, 525, 0, 526, 527, 533,
	534, 528, 529, 535, 536, 537, 538, 539, 0, 541,
	542, 540, 543, 544, 545, 0, 546, 547, 530, 531,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 651,
	0, 556, 0, 557, 558, 559, 561, 532, 562, 567,
	568, 652, 563, 564, 565, 566, 653, 570, 571, 0,
	572, 573, 0, 569, 560, 0, 574, 575, 576, 577,
	578, 579, 580, 353, 581, 0, 582, 654, 655, 656,
	657, 0, 591, 0, 583, 584, 585, 658, 586, 659,
	0, 587, 588, 589, 590, 0, 592, 593, 0, 0,
	594, 595, 596, 598, 599, 597, 600, 0, 601, 0,
	0, 602, 603, 604, 660, 661, 662, 263, 606, 605,
	607, 663, 0, 0, 0, 0, 0, 608, 609, 664,
	610, 611, 612, 0, 269, 271, 270, 272, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	613, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 614, 615, 0, 287, 616, 288,
	617, 0, 618, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 619, 620, 621, 0, 296, 297, 622,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 623, 624,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 625, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 626, 627,
	359, 0, 266, 0, 0, 0, 0, 0, 360, 361,
	362, 628, 0, 0, 0, 363, 0, 364, 0, 0,
	0, 365, 366, 629, 630, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 631, 0, 632, 377,
	0, 378, 379, 380, 381, 382, 633, 634, 635, 459,
	0, 383, 384, 0, 385, 386, 387, 388, 0, 0,
	0, 267, 389, 390, 391, 393, 0, 0, 392, 636,
	637, 0, 638, 0, 394, 395, 0, 639, 0, 396,
	397, 398, 0, 399, 0, 0, 0, 400, 401, 402,
	403, 404, 405, 0, 406, 408, 407, 0, 409, 640,
	0, 410, 411, 0, 0, 412, 0, 0, 0, 413,
	414, 417, 0, 0, 415, 416, 418, 419, 0, 420,
	421, 423, 426, 422, 424, 425, 427, 440, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	442, 0, 441, 0, 443, 444, 445, 450, 452, 453,
	448, 449, 451, 454, 455, 447, 0, 446, 0, 268,
	0, 456, 457, 0, 641, 458, 642, 460, 461, 0,
	0, 462, 0, 0, 0, 464, 465, 466, 0, 0,
	467, 468, 643, 0, 469, 0, 644, 470, 471, 463,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 480,
	481, 645, 482, 483, 484, 646, 485, 486, 487, 647,
	488, 648, 489, 490, 0, 491, 492, 0, 493, 494,
	495, 496, 497, 498, 499, 649, 500, 502, 501, 503,
	0, 504, 0, 505, 506, 507, 0, 0, 0, 0,
	508, 0, 510, 511, 512, 513, 509, 514, 515, 516,
	517, 0, 518, 519, 520, 0, 521, 522, 523, 524,
	650, 525, 0, 526, 527, 533, 534, 528, 529, 535,
	536, 537, 538, 539, 0, 541, 542, 540, 543, 544,
	545, 0, 546, 547, 530, 531, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 651, 0, 556, 0, 557,
	558, 559, 561, 532, 562, 567, 568, 652, 563, 564,
	565, 566, 653, 570, 571, 0, 572, 573, 0, 569,
	560, 0, 574, 575, 576, 577, 578, 579, 580, 353,
	581, 0, 582, 654, 655, 656, 657, 0, 591, 0,
	583, 584, 585, 658, 586, 659, 0, 587, 588, 589,
	590, 0, 592, 593, 0, 0, 594, 595, 596, 598,
	599, 597, 600, 0, 601, 0, 0, 602, 603, 604,
	660, 661, 662, 263, 606, 605, 607, 663, 0, 0,
	0, 0, 0, 608, 609, 664, 610, 611, 612, 0,
	269, 271, 270, 272, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 613, 0, 0, 0,
	0, 3700, 280, 0, 281, 282, 283, 284, 285, 286,
	614, 615, 0, 287, 616, 288, 617, 0, 618, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 619,
	620, 621, 0, 296, 297, 622, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 623, 624, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 625, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 626, 627, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 628, 0, 0,
	0, 363, 0, 364, 0, 0, 0, 365, 366, 629,
	630, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 631, 0, 632, 377, 0, 378, 379, 380,
	381, 382, 633, 634, 635, 459, 0, 383, 384, 0,
	385, 386, 387, 388, 0, 0, 0, 0, 389, 390,
	391, 393, 0, 0, 392, 636, 637, 0, 638, 0,
	394, 395, 0, 639, 0, 396, 397, 398, 0, 399,
	0, 0, 0, 400, 401, 402, 403, 404, 405, 0,
	406, 408, 407, 0, 409, 640, 0, 410, 411, 0,
	0, 412, 0, 0, 0, 413, 414, 417, 0, 0,
	415, 416, 418, 419, 0, 420, 421, 423, 426, 422,
	424, 425, 427, 440, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 442, 0, 441, 0,
	443, 444, 445, 450, 452, 453, 448, 449, 451, 454,
	455, 447, 3701, 446, 0, 0, 0, 456, 457, 0,
	641, 458, 642, 460, 461, 0, 0, 462, 0, 0,
	0, 464, 465, 466, 0, 0, 467, 468, 643, 0,
	469, 0, 644, 470, 471, 463, 472, 473, 474, 475,
	476, 477, 478, 479, 0, 480, 481, 645, 482, 483,
	484, 646, 485, 486, 487, 647, 488, 648, 489, 490,
	3703, 491, 492, 0, 493, 494, 495, 496, 497, 498,
	499, 649, 500, 502, 501, 503, 0, 504, 0, 505,
	506, 507, 0, 0, 0, 0, 508, 0, 510, 511,
	512, 513, 509, 514, 515, 516, 517, 0, 518, 519,
	520, 0, 521, 522, 523, 524, 3704, 525, 0, 526,
	527, 533, 534, 528, 529, 535, 536, 537, 538, 539,
	0, 541, 542, 540, 543, 544, 545, 0, 546, 547,
	530, 531, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 651, 0, 556, 0, 557, 558, 559, 561, 532,
	562, 567, 568, 652, 563, 564, 565, 566, 653, 570,
	571, 0, 572, 573, 0, 569, 560, 0, 574, 575,
	576, 577, 578, 579, 580, 353, 581, 0, 582, 654,
	655, 656, 657, 3699, 591, 0, 583, 584, 585, 658,
	586, 659, 0, 587, 588, 589, 590, 0, 592, 593,
	0, 0, 594, 595, 596, 598, 599, 597, 600, 0,
	601, 0, 0, 602, 603, 604, 660, 661, 662, 263,
	606, 605, 607, 663, 0, 0, 0, 0, 0, 608,
	609, 664, 610, 611, 612, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 613, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 614, 615, 0, 287,
	616, 288, 617, 0, 618, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 619, 620, 621, 0, 296,
	297, 622, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 688, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	623, 624, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 625,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	626, 627, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 628, 0, 0, 0, 363, 0, 364,
	0, 0, 0, 365, 366, 629, 630, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 689, 376, 631, 0,
	632, 377, 0, 378, 379, 380, 381, 382, 633, 634,
	635, 459, 0, 383, 384, 0, 385, 386, 387, 388,
	0, 0, 0, 0, 389, 390, 391, 393, 0, 0,
	392, 636, 637, 0, 638, 0, 394, 395, 0, 639,
	0, 396, 397, 398, 0, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 0, 406, 408, 407, 0,
	409, 640, 0, 410, 411, 0, 0, 412, 0, 0,
	0, 413, 414, 417, 0, 0, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 0, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 0, 446,
	0, 0, 0, 456, 457, 0, 641, 458, 642, 460,
	461, 0, 0, 462, 0, 0, 0, 464, 465, 466,
	0, 0, 467, 468, 643, 0, 469, 0, 644, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 647, 488, 648, 489, 490, 0, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 649, 500, 502,
	501, 503, 0, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 0, 518, 519, 520, 0, 521, 522,
	523, 524, 650, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 690, 541, 542, 540,
	543, 544, 545, 0, 546, 547, 530, 531, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 651, 0, 556,
	0, 557, 558, 559, 561, 532, 562, 567, 568, 652,
	563, 564, 565, 566, 653, 570, 571, 0, 572, 573,
	0, 569, 560, 0, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 0, 582, 654, 655, 656, 657, 0,
	591, 0, 583, 584, 585, 658, 586, 659, 0, 587,
	588, 589, 590, 0, 592, 593, 0, 0, 594, 595,
	596, 598, 599, 597, 600, 0, 601, 0, 0, 602,
	603, 604, 660, 661, 662, 263, 606, 605, 607, 663,
	0, 0, 0, 0, 0, 608, 609, 664, 610, 611,
	612, 0, 269, 271, 270, 272, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 613, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 614, 615, 0, 287, 616, 288, 617, 0,
	618, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 619, 620, 621, 0, 296, 297, 622, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 2278, 327, 0, 328, 623, 624, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 625, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 626, 627, 359, 0,
	266, 0, 0, 0, 0, 0, 360, 361, 362, 628,
	0, 0, 0, 363, 0, 364, 0, 0, 0, 365,
	366, 629, 630, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 631, 0, 632, 377, 0, 378,
	379, 380, 381, 382, 633, 634, 635, 459, 0, 383,
	384, 0, 385, 386, 387, 388, 0, 0, 0, 267,
	389, 390, 391, 393, 0, 0, 392, 636, 637, 0,
	638, 0, 394, 395, 0, 639, 0, 396, 397, 398,
	0, 399, 0, 0, 0, 400, 401, 402, 403, 404,
	405, 0, 406, 408, 407, 0, 409, 640, 0, 410,
	411, 0, 0, 412, 0, 0, 0, 413, 414, 417,
	0, 0, 415, 416, 418, 419, 0, 420, 421, 423,
	426, 422, 424, 425, 427, 440, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 442, 0,
	441, 0, 443, 444, 445, 450, 452, 453, 448, 449,
	451, 454, 455, 447, 0, 446, 0, 268, 0, 456,
	457, 0, 641, 458, 642, 460, 461, 0, 0, 462,
	0, 0, 0, 464, 465, 466, 0, 0, 467, 468,
	643, 0, 469, 0, 644, 470, 471, 463, 472, 473,
	474, 475, 476, 477, 478, 479, 0, 480, 481, 645,
	482, 483, 484, 646, 485, 486, 487, 647, 488, 648,
	489, 490, 0, 491, 492, 0, 493, 494, 495, 496,
	497, 498, 499, 649, 500, 502, 501, 503, 0, 504,
	0, 505, 506, 507, 0, 0, 0, 0, 508, 0,
	510, 511, 512, 513, 509, 514, 515, 516, 517, 0,
	518, 519, 520, 0, 521, 522, 523, 524, 650, 525,
	0, 526, 527, 533, 534, 528, 529, 535, 536, 537,
	538, 539, 0, 541, 542, 540, 543, 544, 545, 0,
	546, 547, 530, 531, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 651, 0, 556, 0, 557, 558, 559,
	561, 532, 562, 567, 568, 652, 563, 564, 565, 566,
	653, 570, 571, 0, 572, 573, 0, 569, 560, 0,
	574, 575, 576, 577, 578, 579, 580, 353, 581, 0,
	582, 654, 655, 656, 657, 0, 591, 0, 583, 584,
	585, 658, 586, 659, 0, 587, 588, 589, 590, 0,
	592, 593, 0, 0, 594, 595, 596, 598, 599, 597,
	600, 0, 601, 0, 0, 602, 603, 604, 660, 661,
	662, 263, 606, 605, 607, 663, 0, 0, 0, 0,
	0, 608, 609, 664, 610, 611, 612, 0, 269, 271,
	270, 272, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 613, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 614, 615,
	0, 287, 616, 288, 617, 0, 618, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 619, 620, 621,
	0, 296, 297, 622, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 2276, 327,
	0, 328, 623, 624, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 625, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 626, 627, 359, 0, 266, 0, 0, 0,
	0, 0, 360, 361, 362, 628, 0, 0, 0, 363,
	0, 364, 0, 0, 0, 365, 366, 629, 630, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	631, 0, 632, 377, 0, 378, 379, 380, 381, 382,
	633, 634, 635, 459, 0, 383, 384, 0, 385, 386,
	387, 388, 0, 0, 0, 267, 389, 390, 391, 393,
	0, 0, 392, 636, 637, 0, 638, 0, 394, 395,
	0, 639, 0, 396, 397, 398, 0, 399, 0, 0,
	0, 400, 401, 402, 403, 404, 405, 0, 406, 408,
	407, 0, 409, 640, 0, 410, 411, 0, 0, 412,
	0, 0, 0, 413, 414, 417, 0, 0, 415, 416,
	418, 419, 0, 420, 421, 423, 426, 422, 424, 425,
	427, 440, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 442, 0, 441, 0, 443, 444,
	445, 450, 452, 453, 448, 449, 451, 454, 455, 447,
	0, 446, 0, 268, 0, 456, 457, 0, 641, 458,
	642, 460, 461, 0, 0, 462, 0, 0, 0, 464,
	465, 466, 0, 0, 467, 468, 643, 0, 469, 0,
	644, 470, 471, 463, 472, 473, 474, 475, 476, 477,
	478, 479, 0, 480, 481, 645, 482, 483, 484, 646,
	485, 486, 487, 647, 488, 648, 489, 490, 0, 491,
	492, 0, 493, 494, 495, 496, 497, 498, 499, 649,
	500, 502, 501, 503, 0, 504, 0, 505, 506, 507,
	0, 0, 0, 0, 508, 0, 510, 511, 512, 513,
	509, 514, 515, 516, 517, 0, 518, 519, 520, 0,
	521, 522, 523, 524, 650, 525, 0, 526, 527, 533,
	534, 528, 529, 535, 536, 537, 538, 539, 0, 541,
	542, 540, 543, 544, 545, 0, 546, 547, 530, 531,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 651,
	0, 556, 0, 557, 558, 559, 561, 532, 562, 567,
	568, 652, 563, 564, 565, 566, 653, 570, 571, 0,
	572, 573, 0, 569, 560, 0, 574, 575, 576, 577,
	578, 579, 580, 353, 581, 0, 582, 654, 655, 656,
	657, 0, 591, 0, 583, 584, 585, 658, 586, 659,
	0, 587, 588, 589, 590, 0, 592, 593, 0, 0,
	594, 595, 596, 598, 599, 597, 600, 0, 601, 0,
	0, 602, 603, 604, 660, 661, 662, 263, 606, 605,
	607, 663, 0, 0, 0, 0, 0, 608, 609, 664,
	610, 611, 612, 0, 269, 271, 270, 272, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	613, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 614, 615, 0, 287, 616, 288,
	617, 0, 618, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 619, 620, 621, 0, 296, 297, 622,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 2274, 327, 0, 328, 623, 624,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 625, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 626, 627,
	359, 0, 266, 0, 0, 0, 0, 0, 360, 361,
	362, 628, 0, 0, 0, 363, 0, 364, 0, 0,
	0, 365, 366, 629, 630, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 631, 0, 632, 377,
	0, 378, 379, 380, 381, 382, 633, 634, 635, 459,
	0, 383, 384, 0, 385, 386, 387, 388, 0, 0,
	0, 267, 389, 390, 391, 393, 0, 0, 392, 636,
	637, 0, 638, 0, 394, 395, 0, 639, 0, 396,
	397, 398, 0, 399, 0, 0, 0, 400, 401, 402,
	403, 404, 405, 0, 406, 408, 407, 0, 409, 640,
	0, 410, 411, 0, 0, 412, 0, 0, 0, 413,
	414, 417, 0, 0, 415, 416, 418, 419, 0, 420,
	421, 423, 426, 422, 424, 425, 427, 440, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	442, 0, 441, 0, 443, 444, 445, 450, 452, 453,
	448, 449, 451, 454, 455, 447, 0, 446, 0, 268,
	0, 456, 457, 0, 641, 458, 642, 460, 461, 0,
	0, 462, 0, 0, 0, 464, 465, 466, 0, 0,
	467, 468, 643, 0, 469, 0, 644, 470, 471, 463,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 480,
	481, 645, 482, 483, 484, 646, 485, 486, 487, 647,
	488, 648, 489, 490, 0, 491, 492, 0, 493, 494,
	495, 496, 497, 498, 499, 649, 500, 502, 501, 503,
	0, 504, 0, 505, 506, 507, 0, 0, 0, 0,
	508, 0, 510, 511, 512, 513, 509, 514, 515, 516,
	517, 0, 518, 519, 520, 0, 521, 522, 523, 524,
	650, 525, 0, 526, 527, 533, 534, 528, 529, 535,
	536, 537, 538, 539, 0, 541, 542, 540, 543, 544,
	545, 0, 546, 547, 530, 531, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 651, 0, 556, 0, 557,
	558, 559, 561, 532, 562, 567, 568, 652, 563, 564,
	565, 566, 653, 570, 571, 0, 572, 573, 0, 569,
	560, 0, 574, 575, 576, 577, 578, 579, 580, 353,
	581, 0, 582, 654, 655, 656, 657, 0, 591, 0,
	583, 584, 585, 658, 586, 659, 0, 587, 588, 589,
	590, 0, 592, 593, 0, 0, 594, 595, 596, 598,
	599, 597, 600, 0, 601, 0, 0, 602, 603, 604,
	660, 661, 662, 263, 606, 605, 607, 663, 0, 0,
	0, 0, 0, 608, 609, 664, 610, 611, 612, 0,
	269, 271, 270, 272, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 613, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	614, 615, 0, 287, 616, 288, 617, 0, 618, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 619,
	620, 621, 0, 296, 297, 622, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 623, 624, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 625, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 626, 627, 359, 0, 266, 0,
	0, 0, 0, 0, 360, 361, 362, 628, 0, 0,
	0, 363, 0, 364, 0, 0, 0, 365, 366, 629,
	630, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 631, 0, 632, 377, 0, 378, 379, 380,
	381, 382, 2195, 634, 635, 459, 0, 383, 384, 0,
	385, 386, 387, 388, 0, 0, 0, 267, 389, 390,
	391, 393, 0, 0, 392, 636, 637, 0, 638, 0,
	394, 395, 0, 639, 0, 396, 397, 398, 0, 399,
	0, 0, 0, 400, 401, 402, 403, 404, 405, 0,
	406, 408, 407, 0, 409, 640, 0, 410, 411, 0,
	0, 412, 0, 0, 0, 413, 414, 417, 0, 0,
	415, 416, 418, 419, 0, 420, 421, 423, 426, 422,
	424, 425, 427, 440, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 442, 0, 441, 0,
	443, 444, 445, 450, 452, 453, 448, 449, 451, 454,
	455, 447, 0, 446, 0, 268, 0, 456, 457, 0,
	641, 458, 642, 460, 461, 0, 0, 462, 0, 0,
	0, 464, 465, 466, 0, 0, 467, 468, 643, 0,
	469, 0, 644, 470, 471, 463, 472, 473, 474, 475,
	476, 477, 478, 479, 0, 480, 481, 645, 482, 483,
	484, 646, 485, 486, 487, 647, 488, 648, 489, 490,
	0, 491, 492, 0, 493, 494, 495, 496, 497, 498,
	499, 649, 500, 502, 501, 503, 0, 504, 0, 505,
	506, 507, 0, 0, 0, 0, 508, 0, 510, 511,
	512, 513, 509, 514, 515, 516, 517, 0, 518, 519,
	520, 0, 521, 522, 523, 524, 650, 525, 0, 526,
	527, 533, 534, 528, 529, 535, 536, 537, 538, 539,
	0, 541, 542, 540, 543, 544, 545, 0, 546, 547,
	530, 531, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 651, 0, 556, 0, 557, 558, 559, 561, 532,
	562, 567, 568, 652, 563, 564, 565, 566, 653, 570,
	571, 0, 572, 573, 0, 569, 560, 0, 574, 575,
	576, 577, 578, 579, 580, 353, 581, 0, 582, 654,
	655, 656, 657, 0, 591, 0, 583, 584, 585, 658,
	586, 659, 0, 587, 588, 589, 590, 0, 592, 593,
	0, 0, 594, 595, 596, 598, 599, 597, 600, 0,
	601, 0, 0, 602, 603, 604, 660, 661, 662, 263,
	606, 605, 607, 663, 0, 0, 0, 0, 0, 608,
	609, 664, 610, 611, 612, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 613, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 614, 615, 0, 287,
	616, 288, 617, 0, 618, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 619, 620, 621, 0, 296,
	297, 622, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	623, 624, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 625,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	626, 627, 359, 0, 266, 0, 0, 0, 0, 0,
	360, 361, 362, 628, 0, 0, 0, 363, 0, 364,
	0, 0, 0, 365, 366, 629, 630, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 631, 0,
	632, 377, 0, 378, 379, 380, 381, 382, 2004, 634,
	635, 459, 0, 383, 384, 0, 385, 386, 387, 388,
	0, 0, 0, 267, 389, 390, 391, 393, 0, 0,
	392, 636, 637, 0, 638, 0, 394, 395, 0, 639,
	0, 396, 397, 398, 0, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 0, 406, 408, 407, 0,
	409, 640, 0, 410, 411, 0, 0, 412, 0, 0,
	0, 413, 414, 417, 0, 0, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 0, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 0, 446,
	0, 268, 0, 456, 457, 0, 641, 458, 642, 460,
	461, 0, 0, 462, 0, 0, 0, 464, 465, 466,
	0, 0, 467, 468, 643, 0, 469, 0, 644, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 647, 488, 648, 489, 490, 0, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 649, 500, 502,
	501, 503, 0, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 0, 518, 519, 520, 0, 521, 522,
	523, 524, 650, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 0, 541, 542, 540,
	543, 544, 545, 0, 546, 547, 530, 531, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 651, 0, 556,
	0, 557, 558, 559, 561, 532, 562, 567, 568, 652,
	563, 564, 565, 566, 653, 570, 571, 0, 572, 573,
	0, 569, 560, 0, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 0, 582, 654, 655, 656, 657, 0,
	591, 0, 583, 584, 585, 658, 586, 659, 0, 587,
	588, 589, 590, 0, 592, 593, 0, 0, 594, 595,
	596, 598, 599, 597, 600, 0, 601, 0, 0, 602,
	603, 604, 660, 661, 662, 263, 606, 605, 607, 663,
	0, 0, 0, 0, 0, 608, 609, 664, 610, 611,
	612, 0, 269, 271, 270, 272, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 613, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 614, 615, 0, 287, 616, 288, 617, 0,
	618, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 619, 620, 621, 0, 296, 297, 622, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 623, 624, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 625, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 626, 627, 359, 0,
	266, 0, 0, 0, 0, 0, 360, 361, 362, 628,
	0, 0, 0, 363, 0, 364, 0, 0, 0, 365,
	366, 629, 630, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 631, 0, 632, 377, 0, 378,
	379, 380, 381, 382, 1998, 634, 635, 459, 0, 383,
	384, 0, 385, 386, 387, 388, 0, 0, 0, 267,
	389, 390, 391, 393, 0, 0, 392, 636, 637, 0,
	638, 0, 394, 395, 0, 639, 0, 396, 397, 398,
	0, 399, 0, 0, 0, 400, 401, 402, 403, 404,
	405, 0, 406, 408, 407, 0, 409, 640, 0, 410,
	411, 0, 0, 412, 0, 0, 0, 413, 414, 417,
	0, 0, 415, 416, 418, 419, 0, 420, 421, 423,
	426, 422, 424, 425, 427, 440, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 442, 0,
	441, 0, 443, 444, 445, 450, 452, 453, 448, 449,
	451, 454, 455, 447, 0, 446, 0, 268, 0, 456,
	457, 0, 641, 458, 642, 460, 461, 0, 0, 462,
	0, 0, 0, 464, 465, 466, 0, 0, 467, 468,
	643, 0, 469, 0, 644, 470, 471, 463, 472, 473,
	474, 475, 476, 477, 478, 479, 0, 480, 481, 645,
	482, 483, 484, 646, 485, 486, 487, 647, 488, 648,
	489, 490, 0, 491, 492, 0, 493, 494, 495, 496,
	497, 498, 499, 649, 500, 502, 501, 503, 0, 504,
	0, 505, 506, 507, 0, 0, 0, 0, 508, 0,
	510, 511, 512, 513, 509, 514, 515, 516, 517, 0,
	518, 519, 520, 0, 521, 522, 523, 524, 650, 525,
	0, 526, 527, 533, 534, 528, 529, 535, 536, 537,
	538, 539, 0, 541, 542, 540, 543, 544, 545, 0,
	546, 547, 530, 531, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 651, 0, 556, 0, 557, 558, 559,
	561, 532, 562, 567, 568, 652, 563, 564, 565, 566,
	653, 570, 571, 0, 572, 573, 0, 569, 560, 0,
	574, 575, 576, 577, 578, 579, 580, 353, 581, 0,
	582, 654, 655, 656, 657, 0, 591, 0, 583, 584,
	585, 658, 586, 659, 0, 587, 588, 589, 590, 0,
	592, 593, 0, 0, 594, 595, 596, 598, 599, 597,
	600, 0, 601, 0, 0, 602, 603, 604, 660, 661,
	662, 0, 606, 605, 607, 663, 863, 0, 263, 0,
	0, 608, 609, 664, 610, 611, 612, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 271, 270, 272, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 613, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 614, 615, 0, 287, 616,
	288, 617, 0, 618, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 619, 620, 621, 0, 296, 297,
	622, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 623,
	624, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 625, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 626,
	627, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 628, 0, 0, 0, 363, 0, 364, 0,
	0, 0, 365, 366, 629, 630, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 631, 0, 632,
	377, 0, 378, 379, 380, 381, 382, 633, 634, 635,
	459, 0, 383, 384, 0, 385, 386, 387, 388, 0,
	0, 0, 0, 389, 390, 391, 393, 0, 0, 392,
	636, 637, 0, 638, 862, 394, 395, 0, 639, 0,
	396, 397, 398, 0, 399, 0, 0, 0, 400, 401,
	402, 403, 404, 405, 0, 406, 408, 407, 0, 409,
	640, 0, 410, 411, 0, 0, 412, 0, 0, 0,
	413, 414, 417, 0, 0, 415, 416, 418, 419, 0,
	420, 421, 423, 426, 422, 424, 425, 427, 440, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 442, 0, 441, 0, 443, 444, 445, 450, 452,
	453, 448, 449, 451, 454, 455, 447, 0, 446, 0,
	0, 0, 456, 457, 0, 641, 458, 642, 460, 461,
	0, 0, 462, 0, 0, 0, 464, 465, 466, 0,
	0, 467, 468, 643, 0, 469, 0, 644, 470, 471,
	463, 472, 473, 474, 475, 476, 477, 478, 479, 0,
	480, 481, 645, 482, 483, 484, 646, 485, 486, 487,
	647, 488, 648, 489, 490, 0, 491, 492, 0, 493,
	494, 495, 496, 497, 498, 499, 649, 500, 502, 501,
	503, 0, 504, 0, 505, 506, 507, 0, 0, 0,
	0, 508, 0, 510, 511, 512, 513, 509, 514, 515,
	516, 517, 0, 518, 519, 520, 0, 521, 522, 523,
	524, 650, 525, 0, 526, 527, 533, 534, 528, 529,
	535, 536, 537, 538, 539, 0, 541, 542, 540, 543,
	544, 545, 0, 546, 547, 530, 531, 548, 549, 0,
	550, 551, 552, 553, 554, 555, 651, 0, 556, 0,
	557, 558, 559, 561, 532, 562, 567, 568, 652, 563,
	564, 565, 566, 653, 570, 571, 0, 572, 573, 0,
	569, 560, 861, 574, 575, 576, 577, 578, 579, 580,
	353, 581, 0, 582, 654, 655, 656, 657, 0, 591,
	0, 583, 584, 585, 658, 586, 659, 0, 587, 588,
	589, 590, 0, 592, 593, 0, 0, 594, 595, 596,
	598, 599, 597, 600, 0, 601, 0, 0, 602, 603,
	604, 660, 661, 662, 263, 606, 605, 607, 663, 0,
	0, 0, 0, 0, 608, 609, 664, 610, 611, 612,
	0, 269, 271, 270, 272, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 613, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 614, 615, 0, 287, 616, 288, 617, 0, 618,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	619, 620, 621, 0, 296, 297, 622, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 623, 624, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 625, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 626, 627, 359, 0, 2934,
	0, 0, 0, 0, 0, 360, 361, 362, 628, 0,
	0, 0, 363, 0, 364, 0, 0, 0, 365, 366,
	629, 630, 367, 368, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 631, 0, 632, 377, 0, 378, 379,
	380, 381, 382, 633, 634, 635, 459, 0, 383, 384,
	0, 385, 386, 387, 388, 0, 0, 0, 0, 389,
	390, 391, 393, 0, 0, 392, 636, 637, 0, 638,
	0, 394, 395, 0, 639, 0, 396, 397, 398, 0,
	399, 0, 0, 0, 400, 401, 402, 403, 404, 405,
	0, 406, 408, 407, 0, 409, 640, 0, 410, 411,
	0, 0, 412, 0, 0, 0, 413, 414, 417, 0,
	0, 415, 416, 418, 419, 0, 420, 421, 423, 426,
	422, 424, 425, 427, 440, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 442, 0, 441,
	0, 443, 444, 445, 450, 452, 453, 448, 449, 451,
	454, 455, 447, 0, 446, 0, 0, 0, 456, 457,
	0, 641, 458, 642, 460, 461, 0, 0, 462, 0,
	0, 0, 464, 465, 466, 0, 0, 467, 468, 643,
	0, 469, 0, 644, 470, 471, 463, 472, 473, 474,
	475, 476, 477, 478, 479, 0, 480, 481, 645, 482,
	483, 484, 646, 485, 486, 487, 647, 488, 648, 489,
	490, 4056, 491, 492, 0, 493, 494, 495, 496, 497,
	498, 499, 649, 500, 502, 501, 503, 0, 504, 0,
	505, 506, 507, 0, 0, 0, 0, 508, 0, 510,
	511, 512, 513, 509, 514, 515, 516, 517, 0, 518,
	519, 520, 0, 521, 522, 523, 524, 650, 525, 0,
	526, 527, 533, 534, 528, 529, 535, 536, 537, 538,
	539, 0, 541, 542, 540, 543, 544, 545, 0, 546,
	547, 530, 531, 548, 549, 0, 550, 551, 552, 553,
	554, 555, 651, 0, 556, 0, 557, 558, 559, 561,
	532, 562, 567, 568, 652, 563, 564, 565, 566, 653,
	570, 571, 0, 572, 573, 0, 569, 560, 0, 574,
	575, 576, 577, 578, 579, 580, 353, 581, 0, 582,
	654, 655, 656, 657, 0, 591, 0, 583, 584, 585,
	658, 586, 659, 0, 587, 588, 589, 590, 0, 592,
	593, 0, 0, 594, 595, 596, 598, 599, 597, 600,
	0, 601, 0, 0, 602, 603, 604, 660, 661, 662,
	263, 606, 605, 607, 663, 0, 0, 0, 0, 0,
	608, 609, 664, 610, 611, 612, 0, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 613, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 614, 615, 0,
	287, 616, 288, 617, 0, 618, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 619, 620, 621, 0,
	296, 297, 622, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 623, 624, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	625, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 626, 627, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 628, 0, 0, 0, 363, 0,
	364, 0, 0, 0, 365, 366, 629, 630, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 631,
	0, 632, 377, 0, 378, 379, 380, 381, 382, 633,
	634, 635, 459, 0, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 0, 389, 390, 391, 393, 0,
	0, 392, 636, 637, 0, 638, 0, 394, 395, 0,
	639, 0, 396, 397, 398, 0, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 640, 0, 410, 411, 0, 0, 412, 0,
	0, 0, 413, 414, 417, 0, 0, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 0, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 3961,
	446, 0, 0, 0, 456, 457, 0, 641, 458, 642,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 0, 469, 0, 644,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 647, 488, 648, 489, 490, 3963, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 649, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 0, 521,
	522, 523, 524, 650, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 0, 541, 542,
	540, 543, 544, 545, 0, 546, 547, 530, 531, 548,
	549, 0, 550, 551, 552, 553, 554, 555, 651, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	652, 563, 564, 565, 566, 653, 570, 571, 0, 572,
	573, 0, 569, 560, 0, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 654, 655, 656, 657,
	0, 591, 0, 583, 584, 585, 658, 586, 659, 0,
	587, 588, 589, 590, 0, 592, 593, 0, 0, 594,
	595, 596, 598, 599, 597, 600, 0, 601, 0, 0,
	602, 603, 604, 660, 661, 662, 0, 606, 605, 607,
	663, 753, 0, 263, 0, 0, 608, 609, 664, 610,
	611, 612, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 271, 270, 272, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 613, 0, 0, 0,
	0, 279, 280, 1310, 281, 282, 283, 284, 285, 286,
	614, 615, 0, 287, 616, 288, 617, 0, 618, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 619,
	620, 1308, 0, 296, 297, 622, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 623, 624, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 625, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 626, 627, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 628, 0, 0,
	0, 363, 0, 364, 0, 0, 0, 365, 366, 629,
	630, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 631, 0, 632, 377, 0, 378, 379, 380,
	381, 382, 633, 634, 635, 459, 0, 383, 384, 0,
	385, 386, 387, 388, 0, 0, 0, 0, 389, 390,
	391, 393, 0, 0, 392, 636, 637, 0, 638, 0,
	394, 395, 0, 639, 0, 396, 397, 398, 0, 399,
	0, 0, 0, 400, 401, 402, 403, 404, 405, 0,
	406, 408, 407, 0, 409, 640, 0, 410, 411, 0,
	0, 412, 0, 0, 0, 413, 414, 417, 0, 0,
	415, 416, 418, 419, 0, 420, 421, 423, 426, 422,
	424, 425, 427, 440, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 442, 0, 754, 0,
	443, 444, 445, 450, 452, 453, 448, 449, 451, 454,
	455, 447, 0, 446, 0, 0, 0, 456, 457, 0,
	641, 458, 642, 460, 461, 0, 0, 462, 0, 0,
	0, 464, 465, 466, 0, 0, 467, 468, 643, 0,
	469, 0, 644, 470, 471, 463, 472, 473, 474, 475,
	476, 477, 478, 479, 0, 480, 481, 645, 482, 483,
	484, 646, 485, 486, 487, 647, 488, 648, 489, 490,
	0, 491, 492, 0, 493, 494, 495, 496, 497, 498,
	499, 649, 500, 502, 501, 503, 0, 504, 0, 505,
	506, 507, 0, 0, 0, 0, 508, 0, 510, 511,
	512, 513, 509, 514, 515, 516, 517, 0, 518, 519,
	520, 0, 521, 522, 523, 524, 650, 525, 0, 526,
	527, 533, 534, 528, 529, 750, 536, 537, 538, 539,
	0, 541, 542, 540, 543, 1311, 545, 0, 546, 547,
	530, 531, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 651, 0, 556, 0, 557, 558, 559, 561, 532,
	562, 567, 568, 652, 563, 564, 565, 566, 653, 570,
	571, 0, 572, 573, 0, 569, 560, 0, 574, 575,
	576, 577, 578, 579, 580, 353, 581, 0, 582, 749,
	655, 656, 657, 0, 591, 0, 583, 584, 585, 658,
	586, 659, 0, 587, 588, 589, 590, 0, 592, 593,
	0, 0, 594, 595, 596, 598, 599, 597, 600, 0,
	601, 0, 0, 602, 603, 604, 660, 661, 662, 0,
	606, 605, 607, 663, 753, 0, 263, 0, 0, 608,
	609, 664, 610, 611, 612, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 271, 270, 272, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 613,
	0, 0, 0, 0, 279, 280, 1310, 281, 282, 283,
	284, 285, 286, 614, 615, 0, 287, 616, 288, 617,
	0, 618, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 619, 620, 1308, 0, 296, 297, 622, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 623, 624, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 625, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 626, 627, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	628, 0, 0, 0, 363, 0, 364, 0, 0, 0,
	365, 366, 629, 630, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 631, 0, 632, 377, 0,
	378, 379, 380, 381, 382, 633, 634, 635, 459, 0,
	383, 384, 0, 385, 386, 387, 388, 0, 0, 0,
	0, 389, 390, 391, 393, 0, 0, 392, 636, 637,
	0, 638, 0, 394, 395, 0, 639, 0, 396, 397,
	398, 0, 399, 0, 0, 0, 400, 401, 402, 403,
	404, 405, 0, 406, 408, 407, 0, 409, 640, 0,
	410, 411, 0, 0, 412, 0, 0, 0, 413, 414,
	417, 0, 0, 415, 416, 418, 419, 0, 420, 421,
	423, 426, 422, 424, 425, 427, 440, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 442,
	0, 754, 0, 443, 444, 445, 450, 452, 453, 448,
	449, 451, 454, 455, 447, 0, 446, 0, 0, 0,
	456, 457, 0, 641, 458, 642, 460, 461, 0, 0,
	462, 0, 0, 0, 464, 465, 466, 0, 0, 467,
	468, 643, 0, 469, 0, 644, 470, 471, 463, 472,
	473, 474, 475, 476, 477, 478, 479, 0, 480, 481,
	645, 482, 483, 484, 646, 485, 486, 487, 647, 488,
	648, 489, 490, 0, 491, 492, 0, 493, 494, 495,
	496, 497, 498, 499, 649, 500, 502, 501, 503, 0,
	504, 0, 505, 506, 507, 0, 0, 0, 0, 508,
	0, 510, 511, 512, 513, 509, 514, 515, 516, 517,
	0, 518, 519, 520, 0, 521, 522, 523, 524, 650,
	525, 0, 526, 527, 533, 534, 528, 529, 750, 536,
	537, 538, 539, 0, 541, 542, 540, 543, 1311, 545,
	0, 546, 547, 530, 531, 548, 549, 0, 550, 551,
	552, 553, 554, 555, 651, 0, 556, 0, 557, 558,
	559, 561, 532, 562, 567, 568, 652, 563, 564, 565,
	566, 653, 570, 571, 0, 572, 573, 0, 569, 560,
	0, 574, 575, 576, 577, 578, 579, 580, 353, 581,
	0, 582, 749, 655, 656, 657, 0, 591, 0, 583,
	1309, 585, 658, 586, 659, 0, 587, 588, 589, 590,
	0, 592, 593, 0, 0, 594, 595, 596, 598, 599,
	597, 600, 0, 601, 0, 0, 602, 603, 604, 660,
	661, 662, 0, 606, 605, 607, 663, 675, 0, 263,
	0, 0, 608, 609, 664, 610, 611, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 674, 277, 278, 0, 0, 0,
	0, 0, 613, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 614, 615, 0, 287,
	616, 288, 617, 0, 618, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 619, 620, 621, 0, 296,
	297, 622, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	623, 624, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 625,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	626, 627, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 628, 0, 0, 0, 363, 0, 364,
	0, 0, 0, 365, 366, 629, 630, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 631, 0,
	632, 377, 0, 378, 379, 380, 381, 382, 633, 634,
	635, 459, 0, 383, 384, 0, 385, 386, 387, 388,
	0, 0, 0, 0, 389, 390, 391, 393, 0, 0,
	392, 636, 637, 0, 638, 0, 394, 395, 0, 639,
	0, 396, 397, 398, 0, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 0, 406, 408, 407, 0,
	409, 640, 0, 410, 411, 0, 0, 412, 0, 0,
	0, 413, 414, 417, 0, 0, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 0, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 0, 446,
	0, 0, 0, 456, 457, 0, 641, 458, 642, 460,
	461, 0, 0, 462, 0, 0, 0, 464, 465, 466,
	0, 0, 467, 468, 643, 0, 469, 0, 644, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 647, 488, 648, 673, 490, 0, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 649, 500, 502,
	501, 503, 0, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 0, 518, 519, 520, 0, 521, 522,
	523, 524, 650, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 0, 541, 542, 540,
	543, 544, 545, 0, 546, 547, 530, 531, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 651, 0, 556,
	0, 557, 558, 559, 561, 532, 562, 567, 568, 652,
	563, 564, 565, 566, 653, 570, 571, 0, 572, 573,
	0, 569, 560, 0, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 0, 582, 654, 655, 656, 657, 0,
	591, 0, 583, 584, 585, 658, 586, 659, 0, 587,
	588, 589, 590, 0, 592, 593, 0, 0, 594, 595,
	596, 598, 599, 597, 600, 0, 601, 0, 0, 602,
	603, 604, 660, 661, 662, 0, 606, 605, 607, 663,
	263, 2921, 0, 0, 0, 608, 609, 664, 610, 611,
	612, 0, 0, 0, 0, 0, 0, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 613, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 614, 615, 0,
	287, 616, 288, 617, 0, 618, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 619, 620, 621, 0,
	296, 297, 622, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 623, 624, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	625, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 626, 627, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 628, 0, 0, 0, 363, 0,
	364, 0, 0, 0, 365, 366, 629, 630, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 631,
	0, 632, 377, 0, 378, 379, 380, 381, 382, 633,
	634, 635, 459, 0, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 0, 389, 390, 391, 393, 0,
	0, 392, 636, 637, 0, 638, 0, 394, 395, 0,
	639, 0, 396, 397, 398, 0, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 640, 0, 410, 411, 0, 0, 412, 0,
	0, 0, 413, 414, 417, 0, 0, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 0, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 0,
	446, 0, 0, 0, 456, 457, 0, 641, 458, 642,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 0, 469, 0, 644,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 647, 488, 648, 489, 490, 0, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 649, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 0, 521,
	522, 523, 524, 650, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 0, 541, 542,
	540, 543, 544, 545, 0, 546, 547, 530, 531, 548,
	549, 0, 550, 551, 552, 553, 554, 555, 651, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	652, 563, 564, 565, 566, 653, 570, 571, 0, 572,
	573, 0, 569, 560, 0, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 654, 655, 656, 657,
	0, 591, 0, 583, 584, 585, 658, 586, 659, 0,
	587, 588, 589, 590, 0, 592, 593, 0, 0, 594,
	595, 596, 598, 599, 597, 600, 0, 601, 0, 0,
	602, 603, 604, 660, 661, 662, 0, 606, 605, 607,
	663, 263, 4066, 0, 0, 0, 608, 609, 664, 610,
	611, 612, 0, 0, 0, 0, 0, 0, 269, 271,
	270, 272, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 613, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 614, 615,
	0, 287, 616, 288, 617, 0, 618, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 619, 620, 621,
	0, 296, 297, 622, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 623, 624, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 625, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 626, 627, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 628, 0, 0, 0, 363,
	0, 364, 0, 0, 0, 365, 366, 629, 630, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	631, 0, 632, 377, 0, 378, 379, 380, 381, 382,
	633, 634, 635, 459, 0, 383, 384, 0, 385, 386,
	387, 388, 0, 0, 0, 0, 389, 390, 391, 393,
	0, 0, 392, 636, 637, 0, 638, 0, 394, 395,
	0, 639, 0, 396, 397, 398, 0, 399, 0, 0,
	0, 400, 401, 402, 403, 404, 405, 0, 406, 408,
	407, 0, 409, 640, 0, 410, 411, 0, 0, 412,
	0, 0, 0, 413, 414, 417, 0, 0, 415, 416,
	418, 419, 0, 420, 421, 423, 426, 422, 424, 425,
	427, 440, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 442, 0, 441, 0, 443, 444,
	445, 450, 452, 453, 448, 449, 451, 454, 455, 447,
	0, 446, 0, 0, 0, 456, 457, 0, 641, 458,
	642, 460, 461, 0, 0, 462, 0, 0, 0, 464,
	465, 466, 0, 0, 467, 468, 643, 0, 469, 0,
	644, 470, 471, 463, 472, 473, 474, 475, 476, 477,
	478, 479, 0, 480, 481, 645, 482, 483, 484, 646,
	485, 486, 487, 647, 488, 648, 489, 490, 0, 491,
	492, 0, 493, 494, 495, 496, 497, 498, 499, 649,
	500, 502, 501, 503, 0, 504, 0, 505, 506, 507,
	0, 0, 0, 0, 508, 0, 510, 511, 512, 513,
	509, 514, 515, 516, 517, 0, 518, 519, 520, 0,
	521, 522, 523, 524, 650, 525, 0, 526, 527, 533,
	534, 528, 529, 535, 536, 537, 538, 539, 0, 541,
	542, 540, 543, 544, 545, 0, 546, 547, 530, 531,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 651,
	0, 556, 0, 557, 558, 559, 561, 532, 562, 567,
	568, 652, 563, 564, 565, 566, 653, 570, 571, 0,
	572, 573, 0, 569, 560, 0, 574, 575, 576, 577,
	578, 579, 580, 353, 581, 0, 582, 654, 655, 656,
	657, 0, 591, 0, 583, 584, 585, 658, 586, 659,
	0, 587, 588, 589, 590, 0, 592, 593, 0, 0,
	594, 595, 596, 598, 599, 597, 600, 0, 601, 0,
	0, 602, 603, 604, 660, 661, 662, 263, 606, 605,
	607, 663, 0, 0, 0, 0, 0, 608, 609, 664,
	610, 611, 612, 0, 269, 271, 270, 272, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	613, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 614, 615, 0, 287, 616, 288,
	617, 0, 618, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 619, 620, 621, 0, 296, 297, 622,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 623, 624,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 625, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 626, 627,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 628, 0, 0, 0, 363, 0, 364, 0, 0,
	0, 365, 366, 629, 630, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 631, 0, 632, 377,
	0, 378, 379, 380, 381, 382, 633, 634, 635, 459,
	0, 383, 384, 0, 385, 386, 387, 388, 0, 0,
	0, 0, 389, 390, 391, 393, 0, 0, 392, 636,
	637, 0, 638, 0, 394, 395, 0, 639, 0, 396,
	397, 398, 0, 399, 0, 0, 0, 400, 401, 402,
	403, 404, 405, 0, 406, 408, 407, 0, 409, 640,
	0, 410, 411, 0, 0, 412, 0, 0, 0, 413,
	414, 417, 0, 0, 415, 416, 418, 419, 0, 420,
	421, 423, 426, 422, 424, 425, 427, 440, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	442, 0, 441, 0, 443, 444, 445, 450, 452, 453,
	448, 449, 451, 454, 455, 447, 0, 446, 0, 0,
	0, 456, 457, 0, 641, 458, 642, 460, 461, 0,
	0, 462, 0, 0, 0, 464, 465, 466, 0, 0,
	467, 468, 643, 0, 469, 0, 644, 470, 471, 463,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 480,
	481, 645, 482, 483, 484, 646, 485, 486, 487, 647,
	488, 648, 489, 490, 4333, 491, 492, 0, 493, 494,
	495, 496, 497, 498, 499, 649, 500, 502, 501, 503,
	0, 504, 0, 505, 506, 507, 0, 0, 0, 0,
	508, 0, 510, 511, 512, 513, 509, 514, 515, 516,
	517, 0, 518, 519, 520, 0, 521, 522, 523, 524,
	650, 525, 0, 526, 527, 533, 534, 528, 529, 535,
	536, 537, 538, 539, 0, 541, 542, 540, 543, 544,
	545, 0, 546, 547, 530, 531, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 651, 0, 556, 0, 557,
	558, 559, 561, 532, 562, 567, 568, 652, 563, 564,
	565, 566, 653, 570, 571, 0, 572, 573, 0, 569,
	560, 0, 574, 575, 576, 577, 578, 579, 580, 353,
	581, 0, 582, 654, 655, 656, 657, 0, 591, 0,
	583, 584, 585, 658, 586, 659, 0, 587, 588, 589,
	590, 0, 592, 593, 0, 0, 594, 595, 596, 598,
	599, 597, 600, 0, 601, 0, 0, 602, 603, 604,
	660, 661, 662, 263, 606, 605, 607, 663, 0, 0,
	0, 0, 0, 608, 609, 664, 610, 611, 612, 0,
	269, 271, 270, 272, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 613, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	614, 615, 0, 287, 616, 288, 617, 0, 618, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 619,
	620, 621, 0, 296, 297, 622, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 623, 624, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 625, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 626, 627, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 628, 0, 0,
	0, 363, 0, 364, 0, 0, 0, 365, 366, 629,
	630, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 631, 0, 632, 377, 0, 378, 379, 380,
	381, 382, 633, 634, 635, 459, 0, 383, 384, 0,
	385, 386, 387, 388, 0, 0, 0, 0, 389, 390,
	391, 393, 0, 0, 392, 636, 637, 0, 638, 0,
	394, 395, 0, 639, 0, 396, 397, 398, 0, 399,
	0, 0, 0, 400, 401, 402, 403, 404, 405, 0,
	406, 408, 407, 0, 409, 640, 0, 410, 411, 0,
	0, 412, 0, 0, 0, 413, 414, 417, 0, 0,
	415, 416, 418, 419, 0, 420, 421, 423, 426, 422,
	424, 425, 427, 440, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 442, 0, 441, 0,
	443, 444, 445, 450, 452, 453, 448, 449, 451, 454,
	455, 447, 0, 446, 0, 0, 0, 456, 457, 0,
	641, 458, 642, 460, 461, 0, 0, 462, 0, 0,
	0, 464, 465, 466, 0, 0, 467, 468, 643, 0,
	469, 0, 644, 470, 471, 463, 472, 473, 474, 475,
	476, 477, 478, 479, 0, 480, 481, 645, 482, 483,
	484, 646, 485, 486, 487, 647, 488, 648, 489, 490,
	4328, 491, 492, 0, 493, 494, 495, 496, 497, 498,
	499, 649, 500, 502, 501, 503, 0, 504, 0, 505,
	506, 507, 0, 0, 0, 0, 508, 0, 510, 511,
	512, 513, 509, 514, 515, 516, 517, 0, 518, 519,
	520, 0, 521, 522, 523, 524, 650, 525, 0, 526,
	527, 533, 534, 528, 529, 535, 536, 537, 538, 539,
	0, 541, 542, 540, 543, 544, 545, 0, 546, 547,
	530, 531, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 651, 0, 556, 0, 557, 558, 559, 561, 532,
	562, 567, 568, 652, 563, 564, 565, 566, 653, 570,
	571, 0, 572, 573, 0, 569, 560, 0, 574, 575,
	576, 577, 578, 579, 580, 353, 581, 0, 582, 654,
	655, 656, 657, 0, 591, 0, 583, 584, 585, 658,
	586, 659, 0, 587, 588, 589, 590, 0, 592, 593,
	0, 0, 594, 595, 596, 598, 599, 597, 600, 0,
	601, 0, 0, 602, 603, 604, 660, 661, 662, 263,
	606, 605, 607, 663, 0, 0, 0, 0, 0, 608,
	609, 664, 610, 611, 612, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 613, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 614, 615, 0, 287,
	616, 288, 617, 0, 618, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 619, 620, 621, 0, 296,
	297, 622, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	623, 624, 3742, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 625,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	626, 627, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 628, 0, 0, 0, 363, 0, 364,
	0, 0, 0, 365, 366, 629, 630, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 631, 0,
	632, 377, 0, 378, 379, 380, 381, 382, 633, 634,
	635, 459, 0, 383, 384, 0, 385, 386, 387, 388,
	0, 0, 0, 0, 389, 390, 391, 393, 0, 0,
	392, 636, 637, 0, 638, 0, 394, 395, 0, 639,
	0, 396, 397, 398, 0, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 0, 406, 408, 407, 0,
	409, 640, 0, 410, 411, 0, 0, 412, 0, 0,
	0, 413, 414, 417, 0, 0, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 0, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 0, 446,
	0, 0, 0, 456, 457, 0, 641, 458, 642, 460,
	461, 0, 0, 462, 0, 0, 0, 464, 465, 466,
	0, 0, 467, 468, 643, 0, 469, 0, 644, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 647, 488, 648, 489, 490, 0, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 649, 500, 502,
	501, 503, 0, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 0, 518, 519, 520, 0, 521, 522,
	523, 524, 650, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 0, 541, 542, 540,
	543, 544, 545, 0, 546, 547, 530, 531, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 651, 0, 556,
	0, 557, 558, 559, 561, 532, 562, 567, 568, 652,
	563, 564, 565, 566, 653, 570, 571, 0, 572, 573,
	0, 569, 560, 0, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 0, 582, 654, 655, 656, 657, 0,
	591, 0, 583, 584, 585, 658, 586, 659, 0, 587,
	588, 589, 590, 0, 592, 593, 0, 0, 594, 595,
	596, 598, 599, 597, 600, 0, 601, 0, 0, 602,
	603, 604, 660, 661, 662, 263, 606, 605, 607, 663,
	0, 0, 0, 0, 0, 608, 609, 664, 610, 611,
	612, 0, 269, 271, 270, 272, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 613, 0,
	2616, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 614, 615, 0, 287, 616, 288, 617, 0,
	618, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 619, 620, 621, 0, 296, 297, 622, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 623, 624, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 625, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 626, 627, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 628,
	0, 0, 0, 363, 0, 364, 0, 0, 0, 365,
	366, 629, 630, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 631, 0, 632, 377, 0, 378,
	379, 380, 381, 382, 633, 634, 635, 459, 0, 383,
	384, 0, 385, 386, 387, 388, 0, 0, 0, 0,
	389, 390, 391, 393, 0, 0, 392, 636, 637, 0,
	638, 0, 394, 395, 0, 639, 0, 396, 397, 398,
	0, 399, 0, 0, 0, 400, 401, 402, 403, 404,
	405, 0, 406, 408, 407, 0, 409, 640, 0, 410,
	411, 0, 0, 412, 0, 0, 0, 413, 414, 417,
	0, 0, 415, 416, 418, 419, 0, 420, 421, 423,
	426, 422, 424, 425, 427, 440, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 442, 0,
	441, 0, 443, 444, 445, 450, 452, 453, 448, 449,
	451, 454, 455, 447, 0, 446, 0, 0, 0, 456,
	457, 0, 641, 458, 642, 460, 461, 0, 0, 462,
	0, 0, 0, 464, 465, 466, 0, 0, 467, 468,
	643, 0, 469, 0, 644, 470, 471, 463, 472, 473,
	474, 475, 476, 477, 478, 479, 0, 480, 481, 645,
	482, 483, 484, 646, 485, 486, 487, 647, 488, 648,
	489, 490, 0, 491, 492, 0, 493, 494, 495, 496,
	497, 498, 499, 649, 500, 502, 501, 503, 0, 504,
	0, 505, 506, 507, 0, 0, 0, 0, 508, 0,
	510, 511, 512, 513, 509, 514, 515, 516, 517, 0,
	518, 519, 520, 0, 521, 522, 523, 524, 650, 525,
	0, 526, 527, 533, 534, 528, 529, 535, 536, 537,
	538, 539, 0, 541, 542, 540, 543, 544, 545, 0,
	546, 547, 530, 531, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 651, 0, 556, 0, 557, 558, 559,
	561, 532, 562, 567, 568, 652, 563, 564, 565, 566,
	653, 570, 571, 0, 572, 573, 0, 569, 560, 0,
	574, 575, 576, 577, 578, 579, 580, 353, 581, 0,
	582, 654, 655, 656, 657, 0, 591, 0, 583, 584,
	585, 658, 586, 659, 0, 587, 588, 589, 590, 0,
	592, 593, 0, 0, 594, 595, 596, 598, 599, 597,
	600, 0, 601, 0, 0, 602, 603, 604, 660, 661,
	662, 0, 606, 605, 607, 663, 263, 2921, 0, 0,
	0, 608, 609, 664, 610, 611, 612, 0, 0, 0,
	0, 0, 0, 269, 271, 270, 272, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 613,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 614, 615, 0, 287, 616, 288, 617,
	0, 618, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 619, 620, 621, 0, 296, 297, 622, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 623, 624, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 625, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 626, 627, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	628, 0, 0, 0, 363, 0, 364, 0, 0, 0,
	365, 366, 629, 630, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 631, 0, 632, 377, 0,
	378, 379, 380, 381, 382, 633, 634, 635, 459, 0,
	383, 384, 0, 385, 386, 387, 388, 0, 0, 0,
	0, 389, 390, 391, 393, 0, 0, 392, 636, 637,
	0, 638, 0, 394, 395, 0, 639, 0, 396, 397,
	398, 0, 399, 0, 0, 0, 400, 401, 402, 403,
	404, 405, 0, 406, 408, 407, 0, 409, 640, 0,
	410, 411, 0, 0, 412, 0, 0, 0, 413, 414,
	417, 0, 0, 415, 416, 418, 419, 0, 420, 421,
	423, 426, 422, 424, 425, 427, 440, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 442,
	0, 441, 0, 443, 444, 445, 450, 452, 453, 448,
	449, 451, 454, 455, 447, 0, 446, 0, 0, 0,
	456, 457, 0, 641, 458, 642, 460, 461, 0, 0,
	462, 0, 0, 0, 464, 465, 2918, 0, 0, 467,
	468, 643, 0, 469, 0, 644, 470, 471, 463, 472,
	473, 474, 475, 476, 477, 478, 479, 0, 480, 481,
	645, 482, 483, 484, 646, 485, 486, 487, 647, 488,
	648, 489, 490, 0, 491, 492, 0, 493, 494, 495,
	496, 497, 498, 499, 649, 500, 502, 501, 503, 0,
	504, 0, 505, 506, 507, 0, 0, 0, 0, 508,
	0, 510, 511, 512, 513, 509, 514, 515, 516, 517,
	0, 518, 519, 520, 0, 521, 522, 523, 524, 650,
	525, 0, 526, 527, 533, 534, 528, 529, 535, 536,
	537, 538, 539, 0, 541, 542, 540, 543, 544, 545,
	0, 546, 547, 530, 531, 548, 549, 0, 550, 551,
	552, 553, 554, 555, 651, 0, 556, 0, 557, 558,
	559, 561, 532, 562, 567, 568, 652, 563, 564, 565,
	566, 653, 570, 571, 0, 572, 573, 0, 569, 560,
	0, 574, 575, 576, 577, 578, 579, 580, 353, 581,
	0, 582, 654, 655, 656, 657, 0, 591, 0, 583,
	584, 585, 658, 586, 659, 0, 587, 588, 589, 590,
	0, 592, 593, 0, 0, 594, 595, 596, 598, 599,
	597, 600, 0, 601, 0, 0, 602, 603, 604, 660,
	661, 662, 263, 606, 605, 607, 663, 0, 0, 0,
	0, 0, 608, 609, 664, 610, 611, 612, 0, 269,
	271, 270, 272, 273, 274, 275, 276, 2251, 277, 278,
	0, 0, 0, 0, 0, 613, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 614,
	615, 0, 287, 616, 288, 617, 0, 618, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 619, 620,
	621, 0, 296, 297, 622, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 623, 624, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 625, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 626, 627, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 628, 0, 0, 0,
	363, 0, 364, 0, 0, 0, 365, 366, 629, 630,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 631, 0, 632, 377, 0, 378, 379, 380, 381,
	382, 633, 634, 635, 459, 0, 383, 384, 0, 385,
	386, 387, 388, 0, 0, 0, 0, 389, 390, 391,
	393, 0, 0, 392, 636, 637, 0, 638, 0, 394,
	395, 0, 639, 0, 396, 397, 398, 0, 399, 0,
	0, 0, 400, 401, 402, 403, 404, 405, 0, 406,
	408, 407, 0, 409, 640, 0, 410, 411, 0, 0,
	412, 0, 0, 0, 413, 414, 417, 0, 0, 415,
	416, 418, 419, 0, 420, 421, 423, 426, 422, 424,
	425, 427, 440, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 442, 0, 441, 0, 443,
	444, 445, 450, 452, 453, 448, 449, 451, 454, 455,
	447, 0, 446, 0, 0, 0, 456, 457, 0, 641,
	458, 642, 460, 461, 0, 0, 462, 0, 0, 0,
	464, 465, 466, 0, 0, 467, 468, 643, 0, 469,
	0, 644, 470, 471, 463, 472, 473, 474, 475, 476,
	477, 478, 479, 0, 480, 481, 645, 482, 483, 484,
	646, 485, 486, 487, 647, 488, 648, 489, 490, 0,
	491, 492, 0, 493, 494, 495, 496, 497, 498, 499,
	649, 500, 502, 501, 503, 0, 504, 0, 505, 506,
	507, 0, 0, 0, 0, 508, 0, 510, 511, 512,
	513, 509, 514, 515, 516, 517, 0, 518, 519, 520,
	0, 521, 522, 523, 524, 650, 525, 0, 526, 527,
	533, 534, 528, 529, 535, 536, 537, 538, 539, 0,
	541, 542, 540, 543, 544, 545, 0, 546, 547, 530,
	531, 548, 549, 0, 550, 551, 552, 553, 554, 555,
	651, 0, 556, 0, 557, 558, 559, 561, 532, 562,
	567, 568, 652, 563, 564, 565, 566, 653, 570, 571,
	0, 572, 573, 0, 569, 560, 0, 574, 575, 576,
	577, 578, 579, 580, 353, 581, 0, 582, 654, 655,
	656, 657, 0, 591, 0, 583, 584, 585, 658, 586,
	659, 0, 587, 588, 589, 590, 0, 592, 593, 0,
	0, 594, 595, 596, 598, 599, 597, 600, 0, 601,
	0, 0, 602, 603, 604, 660, 661, 662, 0, 606,
	605, 607, 663, 2239, 0, 263, 0, 0, 608, 609,
	664, 610, 611, 612, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 271, 270, 272, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 613, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 614, 615, 0, 287, 616, 288, 617, 0,
	618, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 619, 620, 621, 0, 296, 297, 622, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 623, 624, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 625, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 626, 627, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 628,
	0, 0, 0, 363, 0, 364, 0, 0, 0, 365,
	366, 629, 630, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 631, 0, 632, 377, 0, 378,
	379, 380, 381, 382, 633, 634, 635, 459, 0, 383,
	384, 0, 385, 386, 387, 388, 0, 0, 0, 0,
	389, 390, 391, 393, 0, 0, 392, 636, 637, 0,
	638, 0, 394, 395, 0, 639, 0, 396, 397, 398,
	0, 399, 0, 0, 0, 400, 401, 402, 403, 404,
	405, 0, 406, 408, 407, 0, 409, 640, 0, 410,
	411, 0, 0, 412, 0, 0, 0, 413, 414, 417,
	0, 0, 415, 416, 418, 419, 0, 420, 421, 423,
	426, 422, 424, 425, 427, 440, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 442, 0,
	441, 0, 443, 444, 445, 450, 452, 453, 448, 449,
	451, 454, 455, 447, 0, 446, 0, 0, 0, 456,
	457, 0, 641, 458, 642, 460, 461, 0, 0, 462,
	0, 0, 0, 464, 465, 466, 0, 0, 467, 468,
	643, 0, 469, 0, 644, 470, 471, 463, 472, 473,
	474, 475, 476, 477, 478, 479, 0, 480, 481, 645,
	482, 483, 484, 646, 485, 486, 487, 647, 488, 648,
	489, 490, 0, 491, 492, 0, 493, 494, 495, 496,
	497, 498, 499, 649, 500, 502, 501, 503, 0, 504,
	0, 505, 506, 507, 0, 0, 0, 0, 508, 0,
	510, 511, 512, 513, 509, 514, 515, 516, 517, 0,
	518, 519, 520, 0, 521, 522, 523, 524, 650, 525,
	0, 526, 527, 533, 534, 528, 529, 535, 536, 537,
	538, 539, 0, 541, 542, 540, 543, 544, 545, 0,
	546, 547, 530, 531, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 651, 0, 556, 0, 557, 558, 559,
	561, 532, 562, 567, 568, 652, 563, 564, 565, 566,
	653, 570, 571, 0, 572, 573, 0, 569, 560, 0,
	574, 575, 576, 577, 578, 579, 580, 353, 581, 0,
	582, 654, 655, 656, 657, 0, 591, 0, 583, 584,
	585, 658, 586, 659, 0, 587, 588, 589, 590, 0,
	592, 593, 0, 0, 594, 595, 596, 598, 599, 597,
	600, 0, 601, 0, 0, 602, 603, 604, 660, 661,
	662, 0, 606, 605, 607, 663, 753, 0, 263, 0,
	0, 608, 609, 664, 610, 611, 612, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 271, 270, 272, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 613, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 614, 615, 0, 287, 616,
	288, 617, 0, 618, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 619, 620, 621, 0, 296, 743,
	622, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 623,
	624, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 625, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 626,
	627, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 628, 0, 0, 0, 363, 0, 364, 0,
	0, 0, 365, 366, 629, 630, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 631, 0, 632,
	377, 0, 378, 379, 380, 381, 382, 633, 634, 635,
	459, 0, 383, 384, 0, 385, 386, 387, 388, 0,
	0, 0, 0, 389, 390, 391, 393, 0, 0, 392,
	636, 637, 0, 638, 0, 394, 395, 0, 639, 0,
	396, 397, 398, 0, 399, 0, 0, 0, 400, 401,
	402, 403, 404, 405, 0, 406, 408, 407, 0, 409,
	640, 0, 410, 411, 0, 0, 412, 0, 0, 0,
	413, 414, 417, 0, 0, 415, 416, 418, 419, 0,
	420, 421, 423, 426, 422, 424, 425, 427, 440, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 442, 0, 754, 0, 443, 444, 445, 450, 452,
	453, 448, 449, 451, 454, 455, 447, 0, 446, 0,
	0, 0, 456, 457, 0, 641, 458, 642, 460, 461,
	0, 0, 462, 0, 0, 0, 464, 465, 466, 0,
	0, 467, 468, 643, 0, 469, 0, 644, 470, 471,
	463, 472, 473, 474, 475, 476, 477, 478, 479, 0,
	480, 481, 645, 482, 483, 484, 646, 485, 486, 487,
	647, 488, 648, 489, 490, 0, 491, 492, 0, 493,
	494, 495, 496, 497, 498, 499, 649, 500, 502, 501,
	503, 0, 504, 0, 505, 506, 507, 0, 0, 0,
	0, 508, 0, 510, 511, 512, 513, 509, 514, 515,
	516, 517, 0, 518, 519, 520, 0, 521, 522, 523,
	524, 650, 525, 0, 526, 527, 533, 534, 528, 529,
	750, 536, 537, 538, 539, 0, 541, 542, 540, 543,
	1567, 545, 0, 546, 547, 530, 531, 548, 549, 0,
	550, 551, 552, 553, 554, 555, 651, 0, 556, 0,
	557, 558, 559, 561, 532, 562, 567, 568, 652, 563,
	564, 565, 566, 653, 570, 571, 0, 572, 573, 0,
	569, 560, 0, 574, 575, 576, 577, 578, 579, 580,
	353, 581, 0, 582, 749, 655, 656, 657, 0, 591,
	0, 583, 584, 585, 658, 586, 659, 0, 587, 588,
	589, 590, 0, 592, 593, 0, 0, 594, 595, 596,
	598, 599, 597, 600, 0, 601, 0, 0, 602, 603,
	604, 660, 661, 662, 0, 606, 605, 607, 663, 1540,
	0, 263, 0, 0, 608, 609, 664, 610, 611, 612,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 271,
	270, 272, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 613, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 614, 615,
	0, 287, 616, 288, 617, 0, 618, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 619, 620, 621,
	0, 296, 297, 622, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 623, 624, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 625, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 626, 627, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 628, 0, 0, 0, 363,
	0, 364, 0, 0, 0, 365, 366, 629, 630, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	631, 0, 632, 377, 0, 378, 379, 380, 381, 382,
	1539, 634, 635, 459, 0, 383, 384, 0, 385, 386,
	387, 388, 0, 0, 0, 0, 389, 390, 391, 393,
	0, 0, 392, 636, 637, 0, 638, 0, 394, 395,
	0, 639, 0, 396, 397, 398, 0, 399, 0, 0,
	0, 400, 401, 402, 403, 404, 405, 0, 406, 408,
	407, 0, 409, 640, 0, 410, 411, 0, 0, 412,
	0, 0, 0, 413, 414, 417, 0, 0, 415, 416,
	418, 419, 0, 420, 421, 423, 426, 422, 424, 425,
	427, 440, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 442, 0, 441, 0, 443, 444,
	445, 450, 452, 453, 448, 449, 451, 454, 455, 447,
	0, 446, 0, 0, 0, 456, 457, 0, 641, 458,
	642, 460, 461, 0, 0, 462, 0, 0, 0, 464,
	465, 466, 0, 0, 467, 468, 643, 0, 469, 0,
	644, 470, 471, 463, 472, 473, 474, 475, 476, 477,
	478, 479, 0, 480, 481, 645, 482, 483, 484, 646,
	485, 486, 487, 647, 488, 648, 489, 490, 0, 491,
	492, 0, 493, 494, 495, 496, 497, 498, 499, 649,
	500, 502, 501, 503, 0, 504, 0, 505, 506, 507,
	0, 0, 0, 0, 508, 0, 510, 511, 512, 513,
	509, 514, 515, 516, 517, 0, 518, 519, 520, 0,
	521, 522, 523, 524, 650, 525, 0, 526, 527, 533,
	534, 528, 529, 535, 536, 537, 538, 539, 0, 541,
	542, 540, 543, 544, 545, 0, 546, 547, 530, 531,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 651,
	0, 556, 0, 557, 558, 559, 561, 532, 562, 567,
	568, 652, 563, 564, 565, 566, 653, 570, 571, 0,
	572, 573, 0, 569, 560, 0, 574, 575, 576, 577,
	578, 579, 580, 353, 581, 0, 582, 654, 655, 656,
	657, 0, 591, 0, 583, 584, 585, 658, 586, 659,
	0, 587, 588, 589, 590, 0, 592, 593, 0, 0,
	594, 595, 596, 598, 599, 597, 600, 0, 601, 0,
	0, 602, 603, 604, 660, 661, 662, 0, 606, 605,
	607, 663, 1524, 0, 263, 0, 0, 608, 609, 664,
	610, 611, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 271, 270, 272, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 613, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 614, 615, 0, 287, 616, 288, 617, 0, 618,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	619, 620, 621, 0, 296, 297, 622, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 623, 624, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 625, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 626, 627, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 628, 0,
	0, 0, 363, 0, 364, 0, 0, 0, 365, 366,
	629, 630, 367, 368, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 631, 0, 632, 377, 0, 378, 379,
	380, 381, 382, 1522, 634, 635, 459, 0, 383, 384,
	0, 385, 386, 387, 388, 0, 0, 0, 0, 389,
	390, 391, 393, 0, 0, 392, 636, 637, 0, 638,
	0, 394, 395, 0, 639, 0, 396, 397, 398, 0,
	399, 0, 0, 0, 400, 401, 402, 403, 404, 405,
	0, 406, 408, 407, 0, 409, 640, 0, 410, 411,
	0, 0, 412, 0, 0, 0, 413, 414, 417, 0,
	0, 415, 416, 418, 419, 0, 420, 421, 423, 426,
	422, 424, 425, 427, 440, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 442, 0, 441,
	0, 443, 444, 445, 450, 452, 453, 448, 449, 451,
	454, 455, 447, 0, 446, 0, 0, 0, 456, 457,
	0, 641, 458, 642, 460, 461, 0, 0, 462, 0,
	0, 0, 464, 465, 466, 0, 0, 467, 468, 643,
	0, 469, 0, 644, 470, 471, 463, 472, 473, 474,
	475, 476, 477, 478, 479, 0, 480, 481, 645, 482,
	483, 484, 646, 485, 486, 487, 647, 488, 648, 489,
	490, 0, 491, 492, 0, 493, 494, 495, 496, 497,
	498, 499, 649, 500, 502, 501, 503, 0, 504, 0,
	505, 506, 507, 0, 0, 0, 0, 508, 0, 510,
	511, 512, 513, 509, 514, 515, 516, 517, 0, 518,
	519, 520, 0, 521, 522, 523, 524, 650, 525, 0,
	526, 527, 533, 534, 528, 529, 535, 536, 537, 538,
	539, 0, 541, 542, 540, 543, 544, 545, 0, 546,
	547, 530, 531, 548, 549, 0, 550, 551, 552, 553,
	554, 555, 651, 0, 556, 0, 557, 558, 559, 561,
	532, 562, 567, 568, 652, 563, 564, 565, 566, 653,
	570, 571, 0, 572, 573, 0, 569, 560, 0, 574,
	575, 576, 577, 578, 579, 580, 353, 581, 0, 582,
	654, 655, 656, 657, 0, 591, 0, 583, 584, 585,
	658, 586, 659, 0, 587, 588, 589, 590, 0, 592,
	593, 0, 0, 594, 595, 596, 598, 599, 597, 600,
	0, 601, 0, 0, 602, 603, 604, 660, 661, 662,
	0, 606, 605, 607, 663, 1517, 0, 263, 0, 0,
	608, 609, 664, 610, 611, 612, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 271, 270, 272, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	613, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 614, 615, 0, 287, 616, 288,
	617, 0, 618, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 619, 620, 621, 0, 296, 297, 622,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 623, 624,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 625, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 626, 627,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 628, 0, 0, 0, 363, 0, 364, 0, 0,
	0, 365, 366, 629, 630, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 631, 0, 632, 377,
	0, 378, 379, 380, 381, 382, 633, 634, 635, 459,
	0, 383, 384, 0, 385, 386, 387, 388, 0, 0,
	0, 0, 389, 390, 391, 393, 0, 0, 392, 636,
	637, 0, 638, 0, 394, 395, 0, 639, 0, 396,
	397, 398, 0, 399, 0, 0, 0, 400, 401, 402,
	403, 404, 405, 0, 406, 408, 407, 0, 409, 640,
	0, 410, 411, 0, 0, 412, 0, 0, 0, 413,
	414, 417, 0, 0, 415, 416, 418, 419, 0, 420,
	421, 423, 426, 422, 424, 425, 427, 440, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	442, 0, 441, 0, 443, 444, 445, 450, 452, 453,
	448, 449, 451, 454, 455, 447, 0, 446, 0, 0,
	0, 456, 457, 0, 641, 458, 642, 460, 461, 0,
	0, 462, 0, 0, 0, 464, 465, 466, 0, 0,
	467, 468, 643, 0, 469, 0, 644, 470, 471, 463,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 480,
	481, 645, 482, 483, 484, 646, 485, 486, 487, 647,
	488, 648, 489, 490, 0, 491, 492, 0, 493, 494,
	495, 496, 497, 498, 499, 649, 500, 502, 501, 503,
	0, 504, 0, 505, 506, 507, 0, 0, 0, 0,
	508, 0, 510, 511, 512, 513, 509, 514, 515, 516,
	517, 0, 518, 519, 520, 0, 521, 522, 523, 524,
	650, 525, 0, 526, 527, 533, 534, 528, 529, 535,
	536, 537, 538, 539, 0, 541, 542, 540, 543, 544,
	545, 0, 546, 547, 530, 531, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 651, 0, 556, 0, 557,
	558, 559, 561, 532, 562, 567, 568, 652, 563, 564,
	565, 566, 653, 570, 571, 0, 572, 573, 0, 569,
	560, 0, 574, 575, 576, 577, 578, 579, 580, 353,
	581, 0, 582, 654, 655, 656, 657, 0, 591, 0,
	583, 584, 585, 658, 586, 659, 0, 587, 588, 589,
	590, 0, 592, 593, 0, 0, 594, 595, 596, 598,
	599, 597, 600, 0, 601, 0, 0, 602, 603, 604,
	660, 661, 662, 0, 606, 605, 607, 663, 1494, 0,
	263, 0, 0, 608, 609, 664, 610, 611, 612, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 613, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 614, 615, 0,
	287, 616, 288, 617, 0, 618, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 619, 620, 621, 0,
	296, 297, 622, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 623, 624, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	625, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 626, 627, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 628, 0, 0, 0, 363, 0,
	364, 0, 0, 0, 365, 366, 629, 630, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 631,
	0, 632, 377, 0, 378, 379, 380, 381, 382, 1492,
	634, 635, 459, 0, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 0, 389, 390, 391, 393, 0,
	0, 392, 636, 637, 0, 638, 0, 394, 395, 0,
	639, 0, 396, 397, 398, 0, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 640, 0, 410, 411, 0, 0, 412, 0,
	0, 0, 413, 414, 417, 0, 0, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 0, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 0,
	446, 0, 0, 0, 456, 457, 0, 641, 458, 642,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 0, 469, 0, 644,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 647, 488, 648, 489, 490, 0, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 649, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 0, 521,
	522, 523, 524, 650, 525, 0, 526, 527, 533, 534,
	528, 529, 535, 536, 537, 538, 539, 0, 541, 542,
	540, 543, 544, 545, 0, 546, 547, 530, 531, 548,
	549, 0, 550, 551, 552, 553, 554, 555, 651, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	652, 563, 564, 565, 566, 653, 570, 571, 0, 572,
	573, 0, 569, 560, 0, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 654, 655, 656, 657,
	0, 591, 0, 583, 584, 585, 658, 586, 659, 0,
	587, 588, 589, 590, 0, 592, 593, 0, 0, 594,
	595, 596, 598, 599, 597, 600, 0, 601, 0, 0,
	602, 603, 604, 660, 661, 662, 0, 606, 605, 607,
	663, 1455, 0, 263, 0, 0, 608, 609, 664, 610,
	611, 612, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 271, 270, 272, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 613, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	614, 615, 0, 287, 616, 288, 617, 0, 618, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 619,
	620, 621, 0, 296, 297, 622, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 623, 624, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 625, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 626, 627, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 628, 0, 0,
	0, 363, 0, 364, 0, 0, 0, 365, 366, 629,
	630, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 631, 0, 632, 377, 0, 378, 379, 380,
	381, 382, 633, 634, 635, 459, 0, 383, 384, 0,
	385, 386, 387, 388, 0, 0, 0, 0, 389, 390,
	391, 393, 0, 0, 392, 636, 637, 0, 638, 0,
	394, 395, 0, 639, 0, 396, 397, 398, 0, 399,
	0, 0, 0, 400, 401, 402, 403, 404, 405, 0,
	406, 408, 407, 0, 409, 640, 0, 410, 411, 0,
	0, 412, 0, 0, 0, 413, 414, 417, 0, 0,
	415, 416, 418, 419, 0, 420, 421, 423, 426, 422,
	424, 425, 427, 440, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 442, 0, 441, 0,
	443, 444, 445, 450, 452, 453, 448, 449, 451, 454,
	455, 447, 0, 446, 0, 0, 0, 456, 457, 0,
	641, 458, 642, 460, 461, 0, 0, 462, 0, 0,
	0, 464, 465, 466, 0, 0, 467, 468, 643, 0,
	469, 0, 644, 470, 471, 463, 472, 473, 474, 475,
	476, 477, 478, 479, 0, 480, 481, 645, 482, 483,
	484, 646, 485, 486, 487, 647, 488, 648, 489, 490,
	0, 491, 492, 0, 493, 494, 495, 496, 497, 498,
	499, 649, 500, 502, 501, 503, 0, 504, 0, 505,
	506, 507, 0, 0, 0, 0, 508, 0, 510, 511,
	512, 513, 509, 514, 515, 516, 517, 0, 518, 519,
	520, 0, 521, 522, 523, 524, 650, 525, 0, 526,
	527, 533, 534, 528, 529, 535, 536, 537, 538, 539,
	0, 541, 542, 540, 543, 544, 545, 0, 546, 547,
	530, 531, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 651, 0, 556, 0, 557, 558, 559, 561, 532,
	562, 567, 568, 652, 563, 564, 565, 566, 653, 570,
	571, 0, 572, 573, 0, 569, 560, 0, 574, 575,
	576, 577, 578, 579, 580, 353, 581, 0, 582, 654,
	655, 656, 657, 0, 591, 0, 583, 584, 585, 658,
	586, 659, 0, 587, 588, 589, 590, 0, 592, 593,
	0, 0, 594, 595, 596, 598, 599, 597, 600, 0,
	601, 0, 0, 602, 603, 604, 660, 661, 662, 0,
	606, 605, 607, 663, 1441, 0, 263, 0, 0, 608,
	609, 664, 610, 611, 612, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 271, 270, 272, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 613,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 614, 615, 0, 287, 616, 288, 617,
	0, 618, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 619, 620, 621, 0, 296, 297, 622, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 623, 624, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 625, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 626, 627, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	628, 0, 0, 0, 363, 0, 364, 0, 0, 0,
	365, 366, 629, 630, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 631, 0, 632, 377, 0,
	378, 379, 380, 381, 382, 633, 634, 635, 459, 0,
	383, 384, 0, 385, 386, 387, 388, 0, 0, 0,
	0, 389, 390, 391, 393, 0, 0, 392, 636, 637,
	0, 638, 0, 394, 395, 0, 639, 0, 396, 397,
	398, 0, 399, 0, 0, 0, 400, 401, 402, 403,
	404, 405, 0, 406, 408, 407, 0, 409, 640, 0,
	410, 411, 0, 0, 412, 0, 0, 0, 413, 414,
	417, 0, 0, 415, 416, 418, 419, 0, 420, 421,
	423, 426, 422, 424, 425, 427, 440, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 442,
	0, 441, 0, 443, 444, 445, 450, 452, 453, 448,
	449, 451, 454, 455, 447, 0, 446, 0, 0, 0,
	456, 457, 0, 641, 458, 642, 460, 461, 0, 0,
	462, 0, 0, 0, 464, 465, 466, 0, 0, 467,
	468, 643, 0, 469, 0, 644, 470, 471, 463, 472,
	473, 474, 475, 476, 477, 478, 479, 0, 480, 481,
	645, 482, 483, 484, 646, 485, 486, 487, 647, 488,
	648, 489, 490, 0, 491, 492, 0, 493, 494, 495,
	496, 497, 498, 499, 649, 500, 502, 501, 503, 0,
	504, 0, 505, 506, 507, 0, 0, 0, 0, 508,
	0, 510, 511, 512, 513, 509, 514, 515, 516, 517,
	0, 518, 519, 520, 0, 521, 522, 523, 524, 650,
	525, 0, 526, 527, 533, 534, 528, 529, 535, 536,
	537, 538, 539, 0, 541, 542, 540, 543, 544, 545,
	0, 546, 547, 530, 531, 548, 549, 0, 550, 551,
	552, 553, 554, 555, 651, 0, 556, 0, 557, 558,
	559, 561, 532, 562, 567, 568, 652, 563, 564, 565,
	566, 653, 570, 571, 0, 572, 573, 0, 569, 560,
	0, 574, 575, 576, 577, 578, 579, 580, 353, 581,
	0, 582, 654, 655, 656, 657, 0, 591, 0, 583,
	584, 585, 658, 586, 659, 0, 587, 588, 589, 590,
	0, 592, 593, 0, 0, 594, 595, 596, 598, 599,
	597, 600, 0, 601, 0, 0, 602, 603, 604, 660,
	661, 662, 0, 606, 605, 607, 663, 1278, 0, 263,
	0, 0, 608, 609, 664, 610, 611, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 613, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 614, 615, 0, 287,
	616, 288, 617, 0, 618, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 619, 620, 621, 0, 296,
	297, 622, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	623, 624, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 625,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	626, 627, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 628, 0, 0, 0, 363, 0, 364,
	0, 0, 0, 365, 366, 629, 630, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 631, 0,
	632, 377, 0, 378, 379, 380, 381, 382, 1277, 634,
	635, 459, 0, 383, 384, 0, 385, 386, 387, 388,
	0, 0, 0, 0, 389, 390, 391, 393, 0, 0,
	392, 636, 637, 0, 638, 0, 394, 395, 0, 639,
	0, 396, 397, 398, 0, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 0, 406, 408, 407, 0,
	409, 640, 0, 410, 411, 0, 0, 412, 0, 0,
	0, 413, 414, 417, 0, 0, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 0, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 0, 446,
	0, 0, 0, 456, 457, 0, 641, 458, 642, 460,
	461, 0, 0, 462, 0, 0, 0, 464, 465, 466,
	0, 0, 467, 468, 643, 0, 469, 0, 644, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 647, 488, 648, 489, 490, 0, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 649, 500, 502,
	501, 503, 0, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 0, 518, 519, 520, 0, 521, 522,
	523, 524, 650, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 0, 541, 542, 540,
	543, 544, 545, 0, 546, 547, 530, 531, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 651, 0, 556,
	0, 557, 558, 559, 561, 532, 562, 567, 568, 652,
	563, 564, 565, 566, 653, 570, 571, 0, 572, 573,
	0, 569, 560, 0, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 0, 582, 654, 655, 656, 657, 0,
	591, 0, 583, 584, 585, 658, 586, 659, 0, 587,
	588, 589, 590, 0, 592, 593, 0, 0, 594, 595,
	596, 598, 599, 597, 600, 0, 601, 0, 0, 602,
	603, 604, 660, 661, 662, 0, 606, 605, 607, 663,
	1269, 0, 263, 0, 0, 608, 609, 664, 610, 611,
	612, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	271, 270, 272, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 613, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 614,
	615, 0, 287, 616, 288, 617, 0, 618, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 619, 620,
	621, 0, 296, 297, 622, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 623, 624, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 625, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 626, 627, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 628, 0, 0, 0,
	363, 0, 364, 0, 0, 0, 365, 366, 629, 630,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 631, 0, 632, 377, 0, 378, 379, 380, 381,
	382, 1268, 634, 635, 459, 0, 383, 384, 0, 385,
	386, 387, 388, 0, 0, 0, 0, 389, 390, 391,
	393, 0, 0, 392, 636, 637, 0, 638, 0, 394,
	395, 0, 639, 0, 396, 397, 398, 0, 399, 0,
	0, 0, 400, 401, 402, 403, 404, 405, 0, 406,
	408, 407, 0, 409, 640, 0, 410, 411, 0, 0,
	412, 0, 0, 0, 413, 414, 417, 0, 0, 415,
	416, 418, 419, 0, 420, 421, 423, 426, 422, 424,
	425, 427, 440, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 442, 0, 441, 0, 443,
	444, 445, 450, 452, 453, 448, 449, 451, 454, 455,
	447, 0, 446, 0, 0, 0, 456, 457, 0, 641,
	458, 642, 460, 461, 0, 0, 462, 0, 0, 0,
	464, 465, 466, 0, 0, 467, 468, 643, 0, 469,
	0, 644, 470, 471, 463, 472, 473, 474, 475, 476,
	477, 478, 479, 0, 480, 481, 645, 482, 483, 484,
	646, 485, 486, 487, 647, 488, 648, 489, 490, 0,
	491, 492, 0, 493, 494, 495, 496, 497, 498, 499,
	649, 500, 502, 501, 503, 0, 504, 0, 505, 506,
	507, 0, 0, 0, 0, 508, 0, 510, 511, 512,
	513, 509, 514, 515, 516, 517, 0, 518, 519, 520,
	0, 521, 522, 523, 524, 650, 525, 0, 526, 527,
	533, 534, 528, 529, 535, 536, 537, 538, 539, 0,
	541, 542, 540, 543, 544, 545, 0, 546, 547, 530,
	531, 548, 549, 0, 550, 551, 552, 553, 554, 555,
	651, 0, 556, 0, 557, 558, 559, 561, 532, 562,
	567, 568, 652, 563, 564, 565, 566, 653, 570, 571,
	0, 572, 573, 0, 569, 560, 0, 574, 575, 576,
	577, 578, 579, 580, 353, 581, 0, 582, 654, 655,
	656, 657, 0, 591, 0, 583, 584, 585, 658, 586,
	659, 0, 587, 588, 589, 590, 0, 592, 593, 0,
	0, 594, 595, 596, 598, 599, 597, 600, 0, 601,
	0, 0, 602, 603, 604, 660, 661, 662, 263, 606,
	605, 607, 663, 0, 0, 0, 0, 0, 608, 609,
	664, 610, 611, 612, 0, 269, 271, 270, 272, 273,
	274, 275, 276, 1222, 277, 278, 0, 0, 0, 0,
	0, 613, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 614, 615, 0, 287, 616,
	288, 617, 0, 618, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 619, 620, 621, 0, 296, 297,
	622, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 623,
	624, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 625, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 626,
	627, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 628, 0, 0, 0, 363, 0, 364, 0,
	0, 0, 365, 366, 629, 630, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 631, 0, 632,
	377, 0, 378, 379, 380, 381, 382, 633, 634, 635,
	459, 0, 383, 384, 0, 385, 386, 387, 388, 0,
	0, 0, 0, 389, 390, 391, 393, 0, 0, 392,
	636, 637, 0, 638, 0, 394, 395, 0, 639, 0,
	396, 397, 398, 0, 399, 0, 0, 0, 400, 401,
	402, 403, 404, 405, 0, 406, 408, 407, 0, 409,
	640, 0, 410, 411, 0, 0, 412, 0, 0, 0,
	413, 414, 417, 0, 0, 415, 416, 418, 419, 0,
	420, 421, 423, 426, 422, 424, 425, 427, 440, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 442, 0, 441, 0, 443, 444, 445, 450, 452,
	453, 448, 449, 451, 454, 455, 447, 0, 446, 0,
	0, 0, 456, 457, 0, 641, 458, 642, 460, 461,
	0, 0, 462, 0, 0, 0, 464, 465, 466, 0,
	0, 467, 468, 643, 0, 469, 0, 644, 470, 471,
	463, 472, 473, 474, 475, 476, 477, 478, 479, 0,
	480, 481, 645, 482, 483, 484, 646, 485, 486, 487,
	647, 488, 648, 489, 490, 0, 491, 492, 0, 493,
	494, 495, 496, 497, 498, 499, 649, 500, 502, 501,
	503, 0, 504, 0, 505, 506, 507, 0, 0, 0,
	0, 508, 0, 510, 511, 512, 513, 509, 514, 515,
	516, 517, 0, 518, 519, 520, 0, 521, 522, 523,
	524, 650, 525, 0, 526, 527, 533, 534, 528, 529,
	535, 536, 537, 538, 539, 0, 541, 542, 540, 543,
	544, 545, 0, 546, 547, 530, 531, 548, 549, 0,
	550, 551, 552, 553, 554, 555, 651, 0, 556, 0,
	557, 558, 559, 561, 532, 562, 567, 568, 652, 563,
	564, 565, 566, 653, 570, 571, 0, 572, 573, 0,
	569, 560, 0, 574, 575, 576, 577, 578, 579, 580,
	353, 581, 0, 582, 654, 655, 656, 657, 0, 591,
	0, 583, 584, 585, 658, 586, 659, 0, 587, 588,
	589, 590, 0, 592, 593, 0, 0, 594, 595, 596,
	598, 599, 597, 600, 0, 601, 0, 0, 602, 603,
	604, 660, 661, 662, 263, 606, 605, 607, 663, 0,
	0, 0, 0, 0, 608, 609, 664, 610, 611, 612,
	0, 269, 271, 270, 272, 273, 274, 275, 276, 759,
	277, 278, 0, 0, 0, 0, 0, 613, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 614, 615, 0, 287, 616, 288, 617, 0, 618,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	619, 620, 621, 0, 296, 297, 622, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 623, 624, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 625, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 626, 627, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 628, 0,
	0, 0, 363, 0, 364, 0, 0, 0, 365, 366,
	629, 630, 367, 368, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 631, 0, 632, 377, 0, 378, 379,
	380, 381, 382, 633, 634, 635, 459, 0, 383, 384,
	0, 385, 386, 387, 388, 0, 0, 0, 0, 389,
	390, 391, 393, 0, 0, 392, 636, 637, 0, 638,
	0, 394, 395, 0, 639, 0, 396, 397, 398, 0,
	399, 0, 0, 0, 400, 401, 402, 403, 404, 405,
	0, 406, 408, 407, 0, 409, 640, 0, 410, 411,
	0, 0, 412, 0, 0, 0, 413, 414, 417, 0,
	0, 415, 416, 418, 419, 0, 420, 421, 423, 426,
	422, 424, 425, 427, 440, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 442, 0, 441,
	0, 443, 444, 445, 450, 452, 453, 448, 449, 451,
	454, 455, 447, 0, 446, 0, 0, 0, 456, 457,
	0, 641, 458, 642, 460, 461, 0, 0, 462, 0,
	0, 0, 464, 465, 466, 0, 0, 467, 468, 643,
	0, 469, 0, 644, 470, 471, 463, 472, 473, 474,
	475, 476, 477, 478, 479, 0, 480, 481, 645, 482,
	483, 484, 646, 485, 486, 487, 647, 488, 648, 489,
	490, 0, 491, 492, 0, 493, 494, 495, 496, 497,
	498, 499, 649, 500, 502, 501, 503, 0, 504, 0,
	505, 506, 507, 0, 0, 0, 0, 508, 0, 510,
	511, 512, 513, 509, 514, 515, 516, 517, 0, 518,
	519, 520, 0, 521, 522, 523, 524, 650, 525, 0,
	526, 527, 533, 534, 528, 529, 535, 536, 537, 538,
	539, 0, 541, 542, 540, 543, 544, 545, 0, 546,
	547, 530, 531, 548, 549, 0, 550, 551, 552, 553,
	554, 555, 651, 0, 556, 0, 557, 558, 559, 561,
	532, 562, 567, 568, 652, 563, 564, 565, 566, 653,
	570, 571, 0, 572, 573, 0, 569, 560, 0, 574,
	575, 576, 577, 578, 579, 580, 353, 581, 0, 582,
	654, 655, 656, 657, 0, 591, 0, 583, 584, 585,
	658, 586, 659, 0, 587, 588, 589, 590, 0, 592,
	593, 0, 0, 594, 595, 596, 598, 599, 597, 600,
	0, 601, 0, 0, 602, 603, 604, 660, 661, 662,
	0, 606, 605, 607, 663, 753, 0, 263, 0, 0,
	608, 609, 664, 610, 611, 612, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 271, 270, 272, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	613, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 614, 615, 0, 287, 616, 288,
	617, 0, 618, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 619, 620, 621, 0, 296, 743, 622,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 741, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 623, 624,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 625, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 626, 627,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 628, 0, 0, 0, 363, 0, 364, 0, 0,
	0, 365, 366, 629, 630, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 631, 0, 632, 377,
	0, 378, 379, 380, 381, 382, 633, 634, 635, 459,
	0, 383, 384, 0, 385, 386, 387, 388, 0, 0,
	0, 0, 389, 390, 391, 393, 0, 0, 392, 636,
	637, 0, 638, 0, 394, 395, 0, 639, 0, 396,
	397, 398, 0, 399, 0, 0, 0, 400, 401, 402,
	403, 404, 405, 0, 406, 408, 407, 0, 409, 640,
	0, 410, 411, 0, 0, 412, 0, 0, 0, 413,
	742, 417, 0, 0, 415, 416, 418, 419, 0, 420,
	421, 423, 426, 422, 424, 425, 427, 440, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	442, 0, 754, 0, 443, 444, 445, 450, 452, 453,
	448, 449, 451, 454, 455, 447, 0, 446, 0, 0,
	0, 456, 457, 0, 641, 458, 642, 460, 461, 0,
	0, 462, 0, 0, 0, 464, 465, 466, 0, 0,
	467, 468, 643, 0, 469, 0, 644, 470, 471, 463,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 480,
	481, 645, 482, 483, 484, 646, 485, 486, 487, 647,
	488, 648, 489, 490, 0, 491, 492, 0, 493, 494,
	495, 496, 497, 498, 499, 649, 500, 502, 501, 503,
	0, 504, 0, 505, 506, 507, 0, 0, 0, 0,
	508, 0, 510, 511, 512, 513, 509, 514, 515, 516,
	517, 0, 518, 519, 520, 0, 521, 522, 523, 524,
	744, 525, 0, 526, 527, 533, 534, 528, 529, 750,
	536, 537, 538, 539, 0, 541, 542, 540, 543, 745,
	545, 0, 546, 547, 530, 531, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 651, 0, 556, 0, 557,
	558, 559, 561, 532, 562, 567, 568, 652, 563, 564,
	565, 566, 653, 570, 571, 0, 572, 573, 0, 569,
	560, 0, 574, 575, 576, 577, 578, 579, 580, 353,
	581, 0, 582, 749, 655, 656, 657, 0, 591, 0,
	583, 747, 585, 658, 586, 659, 0, 587, 588, 589,
	590, 0, 592, 593, 0, 0, 594, 595, 596, 598,
	599, 597, 600, 0, 601, 0, 0, 602, 603, 604,
	660, 661, 662, 0, 606, 605, 607, 663, 735, 0,
	263, 0, 0, 608, 609, 664, 610, 611, 612, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 271, 270,
	272, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 613, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 614, 615, 0,
	287, 616, 288, 617, 0, 618, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 619, 620, 621, 0,
	296, 297, 622, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 623, 624, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	625, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 626, 627, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 628, 0, 0, 0, 363, 0,
	364, 0, 0, 0, 365, 366, 629, 630, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 631,
	0, 632, 377, 0, 378, 379, 380, 381, 382, 633,
	634, 635, 459, 0, 383, 384, 0, 385, 386, 387,
	388, 0, 0, 0, 0, 389, 390, 391, 393, 0,
	0, 392, 636, 637, 0, 638, 0, 394, 395, 0,
	639, 0, 396, 397, 398, 0, 399, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 0, 406, 408, 407,
	0, 409, 640, 0, 410, 411, 0, 0, 412, 0,
	0, 0, 413, 414, 417, 0, 0, 415, 416, 418,
	419, 0, 420, 421, 423, 426, 422, 424, 425, 427,
	440, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 442, 0, 441, 0, 443, 444, 445,
	450, 452, 453, 448, 449, 451, 454, 455, 447, 0,
	446, 0, 0, 0, 456, 457, 0, 641, 458, 642,
	460, 461, 0, 0, 462, 0, 0, 0, 464, 465,
	466, 0, 0, 467, 468, 643, 0, 469, 0, 644,
	470, 471, 463, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 480, 481, 645, 482, 483, 484, 646, 485,
	486, 487, 647, 488, 648, 489, 490, 0, 491, 492,
	0, 493, 494, 495, 496, 497, 498, 499, 649, 500,
	502, 501, 503, 0, 504, 0, 505, 506, 507, 0,
	0, 0, 0, 508, 0, 510, 511, 512, 513, 509,
	514, 515, 516, 517, 0, 518, 519, 520, 0, 521,
	522, 523, 524, 650, 525, 0, 526, 527, 736, 534,
	528, 529, 535, 536, 537, 538, 539, 0, 541, 542,
	540, 543, 544, 545, 0, 546, 547, 530, 531, 548,
	549, 0, 550, 551, 552, 553, 554, 555, 651, 0,
	556, 0, 557, 558, 559, 561, 532, 562, 567, 568,
	652, 563, 564, 565, 566, 653, 570, 571, 0, 572,
	573, 0, 569, 560, 0, 574, 575, 576, 577, 578,
	579, 580, 353, 581, 0, 582, 654, 655, 656, 657,
	0, 591, 0, 583, 584, 585, 658, 586, 659, 0,
	587, 588, 589, 590, 0, 592, 593, 0, 0, 594,
	595, 596, 598, 599, 597, 600, 0, 601, 0, 0,
	602, 603, 604, 660, 661, 662, 0, 606, 605, 607,
	663, 698, 0, 263, 0, 0, 608, 609, 664, 610,
	611, 612, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 271, 270, 272, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 613, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	614, 615, 0, 287, 616, 288, 617, 0, 618, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 619,
	620, 621, 0, 296, 297, 622, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 623, 624, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 625, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 626, 627, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 628, 0, 0,
	0, 363, 0, 364, 0, 0, 0, 365, 366, 629,
	630, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 631, 0, 632, 377, 0, 378, 379, 380,
	381, 382, 633, 634, 635, 459, 0, 383, 384, 0,
	385, 386, 387, 388, 0, 0, 0, 0, 389, 390,
	391, 393, 0, 0, 392, 636, 637, 0, 638, 0,
	394, 395, 0, 639, 0, 396, 397, 398, 0, 399,
	0, 0, 0, 400, 401, 402, 403, 404, 405, 0,
	406, 408, 407, 0, 409, 640, 0, 410, 411, 0,
	0, 412, 0, 0, 0, 413, 414, 417, 0, 0,
	415, 416, 418, 419, 0, 420, 421, 423, 426, 422,
	424, 425, 427, 440, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 442, 0, 441, 0,
	443, 444, 445, 450, 452, 453, 448, 449, 451, 454,
	455, 447, 0, 446, 0, 0, 0, 456, 457, 0,
	641, 458, 642, 460, 461, 0, 0, 462, 0, 0,
	0, 464, 465, 466, 0, 0, 467, 468, 643, 0,
	469, 0, 644, 470, 471, 463, 472, 473, 474, 475,
	476, 477, 478, 479, 0, 480, 481, 645, 482, 483,
	484, 646, 485, 486, 487, 647, 488, 648, 489, 490,
	0, 491, 492, 0, 493, 494, 495, 496, 497, 498,
	499, 649, 500, 502, 501, 503, 0, 504, 0, 505,
	506, 507, 0, 0, 0, 0, 508, 0, 510, 511,
	512, 513, 509, 514, 515, 516, 517, 0, 518, 519,
	520, 0, 521, 522, 523, 524, 650, 525, 0, 526,
	527, 533, 534, 528, 529, 535, 536, 537, 538, 539,
	0, 541, 542, 540, 543, 544, 545, 0, 546, 547,
	530, 531, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 651, 0, 556, 0, 557, 558, 559, 561, 532,
	562, 567, 568, 652, 563, 564, 565, 566, 653, 570,
	571, 0, 572, 573, 0, 569, 560, 0, 574, 575,
	576, 577, 578, 579, 580, 353, 581, 0, 582, 654,
	655, 656, 657, 0, 591, 0, 583, 584, 585, 658,
	586, 659, 0, 587, 588, 589, 590, 0, 592, 593,
	0, 0, 594, 595, 596, 598, 599, 597, 600, 0,
	601, 0, 0, 602, 603, 604, 660, 661, 662, 0,
	606, 605, 607, 663, 692, 0, 263, 0, 0, 608,
	609, 664, 610, 611, 612, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 271, 270, 272, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 613,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 614, 615, 0, 287, 616, 288, 617,
	0, 618, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 619, 620, 621, 0, 296, 297, 622, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 623, 624, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 625, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 626, 627, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	628, 0, 0, 0, 363, 0, 364, 0, 0, 0,
	365, 366, 629, 630, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 631, 0, 632, 377, 0,
	378, 379, 380, 381, 382, 633, 634, 635, 459, 0,
	383, 384, 0, 385, 386, 387, 388, 0, 0, 0,
	0, 389, 390, 391, 393, 0, 0, 392, 636, 637,
	0, 638, 0, 394, 395, 0, 639, 0, 396, 397,
	398, 0, 399, 0, 0, 0, 400, 401, 402, 403,
	404, 405, 0, 406, 408, 407, 0, 409, 640, 0,
	410, 411, 0, 0, 412, 0, 0, 0, 413, 414,
	417, 0, 0, 415, 416, 418, 419, 0, 420, 421,
	423, 426, 422, 424, 425, 427, 440, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 442,
	0, 441, 0, 443, 444, 445, 450, 452, 453, 448,
	449, 451, 454, 455, 447, 0, 446, 0, 0, 0,
	456, 457, 0, 641, 458, 642, 460, 461, 0, 0,
	462, 0, 0, 0, 464, 465, 466, 0, 0, 467,
	468, 643, 0, 469, 0, 644, 470, 471, 463, 472,
	473, 474, 475, 476, 477, 478, 479, 0, 480, 481,
	645, 482, 483, 484, 646, 485, 486, 487, 647, 488,
	648, 489, 490, 0, 491, 492, 0, 493, 494, 495,
	496, 497, 498, 499, 649, 500, 502, 501, 503, 0,
	504, 0, 505, 506, 507, 0, 0, 0, 0, 508,
	0, 510, 511, 512, 513, 509, 514, 515, 516, 517,
	0, 518, 519, 520, 0, 521, 522, 523, 524, 650,
	525, 0, 526, 527, 533, 534, 528, 529, 535, 536,
	537, 538, 539, 0, 541, 542, 540, 543, 544, 545,
	0, 546, 547, 530, 531, 548, 549, 0, 550, 551,
	552, 553, 554, 555, 651, 0, 556, 0, 557, 558,
	559, 561, 532, 562, 567, 568, 652, 563, 564, 565,
	566, 653, 570, 571, 0, 572, 573, 0, 569, 560,
	0, 574, 575, 576, 577, 578, 579, 580, 353, 581,
	0, 582, 654, 655, 656, 657, 0, 591, 0, 583,
	584, 585, 658, 586, 659, 0, 587, 588, 589, 590,
	0, 592, 593, 0, 0, 594, 595, 596, 598, 599,
	597, 600, 0, 601, 0, 0, 602, 603, 604, 660,
	661, 662, 0, 606, 605, 607, 663, 670, 0, 263,
	0, 0, 608, 609, 664, 610, 611, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 613, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 614, 615, 0, 287,
	616, 288, 617, 0, 618, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 619, 620, 621, 0, 296,
	297, 622, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	623, 624, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 625,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	626, 627, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 628, 0, 0, 0, 363, 0, 364,
	0, 0, 0, 365, 366, 629, 630, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 631, 0,
	632, 377, 0, 378, 379, 380, 381, 382, 633, 634,
	635, 459, 0, 383, 384, 0, 385, 386, 387, 388,
	0, 0, 0, 0, 389, 390, 391, 393, 0, 0,
	392, 636, 637, 0, 638, 0, 394, 395, 0, 639,
	0, 396, 397, 398, 0, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 0, 406, 408, 407, 0,
	409, 640, 0, 410, 411, 0, 0, 412, 0, 0,
	0, 413, 414, 417, 0, 0, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 0, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 0, 446,
	0, 0, 0, 456, 457, 0, 641, 458, 642, 460,
	461, 0, 0, 462, 0, 0, 0, 464, 465, 466,
	0, 0, 467, 468, 643, 0, 469, 0, 644, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 647, 488, 648, 489, 490, 0, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 649, 500, 502,
	501, 503, 0, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 0, 518, 519, 520, 0, 521, 522,
	523, 524, 650, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 0, 541, 542, 540,
	543, 544, 545, 0, 546, 547, 530, 531, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 651, 0, 556,
	0, 557, 558, 559, 561, 532, 562, 567, 568, 652,
	563, 564, 565, 566, 653, 570, 571, 0, 572, 573,
	0, 569, 560, 0, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 0, 582, 654, 655, 656, 657, 0,
	591, 0, 583, 584, 585, 658, 586, 659, 0, 587,
	588, 589, 590, 0, 592, 593, 0, 0, 594, 595,
	596, 598, 599, 597, 600, 0, 601, 0, 0, 602,
	603, 604, 660, 661, 662, 263, 606, 605, 607, 663,
	0, 0, 0, 0, 0, 608, 609, 664, 610, 611,
	612, 0, 269, 271, 270, 272, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 613, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 614, 615, 0, 287, 616, 288, 617, 0,
	618, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 619, 620, 621, 0, 296, 297, 622, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 623, 624, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 625, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 626, 627, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 628,
	0, 0, 0, 363, 0, 364, 0, 0, 0, 365,
	366, 629, 630, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 631, 0, 632, 377, 0, 378,
	379, 380, 381, 382, 633, 634, 635, 459, 0, 383,
	384, 0, 385, 386, 387, 388, 0, 0, 0, 0,
	389, 390, 391, 393, 0, 0, 392, 636, 637, 0,
	638, 0, 394, 395, 0, 639, 0, 396, 397, 398,
	0, 399, 0, 0, 0, 400, 401, 402, 403, 404,
	405, 0, 406, 408, 407, 0, 409, 640, 0, 410,
	411, 0, 0, 412, 0, 0, 0, 413, 414, 417,
	0, 0, 415, 416, 418, 419, 0, 420, 421, 423,
	426, 422, 424, 425, 427, 440, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 442, 0,
	441, 0, 443, 444, 445, 450, 452, 453, 448, 449,
	451, 454, 455, 447, 0, 446, 0, 0, 0, 456,
	457, 0, 641, 458, 642, 460, 461, 0, 0, 462,
	0, 0, 0, 464, 465, 466, 0, 0, 467, 468,
	643, 0, 469, 0, 644, 470, 471, 463, 472, 473,
	474, 475, 476, 477, 478, 479, 0, 480, 481, 645,
	482, 483, 484, 646, 485, 486, 487, 647, 488, 648,
	489, 490, 0, 491, 492, 0, 493, 494, 495, 496,
	497, 498, 499, 649, 500, 502, 501, 503, 0, 504,
	0, 505, 506, 507, 0, 0, 0, 0, 508, 0,
	510, 511, 512, 513, 509, 514, 515, 516, 517, 0,
	518, 519, 520, 0, 521, 522, 523, 524, 650, 525,
	0, 526, 527, 533, 534, 528, 529, 535, 536, 537,
	538, 539, 0, 541, 542, 540, 543, 544, 545, 0,
	546, 547, 530, 531, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 651, 0, 556, 0, 557, 558, 559,
	561, 532, 562, 567, 568, 652, 563, 564, 565, 566,
	653, 570, 571, 0, 572, 573, 0, 569, 560, 0,
	574, 575, 576, 577, 578, 579, 580, 353, 581, 0,
	582, 654, 655, 656, 657, 0, 591, 0, 583, 584,
	585, 658, 586, 659, 0, 587, 588, 589, 590, 0,
	592, 593, 0, 0, 594, 595, 596, 598, 599, 597,
	600, 0, 601, 0, 0, 602, 603, 604, 660, 661,
	662, 263, 606, 605, 607, 663, 0, 0, 0, 0,
	0, 608, 609, 664, 610, 611, 612, 0, 269, 271,
	270, 272, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 613, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 614, 615,
	0, 287, 616, 288, 617, 0, 618, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 619, 620, 621,
	0, 296, 297, 622, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 623, 624, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 625, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 626, 627, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 628, 0, 0, 0, 363,
	0, 364, 0, 0, 0, 365, 366, 629, 630, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	631, 0, 632, 377, 0, 378, 379, 380, 381, 382,
	3444, 634, 635, 459, 0, 383, 384, 0, 385, 386,
	387, 388, 0, 0, 0, 0, 389, 390, 391, 393,
	0, 0, 392, 636, 637, 0, 638, 0, 394, 395,
	0, 639, 0, 396, 397, 398, 0, 399, 0, 0,
	0, 400, 401, 402, 403, 404, 405, 0, 406, 408,
	407, 0, 409, 640, 0, 410, 411, 0, 0, 412,
	0, 0, 0, 413, 414, 417, 0, 0, 415, 416,
	418, 419, 0, 420, 421, 423, 426, 422, 424, 425,
	427, 440, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 442, 0, 441, 0, 443, 444,
	445, 450, 452, 453, 448, 449, 451, 454, 455, 447,
	0, 446, 0, 0, 0, 456, 457, 0, 641, 458,
	642, 460, 461, 0, 0, 462, 0, 0, 0, 464,
	465, 466, 0, 0, 467, 468, 643, 0, 469, 0,
	644, 470, 471, 463, 472, 473, 474, 475, 476, 477,
	478, 479, 0, 480, 481, 645, 482, 483, 484, 646,
	485, 486, 487, 647, 488, 648, 489, 490, 0, 491,
	492, 0, 493, 494, 495, 496, 497, 498, 499, 649,
	500, 502, 501, 503, 0, 504, 0, 505, 506, 507,
	0, 0, 0, 0, 508, 0, 510, 511, 512, 513,
	509, 514, 515, 516, 517, 0, 518, 519, 520, 0,
	521, 522, 523, 524, 650, 525, 0, 526, 527, 533,
	534, 528, 529, 535, 536, 537, 538, 539, 0, 541,
	542, 540, 543, 544, 545, 0, 546, 547, 530, 531,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 651,
	0, 556, 0, 557, 558, 559, 561, 532, 562, 567,
	568, 652, 563, 564, 565, 566, 653, 570, 571, 0,
	572, 573, 0, 569, 560, 0, 574, 575, 576, 577,
	578, 579, 580, 353, 581, 0, 582, 654, 655, 656,
	657, 0, 591, 0, 583, 584, 585, 658, 586, 659,
	0, 587, 588, 589, 590, 0, 592, 593, 0, 0,
	594, 595, 596, 598, 599, 597, 600, 0, 601, 0,
	0, 602, 603, 604, 660, 661, 662, 263, 606, 605,
	607, 663, 0, 0, 0, 0, 0, 608, 609, 664,
	610, 611, 612, 0, 269, 271, 270, 272, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	613, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 614, 615, 0, 287, 616, 288,
	617, 0, 618, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 619, 620, 621, 0, 296, 297, 622,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 623, 624,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 625, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 626, 627,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 628, 0, 0, 0, 363, 0, 364, 0, 0,
	0, 365, 366, 629, 630, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 631, 0, 632, 377,
	0, 378, 379, 380, 381, 382, 3381, 634, 635, 459,
	0, 383, 384, 0, 385, 386, 387, 388, 0, 0,
	0, 0, 389, 390, 391, 393, 0, 0, 392, 636,
	637, 0, 638, 0, 394, 395, 0, 639, 0, 396,
	397, 398, 0, 399, 0, 0, 0, 400, 401, 402,
	403, 404, 405, 0, 406, 408, 407, 0, 409, 640,
	0, 410, 411, 0, 0, 412, 0, 0, 0, 413,
	414, 417, 0, 0, 415, 416, 418, 419, 0, 420,
	421, 423, 426, 422, 424, 425, 427, 440, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	442, 0, 441, 0, 443, 444, 445, 450, 452, 453,
	448, 449, 451, 454, 455, 447, 0, 446, 0, 0,
	0, 456, 457, 0, 641, 458, 642, 460, 461, 0,
	0, 462, 0, 0, 0, 464, 465, 466, 0, 0,
	467, 468, 643, 0, 469, 0, 644, 470, 471, 463,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 480,
	481, 645, 482, 483, 484, 646, 485, 486, 487, 647,
	488, 648, 489, 490, 0, 491, 492, 0, 493, 494,
	495, 496, 497, 498, 499, 649, 500, 502, 501, 503,
	0, 504, 0, 505, 506, 507, 0, 0, 0, 0,
	508, 0, 510, 511, 512, 513, 509, 514, 515, 516,
	517, 0, 518, 519, 520, 0, 521, 522, 523, 524,
	650, 525, 0, 526, 527, 533, 534, 528, 529, 535,
	536, 537, 538, 539, 0, 541, 542, 540, 543, 544,
	545, 0, 546, 547, 530, 531, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 651, 0, 556, 0, 557,
	558, 559, 561, 532, 562, 567, 568, 652, 563, 564,
	565, 566, 653, 570, 571, 0, 572, 573, 0, 569,
	560, 0, 574, 575, 576, 577, 578, 579, 580, 353,
	581, 0, 582, 654, 655, 656, 657, 0, 591, 0,
	583, 584, 585, 658, 586, 659, 0, 587, 588, 589,
	590, 0, 592, 593, 0, 0, 594, 595, 596, 598,
	599, 597, 600, 0, 601, 0, 0, 602, 603, 604,
	660, 661, 662, 263, 606, 605, 607, 663, 0, 0,
	0, 0, 0, 608, 609, 664, 610, 611, 612, 0,
	269, 271, 270, 272, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 613, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	614, 615, 0, 287, 616, 288, 617, 0, 618, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 619,
	620, 621, 0, 296, 297, 622, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 623, 624, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 625, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 626, 627, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 628, 0, 0,
	0, 363, 0, 364, 0, 0, 0, 365, 366, 629,
	630, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 631, 0, 632, 377, 0, 378, 379, 380,
	381, 382, 3314, 634, 635, 459, 0, 383, 384, 0,
	385, 386, 387, 388, 0, 0, 0, 0, 389, 390,
	391, 393, 0, 0, 392, 636, 637, 0, 638, 0,
	394, 395, 0, 639, 0, 396, 397, 398, 0, 399,
	0, 0, 0, 400, 401, 402, 403, 404, 405, 0,
	406, 408, 407, 0, 409, 640, 0, 410, 411, 0,
	0, 412, 0, 0, 0, 413, 414, 417, 0, 0,
	415, 416, 418, 419, 0, 420, 421, 423, 426, 422,
	424, 425, 427, 440, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 442, 0, 441, 0,
	443, 444, 445, 450, 452, 453, 448, 449, 451, 454,
	455, 447, 0, 446, 0, 0, 0, 456, 457, 0,
	641, 458, 642, 460, 461, 0, 0, 462, 0, 0,
	0, 464, 465, 466, 0, 0, 467, 468, 643, 0,
	469, 0, 644, 470, 471, 463, 472, 473, 474, 475,
	476, 477, 478, 479, 0, 480, 481, 645, 482, 483,
	484, 646, 485, 486, 487, 647, 488, 648, 489, 490,
	0, 491, 492, 0, 493, 494, 495, 496, 497, 498,
	499, 649, 500, 502, 501, 503, 0, 504, 0, 505,
	506, 507, 0, 0, 0, 0, 508, 0, 510, 511,
	512, 513, 509, 514, 515, 516, 517, 0, 518, 519,
	520, 0, 521, 522, 523, 524, 650, 525, 0, 526,
	527, 533, 534, 528, 529, 535, 536, 537, 538, 539,
	0, 541, 542, 540, 543, 544, 545, 0, 546, 547,
	530, 531, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 651, 0, 556, 0, 557, 558, 559, 561, 532,
	562, 567, 568, 652, 563, 564, 565, 566, 653, 570,
	571, 0, 572, 573, 0, 569, 560, 0, 574, 575,
	576, 577, 578, 579, 580, 353, 581, 0, 582, 654,
	655, 656, 657, 0, 591, 0, 583, 584, 585, 658,
	586, 659, 0, 587, 588, 589, 590, 0, 592, 593,
	0, 0, 594, 595, 596, 598, 599, 597, 600, 0,
	601, 0, 0, 602, 603, 604, 660, 661, 662, 263,
	606, 605, 607, 663, 0, 0, 0, 0, 0, 608,
	609, 664, 610, 611, 612, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 613, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 614, 615, 0, 287,
	616, 288, 617, 0, 618, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 619, 620, 621, 0, 296,
	297, 622, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	623, 624, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 625,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	626, 627, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 628, 0, 0, 0, 363, 0, 364,
	0, 0, 0, 365, 366, 629, 630, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 631, 0,
	632, 377, 0, 378, 379, 380, 381, 382, 3312, 634,
	635, 459, 0, 383, 384, 0, 385, 386, 387, 388,
	0, 0, 0, 0, 389, 390, 391, 393, 0, 0,
	392, 636, 637, 0, 638, 0, 394, 395, 0, 639,
	0, 396, 397, 398, 0, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 0, 406, 408, 407, 0,
	409, 640, 0, 410, 411, 0, 0, 412, 0, 0,
	0, 413, 414, 417, 0, 0, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 0, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 0, 446,
	0, 0, 0, 456, 457, 0, 641, 458, 642, 460,
	461, 0, 0, 462, 0, 0, 0, 464, 465, 466,
	0, 0, 467, 468, 643, 0, 469, 0, 644, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 647, 488, 648, 489, 490, 0, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 649, 500, 502,
	501, 503, 0, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 0, 518, 519, 520, 0, 521, 522,
	523, 524, 650, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 0, 541, 542, 540,
	543, 544, 545, 0, 546, 547, 530, 531, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 651, 0, 556,
	0, 557, 558, 559, 561, 532, 562, 567, 568, 652,
	563, 564, 565, 566, 653, 570, 571, 0, 572, 573,
	0, 569, 560, 0, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 0, 582, 654, 655, 656, 657, 0,
	591, 0, 583, 584, 585, 658, 586, 659, 0, 587,
	588, 589, 590, 0, 592, 593, 0, 0, 594, 595,
	596, 598, 599, 597, 600, 0, 601, 0, 0, 602,
	603, 604, 660, 661, 662, 263, 606, 605, 607, 663,
	0, 0, 0, 0, 0, 608, 609, 664, 610, 611,
	612, 0, 269, 271, 270, 272, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 613, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 614, 615, 0, 287, 616, 288, 617, 0,
	618, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 619, 620, 621, 0, 296, 297, 622, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 623, 624, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 625, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 626, 627, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 628,
	0, 0, 0, 363, 0, 364, 0, 0, 0, 365,
	366, 629, 630, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 631, 0, 632, 377, 0, 378,
	379, 380, 381, 382, 3297, 634, 635, 459, 0, 383,
	384, 0, 385, 386, 387, 388, 0, 0, 0, 0,
	389, 390, 391, 393, 0, 0, 392, 636, 637, 0,
	638, 0, 394, 395, 0, 639, 0, 396, 397, 398,
	0, 399, 0, 0, 0, 400, 401, 402, 403, 404,
	405, 0, 406, 408, 407, 0, 409, 640, 0, 410,
	411, 0, 0, 412, 0, 0, 0, 413, 414, 417,
	0, 0, 415, 416, 418, 419, 0, 420, 421, 423,
	426, 422, 424, 425, 427, 440, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 442, 0,
	441, 0, 443, 444, 445, 450, 452, 453, 448, 449,
	451, 454, 455, 447, 0, 446, 0, 0, 0, 456,
	457, 0, 641, 458, 642, 460, 461, 0, 0, 462,
	0, 0, 0, 464, 465, 466, 0, 0, 467, 468,
	643, 0, 469, 0, 644, 470, 471, 463, 472, 473,
	474, 475, 476, 477, 478, 479, 0, 480, 481, 645,
	482, 483, 484, 646, 485, 486, 487, 647, 488, 648,
	489, 490, 0, 491, 492, 0, 493, 494, 495, 496,
	497, 498, 499, 649, 500, 502, 501, 503, 0, 504,
	0, 505, 506, 507, 0, 0, 0, 0, 508, 0,
	510, 511, 512, 513, 509, 514, 515, 516, 517, 0,
	518, 519, 520, 0, 521, 522, 523, 524, 650, 525,
	0, 526, 527, 533, 534, 528, 529, 535, 536, 537,
	538, 539, 0, 541, 542, 540, 543, 544, 545, 0,
	546, 547, 530, 531, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 651, 0, 556, 0, 557, 558, 559,
	561, 532, 562, 567, 568, 652, 563, 564, 565, 566,
	653, 570, 571, 0, 572, 573, 0, 569, 560, 0,
	574, 575, 576, 577, 578, 579, 580, 353, 581, 0,
	582, 654, 655, 656, 657, 0, 591, 0, 583, 584,
	585, 658, 586, 659, 0, 587, 588, 589, 590, 0,
	592, 593, 0, 0, 594, 595, 596, 598, 599, 597,
	600, 0, 601, 0, 0, 602, 603, 604, 660, 661,
	662, 263, 606, 605, 607, 663, 0, 0, 0, 0,
	0, 608, 609, 664, 610, 611, 612, 0, 269, 271,
	270, 272, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 613, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 614, 615,
	0, 287, 616, 288, 617, 0, 618, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 619, 620, 621,
	0, 296, 297, 622, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 623, 624, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 625, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 626, 627, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 628, 0, 0, 0, 363,
	0, 364, 0, 0, 0, 365, 366, 629, 630, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	631, 0, 632, 377, 0, 378, 379, 380, 381, 382,
	2889, 634, 635, 459, 0, 383, 384, 0, 385, 386,
	387, 388, 0, 0, 0, 0, 389, 390, 391, 393,
	0, 0, 392, 636, 637, 0, 638, 0, 394, 395,
	0, 639, 0, 396, 397, 398, 0, 399, 0, 0,
	0, 400, 401, 402, 403, 404, 405, 0, 406, 408,
	407, 0, 409, 640, 0, 410, 411, 0, 0, 412,
	0, 0, 0, 413, 414, 417, 0, 0, 415, 416,
	418, 419, 0, 420, 421, 423, 426, 422, 424, 425,
	427, 440, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 442, 0, 441, 0, 443, 444,
	445, 450, 452, 453, 448, 449, 451, 454, 455, 447,
	0, 446, 0, 0, 0, 456, 457, 0, 641, 458,
	642, 460, 461, 0, 0, 462, 0, 0, 0, 464,
	465, 466, 0, 0, 467, 468, 643, 0, 469, 0,
	644, 470, 471, 463, 472, 473, 474, 475, 476, 477,
	478, 479, 0, 480, 481, 645, 482, 483, 484, 646,
	485, 486, 487, 647, 488, 648, 489, 490, 0, 491,
	492, 0, 493, 494, 495, 496, 497, 498, 499, 649,
	500, 502, 501, 503, 0, 504, 0, 505, 506, 507,
	0, 0, 0, 0, 508, 0, 510, 511, 512, 513,
	509, 514, 515, 516, 517, 0, 518, 519, 520, 0,
	521, 522, 523, 524, 650, 525, 0, 526, 527, 533,
	534, 528, 529, 535, 536, 537, 538, 539, 0, 541,
	542, 540, 543, 544, 545, 0, 546, 547, 530, 531,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 651,
	0, 556, 0, 557, 558, 559, 561, 532, 562, 567,
	568, 652, 563, 564, 565, 566, 653, 570, 571, 0,
	572, 573, 0, 569, 560, 0, 574, 575, 576, 577,
	578, 579, 580, 353, 581, 0, 582, 654, 655, 656,
	657, 0, 591, 0, 583, 584, 585, 658, 586, 659,
	0, 587, 588, 589, 590, 0, 592, 593, 0, 0,
	594, 595, 596, 598, 599, 597, 600, 0, 601, 0,
	0, 602, 603, 604, 660, 661, 662, 263, 606, 605,
	607, 663, 0, 0, 0, 0, 0, 608, 609, 664,
	610, 611, 612, 0, 269, 271, 270, 272, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	613, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 614, 615, 0, 287, 616, 288,
	617, 0, 618, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 619, 620, 621, 0, 296, 297, 622,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 623, 624,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 625, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 626, 627,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 628, 0, 0, 0, 363, 0, 364, 0, 0,
	0, 365, 366, 629, 630, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 631, 0, 632, 377,
	0, 378, 379, 380, 381, 382, 633, 634, 635, 459,
	0, 383, 384, 0, 385, 386, 387, 388, 0, 0,
	0, 0, 389, 390, 391, 393, 0, 0, 392, 636,
	637, 0, 638, 0, 394, 395, 0, 639, 0, 396,
	397, 398, 0, 399, 0, 0, 0, 400, 401, 402,
	403, 404, 405, 0, 406, 408, 407, 0, 409, 640,
	0, 410, 411, 0, 0, 412, 0, 0, 0, 413,
	414, 417, 0, 0, 415, 416, 418, 419, 0, 420,
	421, 423, 426, 422, 424, 425, 427, 440, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	442, 0, 441, 0, 443, 444, 445, 450, 452, 453,
	448, 449, 451, 454, 455, 447, 0, 446, 0, 0,
	0, 456, 457, 0, 641, 458, 642, 460, 461, 0,
	0, 462, 0, 0, 0, 464, 465, 466, 0, 0,
	467, 468, 643, 0, 469, 0, 644, 470, 471, 463,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 480,
	481, 645, 482, 483, 484, 646, 485, 486, 487, 647,
	488, 648, 489, 490, 0, 491, 492, 0, 493, 494,
	495, 496, 497, 498, 499, 649, 500, 502, 501, 503,
	0, 504, 0, 505, 506, 507, 0, 0, 0, 0,
	508, 0, 510, 511, 512, 513, 509, 514, 515, 516,
	517, 0, 518, 519, 520, 0, 521, 522, 523, 524,
	650, 525, 0, 526, 527, 736, 534, 528, 529, 535,
	536, 537, 538, 539, 0, 541, 542, 540, 543, 544,
	545, 0, 546, 547, 530, 531, 548, 549, 0, 550,
	551, 552, 553, 554, 555, 651, 0, 556, 0, 557,
	558, 559, 561, 532, 562, 567, 568, 652, 563, 564,
	565, 566, 653, 570, 571, 0, 572, 573, 0, 569,
	560, 0, 574, 575, 576, 577, 578, 579, 580, 353,
	581, 0, 582, 654, 655, 656, 657, 0, 591, 0,
	583, 584, 585, 658, 586, 659, 0, 587, 588, 589,
	590, 0, 592, 593, 0, 0, 594, 595, 596, 598,
	599, 597, 600, 0, 601, 0, 0, 602, 603, 604,
	660, 661, 662, 263, 606, 605, 607, 663, 0, 0,
	0, 0, 0, 608, 609, 664, 610, 611, 612, 0,
	269, 271, 270, 272, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 613, 0, 2213, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	614, 615, 0, 287, 616, 288, 617, 0, 618, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 619,
	620, 621, 0, 296, 297, 622, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 623, 624, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 625, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 626, 627, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 628, 0, 0,
	0, 363, 0, 364, 0, 0, 0, 365, 366, 629,
	630, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 631, 0, 632, 377, 0, 378, 379, 380,
	381, 382, 633, 634, 635, 459, 0, 383, 384, 0,
	385, 386, 387, 388, 0, 0, 0, 0, 389, 390,
	391, 393, 0, 0, 392, 636, 637, 0, 638, 0,
	394, 395, 0, 639, 0, 396, 397, 398, 0, 399,
	0, 0, 0, 400, 401, 402, 403, 404, 405, 0,
	406, 408, 407, 0, 409, 640, 0, 410, 411, 0,
	0, 412, 0, 0, 0, 413, 414, 417, 0, 0,
	415, 416, 418, 419, 0, 420, 421, 423, 426, 422,
	424, 425, 427, 440, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 442, 0, 441, 0,
	443, 444, 445, 450, 452, 453, 448, 449, 451, 454,
	455, 447, 0, 446, 0, 0, 0, 456, 457, 0,
	641, 458, 642, 460, 461, 0, 0, 462, 0, 0,
	0, 464, 465, 466, 0, 0, 467, 468, 643, 0,
	469, 0, 644, 470, 471, 463, 472, 473, 474, 475,
	476, 477, 478, 479, 0, 480, 481, 645, 482, 483,
	484, 646, 485, 486, 487, 647, 488, 648, 489, 490,
	0, 491, 492, 0, 493, 494, 495, 496, 497, 498,
	499, 649, 500, 502, 501, 503, 0, 504, 0, 505,
	506, 507, 0, 0, 0, 0, 508, 0, 510, 511,
	512, 513, 509, 514, 515, 516, 517, 0, 518, 519,
	520, 0, 521, 522, 523, 524, 650, 525, 0, 526,
	527, 533, 534, 528, 529, 535, 536, 537, 538, 539,
	0, 541, 542, 540, 543, 544, 545, 0, 0, 547,
	530, 531, 548, 549, 0, 550, 551, 552, 553, 554,
	555, 651, 0, 556, 0, 557, 558, 559, 561, 532,
	562, 567, 568, 652, 563, 564, 565, 566, 653, 570,
	571, 0, 572, 573, 0, 569, 560, 0, 574, 575,
	576, 577, 578, 579, 580, 353, 581, 0, 582, 654,
	655, 656, 657, 0, 591, 0, 583, 584, 585, 658,
	586, 659, 0, 587, 588, 589, 590, 0, 592, 593,
	0, 0, 594, 595, 596, 598, 599, 597, 600, 0,
	601, 0, 0, 602, 603, 604, 660, 661, 662, 263,
	606, 605, 607, 663, 0, 0, 0, 0, 0, 608,
	609, 664, 610, 611, 612, 0, 269, 271, 270, 272,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 613, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 614, 615, 0, 287,
	616, 288, 617, 0, 618, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 619, 620, 621, 0, 296,
	297, 622, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	623, 624, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 625,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	626, 627, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 628, 0, 0, 0, 363, 0, 364,
	0, 0, 0, 365, 366, 629, 630, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 631, 0,
	632, 377, 0, 378, 379, 380, 381, 382, 1240, 634,
	635, 459, 0, 383, 384, 0, 385, 386, 387, 388,
	0, 0, 0, 0, 389, 390, 391, 393, 0, 0,
	392, 636, 637, 0, 638, 0, 394, 395, 0, 639,
	0, 396, 397, 398, 0, 399, 0, 0, 0, 400,
	401, 402, 403, 404, 405, 0, 406, 408, 407, 0,
	409, 640, 0, 410, 411, 0, 0, 412, 0, 0,
	0, 413, 414, 417, 0, 0, 415, 416, 418, 419,
	0, 420, 421, 423, 426, 422, 424, 425, 427, 440,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 442, 0, 441, 0, 443, 444, 445, 450,
	452, 453, 448, 449, 451, 454, 455, 447, 0, 446,
	0, 0, 0, 456, 457, 0, 641, 458, 642, 460,
	461, 0, 0, 462, 0, 0, 0, 464, 465, 466,
	0, 0, 467, 468, 643, 0, 469, 0, 644, 470,
	471, 463, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 480, 481, 645, 482, 483, 484, 646, 485, 486,
	487, 647, 488, 648, 489, 490, 0, 491, 492, 0,
	493, 494, 495, 496, 497, 498, 499, 649, 500, 502,
	501, 503, 0, 504, 0, 505, 506, 507, 0, 0,
	0, 0, 508, 0, 510, 511, 512, 513, 509, 514,
	515, 516, 517, 0, 518, 519, 520, 0, 521, 522,
	523, 524, 650, 525, 0, 526, 527, 533, 534, 528,
	529, 535, 536, 537, 538, 539, 0, 541, 542, 540,
	543, 544, 545, 0, 546, 547, 530, 531, 548, 549,
	0, 550, 551, 552, 553, 554, 555, 651, 0, 556,
	0, 557, 558, 559, 561, 532, 562, 567, 568, 652,
	563, 564, 565, 566, 653, 570, 571, 0, 572, 573,
	0, 569, 560, 0, 574, 575, 576, 577, 578, 579,
	580, 353, 581, 0, 582, 654, 655, 656, 657, 0,
	591, 0, 583, 584, 585, 658, 586, 659, 0, 587,
	588, 589, 590, 0, 592, 593, 0, 0, 594, 595,
	596, 598, 599, 597, 600, 0, 601, 0, 0, 602,
	603, 604, 660, 661, 662, 263, 606, 605, 607, 663,
	0, 0, 0, 0, 0, 608, 609, 664, 610, 611,
	612, 0, 269, 271, 270, 272, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 613, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 614, 615, 0, 287, 616, 288, 617, 0,
	618, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 619, 620, 621, 0, 296, 297, 622, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 623, 624, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 625, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 626, 627, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 628,
	0, 0, 0, 363, 0, 364, 0, 0, 0, 365,
	366, 629, 630, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 631, 0, 632, 377, 0, 378,
	379, 380, 381, 382, 633, 634, 635, 459, 0, 383,
	384, 0, 385, 386, 387, 388, 0, 0, 0, 0,
	389, 390, 391, 393, 0, 0, 392, 636, 637, 0,
	638, 0, 394, 395, 0, 639, 0, 396, 397, 398,
	0, 399, 0, 0, 0, 400, 401, 402, 403, 404,
	405, 0, 406, 408, 407, 0, 409, 640, 0, 410,
	411, 0, 0, 412, 0, 0, 0, 413, 414, 417,
	0, 0, 415, 416, 418, 419, 0, 420, 421, 423,
	426, 422, 424, 425, 427, 440, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 442, 0,
	441, 0, 443, 444, 445, 450, 452, 453, 448, 449,
	451, 454, 455, 447, 0, 446, 0, 0, 0, 456,
	457, 0, 641, 458, 642, 460, 461, 0, 0, 462,
	0, 0, 0, 464, 465, 466, 0, 0, 467, 468,
	643, 0, 469, 0, 644, 470, 471, 463, 472, 473,
	474, 475, 476, 477, 478, 479, 0, 480, 481, 645,
	482, 483, 484, 646, 485, 486, 487, 647, 488, 648,
	489, 490, 0, 491, 492, 0, 493, 494, 495, 496,
	497, 498, 499, 649, 500, 1174, 501, 503, 0, 504,
	0, 505, 506, 507, 0, 0, 0, 0, 508, 0,
	510, 511, 512, 513, 509, 514, 515, 516, 517, 0,
	518, 519, 520, 0, 521, 522, 523, 524, 650, 525,
	0, 526, 527, 533, 534, 528, 529, 535, 536, 537,
	538, 539, 0, 541, 542, 540, 543, 544, 545, 0,
	546, 547, 530, 531, 548, 549, 0, 550, 551, 552,
	553, 554, 555, 651, 0, 556, 0, 557, 558, 559,
	561, 532, 562, 567, 568, 652, 563, 564, 565, 566,
	653, 570, 571, 0, 572, 573, 0, 569, 560, 0,
	574, 575, 576, 577, 578, 579, 580, 353, 581, 0,
	582, 654, 655, 656, 657, 0, 591, 0, 583, 584,
	585, 658, 586, 659, 0, 587, 588, 589, 590, 0,
	592, 593, 0, 0, 594, 595, 596, 598, 599, 597,
	600, 0, 601, 0, 0, 602, 603, 604, 660, 661,
	662, 263, 606, 605, 607, 663, 0, 0, 0, 0,
	0, 608, 609, 664, 610, 611, 612, 0, 269, 271,
	270, 272, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 613, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 614, 615,
	0, 287, 616, 288, 617, 0, 618, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 619, 620, 621,
	0, 296, 297, 622, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 623, 624, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 625, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 626, 627, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 628, 0, 0, 0, 363,
	0, 364, 0, 0, 0, 365, 366, 629, 630, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	631, 0, 632, 0, 0, 378, 379, 380, 381, 382,
	633, 634, 635, 459, 0, 383, 384, 0, 385, 386,
	387, 388, 0, 0, 0, 0, 389, 390, 391, 393,
	0, 0, 392, 636, 637, 0, 638, 0, 394, 395,
	0, 639, 0, 396, 397, 398, 0, 399, 0, 0,
	0, 400, 401, 402, 403, 404, 405, 0, 406, 408,
	407, 0, 409, 640, 0, 410, 411, 0, 0, 412,
	0, 0, 0, 413, 414, 417, 0, 0, 415, 416,
	418, 419, 0, 420, 421, 423, 426, 422, 424, 425,
	427, 440, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 442, 0, 441, 0, 443, 444,
	445, 450, 452, 453, 448, 449, 451, 454, 455, 447,
	0, 446, 0, 0, 0, 456, 457, 0, 641, 458,
	642, 460, 461, 0, 0, 462, 0, 0, 0, 464,
	465, 466, 0, 0, 467, 468, 643, 0, 469, 0,
	644, 470, 471, 463, 472, 473, 0, 475, 476, 477,
	478, 479, 0, 480, 481, 645, 482, 483, 484, 646,
	485, 486, 487, 647, 488, 648, 489, 490, 0, 491,
	492, 0, 493, 494, 495, 496, 0, 498, 499, 649,
	500, 502, 501, 503, 0, 504, 0, 505, 506, 507,
	0, 0, 0, 0, 508, 0, 510, 511, 512, 513,
	509, 514, 515, 516, 517, 0, 518, 519, 520, 0,
	521, 522, 523, 524, 650, 0, 0, 526, 527, 533,
	534, 528, 529, 535, 536, 537, 538, 539, 0, 541,
	542, 540, 543, 544, 545, 0, 546, 547, 530, 531,
	548, 549, 0, 550, 551, 552, 553, 554, 555, 651,
	0, 556, 0, 557, 558, 559, 561, 532, 562, 567,
	568, 652, 563, 564, 565, 566, 653, 570, 571, 0,
	572, 573, 0, 569, 560, 0, 574, 575, 576, 577,
	578, 579, 580, 353, 581, 0, 582, 654, 655, 656,
	657, 0, 591, 0, 583, 584, 585, 658, 586, 659,
	0, 587, 588, 589, 590, 0, 592, 593, 0, 0,
	594, 595, 596, 598, 599, 597, 600, 0, 601, 0,
	0, 602, 603, 604, 660, 661, 662, 0, 606, 605,
	607, 663, 0, 0, 0, 0, 0, 608, 609, 664,
	610, 611, 612, 1731, 1732, 0, 1764, 1765, 1766, 1774,
	1775, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1767, 1762, 0, 0,
	0, 0, 1731, 1732, 1734, 1764, 1765, 1766, 1774, 1775,
	1776, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 1762, 0, 0, 0,
	0, 0, 0, 1734, 0, 0, 0, 0, 0, 1733,
	1731, 1732, 1780, 1764, 1765, 1766, 1774, 1775, 1776, 1753,
	0, 0, 0, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 0, 1767, 1762, 0, 0, 0, 1733, 0,
	0, 1734, 0, 0, 0, 0, 0, 0, 1753, 0,
	1780, 0, 0, 0, 0, 0, 0, 1750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1733, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 0,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 1756, 1757, 1758, 1759, 0, 0, 0,
	0, 0, 0, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 1757, 1758, 1759, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 1771,
	0, 0, 1781, 0, 0, 0, 0, 0, 1761, 1763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1756, 1757, 1758, 1759, 0, 1777, 0, 1778, 1771, 0,
	1739, 1781, 0, 0, 1748, 1749, 0, 1761, 1763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1769, 0, 1777, 0, 1778, 0, 0, 0,
	0, 0, 0, 1748, 1749, 0, 1771, 1754, 0, 1781,
	0, 0, 0, 0, 0, 1761, 1763, 0, 0, 0,
	0, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 1778, 0, 1754, 0, 0, 0,
	0, 1748, 1749, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1769,
	0, 0, 0, 0, 0, 0, 0, 1768, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 0, 0, 0, 0, 1760,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1772, 0, 0,
	1755, 0, 0, 0, 0, 0, 1731, 1732, 0, 1764,
	1765, 1766, 1774, 1775, 1776, 0, 0, 1760, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 0, 0, 1767,
	1762, 0, 0, 0, 0, 0, 0, 1734, 1755, 0,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 1733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 0, 1770, 0,
	0, 0, 0, 1745, 1746, 1752, 1773, 1751, 1747, 0,
	1744, 1742, 1743, 1735, 1736, 1737, 1738, 1740, 1741, 0,
	0, 0, 0, 4435, 0, 0, 0, 1770, 0, 0,
	0, 0, 1745, 1746, 1752, 1773, 1751, 1747, 0, 1744,
	1742, 1743, 1735, 1736, 1737, 1738, 1740, 1741, 0, 0,
	0, 0, 4354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 1756, 1757, 1758, 1759,
	1745, 1746, 1752, 1773, 1751, 1747, 1739, 1744, 1742, 1743,
	1735, 1736, 1737, 1738, 1740, 1741, 0, 0, 0, 0,
	4314, 0, 0, 1731, 1732, 0, 1764, 1765, 1766, 1774,
	1775, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1771, 0, 0, 1781, 1767, 1762, 0, 0,
	0, 1761, 1763, 0, 1734, 0, 0, 0, 0, 0,
	0, 0, 0, 1780, 0, 0, 0, 0, 1777, 0,
	1778, 0, 0, 0, 0, 0, 0, 1748, 1749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1733,
	0, 0, 0, 0, 0, 1769, 0, 0, 0, 1753,
	0, 0, 0, 0, 0, 0, 0, 0, 1750, 0,
	1754, 1731, 1732, 0, 1764, 1765, 1766, 1774, 1775, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 1762, 0, 0, 0, 0,
	0, 0, 1734, 0, 0, 0, 0, 0, 0, 0,
	0, 1780, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1768, 0, 0, 0, 0, 0, 0, 1733, 0, 0,
	0, 0, 0, 1756, 1757, 1758, 1759, 1753, 0, 0,
	0, 0, 0, 1739, 0, 0, 1750, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1771,
	0, 0, 1781, 1760, 0, 0, 0, 0, 1761, 1763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1755, 1777, 0, 1778, 0, 0,
	0, 0, 0, 0, 1748, 1749, 0, 0, 0, 0,
	0, 1756, 1757, 1758, 1759, 0, 0, 0, 0, 0,
	1772, 1739, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 1731, 1732,
	0, 1764, 1765, 1766, 1774, 1775, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1771, 0, 0,
	1781, 1767, 1762, 0, 0, 0, 1761, 1763, 0, 1734,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 1779,
	0, 0, 0, 1777, 0, 1778, 0, 0, 0, 0,
	0, 0, 1748, 1749, 0, 0, 0, 1768, 0, 0,
	0, 0, 0, 0, 1733, 0, 0, 0, 0, 0,
	1769, 0, 0, 0, 1753, 0, 0, 0, 0, 0,
	0, 1770, 0, 1750, 0, 1754, 1745, 1746, 1752, 1773,
	1751, 1747, 0, 1744, 1742, 1743, 1735, 1736, 1737, 1738,
	1740, 1741, 0, 0, 0, 0, 4313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 1768, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1756, 1757,
	1758, 1759, 0, 0, 0, 0, 0, 1772, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1731, 1732,
	0, 1764, 1765, 1766, 1774, 1775, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1767, 1762, 0, 1771, 0, 0, 1781, 1760, 1734,
	0, 0, 0, 1761, 1763, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	1777, 0, 1778, 0, 0, 0, 0, 0, 0, 1748,
	1749, 0, 0, 0, 1733, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 1772, 0, 1769, 0, 0,
	0, 0, 0, 1750, 0, 0, 0, 0, 1770, 0,
	0, 0, 1754, 1745, 1746, 1752, 1773, 1751, 1747, 0,
	1744, 1742, 1743, 1735, 1736, 1737, 1738, 1740, 1741, 0,
	0, 0, 0, 4140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 1756, 1757,
	1758, 1759, 0, 0, 0, 0, 0, 0, 1739, 0,
	0, 0, 0, 0, 0, 0, 1770, 0, 0, 0,
	0, 1745, 1746, 1752, 1773, 1751, 1747, 0, 1744, 1742,
	1743, 1735, 1736, 1737, 1738, 1740, 1741, 0, 0, 0,
	0, 3987, 0, 0, 1771, 0, 0, 1781, 0, 0,
	0, 0, 0, 1761, 1763, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 0, 1778, 0, 0, 0, 1755, 0, 0, 1748,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1769, 0, 0,
	1731, 1732, 1772, 1764, 1765, 1766, 1774, 1775, 1776, 0,
	0, 0, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1767, 1762, 0, 0, 0, 0, 0,
	0, 1734, 0, 0, 0, 0, 0, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1733, 0, 0, 0,
	0, 0, 1768, 0, 0, 0, 1753, 0, 0, 0,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1770, 0, 0, 0, 0, 1745, 1746,
	1752, 1773, 1751, 1747, 0, 1744, 1742, 1743, 1735, 1736,
	1737, 1738, 1740, 1741, 0, 0, 0, 0, 3918, 0,
	0, 0, 0, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1755, 0, 0, 0,
	1756, 1757, 1758, 1759, 0, 0, 0, 0, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1731, 1732, 1772, 1764, 1765, 1766, 1774, 1775, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1767, 1762, 0, 1771, 0, 0, 1781,
	0, 1734, 0, 0, 0, 1761, 1763, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 1778, 0, 0, 0, 0, 0,
	0, 1748, 1749, 0, 0, 0, 1733, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 1769,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 1770, 0, 0, 0, 0, 1745, 1746,
	1752, 1773, 1751, 1747, 0, 1744, 1742, 1743, 1735, 1736,
	1737, 1738, 1740, 1741, 0, 0, 0, 0, 3917, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	1756, 1757, 1758, 1759, 0, 0, 0, 0, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1731, 1732, 0, 1764, 1765, 1766, 1774, 1775, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1767, 1762, 0, 1771, 0, 0, 1781,
	0, 1734, 0, 0, 0, 1761, 1763, 1760, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 1778, 0, 0, 0, 1755, 0,
	0, 1748, 1749, 0, 0, 0, 1733, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 1769,
	0, 0, 0, 0, 1772, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	1756, 1757, 1758, 1759, 0, 0, 0, 0, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 0, 0, 0, 0,
	1745, 1746, 1752, 1773, 1751, 1747, 0, 1744, 1742, 1743,
	1735, 1736, 1737, 1738, 1740, 1741, 1771, 0, 0, 1781,
	3916, 0, 0, 0, 0, 1761, 1763, 1760, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 1778, 0, 0, 0, 1755, 0,
	0, 1748, 1749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1769,
	0, 0, 1731, 1732, 1772, 1764, 1765, 1766, 1774, 1775,
	1776, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 1762, 0, 0, 0,
	0, 0, 0, 1734, 0, 0, 0, 0, 0, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1733, 0,
	0, 0, 0, 0, 1768, 0, 0, 0, 1753, 0,
	0, 0, 0, 0, 0, 0, 0, 1750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 0, 0, 0, 0,
	1745, 1746, 1752, 1773, 1751, 1747, 0, 1744, 1742, 1743,
	1735, 1736, 1737, 1738, 1740, 1741, 0, 0, 0, 0,
	3585, 0, 0, 0, 0, 0, 0, 1760, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 1756, 1757, 1758, 1759, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1731, 1732, 1772, 1764, 1765, 1766, 1774, 1775,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 1762, 0, 1771, 0,
	0, 1781, 0, 1734, 0, 0, 0, 1761, 1763, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 1778, 0, 0, 0,
	0, 0, 0, 1748, 1749, 0, 0, 0, 1733, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 1769, 0, 0, 0, 0, 0, 1750, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 0, 0, 0, 0,
	1745, 1746, 1752, 1773, 1751, 1747, 0, 1744, 1742, 1743,
	1735, 1736, 1737, 1738, 1740, 1741, 0, 0, 0, 0,
	3087, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1768, 0, 0, 0,
	0, 0, 1756, 1757, 1758, 1759, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1731, 1732, 0, 1764, 1765, 1766, 1774, 1775,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 1762, 0, 1771, 0,
	0, 1781, 0, 1734, 0, 0, 0, 1761, 1763, 1760,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 1778, 0, 0, 0,
	1755, 0, 0, 1748, 1749, 0, 0, 0, 1733, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 1769, 0, 0, 0, 0, 1772, 1750, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1768, 0, 0, 0,
	0, 0, 1756, 1757, 1758, 1759, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1770, 0, 0,
	0, 0, 1745, 1746, 1752, 1773, 1751, 1747, 0, 1744,
	1742, 1743, 1735, 1736, 1737, 1738, 1740, 1741, 1771, 0,
	0, 1781, 3086, 0, 0, 0, 0, 1761, 1763, 1760,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 1778, 0, 0, 0,
	1755, 0, 0, 1748, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1769, 0, 0, 1731, 1732, 1772, 1764, 1765, 1766,
	1774, 1775, 1776, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1767, 1762, 0,
	0, 0, 0, 0, 0, 1734, 0, 0, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1733, 0, 0, 0, 0, 0, 1768, 0, 0, 0,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 1750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1770, 0, 0,
	0, 0, 1745, 1746, 1752, 1773, 1751, 1747, 0, 1744,
	1742, 1743, 1735, 1736, 1737, 1738, 1740, 1741, 0, 0,
	0, 0, 3085, 0, 0, 0, 0, 0, 0, 1760,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1755, 0, 0, 0, 1756, 1757, 1758, 1759, 0, 0,
	0, 0, 0, 0, 1739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1731, 1732, 1772, 1764, 1765, 1766,
	1774, 1775, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1767, 1762, 0,
	1771, 0, 0, 1781, 0, 1734, 0, 0, 0, 1761,
	1763, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 1778, 0,
	0, 0, 0, 0, 0, 1748, 1749, 0, 0, 0,
	1733, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 0, 0, 1769, 0, 0, 0, 0, 0, 1750,
	0, 0, 0, 0, 0, 0, 0, 0, 1754, 0,
	0, 0, 0, 0, 0, 0, 0, 1770, 0, 0,
	0, 0, 1745, 1746, 1752, 1773, 1751, 1747, 0, 1744,
	1742, 1743, 1735, 1736, 1737, 1738, 1740, 1741, 0, 0,
	0, 0, 3084, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	0, 0, 0, 0, 1756, 1757, 1758, 1759, 0, 0,
	0, 0, 0, 0, 1739, 4576, 0, 0, 0, 0,
	0, 0, 0, 0, 1731, 1732, 0, 1764, 1765, 1766,
	1774, 1775, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1767, 1762, 0,
	1771, 0, 0, 1781, 0, 1734, 0, 0, 0, 1761,
	1763, 1760, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 1778, 0,
	0, 0, 1755, 0, 0, 1748, 1749, 0, 0, 0,
	1733, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 0, 0, 1769, 0, 0, 0, 0, 1772, 1750,
	0, 0, 0, 0, 0, 0, 0, 0, 1754, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	0, 0, 0, 0, 1756, 1757, 1758, 1759, 0, 0,
	0, 0, 0, 0, 1739, 0, 3171, 0, 0, 3170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1770,
	4575, 0, 0, 0, 1745, 1746, 1752, 1773, 1751, 1747,
	0, 1744, 1742, 1743, 1735, 1736, 1737, 1738, 1740, 1741,
	1771, 0, 3051, 1781, 0, 0, 0, 0, 0, 1761,
	1763, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 1778, 0,
	0, 0, 1755, 0, 0, 1748, 1749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1769, 0, 0, 1731, 1732, 1772, 1764,
	1765, 1766, 1774, 1775, 1776, 0, 0, 0, 1754, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	1762, 0, 0, 0, 0, 3022, 0, 1734, 0, 0,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1733, 0, 0, 0, 0, 0, 1768, 0,
	0, 0, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1770,
	0, 0, 0, 0, 1745, 1746, 1752, 1773, 1751, 1747,
	0, 1744, 1742, 1743, 1735, 1736, 1737, 1738, 1740, 1741,
	3023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 1756, 1757, 1758, 1759,
	0, 0, 0, 0, 0, 0, 1739, 0, 0, 2589,
	0, 0, 0, 0, 0, 0, 1731, 1732, 1772, 1764,
	1765, 1766, 1774, 1775, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	1762, 0, 1771, 0, 2588, 1781, 0, 1734, 0, 0,
	0, 1761, 1763, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	1778, 0, 0, 0, 0, 0, 0, 1748, 1749, 0,
	0, 0, 1733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 1769, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 1770,
	0, 0, 0, 0, 1745, 1746, 1752, 1773, 1751, 1747,
	0, 1744, 1742, 1743, 1735, 1736, 1737, 1738, 1740, 1741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1768, 0, 0, 0, 0, 0, 1756, 1757, 1758, 1759,
	0, 0, 0, 0, 0, 0, 1739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1731, 1732, 0, 1764,
	1765, 1766, 1774, 1775, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	1762, 0, 1771, 0, 0, 1781, 0, 1734, 0, 0,
	0, 1761, 1763, 1760, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	1778, 0, 0, 0, 1755, 0, 0, 1748, 1749, 0,
	0, 0, 1733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 1769, 0, 0, 0, 0,
	1772, 1750, 0, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1768, 0, 0, 0, 0, 0, 1756, 1757, 1758, 1759,
	0, 0, 0, 0, 0, 0, 1739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1770, 0, 0, 0, 0, 1745, 1746, 1752, 1773,
	1751, 1747, 0, 1744, 1742, 1743, 1735, 1736, 1737, 1738,
	1740, 1741, 1771, 0, 0, 1781, 0, 0, 0, 0,
	0, 1761, 1763, 1760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	1778, 0, 0, 0, 1755, 0, 0, 1748, 1749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1769, 0, 0, 1731, 1732,
	1772, 1764, 1765, 1766, 1774, 1775, 1776, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1767, 1762, 0, 0, 0, 0, 0, 0, 1734,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1733, 0, 0, 0, 0, 0,
	1768, 1030, 0, 0, 1753, 0, 0, 0, 0, 0,
	0, 0, 0, 1750, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1770, 0, 0, 0, 0, 1745, 1746, 1752, 1773,
	1751, 1747, 0, 1744, 1742, 1743, 1735, 1736, 1737, 1738,
	1740, 1741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1755, 0, 0, 0, 1756, 1757,
	1758, 1759, 0, 0, 0, 0, 0, 0, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1731, 1732,
	1772, 1764, 1765, 1766, 1774, 1775, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1767, 1762, 0, 1771, 0, 0, 1781, 0, 1734,
	0, 0, 0, 1761, 1763, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 0, 1778, 0, 0, 0, 0, 0, 0, 1748,
	1749, 0, 0, 0, 1733, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 0, 0, 1769, 0, 0,
	0, 0, 0, 1750, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 1770, 0, 0, 0, 0, 1745, 1746, 1752, 1773,
	1751, 1747, 0, 1744, 1742, 1743, 1735, 1736, 1737, 1738,
	1740, 1741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 1756, 1757,
	1758, 1759, 0, 0, 0, 0, 0, 0, 1739, 0,
	0, 0, 0, 3177, 0, 0, 0, 0, 1731, 1732,
	0, 1764, 1765, 1766, 1774, 1775, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1767, 1762, 0, 1771, 0, 3172, 1781, 0, 1734,
	0, 0, 0, 1761, 1763, 1760, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 0, 1778, 0, 0, 0, 1755, 0, 0, 1748,
	1749, 0, 0, 0, 1733, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 0, 0, 1769, 0, 0,
	0, 0, 1772, 1750, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3566, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 1756, 1757,
	1758, 1759, 0, 0, 0, 0, 0, 0, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1770, 0, 0, 0, 0, 1745, 1746,
	1752, 1773, 1751, 1747, 0, 1744, 1742, 1743, 1735, 1736,
	1737, 1738, 1740, 1741, 1771, 0, 0, 1781, 0, 0,
	0, 0, 0, 1761, 1763, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 0, 1778, 0, 0, 0, 1755, 0, 0, 1748,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1769, 0, 0,
	1731, 1732, 1772, 1764, 1765, 1766, 1774, 1775, 1776, 0,
	0, 0, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1767, 1762, 0, 0, 0, 0, 0,
	0, 1734, 0, 0, 0, 0, 0, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1733, 0, 0, 0,
	0, 0, 1768, 0, 0, 0, 1753, 0, 0, 0,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1770, 0, 0, 0, 0, 1745, 1746,
	1752, 1773, 1751, 1747, 0, 1744, 1742, 1743, 1735, 1736,
	1737, 1738, 1740, 1741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1755, 0, 0, 0,
	1756, 1757, 1758, 1759, 0, 0, 0, 0, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1731, 1732, 1772, 1764, 1765, 1766, 1774, 1775, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1767, 1762, 0, 1771, 0, 3088, 1781,
	0, 1734, 0, 0, 0, 1761, 1763, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 1778, 0, 0, 0, 0, 0,
	0, 1748, 1749, 0, 0, 0, 1733, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 1769,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 1770, 0, 0, 0, 0, 1745, 1746,
	1752, 1773, 1751, 1747, 0, 1744, 1742, 1743, 1735, 1736,
	1737, 1738, 1740, 1741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	1756, 1757, 1758, 1759, 0, 0, 0, 0, 0, 0,
	1739, 0, 0, 0, 3139, 0, 0, 0, 0, 0,
	1731, 1732, 0, 1764, 1765, 1766, 1774, 1775, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1767, 1762, 0, 1771, 0, 0, 1781,
	0, 1734, 0, 0, 0, 1761, 1763, 1760, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 1778, 0, 0, 0, 1755, 0,
	0, 1748, 1749, 0, 0, 0, 1733, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 1769,
	0, 0, 0, 0, 1772, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	1756, 1757, 1758, 1759, 0, 0, 0, 0, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 0, 0, 0, 0,
	1745, 1746, 1752, 1773, 1751, 1747, 0, 1744, 1742, 1743,
	1735, 1736, 1737, 1738, 1740, 1741, 1771, 0, 0, 1781,
	0, 0, 921, 0, 967, 1761, 1763, 1760, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 1778, 0, 0, 0, 1755, 929,
	0, 1748, 1749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 943, 0, 927, 926, 1769,
	0, 0, 1731, 1732, 1772, 1764, 1765, 1766, 1774, 1775,
	1776, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 928, 1762, 0, 0, 0,
	931, 0, 0, 1734, 0, 975, 0, 0, 0, 0,
	0, 0, 1780, 0, 940, 941, 0, 0, 0, 0,
	0, 0, 0, 957, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1733, 0,
	0, 968, 933, 0, 1768, 0, 0, 0, 1753, 0,
	0, 0, 0, 0, 0, 0, 0, 1750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 934,
	0, 0, 0, 0, 0, 1770, 0, 0, 966, 0,
	1745, 1746, 1752, 1773, 1751, 1747, 0, 1744, 1742, 1743,
	1735, 1736, 1737, 1738, 1740, 1741, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1760, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 936, 0, 0, 0, 0, 0, 1755, 0,
	925, 0, 1756, 1757, 1758, 1759, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 937, 938,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 945, 944, 0,
	0, 0, 0, 0, 0, 939, 0, 0, 1771, 954,
	0, 1781, 0, 0, 0, 0, 0, 1761, 1763, 0,
	0, 0, 0, 0, 0, 0, 0, 972, 965, 0,
	0, 0, 0, 0, 1777, 0, 1778, 0, 0, 0,
	0, 0, 0, 1748, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 969,
	0, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 0, 0, 0, 0,
	1745, 1746, 1752, 1773, 1751, 1747, 0, 1744, 1742, 1743,
	1735, 1736, 1737, 1738, 1740, 1741, 0, 0, 0, 0,
	932, 0, 0, 974, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 930, 0, 0, 0, 961,
	962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 959, 0, 0, 0, 0, 0,
	0, 973, 955, 0, 948, 946, 0, 951, 0, 0,
	0, 0, 0, 952, 0, 0, 923, 0, 970, 1760,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 924,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 963, 0, 953, 0, 0, 0, 0, 0, 950,
	0, 0, 0, 0, 0, 0, 1772, 0, 0, 0,
	971, 0, 0, 0, 0, 0, 0, 0, 956, 0,
	0, 0, 0, 0, 0, 0, 0, 935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 958, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1770, 0, 0,
	0, 0, 1745, 1746, 1752, 1773, 1751, 1747, 0, 1744,
	1742, 1743, 1735, 1736, 1737, 1738, 1740, 1741,
}

var sqlPact = [...]int{
	270, -1000, -1000, -1000, -1000, 234, -1000, -1000, 233, 232,
	215, 214, 213, 212, 205, 204, 203, 202, 198, -1000,
	-1000, -1000, -1000, -1000, -1000, 197, -1000, -1000, 194, -1000,
	193, 191, 187, -1000, -1000, 186, -1000, 185, -1000, -1000,
	-1000, -1000, 183, 181, 178, 88757, 88214, 89293, 2299, 110345,
	96825, 2186, 79554, 109802, 79011, 109259, 2172, 9842, 108716, 2731,
	177, -1000, 108173, 173, 171, 170, -1000, 107630, -1000, 2074,
	-1000, 169, 5514, 64322, 167, 165, 164, 2474, 159, -1000,
	158, 156, -1000, -1000, 153, -1000, 10958, 1472, -1000, 151,
	147, -1000, 1139, 94124, 133, 131, 2578, 130, 126, 63778,
	123, 118, 2523, 2893, -1000, -1000, 1991, -1000, -1000, 111,
	110, 109, 107, 106, 105, 103, 96, 93, 91, 90,
	-1000, 88, 87, 84, 83, 82, -1000, 81, 79, 78,
	-1000, 76, -1000, 75, 73, 72, 69, 68, 67, 65,
	64, 63, 62, 59, 58, 55, -1000, 122370, -1000, 1886,
	1657, 1641, 1640, 1633, 1630, 933, 52, 51, 48, 47,
	40, 39, 38, 37, 36, 31, 29, 28, 27, 26,
	23, 22, 21, 166, 20, 19, 14, 13, 11, 10,
	9, 2292, -1000, 1692, 1133, 29969, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 116241, 110881, 7, -83, 6, -1000, 3296, 1034,
	52863, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 286,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 496, 2063, 742,
	-1000, -1000, -1000, 107094, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2290, -28, -1000, 2022, -1000, -1000, -1000, -1000,
	-1000, 740, -1000, 2287, 136, 2217, -1000, -1000, -1000, 3346,
	2433, 3801, 3800, 3799, 3797, 3796, 115705, 1784, 3789, 2522,
	3788, 3786, 3783, 3782, 3781, 3780, 3776, -1000, 87671, 1025,
	87128, 86585, 3370, 106558, 86042, 106015, 73054, 44979, 1033, 3345,
	-1000, -1000, -1000, -1000, -1000, -1000, 110881, -1000, 1023, -1000,
	-1000, 3775, 3770, 2018, 739, 96282, -1000, 1723, -1000, 893,
	31676, -1000, 1311, -1000, 31676, 284, -1000, -1000, -1000, -1000,
	-1000, -1000, 3762, 3761, 3756, 3752, 3749, -1000, -1000, 78468,
	23089, 77925, 77382, 105472, 22535, 85499, 84956, 104929, 72500, 1021,
	1414, -1000, -1000, -1000, -1000, -1000, -1000, -12, 70284, 3539,
	110881, -1000, 282, -1000, -1000, -1000, -1000, -1000, -1000, 44398,
	522, 43817, 516, 43236, 502, -1000, -1000, -1000, -1000, 71946,
	-1000, 104386, 2424, 3747, 3745, 1115, 3744, 3235, 1769, 3743,
	1816, 1201, 3742, 3738, 3737, 3735, 3734, 3733, 3732, 1445,
	103843, 2996, 1494, 103300, 1693, 71392, 1020, 84413, 89293, 2647,
	102757, 1416, 1402, -1000, -1000, -1000, -1000, 3085, 2892, 2886,
	1316, -1000, -1000, -1000, -1000, 55576, 4722, 4692, 10070, 102214,
	58376, 89293, 89293, -1000, -1000, -1000, -1000, -1000, 42655, 454,
	42074, 975, -1000, -1000, 56136, 2933, -1000, -1000, -1000, -1000,
	41493, 382, 40912, 880, 110881, -1000, 2993, 1977, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2340, 1626, 3572, 2725, 70838, 2040, 1362,
	3306, 3076, 3075, 1474, 3074, 3731, 2568, 3064, 3062, 3055,
	3050, 3049, 1638, 2600, 285, 29388, 2955, 1631, 40331, 1478,
	1481, 3035, 3032, 3603, 2005, 1985, 2017, 76839, 3730, 3729,
	3270, 3024, 2998, 2777, 2994, -1000, 2931, -1000, -1000, -1000,
	-1000, 1425, -1000, -1000, -1000, -1000, 80090, -1000, -1000, 1238,
	-1000, -1000, 1238, -1000, -1000, -1000, -1000, -1000, 1346, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1692, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2123, -1000, 2016, -1000, -1000, 2470, 3250, 3250, 3250,
	3344, 469, 441, -1000, 166, -1000, -1000, 122149, -1000, -1000,
	45548, 45548, 45548, 45548, 45548, 45548, 45548, 2175, -1000, 737,
	-1000, -1000, 779, -1000, 736, 626, -1000, -1000, -1000, -1000,
	-1000, -1000, 730, -1000, -1000, -1000, -1000, -1000, -1000, 3539,
	-1000, 25914, -1000, -1000, -1000, 484, 728, 45548, -1000, -1000,
	3613, 3612, 1009, -1000, 278, 914, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2992, 725,
	724, -1000, 723, 719, 718, 717, 715, -1000, -1000, -1000,
	714, 713, 712, 707, 706, 705, 704, 703, -1000, 2044,
	-1000, -1000, -1000, -1000, -1000, -1000, 663, 659, 659, 659,
	-1000, 1003, -1000, -1000, -1000, 356, 657, 321, 656, 655,
	653, -1000, 699, 698, 697, 696, 689, 688, 686, 685,
	684, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1002, -1000,
	-1000, -1000, -1000, -13, 110881, -1000, 496, -13, -1000, -1000,
	683, -1000, 33964, 33964, 33964, -1000, -1000, 2274, 45548, -1000,
	3018, -1000, -7, -7, 868, 54488, -1000, 51775, 868, 277,
	791, 60001, -1000, 2915, -1000, -1000, 682, 276, -1000, -1000,
	-1000, -1000, 23641, 2914, 110881, 110881, 89293, 89293, 89293, 3156,
	45548, -1000, -1000, 68103, 110881, 90365, -1000, -1000, 3474, 64858,
	67562, 110881, 2991, 67026, 3728, -1000, -1000, -1000, -1000, -1000,
	3139, 3727, 3726, 3724, -1000, 110881, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 209, 3138, -1000, -1000, 93581, 209, 3137,
	-1000, 209, 3135, -1000, 93045, -1000, -1000, 2174, 3130, -1000,
	-1000, 224, 3129, -1000, -1000, -1000, 223, 3128, -1000, -1000,
	272, -141, 3127, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 122149, -1000, -1000, -1000, 66483,
	-1000, 3274, -1000, -1000, 110881, -1000, 45548, -1000, 3473, 1722,
	74147, 3415, -40, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2506, 2459, 1111, 2313, -1000, 3168, 1873, -1000, 31676, 3221,
	-1000, -1000, -1000, 267, 23641, -1000, -1000, -1000, -1000, -1000,
	-1000, 5234, 3124, 1418, -1000, 2311, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2158, 3121, -1000, 1970, 3119, 2157,
	-1000, -1000, 2535, -1000, 3264, -1000, -1000, 2090, 3118, -5,
	-1000, -1000, 2325, -1000, 1948, -1000, 961, 3112, -1000, 83870,
	57816, 56136, 70284, -19, -1000, -1000, -1000, -1000, -248, -1000,
	21981, 122149, -1000, -1000, -1000, -1000, 1694, 122149, 886, -1000,
	-1000, 3111, -1000, 122149, 879, -1000, -1000, 3105, -1000, 2986,
	-1000, -1000, 2382, -1000, -1000, 3721, -1000, -1000, 3720, -1000,
	3719, 3717, 3715, -1000, 1687, 2019, 3713, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 83334, 2272, -1000, -1000, 82248,
	2958, -1000, 2381, 3406, -1000, 82791, 1011, -1000, 961, 2379,
	-1000, 92509, 1010, 2378, -1000, 3711, 3367, 2686, 961, 2377,
	-1000, -1000, -1000, -1000, -1000, 795, -1000, 61620, -1000, 61620,
	-1000, 1588, -1000, 115169, -7, 89293, 3539, -1000, -27, -1000,
	-1000, -1000, 1034, -1000, 55032, -1000, 55032, 95739, 73606, 949,
	823, 63234, 122149, -1000, -1000, -1000, -1000, 122149, -1000, -1000,
	-1000, -289, 2723, -1000, 73606, 57256, 122149, -1000, -1000, -1000,
	-1000, 122149, -1000, -1000, -1000, 73606, 82248, -1000, 101671, 81712,
	-1000, -1000, 1431, 2539, -1000, -1000, -1000, 73606, 1275, 73606,
	73606, 73606, -1000, 101128, -1000, -1000, 2029, 1535, 3271, 2010,
	89293, -1000, 1969, -1000, -1000, -1000, 3298, 110881, -1000, -1000,
	2956, -1000, 65939, 91973, -1000, 91437, -1000, 90901, -1000, 89293,
	-1000, 89293, -1000, 3710, 3709, 3708, -1000, -1000, 3707, -1000,
	3705, 3290, -1000, 122149, 3285, -1000, 3703, 3368, 2955, 122149,
	-1000, 3125, 1649, 1639, 110881, -1000, -1000, 110881, -1000, 110881,
	-1000, -1000, -1000, 1517, -1000, -1000, 2499, -1000, -1000, -1000,
	-1000, 89293, 1216, -1000, -1000, -1000, -1000, -1000, -1000, 2815,
	-1000, 1652, -1000, 1755, -1000, 2912, 3281, -1000, 1422, -1000,
	-1000, 228, -1000, -1000, -40, -1000, 114633, -1000, 2470, -1000,
	110881, -1000, 2476, 2938, 2954, 1690, 2296, 2609, -1000, 39750,
	2504, 48962, 2310, 166, -1000, -1000, 166, 166, 31107, -1000,
	-1000, 64858, 64858, 23641, 1370, 45548, 45548, 45548, 45548, 45548,
	45548, 45548, 45548, 45548, 45548, 45548, 45548, 45548, 45548, 45548,
	45548, 45548, 45548, 45548, 45548, 45548, 45548, 45548, 45548, 45548,
	45548, 45548, 45548, 45548, 45548, 45548, 45548, 45548, 45548, 45548,
	2258, 45548, 1342, 45548, 45548, 45548, 45548, 2341, -1000, -1000,
	1930, 557, 1972, -1000, 3553, 3553, 3553, 1128, 1128, 122411,
	122411, 611, 3702, 779, -1000, 45548, -1000, 120, 45548, 24195,
	-1000, 441, 8656, 2491, -1000, 434, 24776, -1000, -1000, -1000,
	25914, 626, 39169, 45548, 985, 122149, -1000, -1000, 1500, 3558,
	21428, 3001, 2769, 675, 850, 789, 28807, 28226, 27645, 27064,
	747, 45548, 45548, 45548, 45548, 45548, 45548, 45548, 45548, -1000,
	-1000, 3583, -1000, 3558, -1000, -1000, -1000, -1000, 3558, 1356,
	1320, 3558, -1000, 3558, 3558, 7318, 7318, 38600, 38019, 37438,
	49531, 36857, 45548, 26483, 36276, 35695, -1000, 110881, -13, 3471,
	45548, 135, -1000, 120725, -1000, 135, 135, 671, -29, 122149,
	2772, 2772, 53405, 2449, 2181, 2181, 2181, -1000, 868, 16975,
	868, 100051, 2193, 868, 868, 266, 293, 432, 51233, 3018,
	100051, 755, 669, 3, 2, 1, -1000, -1000, -1, -3,
	-1000, -1000, 89293, 668, 24195, 23641, 264, 1501, -35, 2620,
	2617, 2612, -1000, 2610, 1754, -46, 1340, 89293, 110881, -162,
	-1000, 318, -47, -1000, 1295, 258, 3558, -1000, -1000, -1000,
	-1000, -1000, 3700, 3698, -1000, 992, 665, 664, 404, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 663, 659, 659,
	659, -1000, 356, 657, 321, 656, 655, 653, -1000, -1000,
	-1000, -1000, -1000, 2911, 89293, 110881, -248, 90365, -52, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 110881, -1000, -1000,
	-1000, 3697, -1000, 89293, -1000, -1000, 89293, 209, 3104, -1000,
	89293, -1000, 89293, 208, 3101, -1000, -1000, 110881, -1000, 89293,
	89293, -1000, 110881, 110881, 110881, 73606, 73606, 227, -1000, 89293,
	862, -54, 1122, -40, -1000, -1000, -1000, 1238, -1000, 1854,
	-1000, -1000, -1000, -1000, -1000, -1000, 1454, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1009, -1000, -1000, -1000, -1000,
	-1000, -1000, 3562, 3560, -15, -1000, -1000, 23641, -1000, -41,
	1604, 2027, 1337, -1000, 76296, 2428, 3263, 3696, 2666, 3256,
	1585, -1000, 1504, -1000, 3358, 80090, 3438, 3447, 680, -1000,
	2907, -1000, -1000, 891, 1651, 1715, 1336, 1321, 80090, 1970,
	-1000, 64858, -1000, 2637, 3343, 1355, 1357, 1355, 1355, 1352,
	-1000, 80090, 1701, 1318, 1306, 1304, 1928, 1925, -1000, -1000,
	2033, -1000, 1302, 1298, 809, 1923, -1000, -42, 3435, 3442,
	674, -1000, 2902, 1289, -1000, -1000, -1000, 3342, 89293, 23641,
	1544, 1534, 1529, 1698, 1276, -16, -1000, 3426, 1226, 1222,
	-1000, 4833, -1000, 73606, 2148, 3097, 2719, 767, 2718, -1000,
	-1000, -1000, 767, -19, 70284, 110881, 257, -1000, 120, 45548,
	45548, 120, 45548, 120, 3366, 3095, -1000, -1000, -1000, -1000,
	-1000, 3695, 1979, 2519, -1000, -1000, 648, 2375, 2899, 110881,
	2627, -21, 89293, -1000, 65398, 3093, 68644, 1970, 2374, -1000,
	-1000, 81169, -1000, 3092, 496, 2371, -1000, 690, 3694, 3091,
	-1000, 114097, -1000, 3274, 1360, 3083, 1070, 596, 3470, -1000,
	596, 62162, -1000, 110881, -1000, -7, 1878, 75224, -59, -64,
	427, -1000, 100592, 110881, 1069, 75760, 110881, 3209, 956, 56136,
	-1000, 56136, -65, -289, 2713, 1483, 949, 949, 767, -1000,
	767, -1000, 89293, 2952, -1000, -1000, 73606, 949, 949, 949,
	-1000, -1000, -1000, -1000, 3692, 3691, 3690, -1000, -1000, -1000,
	957, 89293, 110881, 89293, -1000, 255, -1000, 110881, -1000, 110881,
	110881, 89293, -1000, 957, 110881, 957, 110881, 957, 110881, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 120, 45548, -1000, -1000,
	3688, 1599, -1000, 2951, -1000, 2946, -1000, 34, -1000, -1000,
	-1000, -1000, -1000, -1000, 1765, -1000, -1000, 89293, 89293, 89293,
	89293, 110881, 3196, -1000, 110881, 3190, 89293, -1000, 80090, -1000,
	2476, 2938, -1000, -1000, -1000, -1000, -1000, -1000, 1395, 2228,
	-1000, 2585, -1000, 1537, -1000, -1000, -1000, 122149, 50100, -1000,
	-1000, 122149, 1834, -1000, 48393, 47824, -1000, -1000, 1675, 89293,
	2632, -1000, 2632, -233, -1000, 120545, 2580, 89293, -1000, -1000,
	-1000, -1000, -1000, 890, 576, 576, 1229, 1229, 1229, 1229,
	3372, 556, 314, 518, 455, 455, 5497, 5497, 5497, 5497,
	5497, 455, 536, 1128, 1128, 536, 536, 536, 536, 536,
	1128, 1128, 1128, 455, 455, 455, 122411, 16400, 9331, 45548,
	45548, 1217, 1915, 557, 9222, 45548, 5178, 5178, 5178, 5178,
	-1000, 1538, -1000, -1000, -1000, -1000, 2894, 647, 49531, 49531,
	-1000, -1000, -1000, -1000, 25345, 45548, -1000, -1000, -1000, -1000,
	35114, -1000, -1000, 119923, -321, 426, -216, -60, -1000, 45548,
	45548, 45548, 425, -1000, 251, 45548, 110881, -1000, 16274, 753,
	-181, -1000, -66, 1323, -1000, 45548, -1000, -1000, 1214, -1000,
	1213, 1210, 1208, -1000, 646, 421, -1000, 245, -1000, 2178,
	645, 642, 45548, -1000, -1000, -1000, -1000, -1000, 119661, -1000,
	-1000, 119481, -1000, -1000, 119301, -1000, -1000, 119039, -1000, -1000,
	-1000, 121969, 15690, 15052, 14856, 7956, 14409, 13276, -71, 419,
	-72, 415, 889, 887, 414, 413, 412, -73, -1000, 3686,
	3685, 3684, -1000, 3683, 3681, 3680, -1000, 3679, 3678, 3677,
	-1000, 3676, 3675, 3672, -1000, 3671, 3670, 3669, -1000, 3668,
	3667, 3666, -1000, 3665, 3664, 3663, -1000, 3661, 3659, 3657,
	-74, 405, -1000, 2887, -216, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 394, -1000, 393, -1000, 121789, -216, 392,
	967, -1000, 49531, 49531, 49531, -1000, 391, -1000, 120283, -1000,
	121527, 34545, 34545, 34545, 390, 121347, 45548, -216, -80, -1000,
	-82, -1000, -1000, 575, -87, 979, 33964, 52319, 23641, -1000,
	979, 979, 45548, -1000, 45548, 2597, -1000, -1000, -1000, -1000,
	2595, 2050, 2772, 53405, -1000, -1000, -1000, -1000, 100051, -1000,
	3539, 2668, -1000, 100051, -1000, -1000, 110881, 496, -1000, 100051,
	100051, 23641, 868, -1000, 868, 100051, 593, -1000, -1000, -1000,
	-1000, -1000, 389, 58917, -60, 243, 23641, 961, -1000, 2665,
	2665, 2665, 2665, -1000, -1000, 110881, 1206, -23, -108, 3511,
	-1000, 2057, -1000, 64858, -1000, 777, 1090, 23641, -1000, -1000,
	-1000, 640, -1000, 3558, 3558, -1000, 3558, 110881, 2884, 127,
	119, 68644, 68644, 3656, -1000, -1000, 209, -1000, 89293, 209,
	209, -1000, 89293, 89293, 2174, -1000, 224, -1000, 223, -1000,
	-1000, -141, -1000, 976, 31676, -1000, 1238, -1000, -1000, 1532,
	-1000, 1998, -1000, 1158, -1000, -1000, -1000, -1000, 31676, -1000,
	2222, 110881, 110881, 89293, -1000, 110881, -1000, 2032, 3505, 1879,
	2489, 2480, 68644, -1000, 2369, 113561, 2365, 64858, 110881, -1000,
	-1000, 639, 907, 2574, 2570, 1065, 110881, 110881, 2554, 113025,
	112489, -1000, 3654, 110881, 2056, 45548, 3340, 2190, 4845, 120,
	120, -1000, -1000, 120, 638, 1286, 89293, 89293, 110881, 68644,
	89293, 2145, -1000, -1000, -1000, -1000, -1000, 80626, -1000, -1000,
	3577, 3570, -1000, 1355, -1000, -1000, -1000, 1355, 1970, 2127,
	110881, 68644, 89293, 68644, 110881, 110881, -1000, 1697, 110881, 1419,
	-1000, 809, 2112, 120, 120, -1000, -1000, 120, 635, 23641,
	1892, -1000, 2957, 110881, 3611, 111953, 3610, 110881, 110881, 110881,
	68644, 3279, 110881, 110881, 68644, 4833, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 69748, 1075, 961,
	1674, 1205, 1191, 80090, 56136, 955, 56136, 2691, -1000, -1000,
	20875, -1000, 122149, 122149, -1000, 122149, -1000, 65398, 110881, -1000,
	1008, 110881, 75760, 919, 3080, 61078, -248, 949, 73606, 89293,
	-21, 2627, 110881, -1000, -1000, 1970, 3078, 496, 2367, -1000,
	73606, 3469, 3077, 634, 3652, 3651, -1000, 89293, 2271, 2366,
	-1000, -1000, 111417, 3094, 809, 110881, 979, 53405, 1896, -1000,
	59460, 1038, 110881, 1774, 112, -1000, -1000, -1000, 18, 110881,
	-1000, 783, -1000, -1000, 1878, 1878, 949, -256, 632, -1000,
	857, 856, 56696, 73606, -89, -1000, -1000, -1000, -1000, 2365,
	89293, 110881, 1244, 2683, 110881, -94, -1000, 242, 628, -1000,
	2737, -1000, -289, -1000, 956, 56136, 2882, 2868, -1000, -1000,
	974, -1000, 1397, 949, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -8, 110881, -248, -248, -22, -23,
	-1000, 957, -1000, 957, -1000, 957, -1000, 122149, -1000, -1000,
	1593, 1550, 110881, -1000, 23641, 110881, 89293, 23641, 89293, 2937,
	2889, -1000, -1000, -1000, 110881, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1081, -1000, 1834, 2227, -1000, 626, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2450, -1000, -26,
	31107, 865, -1000, -1000, 89293, -9, 45548, 45548, 8886, 8143,
	45548, 49531, 49531, -1000, 45548, 6569, -1000, -1000, -1000, -1000,
	-1000, 2857, 624, 45548, 64858, 6591, 6375, -1000, 388, 10611,
	536, -1000, 45548, -1000, 387, 33395, -1000, 120905, -62, -97,
	-1000, 17541, -216, -103, -1000, -1000, 768, -1000, 3081, -1000,
	45548, 121167, 2420, 1839, 1882, 1609, 3558, 3609, 20322, -1000,
	62698, 980, 2195, 118859, -1000, -1000, -1000, -1000, 64858, 64858,
	45548, 45548, -1000, 45548, 45548, 45548, -1000, -1000, -1000, 3558,
	881, -1000, -1000, -1000, 881, -1000, -1000, 1355, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1355, -1000, 45548, -1000, -1000, 2855, 45548,
	-1000, 64858, 64858, 49531, 49531, 49531, 49531, 49531, 49531, 49531,
	49531, 49531, 49531, 49531, 49531, 49531, 49531, 49531, 49531, 49531,
	49531, 49531, 2516, 49531, 3551, 3551, 3551, -1000, 2825, 2855,
	45548, 45548, 64858, 386, 385, 383, -1000, 45548, -216, -1000,
	-1000, 1878, 621, -1000, 2440, -1000, 2765, -1000, 45548, -1000,
	-245, -1000, 3018, -1000, -1000, 2765, 2765, -116, 122149, 53405,
	53405, -1000, 620, 45548, 2573, -1000, -1000, 751, -319, -1000,
	844, -1000, -1000, -1000, -1000, -1000, 496, -1000, -1000, -1000,
	229, 100051, 100051, 748, -1000, -121, -1000, -1000, -122, -1000,
	3468, 373, 23641, -1000, 979, 2657, -1000, -1000, -1000, -1000,
	-1000, -1000, -248, 110881, 110881, 2209, 3608, -1000, 3569, 763,
	746, 210, 3558, 372, 370, 369, -248, 110881, 110881, 110881,
	-1000, -1000, -1000, -1000, 209, -1000, -1000, -1000, 208, -1000,
	-1000, -1000, -1000, 2606, -1000, -40, -1000, -1000, -1000, 45548,
	-1000, -1000, 3259, 1190, 1189, -1000, -1000, -1000, -1000, 3335,
	89829, 3504, 1877, 1847, -1000, 3066, -1000, 2362, -1000, 1044,
	-1000, 1874, -1000, 45548, 619, 2673, 617, 614, 3650, 1862,
	3647, 1066, 3061, 2174, 3058, 2174, -1000, -1000, -1000, 883,
	-1000, 122149, 2190, -1000, 613, 612, -1000, -41, 1592, 1936,
	1188, 973, -1000, -1000, 45548, 45548, 99515, -1000, 464, 3264,
	-10, -1000, -1000, -1000, 1663, 1186, 1177, -1000, -1000, -1000,
	-1000, 1970, 1646, 1176, 1175, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 966, -1000, 3019, 3016, 875, 110881, -1000, 964,
	-1000, -1000, 45548, -1000, -42, 1174, 3434, 2357, 89293, -1000,
	2174, 3057, 1171, -1000, 1170, -1000, -1000, -1000, 3424, 3417,
	1173, -1000, -1000, -1000, -1000, -1000, 69196, -1000, 110881, 68644,
	89293, 1841, 767, -1000, 2204, 767, 955, 2853, -1000, 2626,
	-1000, 89293, 3645, 363, -123, -49, 64858, 3464, -1000, 2260,
	610, 89293, 864, -1000, 3539, -1000, -1000, -1000, 962, -1000,
	3374, 89293, 3463, 3054, 961, 120, 89293, 3587, -1000, -1000,
	3462, 89293, 3053, 2269, 2351, 2479, 809, 74688, 961, 2191,
	-140, -1000, 1774, 32814, 3257, -128, -1000, -1000, -1000, 979,
	62162, 53405, 45548, 3643, -130, -1000, -1000, -1000, -1000, -1000,
	97366, 97366, 73606, 73606, 73606, 949, 110881, 110881, 75760, -1000,
	-1000, 608, 110881, 110881, 601, -1000, 110881, 110881, 3638, 73606,
	-92, 598, -1000, 842, 841, 838, -1000, -1000, -1000, -1000,
	-1000, 956, -1000, -289, 56136, 120, -1000, 2201, 89293, -1000,
	19769, -1000, -1000, -1000, -1000, -1000, -1000, 957, -1000, -1000,
	2135, 2309, 2135, 1785, 1773, -1000, -1000, 2220, -1000, -1000,
	-1000, -1000, 2654, 3255, 23641, 3387, 5178, 45548, 45548, 6158,
	5844, 918, 5178, 45548, 45548, 64858, 7783, -131, 45548, 45548,
	-1000, 45548, 745, 122149, 3607, 45548, 360, 346, -1000, -1000,
	-1000, 3549, -1000, -1000, -1000, 122149, 45548, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 344, -1000, 128, -1000, -1000, -1000,
	116777, -1000, 45548, 342, 3331, -1000, 341, 340, 10432, 5904,
	118679, 118417, 118237, 339, -1000, -1000, 337, 334, 122149, 2825,
	122149, -1000, -1000, 944, 944, 1327, 1327, 1327, 1327, 3551,
	778, 2045, 1635, 818, 818, 818, 2538, 1547, 1547, 818,
	818, 818, 2844, 2502, 597, 5953, -1000, -1000, 122149, 122149,
	332, -1000, -1000, -1000, -216, 331, 1878, -1000, 2761, 3327,
	122149, -1000, 53405, 2761, 2761, -1000, -1000, 2050, 110881, 122149,
	53405, -1000, 2668, -1000, 18105, -1000, 23641, -1000, -1000, -1000,
	-1000, 3539, -1000, 58917, -1000, 595, -1000, 35, -1000, 2657,
	-1000, 835, -1000, -1000, 73606, 73606, -248, -248, -1000, -1000,
	744, 3637, 759, 23641, 328, -1000, -1000, -1000, -248, -248,
	-248, -1000, -1000, -1000, 3207, 122149, 110881, 110881, 1471, 95196,
	1756, -1000, -1000, 1913, 2468, -1000, 3498, 3494, 110881, 3052,
	-1000, 2308, -1000, 1065, 118050, 53947, -1000, 53947, 110881, -1000,
	-1000, 1843, 2566, 1107, -1000, 3297, 110881, -1000, 110881, -1000,
	-1000, -1000, 110881, 110881, 89293, 110881, -1000, 68644, 3027, -138,
	122149, -99, -1000, 834, -1000, 1154, -1000, 19216, 110881, 68644,
	89293, 110881, 68644, 89293, 2167, -1000, -1000, 3015, -1000, 3026,
	-143, 23641, -1000, 3606, 3605, 3045, 3303, -1000, 110881, 3602,
	110881, 89293, 3206, -1000, -1000, -1000, -1000, -1000, 1637, 1169,
	1159, 955, -100, 587, -1000, 820, -1000, -1000, 817, 955,
	-1000, 73606, 56136, 496, -1000, 2646, -1000, 94660, 2279, 120,
	-1000, 3634, 97907, 586, -1000, 2200, -1000, 594, -1000, 2473,
	68644, 1970, 120, 89293, -1000, -1000, 496, 327, -106, -1000,
	3082, 1060, 23641, 89293, 3036, 2477, 809, 74688, -1000, 1360,
	2609, -1000, -115, -1000, 678, 120, 2191, -1000, -140, 122149,
	-1000, 815, -1000, -144, -1000, -1000, 325, -1000, 3204, 3200,
	-1000, 2775, 53947, 585, 584, 110881, 3199, -1000, -1000, -150,
	2644, 2644, 73606, 56136, 73606, -1000, 956, -1000, -1000, 2356,
	-1000, -1000, -1000, -1000, -1000, 23641, 1627, -1000, 583, 579,
	-1000, -1000, -1000, -1000, 3255, 5178, 5178, 45548, 45548, 45548,
	5178, 7783, -151, -1000, 5178, 5178, -216, -1000, -1000, 120905,
	-1000, -1000, -1000, 122149, -1000, 18663, 2136, -1000, 117962, -1000,
	31107, -1000, -1000, 45548, 45548, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 49531, 2831, 578, 64858, -1000, -1000, 316,
	934, 45548, 47255, 3018, 934, 934, -1000, -159, -1000, -1000,
	-1000, 3539, 35, -1000, -1000, 3633, 23641, -1000, 73606, -1000,
	-1000, 758, -1000, 3631, -1000, -1000, -1000, -1000, -1000, 2711,
	3461, -1000, -1000, 1907, 2467, -1000, 3460, 1152, 3459, -1000,
	110881, -1000, 110881, -1000, 23641, 110881, 2778, 1246, -1000, 907,
	2545, 577, 49531, 89293, 897, -1000, 3486, 2742, -161, -1000,
	110881, 45548, 110881, -166, -167, 2332, -1000, -1000, 2331, 45548,
	-1000, 64858, 573, 2174, 2174, -169, -175, -1000, -1000, -1000,
	45548, 1151, 110881, 32245, -1000, 3630, 3264, -1000, -1000, -1000,
	-1000, -1000, -1000, 110881, -1000, 45548, 1140, -1000, -1000, -1000,
	3593, 2174, 23641, 2174, -1000, 2174, 3303, 1099, 110881, 68644,
	89293, -1000, 2409, 2409, 73606, 56136, -1000, -141, 955, 3458,
	2661, 3628, -1000, -1000, -1000, -1000, 2542, -1000, -1000, 110881,
	2533, 950, -1000, -178, -1000, 814, 813, 75760, 919, 876,
	-1000, -149, 567, -1000, 812, -1000, -1000, -1000, -1000, 496,
	3457, -1000, 3589, 564, 563, 110881, 2268, 558, 23641, 3261,
	809, 74688, -1000, 3094, 1774, -1000, 2338, 110881, 3249, -1000,
	2609, 557, -1000, 949, 544, 543, 3162, 3162, -180, 53947,
	53947, -188, 542, 949, -1000, -193, -1000, -1000, -1000, -1000,
	-156, -1000, 867, 830, -1000, -1000, 89293, 89293, 45548, 45548,
	-1000, 5178, 5178, 5178, -1000, 313, -1000, -1000, 2191, 3321,
	-1000, -157, 117775, 117389, 4846, 49531, 64858, -195, -1000, -1000,
	110881, 122149, -176, -1000, 122149, 539, 533, 452, -1000, -1000,
	-1000, 537, -1000, -1000, 3627, -1000, 98979, 110881, -1000, 3455,
	110881, 98443, 110881, -1000, 1861, -1000, -1000, -1000, 110881, 2349,
	-1000, -1000, -1000, 1063, 45548, 5953, 521, 45548, -1000, 3454,
	-1000, 2639, 2822, 1865, 53947, -1000, 3255, -1000, 117351, -1000,
	1052, 1932, -1000, -1000, 122149, 3303, 53947, -1000, -1000, 520,
	517, 122149, 515, 811, 2821, -1000, -1000, -1000, -1000, 122149,
	505, 3434, -1000, -1000, -1000, -1000, 2174, 89293, -1000, -1000,
	-1000, -1000, -196, -1000, -1000, 1967, 120, 2129, 2710, -1000,
	2279, 503, -1000, -1000, 2243, 2605, -1000, 97907, 31676, 31676,
	312, 3453, 876, -1000, 3531, -1000, 3179, 3179, 45548, 3449,
	120, -1000, 3587, 53947, -1000, 89293, 53947, 2263, 2033, 2464,
	74688, -1000, 2479, -1000, -1000, -202, 110881, 1774, -1000, -1000,
	73606, 73606, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1052, -203, -205, -1000, 73606, -1000, -1000,
	2356, -1000, 110881, -1000, 110881, -1000, -1000, -211, -213, -1000,
	1988, 45548, 31107, -1000, -1000, 4846, -218, -1000, -208, -1000,
	3446, 47255, 3625, 3624, 3619, -1000, -1000, -1000, 1906, -1000,
	110881, -1000, -1000, 1904, -1000, -1000, -1000, 3031, 2756, 117322,
	2443, 110881, 16312, -1000, 2818, -1000, -1000, 2661, 501, -1000,
	-1000, -1000, -1000, 865, 110881, 2661, 2752, 89293, 1062, -219,
	2135, 2135, 45548, 30538, 2161, 45548, -1000, -1000, 3303, -1000,
	2794, 3550, -1000, 919, -1000, 2160, 110881, -1000, 3282, -1000,
	3198, -1000, -1000, -1000, 2646, 120, -1000, -1000, -1000, -221,
	122149, 120, -1000, 297, -224, 1060, -226, 89293, 1887, -1000,
	809, -1000, 2477, 979, -1000, -1000, -227, -235, 1865, 1052,
	2112, -238, -1000, -243, -246, -1000, -1000, 296, 46686, 46686,
	46686, -216, -233, -1000, 110881, 497, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3012, 954, -1000, 2252, 1939, 292, 1055,
	-1000, -1000, 2112, 110881, -1000, -1000, -1000, 953, 496, -1000,
	45548, 1052, -249, -1000, 1036, -251, -1000, 1013, -254, -1000,
	2808, -1000, -257, 2174, 951, 3365, -1000, -1000, -1000, 2243,
	89293, -262, -1000, -1000, 2350, -1000, 2661, 950, -1000, -1000,
	-1000, 1052, 495, 1865, 490, 1473, 809, -1000, -1000, 1355,
	3261, 3069, 949, 949, 2661, 1865, 920, -1000, 949, -1000,
	-1000, -1000, 3051, -1000, 50669, 2248, 1647, 120103, 3051, 3051,
	-1000, -1000, 110881, 3354, -1000, 2262, 2256, 1476, -1000, -1000,
	-1000, -1000, -1000, -1000, 2742, -269, 3352, 2443, 122149, 2661,
	-1000, 2135, 2709, -1000, 2135, 2796, -1000, 2154, -1000, -1000,
	-1000, 1732, 3517, 1798, 489, -1000, 110881, 1744, 1742, 3618,
	2129, 2243, 1865, 53947, 2661, 53947, -1000, -1000, 110881, -1000,
	2033, 1291, -1000, -1000, 2112, 2661, 979, 487, -1000, -1000,
	1832, 3482, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	808, -1000, 3163, -1000, 1078, 2002, 2002, 979, -1000, 804,
	2252, -1000, -1000, 478, -1000, 477, -1000, 2199, -1000, -1000,
	-1000, -1000, 110881, -1000, -1000, 3617, -1000, 919, -1000, 2661,
	-270, 2112, -275, -1000, -248, 1887, -1000, 1557, 920, 2112,
	-1000, 1642, -1000, -1000, 2184, 46117, 45548, -1000, 3519, -1000,
	-1000, 2529, -1000, -1000, 45548, 2742, 45548, 45548, 60542, -277,
	-1000, 2243, 2112, 1052, 920, 1865, 1473, 62162, 979, 920,
	-1000, -1000, -1000, 122149, -1000, -1000, -1000, 122149, -1000, -284,
	-286, -256, 97366, 2159, 1798, 920, 1865, 979, 2661, -1000,
	-278, -1000, 979, 2112, 1134, -304, -1000, -1000, -1000, -1000,
	979, 2661, -1000, 2112, -1000, -1000, -1000, -1000, 476, -1000,
	-1000, 2112, 920, 45548, 920, 979, -305, 979, -1000, 2112,
	-1000, -1000,
}

var sqlPgo = [...]int{
	0, 4432, 4426, 4418, 4417, 4416, 4415, 4413, 4410, 4409,
	4407, 4406, 4405, 4403, 4402, 4400, 4398, 4396, 4395, 4394,
	4393, 4392, 4391, 4387, 4386, 4385, 4383, 4382, 4381, 4380,
	4379, 4378, 4377, 4376, 4375, 4374, 4373, 4372, 4371, 4369,
	4368, 4360, 4359, 4357, 4356, 4348, 4344, 4341, 4338, 4335,
	4331, 4329, 4320, 4319, 4318, 4311, 4310, 4309, 4307, 4306,
	4305, 4304, 49, 4302, 4301, 4297, 4296, 4295, 4294, 4291,
	4288, 4287, 4279, 4278, 4276, 4272, 4269, 4268, 4266, 4265,
	4261, 4253, 4252, 62, 4247, 257, 4246, 4244, 4243, 4242,
	4237, 4235, 4234, 4233, 4231, 4229, 4227, 4225, 255, 4223,
	159, 4218, 4215, 4211, 4210, 4208, 254, 4206, 4204, 4202,
	4201, 264, 4200, 4198, 4196, 4194, 4193, 4191, 4189, 4184,
	4182, 4180, 4168, 157, 185, 4165, 4164, 778, 4162, 4161,
	4160, 4159, 4157, 4149, 4145, 4144, 4143, 4139, 230, 4138,
	253, 4137, 4134, 4128, 4127, 4125, 4121, 4118, 4117, 4112,
	4109, 4108, 4107, 4105, 4101, 4098, 4096, 4093, 4090, 4088,
	4087, 4086, 4084, 4083, 4082, 4081, 4080, 4078, 4077, 4076,
	4075, 4074, 4073, 4072, 4071, 4070, 4069, 229, 258, 178,
	4068, 4067, 251, 250, 4065, 4063, 4062, 4061, 4057, 116,
	7, 248, 4056, 4055, 84, 80, 82, 93, 96, 91,
	4054, 104, 4053, 112, 55, 4051, 10, 2, 217, 237,
	11578, 221, 4050, 4049, 4048, 226, 183, 4047, 222, 4044,
	4043, 4042, 4041, 59, 43, 167, 161, 156, 155, 961,
	4039, 139, 98, 81, 48, 41, 15, 118, 197, 22,
	4038, 242, 9, 127, 4, 31, 4035, 4031, 4029, 4028,
	3378, 113, 4027, 249, 232, 160, 4023, 4022, 4020, 318,
	4019, 4018, 54, 4017, 227, 87, 117, 73, 115, 4015,
	138, 34, 4013, 225, 57, 4012, 145, 95, 83, 10489,
	10683, 4010, 119, 65, 142, 341, 209, 171, 192, 189,
	146, 150, 188, 203, 198, 166, 144, 4008, 238, 4007,
	3423, 69, 172, 4006, 4003, 4001, 85, 184, 99, 3999,
	3998, 70, 11, 5, 3, 1, 133, 26, 19, 21,
	3996, 27, 111, 46, 32, 3995, 23, 3994, 3993, 3991,
	3990, 3989, 39, 149, 3988, 262, 3987, 109, 52, 76,
	3986, 42, 201, 3985, 207, 124, 3984, 3981, 233, 196,
	170, 3980, 92, 216, 3979, 3978, 3977, 3976, 3974, 130,
	6, 121, 3973, 3972, 143, 3970, 45, 223, 187, 3968,
	68, 3967, 3966, 162, 97, 129, 261, 110, 208, 107,
	204, 173, 213, 3965, 3964, 3963, 181, 3962, 3959, 206,
	151, 3958, 3955, 194, 265, 86, 38, 71, 219, 78,
	182, 158, 3954, 193, 3952, 3951, 263, 168, 200, 14,
	13, 88, 125, 3948, 8, 220, 141, 218, 106, 3945,
	5552, 2169, 2338, 3943, 3942, 135, 108, 75, 122, 147,
	244, 77, 3940, 3939, 2684, 3937, 3936, 3935, 3934, 174,
	3931, 3930, 3926, 136, 152, 212, 3923, 94, 67, 44,
	20, 114, 235, 260, 105, 210, 165, 240, 3922, 3921,
	3920, 176, 3919, 72, 120, 148, 191, 236, 53, 3918,
	164, 3917, 134, 278, 64, 137, 3913, 215, 3912, 3908,
	3907, 3905, 3904, 3901, 3899, 243, 214, 3897, 3896, 3895,
	58, 180, 3892, 241, 140, 177, 90, 50, 3891, 101,
	3553, 3887, 179, 2136, 66, 246, 722, 247, 3886, 4192,
	51, 3885, 0, 12712, 6197, 8800, 12331, 3884, 5042, 3883,
	3882, 3880, 205, 128, 3877, 3875, 3872, 102, 3870, 79,
	3869, 3868, 61, 3861, 33, 17, 18, 28, 24, 163,
	63, 3859, 3858, 25, 126, 131, 3857, 259, 211, 3855,
	3854, 3852, 3851, 89, 3850, 37, 3848, 35, 3847, 3846,
	47, 16, 30, 3845, 3841, 190, 3840, 202, 234, 3839,
	153, 3838, 3411, 123, 3836, 3835, 3834, 60, 56, 239,
	103, 3832, 282, 3831, 3366, 3830, 3829, 29, 3826, 3825,
	228, 169, 199, 3822, 3821, 154, 3820, 3819, 3817, 272,
	3816, 3815, 3813, 36, 3812, 12, 3810, 3809, 195, 3193,
	3807, 3805, 40, 3804, 175,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	11, 11, 7, 7, 7, 7, 8, 8, 8, 8,
	8, 48, 48, 9, 9, 9, 9, 9, 9, 9,
	9, 9, 35, 30, 31, 32, 33, 33, 10, 10,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 16,
	16, 36, 36, 17, 17, 38, 38, 18, 18, 39,
	39, 579, 579, 21, 41, 22, 42, 15, 580, 580,
	580, 580, 34, 23, 43, 27, 27, 27, 27, 27,
	192, 192, 192, 192, 20, 20, 37, 37, 226, 226,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 575, 575, 228, 228, 227, 222,
	222, 581, 581, 229, 229, 229, 231, 231, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 474, 474,
	474, 507, 507, 506, 506, 506, 505, 505, 594, 594,
	595, 595, 595, 595, 595, 126, 126, 372, 372, 372,
	51, 51, 51, 51, 51, 570, 570, 194, 194, 194,
	196, 196, 195, 195, 195, 195, 74, 74, 586, 586,
	587, 587, 585, 588, 588, 588, 193, 193, 193, 122,
	122, 122, 122, 122, 122, 123, 123, 124, 124, 197,
	197, 197, 199, 199, 198, 198, 198, 198, 198, 198,
	198, 198, 203, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 102, 102, 509, 509, 510, 510, 188, 188,
	189, 189, 189, 189, 190, 190, 191, 191, 191, 65,
	200, 200, 202, 202, 201, 201, 201, 201, 201, 53,
	53, 53, 53, 53, 53, 53, 54, 54, 54, 54,
	54, 55, 55, 55, 55, 55, 55, 56, 56, 56,
	56, 56, 56, 63, 63, 63, 63, 179, 179, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 71, 71, 71, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 597, 597, 598, 598, 599, 599,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 80, 80, 334, 334,
	299, 299, 81, 81, 81, 82, 82, 83, 83, 67,
	67, 568, 568, 349, 349, 465, 465, 68, 576, 576,
	576, 578, 578, 577, 577, 85, 85, 371, 371, 86,
	86, 86, 86, 86, 86, 87, 87, 87, 87, 87,
	87, 87, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 95, 95, 95, 95,
	95, 96, 96, 96, 93, 93, 93, 90, 90, 90,
	89, 89, 89, 94, 94, 94, 567, 288, 288, 92,
	92, 92, 91, 91, 91, 350, 350, 97, 97, 97,
	97, 300, 98, 98, 98, 98, 98, 98, 98, 98,
	100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
	100, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 467, 467, 99, 99, 99, 432, 432,
	103, 103, 103, 387, 387, 104, 104, 104, 104, 104,
	105, 105, 105, 105, 105, 105, 125, 125, 125, 125,
	125, 125, 572, 572, 342, 342, 253, 253, 253, 253,
	115, 115, 115, 115, 116, 116, 116, 117, 117, 184,
	184, 132, 132, 132, 132, 132, 131, 131, 131, 131,
	131, 131, 57, 57, 57, 58, 58, 59, 59, 60,
	60, 61, 61, 62, 62, 62, 62, 62, 134, 134,
	591, 591, 136, 133, 133, 133, 135, 135, 135, 135,
	137, 138, 138, 138, 138, 138, 138, 138, 138, 139,
	139, 499, 499, 358, 358, 497, 497, 519, 519, 498,
	498, 304, 304, 304, 304, 304, 305, 305, 305, 508,
	508, 508, 508, 508, 508, 140, 140, 140, 140, 140,
	140, 140, 140, 140, 140, 140, 140, 140, 140, 140,
	140, 140, 140, 140, 140, 140, 140, 140, 140, 140,
	140, 140, 140, 140, 140, 140, 140, 140, 140, 140,
	140, 140, 140, 140, 140, 140, 140, 140, 140, 140,
	140, 140, 140, 140, 140, 140, 140, 140, 140, 140,
	140, 140, 140, 140, 140, 140, 140, 140, 140, 140,
	140, 140, 185, 185, 186, 187, 187, 187, 187, 187,
	163, 163, 163, 178, 178, 178, 178, 178, 178, 178,
	166, 166, 166, 150, 150, 141, 141, 141, 141, 141,
	141, 141, 145, 145, 145, 145, 145, 145, 145, 145,
	142, 142, 152, 152, 152, 152, 152, 146, 146, 147,
	147, 147, 147, 173, 173, 149, 149, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 143, 143, 143, 143,
	154, 154, 154, 154, 394, 394, 394, 177, 177, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	176, 176, 176, 176, 176, 176, 589, 589, 590, 590,
	170, 170, 170, 170, 170, 170, 446, 446, 164, 164,
	164, 164, 169, 169, 169, 169, 172, 172, 172, 172,
	377, 377, 161, 161, 161, 162, 162, 162, 167, 167,
	168, 165, 165, 171, 171, 171, 171, 144, 144, 144,
	144, 601, 601, 601, 174, 174, 160, 160, 175, 175,
	175, 175, 175, 175, 175, 175, 602, 602, 156, 156,
	156, 155, 155, 155, 155, 158, 158, 159, 159, 159,
	159, 159, 159, 157, 148, 569, 569, 565, 565, 565,
	565, 565, 565, 565, 565, 566, 566, 566, 566, 571,
	571, 108, 108, 108, 108, 108, 118, 118, 118, 118,
	118, 109, 109, 109, 109, 109, 111, 111, 110, 110,
	110, 110, 75, 75, 75, 75, 75, 14, 14, 14,
	76, 76, 244, 244, 206, 206, 206, 323, 323, 207,
	207, 312, 312, 312, 312, 204, 204, 205, 205, 77,
	77, 603, 603, 603, 582, 582, 582, 583, 583, 583,
	583, 583, 583, 306, 306, 307, 307, 412, 412, 412,
	412, 412, 310, 310, 310, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 313, 313, 230, 230, 230, 321,
	322, 322, 314, 314, 320, 319, 319, 318, 318, 317,
	317, 315, 316, 316, 316, 325, 325, 324, 327, 327,
	326, 411, 528, 528, 530, 530, 530, 530, 530, 530,
	530, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 395, 395, 604, 604, 526, 526, 526,
	527, 522, 522, 523, 523, 523, 523, 523, 308, 308,
	309, 309, 309, 309, 524, 525, 340, 340, 450, 529,
	529, 531, 531, 533, 605, 605, 605, 605, 605, 605,
	606, 606, 606, 410, 410, 409, 409, 332, 332, 534,
	534, 534, 534, 535, 535, 535, 535, 535, 538, 537,
	536, 536, 536, 536, 536, 79, 79, 79, 374, 374,
	373, 373, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 181, 181, 256,
	256, 73, 73, 73, 12, 12, 12, 584, 584, 584,
	78, 78, 78, 78, 78, 78, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 574, 574, 573, 573,
	257, 257, 608, 608, 84, 84, 84, 84, 84, 84,
	84, 84, 468, 468, 469, 469, 72, 72, 72, 72,
	72, 396, 396, 393, 393, 392, 392, 339, 339, 448,
	448, 448, 449, 261, 261, 262, 262, 223, 223, 223,
	29, 28, 19, 19, 24, 24, 25, 25, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 26,
	26, 45, 45, 45, 45, 46, 46, 46, 46, 49,
	49, 50, 50, 44, 44, 44, 44, 47, 47, 40,
	40, 592, 592, 593, 593, 114, 114, 119, 119, 119,
	119, 119, 120, 120, 120, 120, 121, 121, 121, 121,
	130, 130, 180, 180, 180, 180, 180, 180, 180, 52,
	52, 52, 52, 64, 64, 64, 64, 128, 610, 610,
	610, 129, 129, 129, 609, 609, 254, 254, 406, 406,
	407, 407, 611, 611, 408, 408, 408, 408, 408, 247,
	246, 248, 248, 249, 249, 70, 70, 70, 239, 239,
	238, 236, 236, 511, 511, 241, 241, 241, 242, 242,
	232, 232, 233, 233, 234, 234, 235, 235, 245, 245,
	612, 612, 106, 106, 106, 183, 183, 298, 298, 298,
	403, 403, 403, 333, 333, 268, 268, 405, 405, 405,
	405, 370, 370, 370, 182, 182, 347, 347, 360, 360,
	361, 361, 462, 462, 362, 112, 112, 113, 113, 127,
	127, 210, 210, 208, 208, 208, 208, 208, 208, 208,
	208, 215, 215, 216, 216, 217, 217, 218, 219, 219,
	219, 219, 351, 351, 220, 220, 220, 209, 209, 209,
	211, 211, 211, 211, 211, 211, 211, 214, 214, 214,
	214, 221, 221, 221, 213, 213, 545, 545, 545, 547,
	547, 549, 549, 548, 548, 544, 544, 546, 546, 607,
	607, 376, 376, 376, 330, 331, 328, 328, 329, 329,
	337, 337, 335, 336, 336, 338, 338, 447, 447, 447,
	224, 224, 224, 367, 367, 367, 367, 368, 368, 399,
	399, 397, 397, 397, 397, 398, 398, 400, 400, 400,
	401, 401, 402, 402, 364, 364, 365, 365, 366, 366,
	366, 366, 428, 428, 212, 212, 212, 344, 344, 344,
	345, 345, 418, 418, 418, 418, 418, 418, 419, 419,
	417, 417, 417, 417, 451, 451, 451, 451, 451, 451,
	451, 451, 451, 452, 453, 453, 346, 346, 454, 404,
	404, 563, 563, 563, 564, 564, 445, 445, 455, 455,
	455, 455, 455, 455, 443, 443, 444, 444, 463, 464,
	464, 380, 380, 380, 380, 378, 378, 381, 381, 381,
	381, 381, 379, 379, 456, 456, 456, 456, 369, 369,
	457, 457, 457, 457, 458, 459, 459, 460, 460, 413,
	414, 414, 470, 470, 470, 470, 472, 343, 343, 343,
	343, 343, 521, 520, 520, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 486, 486, 486, 486, 486, 486,
	486, 486, 486, 486, 486, 486, 486, 486, 486, 486,
	486, 486, 486, 486, 486, 486, 486, 486, 486, 486,
	486, 486, 486, 486, 486, 486, 487, 487, 487, 487,
	487, 487, 487, 473, 473, 473, 473, 473, 477, 477,
	477, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 478, 478, 483, 483, 484, 484, 484, 479,
	480, 485, 485, 485, 485, 613, 613, 489, 489, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 475, 475,
	475, 482, 482, 482, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 388, 388, 390,
	390, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 422, 422,
	422, 422, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 539, 539, 539,
	539, 539, 539, 539, 539, 424, 424, 542, 542, 543,
	543, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	550, 550, 551, 551, 553, 553, 554, 554, 555, 556,
	556, 556, 557, 558, 558, 552, 552, 559, 559, 559,
	559, 560, 560, 561, 561, 561, 561, 561, 562, 562,
	562, 562, 562, 434, 434, 435, 435, 441, 441, 441,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 258, 258, 258, 258,
	258, 356, 356, 354, 354, 354, 357, 357, 355, 355,
	353, 353, 352, 352, 431, 431, 429, 429, 433, 433,
	382, 382, 488, 488, 488, 488, 488, 488, 488, 488,
	383, 383, 383, 391, 384, 384, 385, 385, 385, 385,
	385, 425, 426, 386, 386, 386, 427, 427, 436, 440,
	440, 439, 438, 438, 437, 437, 415, 415, 416, 416,
	363, 363, 614, 614, 359, 359, 461, 461, 461, 461,
	302, 302, 348, 348, 301, 301, 293, 293, 294, 294,
	294, 294, 341, 341, 442, 442, 490, 490, 491, 491,
	492, 492, 493, 493, 494, 495, 496, 430, 430, 278,
	277, 265, 266, 276, 275, 274, 264, 267, 271, 272,
	273, 269, 270, 284, 283, 282, 237, 240, 289, 290,
	290, 292, 292, 291, 291, 280, 281, 466, 263, 295,
	295, 296, 296, 296, 297, 297, 297, 297, 259, 259,
	260, 260, 285, 285, 286, 287, 287, 279, 279, 279,
	250, 250, 250, 251, 251, 252, 252, 504, 504, 501,
	501, 501, 502, 502, 502, 503, 503, 503, 503, 500,
	500, 500, 500, 500, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	513, 513, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	515, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 518, 518,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 1, 1, 3, 1, 1, 1, 1,
	3, 4, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 6, 6, 6, 4, 4, 5, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	6, 4, 6, 6, 9, 6, 9, 6, 5, 6,
	5, 1, 1, 5, 5, 6, 6, 4, 4, 4,
	4, 3, 4, 4, 4, 7, 7, 9, 8, 9,
	5, 3, 5, 7, 4, 12, 4, 12, 1, 3,
	5, 5, 2, 5, 3, 6, 4, 6, 5, 6,
	6, 4, 8, 3, 4, 2, 3, 10, 3, 6,
	4, 3, 1, 3, 2, 1, 1, 3, 1, 3,
	2, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 3, 1, 1, 1, 1, 1, 1, 3,
	6, 4, 6, 7, 9, 6, 2, 2, 3, 0,
	8, 6, 8, 7, 2, 0, 1, 2, 5, 0,
	1, 3, 3, 1, 1, 3, 12, 3, 1, 0,
	1, 1, 2, 3, 3, 0, 4, 6, 0, 5,
	7, 6, 8, 7, 2, 1, 3, 1, 3, 2,
	5, 0, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 6, 4, 9, 7, 12, 12, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	2, 0, 1, 2, 3, 1, 1, 2, 2, 1,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 6, 6, 6, 6, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 6, 3, 3, 4, 3, 3, 4, 3,
	4, 4, 4, 3, 5, 7, 3, 3, 4, 3,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	4, 3, 3, 3, 3, 3, 6, 4, 4, 4,
	3, 5, 3, 3, 3, 3, 3, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	5, 1, 2, 1, 3, 2, 0, 7, 2, 5,
	0, 1, 3, 3, 1, 9, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 6, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 1, 1, 3, 4,
	6, 3, 3, 5, 3, 1, 3, 2, 2, 2,
	2, 1, 2, 2, 5, 3, 3, 6, 6, 3,
	1, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 3, 5, 7, 2, 3, 0,
	3, 5, 2, 3, 0, 2, 3, 2, 3, 2,
	6, 4, 7, 7, 7, 2, 6, 4, 7, 7,
	7, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 1, 5, 3, 2, 6, 3, 3, 4, 4,
	3, 1, 3, 2, 3, 3, 1, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 1, 3, 3, 3, 3, 3,
	2, 3, 3, 1, 1, 1, 1, 1, 2, 2,
	5, 7, 3, 3, 3, 4, 4, 6, 5, 5,
	5, 3, 4, 4, 3, 4, 4, 3, 4, 4,
	5, 3, 5, 5, 5, 7, 3, 3, 3, 2,
	6, 4, 3, 2, 3, 4, 3, 5, 3, 6,
	5, 6, 3, 5, 6, 3, 4, 3, 4, 3,
	3, 4, 4, 5, 0, 1, 1, 1, 1, 3,
	2, 4, 3, 3, 5, 3, 4, 3, 5, 3,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 3, 4, 4, 5,
	2, 0, 4, 2, 3, 4, 2, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 3, 4, 4,
	3, 1, 1, 1, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 3, 4, 1, 1, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 2, 3, 2, 5, 2, 0, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 6, 5, 8, 3, 6, 6, 3,
	13, 16, 1, 0, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 8, 0, 1, 1, 0, 2,
	1, 0, 1, 0, 1, 1, 0, 1, 4, 1,
	0, 3, 7, 7, 1, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 2, 2, 2, 8, 4, 2, 5,
	5, 5, 2, 2, 0, 1, 3, 11, 12, 9,
	5, 3, 1, 5, 10, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 5, 1, 3, 1, 2,
	0, 1, 2, 2, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 6, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 4, 2, 2,
	2, 4, 7, 3, 4, 6, 3, 1, 1, 1,
	8, 10, 11, 7, 10, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 11, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 17, 20, 16, 19,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 2,
	4, 2, 3, 1, 0, 2, 0, 1, 1, 0,
	9, 6, 6, 8, 6, 8, 5, 7, 2, 6,
	7, 4, 4, 6, 4, 4, 5, 5, 7, 3,
	3, 4, 4, 6, 3, 6, 7, 4, 6, 6,
	8, 6, 7, 8, 9, 6, 7, 8, 9, 6,
	8, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	8, 1, 0, 2, 0, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 3,
	2, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	0, 2, 4, 2, 1, 0, 2, 1, 1, 0,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 2,
	3, 2, 2, 1, 2, 12, 15, 3, 1, 0,
	4, 3, 0, 1, 1, 4, 4, 5, 1, 0,
	3, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	1, 0, 6, 7, 3, 6, 3, 1, 3, 1,
	1, 4, 2, 1, 3, 1, 3, 4, 8, 11,
	5, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 6, 4, 5, 4, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	1, 0, 3, 3, 5, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 3, 1, 3,
	3, 3, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 4, 1, 0, 1, 0, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 5, 6, 6, 7, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 2, 1, 5, 5, 6, 3,
	1, 1, 1, 2, 2, 2, 4, 3, 5, 6,
	8, 6, 5, 4, 3, 2, 2, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 583, -100, -97, -65, -63, -103, -104,
	-86, -105, -99, -125, -130, -112, -113, -114, -126, -132,
	-180, -185, -186, -187, -3, -51, -53, -66, -85, -87,
	-98, -107, -106, -108, -115, -122, -118, -102, -57, -127,
	-131, -140, -181, -182, -183, 33, 32, 101, 81, 155,
	129, 138, 201, 379, 421, 432, 393, 143, 413, 398,
	-135, -136, 449, -52, -64, -129, -128, 74, 130, 407,
	-4, -12, 30, 47, -54, -55, -56, 63, -73, -69,
	-80, -74, -67, -68, -71, -596, 103, -546, -88, -91,
	-121, -600, 162, 219, -109, -110, 362, -116, -117, 415,
	-119, -120, 417, 163, -59, -58, 157, -208, -210, -133,
	-134, -184, -141, -142, -143, -144, -145, -146, -147, -173,
	-148, -149, -150, -151, -152, -153, -157, -176, -154, -155,
	-156, -159, -158, -160, -165, -161, -162, -163, -164, -166,
	-167, -169, -170, -171, -172, -174, -175, 454, -168, 514,
	50, 468, 83, 147, 425, 21, -5, -6, -7, -8,
	-9, -10, -11, -14, -13, -70, -72, -75, -76, -77,
	-84, -78, -79, -545, -89, -90, -93, -95, -96, -92,
	-94, 414, -211, -209, 580, 529, -16, -21, -22, -17,
	-18, -20, -23, -19, -24, -25, -26, -36, -41, -42,
	-38, -39, -37, -40, -43, -44, -45, -46, -47, -48,
	-49, -50, -28, -34, -35, -29, -30, -31, -32, -33,
	-15, -27, 549, 558, -214, -212, -213, -221, 441, 537,
	488, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, -300, 2, -280, -285, -286, -287, -279,
	-250, -515, -518, 4, -512, -516, 169, 228, 326, 21,
	23, 22, 24, 25, 26, 27, 28, 30, 31, 42,
	43, 45, 46, 47, 48, 49, 50, 54, 56, 60,
	61, 62, 63, 64, 65, 69, 74, 75, 80, 81,
	82, 83, 84, 85, 86, 92, 89, 90, 91, 93,
	95, 97, 98, 99, 100, 101, 102, 104, 105, 106,
	108, 109, 110, 118, 119, 120, 121, 122, 124, 129,
	130, 133, 128, 132, 134, 136, 137, 138, 141, 142,
	143, 145, 146, 148, 149, 150, 152, 153, 155, 156,
	157, 160, 158, 496, 159, 161, 162, 163, 164, 167,
	175, 176, 177, 182, 184, 188, 189, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 202, 206, 208, 209,
	210, 211, 212, 218, 219, 221, 222, 223, 224, 229,
	230, 231, 235, 232, 241, 242, 246, 247, 248, 250,
	254, 255, 256, 257, 258, 259, 261, 263, 262, 265,
	268, 269, 272, 276, 277, 281, 282, 278, 283, 284,
	286, 287, 290, 288, 291, 292, 289, 293, 295, 296,
	297, 298, 299, 300, 301, 302, 303, 304, 305, 306,
	294, 309, 307, 311, 312, 313, 324, 322, 317, 318,
	314, 319, 315, 316, 320, 321, 328, 329, 332, 216,
	334, 335, 338, 356, 342, 343, 344, 347, 348, 351,
	354, 355, 357, 358, 359, 360, 361, 362, 363, 364,
	366, 367, 369, 370, 371, 373, 374, 375, 377, 379,
	380, 382, 383, 385, 386, 387, 388, 389, 390, 391,
	393, 395, 394, 396, 398, 400, 401, 402, 407, 413,
	409, 410, 411, 412, 414, 415, 416, 417, 419, 420,
	421, 423, 424, 425, 426, 428, 430, 431, 434, 435,
	451, 452, 470, 432, 433, 436, 437, 438, 439, 440,
	444, 442, 443, 445, 446, 447, 449, 450, 453, 454,
	456, 457, 458, 459, 460, 461, 464, 466, 467, 468,
	487, 469, 471, 475, 476, 477, 478, 472, 473, 486,
	480, 481, 483, 484, 489, 490, 491, 492, 493, 494,
	495, 497, 499, 507, 508, 509, 511, 514, 515, 516,
	517, 505, 519, 520, 523, 524, 525, 528, 526, 527,
	529, 531, 534, 535, 536, 542, 541, 543, 550, 551,
	553, 554, 555, 37, 51, 52, 55, 57, 59, 70,
	71, 72, 76, 125, 126, 154, 165, 166, 178, 190,
	191, 203, 205, 213, 214, 215, 236, 237, 239, 244,
	266, 331, 333, 349, 353, 368, 372, 376, 378, 392,
	427, 462, 474, 479, 500, 501, 502, 503, 510, 512,
	537, 538, 539, 544, 552, -300, 2, -280, 340, -273,
	2, -250, -250, 379, 29, 2, 29, 367, 443, 491,
	493, 2, -572, -342, 2, 29, -253, -250, 103, 201,
	441, -273, 2, -572, -342, 25, 2, -250, 2, 354,
	22, 28, 67, 78, 99, 141, 164, 185, 188, -599,
	356, 386, 430, 445, 486, 497, 511, 2, 541, 287,
	442, 488, 228, 121, 516, 436, -584, 434, 435, 354,
	384, 423, 204, 530, -254, 2, 432, -250, 287, 2,
	583, 95, 277, 75, 427, 446, -138, 508, -137, 500,
	436, -139, -499, 2, 309, -250, 583, 583, 583, 29,
	-263, -250, 488, 228, 436, 121, 484, 583, 2, 488,
	359, 541, 442, 121, 389, 228, 516, 436, -584, 287,
	-570, 2, -565, 4, -516, -512, -294, -293, 488, 494,
	121, -287, -279, 573, -286, 583, 583, 583, 2, 247,
	248, 388, 387, 446, 447, 583, 583, 583, 583, 434,
	2, 164, 22, 28, 67, 94, 99, 127, 185, 188,
	345, -597, 356, 386, 445, 486, 490, 497, 511, -583,
	469, 69, 412, 436, -582, -584, 287, 516, 141, -392,
	121, 277, 199, 524, 493, 491, 522, 133, 235, 527,
	526, 583, 583, -100, 2, 580, 33, 32, 143, 449,
	-203, 488, 240, 2, -250, 583, 583, 2, 247, 248,
	434, 435, 583, 583, 186, -565, 2, 583, 583, 2,
	247, 248, 434, 435, 240, 2, 69, 438, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 2, -178, 446, 469, 210, 48, 47, 75, 29,
	385, 80, 360, 122, 149, 517, 202, 228, 229, 255,
	94, 95, -394, 45, 248, 247, 435, -589, 434, -446,
	489, 437, 443, 483, 259, 432, 508, 103, 531, 424,
	555, 389, 390, 481, 402, 278, 158, 4, 121, 309,
	448, 500, 277, 431, 363, 85, -607, 2, 488, -609,
	2, 508, 508, 2, -609, 2, -609, 2, -609, 2,
	-610, 508, 552, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	-209, -211, -210, 583, 583, 583, 583, 583, 583, 583,
	-178, 446, 2, 75, 29, -335, -337, 521, 238, 151,
	346, -208, -210, 2, -545, -497, 2, -420, -519, -422,
	571, 572, 564, 485, 68, 325, 556, -434, 127, 522,
	340, -518, -423, -436, 154, 427, -357, 8, 9, 5,
	6, 7, -259, -424, -430, 513, 168, 330, -297, 584,
	10, 580, -542, -210, -435, 38, 205, 66, -501, -296,
	-260, -473, 239, -295, -279, -539, -540, 4, -512, -513,
	-502, -476, -484, -480, -481, -487, -250, -515, 78, 112,
	113, 111, 116, 115, 280, 279, 117, 114, 448, 530,
	67, 37, 213, 214, 244, 331, 215, 76, -541, 142,
	-514, 236, 237, 462, 52, 392, 178, 126, 125, 333,
	57, 55, 538, -485, 123, 500, 501, 502, 503, 190,
	191, 59, 165, 166, 353, 376, 479, 510, 512, 203,
	266, 44, 107, 187, 234, 217, 243, 245, 249, 267,
	270, 310, 323, 327, 350, 352, 422, 455, -613, 539,
	474, 70, 71, -547, 394, -548, -273, -547, 583, 583,
	585, 583, -328, -330, -331, 2, 29, 139, 580, 2,
	-451, 2, -452, -456, -210, 260, -455, 580, -453, 578,
	-280, 341, -543, 428, -539, -540, -259, -279, -296, 4,
	-512, -514, 582, -332, 580, 121, 488, 79, 228, -387,
	580, -250, 29, 340, 504, 585, -329, 383, -432, 580,
	340, 186, 343, 61, 291, 2, 2, 2, 2, 2,
	213, -250, 488, 120, 2, 258, 2, 2, 2, 2,
	2, 2, 2, -350, 213, 2, -280, 541, -350, 213,
	2, -350, 213, 2, -393, 2, 88, -264, 213, 2,
	-250, -288, 213, 2, -283, -285, -292, 213, 2, -290,
	-250, -510, 213, 2, -509, -504, 10, -503, 5, 4,
	-512, -516, -513, -515, 78, -420, 2, -127, 2, 61,
	-250, 541, 2, 2, 451, 2, 580, -138, 72, 508,
	44, 446, -407, 2, -408, -246, -247, -248, -463, -249,
	246, 382, 391, 559, 131, 325, 555, -497, -591, 186,
	563, 504, -497, -358, 582, 2, 2, 2, 2, 2,
	2, -456, 213, -280, 2, -277, -500, 4, -512, -516,
	-513, -517, 29, 32, 33, 34, 36, 38, 39, 40,
	41, 58, 66, 67, 73, 77, 79, 88, 94, 103,
	111, 112, 114, 113, 115, 116, 117, 127, 131, 135,
	139, 140, 144, 147, 151, 168, 170, 183, 185, 186,
	201, 204, 207, 220, 233, 238, 240, 260, 264, 271,
	279, 280, 325, 330, 336, 340, 341, 345, 346, 365,
	381, 397, 418, 441, 448, 465, 482, 488, 498, 504,
	506, 513, 521, 522, 530, 532, 540, 545, 546, 547,
	548, 549, -518, 2, -456, 213, 2, -282, 213, -456,
	-285, 2, -264, 2, -276, -500, 2, -301, 213, -280,
	-281, -285, -283, 2, -290, 2, -509, 213, 2, 541,
	240, 504, 585, -348, -293, -294, -496, 8, -341, -250,
	582, -420, 2, -127, -111, 2, 183, -420, 213, 2,
	-127, 213, 2, -420, 213, 2, -127, 213, 2, -586,
	2, -509, 213, -250, 2, 291, 2, 2, 511, 2,
	99, 488, 120, 2, 411, -598, 430, 515, 2, 2,
	2, 2, 2, 2, 2, 488, -269, 2, -250, 183,
	472, -290, 213, -291, 2, 442, -608, 394, -509, 213,
	2, 541, -283, 213, 2, -283, 228, 242, -264, 213,
	2, 493, 491, 493, 491, 186, 2, 240, 2, 240,
	2, -457, 2, -458, -452, -459, 578, 341, -467, 2,
	-466, -503, 537, -100, 580, -100, 580, 446, 580, -509,
	-280, -280, -420, 2, -127, -111, 2, -420, 2, -127,
	2, -124, -509, -123, 580, 186, -420, 2, -127, -111,
	2, -420, 2, -127, 2, -203, 183, 2, 121, 488,
	-178, 2, 183, 532, 2, 8, 2, 220, -509, 437,
	390, 175, 2, 451, 2, 452, 75, -394, 555, 75,
	186, 2, 186, 2, -377, 2, 549, 186, 2, 2,
	-569, 2, 340, 186, 2, 186, 2, 186, 2, 186,
	2, 186, 2, -177, 447, 509, 487, 387, 248, 2,
	-127, 546, -111, -420, 546, 2, -590, 183, 435, -420,
	2, 507, 257, 159, 186, -377, 2, 186, 2, 186,
	2, 5, 2, 388, 470, 2, 246, 382, 470, 2,
	-280, -601, 29, 2, 488, 541, 442, 2, 2, 89,
	90, 186, 2, 186, 2, 200, 186, 2, 186, 555,
	2, -369, -456, -406, -407, -406, 504, -335, -337, -178,
	451, 2, -215, -367, -217, 183, -397, -398, -218, 271,
	170, 336, -219, -376, 29, 139, -376, -376, 61, 581,
	581, 11, 12, 77, 42, 571, 572, 573, 574, 181,
	575, 576, 569, 570, 568, 561, 562, 566, 252, 253,
	96, 565, 563, 87, 285, 429, 171, 172, 173, 174,
	408, 226, 35, 227, 14, 15, 16, 34, 345, 270,
	556, 217, 455, 564, 17, 18, 19, 243, 245, 327,
	51, 220, -258, -303, -420, -420, -420, -420, -420, -420,
	-420, 352, 580, -363, -415, 578, -210, 580, 580, 580,
	-496, -210, -420, -434, 581, -355, 580, -210, -434, -429,
	580, 427, 578, 580, -437, -420, 5, 5, 5, 580,
	582, -550, 550, 183, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 378,
	-478, 580, -477, 580, -477, -477, 542, -475, 580, 558,
	551, 580, -475, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 542, 585, -547, -332,
	580, -359, -461, -420, 573, -359, -359, 340, -352, -420,
	107, -380, 249, 310, 187, 267, 422, 234, -417, 584,
	-417, -445, 558, -210, -453, -279, -210, -455, 580, -451,
	-445, -101, -496, -85, -98, -106, -127, -140, -182, -183,
	573, -280, 580, 186, 580, 582, -500, 186, -341, -264,
	-280, -295, -296, -301, 138, -352, -565, 516, 436, -341,
	-253, 39, -431, -470, -471, -521, 584, -520, -473, -483,
	-479, -482, 368, 372, -502, 55, 538, -485, 239, 4,
	-512, -514, 236, 237, 462, 52, 392, 178, 126, 125,
	333, 57, 500, 501, 502, 503, 190, 191, 59, 539,
	474, 70, 71, -565, 516, 436, -341, 183, -507, 2,
	-506, -505, 117, 448, -503, 5, 2, 154, 2, 2,
	2, -250, -229, 585, 65, 416, 154, -350, 213, -229,
	154, -229, 154, -302, 213, -301, -229, 154, -229, 585,
	154, -229, 585, 154, 582, 585, 154, -507, 2, -393,
	-499, -352, 39, -407, 2, 127, -505, -611, 585, 269,
	-305, 284, 324, 209, 341, 553, 334, 131, -508, 5,
	4, -430, -442, 127, 277, 239, -490, -492, 8, -491,
	9, -493, 571, 572, -498, -497, 110, 582, -500, -226,
	409, 449, 355, -225, 24, 30, 143, 230, 313, 535,
	160, -318, 231, -315, 359, 154, 466, 525, -579, -580,
	433, 495, 496, 91, 334, 449, 355, 409, 154, -373,
	-375, 39, 119, 313, 354, 62, 223, 289, 290, 468,
	544, 154, 449, 355, 409, 355, 24, 143, -241, -238,
	449, -580, 100, 409, 480, 381, -580, -228, 466, 525,
	-579, -580, 433, 409, -227, -320, -315, 359, 154, 584,
	24, 143, 409, 449, 355, -594, -595, 30, 409, 355,
	-573, -544, 549, 154, -456, 213, -587, -123, 261, 5,
	10, -509, -123, -348, 585, 585, -500, 573, 435, 434,
	154, 154, 154, 154, 183, 325, 2, 2, 2, 2,
	2, 188, -582, -599, 2, 2, -280, 213, -334, 340,
	-568, -349, 488, -280, 183, 325, 44, -282, 213, 2,
	-285, 541, -573, 325, -284, 213, -280, 39, 580, 325,
	2, -393, 2, 228, -544, 325, -457, -298, -280, -452,
	-298, 449, -273, 39, -417, -280, 581, 585, -467, -467,
	-509, -191, 549, 186, 103, 580, 580, -203, -464, 585,
	-463, 220, -510, -124, -509, 412, -509, -568, -264, 2,
	-280, 2, 488, 250, -509, -191, 220, -509, -509, -509,
	-499, 29, 452, 2, -177, 447, 509, 90, 452, 2,
	-280, 488, 121, 228, 81, -250, -571, 183, -566, 423,
	436, 516, -565, -280, 121, -280, 121, -280, 121, -280,
	-280, 2, 2, 2, 2, 2, 86, 86, 2, 47,
	-590, 183, 2, 507, 2, 507, 2, -250, -250, -250,
	469, 269, -280, 489, -602, 186, 183, 488, 228, 488,
	228, 121, 186, 75, 121, 29, 488, -229, 585, -254,
	-215, -367, -499, -368, -367, -216, -215, -218, 183, 391,
	526, 313, 453, 254, -398, -397, 29, -420, -402, 177,
	312, -420, -400, -422, 571, 572, -491, -493, -351, 334,
	-209, -209, -209, -338, -447, -420, 381, 228, -472, -470,
	-470, -278, -500, 500, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, 270,
	217, 455, 51, 220, -420, 504, -420, -420, -420, -420,
	307, 325, 330, 513, 168, 523, 139, 334, -614, 482,
	41, -427, -210, -356, 580, -441, 36, 465, 29, -434,
	580, 2, -415, -420, -416, -353, -352, -352, 581, 540,
	29, 139, 573, 2, 581, 585, 39, 581, -420, -353,
	-433, -429, -352, -440, -439, 546, -388, -389, 554, 294,
	124, 211, 292, -390, 440, -494, 8, -500, 573, -551,
	176, 204, 580, 581, 2, 581, 2, 581, -420, 2,
	581, -420, 2, 581, -420, 2, 581, -420, 2, 581,
	2, -420, -420, -420, -420, -420, -420, -420, -352, 8,
	-494, -494, 500, 500, -494, -494, -494, -486, 368, 369,
	370, 371, 272, 273, 274, 275, 372, 373, 374, 375,
	299, 300, 301, 302, 295, 296, 297, 298, 303, 304,
	305, 306, 195, 196, 197, 198, 191, 192, 193, 194,
	-486, -382, 2, -488, -352, 4, 554, 294, 124, 211,
	292, 440, 5, -382, 2, -383, 2, -420, -352, -384,
	-421, -422, 571, 572, 564, -434, -385, 2, -420, -353,
	-420, 58, 264, 506, -386, -420, 186, -352, -352, 2,
	-352, 2, -548, 39, -352, -344, 585, 186, 39, 4,
	-344, -344, 580, 581, 585, -381, 208, 288, 283, 242,
	-381, -451, -380, 249, -378, 350, -378, -378, -445, -265,
	578, 586, -500, -445, -444, -443, 39, -273, 347, -445,
	-445, 582, 581, -444, 579, -563, 580, 583, 583, 583,
	583, 583, -280, 580, -352, -500, 582, 471, 581, 243,
	243, 243, 243, 428, 581, 504, -567, -288, -292, 549,
	-100, 342, 581, 585, -343, 38, 578, 582, -494, 2,
	2, -489, 542, 580, 580, -389, 580, 186, -567, -292,
	-342, 585, 504, -250, 2, -280, -350, -229, 154, -350,
	-350, -229, 585, 154, -264, -283, -288, -290, -292, -250,
	-509, -510, -229, -284, -591, 581, 508, -408, -304, 391,
	464, 410, 444, 484, 8, 9, 8, 9, 585, -500,
	585, -592, 94, 504, 79, 436, -243, 278, 401, 313,
	488, 427, 504, -411, 213, 79, -522, -267, 94, -523,
	-250, 73, 522, 381, 185, 152, -592, 94, 381, -592,
	94, 2, 230, 94, 449, 469, 29, 61, -456, 42,
	42, 29, -127, 265, 186, 555, 488, 228, 436, 504,
	504, -456, -375, -470, 119, 289, 290, 61, -495, -490,
	571, 572, -495, 61, -495, -495, -495, 549, -282, -456,
	436, 504, 504, 504, 400, 400, -238, 504, 504, -612,
	563, 400, 585, 42, 42, 29, -127, 265, 186, 504,
	-301, -265, 536, 43, 536, 43, 536, 504, 43, 436,
	504, 585, 43, 504, 504, -574, -255, 106, 319, 282,
	320, 98, 316, 97, 315, 104, 317, 105, 318, 543,
	328, 64, 314, 293, 321, -256, -257, 361, 534, -509,
	449, 355, 409, 154, 220, -464, 220, -464, -293, -250,
	582, -127, -420, -420, -127, -420, -127, 47, 154, 2,
	-608, 258, 580, -308, 325, 186, -341, -465, 240, 585,
	-349, -565, 154, -506, -374, -373, 325, -284, 213, 2,
	154, -332, 325, 148, 580, 389, 2, 154, -266, 213,
	-251, -250, -393, -232, 492, 154, -371, 532, -403, -127,
	580, 127, 39, -403, -360, -361, -462, -362, -267, 580,
	-273, -417, -100, -466, 581, 581, 581, -190, 344, -189,
	-250, 5, -203, 532, -307, -412, -411, -526, -527, -522,
	270, 228, 522, 242, 169, -333, -268, -267, 120, -197,
	549, -123, -124, 581, -464, 220, 472, -191, -191, -464,
	-464, -280, 183, -509, -191, -191, -191, 2, 2, 2,
	-377, -280, -264, -301, -280, 582, -341, -341, -292, -288,
	-377, -264, -377, -264, -377, -264, -127, -420, 2, 446,
	183, 183, 582, -377, 389, 121, 488, 359, 228, -280,
	-301, -280, -301, -264, 121, -264, 122, -280, -456, -368,
	-216, 341, 254, 453, -400, -401, -422, 427, 428, -401,
	427, 428, 8, 9, 8, 9, -220, 457, 329, -350,
	585, -223, 40, 135, 254, -280, 555, 150, -420, -420,
	504, -614, 482, -427, 150, -420, 307, 330, 513, 168,
	523, 139, 334, 186, 580, -421, -421, 581, -354, -420,
	-420, 579, 588, 581, -337, 585, -335, -420, -352, -352,
	581, 582, -352, -341, 579, 579, 585, 581, -438, -439,
	144, -420, 504, 504, 504, 504, 580, 581, 582, -556,
	351, 580, 580, -420, 581, 581, 581, 581, 39, 585,
	585, 585, 581, 585, 585, 585, 581, 581, 581, 585,
	581, 555, 555, 581, 581, 581, 581, 585, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 581, 585, 581, 186, 581, 581, -391, 365,
	581, 11, 12, 571, 572, 573, 574, 181, 575, 576,
	569, 570, 568, 561, 562, 563, 87, 285, 429, 14,
	15, 16, 243, 220, -421, -421, -421, 581, -425, -426,
	186, 183, 39, -386, -386, -386, 581, 186, -352, 581,
	581, 580, -549, 287, 325, 581, -414, -413, 547, -461,
	-345, 2, -451, -275, -500, -414, -414, -352, -420, 249,
	249, -379, 532, 340, -381, -451, -444, -496, -419, -418,
	184, 40, 135, 322, 216, -444, -273, -332, -444, -444,
	-500, -445, -445, -443, 581, -564, -496, 581, -346, -454,
	-543, -337, 582, -500, -200, -544, -179, 5, 330, -179,
	-179, -179, -341, 504, 504, 25, 366, -470, 578, 579,
	8, -500, 580, -494, -494, -494, -341, 186, 186, 186,
	-506, -506, 2, -229, -350, -229, -229, -301, -302, -229,
	-229, -229, -372, 549, -497, -407, 520, 84, 391, 500,
	-497, -225, 409, -267, -267, -280, -289, -250, 199, 401,
	26, 401, 269, 269, -506, 325, -411, 213, -231, 325,
	-470, -274, -250, 580, -395, 551, 254, 254, 532, -267,
	-274, 254, 213, -267, 213, -274, 2, -274, -575, 391,
	335, -420, 61, -316, 276, 389, 326, -226, 409, 449,
	355, -127, -127, -127, 580, -591, 532, 138, -280, -301,
	-280, -289, -506, -284, 449, 355, 409, 323, -295, -495,
	-495, -373, 449, 355, 409, -289, -506, -282, -506, -237,
	-250, -237, 436, -264, 400, 555, 46, -612, -227, -127,
	-127, -127, 580, -265, -228, 409, 5, 213, -267, 5,
	-267, 213, 5, -250, -267, -289, -506, -595, 24, 143,
	-267, -289, -506, -255, -509, 330, 528, -573, 436, 504,
	504, -456, -123, -194, 549, -123, -188, 224, 573, -570,
	-250, 541, -250, -306, -309, -307, -267, -206, -207, 551,
	549, 154, -299, -280, 578, -191, -509, -280, -465, -290,
	-291, 154, -332, 325, -509, 39, 154, 580, 2, 2,
	-283, 340, 325, -266, 213, -233, 145, -612, -264, -414,
	-345, -370, -405, 418, 340, -333, 537, -273, -370, -347,
	585, 186, 563, 582, -333, -460, 573, -100, -100, -191,
	585, 580, 563, 563, 580, -509, -509, 581, 585, -231,
	-280, -266, 228, 228, -272, -251, 581, 585, 582, 580,
	-199, 344, -198, 146, 256, 241, 458, 459, 460, 461,
	137, -464, -197, -124, 186, 186, -60, 549, 488, -191,
	584, -250, -377, -377, -377, 446, 446, -250, -276, -264,
	-280, -277, -301, 183, 183, -264, 526, -401, 341, 281,
	-447, -224, 557, -280, 584, -420, -420, 150, 150, -420,
	-421, -421, -420, 150, 186, 580, -420, -431, 34, 34,
	581, 585, -416, -420, 581, 540, -337, -337, 581, 573,
	-500, 584, 581, -429, 147, -420, 498, 294, 211, 292,
	-390, 292, -390, -390, -494, 5, -500, 573, -557, -270,
	580, -250, 547, -336, 346, 581, -472, -470, -420, -420,
	-420, -420, -420, -494, -475, -475, -490, -490, -420, -425,
	-420, -472, -470, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, 139, 325, 334, -421, -426, -425, -420, -420,
	-470, 581, 581, 581, -352, -100, 580, 287, -364, 204,
	-420, -464, 585, -364, -364, 581, -451, -451, 580, -420,
	249, 579, 585, 587, 563, -332, 582, -443, -444, 579,
	581, 585, 581, 585, -404, 39, 581, -500, -414, -202,
	-201, 136, 54, 108, 134, 330, -341, -341, 343, 5,
	8, 578, 579, 582, -494, 581, 581, 581, -341, -341,
	-341, -229, -229, 120, 313, -420, 504, 504, 61, 504,
	42, 323, -237, 381, 427, 26, 401, 401, 154, 325,
	534, -528, -523, 152, -420, 580, 228, 580, 580, 2,
	-222, 143, 449, -593, 2, 532, 154, -229, 154, -229,
	553, -316, 580, 580, 504, 436, -243, 504, 549, -352,
	-420, -192, 127, -499, -580, 584, -580, 584, 436, 504,
	504, 436, 504, 504, 549, 167, 167, 555, -237, 549,
	-352, 504, -474, 49, 27, 325, -283, -229, 154, 504,
	504, 516, 449, -509, 330, -289, -506, -284, 449, 355,
	409, -464, -196, 344, -195, 146, 420, 137, 256, -464,
	-194, 186, 240, -284, 2, 581, 581, 585, -529, 39,
	338, 338, 580, -280, -81, 549, -463, -496, -576, 549,
	44, -282, 39, 154, -573, -127, -284, -468, -469, 5,
	39, -280, 154, 340, 325, -234, 263, -612, -504, -544,
	-337, -370, -359, 326, 92, 581, -414, -361, -345, -420,
	2, 581, -189, -190, -509, -509, -509, -191, -203, -203,
	-412, -310, 580, -266, -251, 580, -203, -268, 2, -510,
	585, 580, 563, 563, 563, -197, -464, -123, -127, 344,
	-280, 573, -377, -322, -321, 359, 334, -322, 427, 427,
	341, 177, 259, -223, -265, -420, -420, 150, 34, 34,
	-420, -420, -431, 581, -420, -420, -352, 579, 5, -420,
	581, 581, 8, -420, 581, 582, -558, -250, -420, 581,
	61, 581, 581, 585, 585, 581, 581, 581, 581, 581,
	581, 581, -426, 186, 139, 334, 580, 581, 581, -100,
	-428, 207, 61, -451, -428, -428, -379, -341, -451, -418,
	-265, 578, -500, -496, -454, 580, 582, -201, 563, -509,
	-509, 579, 2, 578, -500, 581, 120, -267, -267, 488,
	427, 323, -237, 381, 427, 400, 269, 26, 26, -411,
	154, -530, 94, -532, 77, 169, 103, 325, 330, 522,
	381, 73, 127, 397, -604, 39, 560, 581, -339, -448,
	-543, 580, -250, -339, -341, 325, 477, 127, 325, 127,
	120, 516, 80, -267, -274, -341, -341, -280, -289, -506,
	161, 581, 585, 563, 2, 573, 573, -289, -506, -284,
	-289, -506, -282, 357, 167, 161, 581, -265, 5, 5,
	154, -262, 77, -267, 5, -267, -283, 120, 436, 504,
	504, -194, 585, 580, 563, 563, -194, -510, -123, -332,
	-323, 230, -267, -527, -524, -525, 381, -531, -533, 169,
	381, -127, 2, -205, -204, -250, 5, 580, -308, 344,
	579, -578, 344, -577, 118, 137, -506, -374, -127, -284,
	-332, 581, 585, 148, -396, 532, -265, -280, 154, -235,
	262, -612, -504, -232, -399, -397, 140, 580, 340, -127,
	-337, 563, 581, 581, 120, 120, 222, 153, -339, 580,
	580, -341, 120, 581, -198, -199, -509, -123, -509, -197,
	-61, -62, 228, 94, 364, -277, 488, 228, 580, 580,
	-223, -420, -420, -420, 581, -337, -500, 573, -552, 359,
	581, -447, -420, -420, -421, 186, 580, -431, 581, -553,
	548, -420, -365, -366, -420, 426, 109, 205, -553, -553,
	581, -496, 2, -509, 578, 2, 220, 39, 400, 269,
	39, 504, 39, -411, -274, -278, -271, -250, 169, 213,
	330, 545, -395, 254, 580, -421, -280, 580, 2, 31,
	-605, 131, 233, 581, 585, -449, -261, -250, -420, -449,
	581, 581, 330, 330, -420, -470, 580, -229, -229, 581,
	581, -420, 504, -499, 101, -497, 2, -580, -264, -420,
	504, 5, -229, -278, -229, -229, -262, 516, -289, -506,
	-284, -195, -196, -509, -123, -194, 39, -313, 232, 2,
	-529, 254, -271, 254, -603, 549, 581, 585, 563, 563,
	-306, -206, -82, -83, 505, -463, 585, 580, 563, -332,
	39, 5, 580, 580, -250, 340, 580, -265, -245, 93,
	-612, -504, -233, -370, 326, -341, 94, -399, -427, -191,
	580, 580, -311, 82, 95, 128, 212, 189, 229, 469,
	475, 29, -311, 581, -339, -339, 581, 580, -191, 581,
	585, 29, 580, 29, 580, -280, -301, -352, -352, 581,
	-337, 61, 585, 581, 581, -421, -431, 581, -554, -555,
	-270, 585, 580, 580, 450, 579, 2, -237, 381, -250,
	39, -250, -237, 381, -250, -532, -271, 325, 532, -420,
	-252, 580, -420, 39, 233, 132, 218, -410, -606, 102,
	478, 221, -448, -223, 581, -409, 532, 397, -262, -339,
	580, 580, 580, 563, 186, 580, -474, -229, -283, 581,
	-585, 395, -127, -317, -318, 220, 580, -312, 340, 120,
	313, -204, -497, -497, 581, 39, -83, 9, -577, -578,
	-420, 39, -127, -468, -339, -280, -339, 340, -239, -238,
	271, -504, -234, 581, -274, -370, -510, -510, -409, 581,
	581, -510, -62, -341, -341, 581, 581, -559, 389, 428,
	206, -352, -338, 581, 585, 39, -366, 2, 2, 2,
	400, -250, 400, 154, 208, 581, -534, 286, -250, 581,
	132, 218, -313, 580, -224, -449, -313, 208, -280, -581,
	532, 581, -325, -324, -321, -327, -326, -321, -352, -497,
	101, 357, -352, -262, -588, 187, -587, 5, 10, -206,
	357, -340, -450, -267, 83, 120, -323, -127, 581, -127,
	581, 581, -396, 581, -280, -236, -511, 400, 402, -612,
	-235, -414, 581, 581, -410, -409, -319, -315, 581, 581,
	581, 581, -560, -561, 51, 519, 110, -420, -560, -560,
	-555, -557, 169, 549, -535, -538, -537, 340, 456, 187,
	358, 581, 477, 544, -319, -341, 549, -332, -420, -409,
	581, 585, 537, 581, 585, 537, 581, 186, 581, -229,
	-193, 549, 47, -312, -280, 581, 585, 380, 133, 143,
	-313, -603, -409, 580, -410, 580, -242, -241, -612, -490,
	-245, 140, -191, -191, -313, -410, -207, 549, -191, -562,
	152, -561, 377, 182, 427, 377, 182, -562, -562, -271,
	56, -537, 340, -538, 340, 526, 133, -605, 581, 56,
	-534, -313, -324, 220, -326, 186, 357, 434, -587, 31,
	-244, -243, 580, -450, 428, 428, 2, -317, -312, -410,
	-339, -313, -339, -240, -341, -239, 326, 526, -319, -313,
	-414, 110, 204, 499, 313, 34, 563, -536, 313, 416,
	65, 449, -536, -414, 563, -535, 580, 580, 344, -341,
	2, -206, -313, 581, -319, 581, -236, 449, -207, -319,
	427, 348, -561, -420, 23, 330, 127, -420, -605, -352,
	-352, -190, 580, 581, -312, -319, -409, -207, -410, -242,
	-360, -414, -207, 581, 581, -190, -230, 65, 416, -244,
	-207, -410, -414, -313, -414, -414, -314, -315, 504, 581,
	-414, -313, -319, 580, -319, -207, -352, -207, -414, 581,
	-414, -314,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 520, 521, 523, 524, 525, 527,
	528, 530, 532, 534, 535, 536, 538, 539, 541, 542,
	543, 544, 545, 547, 549, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	611, 613, 0, 1312, 1314, 1316, 1318, 0, 754, 0,
	36, 37, 0, -2, 309, 311, 313, 0, 339, 341,
	342, 344, 346, 347, 348, 350, -2, 0, 455, 456,
	458, 460, -2, 0, 941, 943, 0, 600, 602, 0,
	946, 948, 0, 0, 622, 623, 0, 1419, -2, 616,
	618, 620, 685, 687, 689, 691, 693, 695, 697, 699,
	701, 702, 704, 706, 708, 710, 712, 713, 715, 717,
	719, 720, 722, 723, 725, 727, 729, 731, 733, 735,
	737, 739, 741, 743, 745, 747, 749, -2, 751, -2,
	-2, 0, -2, -2, -2, 1330, 40, 42, 44, 46,
	48, 50, 52, 54, 56, 399, 401, 403, 405, 407,
	410, 412, 414, 1477, 462, 464, 466, 468, 470, 472,
	474, 0, -2, 1491, 0, 0, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 100, 101, 102,
	103, 104, 105, 106, 107, 72, 73, 74, 76, 77,
	78, 79, 83, 84, 85, 86, 87, 88, 89, 90,
	98, 70, 0, 0, 1450, 1452, 1454, 1456, -2, 0,
	0, 5, 9, 11, 13, 15, 17, 19, 21, 23,
	25, 27, 29, 522, 526, 529, 531, 533, 537, 540,
	546, 548, 550, 507, 508, 511, 2155, 2172, 2173, 2174,
	2177, 2178, 2179, 2180, 2181, 2182, 2620, 2702, 2703, 2204,
	2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234,
	2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244,
	2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254,
	2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264,
	2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274,
	2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284,
	2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294,
	2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304,
	2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314,
	2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324,
	2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334,
	2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344,
	2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354,
	2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364,
	2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374,
	2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384,
	2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394,
	2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404,
	2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414,
	2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424,
	2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434,
	2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444,
	2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454,
	2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464,
	2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474,
	2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484,
	2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494,
	2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504,
	2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514,
	2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524,
	2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534,
	2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544,
	2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554,
	2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564,
	2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574,
	2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584,
	2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594,
	2595, 2596, 2597, 2598, 2599, 509, 510, 1118, 0, 574,
	572, 2140, 575, 2424, 577, 579, 449, 450, 451, 452,
	453, 454, 0, 593, 585, 1489, 594, 596, 597, 598,
	599, 569, 567, 0, 593, 2208, 591, 1310, 1311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 461, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	378, 1167, 1168, 1169, 1295, 1296, 2468, 1337, 0, 216,
	612, -2, -2, -2, 2585, -2, 644, -2, 651, 2589,
	2470, 656, 0, 658, -2, 661, 1313, 1315, 1317, 752,
	753, 2158, 0, 0, 0, 0, 0, 38, 39, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 226, -2, -2, -2, -2, 0, 0, 2514,
	2261, 2108, 2174, 2111, 2106, 310, 312, 314, 315, 0,
	0, 0, 0, 0, 0, 340, 343, 345, 349, -2,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 1002, 994, 995, 1225, 0, 0, 0,
	-2, 457, 459, 512, 513, 0, 1478, 1478, -2, 0,
	0, 0, 0, 281, 272, 942, 944, 945, 0, 0,
	0, 0, 601, 603, 0, 0, 254, 947, 949, 950,
	0, 0, 0, 0, 0, 283, 0, 0, 617, 619,
	621, 686, 688, 690, 692, 694, 696, 698, 700, 703,
	705, 707, 709, 711, 714, 716, 718, 721, 724, 726,
	728, 730, 732, 734, 736, 738, 740, 742, 744, 746,
	748, 750, 760, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, -2, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 848, 0, 0, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, -2, 923, 0, 763, 765, 766,
	767, 0, 826, 846, 847, 856, 0, 1158, 1479, 1339,
	1320, 1334, 1339, 1322, 1323, 1324, 1325, 1326, 1331, 1333,
	1327, 1328, 1329, 41, 43, 45, 47, 49, 51, 53,
	55, 57, 400, 402, 404, 406, 408, 411, 413, 415,
	-2, 1448, 1449, 463, 465, 467, 469, 471, 473, 475,
	604, 0, 606, 0, 764, -2, 0, 1483, 1483, 1483,
	0, 0, 1449, 1447, 0, 609, 610, 665, 666, 1751,
	0, 0, 0, 0, 0, 0, 0, 2005, 1837, 0,
	667, -2, 1868, 1870, 2560, 2585, 2004, 1872, 1873, 1874,
	1875, 1876, 0, 1878, 1879, 1880, 1881, 1882, 1883, 0,
	1885, 0, 1890, 1891, 1892, 0, 2567, 2085, 2168, -2,
	0, 0, 2573, 2164, 0, 1971, 1908, -2, -2, 2191,
	2170, 1683, 1684, 1685, 1686, 1687, -2, -2, 2603, 1912,
	1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922,
	0, 2548, 2568, 2569, 2574, 2576, 2570, 2557, 1933, 2274,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1710, 1719, -2, -2, -2, -2, -2,
	-2, -2, 2561, 2562, 2579, 2582, 2588, 2593, 2594, 2566,
	2575, 2602, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611,
	2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 1711, -2,
	-2, -2, -2, 1466, 2437, 1469, 1118, 1467, 1451, 1453,
	0, 1455, 0, 0, 0, 1460, 1486, 1484, 0, 1535,
	1464, 1465, 1553, 1553, 1577, 0, 1558, 0, 1577, 1478,
	1604, 0, 1564, 2460, 1909, 1910, 0, 2174, 2169, -2,
	-2, 2600, 0, 0, 0, 0, 0, 0, 0, 570,
	0, 576, 578, 0, 0, 0, 592, 1488, 0, 0,
	0, 0, 0, 0, 0, 381, 382, 383, 384, 385,
	2568, 0, 0, 0, 390, 0, 392, 393, 394, 395,
	396, 397, 398, 185, 2568, 480, 505, 0, 185, 2568,
	483, 185, 2568, 486, 0, 489, 1223, 185, 2568, 492,
	2136, 185, 2568, 495, 497, 2144, 185, 2568, 501, 2151,
	2149, 502, 2568, 504, 286, 284, 285, 2187, 2188, 2195,
	2196, 2197, 2198, 2601, 2603, 1306, 1307, 1308, 1309, 0,
	1336, 1224, 614, 615, 0, 639, 0, 643, 2556, -2,
	0, 2479, -2, 647, 1340, 1344, 1345, 1346, 1347, 1348,
	0, 0, 0, 0, 1353, 0, 0, 653, 0, 0,
	640, 641, 659, 662, 0, 755, 756, 757, 758, 759,
	69, 0, 2568, 1604, 71, 0, 2130, 2199, 2200, 2201,
	2202, 2203, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628,
	2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638,
	2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648,
	2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658,
	2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668,
	2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678,
	2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688,
	2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698,
	2699, 2700, 2701, 75, 0, 2568, 80, 0, 2568, 0,
	-2, 91, 0, 99, 0, 2133, 108, 0, 2568, 0,
	2105, -2, 0, 197, 0, 969, -2, 2568, 1166, 0,
	0, 0, 0, 932, 2102, 2107, 933, 2126, 934, 2112,
	0, 316, 317, 318, 319, 320, 0, 321, 2568, 323,
	324, 0, 326, 327, 2568, 329, 330, 0, 332, 0,
	237, 238, 2568, 353, 354, 0, 356, 357, 0, 359,
	0, 0, 0, 363, -2, 379, 0, 376, 366, 367,
	369, 370, 371, 372, 373, 0, 419, 417, 2141, 0,
	0, -2, 2568, 0, 966, 0, 0, 1203, -2, 2568,
	1163, 0, 1210, 2568, 1206, 0, -2, 0, 1476, 2568,
	1357, 998, 999, 1000, 1001, 1616, 446, 0, 1384, 0,
	1386, 0, 1405, 1610, 1553, 0, 0, 1615, 0, -2,
	563, 2157, -2, 515, 0, 516, 0, -2, 0, 298,
	0, 0, 951, 952, 953, 954, 955, 958, 959, 960,
	961, 1590, 255, 257, 0, 0, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 0, 0, 624, 0, 0,
	761, 762, 0, 0, 772, 773, 774, 0, 298, 2471,
	2433, 2295, 781, 0, 784, 787, -2, 0, 0, 0,
	0, 791, 0, 796, 797, 798, 0, 0, 802, 804,
	940, 806, 0, 0, 808, 0, 812, 0, 815, 0,
	817, 0, 819, -2, -2, -2, 827, 828, -2, 832,
	-2, 0, 835, 837, 0, 839, -2, 0, 848, 844,
	845, 0, 0, 0, 0, 864, 865, 0, 874, 0,
	877, 878, 879, 0, 881, 882, 0, 884, 885, 886,
	887, 0, 0, 890, 891, -2, -2, 895, 897, 0,
	904, 0, 910, 0, 914, 0, 0, 922, 0, 768,
	769, 185, 1608, 1319, -2, 1321, 0, -2, 0, 605,
	0, 608, 1508, 1434, 1431, 0, 1505, 1506, 1435, 0,
	0, 0, 1442, 0, 1481, 1482, 0, 0, 0, 1421,
	1422, 0, 0, 0, 0, 2010, 2011, 2012, 2013, 2014,
	2015, 2018, 2019, 2016, 2017, 2020, 2021, 0, 0, 0,
	0, 0, 2022, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2023, 2024, 2025, 0, 0, 2027,
	0, 2029, 0, 0, 0, 0, 0, 0, 1816, 1818,
	2093, 0, 0, 2026, 1756, 1757, 1758, 1759, 1760, 1795,
	1796, 0, 0, 1869, 2090, 2089, 1871, 0, 2041, 0,
	1884, -2, 0, 2005, 2036, 0, 0, 1893, 1894, 1895,
	0, 0, 2041, 0, 0, 2084, 1905, 1906, 1748, 0,
	0, 1973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1697,
	1696, 0, 1698, 0, 1699, 1700, 1707, 1720, 0, 0,
	0, 0, 1724, 0, 0, 0, 0, 0, 0, 0,
	2065, -2, 0, 0, 0, 0, 1712, 0, 1468, 0,
	0, 1539, 2094, 2098, 2099, 1539, 1539, 0, 0, 2042,
	1601, 1601, 0, 0, 1596, 1596, 1596, 1594, 1577, 0,
	1577, 1587, 0, 1577, 1577, 0, -2, 1558, 0, 0,
	1587, 0, 1571, 551, 553, 555, 557, 558, 559, 561,
	1605, 1606, 0, 0, 0, 0, 2175, 0, 0, 0,
	0, 0, 2160, 0, 0, 0, 0, 2524, 2470, 581,
	595, 1478, 0, 2044, 1631, 1635, 0, 1637, 1638, 1639,
	1640, 1641, 0, 0, 1632, -2, 1708, 1710, 1731, 2192,
	2193, 2194, 1691, 1692, 1693, 1694, 1695, 1703, 1690, 1690,
	1690, 1701, 1730, 1722, 1730, 1726, 1676, 1677, 1678, 1713,
	1714, 1715, 1716, 0, 2524, 2470, 587, 0, 0, 1416,
	201, 203, 204, 205, 206, 207, 380, 0, 387, 388,
	389, 0, 476, 0, 183, 184, 0, 185, 2568, 481,
	0, 484, 0, 185, 2568, 2100, 490, 0, 493, 0,
	0, 499, 0, 0, 0, 0, 0, 185, 1418, 0,
	0, 0, 0, -2, 649, 654, 655, 0, 1342, 0,
	1349, 676, 677, 678, 1351, 1352, 0, 1354, 652, 679,
	680, 681, 682, 683, 684, 0, 2114, 2115, 2116, 2117,
	2120, 2121, 0, 0, 650, 669, 657, 0, 663, 109,
	1292, 0, 0, 148, 0, 1292, 1292, 0, 0, 0,
	0, 172, 0, 1037, 0, 0, 0, 0, 0, 133,
	144, 121, 122, 0, 0, 0, 0, 0, 0, 81,
	1140, 0, 1143, 0, 0, 0, 0, 0, 0, 0,
	1156, 0, 0, 0, 0, 0, 0, 0, 95, 96,
	0, 132, 0, 0, 1381, 0, 127, 111, 0, 0,
	0, 134, 146, 0, 176, 178, 1034, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 208, 0, 0, 0,
	1164, 0, 1475, 0, 0, 2568, 0, 1590, 2341, -2,
	-2, 255, 1590, 931, 0, 0, 2175, 2110, 0, 0,
	0, 0, 0, 0, 0, 0, 355, 358, 360, 361,
	362, 0, 1202, 0, 368, 409, 1089, 2568, 0, 0,
	436, 431, 0, 433, 0, 0, 0, 1139, 2568, 1137,
	2145, 0, 1161, 0, 1118, 2568, 2143, 0, 0, 0,
	1211, 2184, 1220, 1224, 1371, 0, 448, 0, 1387, 1389,
	0, 0, 1611, 0, 1613, 1553, 1478, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 261, 0,
	1589, 0, 0, 1590, 255, 2448, 298, 298, 1590, 626,
	1590, 628, 0, 0, 775, 776, 0, 298, 298, 298,
	782, 783, 785, 786, -2, -2, -2, 905, 788, 789,
	871, 0, 0, 0, 870, 801, 805, 0, 925, 2456,
	2470, 2524, 938, 871, 2261, 871, 2261, 871, 2261, 816,
	818, 821, 859, 867, 831, 836, 0, 0, 841, 849,
	-2, 0, 851, 0, 853, 0, 855, 871, 872, 875,
	880, 883, 888, 889, 0, 906, 907, 0, 0, 0,
	0, 0, 0, 917, 918, 0, 0, 1157, 0, 1332,
	1508, 1434, 607, 1425, 1507, 1426, 1433, 1436, 0, 0,
	1438, 0, 1440, 0, 1503, 1504, 1511, 1512, 0, 1522,
	1523, 1515, 0, -2, 0, 0, 1518, 1519, 1444, 0,
	1461, 1462, 1463, 1492, 1495, 1239, 0, 2702, 1752, 1626,
	1753, 1754, 2129, 0, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, -2, -2, -2, -2, -2, -2,
	-2, -2, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	1787, 1788, 1789, -2, -2, -2, 1793, 1794, -2, 2028,
	2030, 0, 2093, 0, -2, 0, -2, -2, -2, -2,
	1813, 0, 1815, 1820, 1822, 1824, 0, 0, 0, 0,
	2092, 1834, 2076, 2077, 0, 0, 2007, 2008, 2009, 1819,
	0, 1838, 2091, 2088, 0, 0, 2040, 1491, 1897, 0,
	0, 0, 0, 1904, 1889, 2038, 0, 2037, 0, 0,
	0, 2048, 0, 2083, 2079, 0, 2127, 1747, 1734, 1735,
	1736, 1737, 1738, 1739, 1749, 0, 2124, 2161, 2167, 1981,
	0, 0, 0, 1934, 1935, 1936, 1937, 1938, 0, 1940,
	1941, 0, 1943, 1944, 0, 1946, 1947, 0, 1949, 1950,
	1951, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1644, 0,
	0, 0, 1648, 0, 0, 0, 1652, 0, 0, 0,
	1656, 0, 0, 0, 1660, 0, 0, 0, 1664, 0,
	0, 0, 1668, 0, 0, 0, 1672, 0, 0, 0,
	0, 0, 1953, 0, 2051, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 1955, 0, 1957, 2042, 2062, 0,
	0, 1839, 0, 0, 0, 2005, 0, 1960, 2042, 2070,
	0, 0, 0, 0, 0, 2042, 0, 2075, 0, 1967,
	0, 1969, 1470, 0, 0, 1621, 0, 0, 0, 2097,
	1621, 1621, 0, 1534, 0, 0, 1597, 1598, 1599, 1600,
	0, 0, 1601, 0, 1591, 1595, 1592, 1593, 1587, 1550,
	0, 0, 2131, 1587, 1556, 1586, 0, 1118, 1576, 1587,
	1587, 0, -2, 1560, 1577, 0, 0, 552, 554, 556,
	560, 562, 0, 0, 1491, -2, 0, -2, 1117, 0,
	0, 0, 0, 571, 573, 0, 0, 496, 0, 0,
	565, 0, 568, 0, 1622, 1625, 0, 0, 1636, 1642,
	1643, 0, -2, 0, 0, 1732, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 506, 185, 478, 0, 185,
	185, 487, 0, 0, 185, 498, 185, 2152, 185, 2150,
	287, 503, 1417, 219, 0, 642, 0, 1341, 1350, 0,
	673, 0, 675, 0, 2118, 2122, 2119, 2123, 0, 664,
	0, 0, 0, 0, 1291, 0, 1246, 0, 0, 0,
	0, 0, 0, 152, 2568, 0, 187, 0, 0, 1082,
	2137, 0, 1074, 0, 0, 2281, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 118, 123, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1141, 1142, 1144, 1151, 1153, 0, 1147, 2125,
	0, 0, 1148, 0, 1150, 1152, 1154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	1380, 1381, 0, 0, 0, 120, 124, 0, 0, 0,
	0, 2104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1198, 1196, 1176, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
	1189, 1190, 1191, 1192, 1193, 1194, 1195, 0, 0, -2,
	0, 0, 0, 0, 0, 229, 0, 289, 2103, 2113,
	0, 956, 957, 322, 325, 328, 331, 225, 0, 364,
	0, 0, 1004, 979, 0, 0, 418, 298, 0, 0,
	432, 436, 2154, 964, 1135, 1138, 0, 1118, 2568, 1175,
	0, 0, 0, 0, 0, 0, 1209, 0, 0, 2568,
	2132, 2183, 2184, 1373, 1381, 0, 1621, 0, 1403, 1390,
	0, 0, 0, 1403, 1407, 1408, 1410, 1411, 0, 0,
	1612, 1618, 514, 564, 1478, 1478, 298, 296, 2401, 294,
	291, 293, 0, 0, 0, 1005, 1007, 1008, 1009, 187,
	0, 2184, 1074, 2330, 2184, 0, 1393, 1395, 0, 249,
	0, 258, 1590, 256, 261, 0, 0, 0, 430, 625,
	630, 770, 0, 298, 778, 779, 780, 823, 861, 869,
	790, 792, 793, 794, 0, 0, 939, 935, 936, 937,
	807, 871, 810, 871, 813, 871, 834, 838, 843, 850,
	0, 0, 0, 863, 0, 0, 0, 0, 0, 0,
	0, 911, 912, 913, 915, 920, 919, 924, 1609, 1429,
	1430, 1432, 0, 1441, 0, 0, 1517, -2, -2, 1516,
	1520, 1521, -2, -2, -2, -2, 1437, 0, 1446, 1443,
	0, 1502, 1237, 1238, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 1835, 0, -2, 1814, 1817, 1821, 1823,
	1825, 0, 0, 0, 0, 0, 0, 2031, 0, 2033,
	1836, 2086, 2089, 2003, 0, 0, 1490, 1491, 1491, 0,
	1903, 0, 2039, 0, 2046, 2047, 0, 1896, 0, 2080,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1907,
	0, 0, 0, 0, 1939, 1942, 1945, 1948, 0, 0,
	0, 0, 1928, 0, 0, 0, 1932, 1702, 1688, 0,
	1730, 1728, 1729, 1723, 1730, 1727, 1680, 0, 1645, 1646,
	1647, 1649, 1650, 1651, 1653, 1654, 1655, 1657, 1658, 1659,
	1661, 1662, 1663, 1665, 1666, 1667, 1669, 1670, 1671, 1673,
	1674, 1675, 1679, 0, 1952, 0, 1954, 1956, 0, 0,
	1958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1842, 1843, 1844, 1959, 2068, 2069,
	0, 0, 0, 0, 0, 0, 1965, 0, 2074, 1966,
	1968, 1478, 0, 1471, 0, 1536, 1525, 1620, 0, 2095,
	1590, 1538, 1540, 2096, 2134, 1525, 1525, 0, 2043, 0,
	0, 1581, 0, 0, 0, 1583, 1554, 0, 0, 1548,
	0, 1544, 1545, 1546, 1547, 1555, 1118, 1585, 1557, 1561,
	2161, 0, 1587, 0, 1572, 0, 1574, 1607, 0, 1566,
	1569, 0, 0, 2176, 1621, 0, 333, 337, 338, 334,
	335, 336, 580, 0, 0, 0, 0, 2045, 0, 1627,
	0, 1633, 0, 0, 0, 0, 586, 0, 0, 0,
	202, 1415, 386, 477, 185, 482, 485, 2101, 185, 491,
	494, 500, 215, 0, 638, -2, 671, 672, 674, 0,
	670, 149, 1292, 0, 0, 1242, 1244, 2148, 1248, 0,
	0, 0, 0, 0, 1269, 0, 154, 2568, 163, 0,
	1053, 0, 2135, 0, 0, 0, 0, 0, 0, 1294,
	0, 0, 2568, 185, 2568, 185, 166, 168, 171, 0,
	175, 173, 0, 1041, 0, 0, 1044, 110, 1292, 0,
	0, 113, 117, 125, 0, 0, 0, 131, 0, 0,
	0, 1271, 1275, 1283, 0, 0, 0, 1145, 1146, 1149,
	1155, 82, 0, 0, 0, 1279, 1281, 1287, 92, 93,
	2146, 94, 0, 1241, 0, 0, 0, 0, 177, 115,
	119, 126, 0, 1289, 112, 0, 200, 0, 0, 190,
	185, 2568, 0, 192, 0, 193, 194, 209, 0, 0,
	0, 967, 968, 1197, 1159, 1160, 0, 1165, 0, 0,
	0, 0, 1590, 221, 0, 1590, 229, 0, 2109, 0,
	352, 0, 0, 0, 0, 1003, 1100, 0, 974, 0,
	0, 0, 424, 420, 0, 429, 435, 434, 440, -2,
	0, 0, 0, 0, -2, 0, 0, 1213, 1207, 1208,
	0, 0, 0, 0, 2568, 1375, 1381, 0, 1476, 1491,
	447, 1382, 1403, 0, 0, 0, 1392, 1388, 1385, 1621,
	0, 0, 0, 0, 0, 1614, 1617, 517, 518, 273,
	0, 0, 0, 0, 0, 298, 0, 0, 0, 1010,
	1014, 0, 2184, 2184, 0, 2139, 0, 0, 0, 0,
	259, 0, 262, 0, 0, 0, 267, 268, 269, 270,
	271, 261, 251, 1590, 0, 0, 627, 0, 0, 777,
	0, 800, 809, 811, 814, 852, 854, 871, 898, 899,
	1031, 0, 1031, 0, 0, 916, 1439, 0, 1514, 1445,
	1496, 1497, 0, 1239, 0, 1755, 1798, 0, 0, -2,
	0, 0, 1802, 0, 0, 0, -2, 0, 0, 0,
	2032, 2034, 0, 2088, 1898, 0, 0, 0, 1902, 1886,
	1887, 0, 2006, 2049, 2078, 2082, 0, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 0, 2128, 2162, 2166, 1979, 1980,
	1984, 2142, 0, 0, 0, 1911, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 1725, 0, 0, 2050, 2061,
	2063, 1840, 1841, 1845, 1846, 1847, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, -2, -2, -2, 1858, 1859, 1860, -2,
	-2, -2, 0, 0, 0, 2064, 2066, 2067, 2071, 2072,
	0, 1962, 1963, 1964, 2073, 0, 1478, 1472, 1533, 0,
	1619, 1537, 0, 1533, 1533, 1485, 1579, 0, 0, 1603,
	0, 1551, 0, 1552, 0, 1584, 0, 1559, 1562, 1563,
	1573, 0, 1565, 0, 1568, 0, 1898, -2, 299, 300,
	302, 0, 305, 306, 0, 0, 583, 584, 582, 566,
	0, 0, 1629, 0, 0, 1705, 1709, 1733, 589, 590,
	588, 479, 488, 217, 0, 1588, 0, 0, 0, 0,
	2214, 1259, 1260, 0, 2585, 1264, 0, 0, 0, 0,
	186, 1051, 1081, 0, 0, 0, 1073, 0, 0, 1087,
	156, 0, 0, 0, 164, 0, 0, 161, 0, 170,
	174, 1038, 0, 0, 0, 0, 1247, 0, 0, 0,
	128, 129, 130, 0, 135, 0, 136, 0, 0, 0,
	0, 0, 0, 0, 0, 1365, 1366, 0, 1360, 0,
	0, 0, 188, 0, 0, 0, 1236, 211, 0, 0,
	0, 0, 0, 1200, 1201, 1272, 1276, 1284, 0, 0,
	0, 229, 227, 0, 230, 0, 233, 234, 0, 229,
	223, 0, 0, 1118, 365, 977, 1088, 0, 1090, 0,
	975, 0, 0, 1089, 416, 0, 423, 0, 437, 0,
	0, 1139, 0, 0, 1162, 1173, 1118, 0, 1212, 1214,
	0, 1222, 0, 0, 0, 1377, 1381, 0, 1370, 1371,
	1510, 1383, 1401, -2, 0, 0, 1491, 1409, 1406, 1412,
	1413, 0, 295, 0, 290, 292, 0, 276, 0, 0,
	1006, 1011, 0, 0, 0, 0, 0, 1394, 1396, 0,
	0, 0, 0, 0, 0, 250, 261, 253, 282, 0,
	771, 795, 862, 900, 1030, 0, 0, 902, 0, 0,
	1513, 1500, 1501, 1498, 1239, 1800, 1804, 0, 0, 0,
	1806, -2, 0, 1828, -2, -2, 2035, 2087, 1877, 1491,
	1899, 1901, 1888, 2081, 1750, 0, 1986, 1983, 0, 1970,
	0, 1923, 1924, 0, 0, 1927, 1929, 1930, 1931, 1689,
	1682, 1681, 2060, 0, 0, 0, 0, 1961, 1473, 0,
	1975, 0, 0, 1541, 1975, 1975, 1580, 0, 1582, 1549,
	1542, 0, 2162, 1575, 1567, 0, 0, 303, 0, 307,
	308, 1623, 1628, 0, 1634, 1704, 218, 150, 151, 1251,
	1252, 1254, 1255, 0, 0, 1261, 1262, 0, 1267, 153,
	0, 1052, 0, 1055, 0, 0, 0, 0, 1062, 1074,
	0, 0, 0, 0, 0, 1075, 0, 1104, 0, 1227,
	1234, 0, -2, 0, 0, 0, 158, 180, 0, 0,
	1293, 0, 0, 185, 185, 0, 0, 1243, 1245, 1270,
	0, 0, 0, 0, 138, 0, 0, 1273, 1277, 1285,
	1280, 1282, 1288, 0, 1367, 0, 0, 1290, 198, 199,
	0, 185, 0, 185, 191, 185, 1236, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 222, 288, 229, 0,
	1025, 0, 1100, 1092, 1093, 1094, 0, 1099, 1101, 0,
	0, 991, 976, 0, 987, 0, 0, 1004, 979, 0,
	421, 438, 0, 441, 0, 444, 965, 1136, 1170, 1118,
	0, 1204, 0, 0, 0, 0, 0, 0, 0, 1379,
	1381, 0, 1372, 1373, 1403, 1509, 0, 0, 0, 1391,
	1510, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 263, 0, 264, 265, 266, 252,
	629, 631, 0, 0, 637, 1029, 0, 0, 0, 0,
	1499, 1808, -2, -2, 1829, 0, 2163, 2165, 1491, 0,
	1972, 1493, 0, 0, -2, 0, 0, 0, 1474, 1457,
	0, 1532, 1524, 1526, 1528, 2459, 2256, 2567, 1458, 1459,
	1602, 0, 1570, 304, 0, 1630, 0, 0, 1256, 1257,
	0, 0, 0, 155, 0, 1056, 1057, 2138, 1059, 0,
	1061, 1063, 1064, 1065, 0, 1068, 2186, 0, 1072, 0,
	1083, 1105, 0, 1114, 0, 1229, 1239, 1233, 0, 1231,
	1116, 0, 157, 159, 179, 1236, 0, 160, 169, 0,
	0, 114, 0, 0, 2250, 141, 139, 137, 1240, 116,
	0, 200, 210, 1235, 212, 195, 185, 0, 1274, 1278,
	1286, 231, 0, 232, 235, 0, 0, 1040, 0, 978,
	1091, 0, 1102, 1103, 981, 0, 980, 0, 0, 0,
	0, 0, 422, 425, 0, 428, 0, 0, 0, 0,
	0, 1215, 1213, 0, 1221, 0, 0, 0, 1359, 0,
	0, 1374, 1375, 445, 1397, 0, 0, 1403, 1414, 275,
	0, 0, 1012, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1013, 1116, 0, 0, 1080, 0, 280, 260,
	0, 633, 0, 635, 0, 901, 903, 0, 0, 1900,
	1990, 0, 0, 1925, 1926, -2, 0, 1866, 1974, 1976,
	0, 0, 0, 0, 0, 1543, 1624, 1249, 0, 1253,
	0, 1263, 1265, 0, 1268, 1054, 1058, 0, 0, 0,
	1122, 0, 0, 1076, 0, 1108, 1109, 1025, 0, 1110,
	1111, 1112, 1228, 1502, 1234, 1025, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 189, 213, 1236, 228,
	245, 0, 1171, 979, 1039, 0, 0, 989, 0, 992,
	0, 988, 985, 986, 977, 0, 426, 427, 442, 0,
	443, 0, 1174, 0, 0, 1222, 0, 0, 1362, 1358,
	1381, 1376, 1377, 1621, 1400, 1404, 0, 0, 1114, 1116,
	1036, 0, 632, 0, 0, 908, 909, 0, 0, 0,
	0, 1985, 1494, 1867, 0, 0, 1527, 1529, 1530, 1531,
	1250, 1258, 1266, 0, 0, 1067, 1127, 0, 0, 0,
	1106, 1107, 1036, 0, 1232, 1230, 1085, 0, 1118, 162,
	0, 1116, 0, 1045, 0, 0, 1048, 0, 0, 142,
	2250, 140, 0, 185, 248, 0, 242, 240, 241, 981,
	0, 0, 1096, 1098, 0, 993, 1025, 991, 439, 1172,
	1205, 1116, 0, 1114, 0, 1369, 1381, 1363, 1364, 0,
	1379, 0, 298, 298, 1025, 1114, 979, 1035, 298, 634,
	636, 1982, 2002, 1991, -2, 2527, 2257, 0, 2002, 2002,
	1977, 1978, 0, 0, 1069, 1123, 1124, 0, 1119, 1120,
	1121, 2185, 1070, 1071, 1104, 0, 0, 1122, 181, 1025,
	1042, 0, 0, 1043, 0, 0, 145, 0, 147, 214,
	236, 0, 0, 973, 0, 1095, 0, 0, 0, 0,
	1040, 981, 1114, 0, 1025, 0, 1355, 1368, 0, 1378,
	1359, 0, 277, 278, 1036, 1025, 1621, 0, 279, 1987,
	0, 0, 1993, 1994, 1995, 1996, 1997, 1988, 1989, 1060,
	0, 1125, 0, 1126, 0, 0, 0, 1621, 1113, 0,
	1127, 167, 1046, 0, 1049, 0, 143, 0, 243, 244,
	970, 972, 0, 1097, 982, 0, 984, 979, 990, 1025,
	0, 1036, 0, 1361, 2147, 1362, 1398, 0, 979, 1036,
	1079, 0, 1999, 2000, 0, 0, 0, 1128, 0, 1131,
	1132, 0, 1129, 1084, 0, 1104, 0, 0, 0, 0,
	983, 981, 1036, 1116, 979, 1114, 1369, 0, 1621, 979,
	1998, 2001, 1992, 1066, 1130, 1133, 1134, 1115, 1086, 0,
	0, 246, 0, 1028, 973, 979, 1114, 1621, 1025, 1356,
	1621, 1077, 1621, 1033, 0, 0, 1024, 1026, 1027, 971,
	1621, 1025, 1218, 1036, 1399, 1078, 1047, 1032, 0, 247,
	1216, 1036, 979, 0, 979, 1621, 0, 1621, 1219, 1033,
	1217, 1050,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 569, 3, 575, 570, 3,
	580, 581, 573, 571, 585, 572, 582, 574, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 588, 3,
	561, 563, 562, 566, 584, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 578, 3, 579, 576, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 586, 568, 587, 564,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 565, 57904, 567,
	57905, 577, 57906, 583, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1298
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1303
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1305
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1308
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1309
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1310
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1311
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1312
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1313
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1325
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1334
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1335
		{
			return helpWith(sqllex, "ALTER")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1338
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1339
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1341
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1342
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1343
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1344
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1345
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1346
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1405
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1431
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1445
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1463
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1467
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1471
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1501
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1507
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1516
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1525
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1534
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1541
		{

			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1566
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1598
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1602
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1606
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1612
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1616
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1622
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1631
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1642
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1646
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1652
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1660
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1670
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1674
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1684
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1695
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1702
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1714
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1721
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1729
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1734
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1738
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1743
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1749
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1757
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1768
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 135:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1778
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 136:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1788
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 137:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1797
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 138:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1808
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 139:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1814
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1822
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1834
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1840
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1845
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1860
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1877
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1892
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1897
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1927
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1948
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1958
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1965
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1968
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1974
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1981
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1989
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1996
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2014
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2026
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2034
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2035
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2049
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2057
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2061
		{
			sqlVAL.union.val = nil
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = nil
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2082
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2086
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2092
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2096
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 188:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2121
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2132
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2152
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2162
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2189
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2193
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2196
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2200
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2207
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2214
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2220
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2224
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2231
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2236
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2243
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2251
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2275
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2282
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2286
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2290
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 220:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2323
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2365
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2373
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 228:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2385
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2396
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2400
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2409
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2417
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2421
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2501
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2512
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2517
		{
			sqlVAL.union.val = nil
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2525
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2529
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2539
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2547
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2551
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2565
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = nil
		}
	case 249:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2619
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2638
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2644
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2652
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2662
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2684
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2688
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2709
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2713
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2717
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2721
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2731
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2768
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2777
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2783
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2788
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2793
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2798
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2803
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2807
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2826
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2830
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2834
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2852
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2856
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2866
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2870
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2874
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2880
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2884
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2894
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2898
		{
			sqlVAL.union.val = nil
		}
	case 299:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2910
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2926
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2930
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2940
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2972
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2973
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2974
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2975
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2993
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2995
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2999
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3002
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3012
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3029
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3035
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3038
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3065
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3067
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3074
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3078
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3082
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3086
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3099
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3105
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3110
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3122
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3124
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3125
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3128
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3129
		{
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3130
		{
			return helpWith(sqllex, "CREATE")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3137
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3143
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3146
		{
			return unimplemented(sqllex, "create access method")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3147
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			return unimplemented(sqllex, "create cast")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3149
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3150
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3151
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3152
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3153
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3155
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3156
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3157
		{
			return unimplemented(sqllex, "create operator")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3158
		{
			return unimplemented(sqllex, "create publication")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3159
		{
			return unimplemented(sqllex, "create rule")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3160
		{
			return unimplemented(sqllex, "create server")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3161
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3162
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3163
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3164
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3167
		{
		}
	case 375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3168
		{
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3171
		{
		}
	case 377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3172
		{
		}
	case 378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3175
		{
		}
	case 379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3176
		{
		}
	case 380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3179
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3180
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3181
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3182
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3183
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3184
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3185
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3186
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3187
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3188
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3189
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3190
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3191
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3192
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3193
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3194
		{
			return unimplemented(sqllex, "drop server")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3195
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3196
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3197
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3200
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3201
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3202
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3203
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3204
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3206
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3207
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3208
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3209
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3219
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3227
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3241
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3245
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3254
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3273
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3277
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3288
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3323
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3343
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3347
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3354
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3358
		{

			sqlVAL.union.val = nil
		}
	case 437:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3386
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3405
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3441
		{
			return helpWith(sqllex, "DELETE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3444
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3445
		{
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3453
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3456
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3457
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3458
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3459
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3460
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3469
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3470
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3471
		{
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3472
		{
			return helpWith(sqllex, "DROP")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3476
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3477
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3478
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3479
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3480
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3481
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3489
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3493
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3506
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3514
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3522
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3526
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3544
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3552
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3561
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3569
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3585
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3592
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3599
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3607
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3614
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3618
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3628
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3637
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3645
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3652
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3667
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3671
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3676
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3689
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3694
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3701
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3728
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3735
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3737
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3745
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3753
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3761
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3769
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3780
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3784
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3787
		{
			return helpWith(sqllex, "DELETE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3789
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3790
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3791
		{
			return helpWith(sqllex, "INSERT")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3794
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3796
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3804
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3805
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3811
		{
			return helpWith(sqllex, "DELETE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3812
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3813
		{
			return helpWith(sqllex, "INSERT")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3824
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3828
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3838
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3846
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3854
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3858
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 569:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3862
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3879
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3887
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 574:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3942
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3946
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3950
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3954
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3958
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3967
		{
			return helpWith(sqllex, "GRANT")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4001
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4005
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4014
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4019
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4023
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4037
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4051
		{
			return helpWith(sqllex, "RESET")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4052
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4064
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4067
		{
			return helpWith(sqllex, "RESET")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4075
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4078
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4092
		{
			return helpWith(sqllex, "USE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4096
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4097
		{
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4098
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4099
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4103
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4104
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4105
		{
			return helpWith(sqllex, "USE")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4121
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4157
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4165
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4179
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4183
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4189
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4193
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4197
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4201
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4205
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4216
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4219
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4229
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4249
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 645:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4254
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4273
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4276
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4281
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4285
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4304
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4311
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4316
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4321
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4326
		{
			return unimplemented(sqllex, "set from current")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4327
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4335
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4340
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4351
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4361
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4368
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4389
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4403
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4407
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4415
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = tree.Low
		}
	case 677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4425
		{
			sqlVAL.union.val = tree.Normal
		}
	case 678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = tree.High
		}
	case 679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4444
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4472
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4473
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4474
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4475
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4476
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4477
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4478
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4479
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4481
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4482
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4483
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4484
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4485
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4487
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4488
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4489
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4491
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4493
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4494
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4495
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4496
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4497
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4498
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4499
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4500
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4501
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4502
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4503
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4504
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4505
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4507
		{
			return helpWith(sqllex, "SHOW")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4513
		{
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4514
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4517
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4521
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4526
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4531
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4536
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4541
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4553
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.str = "client_encoding"
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.str = "timezone"
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4568
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4586
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4601
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4623
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4631
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4640
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4649
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4658
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4666
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4680
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4683
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4685
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4688
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4690
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4694
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4697
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4708
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4720
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4724
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4731
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4742
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4763
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4772
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4779
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4782
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4795
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4803
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4811
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4814
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4820
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4827
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4829
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4833
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4836
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4844
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4847
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4849
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4852
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4863
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4868
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4872
		{
			sqlVAL.union.val = true
		}
	case 825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = true
		}
	case 826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4876
		{
			sqlVAL.union.val = false
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4893
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4900
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4903
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4907
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4911
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4914
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4916
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4924
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4932
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4948
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4950
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4956
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4964
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4972
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4978
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4982
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4996
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4998
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5001
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5003
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5007
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5010
		{
			sqlVAL.union.val = true
		}
	case 857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5011
		{
			sqlVAL.union.val = false
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5019
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5027
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5035
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5045
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5055
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5058
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5065
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5068
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5070
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5073
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5076
		{
			sqlVAL.union.val = true
		}
	case 871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = false
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5084
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5091
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5098
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5102
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5105
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5112
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5116
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5120
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5133
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5141
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5146
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5151
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5155
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5165
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5169
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5174
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5177
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5190
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5193
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5201
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5204
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5208
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5212
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5216
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5224
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5239
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5256
		{
		}
	case 908:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5265
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5279
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5288
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5293
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5300
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5313
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5347
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5354
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5359
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5369
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5376
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5381
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5509
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5552
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5557
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5561
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5569
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5582
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5593
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5610
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5611
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5612
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5622
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5623
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5624
		{
			return helpWith(sqllex, "RESUME")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5642
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5651
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5660
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5683
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5685
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5691
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5699
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5705
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5712
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5719
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5726
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5746
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5754
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5793
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5809
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5838
		{

			sqlVAL.union.val = nil
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5844
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5850
		{
			sqlVAL.str = ""
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5854
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.union.val = nil
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5869
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5877
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5881
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5897
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 989:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5907
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5921
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5936
		{
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5937
		{
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5938
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 996:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5963
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5965
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5977
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5981
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5987
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5993
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6015
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6019
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6025
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6030
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6032
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6033
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6036
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6037
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6043
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6059
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6064
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.str = ""
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6089
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6095
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6150
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6183
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6207
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6222
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6244
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6274
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6278
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6282
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6292
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6299
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6303
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6307
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6317
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6321
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = true
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = false
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6342
		{
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6343
		{
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6389
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6419
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6444
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6455
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6472
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6482
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6493
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6497
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6547
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6562
		{
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6563
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6564
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6565
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6566
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6567
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6601
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6607
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6611
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6635
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6639
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6704
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6723
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6732
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6740
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6751
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6756
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6766
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6769
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6771
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6773
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6776
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6778
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6779
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6781
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6791
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6794
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6812
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6819
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6831
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6834
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = true
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6844
		{

			sqlVAL.union.val = true
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = false
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6859
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6873
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6885
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6897
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6907
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6917
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6921
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6925
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6941
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6949
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6953
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6961
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = nil
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7018
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7027
		{
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7028
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7053
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7055
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7057
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7059
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7061
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7063
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7067
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7071
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7101
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7119
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7138
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7155
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7172
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7176
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7191
		{
			sqlVAL.union.val = false
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = true
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = false
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.union.val = true
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = false
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7217
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7230
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7236
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7242
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7250
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.str = ""
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.str = ""
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7309
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7315
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[7].str),
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7438
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7562
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7571
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7617
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7623
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7635
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7641
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7655
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7661
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7669
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7678
		{
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7679
		{
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7682
		{
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7683
		{
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7694
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7712
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7714
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7721
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7742
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7750
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7771
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7773
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7779
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7790
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7794
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7795
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7796
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7815
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7817
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7820
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7830
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7833
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7838
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7847
		{
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7848
		{
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7849
		{
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7866
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7869
		{
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7870
		{
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7898
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7911
		{
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7913
		{
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7917
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8004
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.str = ""
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8014
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8030
		{

		}
	case 1365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8045
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8064
		{
			sqlVAL.str = ""
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.str = ""
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.str = ""
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.str = ""
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8100
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8113
		{
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8114
		{
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8143
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8161
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8165
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8174
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8189
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8223
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8234
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8250
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8254
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8292
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8304
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8308
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8324
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8345
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8360
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8401
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8487
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8497
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8504
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8539
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8540
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8541
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8602
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8646
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8662
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8667
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8677
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = true
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = false
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8693
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8715
		{
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8716
		{
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8720
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8724
		{
			sqlVAL.union.val = nil
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8729
		{
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8730
		{
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.union.val = true
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8738
		{
			sqlVAL.union.val = false
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = false
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = true
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8759
		{
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8760
		{
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8763
		{
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8764
		{
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8768
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8784
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8788
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8795
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8805
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8826
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8831
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8860
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8869
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8893
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8948
		{
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8949
		{
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8952
		{
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8953
		{
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8987
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8988
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8989
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9016
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9019
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9021
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9033
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9036
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9058
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9063
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9068
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9079
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9086
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9091
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9110
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9149
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9159
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9194
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9205
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9229
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9235
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9268
		{
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9270
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = nil
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9274
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = true
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = false
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9317
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.str = tree.AstFull
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.str = tree.AstRight
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.str = tree.AstInner
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9387
		{
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9388
		{
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.str = tree.AstHash
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.str = ""
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9457
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9462
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9480
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9486
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9492
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9502
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = true
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = false
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = true
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = false
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9551
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9564
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9572
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9573
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9591
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9593
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9601
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9614
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9621
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9630
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9670
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9682
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9683
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9687
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9688
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9689
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9691
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9692
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9693
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9695
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9696
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9697
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9699
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9700
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9701
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9703
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9704
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9705
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9707
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9708
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9709
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9711
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9712
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9713
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9715
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9716
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9717
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = types.Geography
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9732
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9740
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9766
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9774
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = nil
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = types.Int2
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = types.Int
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = types.Float4
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = types.Float
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9817
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9825
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9833
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = types.Bool
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9847
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9860
		{
			sqlVAL.union.val = types.Float
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9866
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9872
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9880
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9884
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9894
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = types.String
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = true
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = false
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = types.Date
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9943
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9951
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9965
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9974
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9982
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9999
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = true
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = false
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = false
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = types.Interval
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10023
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10034
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10042
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10107
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10122
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = nil
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10152
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10212
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10464
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10530
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10552
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10564
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10588
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10664
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10738
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10746
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10751
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10757
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10765
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10777
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10786
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10797
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10801
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10831
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10842
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10843
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10855
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10858
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10867
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10933
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11004
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11058
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11063
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11072
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11081
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11090
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11092
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11099
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11104
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11109
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11114
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11119
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11128
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11129
		{
			return unimplemented(sqllex, "treat")
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11150
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11155
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11202
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.str = ""
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11251
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11291
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11304
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11372
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11377
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11394
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11401
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = tree.Any
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11417
		{
			sqlVAL.union.val = tree.Some
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11421
		{
			sqlVAL.union.val = tree.All
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11427
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11429
		{
			sqlVAL.union.val = tree.Div
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11430
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11431
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11435
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = tree.LT
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = tree.GT
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = tree.LE
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = tree.GE
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11441
		{
			sqlVAL.union.val = tree.NE
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = tree.Like
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11447
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11475
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11514
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11521
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11531
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11541
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11557
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11561
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11571
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11594
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11602
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11619
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11636
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11640
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11652
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11658
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11670
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11684
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11719
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11730
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11753
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11762
		{
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11763
		{
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11771
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11777
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11790
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11835
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11843
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11866
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11875
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11887
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11916
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11928
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11932
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11941
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11952
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11961
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11969
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11981
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12062
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12070
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12074
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12092
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12117
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12124
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12128
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12132
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12194
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12207
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12214
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12239
		{
			sqlVAL.str = ""
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12249
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
