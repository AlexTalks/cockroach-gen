// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:73

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}

//line sql-gen.y:677
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11696

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1321,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	223, 199,
	451, 199,
	-2, 0,
	-1, 79,
	212, 1124,
	225, 1124,
	241, 337,
	342, 337,
	351, 912,
	383, 337,
	395, 912,
	436, 912,
	461, 337,
	486, 912,
	-2, 0,
	-1, 85,
	241, 341,
	-2, 0,
	-1, 86,
	126, 1321,
	218, 1321,
	471, 1321,
	472, 1321,
	-2, 0,
	-1, 102,
	143, 1292,
	161, 1292,
	174, 1292,
	221, 1292,
	254, 1292,
	301, 1292,
	311, 1292,
	466, 1292,
	-2, 1263,
	-1, 136,
	151, 797,
	240, 797,
	345, 766,
	400, 766,
	454, 797,
	-2, 0,
	-1, 138,
	4, 1323,
	21, 1323,
	22, 1323,
	23, 1323,
	24, 1323,
	25, 1323,
	26, 1323,
	28, 1323,
	29, 1323,
	35, 1323,
	40, 1323,
	41, 1323,
	42, 1323,
	43, 1323,
	44, 1323,
	45, 1323,
	46, 1323,
	47, 1323,
	48, 1323,
	49, 1323,
	51, 1323,
	52, 1323,
	53, 1323,
	54, 1323,
	56, 1323,
	57, 1323,
	58, 1323,
	59, 1323,
	60, 1323,
	61, 1323,
	65, 1323,
	66, 1323,
	67, 1323,
	68, 1323,
	70, 1323,
	71, 1323,
	72, 1323,
	76, 1323,
	77, 1323,
	78, 1323,
	79, 1323,
	80, 1323,
	81, 1323,
	82, 1323,
	85, 1323,
	86, 1323,
	87, 1323,
	88, 1323,
	90, 1323,
	92, 1323,
	93, 1323,
	94, 1323,
	95, 1323,
	96, 1323,
	97, 1323,
	99, 1323,
	100, 1323,
	101, 1323,
	103, 1323,
	104, 1323,
	112, 1323,
	113, 1323,
	114, 1323,
	115, 1323,
	117, 1323,
	118, 1323,
	119, 1323,
	121, 1323,
	122, 1323,
	123, 1323,
	125, 1323,
	126, 1323,
	128, 1323,
	129, 1323,
	130, 1323,
	133, 1323,
	134, 1323,
	135, 1323,
	137, 1323,
	138, 1323,
	140, 1323,
	141, 1323,
	142, 1323,
	144, 1323,
	145, 1323,
	146, 1323,
	147, 1323,
	148, 1323,
	149, 1323,
	150, 1323,
	151, 1323,
	152, 1323,
	153, 1323,
	154, 1323,
	155, 1323,
	156, 1323,
	157, 1323,
	158, 1323,
	160, 1323,
	166, 1323,
	167, 1323,
	168, 1323,
	169, 1323,
	173, 1323,
	175, 1323,
	179, 1323,
	180, 1323,
	181, 1323,
	182, 1323,
	183, 1323,
	184, 1323,
	186, 1323,
	187, 1323,
	189, 1323,
	190, 1323,
	192, 1323,
	193, 1323,
	194, 1323,
	195, 1323,
	196, 1323,
	197, 1323,
	198, 1323,
	199, 1323,
	200, 1323,
	202, 1323,
	203, 1323,
	205, 1323,
	206, 1323,
	207, 1323,
	208, 1323,
	212, 1323,
	213, 1323,
	214, 1323,
	215, 1323,
	218, 1323,
	219, 1323,
	220, 1323,
	222, 1323,
	224, 1323,
	225, 1323,
	227, 1323,
	229, 1323,
	230, 1323,
	231, 1323,
	233, 1323,
	237, 1323,
	238, 1323,
	239, 1323,
	240, 1323,
	241, 1323,
	242, 1323,
	244, 1323,
	245, 1323,
	246, 1323,
	248, 1323,
	249, 1323,
	251, 1323,
	252, 1323,
	255, 1323,
	256, 1323,
	257, 1323,
	260, 1323,
	261, 1323,
	262, 1323,
	263, 1323,
	265, 1323,
	266, 1323,
	267, 1323,
	268, 1323,
	269, 1323,
	270, 1323,
	271, 1323,
	272, 1323,
	273, 1323,
	274, 1323,
	275, 1323,
	277, 1323,
	279, 1323,
	280, 1323,
	281, 1323,
	282, 1323,
	283, 1323,
	284, 1323,
	285, 1323,
	286, 1323,
	287, 1323,
	288, 1323,
	290, 1323,
	292, 1323,
	294, 1323,
	296, 1323,
	297, 1323,
	298, 1323,
	299, 1323,
	300, 1323,
	303, 1323,
	306, 1323,
	307, 1323,
	308, 1323,
	309, 1323,
	312, 1323,
	313, 1323,
	314, 1323,
	316, 1323,
	318, 1323,
	319, 1323,
	320, 1323,
	321, 1323,
	322, 1323,
	323, 1323,
	324, 1323,
	325, 1323,
	326, 1323,
	327, 1323,
	328, 1323,
	329, 1323,
	331, 1323,
	332, 1323,
	333, 1323,
	334, 1323,
	335, 1323,
	336, 1323,
	337, 1323,
	338, 1323,
	339, 1323,
	341, 1323,
	343, 1323,
	344, 1323,
	345, 1323,
	346, 1323,
	347, 1323,
	348, 1323,
	349, 1323,
	350, 1323,
	351, 1323,
	352, 1323,
	353, 1323,
	355, 1323,
	361, 1323,
	363, 1323,
	364, 1323,
	365, 1323,
	366, 1323,
	367, 1323,
	368, 1323,
	369, 1323,
	370, 1323,
	372, 1323,
	373, 1323,
	374, 1323,
	376, 1323,
	377, 1323,
	378, 1323,
	379, 1323,
	380, 1323,
	381, 1323,
	383, 1323,
	384, 1323,
	385, 1323,
	386, 1323,
	387, 1323,
	388, 1323,
	389, 1323,
	390, 1323,
	391, 1323,
	392, 1323,
	393, 1323,
	395, 1323,
	396, 1323,
	397, 1323,
	398, 1323,
	399, 1323,
	400, 1323,
	402, 1323,
	403, 1323,
	404, 1323,
	405, 1323,
	406, 1323,
	408, 1323,
	409, 1323,
	410, 1323,
	411, 1323,
	412, 1323,
	413, 1323,
	414, 1323,
	416, 1323,
	418, 1323,
	419, 1323,
	420, 1323,
	421, 1323,
	422, 1323,
	423, 1323,
	424, 1323,
	425, 1323,
	426, 1323,
	427, 1323,
	428, 1323,
	429, 1323,
	430, 1323,
	432, 1323,
	433, 1323,
	435, 1323,
	437, 1323,
	438, 1323,
	439, 1323,
	440, 1323,
	441, 1323,
	442, 1323,
	443, 1323,
	444, 1323,
	446, 1323,
	447, 1323,
	448, 1323,
	449, 1323,
	450, 1323,
	452, 1323,
	454, 1323,
	455, 1323,
	456, 1323,
	457, 1323,
	458, 1323,
	460, 1323,
	461, 1323,
	462, 1323,
	464, 1323,
	465, 1323,
	468, 1323,
	469, 1323,
	470, 1323,
	471, 1323,
	472, 1323,
	473, 1323,
	474, 1323,
	476, 1323,
	479, 1323,
	480, 1323,
	481, 1323,
	482, 1323,
	483, 1323,
	484, 1323,
	486, 1323,
	487, 1323,
	488, 1323,
	493, 1323,
	494, 1323,
	495, 1323,
	496, 1323,
	497, 1323,
	498, 1323,
	-2, 0,
	-1, 139,
	1, 1197,
	229, 1197,
	341, 1197,
	349, 1197,
	501, 1197,
	525, 1197,
	-2, 0,
	-1, 141,
	1, 1197,
	525, 1197,
	-2, 0,
	-1, 142,
	1, 1197,
	525, 1197,
	-2, 0,
	-1, 143,
	1, 1197,
	451, 1197,
	525, 1197,
	-2, 0,
	-1, 172,
	143, 1291,
	161, 1291,
	174, 1291,
	221, 1291,
	254, 1291,
	301, 1291,
	311, 1291,
	466, 1291,
	-2, 1266,
	-1, 210,
	4, 1330,
	5, 1330,
	6, 1330,
	7, 1330,
	8, 1330,
	9, 1330,
	10, 1330,
	21, 1330,
	22, 1330,
	23, 1330,
	24, 1330,
	25, 1330,
	26, 1330,
	28, 1330,
	29, 1330,
	35, 1330,
	36, 1330,
	40, 1330,
	41, 1330,
	42, 1330,
	43, 1330,
	44, 1330,
	45, 1330,
	46, 1330,
	47, 1330,
	48, 1330,
	49, 1330,
	51, 1330,
	52, 1330,
	53, 1330,
	54, 1330,
	56, 1330,
	57, 1330,
	58, 1330,
	59, 1330,
	60, 1330,
	61, 1330,
	62, 1330,
	63, 1330,
	64, 1330,
	65, 1330,
	66, 1330,
	67, 1330,
	68, 1330,
	70, 1330,
	71, 1330,
	72, 1330,
	74, 1330,
	76, 1330,
	77, 1330,
	78, 1330,
	79, 1330,
	80, 1330,
	81, 1330,
	82, 1330,
	85, 1330,
	86, 1330,
	87, 1330,
	88, 1330,
	90, 1330,
	92, 1330,
	93, 1330,
	94, 1330,
	95, 1330,
	96, 1330,
	97, 1330,
	99, 1330,
	100, 1330,
	101, 1330,
	102, 1330,
	103, 1330,
	104, 1330,
	105, 1330,
	106, 1330,
	107, 1330,
	108, 1330,
	109, 1330,
	110, 1330,
	111, 1330,
	112, 1330,
	113, 1330,
	114, 1330,
	115, 1330,
	116, 1330,
	117, 1330,
	118, 1330,
	119, 1330,
	120, 1330,
	121, 1330,
	122, 1330,
	123, 1330,
	125, 1330,
	126, 1330,
	128, 1330,
	129, 1330,
	130, 1330,
	133, 1330,
	134, 1330,
	135, 1330,
	137, 1330,
	138, 1330,
	140, 1330,
	141, 1330,
	142, 1330,
	144, 1330,
	145, 1330,
	146, 1330,
	147, 1330,
	148, 1330,
	149, 1330,
	150, 1330,
	151, 1330,
	152, 1330,
	153, 1330,
	154, 1330,
	155, 1330,
	156, 1330,
	157, 1330,
	158, 1330,
	159, 1330,
	160, 1330,
	166, 1330,
	167, 1330,
	168, 1330,
	169, 1330,
	173, 1330,
	175, 1330,
	178, 1330,
	179, 1330,
	180, 1330,
	181, 1330,
	182, 1330,
	183, 1330,
	184, 1330,
	186, 1330,
	187, 1330,
	189, 1330,
	190, 1330,
	192, 1330,
	193, 1330,
	194, 1330,
	195, 1330,
	196, 1330,
	197, 1330,
	198, 1330,
	199, 1330,
	200, 1330,
	201, 1330,
	202, 1330,
	203, 1330,
	205, 1330,
	206, 1330,
	207, 1330,
	208, 1330,
	212, 1330,
	213, 1330,
	214, 1330,
	215, 1330,
	217, 1330,
	218, 1330,
	219, 1330,
	220, 1330,
	222, 1330,
	224, 1330,
	225, 1330,
	226, 1330,
	227, 1330,
	228, 1330,
	229, 1330,
	230, 1330,
	231, 1330,
	232, 1330,
	233, 1330,
	237, 1330,
	238, 1330,
	239, 1330,
	240, 1330,
	241, 1330,
	242, 1330,
	244, 1330,
	245, 1330,
	246, 1330,
	248, 1330,
	249, 1330,
	250, 1330,
	251, 1330,
	252, 1330,
	253, 1330,
	255, 1330,
	256, 1330,
	257, 1330,
	258, 1330,
	259, 1330,
	260, 1330,
	261, 1330,
	262, 1330,
	263, 1330,
	265, 1330,
	266, 1330,
	267, 1330,
	268, 1330,
	269, 1330,
	270, 1330,
	271, 1330,
	272, 1330,
	273, 1330,
	274, 1330,
	275, 1330,
	277, 1330,
	278, 1330,
	279, 1330,
	280, 1330,
	281, 1330,
	282, 1330,
	283, 1330,
	284, 1330,
	285, 1330,
	286, 1330,
	287, 1330,
	288, 1330,
	289, 1330,
	290, 1330,
	291, 1330,
	292, 1330,
	293, 1330,
	294, 1330,
	295, 1330,
	296, 1330,
	297, 1330,
	298, 1330,
	299, 1330,
	300, 1330,
	303, 1330,
	307, 1330,
	308, 1330,
	309, 1330,
	312, 1330,
	313, 1330,
	314, 1330,
	315, 1330,
	316, 1330,
	317, 1330,
	318, 1330,
	319, 1330,
	320, 1330,
	321, 1330,
	322, 1330,
	323, 1330,
	324, 1330,
	325, 1330,
	326, 1330,
	327, 1330,
	328, 1330,
	329, 1330,
	331, 1330,
	332, 1330,
	333, 1330,
	334, 1330,
	335, 1330,
	336, 1330,
	337, 1330,
	338, 1330,
	339, 1330,
	341, 1330,
	343, 1330,
	344, 1330,
	345, 1330,
	346, 1330,
	347, 1330,
	348, 1330,
	349, 1330,
	350, 1330,
	351, 1330,
	352, 1330,
	353, 1330,
	355, 1330,
	361, 1330,
	363, 1330,
	364, 1330,
	365, 1330,
	366, 1330,
	367, 1330,
	368, 1330,
	369, 1330,
	370, 1330,
	372, 1330,
	373, 1330,
	374, 1330,
	375, 1330,
	376, 1330,
	377, 1330,
	378, 1330,
	379, 1330,
	380, 1330,
	381, 1330,
	383, 1330,
	384, 1330,
	385, 1330,
	386, 1330,
	387, 1330,
	388, 1330,
	389, 1330,
	390, 1330,
	391, 1330,
	392, 1330,
	393, 1330,
	395, 1330,
	396, 1330,
	397, 1330,
	398, 1330,
	399, 1330,
	400, 1330,
	401, 1330,
	402, 1330,
	403, 1330,
	404, 1330,
	405, 1330,
	406, 1330,
	407, 1330,
	408, 1330,
	409, 1330,
	410, 1330,
	411, 1330,
	412, 1330,
	413, 1330,
	414, 1330,
	416, 1330,
	418, 1330,
	419, 1330,
	420, 1330,
	421, 1330,
	422, 1330,
	423, 1330,
	424, 1330,
	425, 1330,
	426, 1330,
	427, 1330,
	428, 1330,
	429, 1330,
	430, 1330,
	432, 1330,
	433, 1330,
	434, 1330,
	435, 1330,
	437, 1330,
	438, 1330,
	439, 1330,
	440, 1330,
	441, 1330,
	442, 1330,
	443, 1330,
	444, 1330,
	446, 1330,
	447, 1330,
	448, 1330,
	449, 1330,
	450, 1330,
	452, 1330,
	454, 1330,
	455, 1330,
	456, 1330,
	457, 1330,
	458, 1330,
	459, 1330,
	460, 1330,
	461, 1330,
	462, 1330,
	464, 1330,
	465, 1330,
	467, 1330,
	468, 1330,
	469, 1330,
	470, 1330,
	471, 1330,
	472, 1330,
	473, 1330,
	474, 1330,
	475, 1330,
	476, 1330,
	479, 1330,
	480, 1330,
	481, 1330,
	482, 1330,
	483, 1330,
	484, 1330,
	486, 1330,
	487, 1330,
	488, 1330,
	493, 1330,
	494, 1330,
	495, 1330,
	496, 1330,
	497, 1330,
	498, 1330,
	499, 1330,
	506, 1330,
	513, 1330,
	514, 1330,
	515, 1330,
	522, 1330,
	526, 1330,
	-2, 0,
	-1, 634,
	177, 2039,
	451, 2039,
	505, 2039,
	524, 2039,
	-2, 0,
	-1, 635,
	177, 2131,
	451, 2131,
	505, 2131,
	524, 2131,
	-2, 0,
	-1, 636,
	177, 2027,
	451, 2027,
	505, 2027,
	524, 2027,
	-2, 0,
	-1, 638,
	177, 2234,
	451, 2234,
	505, 2234,
	524, 2234,
	-2, 0,
	-1, 640,
	177, 2268,
	451, 2268,
	505, 2268,
	524, 2268,
	-2, 0,
	-1, 647,
	177, 2146,
	451, 2146,
	505, 2146,
	524, 2146,
	-2, 614,
	-1, 678,
	524, 1978,
	527, 1978,
	-2, 851,
	-1, 679,
	524, 1980,
	527, 1980,
	-2, 852,
	-1, 680,
	524, 1979,
	527, 1979,
	-2, 853,
	-1, 681,
	527, 1913,
	-2, 854,
	-1, 703,
	174, 213,
	-2, 0,
	-1, 725,
	486, 1101,
	-2, 913,
	-1, 765,
	4, 1122,
	21, 1122,
	22, 1122,
	23, 1122,
	24, 1122,
	25, 1122,
	26, 1122,
	28, 1122,
	29, 1122,
	35, 1122,
	40, 1122,
	41, 1122,
	42, 1122,
	43, 1122,
	44, 1122,
	45, 1122,
	46, 1122,
	47, 1122,
	48, 1122,
	49, 1122,
	51, 1122,
	52, 1122,
	53, 1122,
	54, 1122,
	56, 1122,
	57, 1122,
	58, 1122,
	59, 1122,
	60, 1122,
	61, 1122,
	65, 1122,
	66, 1122,
	67, 1122,
	68, 1122,
	70, 1122,
	71, 1122,
	72, 1122,
	76, 1122,
	77, 1122,
	78, 1122,
	79, 1122,
	80, 1122,
	81, 1122,
	82, 1122,
	85, 1122,
	86, 1122,
	87, 1122,
	88, 1122,
	90, 1122,
	92, 1122,
	93, 1122,
	94, 1122,
	95, 1122,
	96, 1122,
	97, 1122,
	99, 1122,
	100, 1122,
	101, 1122,
	103, 1122,
	104, 1122,
	112, 1122,
	113, 1122,
	114, 1122,
	115, 1122,
	117, 1122,
	118, 1122,
	119, 1122,
	121, 1122,
	122, 1122,
	123, 1122,
	125, 1122,
	126, 1122,
	128, 1122,
	129, 1122,
	130, 1122,
	133, 1122,
	134, 1122,
	135, 1122,
	137, 1122,
	138, 1122,
	140, 1122,
	141, 1122,
	142, 1122,
	144, 1122,
	145, 1122,
	146, 1122,
	147, 1122,
	148, 1122,
	149, 1122,
	150, 1122,
	151, 1122,
	152, 1122,
	153, 1122,
	154, 1122,
	155, 1122,
	156, 1122,
	157, 1122,
	158, 1122,
	160, 1122,
	166, 1122,
	167, 1122,
	168, 1122,
	169, 1122,
	173, 1122,
	175, 1122,
	179, 1122,
	180, 1122,
	181, 1122,
	182, 1122,
	183, 1122,
	184, 1122,
	186, 1122,
	187, 1122,
	189, 1122,
	190, 1122,
	192, 1122,
	193, 1122,
	194, 1122,
	195, 1122,
	196, 1122,
	197, 1122,
	198, 1122,
	199, 1122,
	200, 1122,
	202, 1122,
	203, 1122,
	205, 1122,
	206, 1122,
	207, 1122,
	208, 1122,
	212, 1122,
	213, 1122,
	214, 1122,
	215, 1122,
	218, 1122,
	219, 1122,
	220, 1122,
	222, 1122,
	224, 1122,
	225, 1122,
	227, 1122,
	229, 1122,
	230, 1122,
	231, 1122,
	233, 1122,
	237, 1122,
	238, 1122,
	239, 1122,
	240, 1122,
	241, 1122,
	242, 1122,
	244, 1122,
	245, 1122,
	246, 1122,
	248, 1122,
	249, 1122,
	251, 1122,
	252, 1122,
	255, 1122,
	256, 1122,
	257, 1122,
	260, 1122,
	261, 1122,
	262, 1122,
	263, 1122,
	265, 1122,
	266, 1122,
	267, 1122,
	268, 1122,
	269, 1122,
	270, 1122,
	271, 1122,
	272, 1122,
	273, 1122,
	274, 1122,
	275, 1122,
	277, 1122,
	279, 1122,
	280, 1122,
	281, 1122,
	282, 1122,
	283, 1122,
	284, 1122,
	285, 1122,
	286, 1122,
	287, 1122,
	288, 1122,
	290, 1122,
	292, 1122,
	294, 1122,
	296, 1122,
	297, 1122,
	298, 1122,
	299, 1122,
	300, 1122,
	303, 1122,
	307, 1122,
	308, 1122,
	309, 1122,
	312, 1122,
	313, 1122,
	314, 1122,
	316, 1122,
	318, 1122,
	319, 1122,
	320, 1122,
	321, 1122,
	322, 1122,
	323, 1122,
	324, 1122,
	325, 1122,
	326, 1122,
	327, 1122,
	328, 1122,
	329, 1122,
	331, 1122,
	332, 1122,
	333, 1122,
	334, 1122,
	335, 1122,
	336, 1122,
	337, 1122,
	338, 1122,
	339, 1122,
	341, 1122,
	343, 1122,
	344, 1122,
	345, 1122,
	346, 1122,
	347, 1122,
	348, 1122,
	349, 1122,
	350, 1122,
	351, 1122,
	352, 1122,
	353, 1122,
	355, 1122,
	361, 1122,
	363, 1122,
	364, 1122,
	365, 1122,
	366, 1122,
	367, 1122,
	368, 1122,
	369, 1122,
	370, 1122,
	372, 1122,
	373, 1122,
	374, 1122,
	376, 1122,
	377, 1122,
	378, 1122,
	379, 1122,
	380, 1122,
	381, 1122,
	383, 1122,
	384, 1122,
	385, 1122,
	386, 1122,
	387, 1122,
	388, 1122,
	389, 1122,
	390, 1122,
	391, 1122,
	392, 1122,
	393, 1122,
	395, 1122,
	396, 1122,
	397, 1122,
	398, 1122,
	399, 1122,
	400, 1122,
	402, 1122,
	403, 1122,
	404, 1122,
	405, 1122,
	406, 1122,
	408, 1122,
	409, 1122,
	410, 1122,
	411, 1122,
	412, 1122,
	413, 1122,
	414, 1122,
	416, 1122,
	418, 1122,
	419, 1122,
	420, 1122,
	421, 1122,
	422, 1122,
	423, 1122,
	424, 1122,
	425, 1122,
	426, 1122,
	427, 1122,
	428, 1122,
	429, 1122,
	430, 1122,
	432, 1122,
	433, 1122,
	435, 1122,
	437, 1122,
	438, 1122,
	439, 1122,
	440, 1122,
	441, 1122,
	442, 1122,
	443, 1122,
	444, 1122,
	446, 1122,
	447, 1122,
	448, 1122,
	449, 1122,
	450, 1122,
	452, 1122,
	454, 1122,
	455, 1122,
	456, 1122,
	457, 1122,
	458, 1122,
	460, 1122,
	461, 1122,
	462, 1122,
	464, 1122,
	465, 1122,
	468, 1122,
	469, 1122,
	470, 1122,
	471, 1122,
	472, 1122,
	473, 1122,
	474, 1122,
	476, 1122,
	479, 1122,
	480, 1122,
	481, 1122,
	482, 1122,
	483, 1122,
	484, 1122,
	486, 1122,
	487, 1122,
	488, 1122,
	493, 1122,
	494, 1122,
	495, 1122,
	496, 1122,
	497, 1122,
	498, 1122,
	-2, 0,
	-1, 844,
	345, 767,
	400, 767,
	-2, 0,
	-1, 845,
	345, 766,
	400, 766,
	-2, 710,
	-1, 849,
	1, 807,
	521, 807,
	523, 807,
	525, 807,
	-2, 0,
	-1, 850,
	1, 745,
	521, 745,
	523, 745,
	525, 745,
	-2, 0,
	-1, 851,
	1, 850,
	174, 850,
	521, 850,
	523, 850,
	525, 850,
	-2, 0,
	-1, 859,
	1, 770,
	521, 770,
	523, 770,
	525, 770,
	-2, 0,
	-1, 865,
	1, 807,
	521, 807,
	523, 807,
	525, 807,
	-2, 0,
	-1, 866,
	1, 809,
	521, 809,
	523, 809,
	525, 809,
	-2, 0,
	-1, 867,
	1, 812,
	521, 812,
	523, 812,
	525, 812,
	-2, 0,
	-1, 873,
	1, 829,
	521, 829,
	523, 829,
	525, 829,
	-2, 0,
	-1, 874,
	1, 831,
	521, 831,
	523, 831,
	525, 831,
	-2, 0,
	-1, 923,
	161, 1332,
	174, 1332,
	254, 1332,
	301, 1332,
	-2, 1270,
	-1, 938,
	161, 1331,
	174, 1331,
	254, 1331,
	301, 1331,
	-2, 1267,
	-1, 964,
	524, 1977,
	-2, 622,
	-1, 992,
	5, 1969,
	522, 1967,
	-2, 1958,
	-1, 1000,
	5, 1990,
	522, 1987,
	-2, 1978,
	-1, 1001,
	5, 1991,
	522, 1988,
	-2, 1979,
	-1, 1009,
	524, 1975,
	-2, 1957,
	-1, 1010,
	522, 2347,
	-2, 1976,
	-1, 1033,
	522, 2346,
	-2, 1992,
	-1, 1034,
	5, 1497,
	-2, 2317,
	-1, 1035,
	5, 1498,
	-2, 2318,
	-1, 1036,
	5, 1499,
	-2, 2332,
	-1, 1037,
	5, 1500,
	-2, 2296,
	-1, 1038,
	5, 1501,
	-2, 2330,
	-1, 1039,
	5, 1509,
	-2, 2309,
	-1, 1040,
	5, 1496,
	-2, 2305,
	-1, 1041,
	5, 1496,
	-2, 2304,
	-1, 1042,
	5, 1496,
	-2, 2323,
	-1, 1043,
	5, 1507,
	-2, 2298,
	-1, 1044,
	5, 1512,
	-2, 2297,
	-1, 1045,
	5, 1514,
	-2, 2342,
	-1, 1048,
	5, 1536,
	-2, 2335,
	-1, 1049,
	5, 1528,
	-2, 2336,
	-1, 1050,
	5, 1536,
	-2, 2337,
	-1, 1051,
	5, 1532,
	-2, 2338,
	-1, 1052,
	5, 1482,
	-2, 2310,
	-1, 1053,
	5, 1483,
	-2, 2311,
	-1, 1054,
	5, 1484,
	-2, 2299,
	-1, 1081,
	5, 1519,
	-2, 2343,
	-1, 1082,
	5, 1520,
	-2, 2333,
	-1, 1083,
	5, 1521,
	487, 1521,
	-2, 2300,
	-1, 1084,
	5, 1522,
	487, 1522,
	-2, 2301,
	-1, 1121,
	522, 1987,
	-2, 1978,
	-1, 1122,
	522, 1988,
	-2, 1979,
	-1, 1152,
	177, 2268,
	451, 2268,
	505, 2268,
	524, 2268,
	-2, 0,
	-1, 1155,
	1, 600,
	525, 600,
	-2, 1205,
	-1, 1280,
	363, 1953,
	402, 1953,
	515, 1953,
	-2, 1951,
	-1, 1292,
	526, 1953,
	-2, 1954,
	-1, 1299,
	1, 1098,
	521, 1098,
	523, 1098,
	525, 1098,
	-2, 1319,
	-1, 1353,
	351, 912,
	486, 912,
	-2, 336,
	-1, 1374,
	1, 1098,
	521, 1098,
	523, 1098,
	525, 1098,
	-2, 1319,
	-1, 1381,
	4, 1122,
	21, 1122,
	22, 1122,
	23, 1122,
	24, 1122,
	25, 1122,
	26, 1122,
	28, 1122,
	29, 1122,
	35, 1122,
	40, 1122,
	41, 1122,
	42, 1122,
	43, 1122,
	44, 1122,
	45, 1122,
	46, 1122,
	47, 1122,
	48, 1122,
	49, 1122,
	51, 1122,
	52, 1122,
	53, 1122,
	54, 1122,
	56, 1122,
	57, 1122,
	58, 1122,
	59, 1122,
	60, 1122,
	61, 1122,
	65, 1122,
	66, 1122,
	67, 1122,
	68, 1122,
	70, 1122,
	71, 1122,
	72, 1122,
	76, 1122,
	77, 1122,
	78, 1122,
	79, 1122,
	80, 1122,
	81, 1122,
	82, 1122,
	85, 1122,
	86, 1122,
	87, 1122,
	88, 1122,
	90, 1122,
	92, 1122,
	93, 1122,
	94, 1122,
	95, 1122,
	96, 1122,
	97, 1122,
	99, 1122,
	100, 1122,
	101, 1122,
	103, 1122,
	104, 1122,
	112, 1122,
	113, 1122,
	114, 1122,
	115, 1122,
	117, 1122,
	118, 1122,
	119, 1122,
	121, 1122,
	122, 1122,
	123, 1122,
	125, 1122,
	126, 1122,
	128, 1122,
	129, 1122,
	130, 1122,
	133, 1122,
	134, 1122,
	135, 1122,
	137, 1122,
	138, 1122,
	140, 1122,
	141, 1122,
	142, 1122,
	144, 1122,
	145, 1122,
	146, 1122,
	147, 1122,
	148, 1122,
	149, 1122,
	150, 1122,
	151, 1122,
	152, 1122,
	153, 1122,
	154, 1122,
	155, 1122,
	156, 1122,
	157, 1122,
	158, 1122,
	166, 1122,
	167, 1122,
	168, 1122,
	169, 1122,
	173, 1122,
	175, 1122,
	179, 1122,
	180, 1122,
	181, 1122,
	182, 1122,
	183, 1122,
	184, 1122,
	186, 1122,
	187, 1122,
	189, 1122,
	190, 1122,
	192, 1122,
	193, 1122,
	194, 1122,
	195, 1122,
	196, 1122,
	197, 1122,
	198, 1122,
	199, 1122,
	200, 1122,
	202, 1122,
	203, 1122,
	205, 1122,
	206, 1122,
	207, 1122,
	208, 1122,
	213, 1122,
	214, 1122,
	215, 1122,
	218, 1122,
	219, 1122,
	220, 1122,
	222, 1122,
	224, 1122,
	225, 1122,
	227, 1122,
	229, 1122,
	230, 1122,
	231, 1122,
	233, 1122,
	237, 1122,
	238, 1122,
	239, 1122,
	240, 1122,
	241, 1122,
	242, 1122,
	244, 1122,
	245, 1122,
	246, 1122,
	248, 1122,
	249, 1122,
	251, 1122,
	252, 1122,
	255, 1122,
	256, 1122,
	257, 1122,
	260, 1122,
	261, 1122,
	262, 1122,
	263, 1122,
	265, 1122,
	266, 1122,
	267, 1122,
	268, 1122,
	269, 1122,
	270, 1122,
	271, 1122,
	272, 1122,
	273, 1122,
	274, 1122,
	275, 1122,
	277, 1122,
	279, 1122,
	280, 1122,
	281, 1122,
	282, 1122,
	283, 1122,
	284, 1122,
	285, 1122,
	286, 1122,
	287, 1122,
	288, 1122,
	290, 1122,
	294, 1122,
	296, 1122,
	297, 1122,
	298, 1122,
	299, 1122,
	300, 1122,
	303, 1122,
	305, 1122,
	307, 1122,
	308, 1122,
	309, 1122,
	312, 1122,
	313, 1122,
	314, 1122,
	316, 1122,
	318, 1122,
	319, 1122,
	320, 1122,
	321, 1122,
	322, 1122,
	323, 1122,
	324, 1122,
	325, 1122,
	326, 1122,
	327, 1122,
	328, 1122,
	329, 1122,
	331, 1122,
	332, 1122,
	333, 1122,
	334, 1122,
	335, 1122,
	336, 1122,
	337, 1122,
	338, 1122,
	339, 1122,
	341, 1122,
	343, 1122,
	344, 1122,
	345, 1122,
	346, 1122,
	347, 1122,
	348, 1122,
	349, 1122,
	350, 1122,
	351, 1122,
	352, 1122,
	353, 1122,
	355, 1122,
	361, 1122,
	363, 1122,
	364, 1122,
	365, 1122,
	366, 1122,
	367, 1122,
	368, 1122,
	369, 1122,
	370, 1122,
	372, 1122,
	373, 1122,
	374, 1122,
	376, 1122,
	377, 1122,
	378, 1122,
	379, 1122,
	380, 1122,
	381, 1122,
	383, 1122,
	384, 1122,
	385, 1122,
	386, 1122,
	387, 1122,
	388, 1122,
	389, 1122,
	390, 1122,
	391, 1122,
	392, 1122,
	393, 1122,
	395, 1122,
	396, 1122,
	397, 1122,
	398, 1122,
	399, 1122,
	400, 1122,
	402, 1122,
	403, 1122,
	404, 1122,
	405, 1122,
	406, 1122,
	408, 1122,
	409, 1122,
	410, 1122,
	411, 1122,
	412, 1122,
	413, 1122,
	414, 1122,
	416, 1122,
	418, 1122,
	419, 1122,
	420, 1122,
	421, 1122,
	422, 1122,
	423, 1122,
	424, 1122,
	425, 1122,
	426, 1122,
	427, 1122,
	428, 1122,
	429, 1122,
	430, 1122,
	432, 1122,
	433, 1122,
	435, 1122,
	437, 1122,
	438, 1122,
	439, 1122,
	440, 1122,
	441, 1122,
	442, 1122,
	443, 1122,
	444, 1122,
	446, 1122,
	447, 1122,
	448, 1122,
	449, 1122,
	450, 1122,
	452, 1122,
	454, 1122,
	455, 1122,
	456, 1122,
	457, 1122,
	458, 1122,
	460, 1122,
	461, 1122,
	462, 1122,
	464, 1122,
	465, 1122,
	468, 1122,
	469, 1122,
	470, 1122,
	471, 1122,
	472, 1122,
	473, 1122,
	474, 1122,
	476, 1122,
	479, 1122,
	480, 1122,
	481, 1122,
	482, 1122,
	483, 1122,
	484, 1122,
	486, 1122,
	487, 1122,
	488, 1122,
	493, 1122,
	494, 1122,
	495, 1122,
	496, 1122,
	497, 1122,
	498, 1122,
	-2, 0,
	-1, 1454,
	1, 475,
	521, 475,
	523, 475,
	525, 475,
	-2, 1290,
	-1, 1457,
	4, 2341,
	11, 2341,
	12, 2341,
	14, 2341,
	15, 2341,
	16, 2341,
	17, 2341,
	18, 2341,
	19, 2341,
	21, 2341,
	22, 2341,
	23, 2341,
	24, 2341,
	25, 2341,
	26, 2341,
	28, 2341,
	29, 2341,
	32, 2341,
	33, 2341,
	35, 2341,
	37, 2341,
	40, 2341,
	41, 2341,
	42, 2341,
	43, 2341,
	44, 2341,
	45, 2341,
	46, 2341,
	47, 2341,
	48, 2341,
	49, 2341,
	51, 2341,
	52, 2341,
	53, 2341,
	54, 2341,
	56, 2341,
	57, 2341,
	58, 2341,
	59, 2341,
	60, 2341,
	61, 2341,
	65, 2341,
	66, 2341,
	67, 2341,
	68, 2341,
	70, 2341,
	71, 2341,
	72, 2341,
	73, 2341,
	76, 2341,
	77, 2341,
	78, 2341,
	79, 2341,
	80, 2341,
	81, 2341,
	82, 2341,
	83, 2341,
	85, 2341,
	86, 2341,
	87, 2341,
	88, 2341,
	90, 2341,
	91, 2341,
	92, 2341,
	93, 2341,
	94, 2341,
	95, 2341,
	96, 2341,
	97, 2341,
	99, 2341,
	100, 2341,
	101, 2341,
	102, 2341,
	103, 2341,
	104, 2341,
	112, 2341,
	113, 2341,
	114, 2341,
	115, 2341,
	117, 2341,
	118, 2341,
	119, 2341,
	121, 2341,
	122, 2341,
	123, 2341,
	125, 2341,
	126, 2341,
	128, 2341,
	129, 2341,
	130, 2341,
	133, 2341,
	134, 2341,
	135, 2341,
	137, 2341,
	138, 2341,
	140, 2341,
	141, 2341,
	142, 2341,
	144, 2341,
	145, 2341,
	146, 2341,
	147, 2341,
	148, 2341,
	149, 2341,
	150, 2341,
	151, 2341,
	152, 2341,
	153, 2341,
	154, 2341,
	155, 2341,
	156, 2341,
	157, 2341,
	158, 2341,
	162, 2341,
	163, 2341,
	164, 2341,
	165, 2341,
	166, 2341,
	167, 2341,
	168, 2341,
	169, 2341,
	172, 2341,
	173, 2341,
	175, 2341,
	178, 2341,
	179, 2341,
	180, 2341,
	181, 2341,
	182, 2341,
	183, 2341,
	184, 2341,
	186, 2341,
	187, 2341,
	189, 2341,
	190, 2341,
	192, 2341,
	193, 2341,
	194, 2341,
	195, 2341,
	196, 2341,
	197, 2341,
	198, 2341,
	199, 2341,
	200, 2341,
	201, 2341,
	202, 2341,
	203, 2341,
	204, 2341,
	205, 2341,
	206, 2341,
	207, 2341,
	208, 2341,
	210, 2341,
	211, 2341,
	213, 2341,
	214, 2341,
	215, 2341,
	217, 2341,
	218, 2341,
	219, 2341,
	220, 2341,
	222, 2341,
	224, 2341,
	225, 2341,
	226, 2341,
	227, 2341,
	228, 2341,
	229, 2341,
	230, 2341,
	231, 2341,
	232, 2341,
	233, 2341,
	235, 2341,
	236, 2341,
	237, 2341,
	238, 2341,
	239, 2341,
	240, 2341,
	241, 2341,
	242, 2341,
	244, 2341,
	245, 2341,
	246, 2341,
	248, 2341,
	249, 2341,
	250, 2341,
	251, 2341,
	252, 2341,
	253, 2341,
	255, 2341,
	256, 2341,
	257, 2341,
	260, 2341,
	261, 2341,
	262, 2341,
	263, 2341,
	264, 2341,
	265, 2341,
	266, 2341,
	267, 2341,
	268, 2341,
	269, 2341,
	270, 2341,
	271, 2341,
	272, 2341,
	273, 2341,
	274, 2341,
	275, 2341,
	277, 2341,
	278, 2341,
	279, 2341,
	280, 2341,
	281, 2341,
	282, 2341,
	283, 2341,
	284, 2341,
	285, 2341,
	286, 2341,
	287, 2341,
	288, 2341,
	290, 2341,
	293, 2341,
	294, 2341,
	296, 2341,
	297, 2341,
	298, 2341,
	299, 2341,
	300, 2341,
	303, 2341,
	307, 2341,
	308, 2341,
	309, 2341,
	310, 2341,
	312, 2341,
	313, 2341,
	314, 2341,
	316, 2341,
	318, 2341,
	319, 2341,
	320, 2341,
	321, 2341,
	322, 2341,
	323, 2341,
	324, 2341,
	325, 2341,
	326, 2341,
	327, 2341,
	328, 2341,
	329, 2341,
	331, 2341,
	332, 2341,
	333, 2341,
	334, 2341,
	335, 2341,
	336, 2341,
	337, 2341,
	338, 2341,
	339, 2341,
	341, 2341,
	343, 2341,
	344, 2341,
	345, 2341,
	346, 2341,
	347, 2341,
	348, 2341,
	349, 2341,
	350, 2341,
	351, 2341,
	352, 2341,
	353, 2341,
	355, 2341,
	361, 2341,
	362, 2341,
	363, 2341,
	364, 2341,
	365, 2341,
	366, 2341,
	367, 2341,
	368, 2341,
	369, 2341,
	370, 2341,
	372, 2341,
	373, 2341,
	374, 2341,
	375, 2341,
	376, 2341,
	377, 2341,
	378, 2341,
	379, 2341,
	380, 2341,
	381, 2341,
	382, 2341,
	383, 2341,
	384, 2341,
	385, 2341,
	386, 2341,
	387, 2341,
	388, 2341,
	389, 2341,
	390, 2341,
	391, 2341,
	392, 2341,
	393, 2341,
	395, 2341,
	396, 2341,
	397, 2341,
	398, 2341,
	399, 2341,
	400, 2341,
	402, 2341,
	403, 2341,
	404, 2341,
	405, 2341,
	406, 2341,
	407, 2341,
	408, 2341,
	409, 2341,
	410, 2341,
	411, 2341,
	412, 2341,
	413, 2341,
	414, 2341,
	416, 2341,
	418, 2341,
	419, 2341,
	420, 2341,
	421, 2341,
	422, 2341,
	423, 2341,
	424, 2341,
	425, 2341,
	426, 2341,
	427, 2341,
	428, 2341,
	429, 2341,
	430, 2341,
	432, 2341,
	433, 2341,
	435, 2341,
	437, 2341,
	438, 2341,
	439, 2341,
	440, 2341,
	441, 2341,
	442, 2341,
	443, 2341,
	444, 2341,
	446, 2341,
	447, 2341,
	448, 2341,
	449, 2341,
	450, 2341,
	452, 2341,
	454, 2341,
	455, 2341,
	456, 2341,
	457, 2341,
	458, 2341,
	460, 2341,
	461, 2341,
	462, 2341,
	464, 2341,
	465, 2341,
	468, 2341,
	469, 2341,
	470, 2341,
	471, 2341,
	472, 2341,
	473, 2341,
	474, 2341,
	476, 2341,
	479, 2341,
	480, 2341,
	481, 2341,
	482, 2341,
	483, 2341,
	484, 2341,
	486, 2341,
	487, 2341,
	488, 2341,
	493, 2341,
	494, 2341,
	495, 2341,
	496, 2341,
	497, 2341,
	498, 2341,
	499, 2341,
	500, 2341,
	503, 2341,
	504, 2341,
	505, 2341,
	506, 2341,
	507, 2341,
	508, 2341,
	510, 2341,
	511, 2341,
	512, 2341,
	513, 2341,
	514, 2341,
	515, 2341,
	516, 2341,
	517, 2341,
	518, 2341,
	520, 2341,
	523, 2341,
	524, 2341,
	526, 2341,
	527, 2341,
	-2, 0,
	-1, 1462,
	177, 2234,
	451, 2234,
	505, 2234,
	524, 2234,
	-2, 0,
	-1, 1511,
	345, 767,
	400, 767,
	-2, 0,
	-1, 1536,
	1, 762,
	521, 762,
	523, 762,
	525, 762,
	-2, 0,
	-1, 1537,
	1, 798,
	521, 798,
	523, 798,
	525, 798,
	-2, 0,
	-1, 1538,
	1, 769,
	521, 769,
	523, 769,
	525, 769,
	-2, 0,
	-1, 1540,
	1, 773,
	521, 773,
	523, 773,
	525, 773,
	-2, 0,
	-1, 1546,
	1, 780,
	521, 780,
	523, 780,
	525, 780,
	-2, 0,
	-1, 1574,
	1, 2288,
	521, 2288,
	523, 2288,
	524, 2288,
	525, 2288,
	-2, 827,
	-1, 1575,
	1, 2231,
	521, 2231,
	523, 2231,
	524, 2231,
	525, 2231,
	-2, 828,
	-1, 1590,
	1, 1200,
	525, 1200,
	-2, 1205,
	-1, 1593,
	161, 1331,
	174, 1331,
	254, 1331,
	301, 1331,
	-2, 1271,
	-1, 1687,
	143, 1292,
	161, 1292,
	174, 1292,
	221, 1292,
	254, 1292,
	301, 1292,
	311, 1292,
	466, 1292,
	-2, 1697,
	-1, 1747,
	523, 1847,
	-2, 0,
	-1, 1782,
	143, 1292,
	161, 1292,
	174, 1292,
	221, 1292,
	254, 1292,
	301, 1292,
	311, 1292,
	466, 1292,
	-2, 1412,
	-1, 1830,
	522, 1524,
	-2, 1512,
	-1, 1866,
	1, 602,
	525, 602,
	-2, 1205,
	-1, 1978,
	204, 214,
	-2, 1986,
	-1, 1979,
	204, 215,
	-2, 257,
	-1, 2106,
	1, 764,
	521, 764,
	523, 764,
	525, 764,
	-2, 0,
	-1, 2107,
	1, 800,
	521, 800,
	523, 800,
	525, 800,
	-2, 0,
	-1, 2137,
	1, 782,
	521, 782,
	523, 782,
	525, 782,
	-2, 0,
	-1, 2183,
	380, 1358,
	381, 1358,
	-2, 1557,
	-1, 2214,
	14, 0,
	15, 0,
	16, 0,
	503, 0,
	504, 0,
	505, 0,
	-2, 1577,
	-1, 2215,
	14, 0,
	15, 0,
	16, 0,
	503, 0,
	504, 0,
	505, 0,
	-2, 1578,
	-1, 2216,
	91, 0,
	235, 0,
	236, 0,
	507, 0,
	508, 0,
	-2, 1579,
	-1, 2217,
	91, 0,
	235, 0,
	236, 0,
	507, 0,
	508, 0,
	-2, 1580,
	-1, 2218,
	91, 0,
	235, 0,
	236, 0,
	507, 0,
	508, 0,
	-2, 1581,
	-1, 2219,
	91, 0,
	235, 0,
	236, 0,
	507, 0,
	508, 0,
	-2, 1582,
	-1, 2220,
	91, 0,
	235, 0,
	236, 0,
	507, 0,
	508, 0,
	-2, 1583,
	-1, 2221,
	14, 0,
	15, 0,
	16, 0,
	503, 0,
	504, 0,
	505, 0,
	-2, 1584,
	-1, 2233,
	14, 0,
	15, 0,
	16, 0,
	503, 0,
	504, 0,
	505, 0,
	-2, 1596,
	-1, 2234,
	14, 0,
	15, 0,
	16, 0,
	503, 0,
	504, 0,
	505, 0,
	-2, 1597,
	-1, 2235,
	14, 0,
	15, 0,
	16, 0,
	503, 0,
	504, 0,
	505, 0,
	-2, 1598,
	-1, 2238,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	201, 0,
	204, 0,
	253, 0,
	407, 0,
	499, 0,
	506, 0,
	-2, 1603,
	-1, 2244,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	201, 0,
	204, 0,
	253, 0,
	407, 0,
	499, 0,
	506, 0,
	-2, 1607,
	-1, 2246,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	201, 0,
	204, 0,
	253, 0,
	407, 0,
	499, 0,
	506, 0,
	-2, 1615,
	-1, 2247,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	201, 0,
	204, 0,
	253, 0,
	407, 0,
	499, 0,
	506, 0,
	-2, 1616,
	-1, 2248,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	201, 0,
	204, 0,
	253, 0,
	407, 0,
	499, 0,
	506, 0,
	-2, 1617,
	-1, 2249,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	201, 0,
	204, 0,
	253, 0,
	407, 0,
	499, 0,
	506, 0,
	-2, 1618,
	-1, 2361,
	5, 1990,
	177, 1858,
	522, 1987,
	-2, 1978,
	-1, 2362,
	177, 1859,
	-2, 2292,
	-1, 2363,
	177, 1860,
	-2, 2145,
	-1, 2364,
	177, 1861,
	-2, 2055,
	-1, 2365,
	177, 1862,
	-2, 2099,
	-1, 2366,
	177, 1863,
	-2, 2140,
	-1, 2367,
	177, 1864,
	-2, 2229,
	-1, 2368,
	177, 1865,
	-2, 1680,
	-1, 2437,
	1, 1413,
	2, 1413,
	102, 1413,
	143, 1413,
	161, 1413,
	174, 1413,
	178, 1413,
	188, 1413,
	191, 1413,
	217, 1413,
	221, 1413,
	232, 1413,
	250, 1413,
	254, 1413,
	278, 1413,
	301, 1413,
	305, 1413,
	311, 1413,
	371, 1413,
	375, 1413,
	466, 1413,
	477, 1413,
	490, 1413,
	491, 1413,
	492, 1413,
	501, 1413,
	521, 1413,
	523, 1413,
	525, 1413,
	527, 1413,
	-2, 1412,
	-1, 2450,
	522, 1959,
	-2, 1973,
	-1, 2452,
	1, 273,
	-2, 1319,
	-1, 2476,
	522, 1523,
	-2, 1513,
	-1, 2606,
	1, 1098,
	521, 1098,
	523, 1098,
	525, 1098,
	-2, 1319,
	-1, 2778,
	306, 1361,
	-2, 2331,
	-1, 2779,
	306, 1362,
	-2, 2215,
	-1, 2783,
	380, 1924,
	381, 1924,
	-2, 1678,
	-1, 2784,
	380, 1928,
	381, 1928,
	-2, 1679,
	-1, 2785,
	380, 1925,
	381, 1925,
	-2, 1678,
	-1, 2786,
	380, 1929,
	381, 1929,
	-2, 1679,
	-1, 2799,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	201, 0,
	204, 0,
	253, 0,
	407, 0,
	499, 0,
	506, 0,
	-2, 1605,
	-1, 2800,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	201, 0,
	204, 0,
	253, 0,
	407, 0,
	499, 0,
	506, 0,
	-2, 1609,
	-1, 2806,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	201, 0,
	204, 0,
	253, 0,
	407, 0,
	499, 0,
	506, 0,
	-2, 1611,
	-1, 3006,
	229, 1205,
	341, 1205,
	349, 1205,
	501, 1205,
	-2, 599,
	-1, 3140,
	1, 1098,
	521, 1098,
	523, 1098,
	525, 1098,
	-2, 1319,
	-1, 3248,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	201, 0,
	204, 0,
	253, 0,
	407, 0,
	499, 0,
	506, 0,
	-2, 1613,
	-1, 3255,
	226, 0,
	228, 0,
	293, 0,
	-2, 1632,
	-1, 3322,
	14, 0,
	15, 0,
	16, 0,
	503, 0,
	504, 0,
	505, 0,
	-2, 1661,
	-1, 3323,
	14, 0,
	15, 0,
	16, 0,
	503, 0,
	504, 0,
	505, 0,
	-2, 1662,
	-1, 3324,
	14, 0,
	15, 0,
	16, 0,
	503, 0,
	504, 0,
	505, 0,
	-2, 1663,
	-1, 3328,
	14, 0,
	15, 0,
	16, 0,
	503, 0,
	504, 0,
	505, 0,
	-2, 1667,
	-1, 3329,
	14, 0,
	15, 0,
	16, 0,
	503, 0,
	504, 0,
	505, 0,
	-2, 1668,
	-1, 3330,
	14, 0,
	15, 0,
	16, 0,
	503, 0,
	504, 0,
	505, 0,
	-2, 1669,
	-1, 3376,
	522, 1960,
	-2, 1974,
	-1, 3509,
	524, 2447,
	-2, 1249,
	-1, 3567,
	226, 0,
	228, 0,
	293, 0,
	-2, 1633,
	-1, 3570,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	201, 0,
	204, 0,
	253, 0,
	407, 0,
	499, 0,
	506, 0,
	-2, 1636,
	-1, 3571,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	201, 0,
	204, 0,
	253, 0,
	407, 0,
	499, 0,
	506, 0,
	-2, 1638,
	-1, 3781,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	201, 0,
	204, 0,
	253, 0,
	407, 0,
	499, 0,
	506, 0,
	-2, 1637,
	-1, 3782,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	201, 0,
	204, 0,
	253, 0,
	407, 0,
	499, 0,
	506, 0,
	-2, 1639,
	-1, 3793,
	226, 0,
	-2, 1670,
	-1, 3943,
	226, 0,
	-2, 1671,
	-1, 4093,
	48, 0,
	201, 0,
	253, 0,
	407, 0,
	499, 0,
	506, 0,
	-2, 2295,
}

const sqlPrivate = 57344

const sqlLast = 107084

var sqlAct = [...]int{

	244, 3986, 3965, 3706, 3825, 2933, 4103, 3871, 2697, 4092,
	4201, 1975, 4067, 2511, 3125, 3828, 3550, 4048, 3126, 4033,
	4105, 4051, 4104, 3878, 2667, 4151, 1125, 3813, 3287, 1319,
	3947, 3404, 3738, 2934, 3733, 948, 4091, 3024, 3770, 2193,
	3688, 3720, 3157, 3501, 2084, 236, 1302, 3887, 1817, 3636,
	3443, 2075, 1440, 3910, 2575, 2261, 3150, 2059, 3743, 3121,
	3478, 3111, 1602, 3461, 2020, 960, 3463, 3152, 3240, 2706,
	680, 1919, 2201, 3405, 3798, 2792, 1788, 645, 1184, 2194,
	2393, 3203, 2656, 2719, 2638, 3205, 1277, 37, 2629, 1114,
	3378, 2976, 2046, 2708, 680, 2956, 2948, 2916, 3549, 2937,
	2716, 3606, 1444, 2550, 1445, 779, 2939, 1477, 2699, 2705,
	2668, 1757, 2430, 1970, 1929, 1969, 2651, 3347, 2513, 2653,
	2915, 2198, 2274, 947, 163, 2429, 3948, 1285, 1733, 1476,
	4, 675, 2057, 1964, 2776, 2589, 101, 1695, 3043, 238,
	1948, 2715, 237, 1955, 3872, 2639, 996, 1902, 1905, 1168,
	2303, 1420, 2411, 1758, 2294, 1777, 1590, 2390, 2165, 2305,
	2163, 2182, 3123, 2258, 939, 1892, 1519, 1455, 2549, 2983,
	2432, 2462, 1372, 2009, 1105, 1441, 1001, 2502, 2661, 681,
	2709, 682, 1431, 1157, 611, 2461, 2297, 1108, 2419, 1728,
	2401, 1087, 1767, 2357, 2275, 1603, 2347, 1304, 1680, 1604,
	2082, 627, 2164, 172, 2166, 173, 1546, 677, 639, 686,
	163, 2008, 689, 1122, 2032, 1453, 1396, 773, 597, 752,
	1918, 1104, 619, 725, 2187, 1003, 1314, 977, 614, 42,
	1046, 1110, 1818, 686, 41, 39, 689, 622, 30, 28,
	26, 1085, 838, 1609, 2827, 1325, 857, 1589, 3361, 2823,
	3362, 2048, 2048, 2935, 4264, 4258, 2048, 774, 2410, 3184,
	943, 4243, 4242, 3167, 2048, 2410, 2410, 2048, 4218, 1774,
	1318, 4216, 3652, 4212, 4133, 3652, 4127, 1983, 4134, 943,
	2410, 3004, 2403, 68, 4125, 777, 776, 4122, 2410, 4119,
	3166, 4123, 4114, 4120, 4089, 3184, 1983, 1165, 1983, 69,
	4088, 794, 1141, 4087, 1983, 2888, 2889, 2068, 4082, 4081,
	4076, 944, 2068, 2068, 3652, 73, 4074, 4046, 4027, 1102,
	3652, 3652, 2467, 2083, 4020, 4019, 4014, 992, 2410, 2410,
	3652, 4013, 4007, 3979, 3945, 3652, 1983, 3698, 2467, 3927,
	3924, 3921, 3880, 3538, 1983, 3652, 3881, 3845, 3844, 1617,
	1618, 1983, 1983, 79, 3836, 3835, 3804, 3783, 1983, 3652,
	1983, 2467, 3762, 1165, 3751, 2791, 2068, 924, 3184, 923,
	3683, 1648, 2410, 2836, 2410, 1088, 1088, 2903, 1620, 2837,
	2888, 2889, 3671, 2906, 2907, 2908, 2410, 3651, 4028, 3351,
	85, 3652, 2888, 2889, 3569, 3517, 3511, 1136, 2467, 3200,
	3200, 3565, 3476, 3371, 100, 3940, 3477, 3372, 3369, 86,
	97, 1619, 3370, 2463, 933, 3354, 86, 1282, 938, 2410,
	3928, 1639, 3271, 3267, 1339, 2068, 1983, 2410, 999, 1636,
	3199, 3191, 2932, 2927, 3200, 3192, 2410, 2410, 2926, 2879,
	2877, 2869, 2410, 2880, 2878, 2870, 2867, 1089, 1983, 2838,
	2410, 2722, 2903, 2410, 3351, 2068, 2695, 2694, 87, 68,
	2071, 2071, 2402, 2486, 2466, 2459, 2894, 2410, 2467, 2410,
	2453, 3732, 3698, 1137, 1983, 69, 2410, 1617, 1618, 2409,
	3563, 2070, 2571, 2410, 1091, 2071, 1092, 3672, 1983, 3538,
	3192, 73, 2566, 1923, 2501, 2826, 1872, 2047, 2635, 2063,
	1642, 1643, 1644, 1645, 2888, 2889, 1620, 2906, 2907, 2908,
	1625, 1982, 210, 2583, 2499, 1753, 1313, 3434, 3243, 3221,
	1775, 1958, 2446, 3168, 1521, 3564, 2445, 2444, 2443, 79,
	2442, 1093, 1090, 1539, 932, 1485, 210, 1471, 931, 1619,
	1120, 2894, 3169, 3931, 930, 929, 928, 927, 1647, 1649,
	926, 922, 921, 2894, 212, 920, 2756, 3622, 2904, 2049,
	2049, 919, 918, 917, 2049, 916, 85, 1617, 1618, 915,
	914, 913, 2049, 1634, 1635, 2049, 2903, 912, 212, 911,
	100, 910, 90, 909, 908, 86, 97, 907, 906, 1648,
	888, 836, 835, 834, 833, 2909, 1620, 832, 831, 830,
	211, 829, 1640, 828, 827, 826, 825, 1617, 1618, 1489,
	204, 1318, 824, 3166, 823, 822, 821, 820, 205, 1338,
	819, 818, 171, 93, 211, 96, 1333, 817, 210, 1619,
	3581, 1137, 2402, 2904, 87, 816, 1620, 815, 1625, 814,
	174, 1117, 813, 3387, 1001, 2904, 812, 1475, 1001, 210,
	2664, 811, 1137, 810, 809, 808, 210, 778, 2888, 2889,
	807, 136, 797, 1187, 174, 2894, 796, 1187, 136, 1619,
	212, 1307, 792, 791, 785, 784, 2905, 743, 742, 1167,
	702, 701, 700, 1172, 692, 1161, 691, 690, 659, 651,
	650, 212, 649, 633, 232, 1001, 231, 1001, 212, 1001,
	1646, 230, 229, 228, 1307, 1327, 227, 1327, 226, 1327,
	1280, 225, 224, 1292, 1295, 138, 211, 2683, 2047, 2909,
	1641, 1293, 2066, 223, 1478, 1288, 204, 1307, 1625, 175,
	2063, 4110, 222, 2158, 205, 221, 220, 211, 2465, 219,
	218, 217, 216, 215, 211, 214, 213, 204, 3365, 2888,
	2889, 2905, 994, 3201, 204, 205, 174, 2904, 90, 2979,
	2849, 1317, 205, 2905, 2832, 2647, 1647, 1649, 1625, 2616,
	1307, 1001, 1296, 2471, 1295, 1295, 1307, 775, 2451, 2330,
	1307, 1378, 1380, 1324, 174, 1331, 4090, 1337, 1001, 2436,
	1001, 2078, 2930, 2316, 1307, 1778, 1900, 1155, 171, 93,
	1001, 96, 1001, 2314, 2899, 2897, 2898, 2890, 2891, 2892,
	2893, 2895, 2896, 1295, 2888, 2889, 210, 2931, 1616, 2894,
	1640, 1332, 1801, 686, 1706, 210, 689, 1368, 1697, 1736,
	1321, 2888, 2889, 778, 1736, 1735, 1180, 136, 1274, 1279,
	1735, 1174, 1124, 3993, 1307, 1637, 1633, 1150, 1630, 1628,
	1629, 1621, 1622, 1623, 1624, 1626, 1627, 1739, 212, 1451,
	3937, 1001, 1734, 1316, 1001, 1315, 3929, 212, 3823, 1326,
	2077, 3797, 2900, 2901, 2902, 2905, 1469, 3752, 1474, 2899,
	2897, 2898, 2890, 2891, 2892, 2893, 2895, 2896, 1483, 1452,
	1488, 138, 2897, 2898, 2890, 2891, 2892, 2893, 2895, 2896,
	163, 163, 3731, 3629, 211, 175, 946, 1458, 1460, 1490,
	2894, 2904, 944, 211, 204, 1425, 1428, 3747, 3604, 3603,
	3597, 3596, 205, 204, 210, 210, 3595, 210, 3588, 210,
	3587, 205, 3432, 3585, 3580, 3577, 3576, 1161, 1641, 1437,
	1161, 2888, 2889, 3475, 174, 1697, 3391, 1540, 3390, 3389,
	2300, 3481, 3375, 174, 1001, 1001, 1001, 1001, 1001, 1001,
	1001, 3342, 3341, 1399, 3340, 3263, 212, 212, 1698, 212,
	1696, 212, 2649, 1456, 3259, 2894, 3195, 2974, 2923, 1621,
	1622, 1623, 1624, 1626, 1627, 1001, 2914, 2887, 2884, 2023,
	2883, 1001, 2894, 2881, 2876, 2875, 2900, 2901, 2902, 2874,
	2871, 210, 2904, 2899, 2897, 2898, 2890, 2891, 2892, 2893,
	2895, 2896, 211, 211, 2868, 211, 1704, 211, 210, 2848,
	1541, 2831, 204, 204, 2824, 204, 2696, 204, 2301, 2905,
	205, 205, 1555, 205, 1470, 205, 2437, 2287, 3932, 210,
	1616, 1327, 1101, 212, 1615, 1990, 1484, 4257, 2928, 1988,
	1689, 4210, 2663, 174, 1694, 174, 4209, 174, 3482, 1686,
	212, 4143, 4141, 4132, 1588, 1126, 1630, 1628, 1629, 1621,
	1622, 1623, 1624, 1626, 1627, 3289, 3985, 3975, 2996, 3972,
	3971, 212, 1495, 3970, 2904, 3964, 3957, 2270, 1594, 211,
	3925, 3909, 1512, 3908, 2264, 1001, 1001, 1001, 3896, 204,
	3893, 1001, 2894, 2302, 2299, 1542, 211, 205, 1122, 3841,
	1122, 1623, 1624, 1626, 1627, 1755, 204, 3819, 3949, 2535,
	2905, 944, 3795, 3778, 205, 1187, 2971, 211, 3777, 174,
	3759, 3758, 3723, 1001, 3746, 3699, 680, 204, 3621, 3602,
	1835, 680, 1599, 1591, 1598, 205, 174, 2648, 3539, 1383,
	1001, 924, 3533, 923, 1307, 3530, 1804, 2899, 2897, 2898,
	2890, 2891, 2892, 2893, 2895, 2896, 1814, 174, 1593, 1001,
	3482, 1860, 3422, 3421, 3408, 1187, 1292, 1595, 3407, 1738,
	3357, 1764, 3345, 3254, 1434, 1612, 1613, 1684, 1809, 3202,
	3185, 3143, 3083, 3056, 3027, 3026, 2998, 1161, 2853, 1792,
	1869, 2852, 2905, 2847, 1898, 2815, 2628, 1761, 1762, 1742,
	1617, 1618, 1741, 1811, 1740, 2079, 1785, 1737, 998, 1729,
	1727, 2478, 2477, 2448, 2441, 1863, 2304, 2408, 2312, 975,
	1864, 1730, 1731, 1800, 1756, 163, 1751, 1750, 1749, 1620,
	1748, 1747, 1746, 1745, 1744, 1743, 944, 1724, 1723, 1722,
	2898, 2890, 2891, 2892, 2893, 2895, 2896, 1088, 1883, 1882,
	3726, 210, 1891, 1893, 1721, 210, 1786, 1720, 1719, 1718,
	1889, 1717, 1619, 1716, 1715, 686, 1807, 1714, 689, 1713,
	686, 210, 1712, 689, 1711, 1710, 3027, 1699, 1685, 1683,
	1678, 1149, 1139, 1132, 3625, 3573, 3386, 1783, 210, 3368,
	2329, 3360, 2835, 212, 2469, 2439, 3808, 212, 3627, 1866,
	3385, 1796, 1307, 1307, 2315, 1698, 2890, 2891, 2892, 2893,
	2895, 2896, 1187, 212, 2313, 1911, 2994, 1862, 1754, 1681,
	2298, 2888, 2889, 2890, 2891, 2892, 2893, 2895, 2896, 1780,
	212, 1795, 3674, 1812, 1165, 1171, 1794, 1793, 1858, 211,
	1791, 1790, 1789, 211, 1944, 2480, 1891, 1947, 1891, 204,
	1952, 3930, 1891, 204, 4207, 1829, 1815, 205, 4200, 211,
	1832, 205, 2873, 3973, 1886, 1776, 1778, 3153, 3883, 204,
	1923, 3059, 3882, 3750, 3701, 3700, 211, 205, 3822, 174,
	3673, 1894, 3888, 174, 1884, 1299, 204, 3624, 1169, 1170,
	3542, 3541, 3540, 3363, 205, 3187, 3186, 3485, 2554, 174,
	1586, 1162, 1736, 1878, 1511, 2872, 1165, 2016, 1735, 1976,
	1980, 1719, 2797, 1928, 2537, 1719, 174, 1166, 1342, 3420,
	904, 1116, 1708, 1956, 3128, 1120, 3127, 1120, 1520, 4086,
	2076, 1165, 1118, 2098, 3799, 2892, 2893, 2895, 2896, 3879,
	4130, 1374, 4115, 686, 4102, 3112, 689, 1808, 2013, 2720,
	1307, 1521, 1307, 1971, 1307, 3440, 3439, 1867, 3425, 3218,
	905, 2935, 3291, 2295, 2024, 2476, 1888, 1292, 1752, 4111,
	1307, 1307, 2841, 1732, 3119, 1973, 2017, 1424, 1377, 1556,
	2018, 1307, 1310, 1316, 1448, 1315, 1144, 2029, 4124, 4121,
	1156, 3162, 3399, 1307, 1464, 1307, 1307, 1307, 2580, 1951,
	2577, 1887, 1499, 3966, 3734, 4045, 3954, 3105, 2053, 3030,
	3415, 2055, 2703, 1163, 2660, 4168, 680, 2060, 4167, 4006,
	2062, 1164, 3235, 1705, 2065, 2300, 1117, 2812, 1117, 4112,
	1981, 2173, 3453, 3862, 3662, 1805, 1345, 902, 3008, 2487,
	1311, 900, 4252, 3855, 3847, 2097, 2143, 2376, 898, 896,
	3696, 2173, 1100, 893, 2026, 2810, 2141, 2505, 1503, 2037,
	3449, 3448, 2081, 3442, 2001, 3438, 2051, 2000, 2505, 3436,
	3396, 2503, 3395, 1906, 2085, 2171, 2102, 3108, 1907, 1355,
	2990, 2995, 2503, 2846, 2845, 2844, 944, 2843, 944, 2801,
	884, 2587, 3452, 1879, 2586, 2171, 1001, 2031, 1001, 2035,
	2086, 2582, 1399, 2301, 2034, 1001, 2034, 2573, 1835, 1835,
	1187, 2565, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001,
	1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001,
	1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001,
	1001, 1001, 1001, 1001, 1001, 1001, 1001, 1456, 1001, 1456,
	1001, 1001, 1001, 1001, 1554, 686, 2175, 1356, 689, 2039,
	2040, 1150, 1171, 2169, 2162, 2072, 2564, 2073, 738, 1920,
	2157, 2807, 1001, 1165, 1497, 1001, 1001, 2563, 2302, 2299,
	3010, 2562, 1553, 1001, 1162, 1908, 2541, 1001, 2528, 1001,
	1001, 2808, 1171, 2089, 2460, 2813, 2245, 1187, 4005, 2172,
	1592, 1916, 1910, 1001, 1001, 1001, 1001, 1627, 1001, 1001,
	1001, 1001, 1001, 1001, 1001, 1001, 1170, 1162, 3058, 2172,
	2343, 2076, 2342, 2120, 2203, 1921, 1922, 1389, 1387, 1388,
	1386, 2657, 1410, 2269, 1001, 1001, 1001, 1001, 1001, 1001,
	1001, 1001, 1001, 1351, 3219, 2137, 1170, 1001, 1689, 890,
	3776, 2156, 2094, 1917, 1363, 2276, 2277, 1895, 1896, 1122,
	739, 1129, 2494, 2186, 1912, 2170, 1187, 1999, 1312, 2276,
	2292, 1552, 2452, 2539, 1492, 1122, 2260, 3658, 2470, 2527,
	2152, 2147, 4108, 2774, 2159, 2170, 1565, 2161, 2174, 2160,
	2167, 1001, 1187, 4195, 3411, 2338, 1163, 942, 1796, 609,
	1127, 2304, 2381, 924, 1164, 2190, 924, 924, 2191, 2192,
	944, 2155, 1509, 4079, 2360, 2360, 2374, 2515, 2276, 944,
	2424, 2394, 2396, 944, 604, 2295, 2291, 2400, 2896, 1163,
	2558, 1513, 2260, 1829, 1829, 2526, 657, 1164, 1832, 1832,
	2199, 2200, 1496, 1766, 879, 3675, 2789, 3830, 2759, 1295,
	879, 2551, 2552, 2551, 2552, 2809, 2110, 2551, 2552, 1597,
	4167, 1307, 2268, 1148, 2811, 2416, 2036, 937, 2272, 2266,
	1913, 2449, 2105, 937, 1914, 941, 3459, 4196, 3226, 2340,
	3225, 1785, 1823, 2289, 2341, 2113, 1493, 2344, 2256, 2345,
	2346, 1187, 3402, 2753, 242, 1295, 1585, 2490, 1130, 1569,
	3073, 2090, 2438, 2304, 2106, 2298, 1161, 1869, 2579, 2154,
	2415, 944, 2492, 3013, 1088, 3458, 2254, 2484, 1521, 1770,
	2423, 1835, 2428, 3007, 2518, 2434, 2435, 4109, 2369, 2356,
	163, 3280, 2385, 3423, 656, 2398, 3066, 2464, 2578, 3072,
	2576, 2608, 2406, 2407, 2504, 2493, 2762, 1942, 3656, 1187,
	2421, 2422, 2417, 3695, 880, 3832, 1165, 4204, 1773, 2107,
	880, 2788, 1783, 1307, 2491, 943, 2507, 1536, 1738, 1521,
	4198, 2472, 3437, 1768, 3775, 3065, 1280, 1498, 1001, 1001,
	2607, 1001, 805, 2114, 1926, 1551, 1941, 1373, 3648, 1165,
	894, 1771, 952, 1292, 894, 1906, 2534, 2538, 2142, 660,
	1907, 894, 895, 2485, 2151, 2574, 894, 3435, 2140, 935,
	2479, 879, 4107, 741, 740, 693, 3424, 2559, 3107, 1769,
	3644, 3648, 1537, 1925, 1730, 1731, 736, 2632, 735, 2570,
	1909, 1371, 2250, 2543, 937, 2482, 2483, 2645, 3077, 2581,
	2671, 2561, 2540, 1548, 1959, 2488, 2950, 2506, 2251, 1966,
	1987, 1986, 2252, 3644, 2304, 1409, 2257, 3637, 2761, 1307,
	1307, 3412, 1307, 4211, 2617, 4184, 1350, 2620, 4183, 2622,
	964, 3645, 2641, 3635, 1307, 2520, 2523, 2510, 936, 2458,
	2530, 2758, 3639, 4221, 2717, 3657, 1120, 4156, 2517, 1307,
	3555, 1923, 2542, 3554, 2553, 2555, 2556, 2557, 3159, 1295,
	1295, 1353, 1120, 4234, 3645, 2560, 2686, 1908, 2781, 2782,
	2662, 665, 686, 2662, 3277, 689, 1772, 881, 3466, 3967,
	940, 880, 1128, 881, 1910, 1001, 1566, 3464, 3981, 605,
	2725, 2726, 2242, 2153, 2678, 4197, 2048, 2742, 1373, 2743,
	2682, 2732, 2733, 2734, 3638, 4024, 1829, 3009, 1563, 772,
	1292, 1832, 1316, 2544, 2614, 658, 1965, 3160, 655, 2688,
	3715, 1725, 2740, 2626, 2691, 2992, 1914, 2611, 2803, 1001,
	2760, 2613, 1923, 2702, 2636, 1001, 1001, 4202, 2074, 3831,
	1945, 2721, 4155, 891, 163, 673, 1912, 1117, 1292, 3278,
	1292, 2692, 2677, 606, 1448, 2087, 2680, 1968, 2681, 2673,
	2764, 2655, 2766, 1117, 2666, 2088, 1564, 2112, 1494, 667,
	3772, 2750, 1914, 1508, 1510, 2516, 2253, 2096, 2949, 2099,
	2100, 2101, 3551, 3159, 2259, 2255, 2687, 3788, 3467, 2693,
	1001, 1001, 2704, 2689, 2381, 607, 1001, 608, 1567, 1677,
	1967, 882, 3640, 694, 695, 3466, 3641, 882, 3041, 1001,
	1001, 3086, 2267, 4136, 3464, 1001, 1001, 4177, 2109, 1456,
	1596, 1001, 4137, 671, 1147, 4203, 4056, 798, 2737, 3984,
	1001, 1001, 1001, 1930, 2104, 3640, 1001, 2723, 2744, 3641,
	2746, 2727, 2748, 2728, 881, 2240, 1001, 883, 2243, 2804,
	3047, 3643, 1913, 883, 2286, 1934, 1914, 3040, 4205, 3681,
	2420, 2757, 4022, 1001, 2851, 3646, 2834, 2780, 806, 4222,
	2771, 2770, 2304, 2433, 2381, 2381, 1116, 943, 1116, 1568,
	3382, 662, 3293, 2769, 3643, 2505, 3049, 1118, 1914, 1118,
	2775, 2790, 4232, 3771, 2186, 3051, 4023, 2239, 3646, 2521,
	3716, 1962, 3725, 786, 666, 4154, 3545, 3919, 1931, 1142,
	3556, 2829, 2830, 3237, 2772, 3467, 2833, 1524, 697, 696,
	1823, 1823, 3465, 3987, 4106, 1770, 4166, 1954, 4164, 1001,
	1001, 1001, 2427, 672, 3052, 4002, 3895, 3499, 1001, 1001,
	1001, 3048, 3146, 1001, 1960, 2007, 669, 1763, 1140, 3480,
	1953, 944, 664, 1001, 1122, 1187, 2802, 1135, 3911, 1001,
	596, 1001, 2942, 2943, 1773, 1943, 934, 1607, 882, 1122,
	3912, 4235, 698, 699, 3600, 3838, 3552, 2189, 3642, 2418,
	3241, 1924, 1949, 1961, 1880, 3462, 3331, 1187, 2984, 3837,
	1606, 4227, 2825, 661, 2381, 2381, 2381, 1771, 2840, 1122,
	3817, 3913, 1187, 1935, 2049, 3953, 1921, 1922, 1946, 2964,
	3773, 3642, 1909, 3649, 883, 3500, 3446, 3398, 1835, 668,
	3661, 3147, 1187, 2925, 3139, 1606, 4135, 3660, 3022, 2685,
	1877, 3018, 674, 2646, 1950, 2640, 1001, 2630, 1601, 2944,
	2989, 2030, 2019, 663, 2012, 1995, 3649, 3276, 3346, 3465,
	1001, 2241, 2954, 3988, 4034, 799, 800, 632, 3238, 2179,
	3915, 3002, 1835, 2148, 1936, 1937, 3014, 3015, 2973, 1606,
	1873, 3005, 3502, 2545, 2627, 2952, 3914, 1932, 1001, 1307,
	3739, 2739, 1161, 1605, 3031, 3011, 1412, 3035, 2977, 3877,
	2745, 3875, 2747, 3916, 2749, 2920, 2921, 2922, 964, 2953,
	1875, 3359, 964, 2970, 2962, 3818, 2936, 3033, 2095, 3032,
	2965, 2966, 3037, 3038, 1307, 1933, 2982, 1271, 1605, 3029,
	2951, 1271, 1772, 2767, 1187, 3044, 3028, 1876, 2947, 3019,
	1607, 787, 788, 1307, 1677, 1292, 3557, 2795, 1307, 2773,
	1538, 3089, 3601, 2968, 3092, 2969, 3332, 3061, 3097, 3099,
	2522, 2946, 2963, 2457, 3333, 1307, 3064, 2456, 2016, 3017,
	3044, 1307, 1605, 1307, 2978, 1607, 4226, 1187, 2455, 3053,
	3054, 2180, 2454, 3055, 680, 2986, 2987, 2988, 3084, 3044,
	1395, 2412, 1393, 3471, 3044, 1307, 2634, 2999, 3000, 3960,
	3001, 1381, 3124, 3063, 3006, 1307, 1911, 941, 3659, 3075,
	3012, 804, 1906, 3707, 1382, 3080, 3081, 1907, 3213, 3082,
	3558, 1122, 801, 802, 3074, 3155, 1938, 3206, 3138, 3826,
	1525, 3989, 3196, 2028, 3115, 1911, 4174, 2717, 3050, 2546,
	2547, 1766, 3756, 1823, 3093, 3133, 2717, 3057, 3873, 3100,
	2724, 2612, 2610, 1829, 1502, 3068, 3815, 2606, 1832, 4042,
	2993, 2414, 3076, 1307, 1307, 3071, 2413, 4031, 4037, 3164,
	3079, 1956, 3961, 3607, 3348, 3085, 2311, 3095, 3110, 1956,
	3113, 3094, 3106, 3069, 3102, 1307, 3101, 3070, 2985, 1292,
	1292, 1120, 3087, 3816, 1939, 4060, 4176, 1829, 789, 790,
	3136, 3176, 1832, 3755, 3023, 4126, 1120, 1583, 3183, 3974,
	3794, 3917, 3599, 3208, 2543, 3117, 3918, 1770, 1581, 1187,
	3156, 3827, 1187, 686, 1908, 3470, 689, 2917, 3207, 1560,
	3172, 631, 3148, 3174, 3175, 1558, 1120, 1535, 3178, 3253,
	3179, 1910, 3180, 3220, 3109, 4038, 3216, 3003, 2882, 3962,
	2814, 2631, 1001, 2690, 1448, 2572, 1773, 2536, 1001, 1001,
	944, 2481, 1001, 1001, 1001, 3161, 1001, 3214, 1292, 1803,
	1533, 1768, 1799, 1584, 3170, 1001, 1835, 3177, 163, 163,
	3232, 1480, 2918, 2731, 1001, 3181, 3182, 1001, 3194, 1771,
	3234, 3173, 1117, 1187, 3198, 3233, 3163, 1531, 3204, 1601,
	3231, 2755, 1001, 1912, 1529, 2754, 1527, 1117, 1518, 1516,
	1187, 1394, 2730, 1392, 3215, 2168, 2150, 1769, 1547, 2117,
	1835, 1835, 1001, 1001, 3256, 1001, 1001, 1001, 2381, 2381,
	1992, 3239, 803, 2596, 2594, 2139, 1808, 1117, 1861, 1709,
	2598, 2600, 2590, 1001, 1491, 1367, 3228, 1001, 2310, 1835,
	1835, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001,
	1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001,
	3236, 1001, 3222, 2958, 3223, 4101, 3224, 3682, 1001, 1001,
	1835, 3670, 1582, 1391, 3088, 1001, 2355, 2351, 4178, 4030,
	3737, 3687, 3633, 1580, 3498, 3490, 1001, 3451, 3418, 3209,
	3210, 3211, 3212, 3416, 1559, 3397, 3261, 1122, 1122, 1913,
	1557, 1001, 1534, 1914, 1772, 3142, 2381, 2381, 2381, 2381,
	2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381,
	2381, 2381, 2381, 2381, 2381, 3272, 2381, 3137, 3288, 3129,
	1187, 3295, 3305, 3078, 3306, 1532, 2684, 1116, 1120, 2679,
	3364, 2658, 1903, 3265, 3266, 3279, 3281, 3282, 1118, 2349,
	3303, 2644, 2959, 1116, 3304, 3343, 3308, 3283, 2637, 2624,
	3310, 1001, 1530, 3335, 1118, 2609, 2353, 2354, 2352, 1528,
	3381, 1526, 2069, 1517, 1515, 2067, 2064, 1001, 1001, 1271,
	3302, 1904, 2061, 3392, 3393, 2056, 2054, 3336, 2050, 2041,
	1991, 1829, 2592, 1989, 1972, 1185, 1832, 2138, 1957, 1286,
	2957, 1940, 163, 3355, 3356, 1927, 1915, 1001, 1001, 3344,
	3352, 3353, 4152, 2597, 2595, 2599, 2601, 2591, 2593, 892,
	3273, 3151, 3902, 964, 1610, 2961, 3154, 2348, 2350, 1271,
	1810, 3366, 3380, 3096, 1001, 1829, 1829, 1097, 1966, 1117,
	1832, 1832, 2199, 3296, 4168, 3367, 3213, 4070, 1390, 3761,
	3754, 3753, 3694, 2793, 2718, 3206, 1307, 2604, 1899, 1909,
	1347, 3904, 1098, 2505, 1829, 1829, 2525, 2505, 3510, 1832,
	1832, 2199, 3311, 1923, 3663, 1835, 2108, 2503, 3417, 1433,
	3419, 2524, 3431, 3433, 2134, 1295, 3430, 3426, 3350, 1578,
	1579, 670, 3447, 3401, 2133, 1829, 2027, 4069, 1432, 2115,
	1832, 3689, 3339, 1307, 1514, 3939, 1617, 1618, 3388, 3379,
	1001, 1617, 1618, 2960, 3441, 3608, 3586, 2548, 1122, 1001,
	2529, 3512, 1614, 3457, 4170, 3486, 3469, 3229, 1611, 4162,
	2671, 610, 4131, 2016, 3473, 1620, 2543, 1307, 1307, 1307,
	3450, 3208, 2794, 233, 3521, 1965, 3445, 2623, 2136, 3504,
	1870, 3507, 2577, 1307, 2585, 2584, 3207, 3493, 2567, 3487,
	3456, 897, 899, 901, 2717, 2531, 1099, 3444, 1619, 3503,
	1823, 726, 1187, 1619, 3488, 4029, 1271, 769, 1433, 3492,
	1433, 3997, 2569, 2533, 621, 3994, 1009, 3959, 593, 3891,
	3870, 3525, 4199, 2991, 1187, 2568, 2532, 1001, 1001, 3489,
	3479, 3374, 3141, 1001, 1001, 1835, 3491, 2665, 1001, 1001,
	2605, 1001, 2399, 1865, 1823, 1001, 3518, 3514, 3505, 1816,
	3519, 3508, 3824, 4225, 1120, 1120, 1001, 3513, 2888, 2889,
	240, 240, 240, 3996, 599, 600, 1318, 615, 599, 615,
	625, 630, 1001, 3520, 4062, 648, 3526, 3527, 3560, 4063,
	654, 3535, 3528, 3568, 3544, 3534, 240, 3537, 4062, 1617,
	1618, 3460, 3531, 4063, 3468, 3578, 3532, 1501, 3559, 2306,
	3506, 2497, 2498, 1500, 783, 2495, 2496, 3384, 2497, 3103,
	240, 3553, 4180, 2495, 2339, 1562, 3892, 3856, 1561, 1080,
	3690, 3572, 3686, 3685, 3574, 1617, 1618, 3496, 3383, 3284,
	1829, 3090, 1122, 1703, 1702, 1832, 4213, 3023, 4185, 3134,
	1122, 3950, 3851, 3809, 1187, 3806, 1187, 1648, 3718, 3140,
	3626, 3536, 3516, 1122, 1620, 1117, 1117, 3209, 3210, 3211,
	3212, 3474, 3472, 3414, 3409, 3171, 3145, 3613, 1187, 3144,
	2752, 2736, 2735, 2675, 3548, 2650, 2625, 2474, 2473, 2271,
	2135, 2132, 2131, 2130, 2129, 2044, 3598, 1619, 1001, 3630,
	3631, 2043, 2042, 2025, 2002, 1998, 3543, 1997, 3616, 1996,
	1994, 1993, 1577, 1576, 1522, 1419, 1418, 3189, 3190, 1417,
	3664, 1416, 1415, 1414, 1413, 1187, 1411, 1406, 3655, 3654,
	1405, 599, 599, 1187, 1404, 1403, 1402, 3619, 1362, 240,
	1361, 3666, 3667, 3612, 3610, 3611, 3665, 3615, 3609, 1360,
	1359, 1358, 2977, 3691, 3620, 3692, 3614, 3632, 3623, 163,
	1357, 1307, 1307, 1352, 1346, 1344, 3605, 1343, 1178, 1177,
	1829, 1176, 3653, 1175, 2016, 1832, 1146, 1145, 1871, 903,
	889, 3708, 3829, 3647, 1571, 1120, 84, 3684, 1295, 1187,
	3705, 3678, 1354, 714, 1307, 3693, 1625, 1802, 78, 1963,
	3413, 862, 4059, 1340, 3980, 721, 4044, 3039, 2588, 2116,
	3730, 1523, 3697, 2118, 1271, 3680, 2972, 3669, 2440, 4021,
	3702, 1001, 3582, 2850, 3946, 3787, 2309, 1707, 3677, 2929,
	3679, 1307, 1307, 1307, 1647, 1649, 80, 985, 1031, 3714,
	3741, 3713, 1187, 3735, 3634, 3729, 3400, 1901, 2707, 3711,
	3710, 1820, 3757, 3760, 1001, 1001, 1001, 3717, 1823, 3744,
	3740, 3709, 3724, 3727, 1822, 3703, 951, 3728, 1190, 3704,
	1881, 991, 1187, 1897, 1890, 2475, 2359, 1001, 3742, 1008,
	1001, 1001, 1005, 1824, 1826, 1007, 1117, 1006, 1640, 3748,
	1001, 1825, 1726, 1835, 1004, 1819, 3495, 3494, 1001, 1001,
	2183, 1271, 1823, 1823, 2633, 2669, 1398, 864, 1885, 2265,
	2293, 3764, 1116, 1187, 3763, 1307, 2839, 3768, 1700, 966,
	3774, 987, 2290, 1118, 1138, 976, 3779, 1116, 1187, 965,
	2955, 1823, 1823, 3158, 3373, 3745, 1001, 2178, 1118, 3766,
	730, 3796, 2885, 1001, 2296, 1131, 2382, 2375, 2371, 2659,
	1587, 1001, 1679, 1835, 2670, 2381, 3790, 1116, 1173, 969,
	2263, 1001, 1823, 3811, 1001, 1691, 2819, 3749, 1118, 1120,
	1271, 2188, 3165, 1001, 2975, 3802, 3803, 1120, 2468, 3801,
	1187, 4066, 3292, 2006, 3805, 1096, 1095, 1094, 4050, 4047,
	1120, 1307, 1307, 3810, 1984, 3529, 1271, 3122, 1874, 3850,
	3812, 2381, 2489, 1669, 3130, 981, 1641, 1291, 2940, 3197,
	1364, 653, 3834, 993, 1668, 2603, 3833, 2602, 3956, 1160,
	1159, 1158, 3021, 4233, 3861, 3410, 209, 3124, 1187, 3885,
	3784, 1307, 2787, 3876, 1608, 1600, 206, 208, 3852, 2377,
	3848, 207, 3719, 3377, 2981, 4129, 3890, 3842, 3843, 1001,
	1001, 3864, 3858, 3866, 3428, 3865, 3869, 3114, 21, 3874,
	3889, 20, 19, 105, 40, 18, 3903, 119, 1001, 1001,
	1117, 3857, 135, 3884, 3859, 3860, 3901, 3899, 1117, 134,
	3922, 3923, 3897, 133, 132, 1001, 1835, 131, 3863, 3900,
	137, 1117, 130, 129, 3907, 1271, 3906, 3898, 3905, 3868,
	3920, 124, 3744, 128, 3926, 127, 2816, 2817, 126, 125,
	1001, 123, 1292, 1001, 122, 121, 120, 118, 1829, 117,
	3454, 116, 3963, 1832, 3934, 115, 114, 113, 1133, 112,
	111, 110, 1001, 3952, 3944, 1628, 1629, 1621, 1622, 1623,
	1624, 1626, 1627, 109, 108, 107, 106, 644, 3935, 3936,
	2381, 3951, 641, 1271, 57, 56, 1143, 104, 103, 17,
	38, 14, 61, 3969, 62, 648, 16, 1823, 13, 1116,
	33, 3968, 83, 1001, 1001, 95, 3983, 94, 1829, 34,
	1118, 92, 91, 1832, 1001, 3840, 32, 1001, 240, 1307,
	240, 240, 1283, 15, 240, 240, 1298, 3976, 1295, 1307,
	1307, 3522, 3523, 3524, 89, 3978, 88, 31, 3991, 3992,
	240, 29, 1320, 3990, 4012, 3999, 1307, 1448, 4001, 11,
	9, 3889, 8, 35, 3995, 1787, 2911, 2912, 2913, 12,
	1001, 1001, 4008, 5, 4004, 4003, 168, 1349, 4009, 167,
	170, 166, 3938, 169, 3977, 82, 165, 164, 3982, 1366,
	4017, 1298, 4018, 81, 27, 240, 240, 4016, 1283, 4041,
	10, 4039, 160, 1001, 1001, 3886, 1001, 3484, 240, 3998,
	4026, 76, 162, 161, 159, 4064, 1408, 4049, 4052, 158,
	157, 77, 74, 4061, 4040, 156, 155, 4071, 240, 4068,
	240, 240, 2202, 1283, 240, 1298, 75, 1823, 154, 4054,
	25, 6, 60, 4010, 4011, 648, 4084, 240, 240, 4058,
	4025, 1829, 7, 1001, 1001, 1001, 1832, 3769, 4083, 3217,
	4015, 98, 99, 4085, 36, 4075, 72, 4078, 71, 70,
	783, 4080, 24, 59, 4113, 23, 1001, 197, 196, 4118,
	195, 194, 193, 4053, 192, 187, 4057, 186, 4100, 4099,
	4097, 4098, 191, 189, 188, 190, 185, 200, 199, 201,
	4116, 198, 203, 184, 182, 178, 177, 4140, 181, 4138,
	183, 180, 4072, 179, 176, 4073, 202, 4147, 152, 2307,
	153, 4149, 4142, 2671, 1001, 67, 4139, 151, 150, 3853,
	4148, 149, 148, 4153, 4144, 147, 146, 145, 66, 240,
	22, 2, 1, 0, 0, 0, 0, 0, 0, 4169,
	0, 0, 4172, 4159, 4160, 4163, 240, 0, 4165, 4161,
	0, 0, 0, 4145, 4146, 0, 4171, 4049, 4173, 4150,
	4052, 4187, 1001, 4179, 1001, 4175, 4190, 4182, 4068, 0,
	4192, 4128, 4194, 4186, 0, 4193, 4188, 0, 0, 0,
	0, 0, 4181, 0, 0, 1116, 1116, 0, 0, 0,
	0, 0, 0, 4189, 0, 4191, 1118, 1118, 4208, 4206,
	0, 2777, 0, 0, 2450, 0, 0, 0, 4214, 0,
	0, 0, 4215, 0, 0, 1448, 0, 0, 4217, 0,
	1001, 1001, 4220, 0, 0, 0, 0, 0, 1001, 4223,
	1001, 1001, 4219, 4229, 0, 0, 0, 0, 0, 4237,
	0, 0, 0, 4236, 0, 4240, 0, 0, 0, 0,
	0, 0, 68, 0, 4239, 0, 4238, 0, 0, 4241,
	0, 4244, 0, 4249, 4248, 0, 0, 4250, 69, 0,
	4251, 4255, 4254, 4247, 4253, 4246, 0, 4256, 1001, 0,
	0, 2377, 2377, 4259, 73, 3765, 4263, 3767, 4265, 0,
	0, 0, 4266, 0, 0, 4260, 0, 0, 4262, 0,
	0, 0, 0, 2500, 0, 0, 0, 0, 0, 0,
	4230, 4231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4261, 85,
	0, 1271, 0, 0, 240, 0, 240, 0, 0, 3807,
	240, 0, 0, 100, 0, 1823, 1271, 0, 86, 97,
	3249, 3250, 0, 1320, 1283, 240, 0, 240, 0, 1617,
	1618, 0, 240, 1320, 615, 0, 1271, 240, 1320, 0,
	0, 2377, 2377, 2377, 648, 0, 1116, 0, 0, 0,
	964, 1648, 0, 0, 0, 0, 0, 1118, 1620, 0,
	0, 0, 0, 0, 964, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3867, 0, 0, 0, 0,
	0, 1619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3312, 3313,
	3314, 3315, 3316, 3317, 3318, 3319, 3320, 3321, 3322, 3323,
	3324, 3325, 3326, 3327, 3328, 3329, 3330, 0, 3334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 0, 0, 0, 0, 0, 0, 0, 0,
	1625, 90, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 1823, 0,
	240, 0, 0, 0, 0, 0, 0, 1617, 1618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1647, 1649,
	1116, 171, 93, 0, 96, 0, 0, 0, 1116, 1648,
	0, 1118, 0, 0, 0, 0, 1620, 0, 0, 1118,
	0, 1116, 0, 0, 0, 0, 0, 0, 210, 0,
	240, 0, 1118, 0, 240, 0, 778, 0, 240, 0,
	136, 0, 0, 0, 240, 0, 0, 0, 0, 1619,
	0, 0, 1640, 0, 0, 0, 0, 240, 0, 240,
	0, 240, 0, 1448, 1448, 599, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 2045,
	1448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 1271, 138, 0, 1271, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 648,
	0, 0, 0, 783, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1625, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 240, 0,
	1283, 240, 0, 0, 0, 0, 0, 1271, 0, 0,
	1641, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	0, 0, 240, 0, 1271, 0, 1647, 1649, 0, 0,
	0, 0, 240, 240, 0, 240, 0, 240, 0, 240,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2941, 0, 0,
	0, 2144, 0, 0, 2145, 0, 2146, 0, 0, 0,
	0, 0, 0, 0, 0, 2377, 2377, 0, 240, 0,
	1640, 0, 0, 0, 0, 0, 0, 0, 0, 2967,
	1617, 1618, 0, 0, 0, 0, 0, 0, 0, 630,
	0, 0, 0, 648, 2980, 1765, 0, 0, 0, 0,
	0, 0, 1648, 0, 0, 0, 0, 0, 0, 1620,
	0, 0, 0, 0, 2997, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 1621, 1622, 1623, 1624, 1626, 1627, 0, 0, 0,
	0, 0, 1619, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 1639, 2377, 2377, 2377, 2377, 2377, 2377, 2377,
	2377, 2377, 2377, 2377, 2377, 2377, 2377, 2377, 2377, 2377,
	2377, 2377, 0, 2377, 1617, 1618, 0, 1650, 1651, 1652,
	1660, 1661, 1662, 0, 0, 0, 0, 0, 1641, 0,
	0, 0, 0, 0, 0, 1653, 1648, 0, 0, 0,
	0, 0, 0, 1620, 0, 0, 0, 0, 0, 0,
	0, 1666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1642, 1643, 1644, 1645, 0, 1619, 0, 0, 0,
	0, 1625, 0, 0, 0, 0, 1639, 0, 0, 0,
	599, 0, 0, 0, 1636, 0, 0, 0, 0, 2980,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 1617,
	1618, 950, 0, 0, 599, 1660, 1661, 1662, 0, 1647,
	1649, 240, 0, 599, 0, 0, 0, 0, 0, 0,
	0, 1648, 0, 0, 0, 240, 0, 0, 1620, 0,
	0, 0, 0, 0, 0, 0, 1666, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 1621,
	1622, 1623, 1624, 1626, 1627, 1642, 1643, 1644, 1645, 0,
	0, 1619, 0, 1640, 0, 1625, 0, 0, 0, 0,
	0, 1639, 0, 0, 0, 68, 0, 0, 0, 1636,
	0, 0, 0, 0, 0, 0, 240, 0, 615, 240,
	0, 69, 0, 0, 1657, 0, 0, 1667, 0, 0,
	0, 0, 0, 1647, 1649, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 1271, 0, 0, 1663,
	0, 1664, 0, 0, 0, 0, 0, 0, 1634, 1635,
	0, 1286, 0, 2514, 1185, 0, 0, 0, 1271, 0,
	0, 0, 240, 0, 0, 79, 1655, 3793, 0, 0,
	1642, 1643, 1644, 1645, 240, 0, 0, 1640, 0, 0,
	1625, 1646, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1641, 85, 0, 240, 0, 1665, 0, 0, 1657,
	0, 0, 1667, 3820, 0, 0, 100, 0, 1647, 1649,
	0, 86, 97, 1654, 0, 3269, 0, 0, 0, 240,
	2615, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3285, 1634, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1320, 0, 0, 240, 68, 0,
	0, 1655, 0, 0, 240, 0, 0, 0, 0, 0,
	87, 0, 1640, 2654, 69, 1646, 0, 0, 1271, 0,
	1271, 0, 0, 2514, 0, 599, 0, 0, 2674, 0,
	73, 0, 0, 0, 240, 1641, 0, 240, 0, 0,
	0, 240, 1271, 240, 0, 0, 0, 0, 1283, 0,
	240, 240, 0, 1298, 1298, 0, 0, 0, 0, 0,
	1658, 0, 0, 2700, 783, 0, 2514, 2514, 79, 1630,
	1628, 1629, 1621, 1622, 1623, 1624, 1626, 1627, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 1271,
	0, 0, 0, 0, 0, 0, 0, 1271, 0, 240,
	1283, 240, 3943, 0, 1320, 85, 1320, 0, 0, 1283,
	1646, 1283, 3376, 1283, 0, 0, 0, 0, 0, 100,
	0, 0, 0, 0, 86, 97, 0, 0, 0, 0,
	1641, 0, 0, 0, 90, 0, 0, 0, 240, 240,
	240, 240, 1283, 240, 0, 240, 0, 0, 0, 0,
	0, 0, 1656, 1271, 0, 1658, 1631, 1632, 1638, 1659,
	1637, 1633, 0, 1630, 1628, 1629, 1621, 1622, 1623, 1624,
	1626, 1627, 0, 87, 171, 93, 240, 96, 0, 0,
	3589, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 1271, 0, 0, 778,
	0, 0, 0, 136, 0, 0, 0, 0, 2888, 2889,
	0, 2906, 2907, 2908, 0, 0, 0, 0, 0, 950,
	0, 0, 0, 950, 0, 0, 1271, 0, 0, 3258,
	0, 0, 0, 212, 0, 0, 0, 1656, 0, 0,
	0, 0, 0, 0, 1659, 1637, 1633, 0, 1630, 1628,
	1629, 1621, 1622, 1623, 1624, 1626, 1627, 138, 0, 0,
	0, 0, 0, 1320, 0, 0, 0, 1271, 0, 0,
	1322, 175, 1328, 0, 1334, 0, 0, 0, 0, 211,
	2903, 0, 1271, 0, 0, 0, 0, 90, 0, 204,
	0, 0, 0, 0, 0, 0, 0, 205, 2888, 2889,
	0, 2906, 2907, 2908, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 964, 1461,
	0, 0, 0, 0, 0, 0, 0, 171, 93, 0,
	96, 0, 2888, 2889, 1271, 2906, 2907, 2908, 0, 0,
	0, 0, 2377, 0, 0, 0, 1449, 0, 0, 0,
	0, 0, 0, 3257, 210, 0, 0, 0, 0, 0,
	0, 0, 778, 1467, 0, 1472, 136, 0, 0, 2894,
	2903, 0, 0, 0, 0, 1481, 0, 1486, 0, 0,
	240, 0, 1271, 0, 0, 0, 0, 0, 2377, 0,
	0, 0, 1617, 1618, 0, 240, 212, 0, 0, 0,
	599, 0, 0, 0, 2903, 599, 0, 0, 599, 0,
	0, 599, 599, 0, 1648, 0, 0, 599, 0, 0,
	138, 1620, 0, 2909, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 1543, 1320, 0, 1549,
	0, 0, 211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 0, 1619, 0, 0, 0, 1320, 2894,
	205, 2904, 0, 0, 1639, 0, 0, 0, 0, 0,
	0, 0, 1636, 0, 0, 0, 0, 0, 0, 2514,
	2514, 240, 1459, 1298, 0, 0, 2514, 0, 3618, 3025,
	0, 2910, 0, 2894, 0, 0, 0, 2514, 3025, 0,
	2514, 3025, 3025, 0, 0, 0, 0, 0, 0, 0,
	3628, 0, 0, 2909, 0, 240, 240, 1298, 240, 0,
	0, 0, 0, 3252, 0, 0, 0, 964, 964, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 0, 2377, 1298, 240,
	0, 0, 1283, 1642, 1643, 1644, 1645, 2909, 0, 0,
	0, 2904, 0, 1625, 2514, 0, 3091, 2514, 1298, 0,
	1688, 2514, 2514, 1298, 0, 0, 1701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2905,
	0, 0, 0, 0, 0, 2904, 240, 0, 0, 0,
	0, 1647, 1649, 0, 0, 0, 0, 0, 0, 0,
	240, 3118, 0, 0, 3120, 2514, 0, 0, 240, 0,
	0, 0, 240, 0, 1298, 0, 1634, 1635, 964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2654, 0, 0, 1283, 0, 240, 0, 0,
	2514, 0, 599, 0, 0, 1640, 0, 0, 0, 2514,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	240, 240, 0, 0, 0, 0, 0, 0, 0, 2905,
	1759, 1759, 1759, 0, 1185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 2654, 0,
	0, 2654, 0, 0, 0, 0, 0, 0, 0, 0,
	2900, 2901, 2902, 2905, 3785, 0, 0, 2899, 2897, 2898,
	2890, 2891, 2892, 2893, 2895, 2896, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3227, 0, 0, 1283, 240, 0, 240,
	0, 0, 0, 1646, 950, 3785, 0, 0, 0, 1617,
	1618, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2202, 0, 0, 1641, 0, 0, 0, 0, 0, 0,
	0, 1648, 240, 0, 0, 0, 0, 0, 1620, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2900, 2901, 2902, 0, 0, 0, 0, 2899, 2897, 2898,
	2890, 2891, 2892, 2893, 2895, 2896, 0, 0, 0, 0,
	0, 1619, 2202, 0, 0, 0, 0, 0, 0, 0,
	0, 1639, 0, 0, 2900, 2901, 2902, 0, 3290, 1636,
	0, 2899, 2897, 2898, 2890, 2891, 2892, 2893, 2895, 2896,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3247, 0, 0, 0, 0, 0, 0, 0, 1637, 1633,
	0, 1630, 1628, 1629, 1621, 1622, 1623, 1624, 1626, 1627,
	1642, 1643, 1644, 1645, 0, 0, 0, 0, 0, 0,
	1625, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 599, 599, 0, 1647, 1649,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1320, 0, 144,
	0, 0, 0, 1634, 1635, 0, 68, 0, 44, 43,
	1320, 1320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 69, 0, 0, 139, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 63, 0,
	0, 0, 0, 0, 0, 46, 0, 141, 0, 0,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	0, 0, 0, 0, 45, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	48, 64, 0, 0, 0, 0, 0, 0, 49, 0,
	0, 0, 0, 85, 1298, 240, 0, 142, 0, 0,
	0, 0, 0, 0, 0, 47, 240, 100, 0, 0,
	1646, 0, 86, 97, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 240,
	1641, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 50, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2514, 240, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2700, 2700, 0, 0, 0, 0, 783, 783, 2514,
	0, 0, 2654, 2654, 0, 0, 783, 2514, 0, 0,
	0, 2177, 0, 2181, 0, 0, 0, 0, 0, 0,
	2195, 0, 0, 0, 0, 0, 240, 2204, 2205, 2206,
	2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216,
	2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226,
	2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236,
	2237, 2238, 0, 2244, 0, 2246, 2247, 2248, 2249, 0,
	0, 0, 0, 0, 0, 1637, 1633, 0, 1630, 1628,
	1629, 1621, 1622, 1623, 1624, 1626, 1627, 2273, 0, 0,
	0, 0, 0, 0, 0, 0, 3583, 0, 1688, 0,
	0, 0, 2288, 0, 0, 90, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 0, 2318, 2321,
	2324, 2327, 0, 2331, 2332, 2333, 2334, 2335, 2336, 2337,
	0, 0, 0, 55, 0, 0, 0, 0, 0, 65,
	0, 0, 0, 0, 54, 171, 93, 0, 96, 0,
	0, 2373, 52, 2384, 2386, 2391, 143, 0, 240, 0,
	1617, 1618, 0, 53, 1320, 0, 240, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 240,
	58, 0, 1648, 0, 136, 0, 0, 0, 0, 1620,
	0, 0, 0, 0, 0, 0, 0, 0, 140, 0,
	0, 0, 2514, 2514, 2514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 1320, 0, 0, 0, 0,
	0, 0, 1619, 2514, 0, 3025, 0, 0, 1320, 1320,
	240, 1298, 1639, 0, 0, 0, 0, 0, 138, 0,
	1636, 0, 1298, 240, 1298, 240, 0, 0, 0, 0,
	1010, 0, 175, 0, 0, 0, 2514, 0, 2514, 240,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 0, 0, 0, 0, 205, 0,
	0, 0, 0, 0, 2514, 0, 0, 0, 0, 3721,
	0, 3246, 0, 0, 241, 241, 241, 240, 0, 0,
	174, 0, 0, 3, 0, 0, 240, 0, 0, 0,
	0, 1642, 1643, 1644, 1645, 0, 0, 0, 0, 0,
	241, 1625, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1320, 0, 0, 0, 241, 1617, 1618, 0, 1650, 1651,
	1652, 1660, 1661, 1662, 0, 0, 0, 0, 0, 1647,
	1649, 0, 0, 0, 0, 0, 1653, 1648, 0, 0,
	0, 0, 0, 0, 1620, 1617, 1618, 0, 0, 0,
	0, 0, 1666, 0, 1634, 1635, 0, 0, 0, 0,
	0, 0, 0, 2618, 2619, 0, 2621, 1648, 0, 0,
	0, 0, 0, 0, 1620, 0, 0, 1619, 0, 0,
	0, 0, 0, 1640, 0, 0, 0, 1639, 0, 0,
	0, 0, 0, 0, 0, 1636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1619, 0, 0,
	2514, 0, 3025, 0, 0, 3814, 0, 1639, 0, 0,
	0, 0, 0, 240, 0, 1636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 648,
	0, 0, 2888, 2889, 0, 2906, 2907, 2908, 1283, 0,
	0, 0, 0, 0, 0, 0, 1642, 1643, 1644, 1645,
	0, 0, 1298, 240, 0, 0, 1625, 0, 0, 0,
	0, 1646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3814, 0, 0, 0, 1642, 1643, 1644, 1645,
	2514, 1641, 0, 0, 0, 1657, 1625, 0, 1667, 0,
	2751, 3894, 0, 0, 1647, 1649, 0, 0, 0, 0,
	0, 0, 0, 1320, 2903, 0, 0, 0, 0, 0,
	1663, 0, 1664, 0, 0, 0, 0, 0, 0, 1634,
	1635, 0, 0, 0, 1647, 1649, 0, 0, 0, 0,
	0, 0, 240, 240, 0, 0, 0, 1655, 0, 0,
	1670, 1671, 0, 0, 0, 0, 0, 0, 1640, 1634,
	1635, 0, 0, 0, 0, 0, 3290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3814, 0, 0, 0, 0, 1665, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2894, 1654, 2799, 2800, 0, 0, 0,
	0, 2806, 0, 0, 0, 0, 1637, 1633, 0, 1630,
	1628, 1629, 1621, 1622, 1623, 1624, 1626, 1627, 0, 240,
	2820, 2821, 0, 0, 0, 0, 2288, 0, 0, 0,
	0, 0, 0, 0, 0, 2828, 0, 0, 3721, 0,
	0, 0, 0, 0, 0, 0, 1646, 2909, 0, 0,
	0, 2842, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 3025, 0, 0, 0, 0, 1641, 0, 2854, 0,
	0, 0, 0, 0, 0, 0, 1646, 0, 0, 0,
	0, 0, 0, 0, 0, 2904, 0, 1320, 0, 1320,
	0, 1658, 0, 0, 0, 0, 1641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4035, 0, 0, 0, 0, 0,
	0, 1320, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 2514, 2391, 2391, 2391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 240,
	0, 0, 0, 0, 0, 0, 2945, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1656, 0, 3290, 0, 1631, 1632, 1638,
	1659, 1637, 1633, 0, 1630, 1628, 1629, 1621, 1622, 1623,
	1624, 1626, 1627, 2905, 0, 0, 0, 3591, 0, 0,
	0, 3590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1637, 1633, 0, 1630, 1628, 1629, 1621, 1622, 1623,
	1624, 1626, 1627, 0, 0, 0, 2514, 0, 0, 0,
	0, 950, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 950, 2888, 2889, 3814, 2906,
	2907, 2908, 241, 1191, 241, 241, 0, 1191, 241, 241,
	0, 1191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3042, 241, 0, 0, 0, 0, 1320,
	0, 2514, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2900, 2901, 2902, 1191, 2903, 241,
	241, 2899, 2897, 2898, 2890, 2891, 2892, 2893, 2895, 2896,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	1617, 1618, 0, 1650, 1651, 1652, 1660, 1661, 1662, 0,
	0, 0, 241, 0, 241, 241, 0, 0, 241, 0,
	1191, 1653, 1648, 0, 0, 0, 1191, 0, 0, 1620,
	1191, 241, 241, 0, 0, 0, 0, 1666, 0, 2700,
	0, 0, 0, 0, 1191, 0, 0, 0, 0, 0,
	0, 0, 2700, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1619, 0, 0, 0, 0, 2894, 0, 0,
	0, 0, 1639, 0, 0, 0, 0, 0, 0, 0,
	1636, 0, 0, 0, 0, 1617, 1618, 0, 1650, 1651,
	1652, 1660, 1661, 1662, 1191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1653, 1648, 0, 0,
	0, 0, 0, 0, 1620, 0, 0, 0, 0, 0,
	0, 0, 1666, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 1619, 0, 0,
	0, 1642, 1643, 1644, 1645, 0, 0, 1639, 0, 2904,
	0, 1625, 0, 0, 0, 1636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1657, 0, 0, 1667, 0, 0, 0, 2195, 0, 1647,
	1649, 0, 0, 3244, 3245, 0, 0, 3248, 0, 0,
	0, 3251, 0, 0, 0, 1663, 0, 1664, 0, 0,
	3255, 0, 0, 0, 1634, 1635, 0, 0, 0, 3262,
	0, 0, 2945, 0, 0, 0, 1642, 1643, 1644, 1645,
	0, 0, 1655, 0, 0, 0, 1625, 3274, 0, 0,
	0, 0, 0, 1640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3297, 3298, 0,
	3299, 3300, 3301, 0, 0, 1657, 0, 2905, 1667, 0,
	0, 0, 1665, 0, 1647, 1649, 0, 0, 3307, 0,
	0, 0, 3309, 0, 0, 0, 0, 0, 0, 1654,
	1663, 0, 1664, 0, 0, 0, 0, 0, 0, 1634,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3337, 3338, 0, 0, 1655, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 3349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1646, 0, 0, 0, 0, 3358, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 1665, 0, 0,
	0, 1641, 0, 0, 0, 1191, 0, 0, 0, 241,
	241, 241, 0, 0, 1654, 0, 241, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 1658, 0, 2900, 2901,
	2902, 0, 0, 0, 1191, 2899, 2897, 2898, 2890, 2891,
	2892, 2893, 2895, 2896, 0, 0, 3394, 0, 0, 0,
	0, 0, 0, 0, 0, 1191, 0, 0, 0, 0,
	0, 0, 3403, 3406, 0, 0, 1646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1641, 0, 0, 0,
	0, 0, 0, 3427, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1658, 0, 0, 0, 0, 0, 0, 1656, 0,
	0, 0, 1631, 1632, 1638, 1659, 1637, 1633, 0, 1630,
	1628, 1629, 1621, 1622, 1623, 1624, 1626, 1627, 0, 0,
	0, 0, 2863, 0, 0, 0, 2864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 1191, 1191, 241, 1759, 0, 0, 0, 0,
	0, 0, 1191, 1656, 3515, 0, 0, 1631, 1632, 1638,
	1659, 1637, 1633, 0, 1630, 1628, 1629, 1621, 1622, 1623,
	1624, 1626, 1627, 0, 0, 0, 0, 2284, 0, 0,
	0, 2285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 241, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1617,
	1618, 241, 0, 241, 0, 241, 0, 0, 0, 0,
	0, 0, 3561, 3562, 0, 0, 0, 0, 3566, 3567,
	0, 1648, 0, 3570, 3571, 0, 0, 0, 1620, 0,
	3575, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 3579, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3584, 0, 0,
	0, 1619, 0, 0, 0, 0, 0, 0, 0, 0,
	1191, 1639, 1191, 0, 1191, 0, 0, 0, 0, 1636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1191, 1191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1191, 241, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 1191, 0, 1191, 1191, 1191, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	2805, 0, 0, 0, 0, 0, 241, 241, 0, 241,
	0, 241, 0, 241, 0, 241, 0, 0, 0, 0,
	1642, 1643, 1644, 1645, 0, 0, 0, 0, 0, 0,
	1625, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3406, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1647, 1649,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1634, 1635, 0, 0, 0, 0, 0,
	1191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1617, 1618, 0, 1650, 1651, 1652, 1660, 1661, 1662,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1653, 1648, 0, 0, 0, 0, 0, 0,
	1620, 0, 0, 0, 0, 0, 0, 0, 1666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3406, 0, 0, 0,
	0, 0, 0, 1619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1639, 0, 0, 0, 1191, 0, 0,
	0, 1636, 0, 0, 0, 0, 0, 0, 0, 3780,
	3781, 3782, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 997, 0, 0, 0, 0, 0, 0,
	1646, 0, 2195, 0, 0, 3791, 3792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1641, 0, 0, 3800, 0, 0, 0, 0, 0, 0,
	0, 1617, 1618, 0, 0, 0, 1191, 239, 239, 239,
	0, 0, 1642, 1643, 1644, 1645, 0, 0, 0, 0,
	0, 0, 1625, 1648, 0, 0, 0, 0, 0, 241,
	1620, 0, 1191, 687, 0, 0, 0, 0, 3406, 0,
	0, 0, 0, 0, 241, 0, 3839, 0, 0, 0,
	0, 1657, 0, 0, 1667, 0, 3846, 687, 0, 950,
	1647, 1649, 0, 1619, 0, 0, 0, 0, 3854, 0,
	0, 0, 0, 1639, 0, 0, 1663, 0, 1664, 0,
	0, 1636, 0, 0, 0, 1634, 1635, 0, 0, 0,
	241, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 1191, 0, 1655, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1640, 1637, 1633, 0, 1630, 1628,
	1629, 1621, 1622, 1623, 1624, 1626, 1627, 0, 0, 0,
	0, 1191, 2798, 0, 0, 0, 0, 1112, 0, 0,
	0, 0, 0, 1665, 3406, 3406, 241, 0, 0, 0,
	0, 0, 1642, 1643, 1644, 1645, 0, 0, 241, 0,
	1654, 0, 1625, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 1119, 0, 0, 0,
	0, 235, 235, 595, 0, 0, 0, 0, 241, 1191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1647, 1649, 0, 1191, 0, 3955, 0, 0, 3958, 0,
	0, 0, 1646, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1634, 1635, 3406, 0, 0,
	0, 0, 1641, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 1640, 0, 0, 1658, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 950, 950,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 3406,
	0, 241, 3406, 0, 0, 241, 0, 241, 0, 0,
	0, 0, 0, 0, 241, 241, 0, 0, 0, 1191,
	1191, 0, 1191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 2195, 0, 0, 1191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 241, 0, 0, 0, 1656,
	0, 0, 1646, 1631, 1632, 1638, 1659, 1637, 1633, 950,
	1630, 1628, 1629, 1621, 1622, 1623, 1624, 1626, 1627, 0,
	0, 0, 1641, 0, 0, 0, 0, 3260, 0, 0,
	0, 0, 241, 241, 241, 241, 0, 241, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4096, 4096,
	4096, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 986, 102, 241, 0,
	0, 4117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4096,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1637, 1633, 0,
	1630, 1628, 1629, 1621, 1622, 1623, 1624, 1626, 1627, 0,
	0, 0, 0, 102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3406, 0, 3406,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4096, 4224, 0, 0, 744,
	925, 0, 0, 4228, 0, 0, 0, 0, 0, 0,
	0, 945, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 745, 239, 239, 0,
	0, 239, 239, 0, 0, 1191, 0, 746, 0, 1106,
	0, 0, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 747, 1617, 1618,
	0, 1650, 1651, 1652, 1660, 1661, 1662, 1191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 766, 0, 0,
	1648, 0, 1191, 0, 0, 0, 0, 1620, 0, 0,
	0, 0, 239, 239, 0, 1666, 748, 0, 0, 0,
	0, 0, 1191, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 749,
	1619, 0, 0, 0, 0, 239, 0, 239, 239, 0,
	1639, 239, 0, 0, 0, 241, 0, 0, 1636, 750,
	0, 0, 751, 0, 239, 239, 0, 0, 0, 0,
	0, 673, 0, 0, 0, 0, 0, 0, 0, 1191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	241, 0, 241, 0, 0, 765, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 1191, 0, 0, 0, 0, 1182,
	0, 0, 0, 0, 1191, 1290, 0, 0, 0, 1642,
	1643, 1644, 1645, 1191, 0, 0, 0, 0, 1191, 1625,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 762,
	0, 0, 0, 0, 0, 1191, 239, 0, 0, 0,
	241, 1191, 0, 1191, 0, 0, 0, 1191, 1657, 0,
	0, 1667, 0, 239, 241, 0, 0, 1647, 1649, 0,
	0, 0, 241, 0, 0, 1191, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 1191, 0, 0, 0, 1400,
	0, 0, 1634, 1635, 753, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1423,
	1655, 1423, 1423, 0, 0, 772, 0, 754, 0, 0,
	241, 1640, 0, 0, 241, 241, 0, 0, 1465, 1466,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1191, 1191, 0, 0, 0, 0, 672,
	0, 241, 0, 0, 0, 0, 755, 0, 0, 0,
	770, 771, 768, 0, 0, 1191, 0, 0, 763, 0,
	0, 756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1191,
	0, 241, 1191, 241, 0, 0, 0, 0, 757, 764,
	0, 0, 0, 0, 0, 0, 0, 758, 0, 1646,
	1570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	759, 0, 0, 0, 0, 767, 241, 0, 0, 1641,
	0, 0, 0, 0, 0, 0, 0, 0, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 761,
	0, 0, 0, 0, 1658, 0, 0, 0, 0, 0,
	0, 0, 0, 1191, 0, 0, 0, 0, 0, 0,
	0, 1781, 0, 1119, 0, 0, 0, 239, 0, 0,
	1191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 1781, 239, 0, 0, 0, 0, 687,
	0, 0, 0, 0, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 0, 102, 0, 102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1656, 0, 0, 0,
	1631, 1632, 1638, 1659, 1637, 1633, 0, 1630, 1628, 1629,
	1621, 1622, 1623, 1624, 1626, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 945, 102, 102, 0, 0, 0, 0, 0,
	1191, 0, 0, 0, 0, 102, 0, 102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 102, 0, 102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 0, 1290, 0,
	0, 0, 0, 0, 239, 0, 0, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 239, 0, 0, 0, 239, 1191, 0, 0, 241,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 239, 0, 239, 0, 239, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 241, 704,
	0, 0, 0, 241, 925, 0, 0, 241, 0, 0,
	0, 0, 0, 1191, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 705, 1682, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1687, 0, 0, 0, 1693, 0, 1191, 1191, 1191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	706, 0, 723, 1191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 1191, 0, 0, 239, 707, 0, 239, 0,
	0, 708, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1191, 0, 0, 0, 0, 239,
	0, 731, 0, 0, 0, 0, 0, 709, 0, 687,
	239, 0, 239, 0, 239, 0, 239, 0, 239, 0,
	729, 2004, 0, 0, 0, 2011, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2022, 0, 0, 0, 0,
	0, 0, 0, 710, 0, 0, 0, 0, 1400, 0,
	2033, 0, 2033, 0, 1779, 239, 1782, 0, 102, 0,
	0, 0, 0, 711, 0, 0, 712, 0, 0, 0,
	0, 733, 0, 0, 0, 673, 0, 0, 0, 0,
	0, 0, 1423, 0, 0, 0, 0, 0, 0, 1290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1191, 0, 1191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1191, 0,
	0, 0, 0, 0, 732, 0, 0, 0, 0, 2011,
	0, 0, 2092, 727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2111, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2121, 1191, 2123, 241, 2125, 241,
	2127, 0, 2128, 1191, 0, 0, 0, 713, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1191, 1191, 0, 0, 0, 0, 0, 0, 2149,
	1033, 716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 1191,
	241, 0, 1119, 0, 1191, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 0, 0, 0, 1119, 0,
	0, 0, 0, 0, 703, 0, 724, 0, 0, 0,
	0, 0, 239, 0, 0, 717, 0, 0, 0, 0,
	0, 1191, 1191, 1191, 0, 0, 0, 239, 0, 0,
	0, 0, 1191, 0, 0, 0, 0, 0, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 718, 0, 0, 736, 0, 735, 0, 0,
	0, 719, 1191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 720, 0, 239, 0, 0, 728,
	0, 0, 0, 0, 737, 0, 734, 0, 0, 0,
	0, 0, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1191, 0, 1191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1191, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 239,
	0, 0, 0, 0, 0, 0, 945, 0, 945, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1191, 239, 0, 1123, 0, 0, 0, 241, 0, 0,
	0, 1191, 1191, 0, 0, 0, 2447, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1191, 0,
	0, 1191, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2022, 0, 0, 0, 0, 0, 241, 241, 0, 0,
	0, 239, 0, 0, 239, 0, 0, 0, 239, 0,
	239, 0, 0, 0, 0, 0, 0, 239, 239, 0,
	0, 0, 0, 0, 0, 0, 925, 0, 0, 925,
	925, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 2262, 1290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	945, 0, 0, 0, 0, 239, 239, 239, 239, 1687,
	239, 0, 239, 1687, 0, 0, 241, 0, 0, 1191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1191,
	1191, 0, 0, 0, 0, 0, 0, 0, 2011, 0,
	0, 0, 0, 239, 0, 2022, 1191, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2676, 0, 0, 1423, 0,
	0, 245, 1423, 0, 1423, 1106, 0, 0, 241, 0,
	1617, 1618, 0, 1650, 1651, 1652, 1660, 1661, 1662, 0,
	0, 1782, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 1653, 1648, 0, 0, 0, 0, 0, 0, 1620,
	0, 0, 2729, 241, 0, 0, 0, 1666, 0, 0,
	0, 0, 0, 102, 0, 0, 0, 0, 0, 0,
	2738, 0, 2741, 0, 0, 0, 0, 0, 0, 0,
	0, 679, 1619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1639, 0, 0, 0, 0, 0, 0, 0,
	1636, 0, 0, 0, 0, 679, 0, 0, 0, 2763,
	1290, 2765, 1290, 0, 2768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1423, 0, 0,
	0, 0, 0, 0, 0, 2796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	0, 1642, 1643, 1644, 1645, 0, 0, 0, 0, 0,
	0, 1625, 0, 0, 0, 0, 0, 1119, 0, 0,
	0, 0, 0, 1123, 0, 0, 0, 1123, 102, 0,
	0, 1123, 1119, 0, 0, 0, 0, 0, 0, 0,
	1657, 0, 0, 1667, 0, 0, 0, 0, 0, 1647,
	1649, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 102, 1123, 1663, 102, 1664, 102, 0,
	0, 0, 0, 0, 1634, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1123, 0, 0,
	0, 0, 1655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1640, 0, 0, 0, 0, 0, 102,
	0, 0, 102, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1123, 0, 1665, 0, 0, 0, 1123, 0, 0, 0,
	1123, 0, 0, 0, 0, 0, 0, 102, 0, 1654,
	0, 0, 239, 239, 1123, 239, 0, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1646, 0, 0, 1123, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1641, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 0, 0, 0, 0, 239, 1658, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1119, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3016, 239, 0, 0, 0, 239, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2262, 0, 0, 0, 239, 0, 3060, 3062, 0, 2022,
	0, 0, 0, 0, 0, 0, 0, 0, 1656, 0,
	0, 1687, 1631, 1632, 1638, 1659, 1637, 1633, 0, 1630,
	1628, 1629, 1621, 1622, 1623, 1624, 1626, 1627, 0, 0,
	0, 0, 0, 0, 0, 0, 2866, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3131,
	0, 0, 0, 3135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1423, 1123, 0,
	1123, 1290, 1290, 0, 0, 0, 0, 0, 0, 0,
	1106, 0, 0, 0, 0, 1123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1106, 0, 0, 3193, 0,
	1836, 0, 0, 0, 1188, 0, 0, 0, 1188, 0,
	0, 0, 1308, 0, 1123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1123, 1002, 0, 0, 0,
	0, 0, 0, 0, 0, 1308, 0, 0, 3230, 0,
	1290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1119, 1119, 0, 0, 0, 0, 0, 0, 1308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 102, 102,
	0, 1308, 102, 0, 0, 0, 0, 1308, 0, 0,
	0, 1308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1308, 0, 0, 0, 0,
	0, 0, 0, 0, 102, 102, 0, 0, 102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1123, 1123, 0, 0, 0, 0, 0, 0,
	0, 0, 1123, 0, 0, 1308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 1106, 0, 0,
	945, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 239, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 1119, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1123, 0, 1123, 0, 1123, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	1123, 1123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1123, 0, 1123, 1123, 1123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2022, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2022, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2022, 0, 0, 0, 3497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1119, 1188, 0, 0, 0,
	0, 0, 0, 1119, 0, 0, 0, 679, 1836, 1836,
	1123, 0, 679, 0, 0, 0, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 1308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 0, 3546, 0, 0,
	0, 0, 0, 0, 0, 0, 1188, 0, 0, 0,
	0, 0, 0, 1106, 1106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 1123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1123,
	0, 0, 0, 0, 0, 0, 1123, 0, 0, 0,
	0, 0, 0, 0, 0, 1123, 0, 0, 0, 0,
	0, 0, 0, 1308, 1308, 0, 0, 0, 0, 0,
	0, 0, 1123, 1188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1189,
	0, 0, 0, 1189, 0, 0, 0, 1309, 0, 0,
	0, 3668, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 0, 2022, 0, 0, 0, 0, 0,
	0, 1123, 0, 0, 0, 0, 0, 0, 0, 837,
	1309, 879, 0, 0, 1106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 1123, 0, 1309, 845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2022, 0,
	858, 843, 842, 0, 0, 0, 0, 3736, 0, 0,
	0, 1836, 0, 102, 0, 0, 0, 0, 0, 0,
	0, 1308, 0, 1308, 0, 1308, 1309, 0, 844, 0,
	239, 0, 1309, 847, 0, 0, 1309, 0, 887, 1123,
	0, 1308, 1308, 0, 0, 0, 855, 856, 0, 0,
	1309, 0, 1308, 1123, 0, 872, 0, 0, 0, 0,
	0, 0, 0, 0, 1308, 0, 1308, 1308, 1308, 0,
	0, 880, 849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 850, 0,
	1309, 0, 0, 0, 0, 0, 0, 878, 0, 239,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 851, 0, 0, 0, 0, 1106, 1123,
	1123, 841, 1123, 0, 3821, 0, 1106, 0, 0, 0,
	0, 0, 0, 0, 1123, 0, 0, 0, 0, 852,
	853, 0, 0, 0, 0, 0, 0, 0, 0, 1123,
	0, 1188, 0, 0, 0, 0, 0, 860, 859, 0,
	0, 0, 0, 0, 0, 854, 239, 0, 0, 869,
	0, 0, 0, 0, 2022, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 884, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1188, 0,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 0, 848, 3933, 1290, 886, 102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	846, 239, 0, 0, 876, 877, 0, 0, 102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 874, 0, 239, 1188, 0, 0,
	0, 885, 870, 0, 863, 861, 0, 866, 0, 0,
	0, 0, 0, 867, 0, 0, 839, 0, 882, 0,
	0, 0, 0, 1188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 840, 0,
	0, 1189, 0, 0, 0, 0, 0, 0, 0, 868,
	0, 0, 0, 0, 865, 0, 0, 0, 0, 0,
	0, 0, 0, 4000, 883, 0, 0, 0, 0, 0,
	1309, 0, 871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1189, 1308, 873, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 875, 0, 0, 0, 0,
	0, 0, 1188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4043, 0, 0, 0, 0,
	0, 0, 0, 0, 1123, 1123, 0, 0, 0, 0,
	0, 0, 4065, 0, 0, 0, 0, 0, 0, 1123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4077, 0, 0, 0, 0, 0, 0, 1123, 0, 0,
	1188, 0, 0, 0, 0, 0, 0, 0, 0, 1123,
	0, 0, 1123, 0, 1308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2262, 1836, 0,
	0, 0, 1123, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1309, 1309,
	0, 0, 0, 0, 0, 0, 0, 0, 1189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1308, 1308, 0, 1308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1123, 1308, 0, 0, 0, 0,
	0, 0, 0, 0, 1123, 0, 0, 0, 0, 0,
	1308, 0, 0, 1123, 0, 0, 0, 102, 1123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1123, 0, 0, 102, 0,
	0, 1123, 0, 1123, 0, 0, 0, 1123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1123, 1309, 0, 1309, 0,
	1309, 0, 0, 0, 0, 1123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1309, 1309, 0, 0,
	0, 1123, 0, 0, 0, 0, 0, 1309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1309,
	0, 1309, 1309, 1309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1123, 1123, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1123,
	0, 0, 1123, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1617, 1618, 0,
	1650, 1651, 1652, 1660, 1661, 1662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1189, 0, 1653, 1648,
	0, 0, 0, 0, 0, 0, 1620, 0, 0, 0,
	0, 0, 0, 0, 1666, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1123, 0, 0, 0, 0, 0, 1619,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1639,
	1123, 0, 0, 0, 0, 0, 0, 1636, 0, 0,
	1836, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1189, 0, 0, 1188, 0, 0, 1836,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1188, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 1642, 1643,
	1644, 1645, 0, 1188, 0, 0, 0, 0, 1625, 0,
	0, 0, 0, 0, 0, 0, 0, 1123, 1123, 0,
	0, 0, 1189, 1188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1657, 0, 0,
	1667, 0, 0, 0, 0, 0, 1647, 1649, 1189, 0,
	1123, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1663, 0, 1664, 0, 0, 0, 0, 0,
	0, 1634, 1635, 0, 0, 0, 0, 0, 0, 0,
	1308, 0, 0, 0, 0, 0, 0, 0, 0, 1655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1308, 0, 1309, 0, 0,
	0, 0, 0, 0, 0, 1188, 0, 0, 0, 1665,
	0, 0, 0, 0, 1308, 0, 0, 0, 0, 1308,
	0, 0, 0, 0, 0, 0, 1654, 1189, 0, 0,
	0, 0, 0, 0, 0, 0, 1308, 0, 0, 0,
	0, 0, 1308, 0, 1308, 0, 0, 0, 1188, 0,
	0, 0, 0, 0, 0, 679, 1123, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1308, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 1308, 0, 1646, 0,
	0, 0, 0, 0, 0, 1189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1641, 1309,
	0, 0, 0, 1123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1123, 0,
	0, 0, 0, 1658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1308, 1308, 0, 1123, 1123, 1123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1123, 0, 0, 1308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1123, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1188, 0, 0, 1188, 1123, 1309, 1309, 0, 1309, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	1309, 0, 0, 0, 0, 1656, 0, 0, 0, 1631,
	1632, 1638, 1659, 1637, 1633, 1309, 1630, 1628, 1629, 1621,
	1622, 1623, 1624, 1626, 1627, 0, 0, 0, 0, 0,
	0, 0, 0, 2865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1123, 0, 0, 0, 0, 0, 0, 0,
	1123, 0, 0, 0, 1123, 0, 1123, 0, 0, 0,
	0, 0, 0, 1123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1123, 0, 0, 0, 0,
	0, 0, 0, 1123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1123, 1123, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1123,
	0, 0, 0, 0, 1123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1123, 1123, 1123, 0, 0, 0, 0, 0, 0,
	0, 0, 1123, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1189, 1123, 0, 0, 0, 0, 1308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1123, 0, 1123, 0, 0, 1189, 0,
	0, 0, 0, 0, 1308, 0, 0, 0, 1123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 1308, 1308,
	1308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1308, 0, 0, 0, 0, 0,
	1123, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1123, 1123, 1188, 0, 1309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1123, 0,
	1309, 1123, 0, 0, 0, 0, 0, 0, 0, 0,
	1189, 0, 0, 0, 0, 0, 0, 0, 0, 1309,
	0, 0, 0, 0, 1309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1309, 0, 0, 0, 0, 0, 1309, 0, 1309,
	0, 0, 0, 1189, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1188, 0, 1188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1309,
	1309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1123,
	0, 1309, 0, 0, 0, 0, 0, 0, 0, 1123,
	1123, 0, 0, 0, 0, 0, 1188, 0, 0, 0,
	0, 0, 0, 0, 1188, 0, 1123, 0, 0, 0,
	0, 0, 0, 0, 0, 1189, 1617, 1618, 1189, 1650,
	1651, 1652, 1660, 1661, 1662, 0, 0, 0, 0, 0,
	0, 0, 1308, 1308, 0, 0, 0, 1653, 1648, 0,
	0, 0, 0, 0, 0, 1620, 0, 0, 0, 0,
	0, 0, 0, 1666, 0, 0, 0, 0, 0, 0,
	1188, 0, 0, 0, 0, 1308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1639, 1189,
	0, 0, 0, 0, 0, 0, 1636, 0, 0, 0,
	0, 0, 1308, 1308, 1308, 0, 1189, 0, 0, 0,
	0, 0, 0, 1188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1642, 1643, 1644,
	1645, 0, 0, 0, 0, 0, 0, 1625, 0, 0,
	0, 0, 0, 0, 1188, 0, 1308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1188,
	0, 0, 0, 0, 0, 0, 1657, 0, 0, 1667,
	0, 0, 0, 0, 0, 1647, 1649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1663, 0, 1664, 0, 0, 1189, 0, 0, 0,
	1634, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1188, 0, 0, 0, 0, 0, 0, 1655, 0,
	0, 0, 1308, 1308, 0, 0, 0, 0, 0, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1665, 1188,
	0, 0, 1308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1309, 0, 0, 0, 0, 1646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1309,
	1617, 1618, 1658, 1650, 1651, 1652, 1660, 1661, 1662, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1653, 1648, 0, 0, 0, 0, 0, 0, 1620,
	0, 0, 0, 1309, 1309, 1309, 0, 1666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1309,
	1308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1308, 1308, 1619, 0, 0, 0, 0, 0, 1189, 0,
	0, 0, 1639, 0, 0, 0, 0, 1308, 0, 0,
	1636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1189, 0, 0, 0, 1656, 0, 0, 0, 1631, 1632,
	1638, 1659, 1637, 1633, 0, 1630, 1628, 1629, 1621, 1622,
	1623, 1624, 1626, 1627, 0, 0, 0, 0, 0, 0,
	0, 0, 2862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1642, 1643, 1644, 1645, 0, 0, 0, 0, 1617,
	1618, 1625, 1650, 1651, 1652, 1660, 1661, 1662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1653, 1648, 0, 0, 0, 0, 0, 0, 1620, 0,
	1657, 0, 0, 1667, 0, 0, 1666, 0, 0, 1647,
	1649, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1189, 0, 1189, 0, 0, 1663, 0, 1664, 0, 0,
	0, 1619, 0, 0, 1634, 1635, 0, 0, 0, 0,
	0, 1639, 0, 0, 1189, 0, 0, 0, 0, 1636,
	0, 0, 1655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1189, 1665, 0, 0, 0, 0, 0, 0, 1189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1642, 1643, 1644, 1645, 0, 0, 0, 1309, 1309, 0,
	1625, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1189, 0, 0, 0, 1657,
	1309, 1646, 1667, 0, 0, 0, 0, 0, 1647, 1649,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1641, 0, 0, 1663, 0, 1664, 0, 0, 0,
	0, 0, 0, 1634, 1635, 0, 0, 1309, 1309, 1309,
	0, 0, 0, 0, 0, 0, 1658, 0, 1189, 0,
	0, 1655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1665, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1189,
	0, 1309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1189, 0, 0, 0, 1656, 0,
	0, 0, 1631, 1632, 1638, 1659, 1637, 1633, 0, 1630,
	1628, 1629, 1621, 1622, 1623, 1624, 1626, 1627, 0, 0,
	1646, 0, 0, 0, 0, 0, 2861, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1641, 0, 0, 0, 0, 0, 1189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1309, 1309, 0,
	0, 0, 0, 0, 0, 1658, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1189, 0, 0, 1309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1656, 0, 0,
	0, 1631, 1632, 1638, 1659, 1637, 1633, 0, 1630, 1628,
	1629, 1621, 1622, 1623, 1624, 1626, 1627, 0, 0, 0,
	0, 0, 0, 0, 0, 2860, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1186, 0, 1309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1309, 1309, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 1192, 255, 256, 1193,
	1194, 1195, 1309, 1196, 541, 1197, 1198, 1199, 1200, 257,
	258, 260, 259, 261, 262, 263, 264, 542, 543, 0,
	265, 544, 266, 545, 1201, 546, 267, 268, 269, 270,
	271, 1202, 1203, 0, 272, 547, 548, 549, 1204, 273,
	274, 550, 1205, 1272, 1206, 275, 276, 277, 278, 279,
	280, 281, 0, 1207, 283, 284, 285, 282, 1208, 286,
	0, 287, 288, 289, 290, 291, 292, 1209, 293, 294,
	295, 1064, 296, 297, 1210, 1211, 1213, 1212, 1214, 1215,
	1216, 298, 299, 300, 301, 0, 302, 551, 552, 1217,
	306, 303, 304, 1218, 307, 305, 1219, 308, 309, 310,
	1220, 1221, 311, 312, 313, 1222, 314, 315, 1223, 316,
	317, 318, 1224, 319, 320, 553, 321, 322, 323, 325,
	327, 324, 328, 329, 330, 331, 554, 555, 1225, 246,
	1226, 0, 0, 0, 0, 332, 333, 334, 556, 0,
	0, 0, 335, 1227, 336, 1228, 1229, 1065, 337, 338,
	557, 558, 339, 340, 1230, 341, 559, 1231, 560, 342,
	1232, 343, 344, 345, 346, 347, 561, 562, 563, 408,
	1067, 348, 349, 1233, 350, 351, 352, 353, 0, 0,
	0, 247, 354, 355, 357, 1234, 1066, 356, 564, 565,
	1235, 566, 1236, 358, 359, 1068, 567, 1069, 360, 361,
	362, 1070, 363, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 1237, 370, 372, 371, 1238, 373, 568, 1071,
	374, 375, 1072, 1239, 376, 377, 378, 1240, 1241, 379,
	380, 381, 382, 0, 383, 384, 386, 388, 385, 387,
	392, 389, 390, 391, 394, 0, 393, 1073, 395, 396,
	397, 403, 404, 400, 401, 402, 405, 399, 1074, 398,
	1242, 248, 1075, 406, 1243, 569, 407, 570, 409, 410,
	1244, 0, 411, 0, 1245, 1246, 413, 414, 415, 1247,
	1248, 416, 417, 571, 1076, 418, 1077, 572, 419, 420,
	412, 421, 422, 423, 424, 425, 426, 427, 428, 1249,
	429, 430, 573, 574, 575, 431, 576, 432, 433, 1250,
	434, 0, 435, 436, 437, 438, 439, 440, 441, 577,
	443, 442, 444, 1251, 445, 0, 0, 0, 0, 0,
	446, 0, 448, 449, 450, 447, 451, 452, 453, 454,
	1252, 455, 456, 457, 1078, 458, 459, 460, 461, 578,
	462, 0, 463, 464, 470, 471, 465, 466, 472, 473,
	474, 475, 476, 1253, 478, 479, 477, 480, 481, 482,
	1254, 483, 467, 468, 484, 485, 1079, 486, 487, 488,
	489, 490, 491, 579, 0, 492, 1255, 493, 494, 495,
	496, 469, 497, 502, 580, 498, 499, 500, 501, 581,
	1256, 504, 505, 0, 503, 1257, 506, 507, 508, 509,
	510, 511, 326, 512, 1258, 513, 582, 583, 584, 585,
	1259, 520, 1260, 514, 515, 586, 516, 587, 1261, 517,
	518, 519, 0, 521, 522, 1262, 1263, 523, 524, 525,
	527, 528, 526, 529, 1264, 530, 1265, 0, 531, 532,
	533, 588, 589, 590, 1266, 535, 534, 591, 1267, 1268,
	1269, 1270, 536, 537, 592, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1186, 0, 0, 0, 0, 0, 0, 0, 2425,
	0, 0, 0, 0, 0, 0, 0, 2426, 249, 250,
	251, 252, 253, 254, 1192, 255, 256, 1193, 1194, 1195,
	0, 1196, 541, 1197, 1198, 1199, 1200, 257, 258, 260,
	259, 261, 262, 263, 264, 542, 543, 0, 265, 544,
	266, 545, 1201, 546, 267, 268, 269, 270, 271, 1202,
	1203, 0, 272, 547, 548, 549, 1204, 273, 274, 550,
	1205, 1272, 1206, 275, 276, 277, 278, 279, 280, 281,
	0, 1207, 283, 284, 285, 282, 1208, 286, 0, 287,
	288, 289, 290, 291, 292, 1209, 293, 294, 295, 1064,
	296, 297, 1210, 1211, 1213, 1212, 1214, 1215, 1216, 298,
	299, 300, 301, 0, 302, 551, 552, 1217, 306, 303,
	304, 1218, 307, 305, 1219, 308, 309, 310, 1220, 1221,
	311, 312, 313, 1222, 314, 315, 1223, 316, 317, 318,
	1224, 319, 320, 553, 321, 322, 323, 325, 327, 324,
	328, 329, 330, 331, 554, 555, 1225, 246, 1226, 0,
	0, 0, 0, 332, 333, 334, 556, 0, 0, 0,
	335, 1227, 336, 1228, 1229, 1065, 337, 338, 557, 558,
	339, 340, 1230, 341, 559, 1231, 560, 342, 1232, 343,
	344, 345, 346, 347, 561, 562, 563, 408, 1067, 348,
	349, 1233, 350, 351, 352, 353, 0, 0, 0, 247,
	354, 355, 357, 1234, 1066, 356, 564, 565, 1235, 566,
	1236, 358, 359, 1068, 567, 1069, 360, 361, 362, 1070,
	363, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	1237, 370, 372, 371, 1238, 373, 568, 1071, 374, 375,
	1072, 1239, 376, 377, 378, 1240, 1241, 379, 380, 381,
	382, 0, 383, 384, 386, 388, 385, 387, 392, 389,
	390, 391, 394, 0, 393, 1073, 395, 396, 397, 403,
	404, 400, 401, 402, 405, 399, 1074, 398, 1242, 248,
	1075, 406, 1243, 569, 407, 570, 409, 410, 1244, 0,
	411, 0, 1245, 1246, 413, 414, 415, 1247, 1248, 416,
	417, 571, 1076, 418, 1077, 572, 419, 420, 412, 421,
	422, 423, 424, 425, 426, 427, 428, 1249, 429, 430,
	573, 574, 575, 431, 576, 432, 433, 1250, 434, 0,
	435, 436, 437, 438, 439, 440, 441, 577, 443, 442,
	444, 1251, 445, 0, 0, 0, 0, 0, 446, 0,
	448, 449, 450, 447, 451, 452, 453, 454, 1252, 455,
	456, 457, 1078, 458, 459, 460, 461, 578, 462, 0,
	463, 464, 470, 471, 465, 466, 472, 473, 474, 475,
	476, 1253, 478, 479, 477, 480, 481, 482, 1254, 483,
	467, 468, 484, 485, 1079, 486, 487, 488, 489, 490,
	491, 579, 0, 492, 1255, 493, 494, 495, 496, 469,
	497, 502, 580, 498, 499, 500, 501, 581, 1256, 504,
	505, 0, 503, 1257, 506, 507, 508, 509, 510, 511,
	326, 512, 1258, 513, 582, 583, 584, 585, 1259, 520,
	1260, 514, 515, 586, 516, 587, 1261, 517, 518, 519,
	0, 521, 522, 1262, 1263, 523, 524, 525, 527, 528,
	526, 529, 1264, 530, 1265, 0, 531, 532, 533, 588,
	589, 590, 1266, 535, 534, 591, 1267, 1268, 1269, 1270,
	536, 537, 592, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1186, 0, 0,
	0, 0, 3268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3270, 249, 250, 251, 252, 253, 254,
	1192, 255, 256, 1193, 1194, 1195, 0, 1196, 541, 1197,
	1198, 1199, 1200, 257, 258, 260, 259, 261, 262, 263,
	264, 542, 543, 0, 265, 544, 266, 545, 1201, 546,
	267, 268, 269, 270, 271, 1202, 1203, 0, 272, 547,
	548, 549, 1204, 273, 274, 550, 1205, 1272, 1206, 275,
	276, 277, 278, 279, 280, 281, 0, 1207, 283, 284,
	285, 282, 1208, 286, 0, 287, 288, 289, 290, 291,
	292, 1209, 293, 294, 295, 1064, 296, 297, 1210, 1211,
	1213, 1212, 1214, 1215, 1216, 298, 299, 300, 301, 0,
	302, 551, 552, 1217, 306, 303, 304, 1218, 307, 305,
	1219, 308, 309, 310, 1220, 1221, 311, 312, 313, 1222,
	314, 315, 1223, 316, 317, 318, 1224, 319, 320, 553,
	321, 322, 323, 325, 327, 324, 328, 329, 330, 331,
	554, 555, 1225, 246, 1226, 0, 0, 0, 0, 332,
	333, 334, 556, 0, 0, 0, 335, 1227, 336, 1228,
	1229, 1065, 337, 338, 557, 558, 339, 340, 1230, 341,
	559, 1231, 560, 342, 1232, 343, 344, 345, 346, 347,
	561, 562, 563, 408, 1067, 348, 349, 1233, 350, 351,
	352, 353, 0, 0, 0, 247, 354, 355, 357, 1234,
	1066, 356, 564, 565, 1235, 566, 1236, 358, 359, 1068,
	567, 1069, 360, 361, 362, 1070, 363, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 1237, 370, 372, 371,
	1238, 373, 568, 1071, 374, 375, 1072, 1239, 376, 377,
	378, 1240, 1241, 379, 380, 381, 382, 0, 383, 384,
	386, 388, 385, 387, 392, 389, 390, 391, 394, 0,
	393, 1073, 395, 396, 397, 403, 404, 400, 401, 402,
	405, 399, 1074, 398, 1242, 248, 1075, 406, 1243, 569,
	407, 570, 409, 410, 1244, 0, 411, 0, 1245, 1246,
	413, 414, 415, 1247, 1248, 416, 417, 571, 1076, 418,
	1077, 572, 419, 420, 412, 421, 422, 423, 424, 425,
	426, 427, 428, 1249, 429, 430, 573, 574, 575, 431,
	576, 432, 433, 1250, 434, 0, 435, 436, 437, 438,
	439, 440, 441, 577, 443, 442, 444, 1251, 445, 0,
	0, 0, 0, 0, 446, 0, 448, 449, 450, 447,
	451, 452, 453, 454, 1252, 455, 456, 457, 1078, 458,
	459, 460, 461, 578, 462, 0, 463, 464, 470, 471,
	465, 466, 472, 473, 474, 475, 476, 1253, 478, 479,
	477, 480, 481, 482, 1254, 483, 467, 468, 484, 485,
	1079, 486, 487, 488, 489, 490, 491, 579, 0, 492,
	1255, 493, 494, 495, 496, 469, 497, 502, 580, 498,
	499, 500, 501, 581, 1256, 504, 505, 0, 503, 1257,
	506, 507, 508, 509, 510, 511, 326, 512, 1258, 513,
	582, 583, 584, 585, 1259, 520, 1260, 514, 515, 586,
	516, 587, 1261, 517, 518, 519, 0, 521, 522, 1262,
	1263, 523, 524, 525, 527, 528, 526, 529, 1264, 530,
	1265, 0, 531, 532, 533, 588, 589, 590, 1266, 535,
	534, 591, 1267, 1268, 1269, 1270, 536, 537, 592, 538,
	539, 540, 0, 0, 0, 0, 0, 1186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3617, 249, 250, 251, 252, 253, 254,
	1192, 255, 256, 1193, 1194, 1195, 0, 1196, 541, 1197,
	1198, 1199, 1200, 257, 258, 260, 259, 261, 262, 263,
	264, 542, 543, 0, 265, 544, 266, 545, 1201, 546,
	267, 268, 269, 270, 271, 1202, 1203, 0, 272, 547,
	548, 549, 1204, 273, 274, 550, 1205, 1272, 1206, 275,
	276, 277, 278, 279, 280, 281, 0, 1207, 283, 284,
	285, 282, 1208, 286, 0, 287, 288, 289, 290, 291,
	292, 1209, 293, 294, 295, 1064, 296, 297, 1210, 1211,
	1213, 1212, 1214, 1215, 1216, 298, 299, 300, 301, 0,
	302, 551, 552, 1217, 306, 303, 304, 1218, 307, 305,
	1219, 308, 309, 310, 1220, 1221, 311, 312, 313, 1222,
	314, 315, 1223, 316, 317, 318, 1224, 319, 320, 553,
	321, 322, 323, 325, 327, 324, 328, 329, 330, 331,
	554, 555, 1225, 246, 1226, 0, 0, 0, 0, 332,
	333, 334, 556, 0, 0, 0, 335, 1227, 336, 1228,
	1229, 1065, 337, 338, 557, 558, 339, 340, 1230, 341,
	559, 1231, 560, 342, 1232, 343, 344, 345, 346, 347,
	561, 562, 563, 408, 1067, 348, 349, 1233, 350, 351,
	352, 353, 0, 0, 0, 247, 354, 355, 357, 1234,
	1066, 356, 564, 565, 1235, 566, 1236, 358, 359, 1068,
	567, 1069, 360, 361, 362, 1070, 363, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 1237, 370, 372, 371,
	1238, 373, 568, 1071, 374, 375, 1072, 1239, 376, 377,
	378, 1240, 1241, 379, 380, 381, 382, 0, 383, 384,
	386, 388, 385, 387, 392, 389, 390, 391, 394, 0,
	393, 1073, 395, 396, 397, 403, 404, 400, 401, 402,
	405, 399, 1074, 398, 1242, 248, 1075, 406, 1243, 569,
	407, 570, 409, 410, 1244, 0, 411, 0, 1245, 1246,
	413, 414, 415, 1247, 1248, 416, 417, 571, 1076, 418,
	1077, 572, 419, 420, 412, 421, 422, 423, 424, 425,
	426, 427, 428, 1249, 429, 430, 573, 574, 575, 431,
	576, 432, 433, 1250, 434, 0, 435, 436, 437, 438,
	439, 440, 441, 577, 443, 442, 444, 1251, 445, 0,
	0, 0, 0, 0, 446, 0, 448, 449, 450, 447,
	451, 452, 453, 454, 1252, 455, 456, 457, 1078, 458,
	459, 460, 461, 578, 462, 0, 463, 464, 470, 471,
	465, 466, 472, 473, 474, 475, 476, 1253, 478, 479,
	477, 480, 481, 482, 1254, 483, 467, 468, 484, 485,
	1079, 486, 487, 488, 489, 490, 491, 579, 0, 492,
	1255, 493, 494, 495, 496, 469, 497, 502, 580, 498,
	499, 500, 501, 581, 1256, 504, 505, 0, 503, 1257,
	506, 507, 508, 509, 510, 511, 326, 512, 1258, 513,
	582, 583, 584, 585, 1259, 520, 1260, 514, 515, 586,
	516, 587, 1261, 517, 518, 519, 0, 521, 522, 1262,
	1263, 523, 524, 525, 527, 528, 526, 529, 1264, 530,
	1265, 0, 531, 532, 533, 588, 589, 590, 1266, 535,
	534, 591, 1267, 1268, 1269, 1270, 536, 537, 592, 538,
	539, 540, 1186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3786, 249,
	250, 251, 252, 253, 254, 1192, 255, 256, 1193, 1194,
	1195, 0, 1196, 541, 1197, 1198, 1199, 1200, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 543, 0, 265,
	544, 266, 545, 1201, 546, 267, 268, 269, 270, 271,
	1202, 1203, 0, 272, 547, 548, 549, 1204, 273, 274,
	550, 1205, 1272, 1206, 275, 276, 277, 278, 279, 280,
	281, 0, 1207, 283, 284, 285, 282, 1208, 286, 0,
	287, 288, 289, 290, 291, 292, 1209, 293, 294, 295,
	1064, 296, 297, 1210, 1211, 1213, 1212, 1214, 1215, 1216,
	298, 299, 300, 301, 0, 302, 551, 552, 1217, 306,
	303, 304, 1218, 307, 305, 1219, 308, 309, 310, 1220,
	1221, 311, 312, 313, 1222, 314, 315, 1223, 316, 317,
	318, 1224, 319, 320, 553, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 554, 555, 1225, 246, 1226,
	0, 0, 0, 0, 332, 333, 334, 556, 0, 0,
	0, 335, 1227, 336, 1228, 1229, 1065, 337, 338, 557,
	558, 339, 340, 1230, 341, 559, 1231, 560, 342, 1232,
	343, 344, 345, 346, 347, 561, 562, 563, 408, 1067,
	348, 349, 1233, 350, 351, 352, 353, 0, 0, 0,
	247, 354, 355, 357, 1234, 1066, 356, 564, 565, 1235,
	566, 1236, 358, 359, 1068, 567, 1069, 360, 361, 362,
	1070, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 1237, 370, 372, 371, 1238, 373, 568, 1071, 374,
	375, 1072, 1239, 376, 377, 378, 1240, 1241, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 1073, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 1074, 398, 1242,
	248, 1075, 406, 1243, 569, 407, 570, 409, 410, 1244,
	0, 411, 0, 1245, 1246, 413, 414, 415, 1247, 1248,
	416, 417, 571, 1076, 418, 1077, 572, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 1249, 429,
	430, 573, 574, 575, 431, 576, 432, 433, 1250, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 577, 443,
	442, 444, 1251, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 1252,
	455, 456, 457, 1078, 458, 459, 460, 461, 578, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 1253, 478, 479, 477, 480, 481, 482, 1254,
	483, 467, 468, 484, 485, 1079, 486, 487, 488, 489,
	490, 491, 579, 0, 492, 1255, 493, 494, 495, 496,
	469, 497, 502, 580, 498, 499, 500, 501, 581, 1256,
	504, 505, 0, 503, 1257, 506, 507, 508, 509, 510,
	511, 326, 512, 1258, 513, 582, 583, 584, 585, 1259,
	520, 1260, 514, 515, 586, 516, 587, 1261, 517, 518,
	519, 0, 521, 522, 1262, 1263, 523, 524, 525, 527,
	528, 526, 529, 1264, 530, 1265, 0, 531, 532, 533,
	588, 589, 590, 1266, 535, 534, 591, 1267, 1268, 1269,
	1270, 536, 537, 592, 538, 539, 540, 1186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3676, 249, 250, 251, 252, 253, 254,
	1192, 255, 256, 1193, 1194, 1195, 0, 1196, 541, 1197,
	1198, 1199, 1200, 257, 258, 260, 259, 261, 262, 263,
	264, 542, 543, 0, 265, 544, 266, 545, 1201, 546,
	267, 268, 269, 270, 271, 1202, 1203, 0, 272, 547,
	548, 549, 1204, 273, 274, 550, 1205, 1272, 1206, 275,
	276, 277, 278, 279, 280, 281, 0, 1207, 283, 284,
	285, 282, 1208, 286, 0, 287, 288, 289, 290, 291,
	292, 1209, 293, 294, 295, 1064, 296, 297, 1210, 1211,
	1213, 1212, 1214, 1215, 1216, 298, 299, 300, 301, 0,
	302, 551, 552, 1217, 306, 303, 304, 1218, 307, 305,
	1219, 308, 309, 310, 1220, 1221, 311, 312, 313, 1222,
	314, 315, 1223, 316, 317, 318, 1224, 319, 320, 553,
	321, 322, 323, 325, 327, 324, 328, 329, 330, 331,
	554, 555, 1225, 246, 1226, 0, 0, 0, 0, 332,
	333, 334, 556, 0, 0, 0, 335, 1227, 336, 1228,
	1229, 1065, 337, 338, 557, 558, 339, 340, 1230, 341,
	559, 1231, 560, 342, 1232, 343, 344, 345, 346, 347,
	561, 562, 563, 408, 1067, 348, 349, 1233, 350, 351,
	352, 353, 0, 0, 0, 247, 354, 355, 357, 1234,
	1066, 356, 564, 565, 1235, 566, 1236, 358, 359, 1068,
	567, 1069, 360, 361, 362, 1070, 363, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 1237, 370, 372, 371,
	1238, 373, 568, 1071, 374, 375, 1072, 1239, 376, 377,
	378, 1240, 1241, 379, 380, 381, 382, 0, 383, 384,
	386, 388, 385, 387, 392, 389, 390, 391, 394, 0,
	393, 1073, 395, 396, 397, 403, 404, 400, 401, 402,
	405, 399, 1074, 398, 1242, 248, 1075, 406, 1243, 569,
	407, 570, 409, 410, 1244, 0, 411, 0, 1245, 1246,
	413, 414, 415, 1247, 1248, 416, 417, 571, 1076, 418,
	1077, 572, 419, 420, 412, 421, 422, 423, 424, 425,
	426, 427, 428, 1249, 429, 430, 573, 574, 575, 431,
	576, 432, 433, 1250, 434, 0, 435, 436, 437, 438,
	439, 440, 441, 577, 443, 442, 444, 1251, 445, 0,
	0, 0, 0, 0, 446, 0, 448, 449, 450, 447,
	451, 452, 453, 454, 1252, 455, 456, 457, 1078, 458,
	459, 460, 461, 578, 462, 0, 463, 464, 470, 471,
	465, 466, 472, 473, 474, 475, 476, 1253, 478, 479,
	477, 480, 481, 482, 1254, 483, 467, 468, 484, 485,
	1079, 486, 487, 488, 489, 490, 491, 579, 0, 492,
	1255, 493, 494, 495, 496, 469, 497, 502, 580, 498,
	499, 500, 501, 581, 1256, 504, 505, 0, 503, 1257,
	506, 507, 508, 509, 510, 511, 326, 512, 1258, 513,
	582, 583, 584, 585, 1259, 520, 1260, 514, 515, 586,
	516, 587, 1261, 517, 518, 519, 0, 521, 522, 1262,
	1263, 523, 524, 525, 527, 528, 526, 529, 1264, 530,
	1265, 0, 531, 532, 533, 588, 589, 590, 1266, 535,
	534, 591, 1267, 1268, 1269, 1270, 536, 537, 592, 538,
	539, 540, 1186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3547, 249,
	250, 251, 252, 253, 254, 1192, 255, 256, 1193, 1194,
	1195, 0, 1196, 541, 1197, 1198, 1199, 1200, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 543, 0, 265,
	544, 266, 545, 1201, 546, 267, 268, 269, 270, 271,
	1202, 1203, 0, 272, 547, 548, 549, 1204, 273, 274,
	550, 1205, 1272, 1206, 275, 276, 277, 278, 279, 280,
	281, 0, 1207, 283, 284, 285, 282, 1208, 286, 0,
	287, 288, 289, 290, 291, 292, 1209, 293, 294, 295,
	1064, 296, 297, 1210, 1211, 1213, 1212, 1214, 1215, 1216,
	298, 299, 300, 301, 0, 302, 551, 552, 1217, 306,
	303, 304, 1218, 307, 305, 1219, 308, 309, 310, 1220,
	1221, 311, 312, 313, 1222, 314, 315, 1223, 316, 317,
	318, 1224, 319, 320, 553, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 554, 555, 1225, 246, 1226,
	0, 0, 0, 0, 332, 333, 334, 556, 0, 0,
	0, 335, 1227, 336, 1228, 1229, 1065, 337, 338, 557,
	558, 339, 340, 1230, 341, 559, 1231, 560, 342, 1232,
	343, 344, 345, 346, 347, 561, 562, 563, 408, 1067,
	348, 349, 1233, 350, 351, 352, 353, 0, 0, 0,
	247, 354, 355, 357, 1234, 1066, 356, 564, 565, 1235,
	566, 1236, 358, 359, 1068, 567, 1069, 360, 361, 362,
	1070, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 1237, 370, 372, 371, 1238, 373, 568, 1071, 374,
	375, 1072, 1239, 376, 377, 378, 1240, 1241, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 1073, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 1074, 398, 1242,
	248, 1075, 406, 1243, 569, 407, 570, 409, 410, 1244,
	0, 411, 0, 1245, 1246, 413, 414, 415, 1247, 1248,
	416, 417, 571, 1076, 418, 1077, 572, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 1249, 429,
	430, 573, 574, 575, 431, 576, 432, 433, 1250, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 577, 443,
	442, 444, 1251, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 1252,
	455, 456, 457, 1078, 458, 459, 460, 461, 578, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 1253, 478, 479, 477, 480, 481, 482, 1254,
	483, 467, 468, 484, 485, 1079, 486, 487, 488, 489,
	490, 491, 579, 0, 492, 1255, 493, 494, 495, 496,
	469, 497, 502, 580, 498, 499, 500, 501, 581, 1256,
	504, 505, 0, 503, 1257, 506, 507, 508, 509, 510,
	511, 326, 512, 1258, 513, 582, 583, 584, 585, 1259,
	520, 1260, 514, 515, 586, 516, 587, 1261, 517, 518,
	519, 0, 521, 522, 1262, 1263, 523, 524, 525, 527,
	528, 526, 529, 1264, 530, 1265, 0, 531, 532, 533,
	588, 589, 590, 1266, 535, 534, 591, 1267, 1268, 1269,
	1270, 536, 537, 592, 538, 539, 540, 1186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3286, 249, 250, 251, 252, 253, 254,
	1192, 255, 256, 1193, 1194, 1195, 0, 1196, 541, 1197,
	1198, 1199, 1200, 257, 258, 260, 259, 261, 262, 263,
	264, 542, 543, 0, 265, 544, 266, 545, 1201, 546,
	267, 268, 269, 270, 271, 1202, 1203, 0, 272, 547,
	548, 549, 1204, 273, 274, 550, 1205, 1272, 1206, 275,
	276, 277, 278, 279, 280, 281, 0, 1207, 283, 284,
	285, 282, 1208, 286, 0, 287, 288, 289, 290, 291,
	292, 1209, 293, 294, 295, 1064, 296, 297, 1210, 1211,
	1213, 1212, 1214, 1215, 1216, 298, 299, 300, 301, 0,
	302, 551, 552, 1217, 306, 303, 304, 1218, 307, 305,
	1219, 308, 309, 310, 1220, 1221, 311, 312, 313, 1222,
	314, 315, 1223, 316, 317, 318, 1224, 319, 320, 553,
	321, 322, 323, 325, 327, 324, 328, 329, 330, 331,
	554, 555, 1225, 246, 1226, 0, 0, 0, 0, 332,
	333, 334, 556, 0, 0, 0, 335, 1227, 336, 1228,
	1229, 1065, 337, 338, 557, 558, 339, 340, 1230, 341,
	559, 1231, 560, 342, 1232, 343, 344, 345, 346, 347,
	561, 562, 563, 408, 1067, 348, 349, 1233, 350, 351,
	352, 353, 0, 0, 0, 247, 354, 355, 357, 1234,
	1066, 356, 564, 565, 1235, 566, 1236, 358, 359, 1068,
	567, 1069, 360, 361, 362, 1070, 363, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 1237, 370, 372, 371,
	1238, 373, 568, 1071, 374, 375, 1072, 1239, 376, 377,
	378, 1240, 1241, 379, 380, 381, 382, 0, 383, 384,
	386, 388, 385, 387, 392, 389, 390, 391, 394, 0,
	393, 1073, 395, 396, 397, 403, 404, 400, 401, 402,
	405, 399, 1074, 398, 1242, 248, 1075, 406, 1243, 569,
	407, 570, 409, 410, 1244, 0, 411, 0, 1245, 1246,
	413, 414, 415, 1247, 1248, 416, 417, 571, 1076, 418,
	1077, 572, 419, 420, 412, 421, 422, 423, 424, 425,
	426, 427, 428, 1249, 429, 430, 573, 574, 575, 431,
	576, 432, 433, 1250, 434, 0, 435, 436, 437, 438,
	439, 440, 441, 577, 443, 442, 444, 1251, 445, 0,
	0, 0, 0, 0, 446, 0, 448, 449, 450, 447,
	451, 452, 453, 454, 1252, 455, 456, 457, 1078, 458,
	459, 460, 461, 578, 462, 0, 463, 464, 470, 471,
	465, 466, 472, 473, 474, 475, 476, 1253, 478, 479,
	477, 480, 481, 482, 1254, 483, 467, 468, 484, 485,
	1079, 486, 487, 488, 489, 490, 491, 579, 0, 492,
	1255, 493, 494, 495, 496, 469, 497, 502, 580, 498,
	499, 500, 501, 581, 1256, 504, 505, 0, 503, 1257,
	506, 507, 508, 509, 510, 511, 326, 512, 1258, 513,
	582, 583, 584, 585, 1259, 520, 1260, 514, 515, 586,
	516, 587, 1261, 517, 518, 519, 0, 521, 522, 1262,
	1263, 523, 524, 525, 527, 528, 526, 529, 1264, 530,
	1265, 0, 531, 532, 533, 588, 589, 590, 1266, 535,
	534, 591, 1267, 1268, 1269, 1270, 536, 537, 592, 538,
	539, 540, 1186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3116, 249,
	250, 251, 252, 253, 254, 1192, 255, 256, 1193, 1194,
	1195, 0, 1196, 541, 1197, 1198, 1199, 1200, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 543, 0, 265,
	544, 266, 545, 1201, 546, 267, 268, 269, 270, 271,
	1202, 1203, 0, 272, 547, 548, 549, 1204, 273, 274,
	550, 1205, 1272, 1206, 275, 276, 277, 278, 279, 280,
	281, 0, 1207, 283, 284, 285, 282, 1208, 286, 0,
	287, 288, 289, 290, 291, 292, 1209, 293, 294, 295,
	1064, 296, 297, 1210, 1211, 1213, 1212, 1214, 1215, 1216,
	298, 299, 300, 301, 0, 302, 551, 552, 1217, 306,
	303, 304, 1218, 307, 305, 1219, 308, 309, 310, 1220,
	1221, 311, 312, 313, 1222, 314, 315, 1223, 316, 317,
	318, 1224, 319, 320, 553, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 554, 555, 1225, 246, 1226,
	0, 0, 0, 0, 332, 333, 334, 556, 0, 0,
	0, 335, 1227, 336, 1228, 1229, 1065, 337, 338, 557,
	558, 339, 340, 1230, 341, 559, 1231, 560, 342, 1232,
	343, 344, 345, 346, 347, 561, 562, 563, 408, 1067,
	348, 349, 1233, 350, 351, 352, 353, 0, 0, 0,
	247, 354, 355, 357, 1234, 1066, 356, 564, 565, 1235,
	566, 1236, 358, 359, 1068, 567, 1069, 360, 361, 362,
	1070, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 1237, 370, 372, 371, 1238, 373, 568, 1071, 374,
	375, 1072, 1239, 376, 377, 378, 1240, 1241, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 1073, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 1074, 398, 1242,
	248, 1075, 406, 1243, 569, 407, 570, 409, 410, 1244,
	0, 411, 0, 1245, 1246, 413, 414, 415, 1247, 1248,
	416, 417, 571, 1076, 418, 1077, 572, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 1249, 429,
	430, 573, 574, 575, 431, 576, 432, 433, 1250, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 577, 443,
	442, 444, 1251, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 1252,
	455, 456, 457, 1078, 458, 459, 460, 461, 578, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 1253, 478, 479, 477, 480, 481, 482, 1254,
	483, 467, 468, 484, 485, 1079, 486, 487, 488, 489,
	490, 491, 579, 0, 492, 1255, 493, 494, 495, 496,
	469, 497, 502, 580, 498, 499, 500, 501, 581, 1256,
	504, 505, 0, 503, 1257, 506, 507, 508, 509, 510,
	511, 326, 512, 1258, 513, 582, 583, 584, 585, 1259,
	520, 1260, 514, 515, 586, 516, 587, 1261, 517, 518,
	519, 0, 521, 522, 1262, 1263, 523, 524, 525, 527,
	528, 526, 529, 1264, 530, 1265, 0, 531, 532, 533,
	588, 589, 590, 1266, 535, 534, 591, 1267, 1268, 1269,
	1270, 536, 537, 592, 538, 539, 540, 1186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2308, 249, 250, 251, 252, 253, 254,
	1192, 255, 256, 1193, 1194, 1195, 0, 1196, 541, 1197,
	1198, 1199, 1200, 257, 258, 260, 259, 261, 262, 263,
	264, 542, 543, 0, 265, 544, 266, 545, 1201, 546,
	267, 268, 269, 270, 271, 1202, 1203, 0, 272, 547,
	548, 549, 1204, 273, 274, 550, 1205, 1272, 1206, 275,
	276, 277, 278, 279, 280, 281, 0, 1207, 283, 284,
	285, 282, 1208, 286, 0, 287, 288, 289, 290, 291,
	292, 1209, 293, 294, 295, 1064, 296, 297, 1210, 1211,
	1213, 1212, 1214, 1215, 1216, 298, 299, 300, 301, 0,
	302, 551, 552, 1217, 306, 303, 304, 1218, 307, 305,
	1219, 308, 309, 310, 1220, 1221, 311, 312, 313, 1222,
	314, 315, 1223, 316, 317, 318, 1224, 319, 320, 553,
	321, 322, 323, 325, 327, 324, 328, 329, 330, 331,
	554, 555, 1225, 246, 1226, 0, 0, 0, 0, 332,
	333, 334, 556, 0, 0, 0, 335, 1227, 336, 1228,
	1229, 1065, 337, 338, 557, 558, 339, 340, 1230, 341,
	559, 1231, 560, 342, 1232, 343, 344, 345, 346, 347,
	561, 562, 563, 408, 1067, 348, 349, 1233, 350, 351,
	352, 353, 0, 0, 0, 247, 354, 355, 357, 1234,
	1066, 356, 564, 565, 1235, 566, 1236, 358, 359, 1068,
	567, 1069, 360, 361, 362, 1070, 363, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 1237, 370, 372, 371,
	1238, 373, 568, 1071, 374, 375, 1072, 1239, 376, 377,
	378, 1240, 1241, 379, 380, 381, 382, 0, 383, 384,
	386, 388, 385, 387, 392, 389, 390, 391, 394, 0,
	393, 1073, 395, 396, 397, 403, 404, 400, 401, 402,
	405, 399, 1074, 398, 1242, 248, 1075, 406, 1243, 569,
	407, 570, 409, 410, 1244, 0, 411, 0, 1245, 1246,
	413, 414, 415, 1247, 1248, 416, 417, 571, 1076, 418,
	1077, 572, 419, 420, 412, 421, 422, 423, 424, 425,
	426, 427, 428, 1249, 429, 430, 573, 574, 575, 431,
	576, 432, 433, 1250, 434, 0, 435, 436, 437, 438,
	439, 440, 441, 577, 443, 442, 444, 1251, 445, 0,
	0, 0, 0, 0, 446, 0, 448, 449, 450, 447,
	451, 452, 453, 454, 1252, 455, 456, 457, 1078, 458,
	459, 460, 461, 578, 462, 0, 463, 464, 470, 471,
	465, 466, 472, 473, 474, 475, 476, 1253, 478, 479,
	477, 480, 481, 482, 1254, 483, 467, 468, 484, 485,
	1079, 486, 487, 488, 489, 490, 491, 579, 0, 492,
	1255, 493, 494, 495, 496, 469, 497, 502, 580, 498,
	499, 500, 501, 581, 1256, 504, 505, 0, 503, 1257,
	506, 507, 508, 509, 510, 511, 326, 512, 1258, 513,
	582, 583, 584, 585, 1259, 520, 1260, 514, 515, 586,
	516, 587, 1261, 517, 518, 519, 0, 521, 522, 1262,
	1263, 523, 524, 525, 527, 528, 526, 529, 1264, 530,
	1265, 0, 531, 532, 533, 588, 589, 590, 1266, 535,
	534, 591, 1267, 1268, 1269, 1270, 536, 537, 592, 538,
	539, 540, 1284, 0, 1186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 249, 250, 251, 252, 253, 254, 1192, 255, 256,
	1193, 1194, 1195, 0, 1196, 541, 1197, 1198, 1199, 1200,
	257, 258, 260, 259, 261, 262, 263, 264, 542, 543,
	0, 265, 544, 266, 545, 1201, 546, 267, 268, 269,
	270, 271, 1202, 1203, 0, 272, 547, 548, 549, 1204,
	273, 274, 550, 1205, 1272, 1206, 275, 276, 277, 278,
	279, 280, 281, 0, 1207, 283, 284, 285, 282, 1208,
	286, 0, 287, 288, 289, 290, 291, 292, 1209, 293,
	294, 295, 1064, 296, 297, 1210, 1211, 1213, 1212, 1214,
	1215, 1216, 298, 299, 300, 301, 0, 302, 551, 552,
	1217, 306, 303, 304, 1218, 307, 305, 1219, 308, 309,
	310, 1220, 1221, 311, 312, 313, 1222, 314, 315, 1223,
	316, 317, 318, 1224, 319, 320, 553, 321, 322, 323,
	325, 327, 324, 328, 329, 330, 331, 554, 555, 1225,
	246, 1226, 0, 0, 0, 0, 332, 333, 334, 556,
	0, 0, 0, 335, 1227, 336, 1228, 1229, 1065, 337,
	338, 557, 558, 339, 340, 1230, 341, 559, 1231, 560,
	342, 1232, 343, 344, 345, 346, 347, 561, 562, 563,
	408, 1067, 348, 349, 1233, 350, 351, 352, 353, 0,
	0, 0, 247, 354, 355, 357, 1234, 1066, 356, 564,
	565, 1235, 566, 1236, 358, 359, 1068, 567, 1069, 360,
	361, 362, 1070, 363, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 1237, 370, 372, 371, 1238, 373, 568,
	1071, 374, 375, 1072, 1239, 376, 377, 378, 1240, 1241,
	379, 380, 381, 382, 0, 383, 384, 386, 388, 385,
	387, 392, 389, 390, 391, 394, 0, 393, 1073, 395,
	396, 397, 403, 404, 400, 401, 402, 405, 399, 1074,
	398, 1242, 248, 1075, 406, 1243, 569, 407, 570, 409,
	410, 1244, 0, 411, 0, 1245, 1246, 413, 414, 415,
	1247, 1248, 416, 417, 571, 1076, 418, 1077, 572, 419,
	420, 412, 421, 422, 423, 424, 425, 426, 427, 428,
	1249, 429, 430, 573, 574, 575, 431, 576, 432, 433,
	1250, 434, 0, 435, 436, 437, 438, 439, 440, 441,
	577, 443, 442, 444, 1251, 445, 0, 0, 0, 0,
	0, 446, 0, 448, 449, 450, 447, 451, 452, 453,
	454, 1252, 455, 456, 457, 1078, 458, 459, 460, 461,
	578, 462, 0, 463, 464, 470, 471, 465, 466, 472,
	473, 474, 475, 476, 1253, 478, 479, 477, 480, 481,
	482, 1254, 483, 467, 468, 484, 485, 1079, 486, 487,
	488, 489, 490, 491, 579, 0, 492, 1255, 493, 494,
	495, 496, 469, 497, 502, 580, 498, 499, 500, 501,
	581, 1256, 504, 505, 0, 503, 1257, 506, 507, 508,
	509, 510, 511, 326, 512, 1258, 513, 582, 583, 584,
	585, 1259, 520, 1260, 514, 515, 586, 516, 587, 1261,
	517, 518, 519, 0, 521, 522, 1262, 1263, 523, 524,
	525, 527, 528, 526, 529, 1264, 530, 1265, 0, 531,
	532, 533, 588, 589, 590, 1266, 535, 534, 591, 1267,
	1268, 1269, 1270, 536, 537, 592, 538, 539, 540, 1183,
	0, 1186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 1192, 255, 256, 1193, 1194, 1195,
	0, 1196, 541, 1197, 1198, 1199, 1200, 257, 258, 260,
	259, 261, 262, 263, 264, 542, 543, 0, 265, 544,
	266, 545, 1201, 546, 267, 268, 269, 270, 271, 1202,
	1203, 0, 272, 547, 548, 549, 1204, 273, 274, 550,
	1205, 1272, 1206, 275, 276, 277, 278, 279, 280, 281,
	0, 1207, 283, 284, 285, 282, 1208, 286, 0, 287,
	288, 289, 290, 291, 292, 1209, 293, 294, 295, 1064,
	296, 297, 1210, 1211, 1213, 1212, 1214, 1215, 1216, 298,
	299, 300, 301, 0, 302, 551, 552, 1217, 306, 303,
	304, 1218, 307, 305, 1219, 308, 309, 310, 1220, 1221,
	311, 312, 313, 1222, 314, 315, 1223, 316, 317, 318,
	1224, 319, 320, 553, 321, 322, 323, 325, 327, 324,
	328, 329, 330, 331, 554, 555, 1225, 246, 1226, 0,
	0, 0, 0, 332, 333, 334, 556, 0, 0, 0,
	335, 1227, 336, 1228, 1229, 1065, 337, 338, 557, 558,
	339, 340, 1230, 341, 559, 1231, 560, 342, 1232, 343,
	344, 345, 346, 347, 561, 562, 563, 408, 1067, 348,
	349, 1233, 350, 351, 352, 353, 0, 0, 0, 247,
	354, 355, 357, 1234, 1066, 356, 564, 565, 1235, 566,
	1236, 358, 359, 1068, 567, 1069, 360, 361, 362, 1070,
	363, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	1237, 370, 372, 371, 1238, 373, 568, 1071, 374, 375,
	1072, 1239, 376, 377, 378, 1240, 1241, 379, 380, 381,
	382, 0, 383, 384, 386, 388, 385, 387, 392, 389,
	390, 391, 394, 0, 393, 1073, 395, 396, 397, 403,
	404, 400, 401, 402, 405, 399, 1074, 398, 1242, 248,
	1075, 406, 1243, 569, 407, 570, 409, 410, 1244, 0,
	411, 0, 1245, 1246, 413, 414, 415, 1247, 1248, 416,
	417, 571, 1076, 418, 1077, 572, 419, 420, 412, 421,
	422, 423, 424, 425, 426, 427, 428, 1249, 429, 430,
	573, 574, 575, 431, 576, 432, 433, 1250, 434, 0,
	435, 436, 437, 438, 439, 440, 441, 577, 443, 442,
	444, 1251, 445, 0, 0, 0, 0, 0, 446, 0,
	448, 449, 450, 447, 451, 452, 453, 454, 1252, 455,
	456, 457, 1078, 458, 459, 460, 461, 578, 462, 0,
	463, 464, 470, 471, 465, 466, 472, 473, 474, 475,
	476, 1253, 478, 479, 477, 480, 481, 482, 1254, 483,
	467, 468, 484, 485, 1079, 486, 487, 488, 489, 490,
	491, 579, 0, 492, 1255, 493, 494, 495, 496, 469,
	497, 502, 580, 498, 499, 500, 501, 581, 1256, 504,
	505, 0, 503, 1257, 506, 507, 508, 509, 510, 511,
	326, 512, 1258, 513, 582, 583, 584, 585, 1259, 520,
	1260, 514, 515, 586, 516, 587, 1261, 517, 518, 519,
	0, 521, 522, 1262, 1263, 523, 524, 525, 527, 528,
	526, 529, 1264, 530, 1265, 0, 531, 532, 533, 588,
	589, 590, 1266, 535, 534, 591, 1267, 1268, 1269, 1270,
	536, 537, 592, 538, 539, 540, 1186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 1192,
	255, 256, 1193, 1194, 1195, 0, 1196, 541, 1197, 1198,
	1199, 1200, 257, 258, 260, 259, 261, 262, 263, 264,
	542, 543, 0, 265, 544, 266, 545, 1201, 546, 267,
	268, 269, 270, 271, 1202, 1203, 0, 272, 547, 548,
	549, 1204, 273, 274, 550, 1205, 1272, 1206, 275, 276,
	277, 278, 279, 280, 281, 0, 1207, 283, 284, 285,
	282, 1208, 286, 0, 287, 288, 289, 290, 291, 292,
	1209, 293, 294, 295, 1064, 296, 297, 1210, 1211, 1213,
	1212, 1214, 1215, 1216, 298, 299, 300, 301, 0, 302,
	551, 552, 1217, 306, 303, 304, 1218, 307, 305, 1219,
	308, 309, 310, 1220, 1221, 311, 312, 313, 1222, 314,
	315, 1223, 316, 317, 318, 1224, 319, 320, 553, 321,
	322, 323, 325, 327, 324, 328, 329, 330, 331, 554,
	555, 1225, 246, 1226, 0, 0, 0, 0, 332, 333,
	334, 556, 0, 0, 0, 335, 1227, 336, 1228, 1229,
	1065, 337, 338, 557, 558, 339, 340, 1230, 341, 559,
	1231, 560, 342, 1232, 343, 344, 345, 346, 347, 561,
	562, 563, 408, 1067, 348, 349, 1233, 350, 351, 352,
	353, 0, 0, 0, 247, 354, 355, 357, 1234, 1066,
	356, 564, 565, 1235, 566, 1236, 358, 359, 1068, 567,
	1069, 360, 361, 362, 1070, 363, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 1237, 370, 372, 371, 1238,
	373, 568, 1071, 374, 375, 1072, 1239, 376, 377, 378,
	1240, 1241, 379, 380, 381, 382, 0, 383, 384, 386,
	388, 385, 387, 392, 389, 390, 391, 394, 0, 393,
	1073, 395, 396, 397, 403, 404, 400, 401, 402, 405,
	399, 1074, 398, 1242, 248, 1075, 406, 1243, 569, 407,
	570, 409, 410, 1244, 0, 411, 0, 1245, 1246, 413,
	414, 415, 1247, 1248, 416, 417, 571, 1076, 418, 1077,
	572, 419, 420, 412, 421, 422, 423, 424, 425, 426,
	427, 428, 1249, 429, 430, 573, 574, 575, 431, 576,
	432, 433, 1250, 434, 0, 435, 436, 437, 438, 439,
	440, 441, 577, 443, 442, 444, 1251, 445, 0, 0,
	0, 0, 0, 446, 0, 448, 449, 450, 447, 451,
	452, 453, 454, 1252, 455, 456, 457, 1078, 458, 459,
	460, 461, 578, 462, 0, 463, 464, 470, 471, 465,
	466, 472, 473, 474, 475, 476, 1253, 478, 479, 477,
	480, 481, 482, 1254, 483, 467, 468, 484, 485, 1079,
	486, 487, 488, 489, 490, 491, 579, 0, 492, 1255,
	493, 494, 495, 496, 469, 497, 502, 580, 498, 499,
	500, 501, 581, 1256, 504, 505, 0, 503, 1257, 506,
	507, 508, 509, 510, 511, 326, 512, 1258, 513, 582,
	583, 584, 585, 1259, 520, 1260, 514, 515, 586, 516,
	587, 1261, 517, 518, 519, 0, 521, 522, 1262, 1263,
	523, 524, 525, 527, 528, 526, 529, 1264, 530, 1265,
	0, 531, 532, 533, 588, 589, 590, 1266, 535, 534,
	591, 1267, 1268, 1269, 1270, 536, 537, 592, 538, 539,
	540, 2283, 0, 1000, 972, 973, 974, 970, 971, 983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 2280, 255, 256, 0,
	0, 0, 0, 0, 1024, 988, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 542, 1037, 0,
	265, 1044, 266, 1043, 0, 1054, 267, 268, 269, 270,
	271, 990, 1023, 957, 272, 1083, 1084, 549, 0, 273,
	274, 1030, 0, 1011, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	295, 1064, 296, 297, 1014, 1012, 1013, 1020, 1016, 1015,
	1019, 298, 299, 300, 301, 1047, 302, 1041, 1040, 961,
	306, 303, 304, 0, 307, 305, 0, 308, 309, 310,
	2281, 0, 311, 1032, 313, 0, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 967, 321, 322, 323, 325,
	327, 324, 328, 329, 330, 331, 1055, 1056, 979, 246,
	0, 0, 0, 0, 0, 332, 333, 334, 1039, 0,
	0, 0, 335, 0, 336, 0, 0, 1065, 337, 338,
	1052, 1053, 339, 340, 0, 341, 1062, 0, 989, 342,
	0, 343, 344, 345, 346, 347, 1025, 1026, 1029, 408,
	1067, 348, 349, 0, 350, 351, 352, 353, 0, 0,
	0, 247, 354, 355, 357, 0, 1066, 356, 1034, 1035,
	0, 995, 0, 358, 359, 1068, 1027, 1069, 360, 361,
	362, 1070, 363, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 0, 370, 372, 371, 0, 373, 1063, 1071,
	374, 375, 1072, 0, 376, 377, 378, 1018, 1017, 379,
	380, 381, 382, 0, 383, 384, 386, 388, 385, 387,
	392, 389, 390, 391, 394, 0, 393, 1073, 395, 396,
	397, 403, 404, 400, 401, 402, 405, 399, 1074, 398,
	958, 248, 1075, 406, 980, 1028, 407, 1042, 409, 410,
	0, 0, 411, 0, 0, 0, 413, 414, 415, 0,
	0, 416, 417, 571, 1076, 418, 1077, 1057, 419, 420,
	412, 421, 422, 423, 424, 425, 426, 427, 428, 0,
	429, 430, 573, 574, 1058, 431, 576, 432, 433, 0,
	434, 0, 435, 436, 437, 438, 439, 440, 441, 1038,
	443, 442, 444, 0, 445, 0, 0, 0, 0, 0,
	446, 0, 448, 449, 450, 447, 451, 452, 453, 454,
	0, 455, 456, 457, 1078, 458, 459, 460, 461, 968,
	462, 0, 463, 464, 470, 471, 465, 466, 472, 473,
	474, 475, 476, 0, 478, 479, 477, 480, 481, 482,
	1021, 483, 467, 468, 484, 485, 1079, 486, 487, 488,
	489, 490, 491, 1036, 0, 492, 0, 493, 494, 495,
	496, 469, 497, 502, 1082, 498, 499, 500, 501, 1059,
	0, 504, 505, 956, 503, 0, 506, 507, 508, 509,
	510, 511, 326, 512, 0, 513, 1048, 1049, 1050, 1051,
	0, 520, 0, 514, 515, 1060, 516, 1061, 978, 517,
	518, 519, 0, 521, 522, 0, 962, 523, 524, 525,
	527, 528, 526, 529, 1022, 530, 0, 0, 531, 532,
	533, 588, 1045, 1081, 2279, 535, 534, 591, 0, 0,
	0, 0, 536, 537, 592, 538, 539, 540, 959, 0,
	0, 0, 0, 0, 0, 955, 0, 0, 0, 0,
	0, 0, 953, 954, 2282, 0, 0, 0, 0, 0,
	0, 984, 2278, 0, 946, 982, 1000, 972, 973, 974,
	970, 971, 983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1024, 988, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	542, 1037, 0, 265, 1044, 266, 1043, 0, 1054, 267,
	268, 269, 270, 271, 990, 1023, 957, 272, 1083, 1084,
	549, 0, 273, 274, 1030, 0, 1011, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 295, 1064, 296, 297, 1014, 1012, 1013,
	1020, 1016, 1015, 1019, 298, 299, 300, 301, 1047, 302,
	1041, 1040, 961, 306, 303, 304, 0, 307, 305, 0,
	308, 309, 310, 0, 0, 311, 1032, 313, 0, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 967, 321,
	322, 323, 325, 327, 324, 328, 329, 330, 331, 1055,
	1056, 979, 246, 0, 0, 0, 0, 0, 332, 333,
	334, 1039, 0, 0, 0, 335, 0, 336, 0, 0,
	1065, 337, 338, 1052, 1053, 339, 340, 0, 341, 1062,
	0, 989, 342, 0, 343, 344, 345, 346, 347, 1025,
	1026, 1029, 408, 1067, 348, 349, 0, 350, 351, 352,
	353, 0, 0, 0, 247, 354, 355, 357, 0, 1066,
	356, 1034, 1035, 0, 995, 0, 358, 359, 1068, 1027,
	1069, 360, 361, 362, 1070, 363, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 0, 370, 372, 371, 0,
	373, 1063, 1071, 374, 375, 1072, 0, 376, 377, 378,
	1018, 1017, 379, 380, 381, 382, 0, 383, 384, 386,
	388, 385, 387, 392, 389, 390, 391, 394, 0, 393,
	1073, 395, 396, 397, 403, 404, 400, 401, 402, 405,
	399, 1074, 398, 958, 248, 1075, 406, 980, 1028, 407,
	1042, 409, 410, 0, 0, 411, 0, 0, 0, 413,
	414, 415, 0, 0, 416, 417, 571, 1076, 418, 1077,
	1057, 419, 420, 412, 421, 422, 423, 424, 425, 426,
	427, 428, 0, 429, 430, 573, 574, 1058, 431, 576,
	432, 433, 0, 434, 0, 435, 436, 437, 438, 439,
	440, 441, 1038, 443, 442, 444, 0, 445, 0, 0,
	0, 0, 0, 446, 0, 448, 449, 450, 447, 451,
	452, 453, 454, 0, 455, 456, 457, 1078, 458, 459,
	460, 461, 968, 462, 0, 463, 464, 470, 471, 465,
	466, 472, 473, 474, 475, 476, 210, 478, 479, 477,
	480, 481, 482, 1021, 483, 467, 468, 484, 485, 1079,
	486, 487, 488, 489, 490, 491, 1036, 0, 492, 0,
	493, 494, 495, 496, 469, 497, 502, 1082, 498, 499,
	500, 501, 1059, 0, 504, 505, 956, 503, 212, 506,
	507, 508, 509, 510, 511, 326, 512, 0, 513, 1048,
	1049, 1050, 1051, 0, 520, 0, 514, 515, 1060, 516,
	1061, 978, 517, 518, 519, 0, 521, 522, 0, 962,
	523, 524, 525, 527, 528, 526, 529, 1022, 530, 0,
	0, 531, 532, 533, 1457, 1045, 1081, 0, 535, 534,
	591, 0, 0, 0, 204, 536, 537, 592, 538, 539,
	540, 959, 205, 0, 0, 0, 0, 0, 955, 0,
	0, 0, 0, 0, 0, 953, 954, 1000, 972, 973,
	974, 970, 971, 983, 1692, 1690, 0, 0, 982, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1024, 988,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 542, 1037, 0, 265, 1044, 266, 1043, 0, 1054,
	267, 268, 269, 270, 271, 990, 1023, 957, 272, 1083,
	1084, 549, 0, 273, 274, 1030, 0, 1011, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 295, 1064, 296, 297, 1014, 1012,
	1013, 1020, 1016, 1015, 1019, 298, 299, 300, 301, 1047,
	302, 1041, 1040, 961, 306, 303, 304, 0, 307, 305,
	0, 308, 309, 310, 0, 0, 311, 1032, 313, 0,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 967,
	321, 322, 323, 325, 327, 324, 328, 329, 330, 331,
	1055, 1056, 979, 246, 0, 0, 0, 0, 0, 332,
	333, 334, 1039, 0, 0, 0, 335, 0, 336, 0,
	0, 1065, 337, 338, 1052, 1053, 339, 340, 0, 341,
	1062, 0, 989, 342, 0, 343, 344, 345, 346, 347,
	1025, 1026, 1029, 408, 1067, 348, 349, 0, 350, 351,
	352, 353, 0, 0, 0, 247, 354, 355, 357, 0,
	1066, 356, 1034, 1035, 0, 995, 0, 358, 359, 1068,
	1027, 1069, 360, 361, 362, 1070, 363, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 0, 370, 372, 371,
	0, 373, 1063, 1071, 374, 375, 1072, 0, 376, 377,
	378, 1018, 1017, 379, 380, 381, 382, 0, 383, 384,
	386, 388, 385, 387, 392, 389, 390, 391, 394, 0,
	393, 1073, 395, 396, 397, 403, 404, 400, 401, 402,
	405, 399, 1074, 398, 958, 248, 1075, 406, 980, 1028,
	407, 1042, 409, 410, 0, 0, 411, 0, 0, 0,
	413, 414, 415, 0, 0, 416, 417, 571, 1076, 418,
	1077, 1057, 419, 420, 412, 421, 422, 423, 424, 425,
	426, 427, 428, 0, 429, 430, 573, 574, 1058, 431,
	576, 432, 433, 0, 434, 0, 435, 436, 437, 438,
	439, 440, 441, 1038, 443, 442, 444, 0, 445, 0,
	0, 0, 0, 0, 446, 0, 448, 449, 450, 447,
	451, 452, 453, 454, 0, 455, 456, 457, 1078, 458,
	459, 460, 461, 968, 462, 0, 463, 464, 470, 471,
	465, 466, 472, 473, 474, 475, 476, 210, 478, 479,
	477, 480, 481, 482, 1021, 483, 467, 468, 484, 485,
	1079, 486, 487, 488, 489, 490, 491, 1036, 0, 492,
	0, 493, 494, 495, 496, 469, 497, 502, 1082, 498,
	499, 500, 501, 1059, 0, 504, 505, 956, 503, 212,
	506, 507, 508, 509, 510, 511, 326, 512, 0, 513,
	1048, 1049, 1050, 1051, 0, 520, 0, 514, 515, 1060,
	516, 1061, 978, 517, 518, 519, 0, 521, 522, 0,
	962, 523, 524, 525, 527, 528, 526, 529, 1022, 530,
	0, 0, 531, 532, 533, 1457, 1045, 1081, 0, 535,
	534, 591, 0, 0, 0, 204, 536, 537, 592, 538,
	539, 540, 959, 205, 0, 0, 0, 0, 0, 955,
	0, 0, 0, 0, 0, 0, 953, 954, 1000, 972,
	973, 974, 970, 971, 983, 1692, 2818, 0, 0, 982,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1024,
	988, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 542, 1037, 0, 265, 1044, 266, 1043, 0,
	1054, 267, 268, 269, 270, 271, 990, 1023, 957, 272,
	1083, 1084, 549, 0, 273, 274, 1030, 0, 1011, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 295, 1064, 296, 297, 1014,
	1012, 1013, 1020, 1016, 1015, 1019, 298, 299, 300, 301,
	1047, 302, 1041, 1040, 961, 306, 303, 304, 0, 307,
	305, 0, 308, 309, 310, 0, 0, 311, 1032, 313,
	0, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	967, 321, 322, 323, 325, 327, 324, 328, 329, 330,
	331, 1055, 1056, 979, 246, 0, 0, 0, 0, 0,
	332, 333, 334, 1039, 0, 0, 0, 335, 0, 336,
	0, 0, 1065, 337, 338, 1052, 1053, 339, 340, 0,
	341, 1062, 0, 989, 342, 0, 343, 344, 345, 346,
	347, 1025, 1026, 1029, 408, 1067, 348, 349, 0, 350,
	351, 352, 353, 0, 0, 0, 247, 354, 355, 357,
	0, 1066, 356, 1034, 1035, 0, 995, 0, 358, 359,
	1068, 1027, 1069, 360, 361, 362, 1070, 363, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 0, 370, 372,
	371, 0, 373, 1063, 1071, 374, 375, 1072, 0, 376,
	377, 378, 1018, 1017, 379, 380, 381, 382, 0, 383,
	384, 386, 388, 385, 387, 392, 389, 390, 391, 394,
	0, 393, 1073, 395, 396, 397, 403, 404, 400, 401,
	402, 405, 399, 1074, 398, 958, 248, 1075, 406, 980,
	1028, 407, 1042, 409, 410, 0, 0, 411, 0, 0,
	0, 413, 414, 415, 0, 0, 416, 417, 571, 1076,
	418, 1077, 1057, 419, 420, 412, 421, 422, 423, 424,
	425, 426, 427, 428, 0, 429, 430, 573, 574, 1058,
	431, 576, 432, 433, 0, 434, 0, 435, 436, 437,
	438, 439, 440, 441, 1038, 443, 442, 444, 0, 445,
	0, 0, 0, 0, 0, 446, 0, 448, 449, 450,
	447, 451, 452, 453, 454, 0, 455, 456, 457, 1078,
	458, 459, 460, 461, 968, 462, 0, 463, 464, 470,
	471, 465, 466, 472, 473, 474, 475, 476, 210, 478,
	479, 477, 480, 481, 482, 1021, 483, 467, 468, 484,
	485, 1079, 486, 487, 488, 489, 490, 491, 1036, 0,
	492, 0, 493, 494, 495, 496, 469, 497, 502, 1082,
	498, 499, 500, 501, 1059, 0, 504, 505, 956, 503,
	212, 506, 507, 508, 509, 510, 511, 326, 512, 0,
	513, 1048, 1049, 1050, 1051, 0, 520, 0, 514, 515,
	1060, 516, 1061, 978, 517, 518, 519, 0, 521, 522,
	0, 962, 523, 524, 525, 527, 528, 526, 529, 1022,
	530, 0, 0, 531, 532, 533, 1457, 1045, 1081, 0,
	535, 534, 591, 0, 0, 0, 204, 536, 537, 592,
	538, 539, 540, 959, 205, 0, 0, 0, 0, 0,
	955, 0, 0, 0, 0, 0, 0, 953, 954, 1000,
	972, 973, 974, 970, 971, 983, 1692, 1690, 0, 0,
	982, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1024, 988, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 542, 1037, 0, 265, 1044, 266, 1043,
	2387, 1054, 267, 268, 269, 270, 271, 990, 1023, 957,
	272, 1083, 1084, 549, 0, 273, 274, 1030, 0, 1011,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 295, 1064, 296, 297,
	1014, 1012, 1013, 1020, 1016, 1015, 1019, 298, 299, 300,
	301, 1047, 302, 1041, 1040, 961, 306, 303, 304, 0,
	307, 305, 0, 308, 309, 310, 0, 0, 311, 1032,
	313, 0, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 967, 321, 322, 323, 325, 327, 324, 328, 329,
	330, 331, 1055, 1056, 979, 246, 0, 0, 0, 0,
	0, 332, 333, 334, 1039, 0, 0, 0, 335, 0,
	336, 0, 2392, 1065, 337, 338, 1052, 1053, 339, 340,
	0, 341, 1062, 0, 989, 342, 0, 343, 344, 345,
	346, 347, 1025, 1026, 1029, 408, 1067, 348, 349, 0,
	350, 351, 352, 353, 0, 0, 0, 247, 354, 355,
	357, 0, 1066, 356, 1034, 1035, 0, 995, 0, 358,
	359, 1068, 1027, 1069, 360, 361, 362, 1070, 363, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 0, 370,
	372, 371, 2388, 373, 1063, 1071, 374, 375, 1072, 0,
	376, 377, 378, 1018, 1017, 379, 380, 381, 382, 0,
	383, 384, 386, 388, 385, 387, 392, 389, 390, 391,
	394, 0, 393, 1073, 395, 396, 397, 403, 404, 400,
	401, 402, 405, 399, 1074, 398, 958, 248, 1075, 406,
	980, 1028, 407, 1042, 409, 410, 0, 0, 411, 0,
	0, 0, 413, 414, 415, 0, 0, 416, 417, 571,
	1076, 418, 1077, 1057, 419, 420, 412, 421, 422, 423,
	424, 425, 426, 427, 428, 0, 429, 430, 573, 574,
	1058, 431, 576, 432, 433, 0, 434, 0, 435, 436,
	437, 438, 439, 440, 441, 1038, 443, 442, 444, 0,
	445, 0, 0, 0, 0, 0, 446, 0, 448, 449,
	450, 447, 451, 452, 453, 454, 0, 455, 456, 457,
	1078, 458, 459, 460, 461, 968, 462, 0, 463, 464,
	470, 471, 465, 466, 472, 473, 474, 475, 476, 0,
	478, 479, 477, 480, 481, 482, 1021, 483, 467, 468,
	484, 485, 1079, 486, 487, 488, 489, 490, 491, 1036,
	0, 492, 0, 493, 494, 495, 496, 469, 497, 502,
	1082, 498, 499, 500, 501, 1059, 0, 504, 505, 956,
	503, 0, 506, 507, 508, 509, 510, 511, 326, 512,
	0, 513, 1048, 1049, 1050, 1051, 0, 520, 2389, 514,
	515, 1060, 516, 1061, 978, 517, 518, 519, 0, 521,
	522, 0, 962, 523, 524, 525, 527, 528, 526, 529,
	1022, 530, 0, 0, 531, 532, 533, 588, 1045, 1081,
	0, 535, 534, 591, 0, 0, 0, 0, 536, 537,
	592, 538, 539, 540, 959, 0, 0, 0, 0, 0,
	0, 955, 0, 0, 0, 0, 0, 0, 953, 954,
	0, 0, 0, 0, 0, 0, 0, 984, 0, 0,
	2328, 982, 1000, 972, 973, 974, 970, 971, 983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1024, 988, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 1037, 0, 265,
	1044, 266, 1043, 0, 1054, 267, 268, 269, 270, 271,
	990, 1023, 957, 272, 1083, 1084, 549, 0, 273, 274,
	1030, 0, 1011, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 295,
	1064, 296, 297, 1014, 1012, 1013, 1020, 1016, 1015, 1019,
	298, 299, 300, 301, 1047, 302, 1041, 1040, 961, 306,
	303, 304, 0, 307, 305, 0, 308, 309, 310, 0,
	0, 311, 1032, 313, 0, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 967, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 1055, 1056, 979, 246, 0,
	0, 0, 0, 0, 332, 333, 334, 1039, 0, 0,
	0, 335, 0, 336, 0, 0, 1065, 337, 338, 1052,
	1053, 339, 340, 0, 341, 1062, 0, 989, 342, 0,
	343, 344, 345, 346, 347, 1025, 1026, 1029, 408, 1067,
	348, 349, 0, 350, 351, 352, 353, 0, 0, 0,
	247, 354, 355, 357, 0, 1066, 356, 1034, 1035, 0,
	995, 0, 358, 359, 1068, 1027, 1069, 360, 361, 362,
	1070, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 0, 370, 372, 371, 0, 373, 1063, 1071, 374,
	375, 1072, 0, 376, 377, 378, 1018, 1017, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 1073, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 1074, 398, 958,
	248, 1075, 406, 980, 1028, 407, 1042, 409, 410, 0,
	0, 411, 0, 0, 0, 413, 414, 415, 0, 0,
	416, 417, 571, 1076, 418, 1077, 1057, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 0, 429,
	430, 573, 574, 1058, 431, 576, 432, 433, 0, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 1038, 443,
	442, 444, 0, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 0,
	455, 456, 457, 1078, 458, 459, 460, 461, 968, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 0, 478, 479, 477, 480, 481, 482, 1021,
	483, 467, 468, 484, 485, 1079, 486, 487, 488, 489,
	490, 491, 1036, 0, 492, 0, 493, 494, 495, 496,
	469, 497, 502, 1082, 498, 499, 500, 501, 1059, 0,
	504, 505, 956, 503, 0, 506, 507, 508, 509, 510,
	511, 326, 512, 0, 513, 1048, 1049, 1050, 1051, 0,
	520, 0, 514, 515, 1060, 516, 1061, 978, 517, 518,
	519, 0, 521, 522, 0, 962, 523, 524, 525, 527,
	528, 526, 529, 1022, 530, 0, 0, 531, 532, 533,
	588, 1045, 1081, 0, 535, 534, 591, 0, 0, 0,
	0, 536, 537, 592, 538, 539, 540, 959, 0, 0,
	0, 0, 0, 0, 955, 0, 0, 0, 0, 0,
	0, 953, 954, 0, 0, 0, 0, 0, 0, 0,
	984, 2326, 0, 2325, 982, 1000, 972, 973, 974, 970,
	971, 983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1024, 988, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 542,
	1037, 0, 265, 1044, 266, 1043, 0, 1054, 267, 268,
	269, 270, 271, 990, 1023, 957, 272, 1083, 1084, 549,
	0, 273, 274, 1030, 0, 1011, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 295, 1064, 296, 297, 1014, 1012, 1013, 1020,
	1016, 1015, 1019, 298, 299, 300, 301, 1047, 302, 1041,
	1040, 961, 306, 303, 304, 0, 307, 305, 0, 308,
	309, 310, 0, 0, 311, 1032, 313, 0, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 967, 321, 322,
	323, 325, 327, 324, 328, 329, 330, 331, 1055, 1056,
	979, 246, 0, 0, 0, 0, 0, 332, 333, 334,
	1039, 0, 0, 0, 335, 0, 336, 0, 0, 1065,
	337, 338, 1052, 1053, 339, 340, 0, 341, 1062, 0,
	989, 342, 0, 343, 344, 345, 346, 347, 1025, 1026,
	1029, 408, 1067, 348, 349, 0, 350, 351, 352, 353,
	0, 0, 0, 247, 354, 355, 357, 0, 1066, 356,
	1034, 1035, 0, 995, 0, 358, 359, 1068, 1027, 1069,
	360, 361, 362, 1070, 363, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 0, 370, 372, 371, 0, 373,
	1063, 1071, 374, 375, 1072, 0, 376, 377, 378, 1018,
	1017, 379, 380, 381, 382, 0, 383, 384, 386, 388,
	385, 387, 392, 389, 390, 391, 394, 0, 393, 1073,
	395, 396, 397, 403, 404, 400, 401, 402, 405, 399,
	1074, 398, 958, 248, 1075, 406, 980, 1028, 407, 1042,
	409, 410, 0, 0, 411, 0, 0, 0, 413, 414,
	415, 0, 0, 416, 417, 571, 1076, 418, 1077, 1057,
	419, 420, 412, 421, 422, 423, 424, 425, 426, 427,
	428, 0, 429, 430, 573, 574, 1058, 431, 576, 432,
	433, 0, 434, 0, 435, 436, 437, 438, 439, 440,
	441, 1038, 443, 442, 444, 0, 445, 0, 0, 0,
	0, 0, 446, 0, 448, 449, 450, 447, 451, 452,
	453, 454, 0, 455, 456, 457, 1078, 458, 459, 460,
	461, 968, 462, 0, 463, 464, 470, 471, 465, 466,
	472, 473, 474, 475, 476, 0, 478, 479, 477, 480,
	481, 482, 1021, 483, 467, 468, 484, 485, 1079, 486,
	487, 488, 489, 490, 491, 1036, 0, 492, 0, 493,
	494, 495, 496, 469, 497, 502, 1082, 498, 499, 500,
	501, 1059, 0, 504, 505, 956, 503, 0, 506, 507,
	508, 509, 510, 511, 326, 512, 0, 513, 1048, 1049,
	1050, 1051, 0, 520, 0, 514, 515, 1060, 516, 1061,
	978, 517, 518, 519, 0, 521, 522, 0, 962, 523,
	524, 525, 527, 528, 526, 529, 1022, 530, 0, 0,
	531, 532, 533, 588, 1045, 1081, 0, 535, 534, 591,
	0, 0, 0, 0, 536, 537, 592, 538, 539, 540,
	959, 0, 0, 0, 0, 0, 0, 955, 0, 0,
	0, 0, 0, 0, 953, 954, 0, 0, 0, 0,
	0, 0, 0, 984, 2323, 0, 2322, 982, 1000, 972,
	973, 974, 970, 971, 983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1024,
	988, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 542, 1037, 0, 265, 1044, 266, 1043, 0,
	1054, 267, 268, 269, 270, 271, 990, 1023, 957, 272,
	1083, 1084, 549, 0, 273, 274, 1030, 0, 1011, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 295, 1064, 296, 297, 1014,
	1012, 1013, 1020, 1016, 1015, 1019, 298, 299, 300, 301,
	1047, 302, 1041, 1040, 961, 306, 303, 304, 0, 307,
	305, 0, 308, 309, 310, 0, 0, 311, 1032, 313,
	0, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	967, 321, 322, 323, 325, 327, 324, 328, 329, 330,
	331, 1055, 1056, 979, 246, 0, 0, 0, 0, 0,
	332, 333, 334, 1039, 0, 0, 0, 335, 0, 336,
	0, 0, 1065, 337, 338, 1052, 1053, 339, 340, 0,
	341, 1062, 0, 989, 342, 0, 343, 344, 345, 346,
	347, 1025, 1026, 1029, 408, 1067, 348, 349, 0, 350,
	351, 352, 353, 0, 0, 0, 247, 354, 355, 357,
	0, 1066, 356, 1034, 1035, 0, 995, 0, 358, 359,
	1068, 1027, 1069, 360, 361, 362, 1070, 363, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 0, 370, 372,
	371, 0, 373, 1063, 1071, 374, 375, 1072, 0, 376,
	377, 378, 1018, 1017, 379, 380, 381, 382, 0, 383,
	384, 386, 388, 385, 387, 392, 389, 390, 391, 394,
	0, 393, 1073, 395, 396, 397, 403, 404, 400, 401,
	402, 405, 399, 1074, 398, 958, 248, 1075, 406, 980,
	1028, 407, 1042, 409, 410, 0, 0, 411, 0, 0,
	0, 413, 414, 415, 0, 0, 416, 417, 571, 1076,
	418, 1077, 1057, 419, 420, 412, 421, 422, 423, 424,
	425, 426, 427, 428, 0, 429, 430, 573, 574, 1058,
	431, 576, 432, 433, 0, 434, 0, 435, 436, 437,
	438, 439, 440, 441, 1038, 443, 442, 444, 0, 445,
	0, 0, 0, 0, 0, 446, 0, 448, 449, 450,
	447, 451, 452, 453, 454, 0, 455, 456, 457, 1078,
	458, 459, 460, 461, 968, 462, 0, 463, 464, 470,
	471, 465, 466, 472, 473, 474, 475, 476, 0, 478,
	479, 477, 480, 481, 482, 1021, 483, 467, 468, 484,
	485, 1079, 486, 487, 488, 489, 490, 491, 1036, 0,
	492, 0, 493, 494, 495, 496, 469, 497, 502, 1082,
	498, 499, 500, 501, 1059, 0, 504, 505, 956, 503,
	0, 506, 507, 508, 509, 510, 511, 326, 512, 0,
	513, 1048, 1049, 1050, 1051, 0, 520, 0, 514, 515,
	1060, 516, 1061, 978, 517, 518, 519, 0, 521, 522,
	0, 962, 523, 524, 525, 527, 528, 526, 529, 1022,
	530, 0, 0, 531, 532, 533, 588, 1045, 1081, 0,
	535, 534, 591, 0, 0, 0, 0, 536, 537, 592,
	538, 539, 540, 959, 0, 0, 0, 0, 0, 0,
	955, 0, 0, 0, 0, 0, 0, 953, 954, 0,
	0, 0, 0, 0, 0, 0, 984, 2320, 0, 2319,
	982, 1000, 972, 973, 974, 970, 971, 983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1024, 988, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 542, 1037, 0, 265, 1044,
	266, 1043, 0, 1054, 267, 268, 269, 270, 271, 990,
	1023, 957, 272, 1083, 1084, 549, 0, 273, 274, 1030,
	0, 1011, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 295, 1064,
	296, 297, 1014, 1012, 1013, 1020, 1016, 1015, 1019, 298,
	299, 300, 301, 1047, 302, 1041, 1040, 961, 306, 303,
	304, 0, 307, 305, 0, 308, 309, 310, 0, 0,
	311, 1032, 313, 0, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 967, 321, 322, 323, 325, 327, 324,
	328, 329, 330, 331, 1055, 1056, 979, 246, 0, 0,
	0, 0, 0, 332, 333, 334, 1039, 0, 0, 0,
	335, 0, 336, 0, 0, 1065, 337, 338, 1052, 1053,
	339, 340, 0, 341, 1062, 0, 989, 342, 0, 343,
	344, 345, 346, 347, 1025, 1026, 1029, 408, 1067, 348,
	349, 0, 350, 351, 352, 353, 0, 0, 0, 247,
	354, 355, 357, 0, 1066, 356, 1034, 1035, 0, 995,
	0, 358, 359, 1068, 1027, 1069, 360, 361, 362, 1070,
	363, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	0, 370, 372, 371, 0, 373, 1063, 1071, 374, 375,
	1072, 0, 376, 377, 378, 1018, 1017, 379, 380, 381,
	382, 0, 383, 384, 386, 388, 385, 387, 392, 389,
	390, 391, 394, 0, 393, 1073, 395, 396, 397, 403,
	404, 400, 401, 402, 405, 399, 1074, 398, 958, 248,
	1075, 406, 980, 1028, 407, 1042, 409, 410, 0, 0,
	411, 0, 0, 0, 413, 414, 415, 0, 0, 416,
	417, 571, 1076, 418, 1077, 1057, 419, 420, 412, 421,
	422, 423, 424, 425, 426, 427, 428, 0, 429, 430,
	573, 574, 1058, 431, 576, 432, 433, 0, 434, 0,
	435, 436, 437, 438, 439, 440, 441, 1038, 443, 442,
	444, 0, 445, 0, 0, 0, 0, 0, 446, 0,
	448, 449, 450, 447, 451, 452, 453, 454, 0, 455,
	456, 457, 1078, 458, 459, 460, 461, 968, 462, 0,
	463, 464, 470, 471, 465, 466, 472, 473, 474, 475,
	476, 0, 478, 479, 477, 480, 481, 482, 1021, 483,
	467, 468, 484, 485, 1079, 486, 487, 488, 489, 490,
	491, 1036, 0, 492, 0, 493, 494, 495, 496, 469,
	497, 502, 1082, 498, 499, 500, 501, 1059, 0, 504,
	505, 956, 503, 0, 506, 507, 508, 509, 510, 511,
	326, 512, 0, 513, 1048, 1049, 1050, 1051, 0, 520,
	0, 514, 515, 1060, 516, 1061, 978, 517, 518, 519,
	0, 521, 522, 0, 962, 523, 524, 525, 527, 528,
	526, 529, 1022, 530, 0, 0, 531, 532, 533, 588,
	1045, 1081, 0, 535, 534, 591, 0, 0, 0, 0,
	536, 537, 592, 538, 539, 540, 959, 0, 0, 0,
	0, 0, 0, 955, 0, 0, 0, 0, 0, 0,
	953, 954, 0, 0, 0, 0, 0, 0, 0, 984,
	2317, 0, 1545, 982, 1000, 972, 973, 974, 970, 971,
	983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1024, 988, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 542, 1037,
	0, 265, 1044, 266, 1043, 0, 1054, 267, 268, 269,
	270, 271, 990, 1023, 957, 272, 1083, 1084, 549, 0,
	273, 274, 1030, 0, 1011, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 295, 1064, 296, 297, 1014, 1012, 1013, 1020, 1016,
	1015, 1019, 298, 299, 300, 301, 1047, 302, 1041, 1040,
	961, 306, 303, 304, 0, 307, 305, 0, 308, 309,
	310, 0, 0, 311, 1032, 313, 0, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 967, 321, 322, 323,
	325, 327, 324, 328, 329, 330, 331, 1055, 1056, 979,
	246, 0, 0, 0, 0, 0, 332, 333, 334, 1039,
	0, 0, 0, 335, 0, 336, 0, 0, 1065, 337,
	338, 1052, 1053, 339, 340, 0, 341, 1062, 0, 989,
	342, 0, 343, 344, 345, 346, 347, 1025, 1026, 1029,
	408, 1067, 348, 349, 0, 350, 351, 352, 353, 0,
	0, 0, 247, 354, 355, 357, 0, 1066, 356, 1034,
	1035, 0, 995, 0, 358, 359, 1068, 1027, 1069, 360,
	361, 362, 1070, 363, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 0, 370, 372, 371, 0, 373, 1063,
	1071, 374, 375, 1072, 0, 376, 377, 378, 1018, 1017,
	379, 380, 381, 382, 0, 383, 384, 386, 388, 385,
	387, 392, 389, 390, 391, 394, 0, 393, 1073, 395,
	396, 397, 403, 404, 400, 401, 402, 405, 399, 1074,
	398, 958, 248, 1075, 406, 980, 1028, 407, 1042, 409,
	410, 0, 0, 411, 0, 0, 0, 413, 414, 415,
	0, 0, 416, 417, 571, 1076, 418, 1077, 1057, 419,
	420, 412, 421, 422, 423, 424, 425, 426, 427, 428,
	0, 429, 430, 573, 574, 1058, 431, 576, 432, 433,
	0, 434, 0, 435, 436, 437, 438, 439, 440, 441,
	1038, 443, 442, 444, 0, 445, 0, 0, 0, 0,
	0, 446, 0, 448, 449, 450, 447, 451, 452, 453,
	454, 0, 455, 456, 457, 1078, 458, 459, 460, 461,
	968, 462, 0, 463, 464, 470, 471, 465, 466, 472,
	473, 474, 475, 476, 0, 478, 479, 477, 480, 481,
	482, 1021, 483, 467, 468, 484, 485, 1079, 486, 487,
	488, 489, 490, 491, 1036, 0, 492, 0, 493, 494,
	495, 496, 469, 497, 502, 1082, 498, 499, 500, 501,
	1059, 0, 504, 505, 956, 503, 0, 506, 507, 508,
	509, 510, 511, 326, 512, 0, 513, 1048, 1049, 1050,
	1051, 0, 520, 0, 514, 515, 1060, 516, 1061, 978,
	517, 518, 519, 0, 521, 522, 0, 962, 523, 524,
	525, 527, 528, 526, 529, 1022, 530, 0, 0, 531,
	532, 533, 588, 1045, 1081, 0, 535, 534, 591, 1544,
	0, 0, 0, 536, 537, 592, 538, 539, 540, 959,
	0, 0, 0, 0, 0, 0, 955, 0, 0, 0,
	0, 0, 0, 953, 954, 0, 0, 0, 0, 0,
	0, 0, 984, 0, 0, 949, 982, 1000, 972, 973,
	974, 970, 971, 983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1024, 988,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 542, 1037, 0, 265, 1044, 266, 1043, 0, 1054,
	267, 268, 269, 270, 271, 990, 1023, 957, 272, 1083,
	1084, 549, 0, 273, 274, 1030, 0, 1011, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 295, 1064, 296, 297, 1014, 1012,
	1013, 1020, 1016, 1015, 1019, 298, 299, 300, 301, 1047,
	302, 1041, 1040, 961, 306, 303, 304, 0, 307, 305,
	0, 308, 309, 310, 0, 0, 311, 1032, 313, 0,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 967,
	321, 322, 323, 325, 327, 324, 328, 329, 330, 331,
	1055, 1056, 979, 246, 0, 0, 0, 0, 0, 332,
	333, 334, 1039, 0, 0, 0, 335, 0, 336, 0,
	0, 1065, 337, 338, 1052, 1053, 339, 340, 0, 341,
	1062, 0, 989, 342, 0, 343, 344, 345, 346, 347,
	1025, 1026, 1029, 408, 1067, 348, 349, 0, 350, 351,
	352, 353, 0, 0, 0, 247, 354, 355, 357, 0,
	1066, 356, 1034, 1035, 0, 995, 0, 358, 359, 1068,
	1027, 1069, 360, 361, 362, 1070, 363, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 0, 370, 372, 371,
	0, 373, 1063, 1071, 374, 375, 1072, 0, 376, 377,
	378, 1018, 1017, 379, 380, 381, 382, 0, 383, 384,
	386, 388, 385, 387, 392, 389, 390, 391, 394, 0,
	393, 1073, 395, 396, 397, 403, 404, 400, 401, 402,
	405, 399, 1074, 398, 958, 248, 1075, 406, 980, 1028,
	407, 1042, 409, 410, 0, 0, 411, 0, 963, 0,
	413, 414, 415, 0, 0, 416, 417, 571, 1076, 418,
	1077, 1057, 419, 420, 412, 421, 422, 423, 424, 425,
	426, 427, 428, 0, 429, 430, 573, 574, 1058, 431,
	576, 432, 433, 0, 434, 0, 435, 436, 437, 438,
	439, 440, 441, 1038, 443, 442, 444, 0, 445, 0,
	0, 0, 0, 0, 446, 0, 448, 449, 450, 447,
	451, 452, 453, 454, 0, 455, 456, 457, 1078, 458,
	459, 460, 461, 968, 462, 0, 463, 464, 470, 471,
	465, 466, 472, 473, 474, 475, 476, 0, 478, 479,
	477, 480, 481, 482, 1021, 483, 467, 468, 484, 485,
	1079, 486, 487, 488, 489, 490, 491, 1036, 0, 492,
	0, 493, 494, 495, 496, 469, 497, 502, 1082, 498,
	499, 500, 501, 1059, 0, 504, 505, 956, 503, 0,
	506, 507, 508, 509, 510, 511, 326, 512, 0, 513,
	1048, 1049, 1050, 1051, 0, 520, 0, 514, 515, 1060,
	516, 1061, 978, 517, 518, 519, 0, 521, 522, 0,
	962, 523, 524, 525, 527, 528, 526, 529, 1022, 530,
	0, 0, 531, 532, 533, 588, 1045, 1081, 0, 535,
	534, 591, 0, 0, 0, 0, 536, 537, 592, 538,
	539, 540, 959, 0, 0, 0, 0, 0, 0, 955,
	0, 0, 0, 0, 0, 0, 953, 954, 1000, 972,
	973, 974, 970, 971, 983, 984, 0, 0, 0, 982,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1024,
	988, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 542, 1037, 0, 265, 1044, 266, 1043, 0,
	1054, 267, 268, 269, 270, 271, 990, 1023, 957, 272,
	1083, 1084, 549, 0, 273, 274, 1030, 0, 1011, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	4055, 292, 0, 293, 294, 295, 1064, 296, 297, 1014,
	1012, 1013, 1020, 1016, 1015, 1019, 298, 299, 300, 301,
	1047, 302, 1041, 1040, 961, 306, 303, 304, 0, 307,
	305, 0, 308, 309, 310, 0, 0, 311, 1032, 313,
	0, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	967, 321, 322, 323, 325, 327, 324, 328, 329, 330,
	331, 1055, 1056, 979, 246, 0, 0, 0, 0, 0,
	332, 333, 334, 1039, 0, 0, 0, 335, 0, 336,
	0, 0, 1065, 337, 338, 1052, 1053, 339, 340, 0,
	341, 1062, 0, 989, 342, 0, 343, 344, 345, 346,
	347, 1025, 1026, 1029, 408, 1067, 348, 349, 0, 350,
	351, 352, 353, 0, 0, 0, 247, 354, 355, 357,
	0, 1066, 356, 1034, 1035, 0, 995, 0, 358, 359,
	1068, 1027, 1069, 360, 361, 362, 1070, 363, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 0, 370, 372,
	371, 0, 373, 1063, 1071, 374, 375, 1072, 0, 376,
	377, 378, 1018, 1017, 379, 380, 381, 382, 0, 383,
	384, 386, 388, 385, 387, 392, 389, 390, 391, 394,
	0, 393, 1073, 395, 396, 397, 403, 404, 400, 401,
	402, 405, 399, 1074, 398, 958, 248, 1075, 406, 980,
	1028, 407, 1042, 409, 410, 0, 0, 411, 0, 963,
	0, 413, 414, 415, 0, 0, 416, 417, 571, 1076,
	418, 1077, 1057, 419, 420, 412, 421, 422, 423, 424,
	425, 426, 427, 428, 0, 429, 430, 573, 574, 1058,
	431, 576, 432, 433, 0, 434, 0, 435, 436, 437,
	438, 439, 440, 441, 1038, 443, 442, 444, 0, 445,
	0, 0, 0, 0, 0, 446, 0, 448, 449, 450,
	447, 451, 452, 453, 454, 0, 455, 456, 457, 1078,
	458, 459, 460, 461, 968, 462, 0, 463, 464, 470,
	471, 465, 466, 472, 473, 474, 475, 476, 0, 478,
	479, 477, 480, 481, 482, 1021, 483, 467, 468, 484,
	485, 1079, 486, 487, 488, 489, 490, 491, 1036, 0,
	492, 0, 493, 494, 495, 496, 469, 497, 502, 1082,
	498, 499, 500, 501, 1059, 0, 504, 505, 956, 503,
	0, 506, 507, 508, 509, 510, 511, 326, 512, 0,
	513, 1048, 1049, 1050, 1051, 0, 520, 0, 514, 515,
	1060, 516, 1061, 978, 517, 518, 519, 0, 521, 522,
	0, 962, 523, 524, 525, 527, 528, 526, 529, 1022,
	530, 0, 0, 531, 532, 533, 588, 1045, 1081, 0,
	535, 534, 591, 0, 0, 0, 0, 536, 537, 592,
	538, 539, 540, 959, 0, 0, 0, 0, 0, 0,
	955, 0, 0, 0, 0, 0, 0, 953, 954, 1000,
	972, 973, 974, 970, 971, 983, 984, 0, 0, 0,
	982, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1024, 988, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 542, 1037, 0, 265, 1044, 266, 1043,
	0, 1054, 267, 268, 269, 270, 271, 990, 1023, 957,
	272, 1083, 1084, 549, 0, 273, 274, 1030, 0, 1011,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 295, 1064, 296, 297,
	1014, 1012, 1013, 1020, 1016, 1015, 1019, 298, 299, 300,
	301, 1047, 302, 1041, 1040, 961, 306, 303, 304, 0,
	307, 305, 0, 308, 309, 310, 0, 0, 311, 1032,
	313, 0, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 967, 321, 322, 323, 325, 327, 324, 328, 329,
	330, 331, 1055, 1056, 979, 246, 0, 0, 0, 0,
	0, 332, 333, 334, 1039, 0, 0, 0, 335, 0,
	336, 0, 0, 1065, 337, 338, 1052, 1053, 339, 340,
	0, 341, 1062, 0, 989, 342, 0, 343, 344, 345,
	346, 347, 1025, 1026, 1029, 408, 1067, 348, 349, 0,
	350, 351, 352, 353, 0, 0, 0, 2197, 354, 355,
	357, 0, 1066, 356, 1034, 1035, 0, 995, 0, 358,
	359, 1068, 1027, 1069, 360, 361, 362, 1070, 363, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 0, 370,
	372, 371, 0, 373, 1063, 1071, 374, 375, 1072, 0,
	376, 377, 378, 1018, 1017, 379, 380, 381, 382, 0,
	383, 384, 386, 388, 385, 387, 392, 389, 390, 391,
	394, 0, 393, 1073, 395, 396, 397, 403, 404, 400,
	401, 402, 405, 399, 1074, 398, 958, 248, 1075, 406,
	980, 1028, 407, 1042, 409, 410, 0, 0, 411, 0,
	0, 0, 413, 414, 415, 0, 0, 416, 417, 571,
	1076, 418, 1077, 1057, 419, 420, 412, 421, 422, 423,
	424, 425, 426, 427, 428, 0, 429, 430, 573, 574,
	1058, 431, 576, 432, 433, 2196, 434, 0, 435, 436,
	437, 438, 439, 440, 441, 1038, 443, 442, 444, 0,
	445, 0, 0, 0, 0, 0, 446, 0, 448, 449,
	450, 447, 451, 452, 453, 454, 0, 455, 456, 457,
	1078, 458, 459, 460, 461, 968, 462, 0, 463, 464,
	470, 471, 465, 466, 472, 473, 474, 475, 476, 0,
	478, 479, 477, 480, 481, 482, 1021, 483, 467, 468,
	484, 485, 1079, 486, 487, 488, 489, 490, 491, 1036,
	0, 492, 0, 493, 494, 495, 496, 469, 497, 502,
	1082, 498, 499, 500, 501, 1059, 0, 504, 505, 956,
	503, 0, 506, 507, 508, 509, 510, 511, 326, 512,
	0, 513, 1048, 1049, 1050, 1051, 0, 520, 0, 514,
	515, 1060, 516, 1061, 978, 517, 518, 519, 0, 521,
	522, 0, 962, 523, 524, 525, 527, 528, 526, 529,
	1022, 530, 0, 0, 531, 532, 533, 588, 1045, 1081,
	0, 535, 534, 591, 0, 0, 0, 0, 536, 537,
	592, 538, 539, 540, 959, 0, 0, 0, 0, 0,
	0, 955, 0, 0, 0, 0, 0, 0, 953, 954,
	1000, 972, 973, 974, 970, 971, 983, 984, 0, 0,
	0, 982, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1024, 988, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 542, 1037, 0, 265, 1044, 266,
	1043, 0, 1054, 267, 268, 269, 270, 271, 990, 1023,
	957, 272, 1083, 1084, 549, 0, 273, 274, 1030, 0,
	1011, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 295, 1064, 296,
	297, 1014, 1012, 1013, 1020, 1016, 1015, 1019, 298, 299,
	300, 301, 1047, 302, 1041, 1040, 961, 306, 303, 304,
	0, 307, 305, 0, 308, 309, 310, 0, 0, 311,
	1032, 313, 0, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 967, 321, 322, 323, 325, 327, 324, 328,
	329, 330, 331, 1055, 1056, 979, 246, 0, 0, 0,
	0, 0, 332, 333, 334, 1039, 0, 0, 0, 335,
	0, 336, 0, 0, 1065, 337, 338, 1052, 1053, 339,
	340, 0, 341, 1062, 0, 989, 342, 0, 343, 344,
	345, 346, 347, 1025, 1026, 1029, 408, 1067, 348, 349,
	0, 350, 351, 352, 353, 0, 0, 0, 247, 354,
	355, 357, 0, 1066, 356, 1034, 1035, 0, 995, 0,
	358, 359, 1068, 1027, 1069, 360, 361, 362, 1070, 363,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 0,
	370, 372, 371, 0, 373, 1063, 1071, 374, 375, 1072,
	0, 376, 377, 378, 1018, 1017, 379, 380, 381, 382,
	0, 383, 384, 386, 388, 385, 387, 392, 389, 390,
	391, 394, 0, 393, 1073, 395, 396, 397, 403, 404,
	400, 401, 402, 405, 399, 1074, 398, 958, 248, 1075,
	406, 980, 1028, 407, 1042, 409, 410, 0, 0, 411,
	0, 963, 0, 413, 414, 415, 0, 0, 416, 417,
	571, 1076, 418, 1077, 1057, 419, 420, 412, 421, 422,
	423, 424, 425, 426, 427, 428, 0, 429, 430, 573,
	574, 1058, 431, 576, 432, 433, 0, 434, 0, 435,
	436, 437, 438, 439, 440, 441, 1038, 443, 442, 444,
	0, 445, 0, 0, 0, 0, 0, 446, 0, 448,
	449, 450, 447, 451, 452, 453, 454, 0, 455, 456,
	457, 1078, 458, 459, 460, 461, 968, 462, 0, 463,
	464, 470, 471, 465, 466, 472, 473, 474, 475, 476,
	0, 478, 479, 477, 480, 481, 482, 1021, 483, 467,
	468, 484, 485, 1079, 486, 487, 488, 489, 490, 491,
	1036, 0, 492, 0, 493, 494, 495, 496, 469, 497,
	502, 1082, 498, 499, 500, 501, 1059, 0, 504, 505,
	956, 503, 0, 506, 507, 508, 509, 510, 511, 326,
	512, 0, 513, 1048, 1049, 1050, 1051, 0, 520, 0,
	514, 515, 1060, 516, 1061, 978, 517, 518, 519, 0,
	521, 522, 0, 962, 523, 524, 525, 527, 528, 526,
	529, 1022, 530, 0, 0, 531, 532, 533, 588, 1045,
	1081, 0, 535, 534, 591, 0, 0, 0, 0, 536,
	537, 592, 538, 539, 540, 959, 0, 0, 0, 0,
	0, 0, 955, 0, 0, 0, 0, 0, 0, 953,
	954, 1000, 972, 973, 974, 970, 971, 983, 984, 0,
	0, 0, 982, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1024, 988, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 542, 1037, 0, 265, 1044,
	266, 1043, 0, 1054, 267, 268, 269, 270, 271, 990,
	1023, 957, 272, 1083, 1084, 549, 0, 273, 274, 1030,
	0, 1011, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 3849, 292, 0, 293, 294, 295, 1064,
	296, 297, 1014, 1012, 1013, 1020, 1016, 1015, 1019, 298,
	299, 300, 301, 1047, 302, 1041, 1040, 961, 306, 303,
	304, 0, 307, 305, 0, 308, 309, 310, 0, 0,
	311, 1032, 313, 0, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 967, 321, 322, 323, 325, 327, 324,
	328, 329, 330, 331, 1055, 1056, 979, 246, 0, 0,
	0, 0, 0, 332, 333, 334, 1039, 0, 0, 0,
	335, 0, 336, 0, 0, 1065, 337, 338, 1052, 1053,
	339, 340, 0, 341, 1062, 0, 989, 342, 0, 343,
	344, 345, 346, 347, 1025, 1026, 1029, 408, 1067, 348,
	349, 0, 350, 351, 352, 353, 0, 0, 0, 247,
	354, 355, 357, 0, 1066, 356, 1034, 1035, 0, 995,
	0, 358, 359, 1068, 1027, 1069, 360, 361, 362, 1070,
	363, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	0, 370, 372, 371, 0, 373, 1063, 1071, 374, 375,
	1072, 0, 376, 377, 378, 1018, 1017, 379, 380, 381,
	382, 0, 383, 384, 386, 388, 385, 387, 392, 389,
	390, 391, 394, 0, 393, 1073, 395, 396, 397, 403,
	404, 400, 401, 402, 405, 399, 1074, 398, 958, 248,
	1075, 406, 980, 1028, 407, 1042, 409, 410, 0, 0,
	411, 0, 963, 0, 413, 414, 415, 0, 0, 416,
	417, 571, 1076, 418, 1077, 1057, 419, 420, 412, 421,
	422, 423, 424, 425, 426, 427, 428, 0, 429, 430,
	573, 574, 1058, 431, 576, 432, 433, 0, 434, 0,
	435, 436, 437, 438, 439, 440, 441, 1038, 443, 442,
	444, 0, 445, 0, 0, 0, 0, 0, 446, 0,
	448, 449, 450, 447, 451, 452, 453, 454, 0, 455,
	456, 457, 1078, 458, 459, 460, 461, 968, 462, 0,
	463, 464, 470, 471, 465, 466, 472, 473, 474, 475,
	476, 0, 478, 479, 477, 480, 481, 482, 1021, 483,
	467, 468, 484, 485, 1079, 486, 487, 488, 489, 490,
	491, 1036, 0, 492, 0, 493, 494, 495, 496, 469,
	497, 502, 1082, 498, 499, 500, 501, 1059, 0, 504,
	505, 956, 503, 0, 506, 507, 508, 509, 510, 511,
	326, 512, 0, 513, 1048, 1049, 1050, 1051, 0, 520,
	0, 514, 515, 1060, 516, 1061, 978, 517, 518, 519,
	0, 521, 522, 0, 962, 523, 524, 525, 527, 528,
	526, 529, 1022, 530, 0, 0, 531, 532, 533, 588,
	1045, 1081, 0, 535, 534, 591, 0, 0, 0, 0,
	536, 537, 592, 538, 539, 540, 959, 0, 0, 0,
	0, 0, 0, 955, 0, 0, 0, 0, 0, 0,
	953, 954, 1000, 972, 973, 974, 970, 971, 983, 984,
	0, 0, 0, 982, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1024, 988, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 1037, 0, 265,
	1044, 266, 1043, 0, 1054, 267, 268, 269, 270, 271,
	990, 1023, 957, 272, 1083, 1084, 549, 0, 273, 274,
	1030, 0, 1011, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 295,
	1064, 296, 297, 1014, 1012, 1013, 1020, 1016, 1015, 1019,
	298, 299, 300, 301, 1047, 302, 1041, 1040, 961, 306,
	303, 304, 0, 307, 305, 0, 308, 309, 310, 0,
	0, 311, 1032, 313, 0, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 967, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 1055, 1056, 979, 246, 0,
	0, 0, 0, 0, 332, 333, 334, 1039, 0, 0,
	0, 335, 0, 336, 0, 0, 1065, 337, 338, 1052,
	1053, 339, 340, 0, 341, 1062, 0, 989, 342, 0,
	343, 344, 345, 346, 347, 1025, 1026, 1029, 408, 1067,
	348, 349, 0, 350, 351, 352, 353, 0, 0, 0,
	247, 354, 355, 357, 0, 1066, 356, 1034, 1035, 0,
	995, 0, 358, 359, 1068, 1027, 1069, 360, 361, 362,
	1070, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 0, 370, 372, 371, 0, 373, 1063, 1071, 374,
	375, 1072, 0, 376, 377, 378, 1018, 1017, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 1073, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 1074, 398, 958,
	3509, 1075, 406, 980, 1028, 407, 1042, 409, 410, 0,
	0, 411, 0, 0, 0, 413, 414, 415, 0, 0,
	416, 417, 571, 1076, 418, 1077, 1057, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 0, 429,
	430, 573, 574, 1058, 431, 576, 432, 433, 0, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 1038, 443,
	442, 444, 0, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 0,
	455, 456, 457, 1078, 458, 459, 460, 461, 968, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 0, 478, 479, 477, 480, 481, 482, 1021,
	483, 467, 468, 484, 485, 1079, 486, 487, 488, 489,
	490, 491, 1036, 0, 492, 0, 493, 494, 495, 496,
	469, 497, 502, 1082, 498, 499, 500, 501, 1059, 0,
	504, 505, 956, 503, 0, 506, 507, 508, 509, 510,
	511, 326, 512, 0, 513, 1048, 1049, 1050, 1051, 0,
	520, 0, 514, 515, 1060, 516, 1061, 978, 517, 518,
	519, 0, 521, 522, 0, 962, 523, 524, 525, 527,
	528, 526, 529, 1022, 530, 0, 0, 531, 532, 533,
	588, 1045, 1081, 0, 535, 534, 591, 0, 0, 0,
	0, 536, 537, 592, 538, 539, 540, 959, 0, 0,
	0, 0, 0, 0, 955, 0, 0, 0, 0, 0,
	0, 953, 954, 1760, 0, 0, 0, 0, 0, 0,
	984, 0, 0, 0, 982, 1000, 972, 973, 974, 970,
	971, 983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1024, 988, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 542,
	1037, 0, 265, 1044, 266, 1043, 0, 1054, 267, 268,
	269, 270, 271, 990, 1023, 957, 272, 1083, 1084, 549,
	0, 273, 274, 1030, 0, 1011, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 295, 1064, 296, 297, 1014, 1012, 1013, 1020,
	1016, 1015, 1019, 298, 299, 300, 301, 1047, 302, 1041,
	1040, 961, 306, 303, 304, 0, 307, 305, 0, 308,
	309, 310, 0, 0, 311, 1032, 313, 0, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 967, 321, 322,
	323, 325, 327, 324, 328, 329, 330, 331, 1055, 1056,
	979, 246, 0, 0, 0, 0, 0, 332, 333, 334,
	1039, 0, 0, 0, 335, 0, 336, 0, 0, 1065,
	337, 338, 1052, 1053, 339, 340, 0, 341, 1062, 0,
	989, 342, 0, 343, 344, 345, 346, 347, 1025, 1026,
	1029, 408, 1067, 348, 349, 0, 350, 351, 352, 353,
	0, 0, 0, 247, 354, 355, 357, 0, 1066, 356,
	1034, 1035, 0, 995, 0, 358, 359, 1068, 1027, 1069,
	360, 361, 362, 1070, 363, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 0, 370, 372, 371, 0, 373,
	1063, 1071, 374, 375, 1072, 0, 376, 377, 378, 1018,
	1017, 379, 380, 381, 382, 0, 383, 384, 386, 388,
	385, 387, 392, 389, 390, 391, 394, 0, 393, 1073,
	395, 396, 397, 403, 404, 400, 401, 402, 405, 399,
	1074, 398, 958, 248, 1075, 406, 980, 1028, 407, 1042,
	409, 410, 0, 0, 411, 0, 0, 0, 413, 414,
	415, 0, 0, 416, 417, 571, 1076, 418, 1077, 1057,
	419, 420, 412, 421, 422, 423, 424, 425, 426, 427,
	428, 0, 429, 430, 573, 574, 1058, 431, 576, 432,
	433, 0, 434, 0, 435, 436, 437, 438, 439, 440,
	441, 1038, 443, 442, 444, 0, 445, 0, 0, 0,
	0, 0, 446, 0, 448, 449, 450, 447, 451, 452,
	453, 454, 0, 455, 456, 457, 1078, 458, 459, 460,
	461, 968, 462, 0, 463, 464, 470, 471, 465, 466,
	472, 473, 474, 475, 476, 0, 478, 479, 477, 480,
	481, 482, 1021, 483, 467, 468, 484, 485, 1079, 486,
	487, 488, 489, 490, 491, 1036, 0, 492, 0, 493,
	494, 495, 496, 469, 497, 502, 1082, 498, 499, 500,
	501, 1059, 0, 504, 505, 956, 503, 0, 506, 507,
	508, 509, 510, 511, 326, 512, 0, 513, 1048, 1049,
	1050, 1051, 0, 520, 0, 514, 515, 1060, 516, 1061,
	978, 517, 518, 519, 0, 521, 522, 0, 962, 523,
	524, 525, 527, 528, 526, 529, 1022, 530, 0, 0,
	531, 532, 533, 588, 1045, 1081, 3264, 535, 534, 591,
	0, 0, 0, 0, 536, 537, 592, 538, 539, 540,
	959, 0, 0, 0, 0, 0, 0, 955, 0, 0,
	0, 0, 0, 0, 953, 954, 1000, 972, 973, 974,
	970, 971, 983, 984, 0, 0, 0, 982, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1024, 988, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	542, 1037, 0, 265, 1044, 266, 1043, 0, 1054, 267,
	268, 269, 270, 271, 990, 1023, 957, 272, 1083, 1084,
	549, 0, 273, 274, 1030, 0, 1011, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 295, 1064, 296, 297, 1014, 1012, 1013,
	1020, 1016, 1015, 1019, 298, 299, 300, 301, 1047, 302,
	1041, 1040, 961, 306, 303, 304, 0, 307, 305, 0,
	308, 309, 310, 0, 0, 311, 1032, 313, 0, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 967, 321,
	322, 323, 325, 327, 324, 328, 329, 330, 331, 1055,
	1056, 979, 246, 0, 0, 0, 0, 0, 332, 333,
	334, 1039, 0, 0, 0, 335, 0, 336, 0, 0,
	1065, 337, 338, 1052, 1053, 339, 340, 0, 341, 1062,
	0, 989, 342, 0, 343, 344, 345, 346, 347, 1025,
	1026, 1029, 408, 1067, 348, 349, 0, 350, 351, 352,
	353, 0, 0, 0, 247, 354, 355, 357, 0, 1066,
	356, 1034, 1035, 0, 995, 0, 358, 359, 1068, 1027,
	1069, 360, 361, 362, 1070, 363, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 0, 370, 372, 371, 0,
	373, 1063, 1071, 374, 375, 1072, 0, 376, 377, 378,
	1018, 1017, 379, 380, 381, 382, 0, 383, 384, 386,
	388, 385, 387, 392, 389, 390, 391, 394, 0, 393,
	1073, 395, 396, 397, 403, 404, 400, 401, 402, 405,
	399, 1074, 398, 958, 248, 1075, 406, 980, 1028, 407,
	1042, 409, 410, 0, 0, 411, 0, 0, 0, 413,
	414, 415, 0, 0, 416, 417, 571, 1076, 418, 1077,
	1057, 419, 420, 412, 421, 422, 423, 424, 425, 426,
	427, 428, 0, 429, 430, 573, 574, 1058, 431, 576,
	432, 433, 0, 434, 0, 435, 436, 437, 438, 439,
	440, 441, 1038, 443, 442, 444, 0, 445, 0, 0,
	0, 0, 0, 446, 0, 448, 449, 450, 447, 451,
	452, 453, 454, 0, 455, 456, 457, 1078, 458, 459,
	460, 461, 968, 462, 0, 463, 464, 470, 471, 465,
	466, 472, 473, 474, 475, 476, 0, 478, 479, 477,
	480, 481, 482, 1021, 483, 467, 468, 484, 485, 1079,
	486, 487, 488, 489, 490, 491, 1036, 0, 492, 0,
	493, 494, 495, 496, 469, 497, 502, 1082, 498, 499,
	500, 501, 1059, 0, 504, 505, 956, 503, 0, 506,
	507, 508, 509, 510, 511, 326, 512, 0, 513, 1048,
	1049, 1050, 1051, 0, 520, 0, 514, 515, 1060, 516,
	1061, 978, 517, 518, 519, 0, 521, 522, 0, 962,
	523, 524, 525, 527, 528, 526, 529, 1022, 530, 0,
	0, 531, 532, 533, 588, 1045, 1081, 0, 535, 534,
	591, 0, 0, 0, 0, 536, 537, 592, 538, 539,
	540, 959, 0, 0, 0, 0, 0, 0, 955, 0,
	0, 0, 0, 0, 0, 953, 954, 1760, 0, 0,
	0, 0, 0, 0, 984, 0, 0, 0, 982, 1000,
	972, 973, 974, 970, 971, 983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1024, 988, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 542, 1037, 0, 265, 1044, 266, 1043,
	0, 1054, 267, 268, 269, 270, 271, 990, 1023, 957,
	272, 1083, 1084, 549, 0, 273, 274, 1030, 0, 1011,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 295, 1064, 296, 297,
	1014, 1012, 1013, 1020, 1016, 1015, 1019, 298, 299, 300,
	301, 1047, 302, 1041, 1040, 961, 306, 303, 304, 0,
	307, 305, 0, 308, 309, 310, 0, 0, 311, 1032,
	313, 0, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 967, 321, 322, 323, 325, 327, 324, 328, 329,
	330, 331, 1055, 1056, 979, 246, 0, 0, 0, 0,
	0, 332, 333, 334, 1039, 0, 0, 0, 335, 0,
	336, 0, 2392, 1065, 337, 338, 1052, 1053, 339, 340,
	0, 341, 1062, 0, 989, 342, 0, 343, 344, 345,
	346, 347, 1025, 1026, 1029, 408, 1067, 348, 349, 0,
	350, 351, 352, 353, 0, 0, 0, 247, 354, 355,
	357, 0, 1066, 356, 1034, 1035, 0, 995, 0, 358,
	359, 1068, 1027, 1069, 360, 361, 362, 1070, 363, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 0, 370,
	372, 371, 0, 373, 1063, 1071, 374, 375, 1072, 0,
	376, 377, 378, 1018, 1017, 379, 380, 381, 382, 0,
	383, 384, 386, 388, 385, 387, 392, 389, 390, 391,
	394, 0, 393, 1073, 395, 396, 397, 403, 404, 400,
	401, 402, 405, 399, 1074, 398, 958, 248, 1075, 406,
	980, 1028, 407, 1042, 409, 410, 0, 0, 411, 0,
	0, 0, 413, 414, 415, 0, 0, 416, 417, 571,
	1076, 418, 1077, 1057, 419, 420, 412, 421, 422, 423,
	424, 425, 426, 427, 428, 0, 429, 430, 573, 574,
	1058, 431, 576, 432, 433, 0, 434, 0, 435, 436,
	437, 438, 439, 440, 441, 1038, 443, 442, 444, 0,
	445, 0, 0, 0, 0, 0, 446, 0, 448, 449,
	450, 447, 451, 452, 453, 454, 0, 455, 456, 457,
	1078, 458, 459, 460, 461, 968, 462, 0, 463, 464,
	470, 471, 465, 466, 472, 473, 474, 475, 476, 0,
	478, 479, 477, 480, 481, 482, 1021, 483, 467, 468,
	484, 485, 1079, 486, 487, 488, 489, 490, 491, 1036,
	0, 492, 0, 493, 494, 495, 496, 469, 497, 502,
	1082, 498, 499, 500, 501, 1059, 0, 504, 505, 956,
	503, 0, 506, 507, 508, 509, 510, 511, 326, 512,
	0, 513, 1048, 1049, 1050, 1051, 0, 520, 0, 514,
	515, 1060, 516, 1061, 978, 517, 518, 519, 0, 521,
	522, 0, 962, 523, 524, 525, 527, 528, 526, 529,
	1022, 530, 0, 0, 531, 532, 533, 588, 1045, 1081,
	0, 535, 534, 591, 0, 0, 0, 0, 536, 537,
	592, 538, 539, 540, 959, 0, 0, 0, 0, 0,
	0, 955, 0, 0, 0, 0, 0, 0, 953, 954,
	1000, 972, 973, 974, 970, 971, 983, 984, 0, 0,
	0, 982, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1024, 988, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 542, 1037, 0, 265, 1044, 266,
	1043, 0, 1054, 267, 268, 269, 270, 271, 990, 1023,
	957, 272, 1083, 1084, 549, 0, 273, 274, 1030, 0,
	1011, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 295, 1064, 296,
	297, 1014, 1012, 1013, 1020, 1016, 1015, 1019, 298, 299,
	300, 301, 1047, 302, 1041, 1040, 961, 306, 303, 304,
	0, 307, 305, 0, 308, 309, 310, 0, 0, 311,
	1032, 313, 0, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 967, 321, 322, 323, 325, 327, 324, 328,
	329, 330, 331, 1055, 1056, 979, 246, 0, 0, 0,
	0, 0, 332, 333, 334, 1039, 0, 0, 0, 335,
	0, 336, 0, 0, 1065, 337, 338, 1052, 1053, 339,
	340, 0, 341, 1062, 0, 989, 342, 0, 343, 344,
	345, 346, 347, 1025, 1026, 1029, 408, 1067, 348, 349,
	0, 350, 351, 352, 353, 0, 0, 0, 247, 354,
	355, 357, 0, 1066, 356, 1034, 1035, 0, 995, 0,
	358, 359, 1068, 1027, 1069, 360, 361, 362, 1070, 363,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 0,
	370, 372, 371, 0, 373, 1063, 1071, 374, 375, 1072,
	0, 376, 377, 378, 1018, 1017, 379, 380, 381, 382,
	0, 383, 384, 386, 388, 385, 387, 392, 389, 390,
	391, 394, 0, 393, 1073, 395, 396, 397, 403, 404,
	400, 401, 402, 405, 399, 1074, 398, 958, 248, 1075,
	406, 980, 1028, 407, 1042, 409, 410, 0, 0, 411,
	0, 0, 0, 413, 414, 415, 0, 0, 416, 417,
	571, 1076, 418, 1077, 1057, 419, 420, 412, 421, 422,
	423, 424, 425, 426, 427, 428, 0, 429, 430, 573,
	574, 1058, 431, 576, 432, 433, 0, 434, 0, 435,
	436, 437, 438, 439, 440, 441, 1038, 443, 442, 444,
	0, 445, 0, 0, 0, 0, 0, 446, 0, 448,
	449, 450, 447, 451, 452, 453, 454, 0, 455, 456,
	457, 1078, 458, 459, 460, 461, 968, 462, 0, 463,
	464, 470, 471, 465, 466, 472, 473, 474, 475, 476,
	0, 478, 479, 477, 480, 481, 482, 1021, 483, 467,
	468, 484, 485, 1079, 486, 487, 488, 489, 490, 491,
	1036, 0, 492, 0, 493, 494, 495, 496, 469, 497,
	502, 1082, 498, 499, 500, 501, 1059, 0, 504, 505,
	956, 503, 0, 506, 507, 508, 509, 510, 511, 326,
	512, 0, 513, 1048, 1049, 1050, 1051, 0, 520, 0,
	514, 515, 1060, 516, 1061, 978, 517, 518, 519, 0,
	521, 522, 0, 962, 523, 524, 525, 527, 528, 526,
	529, 1022, 530, 0, 0, 531, 532, 533, 588, 1045,
	1081, 0, 535, 534, 591, 0, 0, 0, 0, 536,
	537, 592, 538, 539, 540, 959, 0, 0, 0, 0,
	0, 0, 955, 0, 0, 0, 0, 0, 0, 953,
	954, 0, 0, 0, 0, 0, 0, 0, 984, 1690,
	0, 2397, 982, 1000, 972, 973, 974, 970, 971, 983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1024, 988, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 542, 1037, 0,
	265, 1044, 266, 1043, 0, 1054, 267, 268, 269, 270,
	271, 990, 1023, 957, 272, 1083, 1084, 549, 0, 273,
	274, 1030, 0, 1011, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	295, 1064, 296, 297, 1014, 1012, 1013, 1020, 1016, 1015,
	1019, 298, 299, 300, 301, 1047, 302, 1041, 1040, 961,
	306, 303, 304, 0, 307, 305, 0, 308, 309, 310,
	0, 0, 311, 1032, 313, 0, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 967, 321, 322, 323, 325,
	327, 324, 328, 329, 330, 331, 1055, 1056, 979, 246,
	0, 0, 0, 0, 0, 332, 333, 334, 1039, 0,
	0, 0, 335, 0, 336, 0, 0, 1065, 337, 338,
	1052, 1053, 339, 340, 0, 341, 1062, 0, 989, 342,
	0, 343, 344, 345, 346, 347, 1025, 1026, 1029, 408,
	1067, 348, 349, 0, 350, 351, 352, 353, 0, 0,
	0, 247, 354, 355, 357, 0, 1066, 356, 1034, 1035,
	0, 995, 0, 358, 359, 1068, 1027, 1069, 360, 361,
	362, 1070, 363, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 0, 370, 372, 371, 0, 373, 1063, 1071,
	374, 375, 1072, 0, 376, 377, 378, 1018, 1017, 379,
	380, 381, 382, 0, 383, 384, 386, 388, 385, 387,
	392, 389, 390, 391, 394, 0, 393, 1073, 395, 396,
	397, 403, 404, 400, 401, 402, 405, 399, 1074, 398,
	958, 248, 1075, 406, 980, 1028, 407, 1042, 409, 410,
	0, 0, 411, 0, 0, 0, 413, 414, 415, 0,
	0, 416, 417, 571, 1076, 418, 1077, 1057, 419, 420,
	412, 421, 422, 423, 424, 425, 426, 427, 428, 0,
	429, 430, 573, 574, 1058, 431, 576, 432, 433, 0,
	434, 0, 435, 436, 437, 438, 439, 440, 441, 1038,
	443, 442, 444, 0, 445, 0, 0, 0, 0, 0,
	446, 0, 448, 449, 450, 447, 451, 452, 453, 454,
	0, 455, 456, 457, 1078, 458, 459, 460, 461, 968,
	462, 0, 463, 464, 470, 471, 465, 466, 472, 473,
	474, 475, 476, 0, 478, 479, 477, 480, 481, 482,
	1021, 483, 467, 468, 484, 485, 1079, 486, 487, 488,
	489, 490, 491, 1036, 0, 492, 0, 493, 494, 495,
	496, 469, 497, 502, 1082, 498, 499, 500, 501, 1059,
	0, 504, 505, 956, 503, 0, 506, 507, 508, 509,
	510, 511, 326, 512, 0, 513, 1048, 1049, 1050, 1051,
	0, 520, 0, 514, 515, 1060, 516, 1061, 978, 517,
	518, 519, 0, 521, 522, 0, 962, 523, 524, 525,
	527, 528, 526, 529, 1022, 530, 0, 0, 531, 532,
	533, 588, 1045, 1081, 0, 535, 534, 591, 0, 0,
	0, 0, 536, 537, 592, 538, 539, 540, 959, 0,
	0, 0, 0, 0, 0, 955, 0, 0, 0, 0,
	0, 0, 953, 954, 0, 0, 0, 0, 0, 0,
	0, 984, 0, 0, 2395, 982, 1000, 972, 973, 974,
	970, 971, 983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1024, 988, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	542, 1037, 0, 265, 1044, 266, 1043, 0, 1054, 267,
	268, 269, 270, 271, 990, 1023, 957, 272, 1083, 1084,
	549, 0, 273, 274, 1030, 0, 1011, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 295, 1064, 296, 297, 1014, 1012, 1013,
	1020, 1016, 1015, 1019, 298, 299, 300, 301, 1047, 302,
	1041, 1040, 961, 306, 303, 304, 0, 307, 305, 0,
	308, 309, 310, 0, 0, 311, 1032, 313, 0, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 967, 321,
	322, 323, 325, 327, 324, 328, 329, 330, 331, 1055,
	1056, 979, 246, 0, 0, 0, 0, 0, 332, 333,
	334, 1039, 0, 0, 0, 335, 0, 336, 0, 0,
	1065, 337, 338, 1052, 1053, 339, 340, 0, 341, 1062,
	0, 989, 342, 0, 343, 344, 345, 346, 347, 1025,
	1026, 1029, 408, 1067, 348, 349, 0, 350, 351, 352,
	353, 0, 0, 0, 247, 354, 355, 357, 0, 1066,
	356, 1034, 1035, 0, 995, 0, 358, 359, 1068, 1027,
	1069, 360, 361, 362, 1070, 363, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 0, 370, 372, 371, 0,
	373, 1063, 1071, 374, 375, 1072, 0, 376, 377, 378,
	1018, 1017, 379, 380, 381, 382, 0, 383, 384, 386,
	388, 385, 387, 392, 389, 390, 391, 394, 0, 393,
	1073, 395, 396, 397, 403, 404, 400, 401, 402, 405,
	399, 1074, 398, 958, 248, 1075, 406, 980, 1028, 407,
	1042, 409, 410, 0, 0, 411, 0, 0, 0, 413,
	414, 415, 0, 0, 416, 417, 571, 1076, 418, 1077,
	1057, 419, 420, 412, 421, 422, 423, 424, 425, 426,
	427, 428, 0, 429, 430, 573, 574, 1058, 431, 576,
	432, 433, 0, 434, 0, 435, 436, 437, 438, 439,
	440, 441, 1038, 443, 442, 444, 0, 445, 0, 0,
	0, 0, 0, 446, 0, 448, 449, 450, 447, 451,
	452, 453, 454, 0, 455, 456, 457, 1078, 458, 459,
	460, 461, 968, 462, 0, 463, 464, 470, 471, 465,
	466, 472, 473, 474, 475, 476, 0, 478, 479, 477,
	480, 481, 482, 1021, 483, 467, 468, 484, 485, 1079,
	486, 487, 488, 489, 490, 491, 1036, 0, 492, 0,
	493, 494, 495, 496, 469, 497, 502, 1082, 498, 499,
	500, 501, 1059, 0, 504, 505, 956, 503, 0, 506,
	507, 508, 509, 510, 511, 326, 512, 0, 513, 1048,
	1049, 1050, 1051, 0, 520, 0, 514, 515, 1060, 516,
	1061, 978, 517, 518, 519, 0, 521, 522, 0, 962,
	523, 524, 525, 527, 528, 526, 529, 1022, 530, 0,
	0, 531, 532, 533, 588, 1045, 1081, 0, 535, 534,
	591, 0, 0, 0, 0, 536, 537, 592, 538, 539,
	540, 959, 0, 0, 0, 0, 0, 0, 955, 0,
	0, 0, 0, 0, 0, 953, 954, 0, 0, 0,
	0, 0, 0, 0, 984, 0, 0, 2383, 982, 1000,
	972, 973, 974, 970, 971, 983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1024, 988, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 542, 1037, 0, 265, 1044, 266, 1043,
	0, 1054, 267, 268, 269, 270, 271, 990, 1023, 957,
	272, 1083, 1084, 549, 0, 273, 274, 1030, 0, 1011,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 295, 1064, 296, 297,
	1014, 1012, 1013, 1020, 1016, 1015, 1019, 298, 299, 300,
	301, 1047, 302, 1041, 1040, 961, 306, 303, 304, 0,
	307, 305, 0, 308, 309, 310, 0, 0, 311, 1032,
	313, 0, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 967, 321, 322, 323, 325, 327, 324, 328, 329,
	330, 331, 1055, 1056, 979, 246, 0, 0, 0, 0,
	0, 332, 333, 334, 1039, 0, 0, 0, 335, 0,
	336, 0, 0, 1065, 337, 338, 1052, 1053, 339, 340,
	0, 341, 1062, 0, 989, 342, 0, 343, 344, 345,
	346, 347, 1025, 1026, 1029, 408, 1067, 348, 349, 0,
	350, 351, 352, 353, 0, 0, 0, 247, 354, 355,
	357, 0, 1066, 356, 1034, 1035, 0, 995, 0, 358,
	359, 1068, 1027, 1069, 360, 361, 362, 1070, 363, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 0, 370,
	372, 371, 0, 373, 1063, 1071, 374, 375, 1072, 0,
	376, 377, 378, 1018, 1017, 379, 380, 381, 382, 0,
	383, 384, 386, 388, 385, 387, 392, 389, 390, 391,
	394, 0, 393, 1073, 395, 396, 397, 403, 404, 400,
	401, 402, 405, 399, 1074, 398, 958, 248, 1075, 406,
	980, 1028, 407, 1042, 409, 410, 0, 0, 411, 0,
	0, 0, 413, 414, 415, 0, 0, 416, 417, 571,
	1076, 418, 1077, 1057, 419, 420, 412, 421, 422, 423,
	424, 425, 426, 427, 428, 0, 429, 430, 573, 574,
	1058, 431, 576, 432, 433, 0, 434, 0, 435, 436,
	437, 438, 439, 440, 441, 1038, 443, 442, 444, 0,
	445, 0, 0, 0, 0, 0, 446, 0, 448, 449,
	450, 447, 451, 452, 453, 454, 0, 455, 456, 457,
	1078, 458, 459, 460, 461, 968, 462, 0, 463, 464,
	470, 471, 465, 466, 472, 473, 474, 475, 476, 0,
	478, 479, 477, 480, 481, 482, 1021, 483, 467, 468,
	484, 485, 1079, 486, 487, 488, 489, 490, 491, 1036,
	0, 492, 0, 493, 494, 495, 496, 469, 497, 502,
	1082, 498, 499, 500, 501, 1059, 0, 504, 505, 956,
	503, 0, 506, 507, 508, 509, 510, 511, 326, 512,
	0, 513, 1048, 1049, 1050, 1051, 0, 520, 0, 514,
	515, 1060, 516, 1061, 978, 517, 518, 519, 0, 521,
	522, 0, 962, 523, 524, 525, 527, 528, 526, 529,
	1022, 530, 0, 0, 531, 532, 533, 588, 1045, 1081,
	0, 535, 534, 591, 0, 0, 0, 0, 536, 537,
	592, 538, 539, 540, 959, 0, 0, 0, 0, 0,
	0, 955, 0, 0, 0, 0, 0, 0, 953, 954,
	0, 0, 0, 0, 0, 0, 0, 984, 0, 0,
	2372, 982, 1000, 972, 973, 974, 970, 971, 983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1024, 988, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 1037, 0, 265,
	1044, 266, 1043, 0, 1054, 267, 268, 269, 270, 271,
	990, 1023, 957, 272, 1083, 1084, 549, 0, 273, 274,
	1030, 0, 1011, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 295,
	1064, 296, 297, 1014, 1012, 1013, 1020, 1016, 1015, 1019,
	298, 299, 300, 301, 1047, 302, 1041, 1040, 961, 306,
	303, 304, 0, 307, 305, 0, 308, 309, 310, 0,
	0, 311, 1032, 313, 0, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 967, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 1055, 1056, 979, 246, 0,
	0, 0, 0, 0, 332, 333, 334, 1039, 0, 0,
	0, 335, 0, 336, 0, 0, 1065, 337, 338, 1052,
	1053, 339, 340, 0, 341, 1062, 0, 989, 342, 0,
	343, 344, 345, 346, 347, 1025, 1026, 1029, 408, 1067,
	348, 349, 0, 350, 351, 352, 353, 0, 0, 0,
	247, 354, 355, 357, 0, 1066, 356, 1034, 1035, 0,
	995, 0, 358, 359, 1068, 1027, 1069, 360, 361, 362,
	1070, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 0, 370, 372, 371, 0, 373, 1063, 1071, 374,
	375, 1072, 0, 376, 377, 378, 1018, 1017, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 1073, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 1074, 398, 958,
	248, 1075, 406, 980, 1028, 407, 1042, 409, 410, 0,
	0, 411, 0, 0, 0, 413, 414, 415, 0, 0,
	416, 417, 571, 1076, 418, 1077, 1057, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 0, 429,
	430, 573, 574, 1058, 431, 576, 432, 433, 0, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 1038, 443,
	442, 444, 0, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 0,
	455, 456, 457, 1078, 458, 459, 460, 461, 968, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 0, 478, 479, 477, 480, 481, 482, 1021,
	483, 467, 468, 484, 485, 1079, 486, 487, 488, 489,
	490, 491, 1036, 0, 492, 0, 493, 494, 495, 496,
	469, 497, 502, 1082, 498, 499, 500, 501, 1059, 0,
	504, 505, 956, 503, 0, 506, 507, 508, 509, 510,
	511, 326, 512, 0, 513, 1048, 1049, 1050, 1051, 0,
	520, 0, 514, 515, 1060, 516, 1061, 978, 517, 518,
	519, 0, 521, 522, 0, 962, 523, 524, 525, 527,
	528, 526, 529, 1022, 530, 0, 0, 531, 532, 533,
	588, 1045, 1081, 0, 535, 534, 591, 0, 0, 0,
	0, 536, 537, 592, 538, 539, 540, 959, 0, 0,
	0, 0, 0, 0, 955, 0, 0, 0, 0, 0,
	0, 953, 954, 0, 0, 0, 0, 0, 0, 0,
	984, 0, 0, 2370, 982, 2361, 2368, 973, 974, 970,
	971, 983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1024, 988, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 542,
	1037, 0, 265, 1044, 266, 1043, 0, 1054, 267, 268,
	269, 270, 271, 990, 1023, 957, 272, 1083, 1084, 549,
	0, 273, 274, 1030, 0, 1011, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 295, 1064, 296, 297, 1014, 1012, 1013, 1020,
	1016, 1015, 1019, 298, 299, 300, 301, 1047, 2364, 1041,
	1040, 961, 306, 303, 304, 0, 307, 305, 0, 308,
	309, 310, 0, 0, 311, 1032, 313, 0, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 967, 321, 322,
	323, 325, 327, 324, 328, 329, 330, 331, 1055, 1056,
	979, 246, 0, 0, 0, 0, 0, 332, 333, 334,
	1039, 0, 0, 0, 335, 0, 336, 0, 0, 1065,
	337, 338, 1052, 1053, 339, 340, 0, 341, 1062, 0,
	989, 342, 0, 343, 344, 345, 2365, 347, 1025, 1026,
	1029, 408, 1067, 348, 349, 0, 350, 351, 352, 353,
	0, 0, 0, 247, 354, 355, 357, 0, 1066, 356,
	1034, 1035, 0, 995, 0, 358, 359, 1068, 1027, 1069,
	360, 361, 362, 1070, 363, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 0, 370, 372, 371, 0, 373,
	1063, 1071, 374, 375, 1072, 0, 376, 377, 378, 1018,
	1017, 379, 380, 381, 382, 0, 383, 384, 386, 388,
	385, 2366, 2363, 389, 390, 391, 394, 0, 393, 1073,
	395, 396, 397, 403, 404, 400, 401, 402, 405, 399,
	1074, 398, 958, 248, 1075, 406, 980, 1028, 407, 1042,
	409, 410, 0, 0, 411, 0, 0, 0, 413, 414,
	415, 0, 0, 416, 417, 571, 1076, 418, 1077, 1057,
	419, 420, 412, 421, 422, 423, 424, 425, 426, 427,
	428, 0, 429, 430, 573, 574, 1058, 431, 576, 432,
	433, 0, 434, 0, 435, 436, 437, 438, 439, 440,
	441, 1038, 443, 442, 444, 0, 445, 0, 0, 0,
	0, 0, 446, 0, 448, 449, 450, 447, 451, 452,
	453, 454, 0, 455, 456, 457, 1078, 458, 459, 460,
	461, 968, 462, 0, 463, 464, 470, 471, 465, 466,
	472, 473, 474, 475, 2367, 0, 478, 479, 477, 480,
	481, 482, 1021, 483, 467, 468, 484, 485, 1079, 486,
	487, 488, 489, 490, 491, 1036, 0, 492, 0, 493,
	494, 495, 496, 469, 497, 502, 1082, 498, 499, 500,
	501, 1059, 0, 504, 505, 956, 503, 0, 506, 507,
	508, 509, 510, 511, 326, 512, 0, 513, 1048, 1049,
	1050, 1051, 0, 520, 0, 514, 515, 1060, 516, 1061,
	978, 517, 518, 519, 0, 521, 522, 0, 962, 523,
	524, 525, 527, 528, 526, 529, 1022, 530, 0, 0,
	531, 532, 533, 588, 1045, 1081, 0, 535, 534, 591,
	0, 0, 0, 0, 536, 537, 592, 538, 2362, 540,
	959, 0, 0, 0, 0, 0, 0, 955, 0, 0,
	0, 0, 0, 0, 953, 954, 0, 0, 0, 0,
	0, 0, 0, 984, 0, 0, 2358, 982, 2361, 2368,
	973, 974, 970, 971, 983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1024,
	988, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 542, 1037, 0, 265, 1044, 266, 1043, 0,
	1054, 267, 268, 269, 270, 271, 990, 1023, 957, 272,
	1083, 1084, 549, 0, 273, 274, 1030, 0, 1011, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 295, 1064, 296, 297, 1014,
	1012, 1013, 1020, 1016, 1015, 1019, 298, 299, 300, 301,
	1047, 2364, 1041, 1040, 961, 306, 303, 304, 0, 307,
	305, 0, 308, 309, 310, 0, 0, 311, 1032, 313,
	0, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	967, 321, 322, 323, 325, 327, 324, 328, 329, 330,
	331, 1055, 1056, 979, 246, 0, 0, 0, 0, 0,
	332, 333, 334, 1039, 0, 0, 0, 335, 0, 336,
	0, 0, 1065, 337, 338, 1052, 1053, 339, 340, 0,
	341, 1062, 0, 989, 342, 0, 343, 344, 345, 2365,
	347, 1025, 1026, 1029, 408, 1067, 348, 349, 0, 350,
	351, 352, 353, 0, 0, 0, 247, 354, 355, 357,
	0, 1066, 356, 1034, 1035, 0, 995, 0, 358, 359,
	1068, 1027, 1069, 360, 361, 362, 1070, 363, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 0, 370, 372,
	371, 0, 373, 1063, 1071, 374, 375, 1072, 0, 376,
	377, 378, 1018, 1017, 379, 380, 381, 382, 0, 383,
	384, 386, 388, 385, 2366, 2363, 389, 390, 391, 394,
	0, 393, 1073, 395, 396, 397, 403, 404, 400, 401,
	402, 405, 399, 1074, 398, 958, 248, 1075, 406, 980,
	1028, 407, 1042, 409, 410, 0, 0, 411, 0, 0,
	0, 413, 414, 415, 0, 0, 416, 417, 571, 1076,
	418, 1077, 1057, 419, 420, 412, 421, 422, 423, 424,
	425, 426, 427, 428, 0, 429, 430, 573, 574, 1058,
	431, 576, 432, 433, 0, 434, 0, 435, 436, 437,
	438, 439, 440, 441, 1038, 443, 442, 444, 0, 445,
	0, 0, 0, 0, 0, 446, 0, 448, 449, 450,
	447, 451, 452, 453, 454, 0, 455, 456, 457, 1078,
	458, 459, 460, 461, 968, 462, 0, 463, 464, 470,
	471, 465, 466, 472, 473, 474, 475, 2367, 0, 478,
	479, 477, 480, 481, 482, 1021, 483, 467, 468, 484,
	485, 1079, 486, 487, 488, 489, 490, 491, 1036, 0,
	492, 0, 493, 494, 495, 496, 469, 497, 502, 1082,
	498, 499, 500, 501, 1059, 0, 504, 505, 956, 503,
	0, 506, 507, 508, 509, 510, 511, 326, 512, 0,
	513, 1048, 1049, 1050, 1051, 0, 520, 0, 514, 515,
	1060, 516, 1061, 978, 517, 518, 519, 0, 521, 522,
	0, 962, 523, 524, 525, 527, 528, 526, 529, 1022,
	530, 0, 0, 531, 532, 533, 588, 1045, 1081, 0,
	535, 534, 591, 0, 0, 0, 0, 536, 537, 592,
	538, 2362, 540, 959, 0, 0, 0, 0, 0, 0,
	955, 0, 0, 0, 0, 0, 0, 953, 954, 1000,
	972, 973, 974, 970, 971, 983, 984, 0, 0, 0,
	982, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1024, 988, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 542, 1037, 0, 265, 1044, 266, 1043,
	0, 1054, 267, 268, 269, 270, 271, 990, 1023, 957,
	272, 1083, 1084, 549, 0, 273, 274, 1030, 0, 1011,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 295, 1064, 296, 297,
	1014, 1012, 1013, 1020, 1016, 1015, 1019, 298, 299, 300,
	301, 1047, 302, 1041, 1040, 961, 306, 303, 304, 0,
	307, 305, 0, 308, 309, 310, 0, 0, 311, 1032,
	313, 0, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 967, 321, 322, 323, 325, 327, 324, 328, 329,
	330, 331, 1055, 1056, 979, 246, 0, 0, 0, 0,
	0, 332, 333, 334, 1039, 0, 0, 0, 335, 0,
	336, 0, 0, 1065, 337, 338, 1052, 1053, 339, 340,
	0, 341, 1062, 0, 989, 342, 0, 343, 344, 345,
	346, 347, 1025, 1026, 1029, 408, 1067, 348, 349, 0,
	350, 351, 352, 353, 0, 0, 0, 247, 354, 355,
	357, 0, 1066, 356, 1034, 1035, 0, 995, 0, 358,
	359, 1068, 1027, 1069, 360, 361, 362, 1070, 363, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 0, 370,
	372, 371, 0, 373, 1063, 1071, 374, 375, 1072, 0,
	376, 377, 378, 1018, 1017, 379, 380, 381, 382, 0,
	383, 384, 386, 388, 385, 387, 392, 389, 390, 391,
	394, 0, 393, 1073, 395, 396, 397, 403, 404, 400,
	401, 402, 405, 399, 1074, 398, 958, 248, 1075, 406,
	980, 1028, 407, 1042, 409, 410, 0, 0, 411, 0,
	0, 0, 413, 414, 415, 0, 0, 416, 417, 571,
	1076, 418, 1077, 1057, 419, 420, 412, 421, 422, 423,
	424, 425, 426, 427, 428, 0, 429, 430, 573, 574,
	1058, 431, 576, 432, 433, 0, 434, 0, 435, 436,
	437, 438, 439, 440, 441, 1038, 443, 442, 444, 0,
	445, 0, 0, 0, 0, 0, 446, 0, 448, 449,
	450, 447, 451, 452, 453, 454, 0, 455, 456, 457,
	1078, 458, 459, 460, 461, 968, 462, 0, 463, 464,
	470, 471, 465, 466, 472, 473, 474, 475, 476, 0,
	478, 479, 477, 480, 481, 482, 1021, 483, 467, 468,
	484, 485, 1079, 486, 487, 488, 489, 490, 491, 1036,
	0, 492, 0, 493, 494, 495, 496, 469, 497, 502,
	1082, 498, 499, 500, 501, 1059, 0, 504, 505, 956,
	503, 0, 506, 507, 508, 509, 510, 511, 326, 512,
	0, 513, 1048, 1049, 1050, 1051, 0, 520, 0, 514,
	515, 1060, 516, 1061, 978, 517, 518, 519, 0, 521,
	522, 0, 962, 523, 524, 525, 527, 528, 526, 529,
	1022, 530, 0, 0, 531, 532, 533, 588, 1045, 1081,
	0, 535, 534, 591, 0, 0, 0, 0, 536, 537,
	592, 538, 539, 540, 959, 0, 0, 0, 0, 0,
	0, 955, 0, 0, 0, 0, 0, 0, 953, 954,
	0, 0, 0, 0, 0, 1698, 0, 984, 0, 0,
	0, 982, 1000, 972, 973, 974, 970, 971, 983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 2176, 255, 256, 0, 0,
	0, 0, 0, 1024, 988, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 1037, 0, 265,
	1044, 266, 1043, 0, 1054, 267, 268, 269, 270, 271,
	990, 1023, 957, 272, 1083, 1084, 549, 0, 273, 274,
	1030, 0, 1011, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 295,
	1064, 296, 297, 1014, 1012, 1013, 1020, 1016, 1015, 1019,
	298, 299, 300, 301, 1047, 302, 1041, 1040, 961, 306,
	303, 304, 0, 307, 305, 0, 308, 309, 310, 0,
	0, 311, 1032, 313, 0, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 967, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 1055, 1056, 979, 246, 0,
	0, 0, 0, 0, 332, 333, 334, 1039, 0, 0,
	0, 335, 0, 336, 0, 0, 1065, 337, 338, 1052,
	1053, 339, 340, 0, 341, 1062, 0, 989, 342, 0,
	343, 344, 345, 346, 347, 1025, 1026, 1029, 408, 1067,
	348, 349, 0, 350, 351, 352, 353, 0, 0, 0,
	247, 354, 355, 357, 0, 1066, 356, 1034, 1035, 0,
	995, 0, 358, 359, 1068, 1027, 1069, 360, 361, 362,
	1070, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 0, 370, 372, 371, 0, 373, 1063, 1071, 374,
	375, 1072, 0, 376, 377, 378, 1018, 1017, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 1073, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 1074, 398, 958,
	248, 1075, 406, 980, 1028, 407, 1042, 409, 410, 0,
	0, 411, 0, 0, 0, 413, 414, 415, 0, 0,
	416, 417, 571, 1076, 418, 1077, 1057, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 0, 429,
	430, 573, 574, 1058, 431, 576, 432, 433, 0, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 1038, 443,
	442, 444, 0, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 0,
	455, 456, 457, 1078, 458, 459, 460, 461, 968, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 0, 478, 479, 477, 480, 481, 482, 1021,
	483, 467, 468, 484, 485, 1079, 486, 487, 488, 489,
	490, 491, 1036, 0, 492, 0, 493, 494, 495, 496,
	469, 497, 502, 1082, 498, 499, 500, 501, 1059, 0,
	504, 505, 956, 503, 0, 506, 507, 508, 509, 510,
	511, 326, 512, 0, 513, 1048, 1049, 1050, 1051, 0,
	520, 0, 514, 515, 1060, 516, 1061, 978, 517, 518,
	519, 0, 521, 522, 0, 962, 523, 524, 525, 527,
	528, 526, 529, 1022, 530, 0, 0, 531, 532, 533,
	588, 1045, 1081, 0, 535, 534, 591, 0, 0, 0,
	0, 536, 537, 592, 538, 539, 540, 959, 0, 0,
	0, 0, 0, 0, 955, 0, 0, 0, 0, 0,
	0, 953, 954, 0, 0, 0, 0, 0, 0, 0,
	984, 0, 0, 1550, 982, 1000, 972, 973, 974, 970,
	971, 983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1024, 988, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 542,
	1037, 0, 265, 1044, 266, 1043, 0, 1054, 267, 268,
	269, 270, 271, 990, 1023, 957, 272, 1083, 1084, 549,
	0, 273, 274, 1030, 0, 1011, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 295, 1064, 296, 297, 1014, 1012, 1013, 1020,
	1016, 1015, 1019, 298, 299, 300, 301, 1047, 302, 1041,
	1040, 961, 306, 303, 304, 0, 307, 305, 0, 308,
	309, 310, 0, 0, 311, 1032, 313, 0, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 967, 321, 322,
	323, 325, 327, 324, 328, 329, 330, 331, 1055, 1056,
	979, 246, 0, 0, 0, 0, 0, 332, 333, 334,
	1039, 0, 0, 0, 335, 0, 336, 0, 0, 1065,
	337, 338, 1052, 1053, 339, 340, 0, 341, 1062, 0,
	989, 342, 0, 343, 344, 345, 346, 347, 1025, 1026,
	1029, 408, 1067, 348, 349, 0, 350, 351, 352, 353,
	0, 0, 0, 247, 354, 355, 357, 0, 1066, 356,
	1034, 1035, 0, 995, 0, 358, 359, 1068, 1027, 1069,
	360, 361, 362, 1070, 363, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 0, 370, 372, 371, 0, 373,
	1063, 1071, 374, 375, 1072, 0, 376, 377, 378, 1018,
	1017, 379, 380, 381, 382, 0, 383, 384, 386, 388,
	385, 387, 392, 389, 390, 391, 394, 0, 393, 1073,
	395, 396, 397, 403, 404, 400, 401, 402, 405, 399,
	1074, 398, 958, 248, 1075, 406, 980, 1028, 407, 1042,
	409, 410, 0, 0, 411, 0, 0, 0, 413, 414,
	415, 0, 0, 416, 417, 571, 1076, 418, 1077, 1057,
	419, 420, 412, 421, 422, 423, 424, 425, 426, 427,
	428, 0, 429, 430, 573, 574, 1058, 431, 576, 432,
	433, 0, 434, 0, 435, 436, 437, 438, 439, 440,
	441, 1038, 443, 442, 444, 0, 445, 0, 0, 0,
	0, 0, 446, 0, 448, 449, 450, 447, 451, 452,
	453, 454, 0, 455, 456, 457, 1078, 458, 459, 460,
	461, 968, 462, 0, 463, 464, 470, 471, 465, 466,
	472, 473, 474, 475, 476, 0, 478, 479, 477, 480,
	481, 482, 1021, 483, 467, 468, 484, 485, 1079, 486,
	487, 488, 489, 490, 491, 1036, 0, 492, 0, 493,
	494, 495, 496, 469, 497, 502, 1082, 498, 499, 500,
	501, 1059, 0, 504, 505, 956, 503, 0, 506, 507,
	508, 509, 510, 511, 326, 512, 0, 513, 1048, 1049,
	1050, 1051, 0, 520, 0, 514, 515, 1060, 516, 1061,
	978, 517, 518, 519, 0, 521, 522, 0, 962, 523,
	524, 525, 527, 528, 526, 529, 1022, 530, 0, 0,
	531, 532, 533, 588, 1045, 1081, 0, 535, 534, 591,
	0, 0, 0, 0, 536, 537, 592, 538, 539, 540,
	959, 0, 0, 0, 0, 0, 0, 955, 0, 0,
	0, 0, 0, 0, 953, 954, 0, 0, 0, 0,
	0, 0, 0, 984, 0, 0, 1487, 982, 1000, 972,
	973, 974, 970, 971, 983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1024,
	988, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 542, 1037, 0, 265, 1044, 266, 1043, 0,
	1054, 267, 268, 269, 270, 271, 990, 1023, 957, 272,
	1083, 1084, 549, 0, 273, 274, 1030, 0, 1011, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 295, 1064, 296, 297, 1014,
	1012, 1013, 1020, 1016, 1015, 1019, 298, 299, 300, 301,
	1047, 302, 1041, 1040, 961, 306, 303, 304, 0, 307,
	305, 0, 308, 309, 310, 0, 0, 311, 1032, 313,
	0, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	967, 321, 322, 323, 325, 327, 324, 328, 329, 330,
	331, 1055, 1056, 979, 246, 0, 0, 0, 0, 0,
	332, 333, 334, 1039, 0, 0, 0, 335, 0, 336,
	0, 0, 1065, 337, 338, 1052, 1053, 339, 340, 0,
	341, 1062, 0, 989, 342, 0, 343, 344, 345, 346,
	347, 1025, 1026, 1029, 408, 1067, 348, 349, 0, 350,
	351, 352, 353, 0, 0, 0, 247, 354, 355, 357,
	0, 1066, 356, 1034, 1035, 0, 995, 0, 358, 359,
	1068, 1027, 1069, 360, 361, 362, 1070, 363, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 0, 370, 372,
	371, 0, 373, 1063, 1071, 374, 375, 1072, 0, 376,
	377, 378, 1018, 1017, 379, 380, 381, 382, 0, 383,
	384, 386, 388, 385, 387, 392, 389, 390, 391, 394,
	0, 393, 1073, 395, 396, 397, 403, 404, 400, 401,
	402, 405, 399, 1074, 398, 958, 248, 1075, 406, 980,
	1028, 407, 1042, 409, 410, 0, 0, 411, 0, 0,
	0, 413, 414, 415, 0, 0, 416, 417, 571, 1076,
	418, 1077, 1057, 419, 420, 412, 421, 422, 423, 424,
	425, 426, 427, 428, 0, 429, 430, 573, 574, 1058,
	431, 576, 432, 433, 0, 434, 0, 435, 436, 437,
	438, 439, 440, 441, 1038, 443, 442, 444, 0, 445,
	0, 0, 0, 0, 0, 446, 0, 448, 449, 450,
	447, 451, 452, 453, 454, 0, 455, 456, 457, 1078,
	458, 459, 460, 461, 968, 462, 0, 463, 464, 470,
	471, 465, 466, 472, 473, 474, 475, 476, 0, 478,
	479, 477, 480, 481, 482, 1021, 483, 467, 468, 484,
	485, 1079, 486, 487, 488, 489, 490, 491, 1036, 0,
	492, 0, 493, 494, 495, 496, 469, 497, 502, 1082,
	498, 499, 500, 501, 1059, 0, 504, 505, 956, 503,
	0, 506, 507, 508, 509, 510, 511, 326, 512, 0,
	513, 1048, 1049, 1050, 1051, 0, 520, 0, 514, 515,
	1060, 516, 1061, 978, 517, 518, 519, 0, 521, 522,
	0, 962, 523, 524, 525, 527, 528, 526, 529, 1022,
	530, 0, 0, 531, 532, 533, 588, 1045, 1081, 0,
	535, 534, 591, 0, 0, 0, 0, 536, 537, 592,
	538, 539, 540, 959, 0, 0, 0, 0, 0, 0,
	955, 0, 0, 0, 0, 0, 0, 953, 954, 0,
	0, 0, 0, 0, 0, 0, 984, 0, 0, 1482,
	982, 1000, 972, 973, 974, 970, 971, 983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1024, 988, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 542, 1037, 0, 265, 1044,
	266, 1043, 0, 1054, 267, 268, 269, 270, 271, 990,
	1023, 957, 272, 1083, 1084, 549, 0, 273, 274, 1030,
	0, 1011, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 295, 1064,
	296, 297, 1014, 1012, 1013, 1020, 1016, 1015, 1019, 298,
	299, 300, 301, 1047, 302, 1041, 1040, 961, 306, 303,
	304, 0, 307, 305, 0, 308, 309, 310, 0, 0,
	311, 1032, 313, 0, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 967, 321, 322, 323, 325, 327, 324,
	328, 329, 330, 331, 1055, 1056, 979, 246, 0, 0,
	0, 0, 0, 332, 333, 334, 1039, 0, 0, 0,
	335, 0, 336, 0, 0, 1065, 337, 338, 1052, 1053,
	339, 340, 0, 341, 1062, 0, 989, 342, 0, 343,
	344, 345, 346, 347, 1025, 1026, 1029, 408, 1067, 348,
	349, 0, 350, 351, 352, 353, 0, 0, 0, 247,
	354, 355, 357, 0, 1066, 356, 1034, 1035, 0, 995,
	0, 358, 359, 1068, 1027, 1069, 360, 361, 362, 1070,
	363, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	0, 370, 372, 371, 0, 373, 1063, 1071, 374, 375,
	1072, 0, 376, 377, 378, 1018, 1017, 379, 380, 381,
	382, 0, 383, 384, 386, 388, 385, 387, 392, 389,
	390, 391, 394, 0, 393, 1073, 395, 396, 397, 403,
	404, 400, 401, 402, 405, 399, 1074, 398, 958, 248,
	1075, 406, 980, 1028, 407, 1042, 409, 410, 0, 0,
	411, 0, 0, 0, 413, 414, 415, 0, 0, 416,
	417, 571, 1076, 418, 1077, 1057, 419, 420, 412, 421,
	422, 423, 424, 425, 426, 427, 428, 0, 429, 430,
	573, 574, 1058, 431, 576, 432, 433, 0, 434, 0,
	435, 436, 437, 438, 439, 440, 441, 1038, 443, 442,
	444, 0, 445, 0, 0, 0, 0, 0, 446, 0,
	448, 449, 450, 447, 451, 452, 453, 454, 0, 455,
	456, 457, 1078, 458, 459, 460, 461, 968, 462, 0,
	463, 464, 470, 471, 465, 466, 472, 473, 474, 475,
	476, 0, 478, 479, 477, 480, 481, 482, 1021, 483,
	467, 468, 484, 485, 1079, 486, 487, 488, 489, 490,
	491, 1036, 0, 492, 0, 493, 494, 495, 496, 469,
	497, 502, 1082, 498, 499, 500, 501, 1059, 0, 504,
	505, 956, 503, 0, 506, 507, 508, 509, 510, 511,
	326, 512, 0, 513, 1048, 1049, 1050, 1051, 0, 520,
	0, 514, 515, 1060, 516, 1061, 978, 517, 518, 519,
	0, 521, 522, 0, 962, 523, 524, 525, 527, 528,
	526, 529, 1022, 530, 0, 0, 531, 532, 533, 588,
	1045, 1081, 0, 535, 534, 591, 0, 0, 0, 0,
	536, 537, 592, 538, 539, 540, 959, 0, 0, 0,
	0, 0, 0, 955, 0, 0, 0, 0, 0, 0,
	953, 954, 0, 0, 0, 0, 0, 0, 0, 984,
	0, 0, 1473, 982, 1000, 972, 973, 974, 970, 971,
	983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1024, 988, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 542, 1037,
	0, 265, 1044, 266, 1043, 0, 1054, 267, 268, 269,
	270, 271, 990, 1023, 957, 272, 1083, 1084, 549, 0,
	273, 274, 1030, 0, 1011, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 295, 1064, 296, 297, 1014, 1012, 1013, 1020, 1016,
	1015, 1019, 298, 299, 300, 301, 1047, 302, 1041, 1040,
	961, 306, 303, 304, 0, 307, 305, 0, 308, 309,
	310, 0, 0, 311, 1032, 313, 0, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 967, 321, 322, 323,
	325, 327, 324, 328, 329, 330, 331, 1055, 1056, 979,
	246, 0, 0, 0, 0, 0, 332, 333, 334, 1039,
	0, 0, 0, 335, 0, 336, 0, 0, 1065, 337,
	338, 1052, 1053, 339, 340, 0, 341, 1062, 0, 989,
	342, 0, 343, 344, 345, 346, 347, 1025, 1026, 1029,
	408, 1067, 348, 349, 0, 350, 351, 352, 353, 0,
	0, 0, 247, 354, 355, 357, 0, 1066, 356, 1034,
	1035, 0, 995, 0, 358, 359, 1068, 1027, 1069, 360,
	361, 362, 1070, 363, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 0, 370, 372, 371, 0, 373, 1063,
	1071, 374, 375, 1072, 0, 376, 377, 378, 1018, 1017,
	379, 380, 381, 382, 0, 383, 384, 386, 388, 385,
	387, 392, 389, 390, 391, 394, 0, 393, 1073, 395,
	396, 397, 403, 404, 400, 401, 402, 405, 399, 1074,
	398, 958, 248, 1075, 406, 980, 1028, 407, 1042, 409,
	410, 0, 0, 411, 0, 0, 0, 413, 414, 415,
	0, 0, 416, 417, 571, 1076, 418, 1077, 1057, 419,
	420, 412, 421, 422, 423, 424, 425, 426, 427, 428,
	0, 429, 430, 573, 574, 1058, 431, 576, 432, 433,
	0, 434, 0, 435, 436, 437, 438, 439, 440, 441,
	1038, 443, 442, 444, 0, 445, 0, 0, 0, 0,
	0, 446, 0, 448, 449, 450, 447, 451, 452, 453,
	454, 0, 455, 456, 457, 1078, 458, 459, 460, 461,
	968, 462, 0, 463, 464, 470, 471, 465, 466, 472,
	473, 474, 475, 476, 0, 478, 479, 477, 480, 481,
	482, 1021, 483, 467, 468, 484, 485, 1079, 486, 487,
	488, 489, 490, 491, 1036, 0, 492, 0, 493, 494,
	495, 496, 469, 497, 502, 1082, 498, 499, 500, 501,
	1059, 0, 504, 505, 956, 503, 0, 506, 507, 508,
	509, 510, 511, 326, 512, 0, 513, 1048, 1049, 1050,
	1051, 0, 520, 0, 514, 515, 1060, 516, 1061, 978,
	517, 518, 519, 0, 521, 522, 0, 962, 523, 524,
	525, 527, 528, 526, 529, 1022, 530, 0, 0, 531,
	532, 533, 588, 1045, 1081, 0, 535, 534, 591, 0,
	0, 0, 0, 536, 537, 592, 538, 539, 540, 959,
	0, 0, 0, 0, 0, 0, 955, 0, 0, 0,
	0, 0, 0, 953, 954, 0, 0, 0, 0, 0,
	0, 0, 984, 0, 0, 1468, 982, 1000, 972, 973,
	974, 970, 971, 983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1024, 988,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 542, 1037, 0, 265, 1044, 266, 1043, 0, 1054,
	267, 268, 269, 270, 271, 990, 1023, 957, 272, 1083,
	1084, 549, 0, 273, 274, 1030, 0, 1011, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 295, 1064, 296, 297, 1014, 1012,
	1013, 1020, 1016, 1015, 1019, 298, 299, 300, 301, 1047,
	302, 1041, 1040, 961, 306, 303, 304, 0, 307, 305,
	0, 308, 309, 310, 0, 0, 311, 1032, 313, 0,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 967,
	321, 322, 323, 325, 327, 324, 328, 329, 330, 331,
	1055, 1056, 979, 246, 0, 0, 0, 0, 0, 332,
	333, 334, 1039, 0, 0, 0, 335, 0, 336, 0,
	0, 1065, 337, 338, 1052, 1053, 339, 340, 0, 341,
	1062, 0, 989, 342, 0, 343, 344, 345, 346, 347,
	1025, 1026, 1029, 408, 1067, 348, 349, 0, 350, 351,
	352, 353, 0, 0, 0, 247, 354, 355, 357, 0,
	1066, 356, 1034, 1035, 0, 995, 0, 358, 359, 1068,
	1027, 1069, 360, 361, 362, 1070, 363, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 0, 370, 372, 371,
	0, 373, 1063, 1071, 374, 375, 1072, 0, 376, 377,
	378, 1018, 1017, 379, 380, 381, 382, 0, 383, 384,
	386, 388, 385, 387, 392, 389, 390, 391, 394, 0,
	393, 1073, 395, 396, 397, 403, 404, 400, 401, 402,
	405, 399, 1074, 398, 958, 248, 1075, 406, 980, 1028,
	407, 1042, 409, 410, 0, 0, 411, 0, 0, 0,
	413, 414, 415, 0, 0, 416, 417, 571, 1076, 418,
	1077, 1057, 419, 420, 412, 421, 422, 423, 424, 425,
	426, 427, 428, 0, 429, 430, 573, 574, 1058, 431,
	576, 432, 433, 0, 434, 0, 435, 436, 437, 438,
	439, 440, 441, 1038, 443, 442, 444, 0, 445, 0,
	0, 0, 0, 0, 446, 0, 448, 449, 450, 447,
	451, 452, 453, 454, 0, 455, 456, 457, 1078, 458,
	459, 460, 461, 968, 462, 0, 463, 464, 470, 471,
	465, 466, 472, 473, 474, 475, 476, 0, 478, 479,
	477, 480, 481, 482, 1021, 483, 467, 468, 484, 485,
	1079, 486, 487, 488, 489, 490, 491, 1036, 0, 492,
	0, 493, 494, 495, 496, 469, 497, 502, 1082, 498,
	499, 500, 501, 1059, 0, 504, 505, 956, 503, 0,
	506, 507, 508, 509, 510, 511, 326, 512, 0, 513,
	1048, 1049, 1050, 1051, 0, 520, 0, 514, 515, 1060,
	516, 1061, 978, 517, 518, 519, 0, 521, 522, 0,
	962, 523, 524, 525, 527, 528, 526, 529, 1022, 530,
	0, 0, 531, 532, 533, 588, 1045, 1081, 0, 535,
	534, 591, 0, 0, 0, 0, 536, 537, 592, 538,
	539, 540, 959, 0, 0, 0, 0, 0, 0, 955,
	0, 0, 0, 0, 0, 0, 953, 954, 0, 0,
	0, 0, 0, 0, 0, 984, 0, 0, 1450, 982,
	1000, 972, 973, 974, 970, 971, 983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1024, 988, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 542, 1037, 0, 265, 1044, 266,
	1043, 0, 1054, 267, 268, 269, 270, 271, 990, 1023,
	957, 272, 1083, 1084, 549, 0, 273, 274, 1030, 0,
	1011, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 295, 1064, 296,
	297, 1014, 1012, 1013, 1020, 1016, 1015, 1019, 298, 299,
	300, 301, 1047, 302, 1041, 1040, 961, 306, 303, 304,
	0, 307, 305, 0, 308, 309, 310, 0, 0, 311,
	1032, 313, 0, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 967, 321, 322, 323, 325, 327, 324, 328,
	329, 330, 331, 1055, 1056, 979, 246, 0, 0, 0,
	0, 0, 332, 333, 334, 1039, 0, 0, 0, 335,
	0, 336, 0, 0, 1065, 337, 338, 1052, 1053, 339,
	340, 0, 341, 1062, 0, 989, 342, 0, 343, 344,
	345, 346, 347, 1025, 1026, 1029, 408, 1067, 348, 349,
	0, 350, 351, 352, 353, 0, 0, 0, 247, 354,
	355, 357, 0, 1066, 356, 1034, 1035, 0, 995, 0,
	358, 359, 1068, 1027, 1069, 360, 361, 362, 1070, 363,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 0,
	370, 372, 371, 0, 373, 1063, 1071, 374, 375, 1072,
	0, 376, 377, 378, 1018, 1017, 379, 380, 381, 382,
	0, 383, 384, 386, 388, 385, 387, 392, 389, 390,
	391, 394, 0, 393, 1073, 395, 396, 397, 403, 404,
	400, 401, 402, 405, 399, 1074, 398, 958, 248, 1075,
	406, 980, 1028, 407, 1042, 409, 410, 0, 0, 411,
	0, 0, 0, 413, 414, 415, 0, 0, 416, 417,
	571, 1076, 418, 1077, 1057, 419, 420, 412, 421, 422,
	423, 424, 425, 426, 427, 428, 0, 429, 430, 573,
	574, 1058, 431, 576, 432, 433, 0, 434, 0, 435,
	436, 437, 438, 439, 440, 441, 1038, 443, 442, 444,
	0, 445, 0, 0, 0, 0, 0, 446, 0, 448,
	449, 450, 447, 451, 452, 453, 454, 0, 455, 456,
	457, 1078, 458, 459, 460, 461, 968, 462, 0, 463,
	464, 470, 471, 465, 466, 472, 473, 474, 475, 476,
	0, 478, 479, 477, 480, 481, 482, 1021, 483, 467,
	468, 484, 485, 1079, 486, 487, 488, 489, 490, 491,
	1036, 0, 492, 0, 493, 494, 495, 496, 469, 497,
	502, 1082, 498, 499, 500, 501, 1059, 0, 504, 505,
	956, 503, 0, 506, 507, 508, 509, 510, 511, 326,
	512, 0, 513, 1048, 1049, 1050, 1051, 0, 520, 0,
	514, 515, 1060, 516, 1061, 978, 517, 518, 519, 0,
	521, 522, 0, 962, 523, 524, 525, 527, 528, 526,
	529, 1022, 530, 0, 0, 531, 532, 533, 588, 1045,
	1081, 0, 535, 534, 591, 0, 0, 0, 0, 536,
	537, 592, 538, 539, 540, 959, 0, 0, 0, 0,
	0, 0, 955, 0, 0, 0, 0, 0, 0, 953,
	954, 0, 0, 0, 0, 0, 0, 0, 984, 0,
	0, 1336, 982, 1000, 972, 973, 974, 970, 971, 983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1024, 988, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 542, 1037, 0,
	265, 1044, 266, 1043, 0, 1054, 267, 268, 269, 270,
	271, 990, 1023, 957, 272, 1083, 1084, 549, 0, 273,
	274, 1030, 0, 1011, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	295, 1064, 296, 297, 1014, 1012, 1013, 1020, 1016, 1015,
	1019, 298, 299, 300, 301, 1047, 302, 1041, 1040, 961,
	306, 303, 304, 0, 307, 305, 0, 308, 309, 310,
	0, 0, 311, 1032, 313, 0, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 967, 321, 322, 323, 325,
	327, 324, 328, 329, 330, 331, 1055, 1056, 979, 246,
	0, 0, 0, 0, 0, 332, 333, 334, 1039, 0,
	0, 0, 335, 0, 336, 0, 0, 1065, 337, 338,
	1052, 1053, 339, 340, 0, 341, 1062, 0, 989, 342,
	0, 343, 344, 345, 346, 347, 1335, 1026, 1029, 408,
	1067, 348, 349, 0, 350, 351, 352, 353, 0, 0,
	0, 247, 354, 355, 357, 0, 1066, 356, 1034, 1035,
	0, 995, 0, 358, 359, 1068, 1027, 1069, 360, 361,
	362, 1070, 363, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 0, 370, 372, 371, 0, 373, 1063, 1071,
	374, 375, 1072, 0, 376, 377, 378, 1018, 1017, 379,
	380, 381, 382, 0, 383, 384, 386, 388, 385, 387,
	392, 389, 390, 391, 394, 0, 393, 1073, 395, 396,
	397, 403, 404, 400, 401, 402, 405, 399, 1074, 398,
	958, 248, 1075, 406, 980, 1028, 407, 1042, 409, 410,
	0, 0, 411, 0, 0, 0, 413, 414, 415, 0,
	0, 416, 417, 571, 1076, 418, 1077, 1057, 419, 420,
	412, 421, 422, 423, 424, 425, 426, 427, 428, 0,
	429, 430, 573, 574, 1058, 431, 576, 432, 433, 0,
	434, 0, 435, 436, 437, 438, 439, 440, 441, 1038,
	443, 442, 444, 0, 445, 0, 0, 0, 0, 0,
	446, 0, 448, 449, 450, 447, 451, 452, 453, 454,
	0, 455, 456, 457, 1078, 458, 459, 460, 461, 968,
	462, 0, 463, 464, 470, 471, 465, 466, 472, 473,
	474, 475, 476, 0, 478, 479, 477, 480, 481, 482,
	1021, 483, 467, 468, 484, 485, 1079, 486, 487, 488,
	489, 490, 491, 1036, 0, 492, 0, 493, 494, 495,
	496, 469, 497, 502, 1082, 498, 499, 500, 501, 1059,
	0, 504, 505, 956, 503, 0, 506, 507, 508, 509,
	510, 511, 326, 512, 0, 513, 1048, 1049, 1050, 1051,
	0, 520, 0, 514, 515, 1060, 516, 1061, 978, 517,
	518, 519, 0, 521, 522, 0, 962, 523, 524, 525,
	527, 528, 526, 529, 1022, 530, 0, 0, 531, 532,
	533, 588, 1045, 1081, 0, 535, 534, 591, 0, 0,
	0, 0, 536, 537, 592, 538, 539, 540, 959, 0,
	0, 0, 0, 0, 0, 955, 0, 0, 0, 0,
	0, 0, 953, 954, 0, 0, 0, 0, 0, 0,
	0, 984, 0, 0, 1330, 982, 1000, 972, 973, 974,
	970, 971, 983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1024, 988, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	542, 1037, 0, 265, 1044, 266, 1043, 0, 1054, 267,
	268, 269, 270, 271, 990, 1023, 957, 272, 1083, 1084,
	549, 0, 273, 274, 1030, 0, 1011, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 295, 1064, 296, 297, 1014, 1012, 1013,
	1020, 1016, 1015, 1019, 298, 299, 300, 301, 1047, 302,
	1041, 1040, 961, 306, 303, 304, 0, 307, 305, 0,
	308, 309, 310, 0, 0, 311, 1032, 313, 0, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 967, 321,
	322, 323, 325, 327, 324, 328, 329, 330, 331, 1055,
	1056, 979, 246, 0, 0, 0, 0, 0, 332, 333,
	334, 1039, 0, 0, 0, 335, 0, 336, 0, 0,
	1065, 337, 338, 1052, 1053, 339, 340, 0, 341, 1062,
	0, 989, 342, 0, 343, 344, 345, 346, 347, 1329,
	1026, 1029, 408, 1067, 348, 349, 0, 350, 351, 352,
	353, 0, 0, 0, 247, 354, 355, 357, 0, 1066,
	356, 1034, 1035, 0, 995, 0, 358, 359, 1068, 1027,
	1069, 360, 361, 362, 1070, 363, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 0, 370, 372, 371, 0,
	373, 1063, 1071, 374, 375, 1072, 0, 376, 377, 378,
	1018, 1017, 379, 380, 381, 382, 0, 383, 384, 386,
	388, 385, 387, 392, 389, 390, 391, 394, 0, 393,
	1073, 395, 396, 397, 403, 404, 400, 401, 402, 405,
	399, 1074, 398, 958, 248, 1075, 406, 980, 1028, 407,
	1042, 409, 410, 0, 0, 411, 0, 0, 0, 413,
	414, 415, 0, 0, 416, 417, 571, 1076, 418, 1077,
	1057, 419, 420, 412, 421, 422, 423, 424, 425, 426,
	427, 428, 0, 429, 430, 573, 574, 1058, 431, 576,
	432, 433, 0, 434, 0, 435, 436, 437, 438, 439,
	440, 441, 1038, 443, 442, 444, 0, 445, 0, 0,
	0, 0, 0, 446, 0, 448, 449, 450, 447, 451,
	452, 453, 454, 0, 455, 456, 457, 1078, 458, 459,
	460, 461, 968, 462, 0, 463, 464, 470, 471, 465,
	466, 472, 473, 474, 475, 476, 0, 478, 479, 477,
	480, 481, 482, 1021, 483, 467, 468, 484, 485, 1079,
	486, 487, 488, 489, 490, 491, 1036, 0, 492, 0,
	493, 494, 495, 496, 469, 497, 502, 1082, 498, 499,
	500, 501, 1059, 0, 504, 505, 956, 503, 0, 506,
	507, 508, 509, 510, 511, 326, 512, 0, 513, 1048,
	1049, 1050, 1051, 0, 520, 0, 514, 515, 1060, 516,
	1061, 978, 517, 518, 519, 0, 521, 522, 0, 962,
	523, 524, 525, 527, 528, 526, 529, 1022, 530, 0,
	0, 531, 532, 533, 588, 1045, 1081, 0, 535, 534,
	591, 0, 0, 0, 0, 536, 537, 592, 538, 539,
	540, 959, 0, 0, 0, 0, 0, 0, 955, 0,
	0, 0, 0, 0, 0, 953, 954, 0, 0, 0,
	0, 0, 0, 0, 984, 0, 0, 1323, 982, 1000,
	972, 973, 974, 970, 971, 983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1024, 988, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 542, 1037, 0, 265, 1044, 266, 1043,
	0, 1054, 267, 268, 269, 270, 271, 990, 1023, 957,
	272, 1083, 1084, 549, 0, 273, 274, 1030, 0, 1011,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 295, 1064, 296, 297,
	1014, 1012, 1013, 1020, 1016, 1015, 1019, 298, 299, 300,
	301, 1047, 302, 1041, 1040, 961, 306, 303, 304, 0,
	307, 305, 0, 308, 309, 310, 0, 0, 311, 1032,
	313, 0, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 967, 321, 322, 323, 325, 327, 324, 328, 329,
	330, 331, 1055, 1056, 979, 246, 0, 0, 0, 0,
	0, 332, 333, 334, 1039, 0, 0, 0, 335, 0,
	336, 0, 0, 1065, 337, 338, 1052, 1053, 339, 340,
	0, 341, 1062, 0, 989, 342, 0, 343, 344, 345,
	346, 347, 1025, 1026, 1029, 408, 1067, 348, 349, 0,
	350, 351, 352, 353, 0, 0, 0, 247, 354, 355,
	357, 0, 1066, 356, 1034, 1035, 0, 995, 0, 358,
	359, 1068, 1027, 1069, 360, 361, 362, 1070, 363, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 0, 370,
	372, 371, 0, 373, 1063, 1071, 374, 375, 1072, 0,
	376, 377, 378, 1018, 1017, 379, 380, 381, 382, 0,
	383, 384, 386, 388, 385, 387, 392, 389, 390, 391,
	394, 0, 393, 1073, 395, 396, 397, 403, 404, 400,
	401, 402, 405, 399, 1074, 398, 958, 248, 1075, 406,
	980, 1028, 407, 1042, 409, 410, 0, 0, 411, 0,
	0, 0, 413, 414, 415, 0, 0, 416, 417, 571,
	1076, 418, 1077, 1057, 419, 420, 412, 421, 422, 423,
	424, 425, 426, 427, 428, 0, 429, 430, 573, 574,
	1058, 431, 576, 432, 433, 0, 434, 0, 435, 436,
	437, 438, 439, 440, 441, 1038, 443, 442, 444, 0,
	445, 0, 0, 0, 0, 0, 446, 0, 448, 449,
	450, 447, 451, 452, 453, 454, 0, 455, 456, 457,
	1078, 458, 459, 460, 461, 968, 462, 0, 463, 464,
	470, 471, 465, 466, 472, 473, 474, 475, 476, 0,
	478, 479, 477, 480, 481, 482, 1021, 483, 467, 468,
	484, 485, 1079, 486, 487, 488, 489, 490, 491, 1036,
	0, 492, 0, 493, 494, 495, 496, 469, 497, 502,
	1082, 498, 499, 500, 501, 1059, 0, 504, 505, 956,
	503, 0, 506, 507, 508, 509, 510, 511, 326, 512,
	0, 513, 1048, 1049, 1050, 1051, 0, 520, 0, 514,
	515, 1060, 516, 1061, 978, 517, 518, 519, 0, 521,
	522, 0, 962, 523, 524, 525, 527, 528, 526, 529,
	1022, 530, 0, 0, 531, 532, 533, 588, 1045, 1081,
	0, 535, 534, 591, 0, 0, 0, 0, 536, 537,
	592, 538, 539, 540, 959, 0, 0, 0, 0, 0,
	0, 955, 0, 0, 0, 0, 0, 0, 953, 954,
	1000, 972, 973, 974, 970, 971, 983, 984, 0, 0,
	0, 982, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1024, 988, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 542, 1037, 0, 265, 1044, 266,
	1043, 0, 1054, 267, 268, 269, 270, 271, 990, 1023,
	957, 272, 1083, 1084, 549, 0, 273, 274, 1030, 0,
	1011, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 295, 1064, 296,
	297, 1014, 1012, 1013, 1020, 1016, 1015, 1019, 298, 299,
	300, 301, 1047, 302, 1041, 1040, 961, 306, 303, 304,
	0, 307, 305, 0, 308, 309, 310, 0, 0, 311,
	1032, 313, 0, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 967, 321, 322, 323, 325, 327, 324, 328,
	329, 330, 331, 1055, 1056, 979, 246, 0, 0, 0,
	0, 0, 332, 333, 334, 1039, 0, 0, 0, 335,
	0, 336, 0, 0, 1065, 337, 338, 1052, 1053, 339,
	340, 0, 341, 1062, 0, 989, 342, 0, 343, 344,
	345, 346, 347, 1025, 1026, 1029, 408, 1067, 348, 349,
	0, 350, 351, 352, 353, 0, 0, 0, 247, 354,
	355, 357, 0, 1066, 356, 1034, 1035, 0, 995, 0,
	358, 359, 1068, 1027, 1069, 360, 361, 362, 1070, 363,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 0,
	370, 372, 371, 0, 373, 1063, 1071, 374, 375, 1072,
	0, 376, 377, 378, 1018, 1017, 379, 380, 381, 382,
	0, 383, 384, 386, 388, 385, 387, 392, 389, 390,
	391, 394, 0, 393, 1073, 395, 396, 397, 403, 404,
	400, 401, 402, 405, 399, 1074, 398, 958, 248, 1075,
	406, 980, 1028, 407, 1042, 409, 410, 0, 0, 411,
	0, 0, 0, 413, 414, 415, 0, 0, 416, 417,
	571, 1076, 418, 1077, 1057, 419, 420, 412, 421, 422,
	423, 424, 425, 426, 427, 428, 0, 429, 430, 573,
	574, 1058, 431, 576, 432, 433, 0, 434, 0, 435,
	436, 437, 438, 439, 440, 441, 1038, 443, 442, 444,
	0, 445, 0, 0, 0, 0, 0, 446, 0, 448,
	449, 450, 447, 451, 452, 453, 454, 0, 455, 456,
	457, 1078, 458, 459, 460, 461, 968, 462, 0, 463,
	464, 470, 471, 465, 466, 472, 473, 474, 475, 476,
	0, 478, 479, 477, 480, 481, 482, 1021, 483, 467,
	468, 484, 485, 1079, 486, 487, 488, 489, 490, 491,
	1036, 0, 492, 0, 493, 494, 495, 496, 469, 497,
	502, 1082, 498, 499, 500, 501, 1059, 0, 504, 505,
	956, 503, 0, 506, 507, 508, 509, 510, 511, 326,
	512, 0, 513, 1048, 1049, 1050, 1051, 0, 520, 0,
	514, 515, 1060, 516, 1061, 978, 517, 518, 519, 0,
	521, 522, 0, 962, 523, 524, 525, 527, 528, 526,
	529, 1022, 530, 0, 0, 531, 532, 533, 588, 1045,
	1081, 0, 535, 534, 591, 0, 0, 0, 0, 536,
	537, 592, 538, 539, 540, 959, 0, 0, 0, 0,
	0, 0, 955, 0, 0, 0, 0, 0, 0, 953,
	954, 1000, 972, 973, 974, 970, 971, 983, 984, 0,
	0, 0, 982, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1024, 988, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 542, 1037, 0, 265, 1044,
	266, 1043, 0, 1054, 267, 268, 269, 270, 271, 990,
	1023, 957, 272, 1083, 1084, 549, 0, 273, 274, 1030,
	0, 1011, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 295, 1064,
	296, 4095, 1014, 1012, 1013, 1020, 1016, 1015, 1019, 298,
	299, 300, 301, 1047, 302, 1041, 1040, 961, 306, 303,
	304, 0, 307, 305, 0, 308, 309, 310, 0, 0,
	311, 1032, 313, 0, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 967, 321, 322, 323, 325, 327, 324,
	328, 329, 330, 331, 1055, 1056, 979, 246, 0, 0,
	0, 0, 0, 332, 333, 334, 1039, 0, 0, 0,
	335, 0, 336, 0, 0, 1065, 337, 338, 1052, 1053,
	339, 340, 0, 341, 1062, 0, 989, 342, 0, 343,
	344, 345, 346, 347, 1025, 1026, 1029, 408, 1067, 348,
	349, 0, 350, 351, 352, 353, 0, 0, 0, 247,
	354, 355, 357, 0, 1066, 356, 1034, 1035, 0, 995,
	0, 358, 359, 1068, 1027, 1069, 360, 361, 362, 1070,
	363, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	0, 370, 372, 371, 0, 373, 1063, 1071, 374, 375,
	1072, 0, 376, 377, 378, 1018, 1017, 379, 380, 381,
	382, 0, 383, 384, 386, 388, 385, 387, 392, 389,
	390, 391, 394, 0, 393, 1073, 395, 396, 397, 403,
	404, 400, 401, 402, 405, 399, 1074, 398, 958, 248,
	1075, 406, 980, 1028, 407, 1042, 409, 410, 0, 0,
	411, 0, 0, 0, 413, 414, 415, 0, 0, 416,
	417, 571, 1076, 418, 1077, 1057, 419, 420, 412, 421,
	422, 423, 424, 425, 426, 427, 428, 0, 429, 430,
	573, 574, 1058, 431, 576, 432, 433, 0, 434, 0,
	435, 436, 437, 438, 439, 440, 441, 1038, 443, 442,
	444, 0, 445, 0, 0, 0, 0, 0, 446, 0,
	448, 449, 450, 447, 451, 452, 453, 454, 0, 455,
	456, 457, 1078, 458, 459, 460, 461, 968, 462, 0,
	463, 464, 470, 471, 465, 466, 472, 473, 474, 475,
	476, 0, 478, 479, 477, 480, 481, 482, 1021, 483,
	467, 468, 484, 485, 1079, 486, 487, 488, 489, 490,
	491, 1036, 0, 492, 0, 493, 494, 495, 496, 469,
	497, 502, 1082, 498, 499, 500, 501, 1059, 0, 504,
	505, 956, 503, 0, 506, 507, 508, 509, 510, 511,
	326, 512, 0, 513, 1048, 1049, 1050, 1051, 0, 520,
	0, 514, 515, 1060, 516, 1061, 978, 517, 518, 519,
	0, 4094, 522, 0, 962, 523, 524, 525, 527, 528,
	526, 529, 1022, 530, 0, 0, 531, 532, 533, 588,
	1045, 1081, 0, 535, 534, 591, 0, 0, 0, 0,
	536, 537, 592, 538, 539, 540, 959, 0, 0, 0,
	0, 0, 0, 955, 0, 0, 0, 0, 0, 0,
	953, 954, 1000, 972, 973, 974, 970, 971, 983, 984,
	0, 0, 0, 982, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1024, 988, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 4093, 1037, 0, 265,
	1044, 266, 1043, 0, 1054, 267, 268, 269, 270, 271,
	990, 1023, 957, 272, 1083, 1084, 549, 0, 273, 274,
	1030, 0, 1011, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 295,
	1064, 296, 4095, 1014, 1012, 1013, 1020, 1016, 1015, 1019,
	298, 299, 300, 301, 1047, 302, 1041, 1040, 961, 306,
	303, 304, 0, 307, 305, 0, 308, 309, 310, 0,
	0, 311, 1032, 313, 0, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 967, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 1055, 1056, 979, 246, 0,
	0, 0, 0, 0, 332, 333, 334, 1039, 0, 0,
	0, 335, 0, 336, 0, 0, 1065, 337, 338, 1052,
	1053, 339, 340, 0, 341, 1062, 0, 989, 342, 0,
	343, 344, 345, 346, 347, 1025, 1026, 1029, 408, 1067,
	348, 349, 0, 350, 351, 352, 353, 0, 0, 0,
	247, 354, 355, 357, 0, 1066, 356, 1034, 1035, 0,
	995, 0, 358, 359, 1068, 1027, 1069, 360, 361, 362,
	1070, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 0, 370, 372, 371, 0, 373, 1063, 1071, 374,
	375, 1072, 0, 376, 377, 378, 1018, 1017, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 1073, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 1074, 398, 958,
	248, 1075, 406, 980, 1028, 407, 1042, 409, 410, 0,
	0, 411, 0, 0, 0, 413, 414, 415, 0, 0,
	416, 417, 571, 1076, 418, 1077, 1057, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 0, 429,
	430, 573, 574, 1058, 431, 576, 432, 433, 0, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 1038, 443,
	442, 444, 0, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 0,
	455, 456, 457, 1078, 458, 459, 460, 461, 968, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 0, 478, 479, 477, 480, 481, 482, 1021,
	483, 467, 468, 484, 485, 1079, 486, 487, 488, 489,
	490, 491, 1036, 0, 492, 0, 493, 494, 495, 496,
	469, 497, 502, 1082, 498, 499, 500, 501, 1059, 0,
	504, 505, 956, 503, 0, 506, 507, 508, 509, 510,
	511, 326, 512, 0, 513, 1048, 1049, 1050, 1051, 0,
	520, 0, 514, 515, 1060, 516, 1061, 978, 517, 518,
	519, 0, 4094, 522, 0, 962, 523, 524, 525, 527,
	528, 526, 529, 1022, 530, 0, 0, 531, 532, 533,
	588, 1045, 1081, 0, 535, 534, 591, 0, 0, 0,
	0, 536, 537, 592, 538, 539, 540, 959, 0, 0,
	0, 0, 0, 0, 955, 0, 0, 0, 0, 0,
	0, 953, 954, 1000, 972, 973, 974, 2785, 2786, 983,
	984, 0, 0, 0, 982, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1024, 988, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 542, 1037, 0,
	265, 1044, 266, 1043, 0, 1054, 267, 268, 269, 270,
	271, 990, 1023, 957, 272, 1083, 1084, 549, 0, 273,
	274, 1030, 0, 1011, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	295, 1064, 296, 297, 1014, 1012, 1013, 1020, 1016, 1015,
	1019, 298, 299, 300, 301, 1047, 302, 1041, 1040, 961,
	306, 303, 304, 0, 307, 305, 0, 308, 309, 310,
	0, 0, 311, 1032, 313, 0, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 967, 321, 322, 323, 325,
	327, 324, 328, 329, 330, 331, 1055, 1056, 979, 246,
	0, 0, 0, 0, 0, 332, 333, 334, 1039, 0,
	0, 0, 335, 0, 336, 0, 0, 1065, 337, 338,
	1052, 1053, 339, 340, 0, 341, 1062, 0, 989, 342,
	0, 343, 344, 345, 346, 347, 1025, 1026, 1029, 408,
	1067, 348, 349, 0, 350, 351, 352, 353, 0, 0,
	0, 247, 354, 355, 357, 0, 1066, 356, 1034, 1035,
	0, 995, 0, 358, 359, 1068, 1027, 1069, 360, 361,
	362, 1070, 363, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 0, 370, 372, 371, 0, 373, 1063, 1071,
	374, 375, 1072, 0, 376, 377, 378, 1018, 1017, 379,
	380, 381, 382, 0, 383, 384, 386, 388, 385, 387,
	392, 389, 390, 391, 394, 0, 393, 1073, 395, 396,
	397, 403, 404, 400, 401, 402, 405, 399, 1074, 398,
	958, 248, 1075, 406, 980, 1028, 407, 1042, 409, 410,
	0, 0, 411, 0, 0, 0, 413, 414, 415, 0,
	0, 416, 417, 571, 1076, 418, 1077, 1057, 419, 420,
	412, 421, 422, 423, 424, 425, 426, 427, 428, 0,
	429, 430, 573, 574, 1058, 431, 576, 432, 433, 0,
	434, 0, 435, 436, 437, 438, 439, 440, 441, 1038,
	443, 442, 444, 0, 445, 0, 0, 0, 0, 0,
	446, 0, 448, 449, 450, 447, 451, 452, 453, 454,
	0, 455, 456, 457, 1078, 458, 459, 460, 461, 968,
	462, 0, 463, 464, 470, 471, 465, 466, 472, 473,
	474, 475, 476, 0, 478, 479, 477, 480, 481, 482,
	1021, 483, 467, 468, 484, 485, 1079, 486, 487, 488,
	489, 490, 491, 1036, 0, 492, 0, 493, 494, 495,
	496, 469, 497, 502, 1082, 498, 499, 500, 501, 1059,
	0, 504, 505, 956, 503, 0, 506, 507, 508, 509,
	510, 511, 326, 512, 0, 513, 1048, 1049, 1050, 1051,
	0, 520, 0, 514, 515, 1060, 516, 1061, 978, 517,
	518, 519, 0, 521, 522, 0, 962, 523, 524, 525,
	527, 528, 526, 529, 1022, 530, 0, 0, 531, 532,
	533, 588, 1045, 1081, 0, 535, 534, 591, 0, 0,
	0, 0, 536, 537, 592, 538, 539, 540, 959, 0,
	0, 0, 0, 0, 0, 955, 0, 0, 0, 0,
	0, 0, 953, 954, 1000, 972, 973, 974, 2783, 2784,
	983, 984, 0, 0, 0, 982, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1024, 988, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 542, 1037,
	0, 265, 1044, 266, 1043, 0, 1054, 267, 268, 269,
	270, 271, 990, 1023, 957, 272, 1083, 1084, 549, 0,
	273, 274, 1030, 0, 1011, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 295, 1064, 296, 297, 1014, 1012, 1013, 1020, 1016,
	1015, 1019, 298, 299, 300, 301, 1047, 302, 1041, 1040,
	961, 306, 303, 304, 0, 307, 305, 0, 308, 309,
	310, 0, 0, 311, 1032, 313, 0, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 967, 321, 322, 323,
	325, 327, 324, 328, 329, 330, 331, 1055, 1056, 979,
	246, 0, 0, 0, 0, 0, 332, 333, 334, 1039,
	0, 0, 0, 335, 0, 336, 0, 0, 1065, 337,
	338, 1052, 1053, 339, 340, 0, 341, 1062, 0, 989,
	342, 0, 343, 344, 345, 346, 347, 1025, 1026, 1029,
	408, 1067, 348, 349, 0, 350, 351, 352, 353, 0,
	0, 0, 247, 354, 355, 357, 0, 1066, 356, 1034,
	1035, 0, 995, 0, 358, 359, 1068, 1027, 1069, 360,
	361, 362, 1070, 363, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 0, 370, 372, 371, 0, 373, 1063,
	1071, 374, 375, 1072, 0, 376, 377, 378, 1018, 1017,
	379, 380, 381, 382, 0, 383, 384, 386, 388, 385,
	387, 392, 389, 390, 391, 394, 0, 393, 1073, 395,
	396, 397, 403, 404, 400, 401, 402, 405, 399, 1074,
	398, 958, 248, 1075, 406, 980, 1028, 407, 1042, 409,
	410, 0, 0, 411, 0, 0, 0, 413, 414, 415,
	0, 0, 416, 417, 571, 1076, 418, 1077, 1057, 419,
	420, 412, 421, 422, 423, 424, 425, 426, 427, 428,
	0, 429, 430, 573, 574, 1058, 431, 576, 432, 433,
	0, 434, 0, 435, 436, 437, 438, 439, 440, 441,
	1038, 443, 442, 444, 0, 445, 0, 0, 0, 0,
	0, 446, 0, 448, 449, 450, 447, 451, 452, 453,
	454, 0, 455, 456, 457, 1078, 458, 459, 460, 461,
	968, 462, 0, 463, 464, 470, 471, 465, 466, 472,
	473, 474, 475, 476, 0, 478, 479, 477, 480, 481,
	482, 1021, 483, 467, 468, 484, 485, 1079, 486, 487,
	488, 489, 490, 491, 1036, 0, 492, 0, 493, 494,
	495, 496, 469, 497, 502, 1082, 498, 499, 500, 501,
	1059, 0, 504, 505, 956, 503, 0, 506, 507, 508,
	509, 510, 511, 326, 512, 0, 513, 1048, 1049, 1050,
	1051, 0, 520, 0, 514, 515, 1060, 516, 1061, 978,
	517, 518, 519, 0, 521, 522, 0, 962, 523, 524,
	525, 527, 528, 526, 529, 1022, 530, 0, 0, 531,
	532, 533, 588, 1045, 1081, 0, 535, 534, 591, 0,
	0, 0, 0, 536, 537, 592, 538, 539, 540, 959,
	0, 0, 0, 0, 0, 0, 955, 0, 0, 0,
	0, 0, 0, 953, 954, 1000, 972, 973, 974, 970,
	971, 983, 984, 0, 0, 0, 982, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1024, 988, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 542,
	1037, 0, 265, 1044, 266, 1043, 0, 1054, 267, 268,
	269, 270, 271, 990, 1023, 957, 272, 1083, 1084, 549,
	0, 273, 274, 1030, 0, 1011, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 295, 1064, 296, 297, 1014, 1012, 1013, 1020,
	1016, 1015, 1019, 298, 299, 300, 301, 1047, 302, 1041,
	1040, 961, 306, 303, 304, 0, 307, 305, 0, 308,
	309, 310, 0, 0, 311, 1032, 313, 0, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 967, 321, 322,
	323, 325, 327, 324, 328, 329, 330, 331, 1055, 1056,
	979, 246, 0, 0, 0, 0, 0, 332, 333, 334,
	1039, 0, 0, 0, 335, 0, 336, 0, 0, 1065,
	337, 338, 1052, 1053, 339, 340, 0, 341, 1062, 0,
	989, 342, 0, 343, 344, 345, 346, 347, 1025, 1026,
	1029, 408, 1067, 348, 349, 0, 350, 351, 352, 353,
	0, 0, 0, 247, 354, 355, 357, 0, 1066, 356,
	1034, 1035, 0, 995, 0, 358, 359, 1068, 1027, 1069,
	360, 361, 362, 1070, 363, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 0, 370, 372, 371, 0, 373,
	1063, 1071, 374, 375, 1072, 0, 376, 377, 378, 1018,
	1017, 379, 380, 381, 382, 0, 383, 384, 386, 388,
	385, 387, 392, 389, 390, 391, 394, 0, 393, 1073,
	395, 396, 397, 403, 404, 400, 401, 402, 405, 399,
	1074, 398, 958, 248, 1075, 406, 980, 1028, 407, 1042,
	409, 410, 0, 0, 411, 0, 0, 0, 413, 414,
	415, 0, 0, 416, 417, 571, 1076, 418, 1077, 1057,
	419, 420, 412, 421, 422, 423, 424, 425, 426, 427,
	428, 0, 429, 430, 573, 574, 1058, 431, 576, 432,
	433, 0, 434, 0, 435, 436, 437, 438, 439, 440,
	441, 1038, 443, 442, 444, 0, 445, 0, 0, 0,
	0, 0, 446, 0, 448, 449, 450, 447, 451, 452,
	453, 454, 0, 455, 456, 457, 1078, 458, 459, 460,
	461, 968, 462, 0, 463, 464, 470, 471, 465, 466,
	472, 473, 474, 475, 476, 0, 478, 479, 477, 480,
	481, 482, 1021, 483, 467, 468, 484, 485, 1079, 486,
	487, 488, 489, 490, 491, 1036, 0, 492, 0, 493,
	494, 495, 496, 469, 497, 502, 1082, 498, 499, 500,
	501, 1059, 0, 504, 505, 956, 503, 0, 506, 507,
	508, 509, 510, 511, 326, 512, 0, 513, 1048, 1049,
	1050, 1051, 0, 520, 0, 514, 515, 1060, 516, 1061,
	978, 517, 518, 519, 0, 521, 522, 0, 962, 523,
	524, 525, 527, 528, 526, 529, 1022, 530, 0, 0,
	531, 532, 533, 588, 1045, 1081, 0, 535, 534, 591,
	0, 0, 0, 0, 536, 537, 592, 538, 539, 540,
	959, 0, 0, 0, 0, 0, 0, 955, 0, 0,
	0, 0, 0, 0, 2184, 2185, 1000, 972, 973, 974,
	970, 971, 983, 984, 0, 0, 0, 982, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1024, 988, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	542, 1037, 0, 265, 1044, 266, 1043, 0, 1054, 267,
	268, 269, 270, 271, 990, 1023, 0, 272, 1083, 1084,
	549, 0, 273, 274, 1030, 0, 1011, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 295, 1064, 296, 297, 1014, 1012, 1013,
	1020, 1016, 1015, 1019, 298, 299, 300, 301, 1047, 302,
	1041, 1040, 0, 306, 303, 304, 0, 307, 305, 0,
	308, 309, 310, 0, 0, 311, 1032, 313, 0, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 967, 321,
	322, 323, 325, 327, 324, 328, 329, 330, 331, 1055,
	1056, 979, 246, 0, 0, 0, 0, 0, 332, 333,
	334, 1039, 0, 0, 0, 335, 0, 336, 0, 0,
	1065, 337, 338, 1052, 1053, 339, 340, 0, 341, 1062,
	0, 989, 342, 0, 343, 344, 345, 346, 347, 1025,
	1026, 1029, 408, 1067, 348, 349, 0, 350, 351, 352,
	353, 0, 0, 0, 247, 354, 355, 357, 0, 1066,
	356, 1034, 1035, 0, 995, 0, 358, 359, 1068, 1027,
	1069, 360, 361, 362, 1070, 363, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 0, 370, 372, 371, 0,
	373, 1063, 1071, 374, 375, 1072, 0, 376, 377, 378,
	1018, 1017, 379, 380, 381, 382, 0, 383, 384, 386,
	388, 385, 387, 392, 389, 390, 391, 394, 0, 393,
	1073, 395, 396, 397, 403, 404, 400, 401, 402, 405,
	399, 1074, 398, 0, 248, 1075, 406, 980, 1028, 407,
	1042, 409, 410, 0, 0, 411, 0, 0, 0, 413,
	414, 415, 0, 0, 416, 417, 571, 1076, 418, 1077,
	1057, 419, 420, 412, 421, 422, 423, 424, 425, 426,
	427, 428, 0, 429, 430, 573, 574, 1058, 431, 576,
	432, 433, 0, 434, 0, 435, 436, 437, 438, 439,
	440, 441, 1038, 443, 442, 444, 0, 445, 0, 0,
	0, 0, 0, 446, 0, 448, 449, 450, 447, 451,
	452, 453, 454, 0, 455, 456, 457, 1078, 458, 459,
	460, 461, 968, 462, 0, 463, 464, 470, 471, 465,
	466, 472, 473, 474, 475, 476, 0, 478, 479, 477,
	480, 481, 482, 1021, 483, 467, 468, 484, 485, 1079,
	486, 487, 488, 489, 490, 491, 1036, 0, 492, 0,
	493, 494, 495, 496, 469, 497, 502, 1082, 498, 499,
	500, 501, 1059, 0, 504, 505, 0, 503, 0, 506,
	507, 508, 509, 510, 511, 326, 512, 0, 513, 1048,
	1049, 1050, 1051, 0, 520, 0, 514, 515, 1060, 516,
	1061, 978, 517, 518, 519, 0, 521, 522, 0, 0,
	523, 524, 525, 527, 528, 526, 529, 1022, 530, 0,
	0, 531, 532, 533, 588, 1045, 1081, 0, 535, 534,
	591, 0, 0, 0, 0, 536, 537, 592, 538, 539,
	540, 1000, 972, 973, 974, 970, 971, 983, 2380, 0,
	0, 0, 0, 0, 0, 2378, 2379, 0, 249, 250,
	251, 252, 253, 254, 984, 255, 256, 0, 982, 0,
	0, 0, 1024, 988, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 542, 1037, 0, 265, 1044,
	266, 1043, 0, 1054, 267, 268, 269, 270, 271, 990,
	1023, 0, 272, 1083, 1084, 549, 0, 273, 274, 1030,
	0, 1011, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 295, 1064,
	296, 297, 1014, 1012, 1013, 1020, 1016, 1015, 1019, 298,
	299, 300, 301, 1047, 302, 1041, 1040, 0, 306, 303,
	304, 0, 307, 305, 0, 308, 309, 310, 0, 0,
	311, 1032, 313, 0, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 967, 321, 322, 323, 325, 327, 324,
	328, 329, 330, 331, 1055, 1056, 979, 246, 0, 0,
	0, 0, 0, 332, 333, 334, 1039, 0, 0, 0,
	335, 0, 336, 0, 0, 1065, 337, 338, 1052, 1053,
	339, 340, 0, 341, 1062, 0, 989, 342, 0, 343,
	344, 345, 346, 347, 1025, 1026, 1029, 408, 1067, 348,
	349, 0, 350, 351, 352, 353, 0, 0, 0, 247,
	354, 355, 357, 0, 1066, 356, 1034, 1035, 0, 995,
	0, 358, 359, 1068, 1027, 1069, 360, 361, 362, 1070,
	363, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	0, 370, 372, 371, 0, 373, 1063, 1071, 374, 375,
	1072, 0, 376, 377, 378, 1018, 1017, 379, 380, 381,
	382, 0, 383, 384, 386, 388, 385, 387, 392, 389,
	390, 391, 394, 0, 393, 1073, 395, 396, 397, 403,
	404, 400, 401, 402, 405, 399, 1074, 398, 0, 248,
	1075, 406, 980, 1028, 407, 1042, 409, 410, 0, 0,
	411, 0, 0, 0, 413, 414, 415, 0, 0, 416,
	417, 571, 1076, 418, 1077, 1057, 419, 420, 412, 421,
	422, 423, 424, 425, 426, 427, 428, 0, 429, 430,
	573, 574, 1058, 431, 576, 432, 433, 0, 434, 0,
	435, 436, 437, 438, 439, 440, 441, 1038, 443, 442,
	444, 0, 445, 0, 0, 0, 0, 0, 446, 0,
	448, 449, 450, 447, 451, 452, 453, 454, 0, 455,
	456, 457, 1078, 458, 459, 460, 461, 2778, 2779, 0,
	463, 464, 470, 471, 465, 466, 472, 473, 474, 475,
	476, 0, 478, 479, 477, 480, 481, 482, 1021, 483,
	467, 468, 484, 485, 1079, 486, 487, 488, 489, 490,
	491, 1036, 0, 492, 0, 493, 494, 495, 496, 469,
	497, 502, 1082, 498, 499, 500, 501, 1059, 0, 504,
	505, 0, 503, 0, 506, 507, 508, 509, 510, 511,
	326, 512, 0, 513, 1048, 1049, 1050, 1051, 0, 520,
	0, 514, 515, 1060, 516, 1061, 978, 517, 518, 519,
	0, 521, 522, 0, 0, 523, 524, 525, 527, 528,
	526, 529, 1022, 530, 0, 0, 531, 532, 533, 588,
	1045, 1081, 0, 535, 534, 591, 0, 0, 0, 0,
	536, 537, 592, 538, 539, 540, 1000, 972, 973, 974,
	970, 971, 983, 0, 0, 0, 0, 0, 0, 0,
	1895, 1896, 0, 249, 250, 251, 252, 253, 254, 984,
	255, 256, 0, 982, 0, 0, 0, 1024, 988, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	0, 1037, 0, 265, 1044, 266, 1043, 0, 1054, 267,
	268, 269, 270, 271, 990, 1023, 957, 272, 1083, 1084,
	549, 0, 273, 274, 1030, 0, 1011, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 295, 1064, 296, 4095, 1014, 1012, 1013,
	1020, 1016, 1015, 1019, 298, 299, 300, 301, 1047, 302,
	1041, 1040, 961, 306, 303, 304, 0, 307, 305, 0,
	308, 309, 310, 0, 0, 311, 1032, 313, 0, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 967, 321,
	322, 323, 325, 327, 324, 328, 329, 330, 331, 1055,
	1056, 979, 246, 0, 0, 0, 0, 0, 332, 333,
	334, 1039, 0, 0, 0, 335, 0, 336, 0, 0,
	1065, 337, 338, 1052, 1053, 339, 340, 0, 341, 1062,
	0, 989, 342, 0, 343, 344, 345, 346, 347, 1025,
	1026, 1029, 408, 0, 348, 349, 0, 350, 351, 352,
	353, 0, 0, 0, 247, 354, 355, 357, 0, 1066,
	356, 1034, 1035, 0, 995, 0, 358, 359, 0, 1027,
	0, 360, 361, 362, 1070, 363, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 0, 370, 372, 371, 0,
	373, 1063, 1071, 374, 375, 0, 0, 376, 377, 378,
	1018, 1017, 379, 380, 381, 382, 0, 383, 384, 386,
	388, 385, 387, 392, 389, 390, 391, 394, 0, 393,
	1073, 395, 396, 397, 403, 404, 400, 401, 402, 405,
	399, 1074, 398, 958, 248, 0, 406, 980, 1028, 407,
	1042, 409, 410, 0, 0, 411, 0, 0, 0, 413,
	414, 415, 0, 0, 416, 417, 571, 1076, 418, 1077,
	1057, 419, 420, 412, 421, 422, 423, 424, 425, 426,
	427, 428, 0, 429, 430, 573, 574, 1058, 431, 576,
	432, 433, 0, 434, 0, 435, 436, 437, 438, 439,
	440, 441, 1038, 443, 442, 444, 0, 445, 0, 0,
	0, 0, 0, 446, 0, 448, 449, 450, 447, 451,
	452, 453, 454, 0, 455, 456, 457, 1078, 458, 459,
	460, 461, 968, 462, 0, 463, 464, 470, 471, 465,
	466, 472, 473, 474, 475, 476, 0, 478, 479, 477,
	480, 481, 482, 1021, 483, 467, 468, 484, 485, 0,
	486, 487, 488, 489, 490, 491, 1036, 0, 492, 0,
	493, 494, 495, 496, 469, 497, 502, 1082, 498, 499,
	500, 501, 1059, 0, 504, 505, 956, 503, 0, 506,
	507, 508, 509, 510, 511, 326, 512, 0, 513, 1048,
	1049, 1050, 1051, 0, 520, 0, 514, 515, 1060, 516,
	1061, 978, 517, 518, 519, 0, 4094, 522, 0, 962,
	523, 524, 525, 527, 528, 526, 529, 1022, 530, 0,
	0, 531, 532, 533, 588, 1045, 1081, 0, 535, 534,
	591, 0, 0, 0, 0, 536, 537, 592, 538, 539,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	946, 0, 1121, 0, 0, 953, 954, 0, 0, 0,
	0, 0, 0, 0, 984, 0, 0, 0, 982, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1024, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 543, 0, 265,
	544, 266, 545, 0, 546, 267, 268, 269, 270, 271,
	0, 1023, 0, 272, 547, 548, 549, 0, 273, 274,
	1030, 0, 1011, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 295,
	1064, 296, 297, 1014, 1012, 1013, 1020, 1016, 1015, 1019,
	298, 299, 300, 301, 0, 302, 551, 552, 0, 306,
	303, 304, 0, 307, 305, 0, 308, 309, 310, 0,
	0, 311, 312, 313, 0, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 553, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 1055, 1056, 0, 246, 0,
	0, 0, 0, 0, 332, 333, 334, 556, 0, 0,
	0, 335, 0, 336, 0, 0, 1065, 337, 338, 557,
	558, 339, 340, 0, 341, 1062, 0, 560, 342, 0,
	343, 344, 345, 346, 347, 1025, 1026, 1029, 408, 1067,
	348, 349, 0, 350, 351, 352, 353, 0, 0, 0,
	247, 354, 355, 357, 0, 1066, 356, 564, 565, 0,
	566, 0, 358, 359, 1068, 1027, 1069, 360, 361, 362,
	1070, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 1107, 370, 372, 371, 0, 373, 1063, 1071, 374,
	375, 1072, 0, 376, 377, 378, 1018, 1017, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 1073, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 1074, 398, 0,
	248, 1075, 406, 0, 1028, 407, 570, 409, 410, 0,
	0, 411, 0, 0, 1113, 413, 414, 415, 0, 0,
	416, 417, 571, 1076, 418, 1077, 1057, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 0, 429,
	430, 573, 574, 1058, 431, 576, 432, 433, 0, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 577, 443,
	442, 444, 0, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 0,
	455, 456, 457, 1078, 458, 459, 460, 461, 578, 1115,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 210, 478, 479, 477, 480, 481, 482, 1021,
	483, 467, 468, 484, 485, 1079, 486, 487, 488, 489,
	490, 491, 579, 0, 492, 0, 493, 494, 495, 496,
	469, 497, 502, 580, 498, 499, 500, 501, 1059, 0,
	504, 505, 0, 503, 212, 506, 507, 508, 509, 510,
	511, 326, 512, 0, 513, 582, 583, 584, 585, 0,
	520, 0, 514, 515, 1060, 516, 1061, 0, 517, 518,
	519, 0, 521, 522, 0, 0, 523, 524, 525, 527,
	528, 526, 529, 1022, 530, 0, 0, 531, 532, 533,
	1457, 589, 590, 0, 535, 534, 591, 0, 1121, 0,
	204, 536, 537, 592, 538, 539, 540, 0, 205, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 1111, 1024,
	1784, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 542, 543, 0, 265, 544, 266, 545, 0,
	546, 267, 268, 269, 270, 271, 0, 1023, 0, 272,
	547, 548, 549, 0, 273, 274, 1030, 0, 1011, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 295, 1064, 296, 297, 1014,
	1012, 1013, 1020, 1016, 1015, 1019, 298, 299, 300, 301,
	0, 302, 551, 552, 0, 306, 303, 304, 0, 307,
	305, 0, 308, 309, 310, 0, 0, 311, 312, 313,
	0, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	553, 321, 322, 323, 325, 327, 324, 328, 329, 330,
	331, 1055, 1056, 0, 246, 0, 0, 0, 0, 0,
	332, 333, 334, 556, 0, 0, 0, 335, 0, 336,
	0, 0, 1065, 337, 338, 557, 558, 339, 340, 0,
	341, 1062, 0, 560, 342, 0, 343, 344, 345, 346,
	347, 1025, 1026, 1029, 408, 1067, 348, 349, 0, 350,
	351, 352, 353, 0, 0, 0, 247, 354, 355, 357,
	0, 1066, 356, 564, 565, 0, 566, 0, 358, 359,
	1068, 1027, 1069, 360, 361, 362, 1070, 363, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 1107, 370, 372,
	371, 0, 373, 1063, 1071, 374, 375, 1072, 0, 376,
	377, 378, 1018, 1017, 379, 380, 381, 382, 0, 383,
	384, 386, 388, 385, 387, 392, 389, 390, 391, 394,
	0, 393, 1073, 395, 396, 397, 403, 404, 400, 401,
	402, 405, 399, 1074, 398, 0, 248, 1075, 406, 0,
	1028, 407, 570, 409, 410, 0, 0, 411, 0, 0,
	1113, 413, 414, 415, 0, 0, 416, 417, 571, 1076,
	418, 1077, 1057, 419, 420, 412, 421, 422, 423, 424,
	425, 426, 427, 428, 0, 429, 430, 573, 574, 1058,
	431, 576, 432, 433, 0, 434, 0, 435, 436, 437,
	438, 439, 440, 441, 577, 443, 442, 444, 0, 445,
	0, 0, 0, 0, 0, 446, 0, 448, 449, 450,
	447, 451, 452, 453, 454, 0, 455, 456, 457, 1078,
	458, 459, 460, 461, 578, 1115, 0, 463, 464, 470,
	471, 465, 466, 472, 473, 474, 475, 476, 210, 478,
	479, 477, 480, 481, 482, 1021, 483, 467, 468, 484,
	485, 1079, 486, 487, 488, 489, 490, 491, 579, 0,
	492, 0, 493, 494, 495, 496, 469, 497, 502, 580,
	498, 499, 500, 501, 1059, 0, 504, 505, 0, 503,
	212, 506, 507, 508, 509, 510, 511, 326, 512, 0,
	513, 582, 583, 584, 585, 0, 520, 0, 514, 515,
	1060, 516, 1061, 0, 517, 518, 519, 0, 521, 522,
	0, 0, 523, 524, 525, 527, 528, 526, 529, 1022,
	530, 0, 0, 531, 532, 533, 1457, 589, 590, 0,
	535, 534, 591, 0, 0, 0, 204, 536, 537, 592,
	538, 539, 540, 0, 205, 0, 0, 0, 2938, 0,
	1121, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1111, 0, 1784, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1024, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 542, 543, 0, 265, 544, 266,
	545, 0, 546, 267, 268, 269, 270, 271, 0, 1023,
	0, 272, 547, 548, 549, 0, 273, 274, 1030, 0,
	1011, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 295, 1064, 296,
	297, 1014, 1012, 1013, 1020, 1016, 1015, 1019, 298, 299,
	300, 301, 0, 302, 551, 552, 0, 306, 303, 304,
	0, 307, 305, 0, 308, 309, 310, 0, 0, 311,
	312, 313, 0, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 553, 321, 322, 323, 325, 327, 324, 328,
	329, 330, 331, 1055, 1056, 0, 246, 0, 0, 0,
	0, 0, 332, 333, 334, 556, 0, 0, 0, 335,
	0, 336, 0, 0, 1065, 337, 338, 557, 558, 339,
	340, 0, 341, 1062, 0, 560, 342, 0, 343, 344,
	345, 346, 347, 1025, 1026, 1029, 408, 1067, 348, 349,
	0, 350, 351, 352, 353, 0, 0, 0, 247, 354,
	355, 357, 0, 1066, 356, 564, 565, 0, 566, 0,
	358, 359, 1068, 1027, 1069, 360, 361, 362, 1070, 363,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 1107,
	370, 372, 371, 0, 373, 1063, 1071, 374, 375, 1072,
	0, 376, 377, 378, 1018, 1017, 379, 380, 381, 382,
	0, 383, 384, 386, 388, 385, 387, 392, 389, 390,
	391, 394, 0, 393, 1073, 395, 396, 397, 403, 404,
	400, 401, 402, 405, 399, 1074, 398, 0, 248, 1075,
	406, 0, 1028, 407, 570, 409, 410, 0, 0, 411,
	0, 0, 1113, 413, 414, 415, 0, 0, 416, 417,
	571, 1076, 418, 1077, 1057, 419, 420, 412, 421, 422,
	423, 424, 425, 426, 427, 428, 0, 429, 430, 573,
	574, 1058, 431, 576, 432, 433, 0, 434, 0, 435,
	436, 437, 438, 439, 440, 441, 577, 443, 442, 444,
	0, 445, 0, 0, 0, 0, 0, 446, 0, 448,
	449, 450, 447, 451, 452, 453, 454, 0, 455, 456,
	457, 1078, 458, 459, 460, 461, 578, 1115, 0, 463,
	464, 470, 471, 465, 466, 472, 473, 474, 475, 476,
	0, 478, 479, 477, 480, 481, 482, 1021, 483, 467,
	468, 484, 485, 1079, 486, 487, 488, 489, 490, 491,
	579, 0, 492, 0, 493, 494, 495, 496, 469, 497,
	502, 580, 498, 499, 500, 501, 1059, 0, 504, 505,
	0, 503, 0, 506, 507, 508, 509, 510, 511, 326,
	512, 0, 513, 582, 583, 584, 585, 0, 520, 0,
	514, 515, 1060, 516, 1061, 0, 517, 518, 519, 0,
	521, 522, 0, 0, 523, 524, 525, 527, 528, 526,
	529, 1022, 530, 0, 0, 531, 532, 533, 588, 589,
	590, 0, 535, 534, 591, 0, 1103, 0, 1121, 536,
	537, 592, 538, 539, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 1111, 0, 1109, 1024,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 542, 543, 0, 265, 544, 266, 545, 0,
	546, 267, 268, 269, 270, 271, 0, 1023, 0, 272,
	547, 548, 549, 0, 273, 274, 1030, 0, 1011, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 295, 1064, 296, 297, 1014,
	1012, 1013, 1020, 1016, 1015, 1019, 298, 299, 300, 301,
	0, 302, 551, 552, 0, 306, 303, 304, 0, 307,
	305, 0, 308, 309, 310, 0, 0, 311, 312, 313,
	0, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	553, 321, 322, 323, 325, 327, 324, 328, 329, 330,
	331, 1055, 1056, 0, 246, 0, 0, 0, 0, 0,
	332, 333, 334, 556, 0, 0, 0, 335, 0, 336,
	0, 0, 1065, 337, 338, 557, 558, 339, 340, 0,
	341, 1062, 0, 560, 342, 0, 343, 344, 345, 346,
	347, 1025, 1026, 1029, 408, 1067, 348, 349, 0, 350,
	351, 352, 353, 0, 0, 0, 247, 354, 355, 357,
	0, 1066, 356, 564, 565, 0, 566, 0, 358, 359,
	1068, 1027, 1069, 360, 361, 362, 1070, 363, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 1107, 370, 372,
	371, 0, 373, 1063, 1071, 374, 375, 1072, 0, 376,
	377, 378, 1018, 1017, 379, 380, 381, 382, 0, 383,
	384, 386, 388, 385, 387, 392, 389, 390, 391, 394,
	0, 393, 1073, 395, 396, 397, 403, 404, 400, 401,
	402, 405, 399, 1074, 398, 0, 248, 1075, 406, 0,
	1028, 407, 570, 409, 410, 0, 0, 411, 0, 0,
	1113, 413, 414, 415, 0, 0, 416, 417, 571, 1076,
	418, 1077, 1057, 419, 420, 412, 421, 422, 423, 424,
	425, 426, 427, 428, 0, 429, 430, 573, 574, 1058,
	431, 576, 432, 433, 0, 434, 0, 435, 436, 437,
	438, 439, 440, 441, 577, 443, 442, 444, 0, 445,
	0, 0, 0, 0, 0, 446, 0, 448, 449, 450,
	447, 451, 452, 453, 454, 0, 455, 456, 457, 1078,
	458, 459, 460, 461, 578, 1115, 0, 463, 464, 470,
	471, 465, 466, 472, 473, 474, 475, 476, 0, 478,
	479, 477, 480, 481, 482, 1021, 483, 467, 468, 484,
	485, 1079, 486, 487, 488, 489, 490, 491, 579, 0,
	492, 0, 493, 494, 495, 496, 469, 497, 502, 580,
	498, 499, 500, 501, 1059, 0, 504, 505, 0, 503,
	0, 506, 507, 508, 509, 510, 511, 326, 512, 0,
	513, 582, 583, 584, 585, 0, 520, 0, 514, 515,
	1060, 516, 1061, 0, 517, 518, 519, 0, 521, 522,
	0, 0, 523, 524, 525, 527, 528, 526, 529, 1022,
	530, 0, 0, 531, 532, 533, 588, 589, 590, 0,
	535, 534, 591, 0, 1121, 0, 0, 536, 537, 592,
	538, 539, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 1111, 1024, 1109, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 542, 543,
	0, 265, 544, 266, 545, 0, 546, 267, 268, 269,
	270, 271, 0, 1023, 0, 272, 547, 548, 549, 0,
	273, 274, 1030, 0, 1011, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 295, 1064, 296, 297, 1014, 1012, 1013, 1020, 1016,
	1015, 1019, 298, 299, 300, 301, 0, 302, 551, 552,
	0, 306, 303, 304, 0, 307, 305, 0, 308, 309,
	310, 0, 0, 311, 312, 313, 0, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 553, 321, 322, 323,
	325, 327, 324, 328, 329, 330, 331, 1055, 1056, 0,
	246, 0, 0, 0, 0, 0, 332, 333, 334, 556,
	0, 0, 0, 335, 0, 336, 0, 0, 1065, 337,
	338, 557, 558, 339, 340, 0, 341, 1062, 0, 560,
	342, 0, 343, 344, 345, 346, 347, 1025, 1026, 1029,
	408, 1067, 348, 349, 0, 350, 351, 352, 353, 0,
	0, 0, 247, 354, 355, 357, 0, 1066, 356, 564,
	565, 0, 566, 0, 358, 359, 1068, 1027, 1069, 360,
	361, 362, 1070, 363, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 1107, 370, 372, 371, 0, 373, 1063,
	1071, 374, 375, 1072, 0, 376, 377, 378, 1018, 1017,
	379, 380, 381, 382, 0, 383, 384, 386, 388, 385,
	387, 392, 389, 390, 391, 394, 0, 393, 1073, 395,
	396, 397, 403, 404, 400, 401, 402, 405, 399, 1074,
	398, 0, 248, 1075, 406, 0, 1028, 407, 570, 409,
	410, 0, 0, 411, 0, 0, 1113, 413, 414, 415,
	0, 0, 416, 417, 571, 1076, 418, 1077, 1057, 419,
	420, 412, 421, 422, 423, 424, 425, 426, 427, 428,
	0, 429, 430, 573, 574, 1058, 431, 576, 432, 433,
	0, 434, 0, 435, 436, 437, 438, 439, 440, 441,
	577, 443, 442, 444, 0, 445, 0, 0, 0, 0,
	0, 446, 0, 448, 449, 450, 447, 451, 452, 453,
	454, 0, 455, 456, 457, 1078, 458, 459, 460, 461,
	578, 1115, 0, 463, 464, 470, 471, 465, 466, 472,
	473, 474, 475, 476, 0, 478, 479, 477, 480, 481,
	482, 1021, 483, 467, 468, 484, 485, 1079, 486, 487,
	488, 489, 490, 491, 579, 0, 492, 0, 493, 494,
	495, 496, 469, 497, 502, 580, 498, 499, 500, 501,
	1059, 0, 504, 505, 0, 503, 0, 506, 507, 508,
	509, 510, 511, 326, 512, 0, 513, 582, 583, 584,
	585, 0, 520, 0, 514, 515, 1060, 516, 1061, 0,
	517, 518, 519, 0, 521, 522, 0, 0, 523, 524,
	525, 527, 528, 526, 529, 1022, 530, 0, 0, 531,
	532, 533, 588, 589, 590, 0, 535, 534, 591, 0,
	1121, 0, 0, 536, 537, 592, 538, 539, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	1111, 1024, 1109, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 542, 543, 0, 265, 544, 266,
	545, 0, 546, 267, 268, 269, 270, 271, 0, 1023,
	0, 272, 547, 548, 549, 0, 273, 274, 1030, 0,
	1011, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 295, 1064, 296,
	297, 1014, 1012, 1013, 1020, 1016, 1015, 1019, 298, 299,
	300, 301, 0, 302, 551, 552, 0, 306, 303, 304,
	0, 307, 305, 0, 308, 309, 310, 0, 0, 311,
	312, 313, 0, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 553, 321, 322, 323, 325, 327, 324, 328,
	329, 330, 331, 1055, 1056, 0, 246, 0, 0, 0,
	0, 0, 332, 333, 334, 556, 0, 0, 0, 335,
	0, 336, 0, 0, 1065, 337, 338, 557, 558, 339,
	340, 0, 341, 1062, 0, 560, 342, 0, 343, 344,
	345, 346, 347, 1025, 1026, 1029, 408, 1067, 348, 349,
	0, 350, 351, 352, 353, 0, 0, 0, 247, 354,
	355, 357, 0, 1066, 356, 564, 565, 0, 566, 0,
	358, 359, 1068, 1027, 1069, 360, 361, 362, 1070, 363,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 0,
	370, 372, 371, 0, 373, 1063, 1071, 374, 375, 1072,
	0, 376, 377, 378, 1018, 1017, 379, 380, 381, 382,
	0, 383, 384, 386, 388, 385, 387, 392, 389, 390,
	391, 394, 0, 393, 1073, 395, 396, 397, 403, 404,
	400, 401, 402, 405, 399, 1074, 398, 0, 248, 1075,
	406, 0, 1028, 407, 570, 409, 410, 0, 0, 411,
	0, 0, 0, 413, 414, 415, 0, 0, 416, 417,
	571, 1076, 418, 1077, 1057, 419, 420, 412, 421, 422,
	423, 424, 425, 426, 427, 428, 0, 429, 430, 573,
	574, 1058, 431, 576, 432, 433, 0, 434, 0, 435,
	436, 437, 438, 439, 440, 441, 577, 443, 442, 444,
	0, 445, 0, 0, 0, 0, 0, 446, 0, 448,
	449, 450, 447, 451, 452, 453, 454, 0, 455, 456,
	457, 1078, 458, 459, 460, 461, 578, 1115, 0, 463,
	464, 470, 471, 465, 466, 472, 473, 474, 475, 476,
	0, 478, 479, 477, 480, 481, 482, 1021, 483, 467,
	468, 484, 485, 1079, 486, 487, 488, 489, 490, 491,
	579, 0, 492, 0, 493, 494, 495, 496, 469, 497,
	502, 580, 498, 499, 500, 501, 1059, 0, 504, 505,
	0, 503, 0, 506, 507, 508, 509, 510, 511, 326,
	512, 0, 513, 582, 583, 584, 585, 0, 520, 0,
	514, 515, 1060, 516, 1061, 0, 517, 518, 519, 0,
	521, 522, 0, 0, 523, 524, 525, 527, 528, 526,
	529, 1022, 530, 0, 0, 531, 532, 533, 588, 589,
	590, 0, 535, 534, 591, 0, 946, 0, 1306, 536,
	537, 592, 538, 539, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 1683, 541,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 542, 543, 0, 265, 544, 266, 545, 0,
	546, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	547, 548, 549, 0, 273, 274, 550, 0, 1272, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 295, 1064, 296, 297, 0,
	0, 0, 0, 0, 0, 0, 298, 299, 300, 301,
	0, 302, 551, 552, 0, 306, 303, 304, 0, 307,
	305, 0, 308, 309, 310, 0, 0, 311, 312, 313,
	0, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	553, 321, 322, 323, 325, 327, 324, 328, 329, 330,
	331, 554, 555, 0, 246, 0, 0, 0, 0, 0,
	332, 333, 334, 556, 0, 0, 0, 335, 0, 336,
	0, 0, 1065, 337, 338, 557, 558, 339, 340, 0,
	341, 559, 0, 560, 342, 0, 343, 344, 345, 346,
	347, 561, 562, 563, 408, 1067, 348, 349, 0, 350,
	351, 352, 353, 0, 0, 0, 0, 354, 355, 357,
	0, 1066, 356, 564, 565, 0, 566, 0, 358, 359,
	1068, 567, 1069, 360, 361, 362, 1070, 363, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 0, 370, 372,
	371, 0, 373, 568, 1071, 374, 375, 1072, 0, 376,
	377, 378, 0, 0, 379, 380, 381, 382, 0, 383,
	384, 386, 388, 385, 387, 392, 389, 390, 391, 394,
	0, 393, 1073, 395, 396, 397, 403, 404, 400, 401,
	402, 405, 399, 1074, 398, 0, 0, 1075, 406, 0,
	569, 407, 570, 409, 410, 0, 0, 411, 0, 0,
	0, 413, 414, 415, 0, 0, 416, 417, 571, 1076,
	418, 1077, 572, 419, 420, 412, 421, 422, 423, 424,
	425, 426, 427, 428, 0, 429, 430, 573, 574, 575,
	431, 576, 432, 433, 0, 434, 0, 435, 436, 437,
	438, 439, 440, 441, 577, 443, 442, 444, 0, 445,
	0, 0, 0, 0, 0, 446, 0, 448, 449, 450,
	447, 451, 452, 453, 454, 0, 455, 456, 457, 1078,
	458, 459, 460, 461, 578, 462, 0, 463, 464, 470,
	471, 465, 466, 472, 473, 474, 475, 476, 210, 478,
	479, 477, 480, 481, 482, 0, 483, 467, 468, 484,
	485, 1079, 486, 487, 488, 489, 490, 491, 579, 0,
	492, 0, 493, 494, 495, 496, 469, 497, 502, 580,
	498, 499, 500, 501, 581, 0, 504, 505, 0, 503,
	212, 506, 507, 508, 509, 510, 511, 326, 512, 0,
	513, 582, 583, 584, 585, 0, 520, 0, 514, 515,
	586, 516, 587, 0, 517, 518, 519, 0, 521, 522,
	0, 0, 523, 524, 525, 527, 528, 526, 529, 0,
	530, 0, 0, 531, 532, 533, 1457, 589, 590, 0,
	535, 534, 591, 0, 0, 0, 204, 536, 537, 592,
	538, 539, 540, 0, 205, 0, 0, 0, 1454, 0,
	1306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 174, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 542, 543, 0, 265, 544, 266,
	545, 0, 546, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 547, 548, 549, 0, 273, 274, 550, 0,
	1272, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 295, 1064, 296,
	297, 0, 0, 0, 0, 0, 0, 0, 298, 299,
	300, 301, 0, 302, 551, 552, 0, 306, 303, 304,
	0, 307, 305, 0, 308, 309, 310, 0, 0, 311,
	312, 313, 0, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 553, 321, 322, 323, 325, 327, 324, 328,
	329, 330, 331, 554, 555, 0, 246, 0, 0, 0,
	0, 0, 332, 333, 334, 556, 0, 0, 0, 335,
	0, 336, 0, 0, 1065, 337, 338, 557, 558, 339,
	340, 0, 341, 559, 0, 560, 342, 0, 343, 344,
	345, 346, 347, 561, 562, 563, 408, 1067, 348, 349,
	0, 350, 351, 352, 353, 0, 0, 0, 0, 354,
	355, 357, 0, 1066, 356, 564, 565, 0, 566, 0,
	358, 359, 1068, 567, 1069, 360, 361, 362, 1070, 363,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 0,
	370, 372, 371, 0, 373, 568, 1071, 374, 375, 1072,
	0, 376, 377, 378, 0, 0, 379, 380, 381, 382,
	0, 383, 384, 386, 388, 385, 387, 392, 389, 390,
	391, 394, 0, 393, 1073, 395, 396, 397, 403, 404,
	400, 401, 402, 405, 399, 1074, 398, 0, 0, 1075,
	406, 0, 569, 407, 570, 409, 410, 0, 0, 411,
	0, 0, 0, 413, 414, 415, 0, 0, 416, 417,
	571, 1076, 418, 1077, 572, 419, 420, 412, 421, 422,
	423, 424, 425, 426, 427, 428, 0, 429, 430, 573,
	574, 575, 431, 576, 432, 433, 0, 434, 0, 435,
	436, 437, 438, 439, 440, 441, 577, 443, 442, 444,
	0, 445, 0, 0, 0, 0, 0, 446, 0, 448,
	449, 450, 447, 451, 452, 453, 454, 0, 455, 456,
	457, 1078, 458, 459, 460, 461, 578, 462, 0, 463,
	464, 470, 471, 465, 466, 472, 473, 474, 475, 476,
	210, 478, 479, 477, 480, 481, 482, 0, 483, 467,
	468, 484, 485, 1079, 486, 487, 488, 489, 490, 491,
	579, 0, 492, 0, 493, 494, 495, 496, 469, 497,
	502, 580, 498, 499, 500, 501, 581, 0, 504, 505,
	0, 503, 212, 506, 507, 508, 509, 510, 511, 326,
	512, 0, 513, 582, 583, 584, 585, 0, 520, 0,
	514, 515, 586, 516, 587, 0, 517, 518, 519, 0,
	521, 522, 0, 0, 523, 524, 525, 527, 528, 526,
	529, 0, 530, 0, 0, 531, 532, 533, 1457, 589,
	590, 0, 535, 534, 591, 0, 0, 0, 204, 536,
	537, 592, 538, 539, 540, 0, 205, 0, 0, 0,
	0, 0, 1306, 1305, 0, 0, 0, 0, 1303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 174, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 543, 0, 265,
	544, 266, 545, 0, 546, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 547, 548, 549, 0, 273, 274,
	550, 0, 1272, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 295,
	1064, 296, 297, 0, 0, 0, 0, 0, 0, 0,
	298, 299, 300, 301, 0, 302, 551, 552, 0, 306,
	303, 304, 0, 307, 305, 0, 308, 309, 310, 0,
	0, 311, 312, 313, 0, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 553, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 554, 555, 0, 246, 0,
	0, 0, 0, 0, 332, 333, 334, 556, 0, 0,
	0, 335, 0, 336, 0, 0, 1065, 337, 338, 557,
	558, 339, 340, 0, 341, 559, 0, 560, 342, 0,
	343, 344, 345, 346, 347, 561, 562, 563, 408, 1067,
	348, 349, 0, 350, 351, 352, 353, 0, 0, 0,
	0, 354, 355, 357, 0, 1066, 356, 564, 565, 0,
	566, 0, 358, 359, 1068, 567, 1069, 360, 361, 362,
	1070, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 0, 370, 372, 371, 0, 373, 568, 1071, 374,
	375, 1072, 0, 376, 377, 378, 0, 0, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 1073, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 1074, 398, 0,
	0, 1075, 406, 0, 569, 407, 570, 409, 410, 0,
	0, 411, 0, 0, 0, 413, 414, 415, 0, 0,
	416, 417, 571, 1076, 418, 1077, 572, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 0, 429,
	430, 573, 574, 575, 431, 576, 432, 433, 0, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 577, 443,
	442, 444, 0, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 0,
	455, 456, 457, 1078, 458, 459, 460, 461, 578, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 0, 478, 479, 477, 480, 481, 482, 0,
	483, 467, 468, 484, 485, 1079, 486, 487, 488, 489,
	490, 491, 579, 0, 492, 0, 493, 494, 495, 496,
	469, 497, 502, 580, 498, 499, 500, 501, 581, 0,
	504, 505, 0, 503, 0, 506, 507, 508, 509, 510,
	511, 326, 512, 0, 513, 582, 583, 584, 585, 0,
	520, 0, 514, 515, 586, 516, 587, 0, 517, 518,
	519, 0, 521, 522, 0, 0, 523, 524, 525, 527,
	528, 526, 529, 0, 530, 0, 0, 531, 532, 533,
	588, 589, 590, 0, 535, 534, 591, 0, 0, 0,
	0, 536, 537, 592, 538, 539, 540, 1306, 1305, 0,
	0, 0, 0, 1303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	1479, 255, 256, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 542, 543, 0, 265, 544, 266, 545, 0, 546,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 547,
	548, 549, 0, 273, 274, 550, 0, 1272, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 295, 1064, 296, 297, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 300, 301, 0,
	302, 551, 552, 0, 306, 303, 304, 0, 307, 305,
	0, 308, 309, 310, 0, 0, 311, 312, 313, 0,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 553,
	321, 322, 323, 325, 327, 324, 328, 329, 330, 331,
	554, 555, 0, 246, 0, 0, 0, 0, 0, 332,
	333, 334, 556, 0, 0, 0, 335, 0, 336, 0,
	0, 1065, 337, 338, 557, 558, 339, 340, 0, 341,
	559, 0, 560, 342, 0, 343, 344, 345, 346, 347,
	561, 562, 563, 408, 1067, 348, 349, 0, 350, 351,
	352, 353, 0, 0, 0, 0, 354, 355, 357, 0,
	1066, 356, 564, 565, 0, 566, 0, 358, 359, 1068,
	567, 1069, 360, 361, 362, 1070, 363, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 0, 370, 372, 371,
	0, 373, 568, 1071, 374, 375, 1072, 0, 376, 377,
	378, 0, 0, 379, 380, 381, 382, 0, 383, 384,
	386, 388, 385, 387, 392, 389, 390, 391, 394, 0,
	393, 1073, 395, 396, 397, 403, 404, 400, 401, 402,
	405, 399, 1074, 398, 0, 0, 1075, 406, 0, 569,
	407, 570, 409, 410, 0, 0, 411, 0, 0, 0,
	413, 414, 415, 0, 0, 416, 417, 571, 1076, 418,
	1077, 572, 419, 420, 412, 421, 422, 423, 424, 425,
	426, 427, 428, 0, 429, 430, 573, 574, 575, 431,
	576, 432, 433, 0, 434, 0, 435, 436, 437, 438,
	439, 440, 441, 577, 443, 442, 444, 0, 445, 0,
	0, 0, 0, 0, 446, 0, 448, 449, 450, 447,
	451, 452, 453, 454, 0, 455, 456, 457, 1078, 458,
	459, 460, 461, 578, 462, 0, 463, 464, 470, 471,
	465, 466, 472, 473, 474, 475, 476, 0, 478, 479,
	477, 480, 481, 482, 0, 483, 467, 468, 484, 485,
	1079, 486, 487, 488, 489, 490, 491, 579, 0, 492,
	0, 493, 494, 495, 496, 469, 497, 502, 580, 498,
	499, 500, 501, 581, 0, 504, 505, 0, 503, 0,
	506, 507, 508, 509, 510, 511, 326, 512, 0, 513,
	582, 583, 584, 585, 0, 520, 0, 514, 515, 586,
	516, 587, 0, 517, 518, 519, 0, 521, 522, 0,
	0, 523, 524, 525, 527, 528, 526, 529, 0, 530,
	0, 0, 531, 532, 533, 588, 589, 590, 0, 535,
	534, 591, 0, 0, 0, 0, 536, 537, 592, 538,
	539, 540, 1306, 1978, 0, 0, 0, 0, 1979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 3188, 255, 256, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 543, 0, 265,
	544, 266, 545, 0, 546, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 547, 548, 549, 0, 273, 274,
	550, 0, 1272, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 295,
	1064, 296, 297, 0, 0, 0, 0, 0, 0, 0,
	298, 299, 300, 301, 0, 302, 551, 552, 0, 306,
	303, 304, 0, 307, 305, 0, 308, 309, 310, 0,
	0, 311, 312, 313, 0, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 553, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 554, 555, 0, 246, 0,
	0, 0, 0, 0, 332, 333, 334, 556, 0, 0,
	0, 335, 0, 336, 0, 0, 1065, 337, 338, 557,
	558, 339, 340, 0, 341, 559, 0, 560, 342, 0,
	343, 344, 345, 346, 347, 561, 562, 563, 408, 1067,
	348, 349, 0, 350, 351, 352, 353, 0, 0, 0,
	0, 354, 355, 357, 0, 1066, 356, 564, 565, 0,
	566, 0, 358, 359, 1068, 567, 1069, 360, 361, 362,
	1070, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 0, 1977, 372, 371, 0, 373, 568, 1071, 374,
	375, 1072, 0, 376, 377, 378, 0, 0, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 1073, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 1074, 398, 0,
	0, 1075, 406, 0, 569, 407, 570, 409, 410, 0,
	0, 411, 0, 0, 0, 413, 414, 415, 0, 0,
	416, 417, 571, 1076, 418, 1077, 572, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 0, 429,
	430, 573, 574, 575, 431, 576, 432, 433, 0, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 577, 443,
	442, 444, 0, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 0,
	455, 456, 457, 1078, 458, 459, 460, 461, 578, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 0, 478, 479, 477, 480, 481, 482, 0,
	483, 467, 468, 484, 485, 1079, 486, 487, 488, 489,
	490, 491, 579, 0, 492, 0, 493, 494, 495, 496,
	469, 497, 502, 580, 498, 499, 500, 501, 581, 0,
	504, 505, 0, 503, 0, 506, 507, 508, 509, 510,
	511, 326, 512, 0, 513, 582, 583, 584, 585, 0,
	520, 0, 514, 515, 586, 516, 587, 0, 517, 518,
	519, 0, 521, 522, 0, 0, 523, 524, 525, 527,
	528, 526, 529, 0, 530, 0, 0, 531, 532, 533,
	588, 589, 590, 0, 535, 534, 591, 0, 0, 0,
	0, 536, 537, 592, 538, 539, 540, 1306, 1305, 0,
	0, 0, 0, 1303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	1479, 255, 256, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 542, 543, 0, 265, 544, 266, 545, 0, 546,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 547,
	548, 549, 0, 273, 274, 550, 0, 1272, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 295, 1064, 296, 297, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 300, 301, 0,
	302, 551, 552, 0, 306, 303, 304, 0, 307, 305,
	0, 308, 309, 310, 0, 0, 311, 312, 313, 0,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 553,
	321, 322, 323, 325, 327, 324, 328, 329, 330, 331,
	554, 555, 0, 246, 0, 0, 0, 0, 0, 332,
	333, 334, 556, 0, 0, 0, 335, 0, 336, 0,
	0, 1065, 337, 338, 557, 558, 339, 340, 0, 341,
	559, 0, 560, 342, 0, 343, 344, 345, 346, 347,
	561, 562, 563, 408, 1067, 348, 349, 0, 350, 351,
	352, 353, 0, 0, 0, 0, 354, 355, 357, 0,
	1066, 356, 564, 565, 0, 566, 0, 358, 359, 1068,
	567, 1069, 360, 361, 362, 1070, 363, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 0, 370, 372, 371,
	0, 373, 568, 1071, 374, 375, 1072, 0, 376, 377,
	378, 0, 0, 379, 380, 381, 382, 0, 383, 384,
	386, 388, 385, 387, 392, 389, 390, 391, 394, 0,
	393, 1073, 395, 396, 397, 403, 404, 400, 401, 402,
	405, 399, 1074, 398, 0, 0, 1075, 406, 0, 569,
	407, 570, 409, 410, 0, 0, 411, 0, 0, 0,
	413, 414, 415, 0, 0, 416, 417, 571, 1076, 418,
	1077, 572, 419, 420, 412, 421, 422, 423, 424, 425,
	426, 427, 428, 0, 429, 430, 573, 574, 575, 431,
	576, 432, 433, 0, 434, 0, 435, 436, 437, 438,
	439, 440, 441, 577, 443, 442, 444, 0, 445, 0,
	0, 0, 0, 0, 446, 0, 448, 449, 450, 447,
	451, 452, 453, 454, 0, 455, 456, 457, 1078, 458,
	459, 460, 461, 578, 462, 0, 463, 464, 470, 471,
	465, 466, 472, 473, 474, 475, 476, 0, 478, 479,
	477, 480, 481, 482, 0, 483, 467, 468, 484, 485,
	1079, 486, 487, 488, 489, 490, 491, 579, 0, 492,
	0, 493, 494, 495, 496, 469, 497, 502, 580, 498,
	499, 500, 501, 581, 0, 504, 505, 0, 503, 0,
	506, 507, 508, 509, 510, 511, 326, 512, 0, 513,
	582, 583, 584, 585, 0, 520, 0, 514, 515, 586,
	516, 587, 0, 517, 518, 519, 0, 521, 522, 0,
	0, 523, 524, 525, 527, 528, 526, 529, 0, 530,
	0, 0, 531, 532, 533, 588, 589, 590, 0, 535,
	534, 591, 1121, 0, 0, 0, 536, 537, 592, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1024, 0, 1463, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 543, 0, 265,
	544, 266, 545, 0, 546, 267, 268, 269, 270, 271,
	0, 1023, 0, 272, 547, 548, 549, 0, 273, 274,
	1030, 0, 1011, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 295,
	1064, 296, 297, 1014, 1012, 1013, 1020, 1016, 1015, 1019,
	298, 299, 300, 301, 0, 302, 551, 552, 0, 306,
	303, 304, 0, 307, 305, 0, 308, 309, 310, 0,
	0, 311, 312, 313, 0, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 553, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 1055, 1056, 0, 246, 0,
	0, 0, 0, 0, 332, 333, 334, 556, 0, 0,
	0, 335, 0, 336, 0, 0, 1065, 337, 338, 557,
	558, 339, 340, 0, 341, 1062, 0, 560, 342, 0,
	343, 344, 345, 346, 347, 1025, 1026, 1029, 408, 1067,
	348, 349, 0, 350, 351, 352, 353, 0, 0, 0,
	247, 354, 355, 357, 0, 1066, 356, 564, 565, 0,
	566, 0, 358, 359, 1068, 1027, 1069, 360, 361, 362,
	1070, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 0, 370, 372, 371, 0, 373, 1063, 1071, 374,
	375, 1072, 0, 376, 377, 378, 1018, 1017, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 1073, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 1074, 398, 0,
	248, 1075, 406, 0, 1028, 407, 570, 409, 410, 0,
	0, 411, 0, 0, 0, 413, 414, 415, 0, 0,
	416, 417, 571, 1076, 418, 1077, 1057, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 0, 429,
	430, 573, 574, 1058, 431, 576, 432, 433, 0, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 577, 443,
	442, 444, 0, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 0,
	455, 456, 457, 1078, 458, 459, 460, 461, 578, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 0, 478, 479, 477, 480, 481, 482, 1021,
	483, 467, 468, 484, 485, 1079, 486, 487, 488, 489,
	490, 491, 579, 0, 492, 0, 493, 494, 495, 496,
	469, 497, 502, 580, 498, 499, 500, 501, 1059, 0,
	504, 505, 0, 503, 0, 506, 507, 508, 509, 510,
	511, 326, 512, 0, 513, 582, 583, 584, 585, 0,
	520, 0, 514, 515, 1060, 516, 1061, 0, 517, 518,
	519, 0, 521, 522, 0, 0, 523, 524, 525, 527,
	528, 526, 529, 1022, 530, 0, 0, 531, 532, 533,
	588, 589, 590, 0, 535, 534, 591, 946, 0, 243,
	0, 536, 537, 592, 538, 539, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 542, 543, 0, 265, 544, 266, 545,
	0, 546, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 547, 548, 549, 0, 273, 274, 550, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 300,
	301, 0, 302, 551, 552, 0, 306, 303, 304, 0,
	307, 305, 0, 308, 309, 310, 0, 0, 311, 312,
	313, 0, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 553, 321, 322, 323, 325, 327, 324, 328, 329,
	330, 331, 554, 555, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 556, 0, 0, 0, 335, 0,
	336, 0, 0, 0, 337, 338, 557, 558, 339, 340,
	0, 341, 559, 0, 560, 342, 0, 343, 344, 345,
	346, 347, 561, 562, 563, 408, 0, 348, 349, 0,
	350, 351, 352, 353, 0, 0, 0, 0, 354, 355,
	357, 0, 0, 356, 564, 565, 0, 566, 0, 358,
	359, 0, 567, 0, 360, 361, 362, 0, 363, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 0, 370,
	372, 371, 0, 373, 568, 0, 374, 375, 0, 0,
	376, 377, 378, 0, 0, 379, 380, 381, 382, 0,
	383, 384, 386, 388, 385, 387, 392, 389, 390, 391,
	394, 0, 393, 0, 395, 396, 397, 403, 404, 400,
	401, 402, 405, 399, 0, 398, 0, 0, 0, 406,
	0, 569, 407, 570, 409, 410, 0, 0, 411, 0,
	0, 0, 413, 414, 415, 0, 0, 416, 417, 571,
	0, 418, 0, 572, 419, 420, 412, 421, 422, 423,
	424, 425, 426, 427, 428, 0, 429, 430, 573, 574,
	575, 431, 576, 432, 433, 0, 434, 0, 435, 436,
	437, 438, 439, 440, 441, 577, 443, 442, 444, 0,
	445, 0, 0, 0, 0, 0, 446, 0, 448, 449,
	450, 447, 451, 452, 453, 454, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 578, 462, 0, 463, 464,
	470, 471, 465, 466, 472, 473, 474, 475, 476, 210,
	478, 479, 477, 480, 481, 482, 0, 483, 467, 468,
	484, 485, 0, 486, 487, 488, 489, 490, 491, 579,
	0, 492, 0, 493, 494, 495, 496, 469, 497, 502,
	580, 498, 499, 500, 501, 581, 0, 504, 505, 0,
	503, 212, 506, 507, 508, 509, 510, 511, 326, 512,
	0, 513, 582, 583, 584, 585, 0, 520, 0, 514,
	515, 586, 516, 587, 0, 517, 518, 519, 0, 521,
	522, 0, 0, 523, 524, 525, 527, 528, 526, 529,
	0, 530, 0, 0, 531, 532, 533, 1457, 589, 590,
	0, 535, 534, 591, 243, 0, 0, 204, 536, 537,
	592, 538, 539, 540, 0, 205, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 541, 0, 174, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 542, 543,
	0, 265, 544, 266, 545, 0, 546, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 547, 548, 549, 0,
	273, 274, 550, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	0, 0, 298, 299, 300, 301, 0, 302, 551, 552,
	0, 306, 303, 304, 0, 307, 305, 0, 308, 309,
	310, 0, 0, 311, 312, 313, 0, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 553, 321, 322, 323,
	325, 327, 324, 328, 329, 330, 331, 554, 555, 0,
	246, 0, 0, 0, 0, 0, 332, 333, 334, 556,
	0, 0, 0, 335, 0, 336, 0, 0, 0, 337,
	338, 557, 558, 339, 340, 0, 341, 559, 0, 560,
	342, 0, 343, 344, 345, 346, 347, 561, 562, 563,
	408, 0, 348, 349, 0, 350, 351, 352, 353, 0,
	0, 0, 247, 354, 355, 357, 0, 0, 356, 564,
	565, 0, 566, 0, 358, 359, 0, 567, 0, 360,
	361, 362, 0, 363, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 0, 370, 372, 371, 0, 373, 568,
	0, 374, 375, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 381, 382, 0, 383, 384, 386, 388, 385,
	387, 392, 389, 390, 391, 394, 0, 393, 0, 395,
	396, 397, 403, 404, 400, 401, 402, 405, 399, 0,
	398, 0, 248, 0, 406, 0, 569, 407, 570, 409,
	410, 0, 0, 411, 0, 0, 0, 413, 414, 415,
	0, 0, 416, 417, 571, 0, 418, 0, 572, 419,
	420, 412, 421, 422, 423, 424, 425, 426, 427, 428,
	0, 429, 430, 573, 574, 575, 431, 576, 432, 433,
	0, 434, 0, 435, 436, 437, 438, 439, 440, 441,
	577, 443, 442, 444, 0, 445, 0, 0, 0, 0,
	0, 446, 0, 448, 449, 450, 447, 451, 452, 453,
	454, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	578, 462, 0, 463, 464, 470, 471, 465, 466, 472,
	473, 474, 475, 476, 0, 478, 479, 477, 480, 481,
	482, 0, 483, 467, 468, 484, 485, 0, 486, 487,
	488, 489, 490, 491, 579, 0, 492, 0, 493, 494,
	495, 496, 469, 497, 502, 580, 498, 499, 500, 501,
	581, 0, 504, 505, 0, 503, 0, 506, 507, 508,
	509, 510, 511, 326, 512, 0, 513, 582, 583, 584,
	585, 0, 520, 0, 514, 515, 586, 516, 587, 0,
	517, 518, 519, 0, 521, 522, 0, 0, 523, 524,
	525, 527, 528, 526, 529, 0, 530, 0, 0, 531,
	532, 533, 588, 589, 590, 0, 535, 534, 591, 0,
	1397, 0, 243, 536, 537, 592, 538, 539, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 1798, 541, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 543, 0, 265,
	544, 266, 545, 0, 546, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 547, 548, 549, 0, 273, 274,
	550, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 0, 0,
	298, 299, 300, 301, 0, 302, 551, 552, 0, 306,
	303, 304, 0, 307, 305, 0, 308, 309, 310, 0,
	0, 311, 312, 313, 0, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 553, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 554, 555, 0, 246, 0,
	0, 0, 0, 0, 332, 333, 334, 556, 0, 0,
	0, 335, 0, 336, 0, 0, 0, 337, 338, 557,
	558, 339, 340, 0, 341, 559, 0, 560, 342, 0,
	343, 344, 345, 346, 347, 561, 562, 563, 408, 0,
	348, 349, 0, 350, 351, 352, 353, 0, 0, 0,
	247, 354, 355, 357, 0, 0, 356, 564, 565, 0,
	566, 0, 358, 359, 0, 567, 0, 360, 361, 362,
	0, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 0, 370, 372, 371, 0, 373, 568, 0, 374,
	375, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 0, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 0, 398, 0,
	248, 0, 406, 0, 569, 407, 570, 409, 410, 0,
	0, 411, 0, 0, 0, 413, 414, 415, 0, 0,
	416, 417, 571, 0, 418, 0, 572, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 0, 429,
	430, 573, 574, 575, 431, 576, 432, 433, 0, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 577, 443,
	442, 444, 0, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 578, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 0, 478, 479, 477, 480, 481, 482, 0,
	483, 467, 468, 484, 485, 0, 486, 487, 488, 489,
	490, 491, 579, 0, 492, 0, 493, 494, 495, 496,
	469, 497, 502, 580, 498, 499, 500, 501, 581, 0,
	504, 505, 0, 503, 0, 506, 507, 508, 509, 510,
	511, 326, 512, 0, 513, 582, 583, 584, 585, 0,
	520, 0, 514, 515, 586, 516, 587, 0, 517, 518,
	519, 0, 521, 522, 0, 0, 523, 524, 525, 527,
	528, 526, 529, 0, 530, 0, 0, 531, 532, 533,
	588, 589, 590, 0, 535, 534, 591, 0, 243, 2701,
	0, 536, 537, 592, 538, 539, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 1401, 541,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 542, 543, 0, 265, 544, 266, 545, 0,
	546, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	547, 548, 549, 0, 273, 274, 550, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 0, 0, 298, 299, 300, 301,
	0, 302, 551, 552, 0, 306, 303, 304, 0, 307,
	305, 0, 308, 309, 310, 0, 0, 311, 312, 313,
	0, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	553, 321, 322, 323, 325, 327, 324, 328, 329, 330,
	331, 554, 555, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 556, 0, 0, 0, 335, 0, 336,
	0, 0, 0, 337, 338, 557, 558, 339, 340, 0,
	341, 559, 0, 560, 342, 0, 343, 344, 345, 346,
	347, 561, 562, 563, 408, 0, 348, 349, 0, 350,
	351, 352, 353, 0, 0, 0, 0, 354, 355, 357,
	0, 0, 356, 564, 565, 0, 566, 0, 358, 359,
	0, 567, 0, 360, 361, 362, 0, 363, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 0, 370, 372,
	371, 0, 373, 568, 0, 374, 375, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 381, 382, 0, 383,
	384, 386, 388, 385, 387, 392, 389, 390, 391, 394,
	0, 393, 0, 395, 396, 397, 403, 404, 400, 401,
	402, 405, 399, 0, 398, 0, 0, 0, 406, 0,
	569, 407, 570, 409, 410, 0, 0, 411, 0, 0,
	0, 413, 414, 415, 0, 0, 416, 417, 571, 0,
	418, 0, 572, 419, 420, 412, 421, 422, 423, 424,
	425, 426, 427, 428, 0, 429, 430, 573, 574, 575,
	431, 576, 432, 433, 0, 434, 0, 435, 436, 437,
	438, 439, 440, 441, 577, 443, 442, 444, 0, 445,
	0, 0, 0, 0, 0, 446, 0, 448, 449, 450,
	447, 451, 452, 453, 454, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 578, 462, 0, 463, 464, 470,
	471, 465, 466, 472, 473, 474, 475, 476, 0, 478,
	479, 477, 480, 481, 482, 0, 483, 467, 468, 484,
	485, 0, 486, 487, 488, 489, 490, 491, 579, 0,
	492, 0, 493, 494, 495, 496, 469, 497, 502, 580,
	498, 499, 500, 501, 581, 0, 504, 505, 0, 503,
	0, 506, 507, 508, 509, 510, 511, 326, 512, 0,
	513, 582, 583, 584, 585, 0, 520, 0, 514, 515,
	586, 516, 587, 0, 517, 518, 519, 0, 521, 522,
	0, 0, 523, 524, 525, 527, 528, 526, 529, 0,
	530, 0, 0, 531, 532, 533, 588, 589, 590, 0,
	535, 534, 591, 243, 0, 0, 0, 536, 537, 592,
	538, 539, 540, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 541, 0, 4245, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 542, 543, 0,
	265, 544, 266, 545, 0, 546, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 547, 548, 549, 0, 273,
	274, 550, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 300, 301, 0, 302, 551, 552, 0,
	306, 303, 304, 0, 307, 305, 0, 308, 309, 310,
	0, 0, 311, 312, 313, 0, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 553, 321, 322, 323, 325,
	327, 324, 328, 329, 330, 331, 554, 555, 0, 246,
	0, 0, 0, 0, 0, 332, 333, 334, 556, 0,
	0, 0, 335, 0, 336, 0, 0, 0, 337, 338,
	557, 558, 339, 340, 0, 341, 559, 0, 560, 342,
	0, 343, 344, 345, 346, 347, 561, 562, 563, 408,
	0, 348, 349, 0, 350, 351, 352, 353, 0, 0,
	0, 247, 354, 355, 357, 0, 0, 356, 564, 565,
	0, 566, 0, 358, 359, 0, 567, 0, 360, 361,
	362, 0, 363, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 0, 370, 372, 371, 0, 373, 568, 0,
	374, 375, 0, 0, 376, 377, 378, 0, 0, 379,
	380, 381, 382, 0, 383, 384, 386, 388, 385, 387,
	392, 389, 390, 391, 394, 0, 393, 0, 395, 396,
	397, 403, 404, 400, 401, 402, 405, 399, 0, 398,
	0, 248, 0, 406, 0, 569, 407, 570, 409, 410,
	0, 0, 411, 0, 0, 0, 413, 414, 415, 0,
	0, 416, 417, 571, 0, 418, 0, 572, 419, 420,
	412, 421, 422, 423, 424, 425, 426, 427, 428, 0,
	429, 430, 573, 574, 575, 431, 576, 432, 433, 0,
	434, 0, 435, 436, 437, 438, 439, 440, 441, 577,
	443, 442, 444, 0, 445, 0, 0, 0, 0, 0,
	446, 0, 448, 449, 450, 447, 451, 452, 453, 454,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 578,
	462, 0, 463, 464, 470, 471, 465, 466, 472, 473,
	474, 475, 476, 0, 478, 479, 477, 480, 481, 482,
	0, 483, 467, 468, 484, 485, 0, 486, 487, 488,
	489, 490, 491, 579, 0, 492, 0, 493, 494, 495,
	496, 469, 497, 502, 580, 498, 499, 500, 501, 581,
	0, 504, 505, 0, 503, 0, 506, 507, 508, 509,
	510, 511, 326, 512, 0, 513, 582, 583, 584, 585,
	0, 520, 0, 514, 515, 586, 516, 587, 0, 517,
	518, 519, 0, 521, 522, 0, 0, 523, 524, 525,
	527, 528, 526, 529, 0, 530, 0, 0, 531, 532,
	533, 588, 589, 590, 243, 535, 534, 591, 0, 0,
	0, 0, 536, 537, 592, 538, 539, 540, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 541, 0, 0, 0, 3132,
	257, 258, 260, 259, 261, 262, 263, 264, 542, 543,
	0, 265, 544, 266, 545, 0, 546, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 547, 548, 549, 0,
	273, 274, 550, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	0, 0, 298, 299, 300, 301, 0, 302, 551, 552,
	0, 306, 303, 304, 0, 307, 305, 0, 308, 309,
	310, 0, 0, 311, 312, 313, 0, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 553, 321, 322, 323,
	325, 327, 324, 328, 329, 330, 331, 554, 555, 0,
	246, 0, 0, 0, 0, 0, 332, 333, 334, 556,
	0, 0, 0, 335, 0, 336, 0, 0, 0, 337,
	338, 557, 558, 339, 340, 0, 341, 559, 0, 560,
	342, 0, 343, 344, 345, 346, 347, 561, 562, 563,
	408, 0, 348, 349, 0, 350, 351, 352, 353, 0,
	0, 0, 247, 354, 355, 357, 0, 0, 356, 564,
	565, 0, 566, 0, 358, 359, 0, 567, 0, 360,
	361, 362, 0, 363, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 0, 370, 372, 371, 0, 373, 568,
	0, 374, 375, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 381, 382, 0, 383, 384, 386, 388, 385,
	387, 392, 389, 390, 391, 394, 0, 393, 0, 395,
	396, 397, 403, 404, 400, 401, 402, 405, 399, 0,
	398, 0, 248, 0, 406, 0, 569, 407, 570, 409,
	410, 0, 0, 411, 0, 0, 0, 413, 414, 415,
	0, 0, 416, 417, 571, 0, 418, 0, 572, 419,
	420, 412, 421, 422, 423, 424, 425, 426, 427, 428,
	0, 429, 430, 573, 574, 575, 431, 576, 432, 433,
	0, 434, 0, 435, 436, 437, 438, 439, 440, 441,
	577, 443, 442, 444, 0, 445, 0, 0, 0, 0,
	0, 446, 0, 448, 449, 450, 447, 451, 452, 453,
	454, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	578, 462, 0, 463, 464, 470, 471, 465, 466, 472,
	473, 474, 475, 476, 0, 478, 479, 477, 480, 481,
	482, 0, 483, 467, 468, 484, 485, 0, 486, 487,
	488, 489, 490, 491, 579, 0, 492, 0, 493, 494,
	495, 496, 469, 497, 502, 580, 498, 499, 500, 501,
	581, 0, 504, 505, 0, 503, 0, 506, 507, 508,
	509, 510, 511, 326, 512, 0, 513, 582, 583, 584,
	585, 0, 520, 0, 514, 515, 586, 516, 587, 0,
	517, 518, 519, 0, 521, 522, 0, 0, 523, 524,
	525, 527, 528, 526, 529, 0, 530, 0, 0, 531,
	532, 533, 588, 589, 590, 243, 535, 534, 591, 0,
	0, 0, 0, 536, 537, 592, 538, 539, 540, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 541, 0, 0, 0,
	1401, 257, 258, 260, 259, 261, 262, 263, 264, 542,
	543, 0, 265, 544, 266, 545, 0, 546, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 547, 548, 549,
	0, 273, 274, 550, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 300, 301, 0, 302, 551,
	552, 0, 306, 303, 304, 0, 307, 305, 0, 308,
	309, 310, 0, 0, 311, 312, 313, 0, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 553, 321, 322,
	323, 325, 327, 324, 328, 329, 330, 331, 554, 555,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	556, 0, 0, 0, 335, 0, 336, 0, 0, 0,
	337, 338, 557, 558, 339, 340, 0, 341, 559, 0,
	560, 342, 0, 343, 344, 345, 346, 347, 561, 562,
	563, 408, 0, 348, 349, 0, 350, 351, 352, 353,
	0, 0, 0, 0, 354, 355, 357, 0, 0, 356,
	564, 565, 0, 566, 0, 358, 359, 0, 567, 0,
	360, 361, 362, 0, 363, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 0, 370, 372, 371, 0, 373,
	568, 0, 374, 375, 0, 0, 376, 377, 378, 0,
	0, 379, 380, 381, 382, 0, 383, 384, 386, 388,
	385, 387, 392, 389, 390, 391, 394, 0, 393, 0,
	395, 396, 397, 403, 404, 400, 401, 402, 405, 399,
	0, 398, 0, 0, 0, 406, 0, 569, 407, 570,
	409, 410, 0, 0, 411, 0, 0, 0, 413, 414,
	415, 0, 0, 416, 417, 571, 0, 418, 0, 572,
	419, 420, 412, 421, 422, 423, 424, 425, 426, 427,
	428, 0, 429, 430, 573, 574, 575, 431, 576, 432,
	433, 0, 434, 0, 435, 436, 437, 438, 439, 440,
	441, 577, 443, 442, 444, 0, 445, 0, 0, 0,
	0, 0, 446, 0, 448, 449, 450, 447, 451, 452,
	453, 454, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 578, 462, 0, 463, 464, 470, 471, 465, 466,
	472, 473, 474, 475, 476, 0, 478, 479, 477, 480,
	481, 482, 0, 483, 467, 468, 484, 485, 0, 486,
	487, 488, 489, 490, 491, 579, 0, 492, 0, 493,
	494, 495, 496, 469, 497, 502, 580, 498, 499, 500,
	501, 581, 0, 504, 505, 0, 503, 0, 506, 507,
	508, 509, 510, 511, 326, 512, 0, 513, 582, 583,
	584, 585, 0, 520, 0, 514, 515, 586, 516, 587,
	0, 517, 518, 519, 0, 521, 522, 0, 0, 523,
	524, 525, 527, 528, 526, 529, 0, 530, 0, 0,
	531, 532, 533, 588, 589, 590, 0, 535, 534, 591,
	243, 0, 0, 0, 536, 537, 592, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 541, 0, 2672, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 542, 543, 0, 265, 544, 266,
	545, 0, 546, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 547, 548, 549, 0, 273, 274, 550, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 0, 0, 298, 299,
	300, 301, 0, 302, 551, 552, 0, 306, 303, 304,
	0, 307, 305, 0, 308, 309, 310, 0, 0, 311,
	312, 313, 0, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 553, 321, 322, 323, 325, 327, 324, 328,
	329, 330, 331, 554, 555, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 556, 0, 0, 0, 335,
	0, 336, 0, 0, 0, 337, 338, 557, 558, 339,
	340, 0, 341, 559, 0, 560, 342, 0, 343, 344,
	345, 346, 347, 561, 562, 563, 408, 0, 348, 349,
	0, 350, 351, 352, 353, 0, 0, 0, 0, 354,
	355, 357, 0, 0, 356, 564, 565, 0, 566, 0,
	358, 359, 0, 567, 0, 360, 361, 362, 0, 363,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 0,
	370, 372, 371, 0, 373, 568, 0, 374, 375, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 381, 382,
	0, 383, 384, 386, 388, 385, 387, 392, 389, 390,
	391, 394, 0, 393, 0, 395, 396, 397, 403, 404,
	400, 401, 402, 405, 399, 0, 398, 0, 0, 0,
	406, 0, 569, 407, 570, 409, 410, 0, 0, 411,
	0, 0, 0, 413, 414, 415, 0, 0, 416, 417,
	571, 0, 418, 0, 572, 419, 420, 412, 421, 422,
	423, 424, 425, 426, 427, 428, 0, 429, 430, 573,
	574, 575, 431, 576, 432, 433, 0, 434, 0, 435,
	436, 437, 438, 439, 440, 441, 577, 443, 442, 444,
	0, 445, 0, 0, 0, 0, 0, 446, 0, 448,
	449, 450, 447, 451, 452, 453, 454, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 578, 462, 0, 463,
	464, 470, 471, 465, 466, 472, 473, 474, 475, 476,
	0, 478, 479, 477, 480, 481, 482, 0, 483, 467,
	468, 484, 485, 0, 486, 487, 488, 489, 490, 491,
	579, 0, 492, 0, 493, 494, 495, 496, 469, 497,
	502, 580, 498, 499, 500, 501, 581, 0, 504, 505,
	0, 503, 0, 506, 507, 508, 509, 510, 511, 326,
	512, 0, 513, 582, 583, 584, 585, 0, 520, 0,
	514, 515, 586, 516, 587, 0, 517, 518, 519, 0,
	521, 522, 0, 0, 523, 524, 525, 527, 528, 526,
	529, 0, 530, 0, 0, 531, 532, 533, 588, 589,
	590, 0, 535, 534, 591, 243, 0, 0, 0, 536,
	537, 592, 538, 539, 540, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 541, 0, 3289, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 542,
	543, 0, 265, 544, 266, 545, 0, 546, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 547, 548, 549,
	0, 273, 274, 550, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 300, 301, 0, 302, 551,
	552, 0, 306, 303, 304, 0, 307, 305, 0, 308,
	309, 310, 0, 0, 311, 312, 313, 0, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 553, 321, 322,
	323, 325, 327, 324, 328, 329, 330, 331, 554, 555,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	556, 0, 0, 0, 335, 0, 336, 0, 0, 0,
	337, 338, 557, 558, 339, 340, 0, 341, 559, 0,
	560, 342, 0, 343, 344, 345, 346, 347, 561, 562,
	563, 408, 0, 348, 349, 0, 350, 351, 352, 353,
	0, 0, 0, 0, 354, 355, 357, 0, 0, 356,
	564, 565, 0, 566, 0, 358, 359, 0, 567, 0,
	360, 361, 362, 0, 363, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 0, 370, 372, 371, 0, 373,
	568, 0, 374, 375, 0, 0, 376, 377, 378, 0,
	0, 379, 380, 381, 382, 0, 383, 384, 386, 388,
	385, 387, 392, 389, 390, 391, 394, 0, 393, 0,
	395, 396, 397, 403, 404, 400, 401, 402, 405, 399,
	0, 398, 0, 0, 0, 406, 0, 569, 407, 570,
	409, 410, 0, 0, 411, 0, 0, 0, 413, 414,
	415, 0, 0, 416, 417, 571, 0, 418, 0, 572,
	419, 420, 412, 421, 422, 423, 424, 425, 426, 427,
	428, 0, 429, 430, 573, 574, 575, 431, 576, 432,
	433, 0, 434, 0, 435, 436, 437, 438, 439, 440,
	441, 577, 443, 442, 444, 0, 445, 0, 0, 0,
	0, 0, 446, 0, 448, 449, 450, 447, 451, 452,
	453, 454, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 578, 462, 0, 463, 464, 470, 471, 465, 466,
	472, 473, 474, 475, 476, 0, 478, 479, 477, 480,
	481, 482, 0, 483, 467, 468, 484, 485, 0, 486,
	487, 488, 489, 490, 491, 579, 0, 492, 0, 493,
	494, 495, 496, 469, 497, 502, 580, 498, 499, 500,
	501, 581, 0, 504, 505, 0, 503, 0, 506, 507,
	508, 509, 510, 511, 326, 512, 0, 513, 582, 583,
	584, 585, 0, 520, 0, 514, 515, 586, 516, 587,
	0, 517, 518, 519, 0, 521, 522, 0, 0, 523,
	524, 525, 527, 528, 526, 529, 0, 530, 0, 0,
	531, 532, 533, 588, 589, 590, 0, 535, 534, 591,
	0, 795, 0, 678, 536, 537, 592, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 2080, 541, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 542, 543, 0,
	265, 544, 266, 545, 0, 546, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 547, 548, 549, 0, 273,
	274, 550, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 685, 301, 0, 302, 551, 552, 0,
	306, 303, 304, 0, 307, 305, 0, 308, 309, 310,
	0, 0, 311, 312, 313, 0, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 553, 321, 322, 323, 325,
	327, 324, 328, 329, 330, 331, 554, 555, 0, 246,
	0, 0, 0, 0, 0, 332, 333, 334, 556, 0,
	0, 0, 335, 0, 336, 0, 793, 0, 337, 338,
	557, 558, 339, 340, 0, 341, 559, 0, 560, 342,
	0, 343, 344, 345, 346, 347, 561, 562, 563, 408,
	0, 348, 349, 0, 350, 351, 352, 353, 0, 0,
	0, 247, 354, 355, 357, 0, 0, 356, 564, 565,
	0, 566, 0, 358, 359, 0, 567, 0, 360, 361,
	362, 0, 363, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 0, 370, 372, 371, 0, 373, 568, 0,
	374, 375, 0, 0, 376, 377, 378, 0, 0, 379,
	380, 381, 382, 0, 383, 384, 386, 388, 385, 387,
	392, 389, 390, 391, 394, 0, 393, 0, 395, 396,
	397, 403, 404, 400, 401, 402, 405, 399, 0, 398,
	0, 248, 0, 406, 0, 569, 407, 570, 409, 410,
	0, 0, 411, 0, 0, 0, 413, 414, 415, 0,
	0, 416, 417, 571, 0, 418, 0, 572, 419, 420,
	412, 421, 422, 423, 424, 425, 426, 427, 428, 0,
	429, 430, 573, 574, 575, 431, 576, 432, 433, 0,
	434, 0, 435, 436, 437, 438, 439, 440, 441, 577,
	443, 442, 444, 0, 445, 0, 0, 0, 0, 0,
	446, 0, 448, 449, 450, 447, 451, 452, 453, 454,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 578,
	462, 0, 463, 464, 470, 471, 465, 466, 472, 473,
	474, 475, 476, 0, 478, 479, 477, 480, 481, 482,
	0, 483, 467, 468, 484, 485, 0, 486, 487, 488,
	489, 490, 491, 579, 0, 492, 0, 493, 494, 495,
	496, 469, 497, 502, 580, 498, 499, 500, 501, 581,
	0, 504, 505, 0, 503, 683, 506, 507, 508, 509,
	684, 511, 326, 512, 0, 513, 582, 583, 584, 585,
	0, 520, 0, 514, 515, 586, 516, 587, 0, 517,
	518, 519, 0, 521, 522, 0, 0, 523, 524, 525,
	527, 528, 526, 529, 0, 530, 0, 0, 531, 532,
	533, 588, 589, 590, 0, 535, 534, 591, 0, 676,
	0, 678, 536, 537, 592, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 688, 255, 256, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 542, 543, 0, 265, 544,
	266, 545, 0, 546, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 547, 548, 549, 0, 273, 274, 550,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 685, 301, 0, 302, 551, 552, 0, 306, 303,
	304, 0, 307, 305, 0, 308, 309, 310, 0, 0,
	311, 312, 313, 0, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 553, 321, 322, 323, 325, 327, 324,
	328, 329, 330, 331, 554, 555, 0, 246, 0, 0,
	0, 0, 0, 332, 333, 334, 556, 0, 0, 0,
	335, 0, 336, 0, 0, 0, 337, 338, 557, 558,
	339, 340, 0, 341, 559, 0, 560, 342, 0, 343,
	344, 345, 346, 347, 561, 562, 563, 408, 0, 348,
	349, 0, 350, 351, 352, 353, 0, 0, 0, 247,
	354, 355, 357, 0, 0, 356, 564, 565, 0, 566,
	0, 358, 359, 0, 567, 0, 360, 361, 362, 0,
	363, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	0, 370, 372, 371, 0, 373, 568, 0, 374, 375,
	0, 0, 376, 377, 378, 0, 0, 379, 380, 381,
	382, 0, 383, 384, 386, 388, 385, 387, 392, 389,
	390, 391, 394, 0, 393, 0, 395, 396, 397, 403,
	404, 400, 401, 402, 405, 399, 0, 398, 0, 248,
	0, 406, 0, 569, 407, 570, 409, 410, 0, 0,
	411, 0, 0, 0, 413, 414, 415, 0, 0, 416,
	417, 571, 0, 418, 0, 572, 419, 420, 412, 421,
	422, 423, 424, 425, 426, 427, 428, 0, 429, 430,
	573, 574, 575, 431, 576, 432, 433, 0, 434, 0,
	435, 436, 437, 438, 439, 440, 441, 577, 443, 442,
	444, 0, 445, 0, 0, 0, 0, 0, 446, 0,
	448, 449, 450, 447, 451, 452, 453, 454, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 578, 462, 0,
	463, 464, 470, 471, 465, 466, 472, 473, 474, 475,
	476, 0, 478, 479, 477, 480, 481, 482, 0, 483,
	467, 468, 484, 485, 0, 486, 487, 488, 489, 490,
	491, 579, 0, 492, 0, 493, 494, 495, 496, 469,
	497, 502, 580, 498, 499, 500, 501, 581, 0, 504,
	505, 0, 503, 683, 506, 507, 508, 509, 684, 511,
	326, 512, 0, 513, 582, 583, 584, 585, 0, 520,
	0, 514, 515, 586, 516, 587, 0, 517, 518, 519,
	0, 521, 522, 0, 0, 523, 524, 525, 527, 528,
	526, 529, 0, 530, 0, 0, 531, 532, 533, 588,
	589, 590, 678, 535, 534, 591, 0, 0, 0, 0,
	536, 537, 592, 538, 539, 540, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 688, 541, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 543, 0, 265,
	544, 266, 545, 0, 546, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 547, 548, 549, 0, 273, 274,
	550, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 0, 0,
	298, 299, 685, 301, 0, 302, 551, 552, 0, 306,
	303, 304, 0, 307, 305, 0, 308, 309, 310, 0,
	0, 311, 312, 313, 0, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 553, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 554, 555, 0, 246, 0,
	0, 0, 0, 0, 332, 333, 334, 556, 0, 0,
	0, 335, 0, 336, 0, 0, 0, 337, 338, 557,
	558, 339, 340, 0, 341, 559, 0, 560, 342, 0,
	343, 344, 345, 346, 347, 561, 562, 563, 408, 0,
	348, 349, 0, 350, 351, 352, 353, 0, 0, 0,
	247, 354, 355, 357, 0, 0, 356, 564, 565, 0,
	566, 0, 358, 359, 0, 567, 0, 360, 361, 362,
	0, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 0, 370, 372, 371, 0, 373, 568, 0, 374,
	375, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 0, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 0, 398, 0,
	248, 0, 406, 0, 569, 407, 570, 409, 410, 0,
	0, 411, 0, 0, 0, 413, 414, 415, 0, 0,
	416, 417, 571, 0, 418, 0, 572, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 0, 429,
	430, 573, 574, 575, 431, 576, 432, 433, 0, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 577, 443,
	442, 444, 0, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 578, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 0, 478, 479, 477, 480, 481, 482, 0,
	483, 467, 468, 484, 485, 0, 486, 487, 488, 489,
	490, 491, 579, 0, 492, 0, 493, 494, 495, 496,
	469, 497, 502, 580, 498, 499, 500, 501, 581, 0,
	504, 505, 0, 503, 683, 506, 507, 508, 509, 684,
	511, 326, 512, 0, 513, 582, 583, 584, 585, 0,
	520, 0, 514, 515, 586, 516, 587, 0, 517, 518,
	519, 0, 521, 522, 0, 0, 523, 524, 525, 527,
	528, 526, 529, 0, 530, 0, 0, 531, 532, 533,
	588, 589, 590, 678, 535, 534, 591, 0, 0, 0,
	0, 536, 537, 592, 538, 539, 540, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 688, 541, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 542, 543, 0,
	265, 544, 266, 545, 0, 546, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 547, 548, 549, 0, 273,
	274, 550, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 685, 301, 0, 302, 551, 552, 0,
	306, 303, 304, 0, 307, 305, 0, 308, 309, 310,
	0, 0, 311, 312, 313, 0, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 553, 321, 322, 323, 325,
	327, 324, 328, 329, 330, 331, 554, 555, 0, 246,
	0, 0, 0, 0, 0, 332, 333, 334, 556, 0,
	0, 0, 335, 0, 336, 0, 0, 0, 337, 338,
	557, 558, 339, 340, 0, 341, 559, 0, 560, 342,
	0, 343, 344, 345, 346, 347, 561, 562, 563, 408,
	0, 348, 349, 0, 350, 351, 352, 353, 0, 0,
	0, 247, 354, 355, 357, 0, 0, 356, 564, 565,
	0, 566, 0, 358, 359, 0, 567, 0, 360, 361,
	362, 0, 363, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 0, 370, 372, 371, 0, 373, 568, 0,
	374, 375, 0, 0, 376, 377, 378, 0, 0, 379,
	380, 381, 382, 0, 383, 384, 386, 388, 385, 387,
	392, 389, 390, 391, 394, 0, 393, 0, 395, 396,
	397, 403, 404, 400, 401, 402, 405, 399, 0, 398,
	0, 248, 0, 406, 0, 569, 407, 570, 409, 410,
	0, 0, 411, 0, 0, 0, 413, 414, 415, 0,
	0, 416, 417, 571, 0, 418, 0, 572, 419, 420,
	412, 421, 422, 423, 424, 425, 426, 427, 428, 0,
	429, 430, 573, 574, 575, 431, 576, 432, 433, 0,
	434, 0, 435, 436, 437, 438, 439, 440, 441, 577,
	443, 442, 444, 0, 445, 0, 0, 0, 0, 0,
	446, 0, 448, 449, 450, 447, 451, 452, 453, 454,
	0, 455, 456, 457, 0, 2119, 459, 460, 461, 578,
	462, 0, 463, 464, 470, 471, 465, 466, 472, 473,
	474, 475, 476, 0, 478, 479, 477, 480, 481, 482,
	0, 483, 467, 468, 484, 485, 0, 486, 487, 488,
	489, 490, 491, 579, 0, 492, 0, 493, 494, 495,
	496, 469, 497, 502, 580, 498, 499, 500, 501, 581,
	0, 504, 505, 0, 503, 683, 506, 507, 508, 509,
	684, 511, 326, 512, 0, 513, 582, 583, 584, 585,
	0, 520, 0, 514, 515, 586, 516, 587, 0, 517,
	518, 519, 0, 521, 522, 0, 0, 523, 524, 525,
	527, 528, 526, 529, 0, 530, 0, 0, 531, 532,
	533, 588, 589, 590, 678, 535, 534, 591, 0, 0,
	0, 0, 536, 537, 592, 538, 539, 540, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 688, 541, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 542, 543,
	0, 265, 544, 266, 545, 0, 546, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 547, 548, 549, 0,
	273, 274, 550, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	0, 0, 298, 299, 685, 301, 0, 302, 551, 552,
	0, 306, 303, 304, 0, 307, 305, 0, 308, 309,
	310, 0, 0, 311, 312, 313, 0, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 553, 321, 322, 323,
	325, 327, 324, 328, 329, 330, 331, 554, 555, 0,
	246, 0, 0, 0, 0, 0, 332, 333, 334, 556,
	0, 0, 0, 335, 0, 336, 0, 0, 0, 337,
	338, 557, 558, 339, 340, 0, 341, 559, 0, 560,
	342, 0, 343, 344, 345, 346, 347, 561, 562, 563,
	408, 0, 348, 349, 0, 350, 351, 352, 353, 0,
	0, 0, 247, 354, 355, 357, 0, 0, 356, 564,
	565, 0, 566, 0, 358, 359, 0, 567, 0, 360,
	361, 362, 0, 363, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 0, 370, 372, 371, 0, 373, 568,
	0, 374, 375, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 381, 382, 0, 383, 384, 386, 388, 385,
	387, 392, 389, 390, 391, 394, 0, 393, 0, 395,
	396, 397, 403, 404, 400, 401, 402, 405, 399, 0,
	398, 0, 248, 0, 406, 0, 569, 407, 570, 409,
	410, 0, 0, 411, 0, 0, 0, 413, 414, 415,
	0, 0, 416, 417, 571, 0, 418, 0, 572, 419,
	420, 412, 421, 422, 423, 424, 425, 426, 427, 428,
	0, 429, 430, 573, 574, 575, 431, 576, 432, 433,
	0, 434, 0, 435, 436, 437, 438, 439, 440, 441,
	577, 443, 442, 444, 0, 445, 0, 0, 0, 0,
	0, 446, 0, 448, 449, 450, 447, 451, 452, 453,
	454, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	578, 462, 0, 463, 464, 470, 471, 465, 466, 472,
	473, 474, 475, 476, 0, 478, 479, 477, 480, 481,
	482, 0, 483, 467, 468, 484, 485, 0, 486, 487,
	488, 489, 490, 491, 579, 0, 492, 0, 493, 494,
	495, 496, 469, 497, 502, 580, 498, 499, 500, 501,
	581, 0, 504, 505, 0, 503, 683, 506, 507, 508,
	509, 684, 511, 326, 512, 0, 513, 582, 583, 584,
	585, 0, 520, 0, 514, 515, 586, 516, 587, 0,
	517, 518, 1859, 0, 521, 522, 0, 0, 523, 524,
	525, 527, 528, 526, 529, 0, 530, 0, 0, 531,
	532, 533, 588, 589, 590, 678, 535, 534, 591, 0,
	0, 0, 0, 536, 537, 592, 538, 539, 540, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 688, 541, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 542,
	543, 0, 265, 544, 266, 545, 0, 546, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 547, 548, 549,
	0, 273, 274, 550, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 685, 301, 0, 302, 551,
	552, 0, 306, 303, 304, 0, 307, 305, 0, 308,
	309, 310, 0, 0, 311, 312, 313, 0, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 553, 321, 322,
	323, 325, 327, 324, 328, 329, 330, 331, 554, 555,
	0, 246, 0, 0, 0, 0, 0, 332, 333, 334,
	556, 0, 0, 0, 335, 0, 336, 0, 0, 0,
	337, 338, 557, 558, 339, 340, 0, 341, 559, 0,
	560, 342, 0, 343, 344, 345, 346, 347, 561, 562,
	563, 408, 0, 348, 349, 0, 350, 351, 352, 353,
	0, 0, 0, 247, 354, 355, 357, 0, 0, 356,
	564, 565, 0, 566, 0, 358, 359, 0, 567, 0,
	360, 361, 362, 0, 363, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 0, 370, 372, 371, 0, 373,
	568, 0, 374, 375, 0, 0, 376, 377, 378, 0,
	0, 379, 380, 381, 382, 0, 383, 384, 386, 388,
	385, 387, 392, 389, 390, 391, 394, 0, 393, 0,
	395, 396, 397, 403, 404, 400, 401, 402, 405, 399,
	0, 398, 0, 248, 0, 406, 0, 569, 407, 570,
	409, 410, 0, 0, 411, 0, 0, 0, 413, 414,
	415, 0, 0, 416, 417, 571, 0, 418, 0, 572,
	419, 420, 412, 421, 422, 423, 424, 425, 426, 427,
	428, 0, 429, 430, 573, 574, 575, 431, 576, 432,
	433, 0, 434, 0, 435, 436, 437, 438, 439, 440,
	441, 577, 443, 442, 444, 0, 445, 0, 0, 0,
	0, 0, 446, 0, 448, 449, 450, 447, 451, 452,
	453, 454, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 578, 462, 0, 463, 464, 470, 471, 465, 466,
	472, 473, 474, 475, 476, 0, 478, 479, 477, 480,
	481, 482, 0, 483, 467, 468, 484, 485, 0, 486,
	487, 488, 489, 490, 491, 579, 0, 492, 0, 493,
	494, 495, 496, 469, 497, 502, 580, 498, 499, 500,
	501, 581, 0, 504, 505, 0, 503, 683, 506, 507,
	508, 509, 684, 511, 326, 512, 0, 513, 582, 583,
	584, 585, 0, 520, 0, 514, 515, 586, 516, 587,
	0, 517, 518, 1813, 0, 521, 522, 0, 0, 523,
	524, 525, 527, 528, 526, 529, 0, 530, 0, 0,
	531, 532, 533, 588, 589, 590, 1834, 535, 534, 591,
	0, 0, 0, 0, 536, 537, 592, 538, 539, 540,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 688, 0, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	0, 1840, 0, 265, 1830, 266, 1846, 0, 1853, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 1856, 1857,
	0, 0, 273, 274, 0, 0, 1272, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 295, 1064, 296, 297, 0, 0, 0,
	0, 0, 0, 0, 298, 299, 300, 301, 1047, 302,
	1844, 1843, 0, 306, 303, 304, 0, 307, 305, 0,
	308, 309, 310, 0, 0, 311, 1032, 313, 0, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 325, 327, 324, 328, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 1842, 0, 0, 0, 335, 0, 336, 0, 0,
	1065, 337, 338, 1851, 1852, 339, 340, 0, 341, 0,
	0, 0, 342, 0, 343, 344, 345, 346, 347, 0,
	0, 0, 408, 1067, 348, 349, 0, 350, 351, 352,
	353, 0, 0, 0, 0, 354, 355, 357, 0, 1066,
	356, 1837, 1838, 0, 1833, 0, 358, 359, 1068, 0,
	1069, 360, 361, 362, 1070, 363, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 0, 370, 372, 371, 0,
	373, 0, 1071, 374, 375, 1072, 0, 376, 377, 378,
	0, 0, 379, 380, 381, 382, 0, 383, 384, 386,
	388, 385, 387, 392, 389, 390, 391, 394, 0, 393,
	1073, 395, 396, 397, 403, 404, 400, 401, 402, 405,
	399, 1074, 398, 0, 0, 1075, 406, 0, 0, 407,
	1845, 409, 410, 0, 0, 411, 0, 0, 0, 413,
	414, 415, 0, 0, 416, 417, 0, 1076, 418, 1077,
	0, 419, 420, 412, 421, 422, 423, 424, 425, 426,
	427, 428, 0, 429, 430, 1827, 1828, 0, 431, 0,
	432, 433, 0, 434, 0, 435, 436, 437, 438, 439,
	440, 441, 1841, 443, 442, 444, 0, 445, 0, 0,
	0, 0, 0, 446, 0, 448, 449, 450, 447, 451,
	452, 453, 454, 0, 455, 456, 457, 1078, 458, 459,
	460, 461, 0, 462, 0, 463, 464, 470, 471, 465,
	466, 472, 473, 474, 475, 476, 0, 478, 479, 477,
	480, 481, 482, 0, 483, 467, 468, 484, 485, 1079,
	486, 487, 488, 489, 490, 491, 1839, 0, 492, 0,
	493, 494, 495, 496, 469, 497, 502, 1855, 498, 499,
	500, 501, 0, 0, 504, 505, 0, 503, 0, 506,
	507, 508, 509, 510, 511, 326, 512, 0, 513, 1847,
	1848, 1849, 1850, 0, 520, 0, 514, 515, 0, 516,
	0, 0, 517, 518, 519, 0, 521, 522, 0, 0,
	523, 524, 525, 527, 528, 526, 529, 0, 530, 0,
	0, 531, 532, 533, 0, 1831, 1854, 0, 535, 534,
	0, 0, 0, 0, 0, 536, 537, 0, 538, 539,
	540, 1306, 1305, 0, 0, 0, 0, 1303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 1821, 0,
	0, 0, 541, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 542, 543, 0, 265, 544,
	266, 545, 0, 546, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 547, 548, 549, 0, 273, 274, 550,
	0, 1272, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 295, 1064,
	296, 297, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 300, 301, 0, 302, 551, 552, 0, 306, 303,
	304, 0, 307, 305, 0, 308, 309, 310, 0, 0,
	311, 312, 313, 0, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 553, 321, 322, 323, 325, 327, 324,
	328, 329, 330, 331, 554, 555, 0, 246, 0, 0,
	0, 0, 0, 332, 333, 334, 556, 0, 0, 0,
	335, 0, 336, 0, 0, 1065, 337, 338, 557, 558,
	339, 340, 0, 341, 559, 0, 560, 342, 0, 343,
	344, 345, 346, 347, 561, 562, 563, 408, 1067, 348,
	349, 0, 350, 351, 352, 353, 0, 0, 0, 0,
	354, 355, 357, 0, 1066, 356, 564, 565, 0, 566,
	0, 358, 359, 1068, 567, 1069, 360, 361, 362, 1070,
	363, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	0, 370, 372, 371, 0, 373, 568, 1071, 374, 375,
	1072, 0, 376, 377, 378, 0, 0, 379, 380, 381,
	382, 0, 383, 384, 386, 388, 385, 387, 392, 389,
	390, 391, 394, 0, 393, 1073, 395, 396, 397, 403,
	404, 400, 401, 402, 405, 399, 1074, 398, 0, 0,
	1075, 406, 3455, 569, 407, 570, 409, 410, 0, 0,
	411, 0, 0, 0, 413, 414, 415, 0, 0, 416,
	417, 571, 1076, 418, 1077, 572, 419, 420, 412, 421,
	422, 423, 424, 425, 426, 427, 428, 0, 429, 430,
	573, 574, 575, 431, 576, 432, 433, 0, 434, 0,
	435, 436, 437, 438, 439, 440, 441, 577, 443, 442,
	444, 0, 445, 0, 0, 0, 0, 0, 446, 0,
	448, 449, 450, 447, 451, 452, 453, 454, 0, 455,
	456, 457, 1078, 458, 459, 460, 461, 578, 462, 0,
	463, 464, 470, 471, 465, 466, 472, 473, 474, 475,
	476, 0, 478, 479, 477, 480, 481, 482, 0, 483,
	467, 468, 484, 485, 1079, 486, 487, 488, 489, 490,
	491, 579, 0, 492, 0, 493, 494, 495, 496, 469,
	497, 502, 580, 498, 499, 500, 501, 581, 0, 504,
	505, 0, 503, 0, 506, 507, 508, 509, 510, 511,
	326, 512, 0, 513, 582, 583, 584, 585, 0, 520,
	0, 514, 515, 586, 516, 587, 0, 517, 518, 519,
	0, 521, 522, 0, 0, 523, 524, 525, 527, 528,
	526, 529, 0, 530, 0, 0, 531, 532, 533, 588,
	589, 590, 0, 535, 534, 591, 0, 0, 0, 0,
	536, 537, 592, 538, 539, 540, 1306, 1305, 0, 0,
	0, 0, 1303, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	542, 543, 0, 265, 544, 266, 545, 0, 546, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 547, 548,
	549, 0, 273, 274, 550, 0, 1272, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 295, 1064, 296, 297, 0, 0, 0,
	0, 0, 0, 0, 298, 299, 300, 301, 0, 302,
	551, 552, 0, 306, 303, 304, 0, 307, 305, 0,
	308, 309, 310, 0, 0, 311, 312, 313, 0, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 553, 321,
	322, 323, 325, 327, 324, 328, 329, 330, 331, 554,
	555, 0, 246, 0, 0, 0, 0, 0, 332, 333,
	334, 556, 0, 0, 0, 335, 0, 336, 0, 0,
	1065, 337, 338, 557, 558, 339, 340, 0, 341, 559,
	0, 560, 342, 0, 343, 344, 345, 346, 347, 561,
	562, 563, 408, 1067, 348, 349, 0, 350, 351, 352,
	353, 0, 0, 0, 0, 354, 355, 357, 0, 1066,
	356, 564, 565, 0, 566, 0, 358, 359, 1068, 567,
	1069, 360, 361, 362, 1070, 363, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 0, 370, 372, 371, 0,
	373, 568, 1071, 374, 375, 1072, 0, 376, 377, 378,
	0, 0, 379, 380, 381, 382, 0, 383, 384, 386,
	388, 385, 387, 392, 389, 390, 391, 394, 0, 393,
	1073, 395, 396, 397, 403, 404, 400, 401, 402, 405,
	399, 1074, 398, 0, 0, 1075, 406, 3104, 569, 407,
	570, 409, 410, 0, 0, 411, 0, 0, 0, 413,
	414, 415, 0, 0, 416, 417, 571, 1076, 418, 1077,
	572, 419, 420, 412, 421, 422, 423, 424, 425, 426,
	427, 428, 0, 429, 430, 573, 574, 575, 431, 576,
	432, 433, 0, 434, 0, 435, 436, 437, 438, 439,
	440, 441, 577, 443, 442, 444, 0, 445, 0, 0,
	0, 0, 0, 446, 0, 448, 449, 450, 447, 451,
	452, 453, 454, 0, 455, 456, 457, 1078, 458, 459,
	460, 461, 578, 462, 0, 463, 464, 470, 471, 465,
	466, 472, 473, 474, 475, 476, 0, 478, 479, 477,
	480, 481, 482, 0, 483, 467, 468, 484, 485, 1079,
	486, 487, 488, 489, 490, 491, 579, 0, 492, 0,
	493, 494, 495, 496, 469, 497, 502, 580, 498, 499,
	500, 501, 581, 0, 504, 505, 0, 503, 0, 506,
	507, 508, 509, 510, 511, 326, 512, 0, 513, 582,
	583, 584, 585, 0, 520, 0, 514, 515, 586, 516,
	587, 0, 517, 518, 519, 0, 521, 522, 0, 0,
	523, 524, 525, 527, 528, 526, 529, 0, 530, 0,
	0, 531, 532, 533, 588, 589, 590, 0, 535, 534,
	591, 1306, 1305, 0, 0, 536, 537, 592, 538, 539,
	540, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 542, 543, 0, 265, 544,
	266, 545, 0, 546, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 547, 548, 549, 0, 273, 274, 550,
	0, 1272, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 295, 1064,
	296, 297, 0, 0, 0, 0, 0, 0, 3045, 298,
	299, 300, 301, 0, 302, 551, 552, 0, 306, 303,
	304, 0, 307, 305, 0, 308, 309, 310, 0, 0,
	311, 312, 313, 0, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 553, 321, 322, 323, 325, 327, 324,
	328, 329, 330, 331, 554, 555, 0, 246, 0, 0,
	0, 0, 0, 332, 333, 334, 556, 0, 0, 0,
	335, 0, 336, 0, 0, 1065, 337, 338, 557, 558,
	339, 340, 0, 341, 559, 0, 560, 342, 0, 343,
	344, 345, 346, 347, 561, 562, 563, 408, 1067, 348,
	349, 0, 350, 351, 352, 353, 0, 0, 0, 0,
	354, 355, 357, 0, 1066, 356, 564, 565, 0, 566,
	0, 358, 359, 1068, 567, 1069, 360, 361, 362, 1070,
	363, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	0, 370, 372, 371, 0, 373, 568, 1071, 374, 375,
	1072, 0, 376, 377, 378, 0, 0, 379, 380, 381,
	382, 0, 383, 384, 386, 388, 385, 387, 392, 389,
	390, 391, 394, 0, 393, 1073, 395, 396, 397, 403,
	404, 400, 401, 402, 405, 399, 1074, 398, 0, 0,
	1075, 406, 0, 569, 407, 570, 409, 410, 0, 0,
	411, 0, 0, 0, 413, 414, 415, 0, 0, 416,
	417, 571, 1076, 418, 1077, 572, 419, 420, 412, 421,
	422, 423, 424, 425, 426, 427, 428, 0, 429, 430,
	573, 574, 575, 431, 576, 432, 433, 0, 434, 0,
	435, 436, 437, 438, 439, 440, 441, 577, 443, 442,
	444, 0, 445, 0, 0, 0, 0, 0, 446, 0,
	448, 449, 450, 447, 451, 452, 453, 454, 0, 455,
	456, 457, 1078, 458, 459, 460, 461, 578, 462, 0,
	463, 464, 470, 471, 465, 466, 472, 473, 474, 475,
	476, 0, 478, 479, 477, 480, 481, 482, 3046, 483,
	467, 468, 484, 485, 1079, 486, 487, 488, 489, 490,
	491, 579, 0, 492, 0, 493, 494, 495, 496, 469,
	497, 502, 580, 498, 499, 500, 501, 581, 0, 504,
	505, 0, 503, 0, 506, 507, 508, 509, 510, 511,
	326, 512, 0, 513, 582, 583, 584, 585, 0, 520,
	0, 514, 515, 586, 516, 587, 0, 517, 518, 519,
	0, 521, 522, 0, 0, 523, 524, 525, 527, 528,
	526, 529, 0, 530, 0, 0, 531, 532, 533, 588,
	589, 590, 243, 535, 534, 591, 0, 0, 0, 0,
	536, 537, 592, 538, 539, 540, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 543, 0, 265,
	544, 266, 545, 0, 546, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 547, 548, 549, 0, 273, 274,
	550, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 0, 0,
	298, 299, 300, 301, 0, 302, 551, 552, 0, 306,
	303, 304, 0, 307, 305, 0, 308, 309, 310, 0,
	0, 311, 312, 313, 0, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 553, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 554, 555, 0, 246, 0,
	0, 0, 0, 0, 332, 333, 334, 556, 0, 0,
	0, 335, 0, 336, 0, 0, 0, 337, 338, 557,
	558, 339, 340, 0, 341, 559, 0, 560, 342, 0,
	343, 344, 345, 346, 347, 561, 562, 563, 408, 0,
	348, 349, 0, 350, 351, 352, 353, 0, 0, 0,
	247, 354, 355, 357, 0, 0, 356, 564, 565, 0,
	566, 0, 358, 359, 0, 567, 0, 360, 361, 362,
	0, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 0, 370, 372, 371, 0, 373, 568, 0, 374,
	375, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 0, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 0, 398, 0,
	248, 0, 406, 0, 569, 407, 570, 409, 410, 0,
	0, 411, 0, 0, 0, 413, 414, 415, 0, 0,
	416, 417, 571, 0, 418, 0, 572, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 0, 429,
	430, 573, 574, 575, 431, 576, 432, 433, 0, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 577, 443,
	442, 444, 0, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 578, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 0, 478, 479, 477, 480, 481, 482, 0,
	483, 467, 468, 484, 485, 0, 486, 487, 488, 489,
	490, 491, 579, 0, 492, 0, 493, 494, 495, 496,
	469, 497, 502, 580, 498, 499, 500, 501, 581, 0,
	504, 505, 0, 503, 0, 506, 507, 508, 509, 510,
	511, 326, 512, 0, 513, 582, 583, 584, 585, 0,
	520, 0, 514, 515, 586, 516, 587, 0, 517, 518,
	519, 0, 521, 522, 0, 0, 523, 524, 525, 527,
	528, 526, 529, 0, 530, 0, 0, 531, 532, 533,
	588, 589, 590, 0, 535, 534, 591, 0, 0, 0,
	0, 536, 537, 592, 538, 539, 540, 1507, 0, 1306,
	1305, 0, 0, 0, 0, 1303, 0, 0, 0, 0,
	0, 0, 0, 688, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 542, 543, 0, 265, 544, 266, 545,
	0, 546, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 547, 548, 549, 0, 273, 274, 550, 0, 1272,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 295, 1064, 296, 297,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 300,
	301, 0, 302, 551, 552, 0, 306, 303, 304, 0,
	307, 305, 0, 308, 309, 310, 0, 0, 311, 312,
	313, 0, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 553, 321, 322, 323, 325, 327, 324, 328, 329,
	330, 331, 554, 555, 0, 246, 0, 0, 0, 0,
	0, 1506, 333, 334, 556, 0, 0, 0, 335, 0,
	336, 0, 0, 1065, 337, 338, 557, 558, 339, 340,
	0, 341, 559, 0, 560, 342, 0, 343, 344, 345,
	346, 347, 561, 562, 563, 408, 1067, 348, 349, 0,
	350, 351, 352, 353, 0, 0, 0, 0, 354, 355,
	357, 0, 1066, 356, 564, 565, 0, 566, 0, 358,
	359, 1068, 567, 1069, 360, 361, 362, 1070, 363, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 0, 370,
	372, 371, 0, 373, 568, 1071, 374, 375, 1072, 0,
	376, 377, 378, 0, 0, 379, 380, 381, 382, 0,
	383, 384, 386, 388, 385, 387, 392, 389, 390, 391,
	394, 0, 393, 1073, 395, 396, 397, 403, 404, 400,
	401, 402, 405, 399, 1074, 398, 0, 0, 1075, 406,
	0, 569, 407, 570, 409, 410, 0, 0, 411, 0,
	0, 0, 413, 414, 415, 0, 0, 416, 417, 571,
	1076, 418, 1077, 572, 419, 420, 412, 421, 422, 423,
	424, 425, 426, 427, 428, 0, 429, 430, 573, 574,
	575, 431, 576, 432, 433, 0, 434, 0, 435, 436,
	437, 438, 439, 1505, 441, 577, 443, 442, 444, 0,
	445, 0, 0, 0, 0, 0, 446, 0, 448, 449,
	450, 447, 451, 452, 453, 454, 0, 455, 456, 457,
	1078, 458, 459, 460, 461, 578, 462, 0, 463, 464,
	470, 471, 465, 466, 472, 1504, 474, 475, 476, 0,
	478, 479, 477, 480, 481, 482, 0, 483, 467, 468,
	484, 485, 1079, 486, 487, 488, 489, 490, 491, 579,
	0, 492, 0, 493, 494, 495, 496, 469, 497, 502,
	580, 498, 499, 500, 501, 581, 0, 504, 505, 0,
	503, 0, 506, 507, 508, 509, 510, 511, 326, 512,
	0, 513, 582, 583, 584, 585, 0, 520, 0, 514,
	515, 586, 516, 587, 0, 517, 518, 519, 0, 521,
	522, 0, 0, 523, 524, 525, 527, 528, 526, 529,
	0, 530, 0, 0, 531, 532, 533, 588, 589, 590,
	0, 535, 534, 591, 0, 0, 0, 0, 536, 537,
	592, 538, 539, 540, 1447, 0, 1306, 1305, 0, 0,
	0, 0, 1303, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	542, 543, 0, 265, 544, 266, 545, 0, 546, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 547, 548,
	549, 0, 273, 274, 550, 0, 1272, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 295, 1064, 296, 297, 0, 0, 0,
	0, 0, 0, 0, 298, 299, 300, 301, 0, 302,
	551, 552, 0, 306, 303, 304, 0, 307, 305, 0,
	308, 309, 310, 0, 0, 311, 312, 313, 0, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 553, 321,
	322, 323, 325, 327, 324, 328, 329, 330, 331, 554,
	555, 0, 246, 0, 0, 0, 0, 0, 332, 333,
	334, 556, 0, 0, 0, 335, 0, 336, 0, 0,
	1065, 337, 338, 557, 558, 339, 340, 0, 341, 559,
	0, 560, 342, 0, 343, 344, 345, 346, 347, 1446,
	562, 563, 408, 1067, 348, 349, 0, 350, 351, 352,
	353, 0, 0, 0, 0, 354, 355, 357, 0, 1066,
	356, 564, 565, 0, 566, 0, 358, 359, 1068, 567,
	1069, 360, 361, 362, 1070, 363, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 0, 370, 372, 371, 0,
	373, 568, 1071, 374, 375, 1072, 0, 376, 377, 378,
	0, 0, 379, 380, 381, 382, 0, 383, 384, 386,
	388, 385, 387, 392, 389, 390, 391, 394, 0, 393,
	1073, 395, 396, 397, 403, 404, 400, 401, 402, 405,
	399, 1074, 398, 0, 0, 1075, 406, 0, 569, 407,
	570, 409, 410, 0, 0, 411, 0, 0, 0, 413,
	414, 415, 0, 0, 416, 417, 571, 1076, 418, 1077,
	572, 419, 420, 412, 421, 422, 423, 424, 425, 426,
	427, 428, 0, 429, 430, 573, 574, 575, 431, 576,
	432, 433, 0, 434, 0, 435, 436, 437, 438, 439,
	440, 441, 577, 443, 442, 444, 0, 445, 0, 0,
	0, 0, 0, 446, 0, 448, 449, 450, 447, 451,
	452, 453, 454, 0, 455, 456, 457, 1078, 458, 459,
	460, 461, 578, 462, 0, 463, 464, 470, 471, 465,
	466, 472, 473, 474, 475, 476, 0, 478, 479, 477,
	480, 481, 482, 0, 483, 467, 468, 484, 485, 1079,
	486, 487, 488, 489, 490, 491, 579, 0, 492, 0,
	493, 494, 495, 496, 469, 497, 502, 580, 498, 499,
	500, 501, 581, 0, 504, 505, 0, 503, 0, 506,
	507, 508, 509, 510, 511, 326, 512, 0, 513, 582,
	583, 584, 585, 0, 520, 0, 514, 515, 586, 516,
	587, 0, 517, 518, 519, 0, 521, 522, 0, 0,
	523, 524, 525, 527, 528, 526, 529, 0, 530, 0,
	0, 531, 532, 533, 588, 589, 590, 0, 535, 534,
	591, 0, 0, 0, 0, 536, 537, 592, 538, 539,
	540, 1376, 0, 1306, 1305, 0, 0, 0, 0, 1303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 542, 543, 0,
	265, 544, 266, 545, 0, 546, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 547, 548, 549, 0, 273,
	274, 550, 0, 1272, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	295, 1064, 296, 297, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 300, 301, 0, 302, 551, 552, 0,
	306, 303, 304, 0, 307, 305, 0, 308, 309, 310,
	0, 0, 311, 312, 313, 0, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 553, 321, 322, 323, 325,
	327, 324, 328, 329, 330, 331, 554, 555, 0, 246,
	0, 0, 0, 0, 0, 332, 333, 334, 556, 0,
	0, 0, 335, 0, 336, 0, 0, 1065, 337, 338,
	557, 558, 339, 340, 0, 341, 559, 0, 560, 342,
	0, 343, 344, 345, 346, 347, 1375, 562, 563, 408,
	1067, 348, 349, 0, 350, 351, 352, 353, 0, 0,
	0, 0, 354, 355, 357, 0, 1066, 356, 564, 565,
	0, 566, 0, 358, 359, 1068, 567, 1069, 360, 361,
	362, 1070, 363, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 0, 370, 372, 371, 0, 373, 568, 1071,
	374, 375, 1072, 0, 376, 377, 378, 0, 0, 379,
	380, 381, 382, 0, 383, 384, 386, 388, 385, 387,
	392, 389, 390, 391, 394, 0, 393, 1073, 395, 396,
	397, 403, 404, 400, 401, 402, 405, 399, 1074, 398,
	0, 0, 1075, 406, 0, 569, 407, 570, 409, 410,
	0, 0, 411, 0, 0, 0, 413, 414, 415, 0,
	0, 416, 417, 571, 1076, 418, 1077, 572, 419, 420,
	412, 421, 422, 423, 424, 425, 426, 427, 428, 0,
	429, 430, 573, 574, 575, 431, 576, 432, 433, 0,
	434, 0, 435, 436, 437, 438, 439, 440, 441, 577,
	443, 442, 444, 0, 445, 0, 0, 0, 0, 0,
	446, 0, 448, 449, 450, 447, 451, 452, 453, 454,
	0, 455, 456, 457, 1078, 458, 459, 460, 461, 578,
	462, 0, 463, 464, 470, 471, 465, 466, 472, 473,
	474, 475, 476, 0, 478, 479, 477, 480, 481, 482,
	0, 483, 467, 468, 484, 485, 1079, 486, 487, 488,
	489, 490, 491, 579, 0, 492, 0, 493, 494, 495,
	496, 469, 497, 502, 580, 498, 499, 500, 501, 581,
	0, 504, 505, 0, 503, 0, 506, 507, 508, 509,
	510, 511, 326, 512, 0, 513, 582, 583, 584, 585,
	0, 520, 0, 514, 515, 586, 516, 587, 0, 517,
	518, 519, 0, 521, 522, 0, 0, 523, 524, 525,
	527, 528, 526, 529, 0, 530, 0, 0, 531, 532,
	533, 588, 589, 590, 0, 535, 534, 591, 0, 0,
	0, 0, 536, 537, 592, 538, 539, 540, 1341, 0,
	1306, 1305, 0, 0, 0, 0, 1303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 542, 543, 0, 265, 544, 266,
	545, 0, 546, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 547, 548, 549, 0, 273, 274, 550, 0,
	1272, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 295, 1064, 296,
	297, 0, 0, 0, 0, 0, 0, 0, 298, 299,
	300, 301, 0, 302, 551, 552, 0, 306, 303, 304,
	0, 307, 305, 0, 308, 309, 310, 0, 0, 311,
	312, 313, 0, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 553, 321, 322, 323, 325, 327, 324, 328,
	329, 330, 331, 554, 555, 0, 246, 0, 0, 0,
	0, 0, 332, 333, 334, 556, 0, 0, 0, 335,
	0, 336, 0, 0, 1065, 337, 338, 557, 558, 339,
	340, 0, 341, 559, 0, 560, 342, 0, 343, 344,
	345, 346, 347, 561, 562, 563, 408, 1067, 348, 349,
	0, 350, 351, 352, 353, 0, 0, 0, 0, 354,
	355, 357, 0, 1066, 356, 564, 565, 0, 566, 0,
	358, 359, 1068, 567, 1069, 360, 361, 362, 1070, 363,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 0,
	370, 372, 371, 0, 373, 568, 1071, 374, 375, 1072,
	0, 376, 377, 378, 0, 0, 379, 380, 381, 382,
	0, 383, 384, 386, 388, 385, 387, 392, 389, 390,
	391, 394, 0, 393, 1073, 395, 396, 397, 403, 404,
	400, 401, 402, 405, 399, 1074, 398, 0, 0, 1075,
	406, 0, 569, 407, 570, 409, 410, 0, 0, 411,
	0, 0, 0, 413, 414, 415, 0, 0, 416, 417,
	571, 1076, 418, 1077, 572, 419, 420, 412, 421, 422,
	423, 424, 425, 426, 427, 428, 0, 429, 430, 573,
	574, 575, 431, 576, 432, 433, 0, 434, 0, 435,
	436, 437, 438, 439, 440, 441, 577, 443, 442, 444,
	0, 445, 0, 0, 0, 0, 0, 446, 0, 448,
	449, 450, 447, 451, 452, 453, 454, 0, 455, 456,
	457, 1078, 458, 459, 460, 461, 578, 462, 0, 463,
	464, 470, 471, 465, 466, 472, 473, 474, 475, 476,
	0, 478, 479, 477, 480, 481, 482, 0, 483, 467,
	468, 484, 485, 1079, 486, 487, 488, 489, 490, 491,
	579, 0, 492, 0, 493, 494, 495, 496, 469, 497,
	502, 580, 498, 499, 500, 501, 581, 0, 504, 505,
	0, 503, 0, 506, 507, 508, 509, 510, 511, 326,
	512, 0, 513, 582, 583, 584, 585, 0, 520, 0,
	514, 515, 586, 516, 587, 0, 517, 518, 519, 0,
	521, 522, 0, 0, 523, 524, 525, 527, 528, 526,
	529, 0, 530, 0, 0, 531, 532, 533, 588, 589,
	590, 0, 535, 534, 591, 0, 0, 0, 0, 536,
	537, 592, 538, 539, 540, 1301, 0, 1306, 1305, 0,
	0, 0, 0, 1303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 542, 543, 0, 265, 544, 266, 545, 0, 546,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 547,
	548, 549, 0, 273, 274, 550, 0, 1272, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 295, 1064, 296, 297, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 300, 301, 0,
	302, 551, 552, 0, 306, 303, 304, 0, 307, 305,
	0, 308, 309, 310, 0, 0, 311, 312, 313, 0,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 553,
	321, 322, 323, 325, 327, 324, 328, 329, 330, 331,
	554, 555, 0, 246, 0, 0, 0, 0, 0, 332,
	333, 334, 556, 0, 0, 0, 335, 0, 336, 0,
	0, 1065, 337, 338, 557, 558, 339, 340, 0, 341,
	559, 0, 560, 342, 0, 343, 344, 345, 346, 347,
	1300, 562, 563, 408, 1067, 348, 349, 0, 350, 351,
	352, 353, 0, 0, 0, 0, 354, 355, 357, 0,
	1066, 356, 564, 565, 0, 566, 0, 358, 359, 1068,
	567, 1069, 360, 361, 362, 1070, 363, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 0, 370, 372, 371,
	0, 373, 568, 1071, 374, 375, 1072, 0, 376, 377,
	378, 0, 0, 379, 380, 381, 382, 0, 383, 384,
	386, 388, 385, 387, 392, 389, 390, 391, 394, 0,
	393, 1073, 395, 396, 397, 403, 404, 400, 401, 402,
	405, 399, 1074, 398, 0, 0, 1075, 406, 0, 569,
	407, 570, 409, 410, 0, 0, 411, 0, 0, 0,
	413, 414, 415, 0, 0, 416, 417, 571, 1076, 418,
	1077, 572, 419, 420, 412, 421, 422, 423, 424, 425,
	426, 427, 428, 0, 429, 430, 573, 574, 575, 431,
	576, 432, 433, 0, 434, 0, 435, 436, 437, 438,
	439, 440, 441, 577, 443, 442, 444, 0, 445, 0,
	0, 0, 0, 0, 446, 0, 448, 449, 450, 447,
	451, 452, 453, 454, 0, 455, 456, 457, 1078, 458,
	459, 460, 461, 578, 462, 0, 463, 464, 470, 471,
	465, 466, 472, 473, 474, 475, 476, 0, 478, 479,
	477, 480, 481, 482, 0, 483, 467, 468, 484, 485,
	1079, 486, 487, 488, 489, 490, 491, 579, 0, 492,
	0, 493, 494, 495, 496, 469, 497, 502, 580, 498,
	499, 500, 501, 581, 0, 504, 505, 0, 503, 0,
	506, 507, 508, 509, 510, 511, 326, 512, 0, 513,
	582, 583, 584, 585, 0, 520, 0, 514, 515, 586,
	516, 587, 0, 517, 518, 519, 0, 521, 522, 0,
	0, 523, 524, 525, 527, 528, 526, 529, 0, 530,
	0, 0, 531, 532, 533, 588, 589, 590, 0, 535,
	534, 591, 0, 0, 0, 0, 536, 537, 592, 538,
	539, 540, 1306, 1305, 0, 0, 0, 0, 1303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 543, 0, 265,
	544, 266, 545, 0, 546, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 547, 548, 549, 0, 273, 274,
	550, 0, 1272, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 295,
	1064, 296, 297, 0, 0, 0, 0, 0, 0, 0,
	298, 299, 300, 301, 0, 302, 551, 552, 0, 306,
	303, 304, 0, 307, 305, 0, 308, 309, 310, 0,
	0, 311, 312, 313, 0, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 553, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 554, 555, 0, 246, 0,
	0, 0, 0, 0, 332, 333, 334, 556, 0, 0,
	0, 335, 0, 336, 0, 0, 1065, 337, 338, 557,
	558, 339, 340, 0, 341, 559, 0, 560, 342, 0,
	343, 344, 345, 346, 347, 561, 562, 563, 408, 1067,
	348, 349, 0, 350, 351, 352, 353, 0, 0, 0,
	0, 354, 355, 357, 0, 1066, 356, 564, 565, 0,
	566, 0, 358, 359, 1068, 567, 1069, 360, 361, 362,
	1070, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 0, 370, 372, 371, 0, 373, 568, 1071, 374,
	375, 1072, 0, 376, 377, 378, 0, 0, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 1073, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 1074, 398, 0,
	0, 1075, 406, 0, 569, 407, 570, 409, 410, 0,
	0, 411, 0, 0, 0, 413, 414, 415, 0, 0,
	416, 417, 571, 1076, 418, 1077, 572, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 0, 429,
	430, 573, 574, 575, 431, 576, 432, 433, 0, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 577, 443,
	442, 444, 0, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 0,
	455, 456, 457, 1078, 458, 459, 460, 461, 578, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 0, 478, 479, 477, 480, 481, 482, 0,
	483, 467, 468, 484, 485, 1079, 486, 487, 488, 489,
	490, 491, 579, 0, 492, 0, 493, 494, 495, 496,
	469, 497, 502, 580, 498, 499, 500, 501, 581, 0,
	504, 505, 0, 503, 0, 506, 507, 508, 509, 510,
	511, 326, 512, 0, 513, 582, 583, 584, 585, 0,
	520, 0, 514, 515, 586, 516, 587, 0, 517, 518,
	519, 0, 521, 522, 0, 0, 523, 524, 525, 527,
	528, 526, 529, 0, 530, 0, 0, 531, 532, 533,
	588, 589, 590, 0, 535, 534, 591, 1306, 1305, 0,
	0, 536, 537, 592, 538, 539, 540, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 542, 543, 0, 265, 544, 266, 545, 0, 546,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 547,
	548, 549, 0, 273, 274, 550, 0, 1272, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 295, 1064, 296, 297, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 300, 301, 0,
	302, 551, 552, 1868, 306, 303, 304, 0, 307, 305,
	0, 308, 309, 310, 0, 0, 311, 312, 313, 0,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 553,
	321, 322, 323, 325, 327, 324, 328, 329, 330, 331,
	554, 555, 0, 246, 0, 0, 0, 0, 0, 332,
	333, 334, 556, 0, 0, 0, 335, 0, 336, 0,
	0, 1065, 337, 338, 557, 558, 339, 340, 0, 341,
	559, 0, 560, 342, 0, 343, 344, 345, 346, 347,
	561, 562, 563, 408, 1067, 348, 349, 0, 350, 351,
	352, 353, 0, 0, 0, 0, 354, 355, 357, 0,
	1066, 356, 564, 565, 0, 566, 0, 358, 359, 1068,
	567, 1069, 360, 361, 362, 1070, 363, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 0, 370, 372, 371,
	0, 373, 568, 1071, 374, 375, 1072, 0, 376, 377,
	378, 0, 0, 379, 380, 381, 382, 0, 383, 384,
	386, 388, 385, 387, 392, 389, 390, 391, 394, 0,
	393, 1073, 395, 396, 397, 403, 404, 400, 401, 402,
	405, 399, 1074, 398, 0, 0, 1075, 406, 0, 569,
	407, 570, 409, 410, 0, 0, 411, 0, 0, 0,
	413, 414, 415, 0, 0, 416, 417, 571, 1076, 418,
	1077, 572, 419, 420, 412, 421, 422, 423, 424, 425,
	426, 427, 428, 0, 429, 430, 573, 574, 575, 431,
	576, 432, 433, 0, 434, 0, 435, 436, 437, 438,
	439, 440, 441, 577, 443, 442, 444, 0, 445, 0,
	0, 0, 0, 0, 446, 0, 448, 449, 450, 447,
	451, 452, 453, 454, 0, 455, 456, 457, 1078, 458,
	459, 460, 461, 578, 462, 0, 463, 464, 470, 471,
	465, 466, 472, 473, 474, 475, 476, 0, 478, 479,
	477, 480, 481, 482, 0, 483, 467, 468, 484, 485,
	1079, 486, 487, 488, 489, 490, 491, 579, 0, 492,
	0, 493, 494, 495, 496, 469, 497, 502, 580, 498,
	499, 500, 501, 581, 0, 504, 505, 0, 503, 0,
	506, 507, 508, 509, 510, 511, 326, 512, 0, 513,
	582, 583, 584, 585, 0, 520, 0, 514, 515, 586,
	516, 587, 0, 517, 518, 519, 0, 521, 522, 0,
	0, 523, 524, 525, 527, 528, 526, 529, 0, 530,
	0, 0, 531, 532, 533, 588, 589, 590, 0, 535,
	534, 591, 1306, 1305, 0, 0, 536, 537, 592, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 543, 0, 265,
	544, 266, 545, 0, 546, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 547, 548, 549, 0, 273, 274,
	550, 0, 1272, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 295,
	1064, 296, 297, 0, 0, 0, 0, 0, 0, 0,
	298, 299, 300, 301, 0, 302, 551, 552, 0, 306,
	303, 304, 0, 307, 305, 0, 308, 309, 310, 0,
	0, 311, 312, 313, 0, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 553, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 554, 555, 0, 246, 0,
	0, 0, 0, 0, 332, 333, 334, 556, 0, 0,
	0, 335, 0, 336, 0, 0, 1065, 337, 338, 557,
	558, 339, 340, 0, 341, 559, 0, 560, 342, 0,
	343, 344, 345, 346, 347, 561, 562, 563, 408, 1067,
	348, 349, 0, 350, 351, 352, 353, 0, 0, 0,
	0, 354, 355, 357, 0, 1066, 356, 564, 565, 0,
	566, 0, 358, 359, 1068, 567, 1069, 360, 361, 362,
	1070, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 0, 370, 372, 371, 0, 373, 568, 1071, 374,
	375, 1072, 0, 376, 377, 378, 0, 0, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 1073, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 1074, 398, 0,
	0, 1075, 406, 0, 569, 407, 570, 409, 410, 0,
	0, 411, 0, 0, 0, 413, 414, 415, 0, 0,
	416, 417, 571, 1076, 418, 1077, 572, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 0, 429,
	430, 573, 574, 575, 431, 576, 432, 433, 0, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 577, 443,
	442, 444, 0, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 0,
	455, 456, 457, 1078, 458, 459, 460, 461, 578, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 0, 478, 479, 477, 480, 481, 482, 0,
	483, 467, 468, 484, 485, 1079, 486, 487, 488, 489,
	490, 491, 579, 0, 492, 0, 493, 494, 495, 496,
	469, 497, 502, 580, 498, 499, 500, 501, 581, 0,
	504, 505, 0, 503, 0, 506, 507, 508, 509, 510,
	511, 326, 512, 0, 513, 582, 583, 584, 585, 0,
	520, 0, 514, 515, 586, 516, 587, 0, 517, 518,
	519, 0, 521, 522, 0, 0, 523, 524, 525, 527,
	528, 526, 529, 0, 530, 0, 0, 531, 532, 533,
	588, 589, 590, 1306, 535, 534, 591, 0, 0, 0,
	0, 536, 537, 592, 538, 539, 540, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 542, 543, 0,
	265, 544, 266, 545, 0, 546, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 547, 548, 549, 0, 273,
	274, 550, 0, 1272, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	295, 1064, 296, 297, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 300, 301, 0, 302, 551, 552, 0,
	306, 303, 304, 0, 307, 305, 0, 308, 309, 310,
	0, 0, 311, 312, 313, 0, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 553, 321, 322, 323, 325,
	327, 324, 328, 329, 330, 331, 554, 555, 0, 246,
	0, 0, 0, 0, 0, 332, 333, 334, 556, 0,
	0, 0, 335, 0, 336, 0, 0, 1065, 337, 338,
	557, 558, 339, 340, 0, 341, 559, 0, 560, 342,
	0, 343, 344, 345, 346, 347, 561, 562, 563, 408,
	1067, 348, 349, 0, 350, 351, 352, 353, 0, 0,
	0, 0, 354, 355, 357, 0, 1066, 356, 564, 565,
	0, 566, 0, 358, 359, 1068, 567, 1069, 360, 361,
	362, 1070, 363, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 0, 370, 372, 371, 0, 373, 568, 1071,
	374, 375, 1072, 0, 376, 377, 378, 0, 0, 379,
	380, 381, 382, 0, 383, 384, 386, 388, 385, 387,
	392, 389, 390, 391, 394, 0, 393, 1073, 395, 396,
	397, 403, 404, 400, 401, 402, 405, 399, 1074, 398,
	0, 0, 1075, 406, 0, 569, 407, 570, 409, 410,
	0, 0, 411, 0, 0, 0, 413, 414, 415, 0,
	0, 416, 417, 571, 1076, 418, 1077, 572, 419, 420,
	412, 421, 422, 423, 424, 425, 426, 427, 428, 0,
	429, 430, 573, 574, 575, 431, 576, 432, 433, 0,
	434, 0, 435, 436, 437, 438, 439, 440, 441, 577,
	443, 442, 444, 0, 445, 0, 0, 0, 0, 0,
	446, 0, 448, 449, 450, 447, 451, 452, 453, 454,
	0, 455, 456, 457, 1078, 458, 459, 460, 461, 578,
	462, 0, 463, 464, 470, 471, 465, 466, 472, 473,
	474, 475, 476, 0, 478, 479, 477, 480, 481, 482,
	0, 483, 467, 468, 484, 485, 1079, 486, 487, 488,
	489, 490, 491, 579, 0, 492, 0, 493, 494, 495,
	496, 469, 497, 502, 580, 498, 499, 500, 501, 581,
	0, 504, 505, 0, 503, 0, 506, 507, 508, 509,
	510, 511, 326, 512, 0, 513, 582, 583, 584, 585,
	0, 520, 0, 514, 515, 586, 516, 587, 0, 517,
	518, 519, 0, 521, 522, 0, 0, 523, 524, 525,
	527, 528, 526, 529, 0, 530, 0, 0, 531, 532,
	533, 588, 589, 590, 243, 535, 534, 591, 0, 0,
	0, 0, 536, 537, 592, 538, 539, 540, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 542, 543,
	0, 265, 544, 266, 545, 0, 546, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 547, 548, 549, 2515,
	273, 274, 550, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 2512,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	0, 0, 298, 299, 300, 301, 0, 302, 551, 552,
	0, 306, 303, 304, 0, 307, 305, 0, 308, 309,
	310, 0, 0, 311, 312, 313, 0, 314, 315, 0,
	316, 317, 318, 0, 2519, 320, 553, 321, 322, 323,
	325, 327, 324, 328, 329, 330, 331, 554, 555, 0,
	2714, 0, 0, 0, 0, 0, 332, 333, 334, 556,
	0, 0, 0, 335, 0, 336, 2518, 0, 0, 337,
	338, 557, 558, 339, 340, 0, 341, 559, 0, 560,
	342, 0, 343, 344, 345, 346, 347, 561, 562, 563,
	408, 0, 348, 349, 0, 350, 351, 352, 353, 0,
	0, 0, 2711, 354, 355, 357, 0, 0, 356, 564,
	565, 0, 566, 0, 358, 2713, 0, 567, 0, 360,
	361, 362, 0, 363, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 0, 370, 372, 371, 0, 373, 568,
	0, 374, 375, 2710, 0, 376, 377, 378, 0, 0,
	379, 380, 381, 382, 0, 383, 384, 386, 388, 385,
	387, 392, 389, 390, 391, 394, 0, 393, 0, 395,
	396, 397, 403, 404, 400, 401, 402, 405, 399, 0,
	398, 0, 0, 0, 406, 0, 569, 407, 570, 409,
	410, 0, 0, 411, 0, 0, 0, 413, 414, 415,
	0, 0, 416, 417, 571, 0, 418, 0, 572, 419,
	420, 412, 421, 422, 423, 424, 425, 426, 427, 428,
	0, 429, 430, 573, 574, 575, 431, 576, 432, 433,
	2517, 434, 0, 435, 436, 437, 438, 439, 440, 441,
	577, 443, 442, 444, 0, 445, 0, 0, 0, 0,
	0, 446, 0, 448, 449, 450, 447, 451, 452, 453,
	454, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	578, 462, 0, 463, 464, 470, 471, 465, 466, 472,
	473, 474, 475, 476, 0, 478, 479, 477, 480, 481,
	482, 0, 483, 467, 468, 484, 485, 0, 486, 487,
	488, 489, 490, 491, 579, 0, 492, 0, 493, 494,
	495, 496, 469, 497, 502, 580, 498, 499, 500, 501,
	581, 0, 504, 505, 0, 503, 0, 506, 507, 508,
	509, 510, 511, 326, 512, 0, 513, 582, 583, 584,
	585, 0, 520, 0, 514, 515, 586, 516, 587, 0,
	517, 518, 519, 0, 521, 522, 0, 2712, 523, 524,
	525, 527, 528, 526, 529, 0, 530, 0, 0, 531,
	532, 533, 588, 589, 590, 243, 535, 534, 591, 0,
	0, 0, 0, 536, 537, 592, 538, 539, 540, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 542,
	543, 0, 265, 544, 266, 545, 0, 546, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 547, 548, 549,
	2515, 273, 274, 550, 0, 0, 2509, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	2512, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 300, 301, 0, 302, 551,
	552, 0, 306, 303, 304, 0, 307, 305, 0, 308,
	309, 310, 0, 0, 311, 312, 313, 0, 314, 315,
	0, 316, 317, 318, 0, 2519, 320, 553, 321, 322,
	323, 325, 327, 324, 328, 329, 330, 331, 554, 555,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	556, 0, 0, 0, 335, 0, 336, 2518, 0, 0,
	337, 338, 557, 558, 339, 340, 0, 341, 559, 0,
	560, 342, 0, 343, 344, 345, 346, 347, 2508, 562,
	563, 408, 0, 348, 349, 0, 350, 351, 352, 353,
	0, 0, 0, 0, 354, 355, 357, 0, 0, 356,
	564, 565, 0, 566, 0, 358, 359, 0, 567, 0,
	360, 361, 362, 0, 363, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 0, 370, 372, 371, 0, 373,
	568, 0, 374, 375, 0, 0, 376, 377, 378, 0,
	0, 379, 380, 381, 382, 0, 383, 384, 386, 388,
	385, 387, 392, 389, 390, 391, 394, 0, 393, 0,
	395, 396, 397, 403, 404, 400, 401, 402, 405, 399,
	0, 398, 0, 0, 0, 406, 0, 569, 407, 570,
	409, 410, 0, 0, 411, 0, 0, 0, 413, 414,
	415, 0, 0, 416, 417, 571, 0, 418, 0, 572,
	419, 420, 412, 421, 422, 423, 424, 425, 426, 427,
	428, 0, 429, 430, 573, 574, 575, 431, 576, 432,
	433, 2517, 434, 0, 435, 436, 437, 438, 439, 440,
	441, 577, 443, 442, 444, 0, 445, 0, 0, 0,
	0, 0, 446, 0, 448, 449, 450, 447, 451, 452,
	453, 454, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 578, 462, 0, 463, 464, 470, 471, 465, 466,
	472, 473, 474, 475, 476, 0, 478, 479, 477, 480,
	481, 482, 0, 483, 467, 468, 484, 485, 0, 486,
	487, 488, 489, 490, 491, 579, 0, 492, 0, 493,
	494, 495, 496, 469, 497, 502, 580, 498, 499, 500,
	501, 581, 0, 504, 505, 0, 503, 0, 506, 507,
	508, 509, 510, 511, 326, 512, 0, 513, 582, 583,
	584, 585, 0, 520, 0, 514, 515, 586, 516, 587,
	0, 517, 518, 519, 0, 521, 522, 0, 2516, 523,
	524, 525, 527, 528, 526, 529, 0, 530, 0, 0,
	531, 532, 533, 588, 589, 590, 0, 535, 534, 591,
	1572, 0, 243, 0, 536, 537, 592, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 543, 0, 265,
	544, 266, 545, 0, 546, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 547, 548, 549, 0, 273, 274,
	550, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 0, 0,
	298, 299, 300, 301, 0, 302, 551, 552, 0, 306,
	303, 304, 0, 307, 305, 0, 308, 309, 310, 0,
	0, 311, 312, 313, 0, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 553, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 554, 555, 0, 246, 0,
	0, 0, 0, 0, 332, 333, 334, 556, 0, 0,
	0, 335, 0, 336, 0, 0, 0, 337, 338, 557,
	558, 339, 340, 0, 341, 559, 0, 560, 342, 0,
	343, 344, 345, 346, 347, 561, 562, 563, 408, 0,
	348, 349, 0, 350, 351, 352, 353, 0, 0, 0,
	247, 354, 355, 357, 0, 0, 356, 564, 565, 0,
	566, 0, 358, 359, 0, 567, 0, 360, 361, 362,
	0, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 0, 370, 372, 371, 0, 373, 568, 0, 374,
	375, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 0, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 0, 398, 0,
	248, 0, 406, 0, 569, 407, 570, 409, 410, 0,
	0, 411, 0, 0, 0, 413, 414, 415, 0, 0,
	416, 417, 571, 0, 418, 0, 572, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 0, 429,
	430, 573, 574, 575, 431, 576, 432, 433, 0, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 577, 443,
	442, 444, 0, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 578, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 0, 1575, 479, 477, 480, 481, 482, 0,
	483, 467, 468, 484, 485, 0, 486, 487, 488, 489,
	490, 491, 579, 0, 492, 0, 493, 494, 495, 496,
	469, 497, 502, 580, 498, 499, 500, 501, 581, 0,
	504, 505, 0, 503, 1573, 506, 507, 508, 509, 510,
	511, 326, 512, 0, 513, 582, 583, 584, 585, 0,
	520, 0, 514, 515, 586, 516, 587, 0, 517, 518,
	519, 0, 521, 522, 0, 0, 523, 524, 525, 527,
	528, 526, 529, 0, 530, 0, 0, 531, 532, 533,
	588, 589, 590, 0, 1574, 534, 591, 1276, 0, 243,
	0, 536, 537, 592, 538, 539, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 542, 543, 0, 265, 544, 266, 545,
	0, 546, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 547, 548, 549, 0, 273, 274, 550, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 300,
	301, 0, 302, 551, 552, 0, 306, 303, 304, 0,
	307, 305, 0, 308, 309, 310, 0, 0, 311, 312,
	313, 0, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 553, 321, 322, 323, 325, 327, 324, 328, 329,
	330, 331, 554, 555, 0, 246, 0, 0, 0, 0,
	0, 332, 333, 334, 556, 0, 0, 0, 335, 0,
	336, 0, 0, 0, 337, 338, 557, 558, 339, 340,
	0, 341, 559, 0, 560, 342, 0, 343, 344, 345,
	346, 347, 1278, 562, 563, 408, 0, 348, 349, 0,
	350, 351, 352, 353, 0, 0, 0, 247, 354, 355,
	357, 0, 0, 356, 564, 565, 0, 566, 0, 358,
	359, 0, 567, 0, 360, 361, 362, 0, 363, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 0, 370,
	372, 371, 0, 373, 568, 0, 374, 375, 0, 0,
	376, 377, 378, 0, 0, 379, 380, 381, 382, 0,
	383, 384, 386, 388, 385, 387, 392, 389, 390, 391,
	394, 0, 393, 0, 395, 396, 397, 403, 404, 400,
	401, 402, 405, 399, 0, 398, 0, 248, 0, 406,
	0, 569, 407, 570, 409, 410, 0, 0, 411, 0,
	0, 1113, 413, 414, 415, 0, 0, 416, 417, 571,
	0, 418, 0, 572, 419, 420, 412, 421, 422, 423,
	424, 425, 426, 427, 428, 0, 429, 430, 573, 574,
	575, 431, 576, 432, 433, 0, 434, 0, 435, 436,
	437, 438, 439, 440, 441, 577, 443, 442, 444, 0,
	445, 0, 0, 0, 0, 0, 446, 0, 448, 449,
	450, 447, 451, 452, 453, 454, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 578, 462, 0, 463, 464,
	470, 471, 465, 466, 472, 473, 474, 475, 476, 0,
	478, 479, 477, 480, 481, 482, 0, 483, 467, 468,
	484, 485, 0, 486, 487, 488, 489, 490, 491, 579,
	0, 492, 0, 493, 494, 495, 496, 469, 497, 502,
	580, 498, 499, 500, 501, 581, 0, 504, 505, 0,
	503, 0, 506, 507, 508, 509, 510, 511, 326, 512,
	0, 513, 582, 583, 584, 585, 0, 520, 0, 514,
	515, 586, 516, 587, 0, 517, 518, 519, 0, 521,
	522, 0, 0, 523, 524, 525, 527, 528, 526, 529,
	0, 530, 0, 0, 531, 532, 533, 588, 589, 590,
	0, 535, 534, 591, 1273, 0, 243, 0, 536, 537,
	592, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	542, 543, 0, 265, 544, 266, 545, 0, 546, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 547, 548,
	549, 0, 273, 274, 550, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 0, 0, 298, 299, 300, 301, 0, 302,
	551, 552, 0, 306, 303, 304, 0, 307, 305, 0,
	308, 309, 310, 0, 0, 311, 312, 313, 0, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 553, 321,
	322, 323, 325, 327, 324, 328, 329, 330, 331, 554,
	555, 0, 246, 0, 0, 0, 0, 0, 332, 333,
	334, 556, 0, 0, 0, 335, 0, 336, 0, 0,
	0, 337, 338, 557, 558, 339, 340, 0, 341, 559,
	0, 560, 342, 0, 343, 344, 345, 346, 347, 1275,
	562, 563, 408, 0, 348, 349, 0, 350, 351, 352,
	353, 0, 0, 0, 247, 354, 355, 357, 0, 0,
	356, 564, 565, 0, 566, 0, 358, 359, 0, 567,
	0, 360, 361, 362, 0, 363, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 0, 370, 372, 371, 0,
	373, 568, 0, 374, 375, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 381, 382, 0, 383, 384, 386,
	388, 385, 387, 392, 389, 390, 391, 394, 0, 393,
	0, 395, 396, 397, 403, 404, 400, 401, 402, 405,
	399, 0, 398, 0, 248, 0, 406, 0, 569, 407,
	570, 409, 410, 0, 0, 411, 0, 0, 1113, 413,
	414, 415, 0, 0, 416, 417, 571, 0, 418, 0,
	572, 419, 420, 412, 421, 422, 423, 424, 425, 426,
	427, 428, 0, 429, 430, 573, 574, 575, 431, 576,
	432, 433, 0, 434, 0, 435, 436, 437, 438, 439,
	440, 441, 577, 443, 442, 444, 0, 445, 0, 0,
	0, 0, 0, 446, 0, 448, 449, 450, 447, 451,
	452, 453, 454, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 578, 462, 0, 463, 464, 470, 471, 465,
	466, 472, 473, 474, 475, 476, 0, 478, 479, 477,
	480, 481, 482, 0, 483, 467, 468, 484, 485, 0,
	486, 487, 488, 489, 490, 491, 579, 0, 492, 0,
	493, 494, 495, 496, 469, 497, 502, 580, 498, 499,
	500, 501, 581, 0, 504, 505, 0, 503, 0, 506,
	507, 508, 509, 510, 511, 326, 512, 0, 513, 582,
	583, 584, 585, 0, 520, 0, 514, 515, 586, 516,
	587, 0, 517, 518, 519, 0, 521, 522, 0, 0,
	523, 524, 525, 527, 528, 526, 529, 0, 530, 0,
	0, 531, 532, 533, 588, 589, 590, 0, 535, 534,
	591, 1179, 0, 243, 0, 536, 537, 592, 538, 539,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 542, 543, 0,
	265, 544, 266, 545, 0, 546, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 547, 548, 549, 0, 273,
	274, 550, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 300, 301, 0, 302, 551, 552, 0,
	306, 303, 304, 0, 307, 305, 0, 308, 309, 310,
	0, 0, 311, 312, 313, 0, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 553, 321, 322, 323, 325,
	327, 324, 328, 329, 330, 331, 554, 555, 0, 246,
	0, 0, 0, 0, 0, 332, 333, 334, 556, 0,
	0, 0, 335, 0, 336, 0, 0, 0, 337, 338,
	557, 558, 339, 340, 0, 341, 559, 0, 560, 342,
	0, 343, 344, 345, 346, 347, 1181, 562, 563, 408,
	0, 348, 349, 0, 350, 351, 352, 353, 0, 0,
	0, 247, 354, 355, 357, 0, 0, 356, 564, 565,
	0, 566, 0, 358, 359, 0, 567, 0, 360, 361,
	362, 0, 363, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 0, 370, 372, 371, 0, 373, 568, 0,
	374, 375, 0, 0, 376, 377, 378, 0, 0, 379,
	380, 381, 382, 0, 383, 384, 386, 388, 385, 387,
	392, 389, 390, 391, 394, 0, 393, 0, 395, 396,
	397, 403, 404, 400, 401, 402, 405, 399, 0, 398,
	0, 248, 0, 406, 0, 569, 407, 570, 409, 410,
	0, 0, 411, 0, 0, 1113, 413, 414, 415, 0,
	0, 416, 417, 571, 0, 418, 0, 572, 419, 420,
	412, 421, 422, 423, 424, 425, 426, 427, 428, 0,
	429, 430, 573, 574, 575, 431, 576, 432, 433, 0,
	434, 0, 435, 436, 437, 438, 439, 440, 441, 577,
	443, 442, 444, 0, 445, 0, 0, 0, 0, 0,
	446, 0, 448, 449, 450, 447, 451, 452, 453, 454,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 578,
	462, 0, 463, 464, 470, 471, 465, 466, 472, 473,
	474, 475, 476, 0, 478, 479, 477, 480, 481, 482,
	0, 483, 467, 468, 484, 485, 0, 486, 487, 488,
	489, 490, 491, 579, 0, 492, 0, 493, 494, 495,
	496, 469, 497, 502, 580, 498, 499, 500, 501, 581,
	0, 504, 505, 0, 503, 0, 506, 507, 508, 509,
	510, 511, 326, 512, 0, 513, 582, 583, 584, 585,
	0, 520, 0, 514, 515, 586, 516, 587, 0, 517,
	518, 519, 0, 521, 522, 0, 0, 523, 524, 525,
	527, 528, 526, 529, 0, 530, 0, 0, 531, 532,
	533, 588, 589, 590, 0, 535, 534, 591, 624, 0,
	243, 0, 536, 537, 592, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	623, 253, 254, 613, 255, 256, 0, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 542, 543, 0, 265, 544, 266,
	545, 0, 546, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 547, 548, 549, 0, 273, 274, 550, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 616, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 0, 0, 298, 299,
	300, 301, 0, 302, 551, 552, 0, 306, 303, 304,
	0, 307, 305, 0, 308, 309, 310, 0, 0, 311,
	312, 313, 0, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 553, 321, 322, 323, 325, 327, 324, 328,
	329, 330, 331, 554, 555, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 556, 0, 0, 0, 335,
	0, 336, 0, 0, 0, 337, 338, 557, 558, 339,
	340, 617, 341, 559, 0, 560, 342, 0, 343, 344,
	345, 346, 347, 561, 562, 563, 408, 0, 348, 349,
	0, 350, 351, 352, 353, 0, 0, 0, 0, 354,
	355, 357, 0, 0, 356, 564, 565, 0, 566, 0,
	358, 359, 0, 567, 0, 360, 361, 362, 0, 363,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 0,
	370, 372, 371, 0, 373, 568, 0, 374, 375, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 381, 382,
	0, 383, 384, 386, 388, 385, 387, 392, 389, 390,
	391, 394, 0, 393, 0, 395, 396, 397, 403, 404,
	400, 401, 402, 405, 399, 0, 398, 0, 0, 0,
	406, 0, 569, 407, 570, 409, 410, 0, 0, 411,
	0, 0, 0, 413, 414, 415, 0, 0, 416, 417,
	571, 0, 418, 0, 572, 419, 420, 412, 421, 422,
	423, 424, 425, 426, 427, 428, 0, 429, 430, 573,
	574, 575, 431, 576, 432, 433, 0, 434, 0, 435,
	436, 437, 438, 439, 440, 441, 577, 443, 442, 444,
	0, 445, 0, 0, 0, 0, 0, 446, 0, 448,
	449, 450, 447, 451, 452, 453, 454, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 578, 462, 0, 463,
	464, 470, 471, 465, 466, 472, 473, 474, 475, 476,
	618, 478, 479, 477, 480, 481, 482, 0, 483, 467,
	468, 484, 485, 0, 486, 487, 488, 489, 490, 491,
	579, 0, 492, 0, 493, 494, 495, 496, 469, 497,
	502, 580, 498, 499, 500, 501, 581, 0, 504, 505,
	0, 503, 0, 506, 507, 508, 509, 510, 511, 326,
	512, 0, 513, 582, 583, 584, 585, 0, 520, 0,
	514, 515, 586, 516, 587, 0, 517, 518, 519, 0,
	521, 522, 0, 0, 523, 524, 525, 527, 528, 526,
	529, 0, 530, 0, 0, 531, 532, 533, 588, 589,
	590, 0, 535, 534, 591, 612, 0, 243, 0, 536,
	537, 592, 538, 539, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	613, 255, 256, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 542, 543, 0, 265, 544, 266, 545, 0, 546,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 547,
	548, 549, 0, 273, 274, 550, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 616, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 300, 301, 0,
	302, 551, 552, 0, 306, 303, 304, 0, 307, 305,
	0, 308, 309, 310, 0, 0, 311, 312, 313, 0,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 553,
	321, 322, 323, 325, 327, 324, 328, 329, 330, 331,
	554, 555, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 556, 0, 0, 0, 335, 0, 336, 0,
	0, 0, 337, 338, 557, 558, 339, 340, 617, 341,
	559, 0, 560, 342, 0, 343, 344, 345, 346, 347,
	561, 562, 563, 408, 0, 348, 349, 0, 350, 351,
	352, 353, 0, 0, 0, 0, 354, 355, 357, 0,
	0, 356, 564, 565, 0, 566, 0, 358, 359, 0,
	567, 0, 360, 361, 362, 0, 363, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 0, 370, 372, 371,
	0, 373, 568, 0, 374, 375, 0, 0, 376, 377,
	378, 0, 0, 379, 380, 381, 382, 0, 383, 384,
	386, 388, 385, 387, 392, 389, 390, 391, 394, 0,
	393, 0, 395, 396, 397, 403, 404, 400, 401, 402,
	405, 399, 0, 398, 0, 0, 0, 406, 0, 569,
	407, 570, 409, 410, 0, 0, 411, 0, 0, 0,
	413, 414, 415, 0, 0, 416, 417, 571, 0, 418,
	0, 572, 419, 420, 412, 421, 422, 423, 424, 425,
	426, 427, 428, 0, 429, 430, 573, 574, 575, 431,
	576, 432, 433, 0, 434, 0, 435, 436, 437, 438,
	439, 440, 441, 577, 443, 442, 444, 0, 445, 0,
	0, 0, 0, 0, 446, 0, 448, 449, 450, 447,
	451, 452, 453, 454, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 578, 462, 0, 463, 464, 470, 471,
	465, 466, 472, 473, 474, 475, 476, 618, 478, 479,
	477, 480, 481, 482, 0, 483, 467, 468, 484, 485,
	0, 486, 487, 488, 489, 490, 491, 579, 0, 492,
	0, 493, 494, 495, 496, 469, 497, 502, 580, 498,
	499, 500, 501, 581, 0, 504, 505, 0, 503, 0,
	506, 507, 508, 509, 510, 511, 326, 512, 0, 513,
	582, 583, 584, 585, 0, 520, 0, 514, 515, 586,
	516, 587, 0, 517, 518, 519, 0, 521, 522, 0,
	0, 523, 524, 525, 527, 528, 526, 529, 0, 530,
	0, 0, 531, 532, 533, 588, 589, 590, 243, 535,
	534, 591, 0, 0, 0, 0, 536, 537, 592, 538,
	539, 540, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 541,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 542, 543, 0, 265, 544, 266, 545, 0,
	546, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	547, 548, 549, 0, 273, 274, 550, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 0, 0, 298, 299, 300, 301,
	0, 302, 551, 552, 0, 306, 303, 304, 0, 307,
	305, 0, 308, 309, 310, 0, 0, 311, 312, 313,
	0, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	553, 321, 322, 323, 325, 327, 324, 328, 329, 330,
	331, 554, 555, 0, 246, 0, 0, 0, 0, 0,
	332, 333, 334, 556, 0, 0, 0, 335, 0, 336,
	0, 0, 0, 337, 338, 557, 558, 339, 340, 0,
	341, 559, 0, 560, 342, 0, 343, 344, 345, 346,
	347, 561, 562, 563, 408, 0, 348, 349, 0, 350,
	351, 352, 353, 0, 0, 0, 247, 354, 355, 357,
	0, 0, 356, 564, 565, 0, 566, 0, 358, 359,
	0, 567, 0, 360, 361, 362, 0, 363, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 0, 370, 372,
	371, 0, 373, 568, 0, 374, 375, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 381, 382, 0, 383,
	384, 386, 388, 385, 387, 392, 389, 390, 391, 394,
	0, 393, 0, 395, 396, 397, 403, 404, 400, 401,
	402, 405, 399, 0, 398, 0, 248, 0, 406, 0,
	569, 407, 570, 409, 410, 0, 0, 411, 0, 0,
	1113, 413, 414, 415, 0, 0, 416, 417, 571, 0,
	418, 0, 572, 419, 420, 412, 421, 422, 423, 424,
	425, 426, 427, 428, 0, 429, 430, 573, 574, 575,
	431, 576, 432, 433, 0, 434, 0, 435, 436, 437,
	438, 439, 440, 441, 577, 443, 442, 444, 0, 445,
	0, 0, 0, 0, 0, 446, 0, 448, 449, 450,
	447, 451, 452, 453, 454, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 578, 462, 0, 463, 464, 470,
	471, 465, 466, 472, 473, 474, 475, 476, 0, 478,
	479, 477, 480, 481, 482, 0, 483, 467, 468, 484,
	485, 0, 486, 487, 488, 489, 490, 491, 579, 0,
	492, 0, 493, 494, 495, 496, 469, 497, 502, 580,
	498, 499, 500, 501, 581, 0, 504, 505, 0, 503,
	0, 506, 507, 508, 509, 510, 511, 326, 512, 0,
	513, 582, 583, 584, 585, 0, 520, 0, 514, 515,
	586, 516, 587, 0, 517, 518, 519, 0, 521, 522,
	0, 0, 523, 524, 525, 527, 528, 526, 529, 0,
	530, 0, 0, 531, 532, 533, 588, 589, 590, 243,
	535, 534, 591, 0, 0, 0, 0, 536, 537, 592,
	538, 539, 540, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 542, 543, 0, 265, 544, 266, 545,
	0, 546, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 547, 548, 549, 0, 273, 274, 550, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 300,
	301, 0, 302, 551, 552, 0, 306, 303, 304, 0,
	307, 305, 0, 308, 309, 310, 0, 0, 311, 312,
	313, 0, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 553, 321, 322, 323, 325, 327, 324, 328, 329,
	330, 331, 554, 555, 0, 246, 0, 0, 0, 0,
	0, 332, 333, 334, 556, 0, 0, 0, 335, 0,
	336, 0, 0, 0, 337, 338, 557, 558, 339, 340,
	0, 341, 559, 0, 560, 342, 0, 343, 344, 345,
	346, 347, 561, 562, 563, 408, 0, 348, 349, 0,
	350, 351, 352, 353, 0, 0, 0, 247, 354, 355,
	357, 0, 0, 356, 564, 565, 0, 566, 0, 358,
	359, 0, 567, 0, 360, 361, 362, 0, 363, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 0, 370,
	372, 371, 0, 373, 568, 0, 374, 375, 0, 0,
	376, 377, 378, 0, 0, 379, 380, 381, 382, 0,
	383, 384, 386, 388, 385, 387, 392, 389, 390, 391,
	394, 0, 393, 0, 395, 396, 397, 403, 404, 400,
	401, 402, 405, 399, 3067, 398, 0, 248, 0, 406,
	0, 569, 407, 570, 409, 410, 0, 0, 411, 0,
	0, 0, 413, 414, 415, 0, 0, 416, 417, 571,
	0, 418, 0, 572, 419, 420, 412, 421, 422, 423,
	424, 425, 426, 427, 428, 0, 429, 430, 573, 574,
	575, 431, 576, 432, 433, 0, 434, 0, 435, 436,
	437, 438, 439, 440, 441, 577, 443, 442, 444, 0,
	445, 0, 0, 0, 0, 0, 446, 0, 448, 449,
	450, 447, 451, 452, 453, 454, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 578, 462, 0, 463, 464,
	470, 471, 465, 466, 472, 473, 474, 475, 476, 0,
	478, 479, 477, 480, 481, 482, 0, 483, 467, 468,
	484, 485, 0, 486, 487, 488, 489, 490, 491, 579,
	0, 492, 0, 493, 494, 495, 496, 469, 497, 502,
	580, 498, 499, 500, 501, 581, 0, 504, 505, 0,
	503, 0, 506, 507, 508, 509, 510, 511, 326, 512,
	0, 513, 582, 583, 584, 585, 0, 520, 0, 514,
	515, 586, 516, 587, 0, 517, 518, 519, 0, 521,
	522, 0, 0, 523, 524, 525, 527, 528, 526, 529,
	0, 530, 0, 0, 531, 532, 533, 588, 589, 590,
	0, 535, 534, 591, 2643, 0, 243, 0, 536, 537,
	592, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	542, 543, 0, 265, 544, 266, 545, 0, 546, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 547, 548,
	549, 0, 273, 274, 550, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 0, 0, 298, 299, 300, 301, 0, 302,
	551, 552, 0, 306, 303, 304, 0, 307, 305, 0,
	308, 309, 310, 0, 0, 311, 312, 313, 0, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 553, 321,
	322, 323, 325, 327, 324, 328, 329, 330, 331, 554,
	555, 0, 246, 0, 0, 0, 0, 0, 332, 333,
	334, 556, 0, 0, 0, 335, 0, 336, 0, 0,
	0, 337, 338, 557, 558, 339, 340, 0, 341, 559,
	0, 560, 342, 0, 343, 344, 345, 346, 347, 2642,
	562, 563, 408, 0, 348, 349, 0, 350, 351, 352,
	353, 0, 0, 0, 247, 354, 355, 357, 0, 0,
	356, 564, 565, 0, 566, 0, 358, 359, 0, 567,
	0, 360, 361, 362, 0, 363, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 0, 370, 372, 371, 0,
	373, 568, 0, 374, 375, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 381, 382, 0, 383, 384, 386,
	388, 385, 387, 392, 389, 390, 391, 394, 0, 393,
	0, 395, 396, 397, 403, 404, 400, 401, 402, 405,
	399, 0, 398, 0, 248, 0, 406, 0, 569, 407,
	570, 409, 410, 0, 0, 411, 0, 0, 0, 413,
	414, 415, 0, 0, 416, 417, 571, 0, 418, 0,
	572, 419, 420, 412, 421, 422, 423, 424, 425, 426,
	427, 428, 0, 429, 430, 573, 574, 575, 431, 576,
	432, 433, 0, 434, 0, 435, 436, 437, 438, 439,
	440, 441, 577, 443, 442, 444, 0, 445, 0, 0,
	0, 0, 0, 446, 0, 448, 449, 450, 447, 451,
	452, 453, 454, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 578, 462, 0, 463, 464, 470, 471, 465,
	466, 472, 473, 474, 475, 476, 0, 478, 479, 477,
	480, 481, 482, 0, 483, 467, 468, 484, 485, 0,
	486, 487, 488, 489, 490, 491, 579, 0, 492, 0,
	493, 494, 495, 496, 469, 497, 502, 580, 498, 499,
	500, 501, 581, 0, 504, 505, 0, 503, 0, 506,
	507, 508, 509, 510, 511, 326, 512, 0, 513, 582,
	583, 584, 585, 0, 520, 0, 514, 515, 586, 516,
	587, 0, 517, 518, 519, 0, 521, 522, 0, 0,
	523, 524, 525, 527, 528, 526, 529, 0, 530, 0,
	0, 531, 532, 533, 588, 589, 590, 0, 535, 534,
	591, 2093, 0, 243, 0, 536, 537, 592, 538, 539,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 542, 543, 0,
	265, 544, 266, 545, 0, 546, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 547, 548, 549, 0, 273,
	274, 550, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 300, 301, 0, 302, 551, 552, 0,
	306, 303, 304, 0, 307, 305, 0, 308, 309, 310,
	0, 0, 311, 312, 313, 0, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 553, 321, 322, 323, 325,
	327, 324, 328, 329, 330, 331, 554, 555, 0, 246,
	0, 0, 0, 0, 0, 332, 333, 334, 556, 0,
	0, 0, 335, 0, 336, 0, 0, 0, 337, 338,
	557, 558, 339, 340, 0, 341, 559, 0, 560, 342,
	0, 343, 344, 345, 346, 347, 561, 562, 563, 408,
	0, 348, 349, 0, 350, 351, 352, 353, 0, 0,
	0, 247, 354, 355, 357, 0, 0, 356, 564, 565,
	0, 566, 0, 358, 359, 0, 567, 0, 360, 361,
	362, 0, 363, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 0, 370, 372, 371, 0, 373, 568, 0,
	374, 375, 0, 0, 376, 377, 378, 0, 0, 379,
	380, 381, 382, 0, 383, 384, 386, 388, 385, 387,
	392, 389, 390, 391, 394, 0, 393, 0, 395, 396,
	397, 403, 404, 400, 401, 402, 405, 399, 0, 398,
	0, 248, 0, 406, 0, 569, 407, 570, 409, 410,
	0, 0, 411, 0, 0, 0, 413, 414, 415, 0,
	0, 416, 417, 571, 0, 418, 0, 572, 419, 420,
	412, 421, 422, 423, 424, 425, 426, 427, 428, 0,
	429, 430, 573, 574, 575, 431, 576, 432, 433, 0,
	434, 0, 435, 436, 437, 438, 439, 440, 441, 577,
	443, 442, 444, 0, 445, 0, 0, 0, 0, 0,
	446, 0, 448, 449, 450, 447, 451, 452, 453, 454,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 578,
	462, 0, 463, 464, 470, 471, 465, 466, 472, 473,
	474, 475, 476, 0, 478, 479, 477, 480, 481, 482,
	0, 483, 467, 468, 484, 485, 0, 486, 487, 488,
	489, 490, 491, 579, 0, 492, 0, 493, 494, 495,
	496, 469, 497, 502, 580, 498, 499, 500, 501, 581,
	0, 504, 505, 0, 503, 0, 506, 507, 508, 509,
	510, 511, 326, 512, 0, 513, 582, 583, 584, 585,
	0, 520, 0, 514, 515, 586, 516, 587, 0, 517,
	518, 519, 0, 521, 522, 0, 0, 523, 524, 525,
	527, 528, 526, 529, 0, 530, 0, 0, 531, 532,
	533, 588, 589, 590, 243, 535, 534, 591, 0, 0,
	0, 0, 536, 537, 592, 538, 539, 540, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 542, 543,
	0, 265, 544, 266, 545, 0, 546, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 547, 548, 549, 0,
	273, 274, 550, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	0, 0, 298, 299, 300, 301, 0, 302, 551, 552,
	0, 306, 303, 304, 0, 307, 305, 0, 308, 309,
	310, 0, 0, 311, 312, 313, 0, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 553, 321, 322, 323,
	325, 327, 324, 328, 329, 330, 331, 554, 555, 0,
	246, 0, 0, 0, 0, 0, 332, 333, 334, 556,
	0, 0, 0, 335, 0, 336, 0, 0, 0, 337,
	338, 557, 558, 339, 340, 0, 341, 559, 0, 560,
	342, 0, 343, 344, 345, 346, 347, 561, 562, 563,
	408, 0, 348, 349, 0, 350, 351, 352, 353, 0,
	0, 0, 247, 354, 355, 357, 0, 0, 356, 564,
	565, 0, 566, 0, 358, 359, 0, 567, 0, 360,
	361, 362, 0, 363, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 0, 370, 372, 371, 0, 373, 568,
	0, 374, 375, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 381, 382, 0, 383, 384, 386, 388, 385,
	387, 392, 389, 390, 391, 394, 0, 393, 0, 395,
	396, 397, 403, 404, 400, 401, 402, 405, 399, 0,
	398, 0, 248, 0, 406, 0, 569, 407, 570, 409,
	410, 0, 0, 411, 0, 0, 0, 413, 414, 415,
	0, 0, 416, 417, 571, 0, 418, 0, 572, 419,
	420, 412, 421, 422, 423, 424, 425, 426, 427, 428,
	0, 429, 430, 573, 574, 575, 431, 576, 432, 433,
	0, 434, 0, 435, 436, 437, 438, 439, 440, 441,
	577, 443, 442, 444, 0, 445, 0, 0, 0, 0,
	0, 446, 0, 448, 449, 450, 447, 451, 452, 453,
	454, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	578, 462, 0, 463, 464, 470, 471, 465, 466, 472,
	473, 474, 475, 476, 0, 478, 479, 477, 480, 481,
	482, 0, 483, 467, 468, 484, 485, 0, 486, 487,
	488, 489, 490, 491, 579, 0, 492, 0, 493, 494,
	495, 496, 469, 497, 502, 580, 498, 499, 500, 501,
	581, 0, 504, 505, 0, 503, 2010, 506, 507, 508,
	509, 510, 511, 326, 512, 0, 513, 582, 583, 584,
	585, 0, 520, 0, 514, 515, 586, 516, 587, 0,
	517, 518, 519, 0, 521, 522, 0, 0, 523, 524,
	525, 527, 528, 526, 529, 0, 530, 0, 0, 531,
	532, 533, 588, 589, 590, 0, 535, 534, 591, 2015,
	0, 243, 0, 536, 537, 592, 538, 539, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 542, 543, 0, 265, 544,
	266, 545, 0, 546, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 547, 548, 549, 0, 273, 274, 550,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 300, 301, 0, 302, 551, 552, 0, 306, 303,
	304, 0, 307, 305, 0, 308, 309, 310, 0, 0,
	311, 312, 313, 0, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 553, 321, 322, 323, 325, 327, 324,
	328, 329, 330, 331, 554, 555, 0, 246, 0, 0,
	0, 0, 0, 332, 333, 334, 556, 0, 0, 0,
	335, 0, 336, 0, 0, 0, 337, 338, 557, 558,
	339, 340, 0, 341, 559, 0, 560, 342, 0, 343,
	344, 345, 346, 347, 2014, 562, 563, 408, 0, 348,
	349, 0, 350, 351, 352, 353, 0, 0, 0, 247,
	354, 355, 357, 0, 0, 356, 564, 565, 0, 566,
	0, 358, 359, 0, 567, 0, 360, 361, 362, 0,
	363, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	0, 370, 372, 371, 0, 373, 568, 0, 374, 375,
	0, 0, 376, 377, 378, 0, 0, 379, 380, 381,
	382, 0, 383, 384, 386, 388, 385, 387, 392, 389,
	390, 391, 394, 0, 393, 0, 395, 396, 397, 403,
	404, 400, 401, 402, 405, 399, 0, 398, 0, 248,
	0, 406, 0, 569, 407, 570, 409, 410, 0, 0,
	411, 0, 0, 0, 413, 414, 415, 0, 0, 416,
	417, 571, 0, 418, 0, 572, 419, 420, 412, 421,
	422, 423, 424, 425, 426, 427, 428, 0, 429, 430,
	573, 574, 575, 431, 576, 432, 433, 0, 434, 0,
	435, 436, 437, 438, 439, 440, 441, 577, 443, 442,
	444, 0, 445, 0, 0, 0, 0, 0, 446, 0,
	448, 449, 450, 447, 451, 452, 453, 454, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 578, 462, 0,
	463, 464, 470, 471, 465, 466, 472, 473, 474, 475,
	476, 0, 478, 479, 477, 480, 481, 482, 0, 483,
	467, 468, 484, 485, 0, 486, 487, 488, 489, 490,
	491, 579, 0, 492, 0, 493, 494, 495, 496, 469,
	497, 502, 580, 498, 499, 500, 501, 581, 0, 504,
	505, 0, 503, 0, 506, 507, 508, 509, 510, 511,
	326, 512, 0, 513, 582, 583, 584, 585, 0, 520,
	0, 514, 515, 586, 516, 587, 0, 517, 518, 519,
	0, 521, 522, 0, 0, 523, 524, 525, 527, 528,
	526, 529, 0, 530, 0, 0, 531, 532, 533, 588,
	589, 590, 0, 535, 534, 591, 2003, 0, 243, 0,
	536, 537, 592, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 541,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 542, 543, 0, 265, 544, 266, 545, 0,
	546, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	547, 548, 549, 0, 273, 274, 550, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 0, 0, 298, 299, 300, 301,
	0, 302, 551, 552, 0, 306, 303, 304, 0, 307,
	305, 0, 308, 309, 310, 0, 0, 311, 312, 313,
	0, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	553, 321, 322, 323, 325, 327, 324, 328, 329, 330,
	331, 554, 555, 0, 246, 0, 0, 0, 0, 0,
	332, 333, 334, 556, 0, 0, 0, 335, 0, 336,
	0, 0, 0, 337, 338, 557, 558, 339, 340, 0,
	341, 559, 0, 560, 342, 0, 343, 344, 345, 346,
	347, 2005, 562, 563, 408, 0, 348, 349, 0, 350,
	351, 352, 353, 0, 0, 0, 247, 354, 355, 357,
	0, 0, 356, 564, 565, 0, 566, 0, 358, 359,
	0, 567, 0, 360, 361, 362, 0, 363, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 0, 370, 372,
	371, 0, 373, 568, 0, 374, 375, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 381, 382, 0, 383,
	384, 386, 388, 385, 387, 392, 389, 390, 391, 394,
	0, 393, 0, 395, 396, 397, 403, 404, 400, 401,
	402, 405, 399, 0, 398, 0, 248, 0, 406, 0,
	569, 407, 570, 409, 410, 0, 0, 411, 0, 0,
	0, 413, 414, 415, 0, 0, 416, 417, 571, 0,
	418, 0, 572, 419, 420, 412, 421, 422, 423, 424,
	425, 426, 427, 428, 0, 429, 430, 573, 574, 575,
	431, 576, 432, 433, 0, 434, 0, 435, 436, 437,
	438, 439, 440, 441, 577, 443, 442, 444, 0, 445,
	0, 0, 0, 0, 0, 446, 0, 448, 449, 450,
	447, 451, 452, 453, 454, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 578, 462, 0, 463, 464, 470,
	471, 465, 466, 472, 473, 474, 475, 476, 0, 478,
	479, 477, 480, 481, 482, 0, 483, 467, 468, 484,
	485, 0, 486, 487, 488, 489, 490, 491, 579, 0,
	492, 0, 493, 494, 495, 496, 469, 497, 502, 580,
	498, 499, 500, 501, 581, 0, 504, 505, 0, 503,
	0, 506, 507, 508, 509, 510, 511, 326, 512, 0,
	513, 582, 583, 584, 585, 0, 520, 0, 514, 515,
	586, 516, 587, 0, 517, 518, 519, 0, 521, 522,
	0, 0, 523, 524, 525, 527, 528, 526, 529, 0,
	530, 0, 0, 531, 532, 533, 588, 589, 590, 243,
	535, 534, 591, 0, 0, 0, 0, 536, 537, 592,
	538, 539, 540, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 542, 543, 0, 265, 544, 266, 545,
	0, 546, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 547, 548, 549, 0, 273, 274, 550, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 300,
	301, 0, 302, 551, 552, 0, 306, 303, 304, 0,
	307, 305, 0, 308, 309, 310, 0, 0, 311, 312,
	313, 0, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 553, 321, 322, 323, 325, 327, 324, 328, 329,
	330, 331, 554, 555, 0, 246, 0, 0, 0, 0,
	0, 332, 333, 334, 556, 0, 0, 0, 335, 0,
	336, 0, 0, 0, 337, 338, 557, 558, 339, 340,
	0, 341, 559, 0, 560, 342, 0, 343, 344, 345,
	346, 347, 1974, 562, 563, 408, 0, 348, 349, 0,
	350, 351, 352, 353, 0, 0, 0, 247, 354, 355,
	357, 0, 0, 356, 564, 565, 0, 566, 0, 358,
	359, 0, 567, 0, 360, 361, 362, 0, 363, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 0, 370,
	372, 371, 0, 373, 568, 0, 374, 375, 0, 0,
	376, 377, 378, 0, 0, 379, 380, 381, 382, 0,
	383, 384, 386, 388, 385, 387, 392, 389, 390, 391,
	394, 0, 393, 0, 395, 396, 397, 403, 404, 400,
	401, 402, 405, 399, 0, 398, 0, 248, 0, 406,
	0, 569, 407, 570, 409, 410, 0, 0, 411, 0,
	0, 1113, 413, 414, 415, 0, 0, 416, 417, 571,
	0, 418, 0, 572, 419, 420, 412, 421, 422, 423,
	424, 425, 426, 427, 428, 0, 429, 430, 573, 574,
	575, 431, 576, 432, 433, 0, 434, 0, 435, 436,
	437, 438, 439, 440, 441, 577, 443, 442, 444, 0,
	445, 0, 0, 0, 0, 0, 446, 0, 448, 449,
	450, 447, 451, 452, 453, 454, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 578, 462, 0, 463, 464,
	470, 471, 465, 466, 472, 473, 474, 475, 476, 0,
	478, 479, 477, 480, 481, 482, 0, 483, 467, 468,
	484, 485, 0, 486, 487, 488, 489, 490, 491, 579,
	0, 492, 0, 493, 494, 495, 496, 469, 497, 502,
	580, 498, 499, 500, 501, 581, 0, 504, 505, 0,
	503, 0, 506, 507, 508, 509, 510, 511, 326, 512,
	0, 513, 582, 583, 584, 585, 0, 520, 0, 514,
	515, 586, 516, 587, 0, 517, 518, 519, 0, 521,
	522, 0, 0, 523, 524, 525, 527, 528, 526, 529,
	0, 530, 0, 0, 531, 532, 533, 588, 589, 590,
	0, 535, 534, 591, 1439, 0, 243, 0, 536, 537,
	592, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	542, 543, 0, 265, 544, 266, 545, 0, 546, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 547, 548,
	549, 0, 273, 274, 550, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 0, 0, 298, 299, 300, 301, 0, 302,
	551, 552, 0, 306, 303, 304, 0, 307, 305, 0,
	308, 309, 310, 0, 0, 311, 312, 313, 0, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 553, 321,
	322, 323, 325, 327, 324, 328, 329, 330, 331, 554,
	555, 0, 246, 0, 0, 0, 0, 0, 332, 333,
	334, 556, 0, 0, 0, 335, 0, 336, 0, 0,
	0, 337, 338, 557, 558, 339, 340, 0, 341, 559,
	0, 560, 342, 0, 343, 344, 345, 346, 347, 1438,
	562, 563, 408, 0, 348, 349, 0, 350, 351, 352,
	353, 0, 0, 0, 247, 354, 355, 357, 0, 0,
	356, 564, 565, 0, 566, 0, 358, 359, 0, 567,
	0, 360, 361, 362, 0, 363, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 0, 370, 372, 371, 0,
	373, 568, 0, 374, 375, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 381, 382, 0, 383, 384, 386,
	388, 385, 387, 392, 389, 390, 391, 394, 0, 393,
	0, 395, 396, 397, 403, 404, 400, 401, 402, 405,
	399, 0, 398, 0, 248, 0, 406, 0, 569, 407,
	570, 409, 410, 0, 0, 411, 0, 0, 0, 413,
	414, 415, 0, 0, 416, 417, 571, 0, 418, 0,
	572, 419, 420, 412, 421, 422, 423, 424, 425, 426,
	427, 428, 0, 429, 430, 573, 574, 575, 431, 576,
	432, 433, 0, 434, 0, 435, 436, 437, 438, 439,
	440, 441, 577, 443, 442, 444, 0, 445, 0, 0,
	0, 0, 0, 446, 0, 448, 449, 450, 447, 451,
	452, 453, 454, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 578, 462, 0, 463, 464, 470, 471, 465,
	466, 472, 473, 474, 475, 476, 0, 478, 479, 477,
	480, 481, 482, 0, 483, 467, 468, 484, 485, 0,
	486, 487, 488, 489, 490, 491, 579, 0, 492, 0,
	493, 494, 495, 496, 469, 497, 502, 580, 498, 499,
	500, 501, 581, 0, 504, 505, 0, 503, 0, 506,
	507, 508, 509, 510, 511, 326, 512, 0, 513, 582,
	583, 584, 585, 0, 520, 0, 514, 515, 586, 516,
	587, 0, 517, 518, 519, 0, 521, 522, 0, 0,
	523, 524, 525, 527, 528, 526, 529, 0, 530, 0,
	0, 531, 532, 533, 588, 589, 590, 0, 535, 534,
	591, 1430, 0, 243, 0, 536, 537, 592, 538, 539,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 542, 543, 0,
	265, 544, 266, 545, 0, 546, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 547, 548, 549, 0, 273,
	274, 550, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 300, 301, 0, 302, 551, 552, 0,
	306, 303, 304, 0, 307, 305, 0, 308, 309, 310,
	0, 0, 311, 312, 313, 0, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 553, 321, 322, 323, 325,
	327, 324, 328, 329, 330, 331, 554, 555, 0, 246,
	0, 0, 0, 0, 0, 332, 333, 334, 556, 0,
	0, 0, 335, 0, 336, 0, 0, 0, 337, 338,
	557, 558, 339, 340, 0, 341, 559, 0, 560, 342,
	0, 343, 344, 345, 346, 347, 1429, 562, 563, 408,
	0, 348, 349, 0, 350, 351, 352, 353, 0, 0,
	0, 247, 354, 355, 357, 0, 0, 356, 564, 565,
	0, 566, 0, 358, 359, 0, 567, 0, 360, 361,
	362, 0, 363, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 0, 370, 372, 371, 0, 373, 568, 0,
	374, 375, 0, 0, 376, 377, 378, 0, 0, 379,
	380, 381, 382, 0, 383, 384, 386, 388, 385, 387,
	392, 389, 390, 391, 394, 0, 393, 0, 395, 396,
	397, 403, 404, 400, 401, 402, 405, 399, 0, 398,
	0, 248, 0, 406, 0, 569, 407, 570, 409, 410,
	0, 0, 411, 0, 0, 0, 413, 414, 415, 0,
	0, 416, 417, 571, 0, 418, 0, 572, 419, 420,
	412, 421, 422, 423, 424, 425, 426, 427, 428, 0,
	429, 430, 573, 574, 575, 431, 576, 432, 433, 0,
	434, 0, 435, 436, 437, 438, 439, 440, 441, 577,
	443, 442, 444, 0, 445, 0, 0, 0, 0, 0,
	446, 0, 448, 449, 450, 447, 451, 452, 453, 454,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 578,
	462, 0, 463, 464, 470, 471, 465, 466, 472, 473,
	474, 475, 476, 0, 478, 479, 477, 480, 481, 482,
	0, 483, 467, 468, 484, 485, 0, 486, 487, 488,
	489, 490, 491, 579, 0, 492, 0, 493, 494, 495,
	496, 469, 497, 502, 580, 498, 499, 500, 501, 581,
	0, 504, 505, 0, 503, 0, 506, 507, 508, 509,
	510, 511, 326, 512, 0, 513, 582, 583, 584, 585,
	0, 520, 0, 514, 515, 586, 516, 587, 0, 517,
	518, 519, 0, 521, 522, 0, 0, 523, 524, 525,
	527, 528, 526, 529, 0, 530, 0, 0, 531, 532,
	533, 588, 589, 590, 0, 535, 534, 591, 1427, 0,
	243, 0, 536, 537, 592, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 542, 543, 0, 265, 544, 266,
	545, 0, 546, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 547, 548, 549, 0, 273, 274, 550, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 0, 0, 298, 299,
	300, 301, 0, 302, 551, 552, 0, 306, 303, 304,
	0, 307, 305, 0, 308, 309, 310, 0, 0, 311,
	312, 313, 0, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 553, 321, 322, 323, 325, 327, 324, 328,
	329, 330, 331, 554, 555, 0, 246, 0, 0, 0,
	0, 0, 332, 333, 334, 556, 0, 0, 0, 335,
	0, 336, 0, 0, 0, 337, 338, 557, 558, 339,
	340, 0, 341, 559, 0, 560, 342, 0, 343, 344,
	345, 346, 347, 1426, 562, 563, 408, 0, 348, 349,
	0, 350, 351, 352, 353, 0, 0, 0, 247, 354,
	355, 357, 0, 0, 356, 564, 565, 0, 566, 0,
	358, 359, 0, 567, 0, 360, 361, 362, 0, 363,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 0,
	370, 372, 371, 0, 373, 568, 0, 374, 375, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 381, 382,
	0, 383, 384, 386, 388, 385, 387, 392, 389, 390,
	391, 394, 0, 393, 0, 395, 396, 397, 403, 404,
	400, 401, 402, 405, 399, 0, 398, 0, 248, 0,
	406, 0, 569, 407, 570, 409, 410, 0, 0, 411,
	0, 0, 0, 413, 414, 415, 0, 0, 416, 417,
	571, 0, 418, 0, 572, 419, 420, 412, 421, 422,
	423, 424, 425, 426, 427, 428, 0, 429, 430, 573,
	574, 575, 431, 576, 432, 433, 0, 434, 0, 435,
	436, 437, 438, 439, 440, 441, 577, 443, 442, 444,
	0, 445, 0, 0, 0, 0, 0, 446, 0, 448,
	449, 450, 447, 451, 452, 453, 454, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 578, 462, 0, 463,
	464, 470, 471, 465, 466, 472, 473, 474, 475, 476,
	0, 478, 479, 477, 480, 481, 482, 0, 483, 467,
	468, 484, 485, 0, 486, 487, 488, 489, 490, 491,
	579, 0, 492, 0, 493, 494, 495, 496, 469, 497,
	502, 580, 498, 499, 500, 501, 581, 0, 504, 505,
	0, 503, 0, 506, 507, 508, 509, 510, 511, 326,
	512, 0, 513, 582, 583, 584, 585, 0, 520, 0,
	514, 515, 586, 516, 587, 0, 517, 518, 519, 0,
	521, 522, 0, 0, 523, 524, 525, 527, 528, 526,
	529, 0, 530, 0, 0, 531, 532, 533, 588, 589,
	590, 0, 535, 534, 591, 1422, 0, 243, 0, 536,
	537, 592, 538, 539, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 542, 543, 0, 265, 544, 266, 545, 0, 546,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 547,
	548, 549, 0, 273, 274, 550, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 300, 301, 0,
	302, 551, 552, 0, 306, 303, 304, 0, 307, 305,
	0, 308, 309, 310, 0, 0, 311, 312, 313, 0,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 553,
	321, 322, 323, 325, 327, 324, 328, 329, 330, 331,
	554, 555, 0, 246, 0, 0, 0, 0, 0, 332,
	333, 334, 556, 0, 0, 0, 335, 0, 336, 0,
	0, 0, 337, 338, 557, 558, 339, 340, 0, 341,
	559, 0, 560, 342, 0, 343, 344, 345, 346, 347,
	1421, 562, 563, 408, 0, 348, 349, 0, 350, 351,
	352, 353, 0, 0, 0, 247, 354, 355, 357, 0,
	0, 356, 564, 565, 0, 566, 0, 358, 359, 0,
	567, 0, 360, 361, 362, 0, 363, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 0, 370, 372, 371,
	0, 373, 568, 0, 374, 375, 0, 0, 376, 377,
	378, 0, 0, 379, 380, 381, 382, 0, 383, 384,
	386, 388, 385, 387, 392, 389, 390, 391, 394, 0,
	393, 0, 395, 396, 397, 403, 404, 400, 401, 402,
	405, 399, 0, 398, 0, 248, 0, 406, 0, 569,
	407, 570, 409, 410, 0, 0, 411, 0, 0, 0,
	413, 414, 415, 0, 0, 416, 417, 571, 0, 418,
	0, 572, 419, 420, 412, 421, 422, 423, 424, 425,
	426, 427, 428, 0, 429, 430, 573, 574, 575, 431,
	576, 432, 433, 0, 434, 0, 435, 436, 437, 438,
	439, 440, 441, 577, 443, 442, 444, 0, 445, 0,
	0, 0, 0, 0, 446, 0, 448, 449, 450, 447,
	451, 452, 453, 454, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 578, 462, 0, 463, 464, 470, 471,
	465, 466, 472, 473, 474, 475, 476, 0, 478, 479,
	477, 480, 481, 482, 0, 483, 467, 468, 484, 485,
	0, 486, 487, 488, 489, 490, 491, 579, 0, 492,
	0, 493, 494, 495, 496, 469, 497, 502, 580, 498,
	499, 500, 501, 581, 0, 504, 505, 0, 503, 0,
	506, 507, 508, 509, 510, 511, 326, 512, 0, 513,
	582, 583, 584, 585, 0, 520, 0, 514, 515, 586,
	516, 587, 0, 517, 518, 519, 0, 521, 522, 0,
	0, 523, 524, 525, 527, 528, 526, 529, 0, 530,
	0, 0, 531, 532, 533, 588, 589, 590, 0, 535,
	534, 591, 1379, 0, 243, 0, 536, 537, 592, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 542, 543,
	0, 265, 544, 266, 545, 0, 546, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 547, 548, 549, 0,
	273, 274, 550, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	0, 0, 298, 299, 300, 301, 0, 302, 551, 552,
	0, 306, 303, 304, 0, 307, 305, 0, 308, 309,
	310, 0, 0, 311, 312, 313, 0, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 553, 321, 322, 323,
	325, 327, 324, 328, 329, 330, 331, 554, 555, 0,
	246, 0, 0, 0, 0, 0, 332, 333, 334, 556,
	0, 0, 0, 335, 0, 336, 0, 0, 0, 337,
	338, 557, 558, 339, 340, 0, 341, 559, 0, 560,
	342, 0, 343, 344, 345, 346, 347, 561, 562, 563,
	408, 0, 348, 349, 0, 350, 351, 352, 353, 0,
	0, 0, 247, 354, 355, 357, 0, 0, 356, 564,
	565, 0, 566, 0, 358, 359, 0, 567, 0, 360,
	361, 362, 0, 363, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 0, 370, 372, 371, 0, 373, 568,
	0, 374, 375, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 381, 382, 0, 383, 384, 386, 388, 385,
	387, 392, 389, 390, 391, 394, 0, 393, 0, 395,
	396, 397, 403, 404, 400, 401, 402, 405, 399, 0,
	398, 0, 248, 0, 406, 0, 569, 407, 570, 409,
	410, 0, 0, 411, 0, 0, 0, 413, 414, 415,
	0, 0, 416, 417, 571, 0, 418, 0, 572, 419,
	420, 412, 421, 422, 423, 424, 425, 426, 427, 428,
	0, 429, 430, 573, 574, 575, 431, 576, 432, 433,
	0, 434, 0, 435, 436, 437, 438, 439, 440, 441,
	577, 443, 442, 444, 0, 445, 0, 0, 0, 0,
	0, 446, 0, 448, 449, 450, 447, 451, 452, 453,
	454, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	578, 462, 0, 463, 464, 470, 471, 465, 466, 472,
	473, 474, 475, 476, 0, 478, 479, 477, 480, 481,
	482, 0, 483, 467, 468, 484, 485, 0, 486, 487,
	488, 489, 490, 491, 579, 0, 492, 0, 493, 494,
	495, 496, 469, 497, 502, 580, 498, 499, 500, 501,
	581, 0, 504, 505, 0, 503, 0, 506, 507, 508,
	509, 510, 511, 326, 512, 0, 513, 582, 583, 584,
	585, 0, 520, 0, 514, 515, 586, 516, 587, 0,
	517, 518, 519, 0, 521, 522, 0, 0, 523, 524,
	525, 527, 528, 526, 529, 0, 530, 0, 0, 531,
	532, 533, 588, 589, 590, 0, 535, 534, 591, 1294,
	0, 243, 0, 536, 537, 592, 538, 539, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 542, 543, 0, 265, 544,
	266, 545, 0, 546, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 547, 548, 549, 0, 273, 274, 550,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 300, 301, 0, 302, 551, 552, 0, 306, 303,
	304, 0, 307, 305, 0, 308, 309, 310, 0, 0,
	311, 312, 313, 0, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 553, 321, 322, 323, 325, 327, 324,
	328, 329, 330, 331, 554, 555, 0, 246, 0, 0,
	0, 0, 0, 332, 333, 334, 556, 0, 0, 0,
	335, 0, 336, 0, 0, 0, 337, 338, 557, 558,
	339, 340, 0, 341, 559, 0, 560, 342, 0, 343,
	344, 345, 346, 347, 561, 562, 563, 408, 0, 348,
	349, 0, 350, 351, 352, 353, 0, 0, 0, 247,
	354, 355, 357, 0, 0, 356, 564, 565, 0, 566,
	0, 358, 359, 0, 567, 0, 360, 361, 362, 0,
	363, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	0, 370, 372, 371, 0, 373, 568, 0, 374, 375,
	0, 0, 376, 377, 378, 0, 0, 379, 380, 381,
	382, 0, 383, 384, 386, 388, 385, 387, 392, 389,
	390, 391, 394, 0, 393, 0, 395, 396, 397, 403,
	404, 400, 401, 402, 405, 399, 0, 398, 0, 248,
	0, 406, 0, 569, 407, 570, 409, 410, 0, 0,
	411, 0, 0, 0, 413, 414, 415, 0, 0, 416,
	417, 571, 0, 418, 0, 572, 419, 420, 412, 421,
	422, 423, 424, 425, 426, 427, 428, 0, 429, 430,
	573, 574, 575, 431, 576, 432, 433, 0, 434, 0,
	435, 436, 437, 438, 439, 440, 441, 577, 443, 442,
	444, 0, 445, 0, 0, 0, 0, 0, 446, 0,
	448, 449, 450, 447, 451, 452, 453, 454, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 578, 462, 0,
	463, 464, 470, 471, 465, 466, 472, 473, 474, 475,
	476, 0, 478, 479, 477, 480, 481, 482, 0, 483,
	467, 468, 484, 485, 0, 486, 487, 488, 489, 490,
	491, 579, 0, 492, 0, 493, 494, 495, 496, 469,
	497, 502, 580, 498, 499, 500, 501, 581, 0, 504,
	505, 0, 503, 0, 506, 507, 508, 509, 510, 511,
	326, 512, 0, 513, 582, 583, 584, 585, 0, 520,
	0, 514, 515, 586, 516, 587, 0, 517, 518, 519,
	0, 521, 522, 0, 0, 523, 524, 525, 527, 528,
	526, 529, 0, 530, 0, 0, 531, 532, 533, 588,
	589, 590, 0, 535, 534, 591, 1287, 0, 243, 0,
	536, 537, 592, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 541,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 542, 543, 0, 265, 544, 266, 545, 0,
	546, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	547, 548, 549, 0, 273, 274, 550, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 0, 0, 298, 299, 300, 301,
	0, 302, 551, 552, 0, 306, 303, 304, 0, 307,
	305, 0, 308, 309, 310, 0, 0, 311, 312, 313,
	0, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	553, 321, 322, 323, 325, 327, 324, 328, 329, 330,
	331, 554, 555, 0, 246, 0, 0, 0, 0, 0,
	332, 333, 334, 556, 0, 0, 0, 335, 0, 336,
	0, 0, 0, 337, 338, 557, 558, 339, 340, 0,
	341, 559, 0, 560, 342, 0, 343, 344, 345, 346,
	347, 1289, 562, 563, 408, 0, 348, 349, 0, 350,
	351, 352, 353, 0, 0, 0, 247, 354, 355, 357,
	0, 0, 356, 564, 565, 0, 566, 0, 358, 359,
	0, 567, 0, 360, 361, 362, 0, 363, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 0, 370, 372,
	371, 0, 373, 568, 0, 374, 375, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 381, 382, 0, 383,
	384, 386, 388, 385, 387, 392, 389, 390, 391, 394,
	0, 393, 0, 395, 396, 397, 403, 404, 400, 401,
	402, 405, 399, 0, 398, 0, 248, 0, 406, 0,
	569, 407, 570, 409, 410, 0, 0, 411, 0, 0,
	0, 413, 414, 415, 0, 0, 416, 417, 571, 0,
	418, 0, 572, 419, 420, 412, 421, 422, 423, 424,
	425, 426, 427, 428, 0, 429, 430, 573, 574, 575,
	431, 576, 432, 433, 0, 434, 0, 435, 436, 437,
	438, 439, 440, 441, 577, 443, 442, 444, 0, 445,
	0, 0, 0, 0, 0, 446, 0, 448, 449, 450,
	447, 451, 452, 453, 454, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 578, 462, 0, 463, 464, 470,
	471, 465, 466, 472, 473, 474, 475, 476, 0, 478,
	479, 477, 480, 481, 482, 0, 483, 467, 468, 484,
	485, 0, 486, 487, 488, 489, 490, 491, 579, 0,
	492, 0, 493, 494, 495, 496, 469, 497, 502, 580,
	498, 499, 500, 501, 581, 0, 504, 505, 0, 503,
	0, 506, 507, 508, 509, 510, 511, 326, 512, 0,
	513, 582, 583, 584, 585, 0, 520, 0, 514, 515,
	586, 516, 587, 0, 517, 518, 519, 0, 521, 522,
	0, 0, 523, 524, 525, 527, 528, 526, 529, 0,
	530, 0, 0, 531, 532, 533, 588, 589, 590, 0,
	535, 534, 591, 594, 0, 243, 0, 536, 537, 592,
	538, 539, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 542,
	543, 0, 265, 544, 266, 545, 0, 546, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 547, 548, 549,
	0, 273, 274, 550, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 300, 301, 0, 302, 551,
	552, 0, 306, 303, 304, 0, 307, 305, 0, 308,
	309, 310, 0, 0, 311, 312, 313, 0, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 553, 321, 322,
	323, 325, 327, 324, 328, 329, 330, 331, 554, 555,
	0, 246, 0, 0, 0, 0, 0, 332, 333, 334,
	556, 0, 0, 0, 335, 0, 336, 0, 0, 0,
	337, 338, 557, 558, 339, 340, 0, 341, 559, 0,
	560, 342, 0, 343, 344, 345, 346, 347, 561, 562,
	563, 408, 0, 348, 349, 0, 350, 351, 352, 353,
	0, 0, 0, 247, 354, 355, 357, 0, 0, 356,
	564, 565, 0, 566, 0, 358, 359, 0, 567, 0,
	360, 361, 362, 0, 363, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 0, 370, 372, 371, 0, 373,
	568, 0, 374, 375, 0, 0, 376, 377, 378, 0,
	0, 379, 380, 381, 382, 0, 383, 384, 386, 388,
	385, 387, 392, 389, 390, 391, 394, 0, 393, 0,
	395, 396, 397, 403, 404, 400, 401, 402, 405, 399,
	0, 398, 0, 248, 0, 406, 0, 569, 407, 570,
	409, 410, 0, 0, 411, 0, 0, 0, 413, 414,
	415, 0, 0, 416, 417, 571, 0, 418, 0, 572,
	419, 420, 412, 421, 422, 423, 424, 425, 426, 427,
	428, 0, 429, 430, 573, 574, 575, 431, 576, 432,
	433, 0, 434, 0, 435, 436, 437, 438, 439, 440,
	441, 577, 443, 442, 444, 0, 445, 0, 0, 0,
	0, 0, 446, 0, 448, 449, 450, 447, 451, 452,
	453, 454, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 578, 462, 0, 463, 464, 470, 471, 465, 466,
	472, 473, 474, 475, 476, 0, 478, 479, 477, 480,
	481, 482, 0, 483, 467, 468, 484, 485, 0, 486,
	487, 488, 489, 490, 491, 579, 0, 492, 0, 493,
	494, 495, 496, 469, 497, 502, 580, 498, 499, 500,
	501, 581, 0, 504, 505, 0, 503, 0, 506, 507,
	508, 509, 510, 511, 326, 512, 0, 513, 582, 583,
	584, 585, 0, 520, 0, 514, 515, 586, 516, 587,
	0, 517, 518, 519, 0, 521, 522, 0, 0, 523,
	524, 525, 527, 528, 526, 529, 0, 530, 0, 0,
	531, 532, 533, 588, 589, 590, 0, 535, 534, 591,
	234, 0, 243, 0, 536, 537, 592, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 543, 0, 265,
	544, 266, 545, 0, 546, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 547, 548, 549, 0, 273, 274,
	550, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 0, 0,
	298, 299, 300, 301, 0, 302, 551, 552, 0, 306,
	303, 304, 0, 307, 305, 0, 308, 309, 310, 0,
	0, 311, 312, 313, 0, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 553, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 554, 555, 0, 246, 0,
	0, 0, 0, 0, 332, 333, 334, 556, 0, 0,
	0, 335, 0, 336, 0, 0, 0, 337, 338, 557,
	558, 339, 340, 0, 341, 559, 0, 560, 342, 0,
	343, 344, 345, 346, 347, 561, 562, 563, 408, 0,
	348, 349, 0, 350, 351, 352, 353, 0, 0, 0,
	247, 354, 355, 357, 0, 0, 356, 564, 565, 0,
	566, 0, 358, 359, 0, 567, 0, 360, 361, 362,
	0, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 0, 370, 372, 371, 0, 373, 568, 0, 374,
	375, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 0, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 0, 398, 0,
	248, 0, 406, 0, 569, 407, 570, 409, 410, 0,
	0, 411, 0, 0, 0, 413, 414, 415, 0, 0,
	416, 417, 571, 0, 418, 0, 572, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 0, 429,
	430, 573, 574, 575, 431, 576, 432, 433, 0, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 577, 443,
	442, 444, 0, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 578, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 0, 478, 479, 477, 480, 481, 482, 0,
	483, 467, 468, 484, 485, 0, 486, 487, 488, 489,
	490, 491, 579, 0, 492, 0, 493, 494, 495, 496,
	469, 497, 502, 580, 498, 499, 500, 501, 581, 0,
	504, 505, 0, 503, 0, 506, 507, 508, 509, 510,
	511, 326, 512, 0, 513, 582, 583, 584, 585, 0,
	520, 0, 514, 515, 586, 516, 587, 0, 517, 518,
	519, 0, 521, 522, 0, 0, 523, 524, 525, 527,
	528, 526, 529, 0, 530, 0, 0, 531, 532, 533,
	588, 589, 590, 243, 535, 534, 591, 0, 0, 0,
	0, 536, 537, 592, 538, 539, 540, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 542, 543, 0,
	265, 544, 266, 545, 0, 546, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 547, 548, 549, 0, 273,
	274, 550, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 300, 301, 0, 302, 551, 552, 0,
	306, 303, 304, 0, 307, 305, 0, 308, 309, 310,
	0, 0, 311, 312, 313, 0, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 553, 321, 322, 323, 325,
	327, 324, 328, 329, 330, 331, 554, 555, 0, 246,
	0, 0, 0, 0, 0, 332, 333, 334, 556, 0,
	0, 0, 335, 0, 336, 0, 0, 0, 337, 338,
	557, 558, 339, 340, 0, 341, 559, 0, 560, 342,
	0, 343, 344, 345, 346, 347, 561, 562, 563, 408,
	0, 348, 349, 0, 350, 351, 352, 353, 0, 0,
	0, 247, 354, 355, 357, 0, 0, 356, 564, 565,
	0, 566, 0, 358, 359, 0, 567, 0, 360, 361,
	362, 0, 363, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 0, 370, 372, 371, 0, 373, 568, 0,
	374, 375, 0, 0, 376, 377, 378, 0, 0, 379,
	380, 381, 382, 0, 383, 384, 386, 388, 385, 387,
	392, 389, 390, 391, 394, 0, 393, 0, 395, 396,
	397, 403, 404, 400, 401, 402, 405, 399, 0, 398,
	0, 248, 0, 406, 0, 569, 407, 570, 409, 410,
	0, 0, 411, 0, 0, 0, 413, 414, 415, 0,
	0, 416, 417, 571, 0, 418, 0, 572, 419, 420,
	412, 421, 422, 423, 424, 425, 426, 427, 428, 0,
	429, 430, 573, 574, 575, 431, 576, 432, 433, 0,
	434, 0, 435, 436, 437, 438, 439, 440, 441, 577,
	443, 442, 444, 0, 445, 0, 0, 0, 0, 0,
	446, 0, 448, 449, 450, 447, 451, 452, 453, 454,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 578,
	462, 0, 463, 464, 470, 471, 465, 466, 472, 473,
	474, 475, 476, 0, 478, 479, 477, 480, 481, 482,
	0, 483, 467, 468, 484, 485, 0, 486, 487, 488,
	489, 490, 491, 579, 0, 492, 0, 493, 494, 495,
	496, 469, 497, 502, 580, 498, 499, 500, 501, 581,
	0, 504, 505, 0, 503, 0, 506, 507, 508, 509,
	510, 511, 326, 512, 0, 513, 582, 583, 584, 585,
	0, 520, 0, 514, 515, 586, 516, 587, 0, 517,
	518, 519, 0, 521, 522, 0, 0, 523, 524, 525,
	527, 528, 526, 529, 0, 530, 0, 0, 531, 532,
	533, 588, 589, 590, 243, 535, 534, 591, 0, 0,
	0, 0, 536, 537, 592, 538, 539, 540, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 542, 543,
	0, 265, 544, 266, 545, 0, 546, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 547, 548, 549, 0,
	273, 274, 550, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 616, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	0, 0, 298, 299, 300, 301, 0, 302, 551, 552,
	0, 306, 303, 304, 0, 307, 305, 0, 308, 309,
	310, 0, 0, 311, 312, 313, 0, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 553, 321, 322, 323,
	325, 327, 324, 328, 329, 330, 331, 554, 555, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 556,
	0, 0, 0, 335, 0, 336, 0, 0, 0, 337,
	338, 557, 558, 339, 340, 617, 341, 559, 0, 560,
	342, 0, 343, 344, 345, 346, 347, 561, 562, 563,
	408, 0, 348, 349, 0, 350, 351, 352, 353, 0,
	0, 0, 0, 354, 355, 357, 0, 0, 356, 564,
	565, 0, 566, 0, 358, 359, 0, 567, 0, 360,
	361, 362, 0, 363, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 0, 370, 372, 371, 0, 373, 568,
	0, 374, 375, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 381, 382, 0, 383, 384, 386, 388, 385,
	387, 392, 389, 390, 391, 394, 0, 393, 0, 395,
	396, 397, 403, 404, 400, 401, 402, 405, 399, 0,
	398, 0, 0, 0, 406, 0, 569, 407, 570, 409,
	410, 0, 0, 411, 0, 0, 0, 413, 414, 415,
	0, 0, 416, 417, 571, 0, 418, 0, 572, 419,
	420, 412, 421, 422, 423, 424, 425, 426, 427, 428,
	0, 429, 430, 573, 574, 575, 431, 576, 432, 433,
	0, 434, 0, 435, 436, 437, 438, 439, 440, 441,
	577, 443, 442, 444, 0, 445, 0, 0, 0, 0,
	0, 446, 0, 448, 449, 450, 447, 451, 452, 453,
	454, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	578, 462, 0, 463, 464, 470, 471, 465, 466, 472,
	473, 474, 475, 476, 618, 478, 479, 477, 480, 481,
	482, 0, 483, 467, 468, 484, 485, 0, 486, 487,
	488, 489, 490, 491, 579, 0, 492, 0, 493, 494,
	495, 496, 469, 497, 502, 580, 498, 499, 500, 501,
	581, 0, 504, 505, 0, 503, 0, 506, 507, 508,
	509, 510, 511, 326, 512, 0, 513, 582, 583, 584,
	585, 0, 520, 0, 514, 515, 586, 516, 587, 0,
	517, 518, 519, 0, 521, 522, 0, 0, 523, 524,
	525, 527, 528, 526, 529, 0, 530, 0, 0, 531,
	532, 533, 588, 589, 590, 243, 535, 534, 591, 0,
	0, 0, 0, 536, 537, 592, 538, 539, 540, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 542,
	543, 0, 265, 544, 266, 545, 0, 546, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 547, 548, 549,
	0, 273, 274, 550, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 2126, 301, 0, 302, 551,
	552, 0, 306, 303, 304, 0, 307, 305, 0, 308,
	309, 310, 0, 0, 311, 312, 313, 0, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 553, 321, 322,
	323, 325, 327, 324, 328, 329, 330, 331, 554, 555,
	0, 246, 0, 0, 0, 0, 0, 332, 333, 334,
	556, 0, 0, 0, 335, 0, 336, 0, 0, 0,
	337, 338, 557, 558, 339, 340, 0, 341, 559, 0,
	560, 342, 0, 343, 344, 345, 346, 347, 561, 562,
	563, 408, 0, 348, 349, 0, 350, 351, 352, 353,
	0, 0, 0, 247, 354, 355, 357, 0, 0, 356,
	564, 565, 0, 566, 0, 358, 359, 0, 567, 0,
	360, 361, 362, 0, 363, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 0, 370, 372, 371, 0, 373,
	568, 0, 374, 375, 0, 0, 376, 377, 378, 0,
	0, 379, 380, 381, 382, 0, 383, 384, 386, 388,
	385, 387, 392, 389, 390, 391, 394, 0, 393, 0,
	395, 396, 397, 403, 404, 400, 401, 402, 405, 399,
	0, 398, 0, 248, 0, 406, 0, 569, 407, 570,
	409, 410, 0, 0, 411, 0, 0, 0, 413, 414,
	415, 0, 0, 416, 417, 571, 0, 418, 0, 572,
	419, 420, 412, 421, 422, 423, 424, 425, 426, 427,
	428, 0, 429, 430, 573, 574, 575, 431, 576, 432,
	433, 0, 434, 0, 435, 436, 437, 438, 439, 440,
	441, 577, 443, 442, 444, 0, 445, 0, 0, 0,
	0, 0, 446, 0, 448, 449, 450, 447, 451, 452,
	453, 454, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 578, 462, 0, 463, 464, 470, 471, 465, 466,
	472, 473, 474, 475, 476, 0, 478, 479, 477, 480,
	481, 482, 0, 483, 467, 468, 484, 485, 0, 486,
	487, 488, 489, 490, 491, 579, 0, 492, 0, 493,
	494, 495, 496, 469, 497, 502, 580, 498, 499, 500,
	501, 581, 0, 504, 505, 0, 503, 0, 506, 507,
	508, 509, 510, 511, 326, 512, 0, 513, 582, 583,
	584, 585, 0, 520, 0, 514, 515, 586, 516, 587,
	0, 517, 518, 519, 0, 521, 522, 0, 0, 523,
	524, 525, 527, 528, 526, 529, 0, 530, 0, 0,
	531, 532, 533, 588, 589, 590, 243, 535, 534, 591,
	0, 0, 0, 0, 536, 537, 592, 538, 539, 540,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	542, 543, 0, 265, 544, 266, 545, 0, 546, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 547, 548,
	549, 0, 273, 274, 550, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 0, 0, 298, 299, 2124, 301, 0, 302,
	551, 552, 0, 306, 303, 304, 0, 307, 305, 0,
	308, 309, 310, 0, 0, 311, 312, 313, 0, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 553, 321,
	322, 323, 325, 327, 324, 328, 329, 330, 331, 554,
	555, 0, 246, 0, 0, 0, 0, 0, 332, 333,
	334, 556, 0, 0, 0, 335, 0, 336, 0, 0,
	0, 337, 338, 557, 558, 339, 340, 0, 341, 559,
	0, 560, 342, 0, 343, 344, 345, 346, 347, 561,
	562, 563, 408, 0, 348, 349, 0, 350, 351, 352,
	353, 0, 0, 0, 247, 354, 355, 357, 0, 0,
	356, 564, 565, 0, 566, 0, 358, 359, 0, 567,
	0, 360, 361, 362, 0, 363, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 0, 370, 372, 371, 0,
	373, 568, 0, 374, 375, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 381, 382, 0, 383, 384, 386,
	388, 385, 387, 392, 389, 390, 391, 394, 0, 393,
	0, 395, 396, 397, 403, 404, 400, 401, 402, 405,
	399, 0, 398, 0, 248, 0, 406, 0, 569, 407,
	570, 409, 410, 0, 0, 411, 0, 0, 0, 413,
	414, 415, 0, 0, 416, 417, 571, 0, 418, 0,
	572, 419, 420, 412, 421, 422, 423, 424, 425, 426,
	427, 428, 0, 429, 430, 573, 574, 575, 431, 576,
	432, 433, 0, 434, 0, 435, 436, 437, 438, 439,
	440, 441, 577, 443, 442, 444, 0, 445, 0, 0,
	0, 0, 0, 446, 0, 448, 449, 450, 447, 451,
	452, 453, 454, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 578, 462, 0, 463, 464, 470, 471, 465,
	466, 472, 473, 474, 475, 476, 0, 478, 479, 477,
	480, 481, 482, 0, 483, 467, 468, 484, 485, 0,
	486, 487, 488, 489, 490, 491, 579, 0, 492, 0,
	493, 494, 495, 496, 469, 497, 502, 580, 498, 499,
	500, 501, 581, 0, 504, 505, 0, 503, 0, 506,
	507, 508, 509, 510, 511, 326, 512, 0, 513, 582,
	583, 584, 585, 0, 520, 0, 514, 515, 586, 516,
	587, 0, 517, 518, 519, 0, 521, 522, 0, 0,
	523, 524, 525, 527, 528, 526, 529, 0, 530, 0,
	0, 531, 532, 533, 588, 589, 590, 243, 535, 534,
	591, 0, 0, 0, 0, 536, 537, 592, 538, 539,
	540, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 542, 543, 0, 265, 544, 266, 545, 0, 546,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 547,
	548, 549, 0, 273, 274, 550, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 2122, 301, 0,
	302, 551, 552, 0, 306, 303, 304, 0, 307, 305,
	0, 308, 309, 310, 0, 0, 311, 312, 313, 0,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 553,
	321, 322, 323, 325, 327, 324, 328, 329, 330, 331,
	554, 555, 0, 246, 0, 0, 0, 0, 0, 332,
	333, 334, 556, 0, 0, 0, 335, 0, 336, 0,
	0, 0, 337, 338, 557, 558, 339, 340, 0, 341,
	559, 0, 560, 342, 0, 343, 344, 345, 346, 347,
	561, 562, 563, 408, 0, 348, 349, 0, 350, 351,
	352, 353, 0, 0, 0, 247, 354, 355, 357, 0,
	0, 356, 564, 565, 0, 566, 0, 358, 359, 0,
	567, 0, 360, 361, 362, 0, 363, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 0, 370, 372, 371,
	0, 373, 568, 0, 374, 375, 0, 0, 376, 377,
	378, 0, 0, 379, 380, 381, 382, 0, 383, 384,
	386, 388, 385, 387, 392, 389, 390, 391, 394, 0,
	393, 0, 395, 396, 397, 403, 404, 400, 401, 402,
	405, 399, 0, 398, 0, 248, 0, 406, 0, 569,
	407, 570, 409, 410, 0, 0, 411, 0, 0, 0,
	413, 414, 415, 0, 0, 416, 417, 571, 0, 418,
	0, 572, 419, 420, 412, 421, 422, 423, 424, 425,
	426, 427, 428, 0, 429, 430, 573, 574, 575, 431,
	576, 432, 433, 0, 434, 0, 435, 436, 437, 438,
	439, 440, 441, 577, 443, 442, 444, 0, 445, 0,
	0, 0, 0, 0, 446, 0, 448, 449, 450, 447,
	451, 452, 453, 454, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 578, 462, 0, 463, 464, 470, 471,
	465, 466, 472, 473, 474, 475, 476, 0, 478, 479,
	477, 480, 481, 482, 0, 483, 467, 468, 484, 485,
	0, 486, 487, 488, 489, 490, 491, 579, 0, 492,
	0, 493, 494, 495, 496, 469, 497, 502, 580, 498,
	499, 500, 501, 581, 0, 504, 505, 0, 503, 0,
	506, 507, 508, 509, 510, 511, 326, 512, 0, 513,
	582, 583, 584, 585, 0, 520, 0, 514, 515, 586,
	516, 587, 0, 517, 518, 519, 0, 521, 522, 0,
	0, 523, 524, 525, 527, 528, 526, 529, 0, 530,
	0, 0, 531, 532, 533, 588, 589, 590, 243, 535,
	534, 591, 0, 0, 0, 0, 536, 537, 592, 538,
	539, 540, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 541,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 542, 543, 0, 265, 544, 266, 545, 0,
	546, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	547, 548, 549, 0, 273, 274, 550, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 0, 0, 298, 299, 300, 301,
	0, 302, 551, 552, 0, 306, 303, 304, 0, 307,
	305, 0, 308, 309, 310, 0, 0, 311, 312, 313,
	0, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	553, 321, 322, 323, 325, 327, 324, 328, 329, 330,
	331, 554, 555, 0, 246, 0, 0, 0, 0, 0,
	332, 333, 334, 556, 0, 0, 0, 335, 0, 336,
	0, 0, 0, 337, 338, 557, 558, 339, 340, 0,
	341, 559, 0, 560, 342, 0, 343, 344, 345, 346,
	347, 2058, 562, 563, 408, 0, 348, 349, 0, 350,
	351, 352, 353, 0, 0, 0, 247, 354, 355, 357,
	0, 0, 356, 564, 565, 0, 566, 0, 358, 359,
	0, 567, 0, 360, 361, 362, 0, 363, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 0, 370, 372,
	371, 0, 373, 568, 0, 374, 375, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 381, 382, 0, 383,
	384, 386, 388, 385, 387, 392, 389, 390, 391, 394,
	0, 393, 0, 395, 396, 397, 403, 404, 400, 401,
	402, 405, 399, 0, 398, 0, 248, 0, 406, 0,
	569, 407, 570, 409, 410, 0, 0, 411, 0, 0,
	0, 413, 414, 415, 0, 0, 416, 417, 571, 0,
	418, 0, 572, 419, 420, 412, 421, 422, 423, 424,
	425, 426, 427, 428, 0, 429, 430, 573, 574, 575,
	431, 576, 432, 433, 0, 434, 0, 435, 436, 437,
	438, 439, 440, 441, 577, 443, 442, 444, 0, 445,
	0, 0, 0, 0, 0, 446, 0, 448, 449, 450,
	447, 451, 452, 453, 454, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 578, 462, 0, 463, 464, 470,
	471, 465, 466, 472, 473, 474, 475, 476, 0, 478,
	479, 477, 480, 481, 482, 0, 483, 467, 468, 484,
	485, 0, 486, 487, 488, 489, 490, 491, 579, 0,
	492, 0, 493, 494, 495, 496, 469, 497, 502, 580,
	498, 499, 500, 501, 581, 0, 504, 505, 0, 503,
	0, 506, 507, 508, 509, 510, 511, 326, 512, 0,
	513, 582, 583, 584, 585, 0, 520, 0, 514, 515,
	586, 516, 587, 0, 517, 518, 519, 0, 521, 522,
	0, 0, 523, 524, 525, 527, 528, 526, 529, 0,
	530, 0, 0, 531, 532, 533, 588, 589, 590, 243,
	535, 534, 591, 0, 0, 0, 0, 536, 537, 592,
	538, 539, 540, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 542, 543, 0, 265, 544, 266, 545,
	0, 546, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 547, 548, 549, 0, 273, 274, 550, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 300,
	301, 0, 302, 551, 552, 0, 306, 303, 304, 0,
	307, 305, 0, 308, 309, 310, 0, 0, 311, 312,
	313, 0, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 553, 321, 322, 323, 325, 327, 324, 328, 329,
	330, 331, 554, 555, 0, 246, 0, 0, 0, 0,
	0, 332, 333, 334, 556, 0, 0, 0, 335, 0,
	336, 0, 0, 0, 337, 338, 557, 558, 339, 340,
	0, 341, 559, 0, 560, 342, 0, 343, 344, 345,
	346, 347, 2052, 562, 563, 408, 0, 348, 349, 0,
	350, 351, 352, 353, 0, 0, 0, 247, 354, 355,
	357, 0, 0, 356, 564, 565, 0, 566, 0, 358,
	359, 0, 567, 0, 360, 361, 362, 0, 363, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 0, 370,
	372, 371, 0, 373, 568, 0, 374, 375, 0, 0,
	376, 377, 378, 0, 0, 379, 380, 381, 382, 0,
	383, 384, 386, 388, 385, 387, 392, 389, 390, 391,
	394, 0, 393, 0, 395, 396, 397, 403, 404, 400,
	401, 402, 405, 399, 0, 398, 0, 248, 0, 406,
	0, 569, 407, 570, 409, 410, 0, 0, 411, 0,
	0, 0, 413, 414, 415, 0, 0, 416, 417, 571,
	0, 418, 0, 572, 419, 420, 412, 421, 422, 423,
	424, 425, 426, 427, 428, 0, 429, 430, 573, 574,
	575, 431, 576, 432, 433, 0, 434, 0, 435, 436,
	437, 438, 439, 440, 441, 577, 443, 442, 444, 0,
	445, 0, 0, 0, 0, 0, 446, 0, 448, 449,
	450, 447, 451, 452, 453, 454, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 578, 462, 0, 463, 464,
	470, 471, 465, 466, 472, 473, 474, 475, 476, 0,
	478, 479, 477, 480, 481, 482, 0, 483, 467, 468,
	484, 485, 0, 486, 487, 488, 489, 490, 491, 579,
	0, 492, 0, 493, 494, 495, 496, 469, 497, 502,
	580, 498, 499, 500, 501, 581, 0, 504, 505, 0,
	503, 0, 506, 507, 508, 509, 510, 511, 326, 512,
	0, 513, 582, 583, 584, 585, 0, 520, 0, 514,
	515, 586, 516, 587, 0, 517, 518, 519, 0, 521,
	522, 0, 0, 523, 524, 525, 527, 528, 526, 529,
	0, 530, 0, 0, 531, 532, 533, 588, 589, 590,
	243, 535, 534, 591, 0, 0, 0, 0, 536, 537,
	592, 538, 539, 540, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 542, 543, 0, 265, 544, 266,
	545, 0, 546, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 547, 548, 549, 0, 273, 274, 550, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 0, 0, 298, 299,
	300, 301, 0, 302, 551, 552, 0, 306, 303, 304,
	0, 307, 305, 0, 308, 309, 310, 0, 0, 311,
	312, 313, 0, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 553, 321, 322, 323, 325, 327, 324, 328,
	329, 330, 331, 554, 555, 0, 246, 0, 0, 0,
	0, 0, 332, 333, 334, 556, 0, 0, 0, 335,
	0, 336, 0, 0, 0, 337, 338, 557, 558, 339,
	340, 0, 341, 559, 0, 560, 342, 0, 343, 344,
	345, 346, 347, 2021, 562, 563, 408, 0, 348, 349,
	0, 350, 351, 352, 353, 0, 0, 0, 247, 354,
	355, 357, 0, 0, 356, 564, 565, 0, 566, 0,
	358, 359, 0, 567, 0, 360, 361, 362, 0, 363,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 0,
	370, 372, 371, 0, 373, 568, 0, 374, 375, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 381, 382,
	0, 383, 384, 386, 388, 385, 387, 392, 389, 390,
	391, 394, 0, 393, 0, 395, 396, 397, 403, 404,
	400, 401, 402, 405, 399, 0, 398, 0, 248, 0,
	406, 0, 569, 407, 570, 409, 410, 0, 0, 411,
	0, 0, 0, 413, 414, 415, 0, 0, 416, 417,
	571, 0, 418, 0, 572, 419, 420, 412, 421, 422,
	423, 424, 425, 426, 427, 428, 0, 429, 430, 573,
	574, 575, 431, 576, 432, 433, 0, 434, 0, 435,
	436, 437, 438, 439, 440, 441, 577, 443, 442, 444,
	0, 445, 0, 0, 0, 0, 0, 446, 0, 448,
	449, 450, 447, 451, 452, 453, 454, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 578, 462, 0, 463,
	464, 470, 471, 465, 466, 472, 473, 474, 475, 476,
	0, 478, 479, 477, 480, 481, 482, 0, 483, 467,
	468, 484, 485, 0, 486, 487, 488, 489, 490, 491,
	579, 0, 492, 0, 493, 494, 495, 496, 469, 497,
	502, 580, 498, 499, 500, 501, 581, 0, 504, 505,
	0, 503, 0, 506, 507, 508, 509, 510, 511, 326,
	512, 0, 513, 582, 583, 584, 585, 0, 520, 0,
	514, 515, 586, 516, 587, 0, 517, 518, 519, 0,
	521, 522, 0, 0, 523, 524, 525, 527, 528, 526,
	529, 0, 530, 0, 0, 531, 532, 533, 588, 589,
	590, 0, 535, 534, 591, 782, 0, 243, 0, 536,
	537, 592, 538, 539, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 542, 543, 0, 265, 544, 266, 545, 0, 546,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 547,
	548, 549, 0, 273, 274, 550, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 300, 301, 0,
	302, 551, 552, 0, 306, 303, 304, 0, 307, 305,
	0, 308, 309, 310, 0, 0, 311, 312, 313, 0,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 553,
	321, 322, 323, 325, 327, 324, 328, 329, 330, 331,
	554, 555, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 556, 0, 0, 0, 335, 0, 336, 0,
	0, 0, 337, 338, 557, 558, 339, 340, 0, 341,
	559, 0, 560, 342, 0, 343, 344, 345, 346, 347,
	561, 562, 563, 408, 0, 348, 349, 0, 350, 351,
	352, 353, 0, 0, 0, 0, 354, 355, 357, 0,
	0, 356, 564, 565, 0, 566, 781, 358, 359, 0,
	567, 0, 360, 361, 362, 0, 363, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 0, 370, 372, 371,
	0, 373, 568, 0, 374, 375, 0, 0, 376, 377,
	378, 0, 0, 379, 380, 381, 382, 0, 383, 384,
	386, 388, 385, 387, 392, 389, 390, 391, 394, 0,
	393, 0, 395, 396, 397, 403, 404, 400, 401, 402,
	405, 399, 0, 398, 0, 0, 0, 406, 0, 569,
	407, 570, 409, 410, 0, 0, 411, 0, 0, 0,
	413, 414, 415, 0, 0, 416, 417, 571, 0, 418,
	0, 572, 419, 420, 412, 421, 422, 423, 424, 425,
	426, 427, 428, 0, 429, 430, 573, 574, 575, 431,
	576, 432, 433, 0, 434, 0, 435, 436, 437, 438,
	439, 440, 441, 577, 443, 442, 444, 0, 445, 0,
	0, 0, 0, 0, 446, 0, 448, 449, 450, 447,
	451, 452, 453, 454, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 578, 462, 0, 463, 464, 470, 471,
	465, 466, 472, 473, 474, 475, 476, 0, 478, 479,
	477, 480, 481, 482, 0, 483, 467, 468, 484, 485,
	0, 486, 487, 488, 489, 490, 491, 579, 0, 492,
	0, 493, 494, 495, 496, 469, 497, 502, 580, 498,
	499, 500, 501, 581, 0, 504, 505, 0, 503, 780,
	506, 507, 508, 509, 510, 511, 326, 512, 0, 513,
	582, 583, 584, 585, 0, 520, 0, 514, 515, 586,
	516, 587, 0, 517, 518, 519, 0, 521, 522, 0,
	0, 523, 524, 525, 527, 528, 526, 529, 0, 530,
	0, 0, 531, 532, 533, 588, 589, 590, 243, 535,
	534, 591, 0, 0, 0, 0, 536, 537, 592, 538,
	539, 540, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 541,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 542, 543, 0, 265, 544, 266, 545, 0,
	546, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	547, 548, 549, 0, 273, 274, 550, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 0, 0, 298, 299, 300, 301,
	0, 302, 551, 552, 0, 306, 303, 304, 0, 307,
	305, 0, 308, 309, 310, 0, 0, 311, 312, 313,
	0, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	553, 321, 322, 323, 325, 327, 324, 328, 329, 330,
	331, 554, 555, 0, 2714, 0, 0, 0, 0, 0,
	332, 333, 334, 556, 0, 0, 0, 335, 0, 336,
	0, 0, 0, 337, 338, 557, 558, 339, 340, 0,
	341, 559, 0, 560, 342, 0, 343, 344, 345, 346,
	347, 561, 562, 563, 408, 0, 348, 349, 0, 350,
	351, 352, 353, 0, 0, 0, 0, 354, 355, 357,
	0, 0, 356, 564, 565, 0, 566, 0, 358, 359,
	0, 567, 0, 360, 361, 362, 0, 363, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 0, 370, 372,
	371, 0, 373, 568, 0, 374, 375, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 381, 382, 0, 383,
	384, 386, 388, 385, 387, 392, 389, 390, 391, 394,
	0, 393, 0, 395, 396, 397, 403, 404, 400, 401,
	402, 405, 399, 0, 398, 0, 0, 0, 406, 0,
	569, 407, 570, 409, 410, 0, 0, 411, 0, 0,
	0, 413, 414, 415, 0, 0, 416, 417, 571, 0,
	418, 0, 572, 419, 420, 412, 421, 422, 423, 424,
	425, 426, 427, 428, 0, 429, 430, 573, 574, 575,
	431, 576, 432, 433, 3712, 434, 0, 435, 436, 437,
	438, 439, 440, 441, 577, 443, 442, 444, 0, 445,
	0, 0, 0, 0, 0, 446, 0, 448, 449, 450,
	447, 451, 452, 453, 454, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 578, 462, 0, 463, 464, 470,
	471, 465, 466, 472, 473, 474, 475, 476, 0, 478,
	479, 477, 480, 481, 482, 0, 483, 467, 468, 484,
	485, 0, 486, 487, 488, 489, 490, 491, 579, 0,
	492, 0, 493, 494, 495, 496, 469, 497, 502, 580,
	498, 499, 500, 501, 581, 0, 504, 505, 0, 503,
	0, 506, 507, 508, 509, 510, 511, 326, 512, 0,
	513, 582, 583, 584, 585, 0, 520, 0, 514, 515,
	586, 516, 587, 0, 517, 518, 519, 0, 521, 522,
	0, 0, 523, 524, 525, 527, 528, 526, 529, 0,
	530, 0, 0, 531, 532, 533, 588, 589, 590, 0,
	535, 534, 591, 603, 0, 243, 0, 536, 537, 592,
	538, 539, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 602, 255,
	256, 0, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 542,
	543, 0, 265, 544, 266, 545, 0, 546, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 547, 548, 549,
	0, 273, 274, 550, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 300, 301, 0, 302, 551,
	552, 0, 306, 303, 304, 0, 307, 305, 0, 308,
	309, 310, 0, 0, 311, 312, 313, 0, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 553, 321, 322,
	323, 325, 327, 324, 328, 329, 330, 331, 554, 555,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	556, 0, 0, 0, 335, 0, 336, 0, 0, 0,
	337, 338, 557, 558, 339, 340, 0, 341, 559, 0,
	560, 342, 0, 343, 344, 345, 346, 347, 561, 562,
	563, 408, 0, 348, 349, 0, 350, 351, 352, 353,
	0, 0, 0, 0, 354, 355, 357, 0, 0, 356,
	564, 565, 0, 566, 0, 358, 359, 0, 567, 0,
	360, 361, 362, 0, 363, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 0, 370, 372, 371, 0, 373,
	568, 0, 374, 375, 0, 0, 376, 377, 378, 0,
	0, 379, 380, 381, 382, 0, 383, 384, 386, 388,
	385, 387, 392, 389, 390, 391, 394, 0, 393, 0,
	395, 396, 397, 403, 404, 400, 401, 402, 405, 399,
	0, 398, 0, 0, 0, 406, 0, 569, 407, 570,
	409, 410, 0, 0, 411, 0, 0, 0, 413, 414,
	415, 0, 0, 416, 417, 571, 0, 418, 0, 572,
	419, 420, 412, 421, 422, 423, 424, 425, 426, 427,
	428, 0, 429, 430, 573, 574, 575, 431, 576, 601,
	433, 0, 434, 0, 435, 436, 437, 438, 439, 440,
	441, 577, 443, 442, 444, 0, 445, 0, 0, 0,
	0, 0, 446, 0, 448, 449, 450, 447, 451, 452,
	453, 454, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 578, 462, 0, 463, 464, 470, 471, 465, 466,
	472, 473, 474, 475, 476, 0, 478, 479, 477, 480,
	481, 482, 0, 483, 467, 468, 484, 485, 0, 486,
	487, 488, 489, 490, 491, 579, 0, 492, 0, 493,
	494, 495, 496, 469, 497, 502, 580, 498, 499, 500,
	501, 581, 0, 504, 505, 0, 503, 0, 506, 507,
	508, 509, 510, 511, 326, 512, 0, 513, 582, 583,
	584, 585, 0, 520, 0, 514, 515, 586, 516, 587,
	0, 517, 518, 519, 0, 521, 522, 0, 0, 523,
	524, 525, 527, 528, 526, 529, 0, 530, 0, 0,
	531, 532, 533, 588, 589, 590, 0, 535, 534, 591,
	243, 2701, 0, 0, 536, 537, 592, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 542, 543, 0, 265, 544, 266,
	545, 0, 546, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 547, 548, 549, 0, 273, 274, 550, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 0, 0, 298, 299,
	300, 301, 0, 302, 551, 552, 0, 306, 303, 304,
	0, 307, 305, 0, 308, 309, 310, 0, 0, 311,
	312, 313, 0, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 553, 321, 322, 323, 325, 327, 324, 328,
	329, 330, 331, 554, 555, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 556, 0, 0, 0, 335,
	0, 336, 0, 0, 0, 337, 338, 557, 558, 339,
	340, 0, 341, 559, 0, 560, 342, 0, 343, 344,
	345, 346, 347, 561, 562, 563, 408, 0, 348, 349,
	0, 350, 351, 352, 353, 0, 0, 0, 0, 354,
	355, 357, 0, 0, 356, 564, 565, 0, 566, 0,
	358, 359, 0, 567, 0, 360, 361, 362, 0, 363,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 0,
	370, 372, 371, 0, 373, 568, 0, 374, 375, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 381, 382,
	0, 383, 384, 386, 388, 385, 387, 392, 389, 390,
	391, 394, 0, 393, 0, 395, 396, 397, 403, 404,
	400, 401, 402, 405, 399, 0, 398, 0, 0, 0,
	406, 0, 569, 407, 570, 409, 410, 0, 0, 411,
	0, 0, 0, 413, 414, 415, 0, 0, 416, 417,
	571, 0, 418, 0, 572, 419, 420, 412, 421, 422,
	423, 424, 425, 426, 427, 428, 0, 429, 430, 573,
	574, 575, 431, 576, 432, 433, 0, 434, 0, 435,
	436, 437, 438, 439, 440, 441, 577, 443, 442, 444,
	0, 445, 0, 0, 0, 0, 0, 446, 0, 448,
	449, 450, 447, 451, 452, 453, 454, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 578, 462, 0, 463,
	464, 470, 471, 465, 466, 472, 473, 474, 475, 476,
	0, 478, 479, 477, 480, 481, 482, 0, 483, 467,
	468, 484, 485, 0, 486, 487, 488, 489, 490, 491,
	579, 0, 492, 0, 493, 494, 495, 496, 469, 497,
	502, 580, 498, 499, 500, 501, 581, 0, 504, 505,
	0, 503, 0, 506, 507, 508, 509, 510, 511, 326,
	512, 0, 513, 582, 583, 584, 585, 0, 520, 0,
	514, 515, 586, 516, 587, 0, 517, 518, 519, 0,
	521, 522, 0, 0, 523, 524, 525, 527, 528, 526,
	529, 0, 530, 0, 0, 531, 532, 533, 588, 589,
	590, 0, 535, 534, 591, 243, 3722, 0, 0, 536,
	537, 592, 538, 539, 540, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 542,
	543, 0, 265, 544, 266, 545, 0, 546, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 547, 548, 549,
	0, 273, 274, 550, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 300, 301, 0, 302, 551,
	552, 0, 306, 303, 304, 0, 307, 305, 0, 308,
	309, 310, 0, 0, 311, 312, 313, 0, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 553, 321, 322,
	323, 325, 327, 324, 328, 329, 330, 331, 554, 555,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	556, 0, 0, 0, 335, 0, 336, 0, 0, 0,
	337, 338, 557, 558, 339, 340, 0, 341, 559, 0,
	560, 342, 0, 343, 344, 345, 346, 347, 561, 562,
	563, 408, 0, 348, 349, 0, 350, 351, 352, 353,
	0, 0, 0, 0, 354, 355, 357, 0, 0, 356,
	564, 565, 0, 566, 0, 358, 359, 0, 567, 0,
	360, 361, 362, 0, 363, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 0, 370, 372, 371, 0, 373,
	568, 0, 374, 375, 0, 0, 376, 377, 378, 0,
	0, 379, 380, 381, 382, 0, 383, 384, 386, 388,
	385, 387, 392, 389, 390, 391, 394, 0, 393, 0,
	395, 396, 397, 403, 404, 400, 401, 402, 405, 399,
	0, 398, 0, 0, 0, 406, 0, 569, 407, 570,
	409, 410, 0, 0, 411, 0, 0, 0, 413, 414,
	415, 0, 0, 416, 417, 571, 0, 418, 0, 572,
	419, 420, 412, 421, 422, 423, 424, 425, 426, 427,
	428, 0, 429, 430, 573, 574, 575, 431, 576, 432,
	433, 0, 434, 0, 435, 436, 437, 438, 439, 440,
	441, 577, 443, 442, 444, 0, 445, 0, 0, 0,
	0, 0, 446, 0, 448, 449, 450, 447, 451, 452,
	453, 454, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 578, 462, 0, 463, 464, 470, 471, 465, 466,
	472, 473, 474, 475, 476, 0, 478, 479, 477, 480,
	481, 482, 0, 483, 467, 468, 484, 485, 0, 486,
	487, 488, 489, 490, 491, 579, 0, 492, 0, 493,
	494, 495, 496, 469, 497, 502, 580, 498, 499, 500,
	501, 581, 0, 504, 505, 0, 503, 0, 506, 507,
	508, 509, 510, 511, 326, 512, 0, 513, 582, 583,
	584, 585, 0, 520, 0, 514, 515, 586, 516, 587,
	0, 517, 518, 519, 0, 521, 522, 0, 0, 523,
	524, 525, 527, 528, 526, 529, 0, 530, 0, 0,
	531, 532, 533, 588, 589, 590, 243, 535, 534, 591,
	0, 0, 0, 0, 536, 537, 592, 538, 539, 540,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	542, 543, 0, 265, 544, 266, 545, 0, 546, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 547, 548,
	549, 0, 273, 274, 550, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 0, 0, 298, 299, 300, 301, 0, 302,
	551, 552, 3429, 306, 303, 304, 0, 307, 305, 0,
	308, 309, 310, 0, 0, 311, 312, 313, 0, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 553, 321,
	322, 323, 325, 327, 324, 328, 329, 330, 331, 554,
	555, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 556, 0, 0, 0, 335, 0, 336, 0, 0,
	0, 337, 338, 557, 558, 339, 340, 0, 341, 559,
	0, 560, 342, 0, 343, 344, 345, 346, 347, 561,
	562, 563, 408, 0, 348, 349, 0, 350, 351, 352,
	353, 0, 0, 0, 0, 354, 355, 357, 0, 0,
	356, 564, 565, 0, 566, 0, 358, 359, 0, 567,
	0, 360, 361, 362, 0, 363, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 0, 370, 372, 371, 0,
	373, 568, 0, 374, 375, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 381, 382, 0, 383, 384, 386,
	388, 385, 387, 392, 389, 390, 391, 394, 0, 393,
	0, 395, 396, 397, 403, 404, 400, 401, 402, 405,
	399, 0, 398, 0, 0, 0, 406, 0, 569, 407,
	570, 409, 410, 0, 0, 411, 0, 0, 0, 413,
	414, 415, 0, 0, 416, 417, 571, 0, 418, 0,
	572, 419, 420, 412, 421, 422, 423, 424, 425, 426,
	427, 428, 0, 429, 430, 573, 574, 575, 431, 576,
	432, 433, 0, 434, 0, 435, 436, 437, 438, 439,
	440, 441, 577, 443, 442, 444, 0, 445, 0, 0,
	0, 0, 0, 446, 0, 448, 449, 450, 447, 451,
	452, 453, 454, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 578, 462, 0, 463, 464, 470, 471, 465,
	466, 472, 473, 474, 475, 476, 0, 478, 479, 477,
	480, 481, 482, 0, 483, 467, 468, 484, 485, 0,
	486, 487, 488, 489, 490, 491, 579, 0, 492, 0,
	493, 494, 495, 496, 469, 497, 502, 580, 498, 499,
	500, 501, 581, 0, 504, 505, 0, 503, 0, 506,
	507, 508, 509, 510, 511, 326, 512, 0, 513, 582,
	583, 584, 585, 0, 520, 0, 514, 515, 586, 516,
	587, 0, 517, 518, 519, 0, 521, 522, 0, 0,
	523, 524, 525, 527, 528, 526, 529, 0, 530, 0,
	0, 531, 532, 533, 588, 589, 590, 243, 535, 534,
	591, 0, 0, 0, 0, 536, 537, 592, 538, 539,
	540, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 541, 0,
	2431, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 542, 543, 0, 265, 544, 266, 545, 0, 546,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 547,
	548, 549, 0, 273, 274, 550, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 300, 301, 0,
	302, 551, 552, 0, 306, 303, 304, 0, 307, 305,
	0, 308, 309, 310, 0, 0, 311, 312, 313, 0,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 553,
	321, 322, 323, 325, 327, 324, 328, 329, 330, 331,
	554, 555, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 556, 0, 0, 0, 335, 0, 336, 0,
	0, 0, 337, 338, 557, 558, 339, 340, 0, 341,
	559, 0, 560, 342, 0, 343, 344, 345, 346, 347,
	561, 562, 563, 408, 0, 348, 349, 0, 350, 351,
	352, 353, 0, 0, 0, 0, 354, 355, 357, 0,
	0, 356, 564, 565, 0, 566, 0, 358, 359, 0,
	567, 0, 360, 361, 362, 0, 363, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 0, 370, 372, 371,
	0, 373, 568, 0, 374, 375, 0, 0, 376, 377,
	378, 0, 0, 379, 380, 381, 382, 0, 383, 384,
	386, 388, 385, 387, 392, 389, 390, 391, 394, 0,
	393, 0, 395, 396, 397, 403, 404, 400, 401, 402,
	405, 399, 0, 398, 0, 0, 0, 406, 0, 569,
	407, 570, 409, 410, 0, 0, 411, 0, 0, 0,
	413, 414, 415, 0, 0, 416, 417, 571, 0, 418,
	0, 572, 419, 420, 412, 421, 422, 423, 424, 425,
	426, 427, 428, 0, 429, 430, 573, 574, 575, 431,
	576, 432, 433, 0, 434, 0, 435, 436, 437, 438,
	439, 440, 441, 577, 443, 442, 444, 0, 445, 0,
	0, 0, 0, 0, 446, 0, 448, 449, 450, 447,
	451, 452, 453, 454, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 578, 462, 0, 463, 464, 470, 471,
	465, 466, 472, 473, 474, 475, 476, 0, 478, 479,
	477, 480, 481, 482, 0, 483, 467, 468, 484, 485,
	0, 486, 487, 488, 489, 490, 491, 579, 0, 492,
	0, 493, 494, 495, 496, 469, 497, 502, 580, 498,
	499, 500, 501, 581, 0, 504, 505, 0, 503, 0,
	506, 507, 508, 509, 510, 511, 326, 512, 0, 513,
	582, 583, 584, 585, 0, 520, 0, 514, 515, 586,
	516, 587, 0, 517, 518, 519, 0, 521, 522, 0,
	0, 523, 524, 525, 527, 528, 526, 529, 0, 530,
	0, 0, 531, 532, 533, 588, 589, 590, 0, 535,
	534, 591, 243, 2701, 0, 0, 536, 537, 592, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 543, 0, 265,
	544, 266, 545, 0, 546, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 547, 548, 549, 0, 273, 274,
	550, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 0, 0,
	298, 299, 300, 301, 0, 302, 551, 552, 0, 306,
	303, 304, 0, 307, 305, 0, 308, 309, 310, 0,
	0, 311, 312, 313, 0, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 553, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 554, 555, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 556, 0, 0,
	0, 335, 0, 336, 0, 0, 0, 337, 338, 557,
	558, 339, 340, 0, 341, 559, 0, 560, 342, 0,
	343, 344, 345, 346, 347, 561, 562, 563, 408, 0,
	348, 349, 0, 350, 351, 352, 353, 0, 0, 0,
	0, 354, 355, 357, 0, 0, 356, 564, 565, 0,
	566, 0, 358, 359, 0, 567, 0, 360, 361, 362,
	0, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 0, 370, 372, 371, 0, 373, 568, 0, 374,
	375, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 0, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 0, 398, 0,
	0, 0, 406, 0, 569, 407, 570, 409, 410, 0,
	0, 411, 0, 0, 0, 413, 414, 2698, 0, 0,
	416, 417, 571, 0, 418, 0, 572, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 0, 429,
	430, 573, 574, 575, 431, 576, 432, 433, 0, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 577, 443,
	442, 444, 0, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 578, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 0, 478, 479, 477, 480, 481, 482, 0,
	483, 467, 468, 484, 485, 0, 486, 487, 488, 489,
	490, 491, 579, 0, 492, 0, 493, 494, 495, 496,
	469, 497, 502, 580, 498, 499, 500, 501, 581, 0,
	504, 505, 0, 503, 0, 506, 507, 508, 509, 510,
	511, 326, 512, 0, 513, 582, 583, 584, 585, 0,
	520, 0, 514, 515, 586, 516, 587, 0, 517, 518,
	519, 0, 521, 522, 0, 0, 523, 524, 525, 527,
	528, 526, 529, 0, 530, 0, 0, 531, 532, 533,
	588, 589, 590, 243, 535, 534, 591, 0, 0, 0,
	0, 536, 537, 592, 538, 539, 540, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 2103, 255, 256, 0,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 542, 543, 0,
	265, 544, 266, 545, 0, 546, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 547, 548, 549, 0, 273,
	274, 550, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 300, 301, 0, 302, 551, 552, 0,
	306, 303, 304, 0, 307, 305, 0, 308, 309, 310,
	0, 0, 311, 312, 313, 0, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 553, 321, 322, 323, 325,
	327, 324, 328, 329, 330, 331, 554, 555, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 556, 0,
	0, 0, 335, 0, 336, 0, 0, 0, 337, 338,
	557, 558, 339, 340, 0, 341, 559, 0, 560, 342,
	0, 343, 344, 345, 346, 347, 561, 562, 563, 408,
	0, 348, 349, 0, 350, 351, 352, 353, 0, 0,
	0, 0, 354, 355, 357, 0, 0, 356, 564, 565,
	0, 566, 0, 358, 359, 0, 567, 0, 360, 361,
	362, 0, 363, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 0, 370, 372, 371, 0, 373, 568, 0,
	374, 375, 0, 0, 376, 377, 378, 0, 0, 379,
	380, 381, 382, 0, 383, 384, 386, 388, 385, 387,
	392, 389, 390, 391, 394, 0, 393, 0, 395, 396,
	397, 403, 404, 400, 401, 402, 405, 399, 0, 398,
	0, 0, 0, 406, 0, 569, 407, 570, 409, 410,
	0, 0, 411, 0, 0, 0, 413, 414, 415, 0,
	0, 416, 417, 571, 0, 418, 0, 572, 419, 420,
	412, 421, 422, 423, 424, 425, 426, 427, 428, 0,
	429, 430, 573, 574, 575, 431, 576, 432, 433, 0,
	434, 0, 435, 436, 437, 438, 439, 440, 441, 577,
	443, 442, 444, 0, 445, 0, 0, 0, 0, 0,
	446, 0, 448, 449, 450, 447, 451, 452, 453, 454,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 578,
	462, 0, 463, 464, 470, 471, 465, 466, 472, 473,
	474, 475, 476, 0, 478, 479, 477, 480, 481, 482,
	0, 483, 467, 468, 484, 485, 0, 486, 487, 488,
	489, 490, 491, 579, 0, 492, 0, 493, 494, 495,
	496, 469, 497, 502, 580, 498, 499, 500, 501, 581,
	0, 504, 505, 0, 503, 0, 506, 507, 508, 509,
	510, 511, 326, 512, 0, 513, 582, 583, 584, 585,
	0, 520, 0, 514, 515, 586, 516, 587, 0, 517,
	518, 519, 0, 521, 522, 0, 0, 523, 524, 525,
	527, 528, 526, 529, 0, 530, 0, 0, 531, 532,
	533, 588, 589, 590, 0, 535, 534, 591, 2091, 0,
	243, 0, 536, 537, 592, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 542, 543, 0, 265, 544, 266,
	545, 0, 546, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 547, 548, 549, 0, 273, 274, 550, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 0, 0, 298, 299,
	300, 301, 0, 302, 551, 552, 0, 306, 303, 304,
	0, 307, 305, 0, 308, 309, 310, 0, 0, 311,
	312, 313, 0, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 553, 321, 322, 323, 325, 327, 324, 328,
	329, 330, 331, 554, 555, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 556, 0, 0, 0, 335,
	0, 336, 0, 0, 0, 337, 338, 557, 558, 339,
	340, 0, 341, 559, 0, 560, 342, 0, 343, 344,
	345, 346, 347, 561, 562, 563, 408, 0, 348, 349,
	0, 350, 351, 352, 353, 0, 0, 0, 0, 354,
	355, 357, 0, 0, 356, 564, 565, 0, 566, 0,
	358, 359, 0, 567, 0, 360, 361, 362, 0, 363,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 0,
	370, 372, 371, 0, 373, 568, 0, 374, 375, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 381, 382,
	0, 383, 384, 386, 388, 385, 387, 392, 389, 390,
	391, 394, 0, 393, 0, 395, 396, 397, 403, 404,
	400, 401, 402, 405, 399, 0, 398, 0, 0, 0,
	406, 0, 569, 407, 570, 409, 410, 0, 0, 411,
	0, 0, 0, 413, 414, 415, 0, 0, 416, 417,
	571, 0, 418, 0, 572, 419, 420, 412, 421, 422,
	423, 424, 425, 426, 427, 428, 0, 429, 430, 573,
	574, 575, 431, 576, 432, 433, 0, 434, 0, 435,
	436, 437, 438, 439, 440, 441, 577, 443, 442, 444,
	0, 445, 0, 0, 0, 0, 0, 446, 0, 448,
	449, 450, 447, 451, 452, 453, 454, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 578, 462, 0, 463,
	464, 470, 471, 465, 466, 472, 473, 474, 475, 476,
	0, 478, 479, 477, 480, 481, 482, 0, 483, 467,
	468, 484, 485, 0, 486, 487, 488, 489, 490, 491,
	579, 0, 492, 0, 493, 494, 495, 496, 469, 497,
	502, 580, 498, 499, 500, 501, 581, 0, 504, 505,
	0, 503, 0, 506, 507, 508, 509, 510, 511, 326,
	512, 0, 513, 582, 583, 584, 585, 0, 520, 0,
	514, 515, 586, 516, 587, 0, 517, 518, 519, 0,
	521, 522, 0, 0, 523, 524, 525, 527, 528, 526,
	529, 0, 530, 0, 0, 531, 532, 533, 588, 589,
	590, 0, 535, 534, 591, 646, 0, 243, 0, 536,
	537, 592, 538, 539, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 257, 258, 1153, 259, 261, 262, 263,
	264, 542, 543, 0, 265, 544, 266, 545, 0, 546,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 547,
	548, 1151, 0, 273, 274, 550, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 300, 301, 0,
	302, 551, 552, 0, 306, 303, 304, 0, 307, 305,
	0, 308, 309, 310, 0, 0, 311, 312, 313, 0,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 553,
	321, 322, 323, 325, 327, 324, 328, 329, 330, 331,
	554, 555, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 556, 0, 0, 0, 335, 0, 336, 0,
	0, 0, 337, 338, 557, 558, 339, 340, 0, 341,
	559, 0, 560, 342, 0, 343, 344, 345, 346, 347,
	561, 562, 563, 408, 0, 348, 349, 0, 350, 351,
	352, 353, 0, 0, 0, 0, 354, 355, 357, 0,
	0, 356, 564, 565, 0, 566, 0, 358, 359, 0,
	567, 0, 360, 361, 362, 0, 363, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 0, 370, 372, 371,
	0, 373, 568, 0, 374, 375, 0, 0, 376, 377,
	378, 0, 0, 379, 380, 381, 382, 0, 383, 384,
	386, 388, 385, 387, 392, 389, 390, 391, 394, 0,
	647, 0, 395, 396, 397, 403, 404, 400, 401, 402,
	405, 399, 0, 398, 0, 0, 0, 406, 0, 569,
	407, 570, 409, 410, 0, 0, 411, 0, 0, 0,
	413, 414, 415, 0, 0, 416, 417, 571, 0, 418,
	0, 572, 419, 420, 412, 421, 422, 423, 424, 425,
	426, 427, 428, 0, 429, 430, 573, 574, 575, 431,
	576, 432, 433, 0, 434, 0, 435, 436, 437, 438,
	439, 440, 441, 577, 443, 442, 444, 0, 445, 0,
	0, 0, 0, 0, 446, 0, 448, 449, 450, 447,
	451, 452, 453, 454, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 578, 462, 0, 463, 464, 470, 471,
	465, 466, 643, 473, 474, 475, 476, 0, 478, 479,
	477, 480, 1154, 482, 0, 483, 467, 468, 484, 485,
	0, 486, 487, 488, 489, 490, 491, 579, 0, 492,
	0, 493, 494, 495, 496, 469, 497, 502, 580, 498,
	499, 500, 501, 581, 0, 504, 505, 0, 503, 0,
	506, 507, 508, 509, 510, 511, 326, 512, 0, 513,
	642, 583, 584, 585, 0, 520, 0, 514, 515, 586,
	516, 587, 0, 517, 518, 519, 0, 521, 522, 0,
	0, 523, 524, 525, 527, 528, 526, 529, 0, 530,
	0, 0, 531, 532, 533, 588, 589, 590, 0, 535,
	534, 591, 646, 0, 243, 0, 536, 537, 592, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 542, 543,
	0, 265, 544, 266, 545, 0, 546, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 547, 548, 549, 0,
	273, 636, 550, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	0, 0, 298, 299, 300, 301, 0, 302, 551, 552,
	0, 306, 303, 304, 0, 307, 305, 0, 308, 309,
	310, 0, 0, 311, 312, 313, 0, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 553, 321, 322, 323,
	325, 327, 324, 328, 329, 330, 331, 554, 555, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 556,
	0, 0, 0, 335, 0, 336, 0, 0, 0, 337,
	338, 557, 558, 339, 340, 0, 341, 559, 0, 560,
	342, 0, 343, 344, 345, 346, 347, 561, 562, 563,
	408, 0, 348, 349, 0, 350, 351, 352, 353, 0,
	0, 0, 0, 354, 355, 357, 0, 0, 356, 564,
	565, 0, 566, 0, 358, 359, 0, 567, 0, 360,
	361, 362, 0, 363, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 0, 370, 372, 371, 0, 373, 568,
	0, 374, 375, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 381, 382, 0, 383, 384, 386, 388, 385,
	387, 392, 389, 390, 391, 394, 0, 647, 0, 395,
	396, 397, 403, 404, 400, 401, 402, 405, 399, 0,
	398, 0, 0, 0, 406, 0, 569, 407, 570, 409,
	410, 0, 0, 411, 0, 0, 0, 413, 414, 415,
	0, 0, 416, 417, 571, 0, 418, 0, 572, 419,
	420, 412, 421, 422, 423, 424, 425, 426, 427, 428,
	0, 429, 430, 573, 574, 575, 431, 576, 432, 433,
	0, 434, 0, 435, 436, 437, 438, 439, 440, 441,
	577, 443, 442, 444, 0, 445, 0, 0, 0, 0,
	0, 446, 0, 448, 449, 450, 447, 451, 452, 453,
	454, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	578, 462, 0, 463, 464, 470, 471, 465, 466, 643,
	473, 474, 475, 476, 0, 478, 479, 477, 480, 1462,
	482, 0, 483, 467, 468, 484, 485, 0, 486, 487,
	488, 489, 490, 491, 579, 0, 492, 0, 493, 494,
	495, 496, 469, 497, 502, 580, 498, 499, 500, 501,
	581, 0, 504, 505, 0, 503, 0, 506, 507, 508,
	509, 510, 511, 326, 512, 0, 513, 642, 583, 584,
	585, 0, 520, 0, 514, 515, 586, 516, 587, 0,
	517, 518, 519, 0, 521, 522, 0, 0, 523, 524,
	525, 527, 528, 526, 529, 0, 530, 0, 0, 531,
	532, 533, 588, 589, 590, 0, 535, 534, 591, 1443,
	0, 243, 0, 536, 537, 592, 538, 539, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 542, 543, 0, 265, 544,
	266, 545, 0, 546, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 547, 548, 549, 0, 273, 274, 550,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 300, 301, 0, 302, 551, 552, 0, 306, 303,
	304, 0, 307, 305, 0, 308, 309, 310, 0, 0,
	311, 312, 313, 0, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 553, 321, 322, 323, 325, 327, 324,
	328, 329, 330, 331, 554, 555, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 556, 0, 0, 0,
	335, 0, 336, 0, 0, 0, 337, 338, 557, 558,
	339, 340, 0, 341, 559, 0, 560, 342, 0, 343,
	344, 345, 346, 347, 1442, 562, 563, 408, 0, 348,
	349, 0, 350, 351, 352, 353, 0, 0, 0, 0,
	354, 355, 357, 0, 0, 356, 564, 565, 0, 566,
	0, 358, 359, 0, 567, 0, 360, 361, 362, 0,
	363, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	0, 370, 372, 371, 0, 373, 568, 0, 374, 375,
	0, 0, 376, 377, 378, 0, 0, 379, 380, 381,
	382, 0, 383, 384, 386, 388, 385, 387, 392, 389,
	390, 391, 394, 0, 393, 0, 395, 396, 397, 403,
	404, 400, 401, 402, 405, 399, 0, 398, 0, 0,
	0, 406, 0, 569, 407, 570, 409, 410, 0, 0,
	411, 0, 0, 0, 413, 414, 415, 0, 0, 416,
	417, 571, 0, 418, 0, 572, 419, 420, 412, 421,
	422, 423, 424, 425, 426, 427, 428, 0, 429, 430,
	573, 574, 575, 431, 576, 432, 433, 0, 434, 0,
	435, 436, 437, 438, 439, 440, 441, 577, 443, 442,
	444, 0, 445, 0, 0, 0, 0, 0, 446, 0,
	448, 449, 450, 447, 451, 452, 453, 454, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 578, 462, 0,
	463, 464, 470, 471, 465, 466, 472, 473, 474, 475,
	476, 0, 478, 479, 477, 480, 481, 482, 0, 483,
	467, 468, 484, 485, 0, 486, 487, 488, 489, 490,
	491, 579, 0, 492, 0, 493, 494, 495, 496, 469,
	497, 502, 580, 498, 499, 500, 501, 581, 0, 504,
	505, 0, 503, 0, 506, 507, 508, 509, 510, 511,
	326, 512, 0, 513, 582, 583, 584, 585, 0, 520,
	0, 514, 515, 586, 516, 587, 0, 517, 518, 519,
	0, 521, 522, 0, 0, 523, 524, 525, 527, 528,
	526, 529, 0, 530, 0, 0, 531, 532, 533, 588,
	589, 590, 0, 535, 534, 591, 1436, 0, 243, 0,
	536, 537, 592, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 541,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 542, 543, 0, 265, 544, 266, 545, 0,
	546, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	547, 548, 549, 0, 273, 274, 550, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 0, 0, 298, 299, 300, 301,
	0, 302, 551, 552, 0, 306, 303, 304, 0, 307,
	305, 0, 308, 309, 310, 0, 0, 311, 312, 313,
	0, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	553, 321, 322, 323, 325, 327, 324, 328, 329, 330,
	331, 554, 555, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 556, 0, 0, 0, 335, 0, 336,
	0, 0, 0, 337, 338, 557, 558, 339, 340, 0,
	341, 559, 0, 560, 342, 0, 343, 344, 345, 346,
	347, 1435, 562, 563, 408, 0, 348, 349, 0, 350,
	351, 352, 353, 0, 0, 0, 0, 354, 355, 357,
	0, 0, 356, 564, 565, 0, 566, 0, 358, 359,
	0, 567, 0, 360, 361, 362, 0, 363, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 0, 370, 372,
	371, 0, 373, 568, 0, 374, 375, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 381, 382, 0, 383,
	384, 386, 388, 385, 387, 392, 389, 390, 391, 394,
	0, 393, 0, 395, 396, 397, 403, 404, 400, 401,
	402, 405, 399, 0, 398, 0, 0, 0, 406, 0,
	569, 407, 570, 409, 410, 0, 0, 411, 0, 0,
	0, 413, 414, 415, 0, 0, 416, 417, 571, 0,
	418, 0, 572, 419, 420, 412, 421, 422, 423, 424,
	425, 426, 427, 428, 0, 429, 430, 573, 574, 575,
	431, 576, 432, 433, 0, 434, 0, 435, 436, 437,
	438, 439, 440, 441, 577, 443, 442, 444, 0, 445,
	0, 0, 0, 0, 0, 446, 0, 448, 449, 450,
	447, 451, 452, 453, 454, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 578, 462, 0, 463, 464, 470,
	471, 465, 466, 472, 473, 474, 475, 476, 0, 478,
	479, 477, 480, 481, 482, 0, 483, 467, 468, 484,
	485, 0, 486, 487, 488, 489, 490, 491, 579, 0,
	492, 0, 493, 494, 495, 496, 469, 497, 502, 580,
	498, 499, 500, 501, 581, 0, 504, 505, 0, 503,
	0, 506, 507, 508, 509, 510, 511, 326, 512, 0,
	513, 582, 583, 584, 585, 0, 520, 0, 514, 515,
	586, 516, 587, 0, 517, 518, 519, 0, 521, 522,
	0, 0, 523, 524, 525, 527, 528, 526, 529, 0,
	530, 0, 0, 531, 532, 533, 588, 589, 590, 0,
	535, 534, 591, 1385, 0, 243, 0, 536, 537, 592,
	538, 539, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 542,
	543, 0, 265, 544, 266, 545, 0, 546, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 547, 548, 549,
	0, 273, 274, 550, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 300, 301, 0, 302, 551,
	552, 0, 306, 303, 304, 0, 307, 305, 0, 308,
	309, 310, 0, 0, 311, 312, 313, 0, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 553, 321, 322,
	323, 325, 327, 324, 328, 329, 330, 331, 554, 555,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	556, 0, 0, 0, 335, 0, 336, 0, 0, 0,
	337, 338, 557, 558, 339, 340, 0, 341, 559, 0,
	560, 342, 0, 343, 344, 345, 346, 347, 1384, 562,
	563, 408, 0, 348, 349, 0, 350, 351, 352, 353,
	0, 0, 0, 0, 354, 355, 357, 0, 0, 356,
	564, 565, 0, 566, 0, 358, 359, 0, 567, 0,
	360, 361, 362, 0, 363, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 0, 370, 372, 371, 0, 373,
	568, 0, 374, 375, 0, 0, 376, 377, 378, 0,
	0, 379, 380, 381, 382, 0, 383, 384, 386, 388,
	385, 387, 392, 389, 390, 391, 394, 0, 393, 0,
	395, 396, 397, 403, 404, 400, 401, 402, 405, 399,
	0, 398, 0, 0, 0, 406, 0, 569, 407, 570,
	409, 410, 0, 0, 411, 0, 0, 0, 413, 414,
	415, 0, 0, 416, 417, 571, 0, 418, 0, 572,
	419, 420, 412, 421, 422, 423, 424, 425, 426, 427,
	428, 0, 429, 430, 573, 574, 575, 431, 576, 432,
	433, 0, 434, 0, 435, 436, 437, 438, 439, 440,
	441, 577, 443, 442, 444, 0, 445, 0, 0, 0,
	0, 0, 446, 0, 448, 449, 450, 447, 451, 452,
	453, 454, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 578, 462, 0, 463, 464, 470, 471, 465, 466,
	472, 473, 474, 475, 476, 0, 478, 479, 477, 480,
	481, 482, 0, 483, 467, 468, 484, 485, 0, 486,
	487, 488, 489, 490, 491, 579, 0, 492, 0, 493,
	494, 495, 496, 469, 497, 502, 580, 498, 499, 500,
	501, 581, 0, 504, 505, 0, 503, 0, 506, 507,
	508, 509, 510, 511, 326, 512, 0, 513, 582, 583,
	584, 585, 0, 520, 0, 514, 515, 586, 516, 587,
	0, 517, 518, 519, 0, 521, 522, 0, 0, 523,
	524, 525, 527, 528, 526, 529, 0, 530, 0, 0,
	531, 532, 533, 588, 589, 590, 0, 535, 534, 591,
	1370, 0, 243, 0, 536, 537, 592, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 543, 0, 265,
	544, 266, 545, 0, 546, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 547, 548, 549, 0, 273, 274,
	550, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 0, 0,
	298, 299, 300, 301, 0, 302, 551, 552, 0, 306,
	303, 304, 0, 307, 305, 0, 308, 309, 310, 0,
	0, 311, 312, 313, 0, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 553, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 554, 555, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 556, 0, 0,
	0, 335, 0, 336, 0, 0, 0, 337, 338, 557,
	558, 339, 340, 0, 341, 559, 0, 560, 342, 0,
	343, 344, 345, 346, 347, 1369, 562, 563, 408, 0,
	348, 349, 0, 350, 351, 352, 353, 0, 0, 0,
	0, 354, 355, 357, 0, 0, 356, 564, 565, 0,
	566, 0, 358, 359, 0, 567, 0, 360, 361, 362,
	0, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 0, 370, 372, 371, 0, 373, 568, 0, 374,
	375, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 0, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 0, 398, 0,
	0, 0, 406, 0, 569, 407, 570, 409, 410, 0,
	0, 411, 0, 0, 0, 413, 414, 415, 0, 0,
	416, 417, 571, 0, 418, 0, 572, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 0, 429,
	430, 573, 574, 575, 431, 576, 432, 433, 0, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 577, 443,
	442, 444, 0, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 578, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 0, 478, 479, 477, 480, 481, 482, 0,
	483, 467, 468, 484, 485, 0, 486, 487, 488, 489,
	490, 491, 579, 0, 492, 0, 493, 494, 495, 496,
	469, 497, 502, 580, 498, 499, 500, 501, 581, 0,
	504, 505, 0, 503, 0, 506, 507, 508, 509, 510,
	511, 326, 512, 0, 513, 582, 583, 584, 585, 0,
	520, 0, 514, 515, 586, 516, 587, 0, 517, 518,
	519, 0, 521, 522, 0, 0, 523, 524, 525, 527,
	528, 526, 529, 0, 530, 0, 0, 531, 532, 533,
	588, 589, 590, 0, 535, 534, 591, 1365, 0, 243,
	0, 536, 537, 592, 538, 539, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 542, 543, 0, 265, 544, 266, 545,
	0, 546, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 547, 548, 549, 0, 273, 274, 550, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 300,
	301, 0, 302, 551, 552, 0, 306, 303, 304, 0,
	307, 305, 0, 308, 309, 310, 0, 0, 311, 312,
	313, 0, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 553, 321, 322, 323, 325, 327, 324, 328, 329,
	330, 331, 554, 555, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 556, 0, 0, 0, 335, 0,
	336, 0, 0, 0, 337, 338, 557, 558, 339, 340,
	0, 341, 559, 0, 560, 342, 0, 343, 344, 345,
	346, 347, 561, 562, 563, 408, 0, 348, 349, 0,
	350, 351, 352, 353, 0, 0, 0, 0, 354, 355,
	357, 0, 0, 356, 564, 565, 0, 566, 0, 358,
	359, 0, 567, 0, 360, 361, 362, 0, 363, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 0, 370,
	372, 371, 0, 373, 568, 0, 374, 375, 0, 0,
	376, 377, 378, 0, 0, 379, 380, 381, 382, 0,
	383, 384, 386, 388, 385, 387, 392, 389, 390, 391,
	394, 0, 393, 0, 395, 396, 397, 403, 404, 400,
	401, 402, 405, 399, 0, 398, 0, 0, 0, 406,
	0, 569, 407, 570, 409, 410, 0, 0, 411, 0,
	0, 0, 413, 414, 415, 0, 0, 416, 417, 571,
	0, 418, 0, 572, 419, 420, 412, 421, 422, 423,
	424, 425, 426, 427, 428, 0, 429, 430, 573, 574,
	575, 431, 576, 432, 433, 0, 434, 0, 435, 436,
	437, 438, 439, 440, 441, 577, 443, 442, 444, 0,
	445, 0, 0, 0, 0, 0, 446, 0, 448, 449,
	450, 447, 451, 452, 453, 454, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 578, 462, 0, 463, 464,
	470, 471, 465, 466, 472, 473, 474, 475, 476, 0,
	478, 479, 477, 480, 481, 482, 0, 483, 467, 468,
	484, 485, 0, 486, 487, 488, 489, 490, 491, 579,
	0, 492, 0, 493, 494, 495, 496, 469, 497, 502,
	580, 498, 499, 500, 501, 581, 0, 504, 505, 0,
	503, 0, 506, 507, 508, 509, 510, 511, 326, 512,
	0, 513, 582, 583, 584, 585, 0, 520, 0, 514,
	515, 586, 516, 587, 0, 517, 518, 519, 0, 521,
	522, 0, 0, 523, 524, 525, 527, 528, 526, 529,
	0, 530, 0, 0, 531, 532, 533, 588, 589, 590,
	0, 535, 534, 591, 1297, 0, 243, 0, 536, 537,
	592, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	542, 543, 0, 265, 544, 266, 545, 0, 546, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 547, 548,
	549, 0, 273, 274, 550, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 0, 0, 298, 299, 300, 301, 0, 302,
	551, 552, 0, 306, 303, 304, 0, 307, 305, 0,
	308, 309, 310, 0, 0, 311, 312, 313, 0, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 553, 321,
	322, 323, 325, 327, 324, 328, 329, 330, 331, 554,
	555, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 556, 0, 0, 0, 335, 0, 336, 0, 0,
	0, 337, 338, 557, 558, 339, 340, 0, 341, 559,
	0, 560, 342, 0, 343, 344, 345, 346, 347, 561,
	562, 563, 408, 0, 348, 349, 0, 350, 351, 352,
	353, 0, 0, 0, 0, 354, 355, 357, 0, 0,
	356, 564, 565, 0, 566, 0, 358, 359, 0, 567,
	0, 360, 361, 362, 0, 363, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 0, 370, 372, 371, 0,
	373, 568, 0, 374, 375, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 381, 382, 0, 383, 384, 386,
	388, 385, 387, 392, 389, 390, 391, 394, 0, 393,
	0, 395, 396, 397, 403, 404, 400, 401, 402, 405,
	399, 0, 398, 0, 0, 0, 406, 0, 569, 407,
	570, 409, 410, 0, 0, 411, 0, 0, 0, 413,
	414, 415, 0, 0, 416, 417, 571, 0, 418, 0,
	572, 419, 420, 412, 421, 422, 423, 424, 425, 426,
	427, 428, 0, 429, 430, 573, 574, 575, 431, 576,
	432, 433, 0, 434, 0, 435, 436, 437, 438, 439,
	440, 441, 577, 443, 442, 444, 0, 445, 0, 0,
	0, 0, 0, 446, 0, 448, 449, 450, 447, 451,
	452, 453, 454, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 578, 462, 0, 463, 464, 470, 471, 465,
	466, 472, 473, 474, 475, 476, 0, 478, 479, 477,
	480, 481, 482, 0, 483, 467, 468, 484, 485, 0,
	486, 487, 488, 489, 490, 491, 579, 0, 492, 0,
	493, 494, 495, 496, 469, 497, 502, 580, 498, 499,
	500, 501, 581, 0, 504, 505, 0, 503, 0, 506,
	507, 508, 509, 510, 511, 326, 512, 0, 513, 582,
	583, 584, 585, 0, 520, 0, 514, 515, 586, 516,
	587, 0, 517, 518, 519, 0, 521, 522, 0, 0,
	523, 524, 525, 527, 528, 526, 529, 0, 530, 0,
	0, 531, 532, 533, 588, 589, 590, 0, 535, 534,
	591, 1281, 0, 243, 0, 536, 537, 592, 538, 539,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 542, 543, 0,
	265, 544, 266, 545, 0, 546, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 547, 548, 549, 0, 273,
	274, 550, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 300, 301, 0, 302, 551, 552, 0,
	306, 303, 304, 0, 307, 305, 0, 308, 309, 310,
	0, 0, 311, 312, 313, 0, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 553, 321, 322, 323, 325,
	327, 324, 328, 329, 330, 331, 554, 555, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 556, 0,
	0, 0, 335, 0, 336, 0, 0, 0, 337, 338,
	557, 558, 339, 340, 0, 341, 559, 0, 560, 342,
	0, 343, 344, 345, 346, 347, 561, 562, 563, 408,
	0, 348, 349, 0, 350, 351, 352, 353, 0, 0,
	0, 0, 354, 355, 357, 0, 0, 356, 564, 565,
	0, 566, 0, 358, 359, 0, 567, 0, 360, 361,
	362, 0, 363, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 0, 370, 372, 371, 0, 373, 568, 0,
	374, 375, 0, 0, 376, 377, 378, 0, 0, 379,
	380, 381, 382, 0, 383, 384, 386, 388, 385, 387,
	392, 389, 390, 391, 394, 0, 393, 0, 395, 396,
	397, 403, 404, 400, 401, 402, 405, 399, 0, 398,
	0, 0, 0, 406, 0, 569, 407, 570, 409, 410,
	0, 0, 411, 0, 0, 0, 413, 414, 415, 0,
	0, 416, 417, 571, 0, 418, 0, 572, 419, 420,
	412, 421, 422, 423, 424, 425, 426, 427, 428, 0,
	429, 430, 573, 574, 575, 431, 576, 432, 433, 0,
	434, 0, 435, 436, 437, 438, 439, 440, 441, 577,
	443, 442, 444, 0, 445, 0, 0, 0, 0, 0,
	446, 0, 448, 449, 450, 447, 451, 452, 453, 454,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 578,
	462, 0, 463, 464, 470, 471, 465, 466, 472, 473,
	474, 475, 476, 0, 478, 479, 477, 480, 481, 482,
	0, 483, 467, 468, 484, 485, 0, 486, 487, 488,
	489, 490, 491, 579, 0, 492, 0, 493, 494, 495,
	496, 469, 497, 502, 580, 498, 499, 500, 501, 581,
	0, 504, 505, 0, 503, 0, 506, 507, 508, 509,
	510, 511, 326, 512, 0, 513, 582, 583, 584, 585,
	0, 520, 0, 514, 515, 586, 516, 587, 0, 517,
	518, 519, 0, 521, 522, 0, 0, 523, 524, 525,
	527, 528, 526, 529, 0, 530, 0, 0, 531, 532,
	533, 588, 589, 590, 0, 535, 534, 591, 646, 0,
	243, 0, 536, 537, 592, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 257, 258, 1153, 259,
	261, 262, 263, 264, 542, 543, 0, 265, 544, 266,
	545, 0, 546, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 547, 548, 1151, 0, 273, 274, 550, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 0, 0, 298, 299,
	300, 301, 0, 302, 551, 552, 0, 306, 303, 304,
	0, 307, 305, 0, 308, 309, 310, 0, 0, 311,
	312, 313, 0, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 553, 321, 322, 323, 325, 327, 324, 328,
	329, 330, 331, 554, 555, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 556, 0, 0, 0, 335,
	0, 336, 0, 0, 0, 337, 338, 557, 558, 339,
	340, 0, 341, 559, 0, 560, 342, 0, 343, 344,
	345, 346, 347, 561, 562, 563, 408, 0, 348, 349,
	0, 350, 351, 352, 353, 0, 0, 0, 0, 354,
	355, 357, 0, 0, 356, 564, 565, 0, 566, 0,
	358, 359, 0, 567, 0, 360, 361, 362, 0, 363,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 0,
	370, 372, 371, 0, 373, 568, 0, 374, 375, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 381, 382,
	0, 383, 384, 386, 388, 385, 387, 392, 389, 390,
	391, 394, 0, 647, 0, 395, 396, 397, 403, 404,
	400, 401, 402, 405, 399, 0, 398, 0, 0, 0,
	406, 0, 569, 407, 570, 409, 410, 0, 0, 411,
	0, 0, 0, 413, 414, 415, 0, 0, 416, 417,
	571, 0, 418, 0, 572, 419, 420, 412, 421, 422,
	423, 424, 425, 426, 427, 428, 0, 429, 430, 573,
	574, 575, 431, 576, 432, 433, 0, 434, 0, 435,
	436, 437, 438, 439, 440, 441, 577, 443, 442, 444,
	0, 445, 0, 0, 0, 0, 0, 446, 0, 448,
	449, 450, 447, 451, 452, 453, 454, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 578, 462, 0, 463,
	464, 470, 471, 465, 466, 643, 473, 474, 475, 476,
	0, 478, 479, 477, 480, 1154, 482, 0, 483, 467,
	468, 484, 485, 0, 486, 487, 488, 489, 490, 491,
	579, 0, 492, 0, 493, 494, 495, 496, 469, 497,
	502, 580, 498, 499, 500, 501, 581, 0, 504, 505,
	0, 503, 0, 506, 507, 508, 509, 510, 511, 326,
	512, 0, 513, 642, 583, 584, 585, 0, 520, 0,
	514, 1152, 586, 516, 587, 0, 517, 518, 519, 0,
	521, 522, 0, 0, 523, 524, 525, 527, 528, 526,
	529, 0, 530, 0, 0, 531, 532, 533, 588, 589,
	590, 243, 535, 534, 591, 0, 0, 0, 0, 536,
	537, 592, 538, 539, 540, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 1134, 255, 256, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 542, 543, 0, 265, 544,
	266, 545, 0, 546, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 547, 548, 549, 0, 273, 274, 550,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 300, 301, 0, 302, 551, 552, 0, 306, 303,
	304, 0, 307, 305, 0, 308, 309, 310, 0, 0,
	311, 312, 313, 0, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 553, 321, 322, 323, 325, 327, 324,
	328, 329, 330, 331, 554, 555, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 556, 0, 0, 0,
	335, 0, 336, 0, 0, 0, 337, 338, 557, 558,
	339, 340, 0, 341, 559, 0, 560, 342, 0, 343,
	344, 345, 346, 347, 561, 562, 563, 408, 0, 348,
	349, 0, 350, 351, 352, 353, 0, 0, 0, 0,
	354, 355, 357, 0, 0, 356, 564, 565, 0, 566,
	0, 358, 359, 0, 567, 0, 360, 361, 362, 0,
	363, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	0, 370, 372, 371, 0, 373, 568, 0, 374, 375,
	0, 0, 376, 377, 378, 0, 0, 379, 380, 381,
	382, 0, 383, 384, 386, 388, 385, 387, 392, 389,
	390, 391, 394, 0, 393, 0, 395, 396, 397, 403,
	404, 400, 401, 402, 405, 399, 0, 398, 0, 0,
	0, 406, 0, 569, 407, 570, 409, 410, 0, 0,
	411, 0, 0, 0, 413, 414, 415, 0, 0, 416,
	417, 571, 0, 418, 0, 572, 419, 420, 412, 421,
	422, 423, 424, 425, 426, 427, 428, 0, 429, 430,
	573, 574, 575, 431, 576, 432, 433, 0, 434, 0,
	435, 436, 437, 438, 439, 440, 441, 577, 443, 442,
	444, 0, 445, 0, 0, 0, 0, 0, 446, 0,
	448, 449, 450, 447, 451, 452, 453, 454, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 578, 462, 0,
	463, 464, 470, 471, 465, 466, 472, 473, 474, 475,
	476, 0, 478, 479, 477, 480, 481, 482, 0, 483,
	467, 468, 484, 485, 0, 486, 487, 488, 489, 490,
	491, 579, 0, 492, 0, 493, 494, 495, 496, 469,
	497, 502, 580, 498, 499, 500, 501, 581, 0, 504,
	505, 0, 503, 0, 506, 507, 508, 509, 510, 511,
	326, 512, 0, 513, 582, 583, 584, 585, 0, 520,
	0, 514, 515, 586, 516, 587, 0, 517, 518, 519,
	0, 521, 522, 0, 0, 523, 524, 525, 527, 528,
	526, 529, 0, 530, 0, 0, 531, 532, 533, 588,
	589, 590, 243, 535, 534, 591, 0, 0, 0, 0,
	536, 537, 592, 538, 539, 540, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 652, 255, 256, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 543, 0, 265,
	544, 266, 545, 0, 546, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 547, 548, 549, 0, 273, 274,
	550, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 0, 0,
	298, 299, 300, 301, 0, 302, 551, 552, 0, 306,
	303, 304, 0, 307, 305, 0, 308, 309, 310, 0,
	0, 311, 312, 313, 0, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 553, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 554, 555, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 556, 0, 0,
	0, 335, 0, 336, 0, 0, 0, 337, 338, 557,
	558, 339, 340, 0, 341, 559, 0, 560, 342, 0,
	343, 344, 345, 346, 347, 561, 562, 563, 408, 0,
	348, 349, 0, 350, 351, 352, 353, 0, 0, 0,
	0, 354, 355, 357, 0, 0, 356, 564, 565, 0,
	566, 0, 358, 359, 0, 567, 0, 360, 361, 362,
	0, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 0, 370, 372, 371, 0, 373, 568, 0, 374,
	375, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 0, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 0, 398, 0,
	0, 0, 406, 0, 569, 407, 570, 409, 410, 0,
	0, 411, 0, 0, 0, 413, 414, 415, 0, 0,
	416, 417, 571, 0, 418, 0, 572, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 0, 429,
	430, 573, 574, 575, 431, 576, 432, 433, 0, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 577, 443,
	442, 444, 0, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 578, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 0, 478, 479, 477, 480, 481, 482, 0,
	483, 467, 468, 484, 485, 0, 486, 487, 488, 489,
	490, 491, 579, 0, 492, 0, 493, 494, 495, 496,
	469, 497, 502, 580, 498, 499, 500, 501, 581, 0,
	504, 505, 0, 503, 0, 506, 507, 508, 509, 510,
	511, 326, 512, 0, 513, 582, 583, 584, 585, 0,
	520, 0, 514, 515, 586, 516, 587, 0, 517, 518,
	519, 0, 521, 522, 0, 0, 523, 524, 525, 527,
	528, 526, 529, 0, 530, 0, 0, 531, 532, 533,
	588, 589, 590, 0, 535, 534, 591, 646, 0, 243,
	0, 536, 537, 592, 538, 539, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 542, 543, 0, 265, 544, 266, 545,
	0, 546, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 547, 548, 549, 0, 273, 636, 550, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 634, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 300,
	301, 0, 302, 551, 552, 0, 306, 303, 304, 0,
	307, 305, 0, 308, 309, 310, 0, 0, 311, 312,
	313, 0, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 553, 321, 322, 323, 325, 327, 324, 328, 329,
	330, 331, 554, 555, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 556, 0, 0, 0, 335, 0,
	336, 0, 0, 0, 337, 338, 557, 558, 339, 340,
	0, 341, 559, 0, 560, 342, 0, 343, 344, 345,
	346, 347, 561, 562, 563, 408, 0, 348, 349, 0,
	350, 351, 352, 353, 0, 0, 0, 0, 354, 355,
	357, 0, 0, 356, 564, 565, 0, 566, 0, 358,
	359, 0, 567, 0, 360, 361, 362, 0, 363, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 0, 370,
	372, 371, 0, 373, 568, 0, 374, 375, 0, 0,
	376, 377, 635, 0, 0, 379, 380, 381, 382, 0,
	383, 384, 386, 388, 385, 387, 392, 389, 390, 391,
	394, 0, 647, 0, 395, 396, 397, 403, 404, 400,
	401, 402, 405, 399, 0, 398, 0, 0, 0, 406,
	0, 569, 407, 570, 409, 410, 0, 0, 411, 0,
	0, 0, 413, 414, 415, 0, 0, 416, 417, 571,
	0, 418, 0, 572, 419, 420, 412, 421, 422, 423,
	424, 425, 426, 427, 428, 0, 429, 430, 573, 574,
	575, 431, 576, 432, 433, 0, 434, 0, 435, 436,
	437, 438, 439, 440, 441, 577, 443, 442, 444, 0,
	445, 0, 0, 0, 0, 0, 446, 0, 448, 449,
	450, 447, 451, 452, 453, 454, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 637, 462, 0, 463, 464,
	470, 471, 465, 466, 643, 473, 474, 475, 476, 0,
	478, 479, 477, 480, 638, 482, 0, 483, 467, 468,
	484, 485, 0, 486, 487, 488, 489, 490, 491, 579,
	0, 492, 0, 493, 494, 495, 496, 469, 497, 502,
	580, 498, 499, 500, 501, 581, 0, 504, 505, 0,
	503, 0, 506, 507, 508, 509, 510, 511, 326, 512,
	0, 513, 642, 583, 584, 585, 0, 520, 0, 514,
	640, 586, 516, 587, 0, 517, 518, 519, 0, 521,
	522, 0, 0, 523, 524, 525, 527, 528, 526, 529,
	0, 530, 0, 0, 531, 532, 533, 588, 589, 590,
	0, 535, 534, 591, 628, 0, 243, 0, 536, 537,
	592, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	542, 543, 0, 265, 544, 266, 545, 0, 546, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 547, 548,
	549, 0, 273, 274, 550, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 0, 0, 298, 299, 300, 301, 0, 302,
	551, 552, 0, 306, 303, 304, 0, 307, 305, 0,
	308, 309, 310, 0, 0, 311, 312, 313, 0, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 553, 321,
	322, 323, 325, 327, 324, 328, 329, 330, 331, 554,
	555, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 556, 0, 0, 0, 335, 0, 336, 0, 0,
	0, 337, 338, 557, 558, 339, 340, 0, 341, 559,
	0, 560, 342, 0, 343, 344, 345, 346, 347, 561,
	562, 563, 408, 0, 348, 349, 0, 350, 351, 352,
	353, 0, 0, 0, 0, 354, 355, 357, 0, 0,
	356, 564, 565, 0, 566, 0, 358, 359, 0, 567,
	0, 360, 361, 362, 0, 363, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 0, 370, 372, 371, 0,
	373, 568, 0, 374, 375, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 381, 382, 0, 383, 384, 386,
	388, 385, 387, 392, 389, 390, 391, 394, 0, 393,
	0, 395, 396, 397, 403, 404, 400, 401, 402, 405,
	399, 0, 398, 0, 0, 0, 406, 0, 569, 407,
	570, 409, 410, 0, 0, 411, 0, 0, 0, 413,
	414, 415, 0, 0, 416, 417, 571, 0, 418, 0,
	572, 419, 420, 412, 421, 422, 423, 424, 425, 426,
	427, 428, 0, 429, 430, 573, 574, 575, 431, 576,
	432, 433, 0, 434, 0, 435, 436, 437, 438, 439,
	440, 441, 577, 443, 442, 444, 0, 445, 0, 0,
	0, 0, 0, 446, 0, 448, 449, 450, 447, 451,
	452, 453, 454, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 578, 462, 0, 463, 464, 629, 471, 465,
	466, 472, 473, 474, 475, 476, 0, 478, 479, 477,
	480, 481, 482, 0, 483, 467, 468, 484, 485, 0,
	486, 487, 488, 489, 490, 491, 579, 0, 492, 0,
	493, 494, 495, 496, 469, 497, 502, 580, 498, 499,
	500, 501, 581, 0, 504, 505, 0, 503, 0, 506,
	507, 508, 509, 510, 511, 326, 512, 0, 513, 582,
	583, 584, 585, 0, 520, 0, 514, 515, 586, 516,
	587, 0, 517, 518, 519, 0, 521, 522, 0, 0,
	523, 524, 525, 527, 528, 526, 529, 0, 530, 0,
	0, 531, 532, 533, 588, 589, 590, 0, 535, 534,
	591, 626, 0, 243, 0, 536, 537, 592, 538, 539,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 542, 543, 0,
	265, 544, 266, 545, 0, 546, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 547, 548, 549, 0, 273,
	274, 550, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 300, 301, 0, 302, 551, 552, 0,
	306, 303, 304, 0, 307, 305, 0, 308, 309, 310,
	0, 0, 311, 312, 313, 0, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 553, 321, 322, 323, 325,
	327, 324, 328, 329, 330, 331, 554, 555, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 556, 0,
	0, 0, 335, 0, 336, 0, 0, 0, 337, 338,
	557, 558, 339, 340, 0, 341, 559, 0, 560, 342,
	0, 343, 344, 345, 346, 347, 561, 562, 563, 408,
	0, 348, 349, 0, 350, 351, 352, 353, 0, 0,
	0, 0, 354, 355, 357, 0, 0, 356, 564, 565,
	0, 566, 0, 358, 359, 0, 567, 0, 360, 361,
	362, 0, 363, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 0, 370, 372, 371, 0, 373, 568, 0,
	374, 375, 0, 0, 376, 377, 378, 0, 0, 379,
	380, 381, 382, 0, 383, 384, 386, 388, 385, 387,
	392, 389, 390, 391, 394, 0, 393, 0, 395, 396,
	397, 403, 404, 400, 401, 402, 405, 399, 0, 398,
	0, 0, 0, 406, 0, 569, 407, 570, 409, 410,
	0, 0, 411, 0, 0, 0, 413, 414, 415, 0,
	0, 416, 417, 571, 0, 418, 0, 572, 419, 420,
	412, 421, 422, 423, 424, 425, 426, 427, 428, 0,
	429, 430, 573, 574, 575, 431, 576, 432, 433, 0,
	434, 0, 435, 436, 437, 438, 439, 440, 441, 577,
	443, 442, 444, 0, 445, 0, 0, 0, 0, 0,
	446, 0, 448, 449, 450, 447, 451, 452, 453, 454,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 578,
	462, 0, 463, 464, 470, 471, 465, 466, 472, 473,
	474, 475, 476, 0, 478, 479, 477, 480, 481, 482,
	0, 483, 467, 468, 484, 485, 0, 486, 487, 488,
	489, 490, 491, 579, 0, 492, 0, 493, 494, 495,
	496, 469, 497, 502, 580, 498, 499, 500, 501, 581,
	0, 504, 505, 0, 503, 0, 506, 507, 508, 509,
	510, 511, 326, 512, 0, 513, 582, 583, 584, 585,
	0, 520, 0, 514, 515, 586, 516, 587, 0, 517,
	518, 519, 0, 521, 522, 0, 0, 523, 524, 525,
	527, 528, 526, 529, 0, 530, 0, 0, 531, 532,
	533, 588, 589, 590, 0, 535, 534, 591, 620, 0,
	243, 0, 536, 537, 592, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 542, 543, 0, 265, 544, 266,
	545, 0, 546, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 547, 548, 549, 0, 273, 274, 550, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 0, 0, 298, 299,
	300, 301, 0, 302, 551, 552, 0, 306, 303, 304,
	0, 307, 305, 0, 308, 309, 310, 0, 0, 311,
	312, 313, 0, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 553, 321, 322, 323, 325, 327, 324, 328,
	329, 330, 331, 554, 555, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 556, 0, 0, 0, 335,
	0, 336, 0, 0, 0, 337, 338, 557, 558, 339,
	340, 0, 341, 559, 0, 560, 342, 0, 343, 344,
	345, 346, 347, 561, 562, 563, 408, 0, 348, 349,
	0, 350, 351, 352, 353, 0, 0, 0, 0, 354,
	355, 357, 0, 0, 356, 564, 565, 0, 566, 0,
	358, 359, 0, 567, 0, 360, 361, 362, 0, 363,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 0,
	370, 372, 371, 0, 373, 568, 0, 374, 375, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 381, 382,
	0, 383, 384, 386, 388, 385, 387, 392, 389, 390,
	391, 394, 0, 393, 0, 395, 396, 397, 403, 404,
	400, 401, 402, 405, 399, 0, 398, 0, 0, 0,
	406, 0, 569, 407, 570, 409, 410, 0, 0, 411,
	0, 0, 0, 413, 414, 415, 0, 0, 416, 417,
	571, 0, 418, 0, 572, 419, 420, 412, 421, 422,
	423, 424, 425, 426, 427, 428, 0, 429, 430, 573,
	574, 575, 431, 576, 432, 433, 0, 434, 0, 435,
	436, 437, 438, 439, 440, 441, 577, 443, 442, 444,
	0, 445, 0, 0, 0, 0, 0, 446, 0, 448,
	449, 450, 447, 451, 452, 453, 454, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 578, 462, 0, 463,
	464, 470, 471, 465, 466, 472, 473, 474, 475, 476,
	0, 478, 479, 477, 480, 481, 482, 0, 483, 467,
	468, 484, 485, 0, 486, 487, 488, 489, 490, 491,
	579, 0, 492, 0, 493, 494, 495, 496, 469, 497,
	502, 580, 498, 499, 500, 501, 581, 0, 504, 505,
	0, 503, 0, 506, 507, 508, 509, 510, 511, 326,
	512, 0, 513, 582, 583, 584, 585, 0, 520, 0,
	514, 515, 586, 516, 587, 0, 517, 518, 519, 0,
	521, 522, 0, 0, 523, 524, 525, 527, 528, 526,
	529, 0, 530, 0, 0, 531, 532, 533, 588, 589,
	590, 0, 535, 534, 591, 598, 0, 243, 0, 536,
	537, 592, 538, 539, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 542, 543, 0, 265, 544, 266, 545, 0, 546,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 547,
	548, 549, 0, 273, 274, 550, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 300, 301, 0,
	302, 551, 552, 0, 306, 303, 304, 0, 307, 305,
	0, 308, 309, 310, 0, 0, 311, 312, 313, 0,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 553,
	321, 322, 323, 325, 327, 324, 328, 329, 330, 331,
	554, 555, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 556, 0, 0, 0, 335, 0, 336, 0,
	0, 0, 337, 338, 557, 558, 339, 340, 0, 341,
	559, 0, 560, 342, 0, 343, 344, 345, 346, 347,
	561, 562, 563, 408, 0, 348, 349, 0, 350, 351,
	352, 353, 0, 0, 0, 0, 354, 355, 357, 0,
	0, 356, 564, 565, 0, 566, 0, 358, 359, 0,
	567, 0, 360, 361, 362, 0, 363, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 0, 370, 372, 371,
	0, 373, 568, 0, 374, 375, 0, 0, 376, 377,
	378, 0, 0, 379, 380, 381, 382, 0, 383, 384,
	386, 388, 385, 387, 392, 389, 390, 391, 394, 0,
	393, 0, 395, 396, 397, 403, 404, 400, 401, 402,
	405, 399, 0, 398, 0, 0, 0, 406, 0, 569,
	407, 570, 409, 410, 0, 0, 411, 0, 0, 0,
	413, 414, 415, 0, 0, 416, 417, 571, 0, 418,
	0, 572, 419, 420, 412, 421, 422, 423, 424, 425,
	426, 427, 428, 0, 429, 430, 573, 574, 575, 431,
	576, 432, 433, 0, 434, 0, 435, 436, 437, 438,
	439, 440, 441, 577, 443, 442, 444, 0, 445, 0,
	0, 0, 0, 0, 446, 0, 448, 449, 450, 447,
	451, 452, 453, 454, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 578, 462, 0, 463, 464, 470, 471,
	465, 466, 472, 473, 474, 475, 476, 0, 478, 479,
	477, 480, 481, 482, 0, 483, 467, 468, 484, 485,
	0, 486, 487, 488, 489, 490, 491, 579, 0, 492,
	0, 493, 494, 495, 496, 469, 497, 502, 580, 498,
	499, 500, 501, 581, 0, 504, 505, 0, 503, 0,
	506, 507, 508, 509, 510, 511, 326, 512, 0, 513,
	582, 583, 584, 585, 0, 520, 0, 514, 515, 586,
	516, 587, 0, 517, 518, 519, 0, 521, 522, 0,
	0, 523, 524, 525, 527, 528, 526, 529, 0, 530,
	0, 0, 531, 532, 533, 588, 589, 590, 243, 535,
	534, 591, 0, 0, 0, 0, 536, 537, 592, 538,
	539, 540, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 541,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 542, 543, 0, 265, 544, 266, 545, 0,
	546, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	547, 548, 549, 0, 273, 274, 550, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 0, 0, 298, 299, 300, 301,
	0, 302, 551, 552, 0, 306, 303, 304, 0, 307,
	305, 0, 308, 309, 310, 0, 0, 311, 312, 313,
	0, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	553, 321, 322, 323, 325, 327, 324, 328, 329, 330,
	331, 554, 555, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 556, 0, 0, 0, 335, 0, 336,
	0, 0, 0, 337, 338, 557, 558, 339, 340, 0,
	341, 559, 0, 560, 342, 0, 343, 344, 345, 346,
	347, 561, 562, 563, 408, 0, 348, 349, 0, 350,
	351, 352, 353, 0, 0, 0, 0, 354, 355, 357,
	0, 0, 356, 564, 565, 0, 566, 0, 358, 359,
	0, 567, 0, 360, 361, 362, 0, 363, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 0, 370, 372,
	371, 0, 373, 568, 0, 374, 375, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 381, 382, 0, 383,
	384, 386, 388, 385, 387, 392, 389, 390, 391, 394,
	0, 393, 0, 395, 396, 397, 403, 404, 400, 401,
	402, 405, 399, 0, 398, 0, 0, 0, 406, 0,
	569, 407, 570, 409, 410, 0, 0, 411, 0, 0,
	0, 413, 414, 415, 0, 0, 416, 417, 571, 0,
	418, 0, 572, 419, 420, 412, 421, 422, 423, 424,
	425, 426, 427, 428, 0, 429, 430, 573, 574, 575,
	431, 576, 432, 433, 0, 434, 0, 435, 436, 437,
	438, 439, 440, 441, 577, 443, 442, 444, 0, 445,
	0, 0, 0, 0, 0, 446, 0, 448, 449, 450,
	447, 451, 452, 453, 454, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 578, 462, 0, 463, 464, 470,
	471, 465, 466, 472, 473, 474, 475, 476, 0, 478,
	479, 477, 480, 481, 482, 0, 483, 467, 468, 484,
	485, 0, 486, 487, 488, 489, 490, 491, 579, 0,
	492, 0, 493, 494, 495, 496, 469, 497, 502, 580,
	498, 499, 500, 501, 581, 0, 504, 505, 0, 503,
	0, 506, 507, 508, 509, 510, 511, 326, 512, 0,
	513, 582, 583, 584, 585, 0, 520, 0, 514, 515,
	586, 516, 587, 0, 517, 518, 519, 0, 521, 522,
	0, 0, 523, 524, 525, 527, 528, 526, 529, 0,
	530, 0, 0, 531, 532, 533, 588, 589, 590, 243,
	535, 534, 591, 0, 0, 0, 0, 536, 537, 592,
	538, 539, 540, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 542, 543, 0, 265, 544, 266, 545,
	0, 546, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 547, 548, 549, 0, 273, 274, 550, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 300,
	301, 0, 302, 551, 552, 0, 306, 303, 304, 0,
	307, 305, 0, 308, 309, 310, 0, 0, 311, 312,
	313, 0, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 553, 321, 322, 323, 325, 327, 324, 328, 329,
	330, 331, 554, 555, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 556, 0, 0, 0, 335, 0,
	336, 0, 0, 0, 337, 338, 557, 558, 339, 340,
	0, 341, 559, 0, 560, 342, 0, 343, 344, 345,
	346, 347, 3149, 562, 563, 408, 0, 348, 349, 0,
	350, 351, 352, 353, 0, 0, 0, 0, 354, 355,
	357, 0, 0, 356, 564, 565, 0, 566, 0, 358,
	359, 0, 567, 0, 360, 361, 362, 0, 363, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 0, 370,
	372, 371, 0, 373, 568, 0, 374, 375, 0, 0,
	376, 377, 378, 0, 0, 379, 380, 381, 382, 0,
	383, 384, 386, 388, 385, 387, 392, 389, 390, 391,
	394, 0, 393, 0, 395, 396, 397, 403, 404, 400,
	401, 402, 405, 399, 0, 398, 0, 0, 0, 406,
	0, 569, 407, 570, 409, 410, 0, 0, 411, 0,
	0, 0, 413, 414, 415, 0, 0, 416, 417, 571,
	0, 418, 0, 572, 419, 420, 412, 421, 422, 423,
	424, 425, 426, 427, 428, 0, 429, 430, 573, 574,
	575, 431, 576, 432, 433, 0, 434, 0, 435, 436,
	437, 438, 439, 440, 441, 577, 443, 442, 444, 0,
	445, 0, 0, 0, 0, 0, 446, 0, 448, 449,
	450, 447, 451, 452, 453, 454, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 578, 462, 0, 463, 464,
	470, 471, 465, 466, 472, 473, 474, 475, 476, 0,
	478, 479, 477, 480, 481, 482, 0, 483, 467, 468,
	484, 485, 0, 486, 487, 488, 489, 490, 491, 579,
	0, 492, 0, 493, 494, 495, 496, 469, 497, 502,
	580, 498, 499, 500, 501, 581, 0, 504, 505, 0,
	503, 0, 506, 507, 508, 509, 510, 511, 326, 512,
	0, 513, 582, 583, 584, 585, 0, 520, 0, 514,
	515, 586, 516, 587, 0, 517, 518, 519, 0, 521,
	522, 0, 0, 523, 524, 525, 527, 528, 526, 529,
	0, 530, 0, 0, 531, 532, 533, 588, 589, 590,
	243, 535, 534, 591, 0, 0, 0, 0, 536, 537,
	592, 538, 539, 540, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 542, 543, 0, 265, 544, 266,
	545, 0, 546, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 547, 548, 549, 0, 273, 274, 550, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 0, 0, 298, 299,
	300, 301, 0, 302, 551, 552, 0, 306, 303, 304,
	0, 307, 305, 0, 308, 309, 310, 0, 0, 311,
	312, 313, 0, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 553, 321, 322, 323, 325, 327, 324, 328,
	329, 330, 331, 554, 555, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 556, 0, 0, 0, 335,
	0, 336, 0, 0, 0, 337, 338, 557, 558, 339,
	340, 0, 341, 559, 0, 560, 342, 0, 343, 344,
	345, 346, 347, 3098, 562, 563, 408, 0, 348, 349,
	0, 350, 351, 352, 353, 0, 0, 0, 0, 354,
	355, 357, 0, 0, 356, 564, 565, 0, 566, 0,
	358, 359, 0, 567, 0, 360, 361, 362, 0, 363,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 0,
	370, 372, 371, 0, 373, 568, 0, 374, 375, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 381, 382,
	0, 383, 384, 386, 388, 385, 387, 392, 389, 390,
	391, 394, 0, 393, 0, 395, 396, 397, 403, 404,
	400, 401, 402, 405, 399, 0, 398, 0, 0, 0,
	406, 0, 569, 407, 570, 409, 410, 0, 0, 411,
	0, 0, 0, 413, 414, 415, 0, 0, 416, 417,
	571, 0, 418, 0, 572, 419, 420, 412, 421, 422,
	423, 424, 425, 426, 427, 428, 0, 429, 430, 573,
	574, 575, 431, 576, 432, 433, 0, 434, 0, 435,
	436, 437, 438, 439, 440, 441, 577, 443, 442, 444,
	0, 445, 0, 0, 0, 0, 0, 446, 0, 448,
	449, 450, 447, 451, 452, 453, 454, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 578, 462, 0, 463,
	464, 470, 471, 465, 466, 472, 473, 474, 475, 476,
	0, 478, 479, 477, 480, 481, 482, 0, 483, 467,
	468, 484, 485, 0, 486, 487, 488, 489, 490, 491,
	579, 0, 492, 0, 493, 494, 495, 496, 469, 497,
	502, 580, 498, 499, 500, 501, 581, 0, 504, 505,
	0, 503, 0, 506, 507, 508, 509, 510, 511, 326,
	512, 0, 513, 582, 583, 584, 585, 0, 520, 0,
	514, 515, 586, 516, 587, 0, 517, 518, 519, 0,
	521, 522, 0, 0, 523, 524, 525, 527, 528, 526,
	529, 0, 530, 0, 0, 531, 532, 533, 588, 589,
	590, 243, 535, 534, 591, 0, 0, 0, 0, 536,
	537, 592, 538, 539, 540, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 542, 543, 0, 265, 544,
	266, 545, 0, 546, 267, 268, 269, 270, 271, 0,
	0, 0, 272, 547, 548, 549, 0, 273, 274, 550,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	0, 0, 283, 284, 285, 282, 0, 286, 0, 287,
	288, 289, 290, 291, 292, 0, 293, 294, 295, 0,
	296, 297, 0, 0, 0, 0, 0, 0, 0, 298,
	299, 300, 301, 0, 302, 551, 552, 0, 306, 303,
	304, 0, 307, 305, 0, 308, 309, 310, 0, 0,
	311, 312, 313, 0, 314, 315, 0, 316, 317, 318,
	0, 319, 320, 553, 321, 322, 323, 325, 327, 324,
	328, 329, 330, 331, 554, 555, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 556, 0, 0, 0,
	335, 0, 336, 0, 0, 0, 337, 338, 557, 558,
	339, 340, 0, 341, 559, 0, 560, 342, 0, 343,
	344, 345, 346, 347, 3036, 562, 563, 408, 0, 348,
	349, 0, 350, 351, 352, 353, 0, 0, 0, 0,
	354, 355, 357, 0, 0, 356, 564, 565, 0, 566,
	0, 358, 359, 0, 567, 0, 360, 361, 362, 0,
	363, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	0, 370, 372, 371, 0, 373, 568, 0, 374, 375,
	0, 0, 376, 377, 378, 0, 0, 379, 380, 381,
	382, 0, 383, 384, 386, 388, 385, 387, 392, 389,
	390, 391, 394, 0, 393, 0, 395, 396, 397, 403,
	404, 400, 401, 402, 405, 399, 0, 398, 0, 0,
	0, 406, 0, 569, 407, 570, 409, 410, 0, 0,
	411, 0, 0, 0, 413, 414, 415, 0, 0, 416,
	417, 571, 0, 418, 0, 572, 419, 420, 412, 421,
	422, 423, 424, 425, 426, 427, 428, 0, 429, 430,
	573, 574, 575, 431, 576, 432, 433, 0, 434, 0,
	435, 436, 437, 438, 439, 440, 441, 577, 443, 442,
	444, 0, 445, 0, 0, 0, 0, 0, 446, 0,
	448, 449, 450, 447, 451, 452, 453, 454, 0, 455,
	456, 457, 0, 458, 459, 460, 461, 578, 462, 0,
	463, 464, 470, 471, 465, 466, 472, 473, 474, 475,
	476, 0, 478, 479, 477, 480, 481, 482, 0, 483,
	467, 468, 484, 485, 0, 486, 487, 488, 489, 490,
	491, 579, 0, 492, 0, 493, 494, 495, 496, 469,
	497, 502, 580, 498, 499, 500, 501, 581, 0, 504,
	505, 0, 503, 0, 506, 507, 508, 509, 510, 511,
	326, 512, 0, 513, 582, 583, 584, 585, 0, 520,
	0, 514, 515, 586, 516, 587, 0, 517, 518, 519,
	0, 521, 522, 0, 0, 523, 524, 525, 527, 528,
	526, 529, 0, 530, 0, 0, 531, 532, 533, 588,
	589, 590, 243, 535, 534, 591, 0, 0, 0, 0,
	536, 537, 592, 538, 539, 540, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 542, 543, 0, 265,
	544, 266, 545, 0, 546, 267, 268, 269, 270, 271,
	0, 0, 0, 272, 547, 548, 549, 0, 273, 274,
	550, 0, 0, 0, 275, 276, 277, 278, 279, 280,
	281, 0, 0, 283, 284, 285, 282, 0, 286, 0,
	287, 288, 289, 290, 291, 292, 0, 293, 294, 295,
	0, 296, 297, 0, 0, 0, 0, 0, 0, 0,
	298, 299, 300, 301, 0, 302, 551, 552, 0, 306,
	303, 304, 0, 307, 305, 0, 308, 309, 310, 0,
	0, 311, 312, 313, 0, 314, 315, 0, 316, 317,
	318, 0, 319, 320, 553, 321, 322, 323, 325, 327,
	324, 328, 329, 330, 331, 554, 555, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 556, 0, 0,
	0, 335, 0, 336, 0, 0, 0, 337, 338, 557,
	558, 339, 340, 0, 341, 559, 0, 560, 342, 0,
	343, 344, 345, 346, 347, 3034, 562, 563, 408, 0,
	348, 349, 0, 350, 351, 352, 353, 0, 0, 0,
	0, 354, 355, 357, 0, 0, 356, 564, 565, 0,
	566, 0, 358, 359, 0, 567, 0, 360, 361, 362,
	0, 363, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 0, 370, 372, 371, 0, 373, 568, 0, 374,
	375, 0, 0, 376, 377, 378, 0, 0, 379, 380,
	381, 382, 0, 383, 384, 386, 388, 385, 387, 392,
	389, 390, 391, 394, 0, 393, 0, 395, 396, 397,
	403, 404, 400, 401, 402, 405, 399, 0, 398, 0,
	0, 0, 406, 0, 569, 407, 570, 409, 410, 0,
	0, 411, 0, 0, 0, 413, 414, 415, 0, 0,
	416, 417, 571, 0, 418, 0, 572, 419, 420, 412,
	421, 422, 423, 424, 425, 426, 427, 428, 0, 429,
	430, 573, 574, 575, 431, 576, 432, 433, 0, 434,
	0, 435, 436, 437, 438, 439, 440, 441, 577, 443,
	442, 444, 0, 445, 0, 0, 0, 0, 0, 446,
	0, 448, 449, 450, 447, 451, 452, 453, 454, 0,
	455, 456, 457, 0, 458, 459, 460, 461, 578, 462,
	0, 463, 464, 470, 471, 465, 466, 472, 473, 474,
	475, 476, 0, 478, 479, 477, 480, 481, 482, 0,
	483, 467, 468, 484, 485, 0, 486, 487, 488, 489,
	490, 491, 579, 0, 492, 0, 493, 494, 495, 496,
	469, 497, 502, 580, 498, 499, 500, 501, 581, 0,
	504, 505, 0, 503, 0, 506, 507, 508, 509, 510,
	511, 326, 512, 0, 513, 582, 583, 584, 585, 0,
	520, 0, 514, 515, 586, 516, 587, 0, 517, 518,
	519, 0, 521, 522, 0, 0, 523, 524, 525, 527,
	528, 526, 529, 0, 530, 0, 0, 531, 532, 533,
	588, 589, 590, 243, 535, 534, 591, 0, 0, 0,
	0, 536, 537, 592, 538, 539, 540, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 542, 543, 0,
	265, 544, 266, 545, 0, 546, 267, 268, 269, 270,
	271, 0, 0, 0, 272, 547, 548, 549, 0, 273,
	274, 550, 0, 0, 0, 275, 276, 277, 278, 279,
	280, 281, 0, 0, 283, 284, 285, 282, 0, 286,
	0, 287, 288, 289, 290, 291, 292, 0, 293, 294,
	295, 0, 296, 297, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 300, 301, 0, 302, 551, 552, 0,
	306, 303, 304, 0, 307, 305, 0, 308, 309, 310,
	0, 0, 311, 312, 313, 0, 314, 315, 0, 316,
	317, 318, 0, 319, 320, 553, 321, 322, 323, 325,
	327, 324, 328, 329, 330, 331, 554, 555, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 556, 0,
	0, 0, 335, 0, 336, 0, 0, 0, 337, 338,
	557, 558, 339, 340, 0, 341, 559, 0, 560, 342,
	0, 343, 344, 345, 346, 347, 3020, 562, 563, 408,
	0, 348, 349, 0, 350, 351, 352, 353, 0, 0,
	0, 0, 354, 355, 357, 0, 0, 356, 564, 565,
	0, 566, 0, 358, 359, 0, 567, 0, 360, 361,
	362, 0, 363, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 0, 370, 372, 371, 0, 373, 568, 0,
	374, 375, 0, 0, 376, 377, 378, 0, 0, 379,
	380, 381, 382, 0, 383, 384, 386, 388, 385, 387,
	392, 389, 390, 391, 394, 0, 393, 0, 395, 396,
	397, 403, 404, 400, 401, 402, 405, 399, 0, 398,
	0, 0, 0, 406, 0, 569, 407, 570, 409, 410,
	0, 0, 411, 0, 0, 0, 413, 414, 415, 0,
	0, 416, 417, 571, 0, 418, 0, 572, 419, 420,
	412, 421, 422, 423, 424, 425, 426, 427, 428, 0,
	429, 430, 573, 574, 575, 431, 576, 432, 433, 0,
	434, 0, 435, 436, 437, 438, 439, 440, 441, 577,
	443, 442, 444, 0, 445, 0, 0, 0, 0, 0,
	446, 0, 448, 449, 450, 447, 451, 452, 453, 454,
	0, 455, 456, 457, 0, 458, 459, 460, 461, 578,
	462, 0, 463, 464, 470, 471, 465, 466, 472, 473,
	474, 475, 476, 0, 478, 479, 477, 480, 481, 482,
	0, 483, 467, 468, 484, 485, 0, 486, 487, 488,
	489, 490, 491, 579, 0, 492, 0, 493, 494, 495,
	496, 469, 497, 502, 580, 498, 499, 500, 501, 581,
	0, 504, 505, 0, 503, 0, 506, 507, 508, 509,
	510, 511, 326, 512, 0, 513, 582, 583, 584, 585,
	0, 520, 0, 514, 515, 586, 516, 587, 0, 517,
	518, 519, 0, 521, 522, 0, 0, 523, 524, 525,
	527, 528, 526, 529, 0, 530, 0, 0, 531, 532,
	533, 588, 589, 590, 243, 535, 534, 591, 0, 0,
	0, 0, 536, 537, 592, 538, 539, 540, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 542, 543,
	0, 265, 544, 266, 545, 0, 546, 267, 268, 269,
	270, 271, 0, 0, 0, 272, 547, 548, 549, 0,
	273, 274, 550, 0, 0, 0, 275, 276, 277, 278,
	279, 280, 281, 0, 0, 283, 284, 285, 282, 0,
	286, 0, 287, 288, 289, 290, 291, 292, 0, 293,
	294, 295, 0, 296, 297, 0, 0, 0, 0, 0,
	0, 0, 298, 299, 300, 301, 0, 302, 551, 552,
	0, 306, 303, 304, 0, 307, 305, 0, 308, 309,
	310, 0, 0, 311, 312, 313, 0, 314, 315, 0,
	316, 317, 318, 0, 319, 320, 553, 321, 322, 323,
	325, 327, 324, 328, 329, 330, 331, 554, 555, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 556,
	0, 0, 0, 335, 0, 336, 0, 0, 0, 337,
	338, 557, 558, 339, 340, 0, 341, 559, 0, 560,
	342, 0, 343, 344, 345, 346, 347, 2652, 562, 563,
	408, 0, 348, 349, 0, 350, 351, 352, 353, 0,
	0, 0, 0, 354, 355, 357, 0, 0, 356, 564,
	565, 0, 566, 0, 358, 359, 0, 567, 0, 360,
	361, 362, 0, 363, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 0, 370, 372, 371, 0, 373, 568,
	0, 374, 375, 0, 0, 376, 377, 378, 0, 0,
	379, 380, 381, 382, 0, 383, 384, 386, 388, 385,
	387, 392, 389, 390, 391, 394, 0, 393, 0, 395,
	396, 397, 403, 404, 400, 401, 402, 405, 399, 0,
	398, 0, 0, 0, 406, 0, 569, 407, 570, 409,
	410, 0, 0, 411, 0, 0, 0, 413, 414, 415,
	0, 0, 416, 417, 571, 0, 418, 0, 572, 419,
	420, 412, 421, 422, 423, 424, 425, 426, 427, 428,
	0, 429, 430, 573, 574, 575, 431, 576, 432, 433,
	0, 434, 0, 435, 436, 437, 438, 439, 440, 441,
	577, 443, 442, 444, 0, 445, 0, 0, 0, 0,
	0, 446, 0, 448, 449, 450, 447, 451, 452, 453,
	454, 0, 455, 456, 457, 0, 458, 459, 460, 461,
	578, 462, 0, 463, 464, 470, 471, 465, 466, 472,
	473, 474, 475, 476, 0, 478, 479, 477, 480, 481,
	482, 0, 483, 467, 468, 484, 485, 0, 486, 487,
	488, 489, 490, 491, 579, 0, 492, 0, 493, 494,
	495, 496, 469, 497, 502, 580, 498, 499, 500, 501,
	581, 0, 504, 505, 0, 503, 0, 506, 507, 508,
	509, 510, 511, 326, 512, 0, 513, 582, 583, 584,
	585, 0, 520, 0, 514, 515, 586, 516, 587, 0,
	517, 518, 519, 0, 521, 522, 0, 0, 523, 524,
	525, 527, 528, 526, 529, 0, 530, 0, 0, 531,
	532, 533, 588, 589, 590, 243, 535, 534, 591, 0,
	0, 0, 0, 536, 537, 592, 538, 539, 540, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 542,
	543, 0, 265, 544, 266, 545, 0, 546, 267, 268,
	269, 270, 271, 0, 0, 0, 272, 547, 548, 549,
	0, 273, 274, 550, 0, 0, 0, 275, 276, 277,
	278, 279, 280, 281, 0, 0, 283, 284, 285, 282,
	0, 286, 0, 287, 288, 289, 290, 291, 292, 0,
	293, 294, 295, 0, 296, 297, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 300, 301, 0, 302, 551,
	552, 0, 306, 303, 304, 0, 307, 305, 0, 308,
	309, 310, 0, 0, 311, 312, 313, 0, 314, 315,
	0, 316, 317, 318, 0, 319, 320, 553, 321, 322,
	323, 325, 327, 324, 328, 329, 330, 331, 554, 555,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	556, 0, 0, 0, 335, 0, 336, 0, 0, 0,
	337, 338, 557, 558, 339, 340, 0, 341, 559, 0,
	560, 342, 0, 343, 344, 345, 346, 347, 561, 562,
	563, 408, 0, 348, 349, 0, 350, 351, 352, 353,
	0, 0, 0, 0, 354, 355, 357, 0, 0, 356,
	564, 565, 0, 566, 0, 358, 359, 0, 567, 0,
	360, 361, 362, 0, 363, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 0, 370, 372, 371, 0, 373,
	568, 0, 374, 375, 0, 0, 376, 377, 378, 0,
	0, 379, 380, 381, 382, 0, 383, 384, 386, 388,
	385, 387, 392, 389, 390, 391, 394, 0, 393, 0,
	395, 396, 397, 403, 404, 400, 401, 402, 405, 399,
	0, 398, 0, 0, 0, 406, 0, 569, 407, 570,
	409, 410, 0, 0, 411, 0, 0, 0, 413, 414,
	415, 0, 0, 416, 417, 571, 0, 418, 0, 572,
	419, 420, 412, 421, 422, 423, 424, 425, 426, 427,
	428, 0, 429, 430, 573, 574, 575, 431, 576, 432,
	433, 0, 434, 0, 435, 436, 437, 438, 439, 440,
	441, 577, 443, 442, 444, 0, 445, 0, 0, 0,
	0, 0, 446, 0, 448, 449, 450, 447, 451, 452,
	453, 454, 0, 455, 456, 457, 0, 458, 459, 460,
	461, 578, 462, 0, 463, 464, 629, 471, 465, 466,
	472, 473, 474, 475, 476, 0, 478, 479, 477, 480,
	481, 482, 0, 483, 467, 468, 484, 485, 0, 486,
	487, 488, 489, 490, 491, 579, 0, 492, 0, 493,
	494, 495, 496, 469, 497, 502, 580, 498, 499, 500,
	501, 581, 0, 504, 505, 0, 503, 0, 506, 507,
	508, 509, 510, 511, 326, 512, 0, 513, 582, 583,
	584, 585, 0, 520, 0, 514, 515, 586, 516, 587,
	0, 517, 518, 519, 0, 521, 522, 0, 0, 523,
	524, 525, 527, 528, 526, 529, 0, 530, 0, 0,
	531, 532, 533, 588, 589, 590, 243, 535, 534, 591,
	0, 0, 0, 0, 536, 537, 592, 538, 539, 540,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 541, 0, 2038,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	542, 543, 0, 265, 544, 266, 545, 0, 546, 267,
	268, 269, 270, 271, 0, 0, 0, 272, 547, 548,
	549, 0, 273, 274, 550, 0, 0, 0, 275, 276,
	277, 278, 279, 280, 281, 0, 0, 283, 284, 285,
	282, 0, 286, 0, 287, 288, 289, 290, 291, 292,
	0, 293, 294, 295, 0, 296, 297, 0, 0, 0,
	0, 0, 0, 0, 298, 299, 300, 301, 0, 302,
	551, 552, 0, 306, 303, 304, 0, 307, 305, 0,
	308, 309, 310, 0, 0, 311, 312, 313, 0, 314,
	315, 0, 316, 317, 318, 0, 319, 320, 553, 321,
	322, 323, 325, 327, 324, 328, 329, 330, 331, 554,
	555, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 556, 0, 0, 0, 335, 0, 336, 0, 0,
	0, 337, 338, 557, 558, 339, 340, 0, 341, 559,
	0, 560, 342, 0, 343, 344, 345, 346, 347, 561,
	562, 563, 408, 0, 348, 349, 0, 350, 351, 352,
	353, 0, 0, 0, 0, 354, 355, 357, 0, 0,
	356, 564, 565, 0, 566, 0, 358, 359, 0, 567,
	0, 360, 361, 362, 0, 363, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 0, 370, 372, 371, 0,
	373, 568, 0, 374, 375, 0, 0, 376, 377, 378,
	0, 0, 379, 380, 381, 382, 0, 383, 384, 386,
	388, 385, 387, 392, 389, 390, 391, 394, 0, 393,
	0, 395, 396, 397, 403, 404, 400, 401, 402, 405,
	399, 0, 398, 0, 0, 0, 406, 0, 569, 407,
	570, 409, 410, 0, 0, 411, 0, 0, 0, 413,
	414, 415, 0, 0, 416, 417, 571, 0, 418, 0,
	572, 419, 420, 412, 421, 422, 423, 424, 425, 426,
	427, 428, 0, 429, 430, 573, 574, 575, 431, 576,
	432, 433, 0, 434, 0, 435, 436, 437, 438, 439,
	440, 441, 577, 443, 442, 444, 0, 445, 0, 0,
	0, 0, 0, 446, 0, 448, 449, 450, 447, 451,
	452, 453, 454, 0, 455, 456, 457, 0, 458, 459,
	460, 461, 578, 462, 0, 463, 464, 470, 471, 465,
	466, 472, 473, 474, 475, 476, 0, 478, 479, 477,
	480, 481, 482, 0, 0, 467, 468, 484, 485, 0,
	486, 487, 488, 489, 490, 491, 579, 0, 492, 0,
	493, 494, 495, 496, 469, 497, 502, 580, 498, 499,
	500, 501, 581, 0, 504, 505, 0, 503, 0, 506,
	507, 508, 509, 510, 511, 326, 512, 0, 513, 582,
	583, 584, 585, 0, 520, 0, 514, 515, 586, 516,
	587, 0, 517, 518, 519, 0, 521, 522, 0, 0,
	523, 524, 525, 527, 528, 526, 529, 0, 530, 0,
	0, 531, 532, 533, 588, 589, 590, 243, 535, 534,
	591, 0, 0, 0, 0, 536, 537, 592, 538, 539,
	540, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 542, 543, 0, 265, 544, 266, 545, 0, 546,
	267, 268, 269, 270, 271, 0, 0, 0, 272, 547,
	548, 549, 0, 273, 274, 550, 0, 0, 0, 275,
	276, 277, 278, 279, 280, 281, 0, 0, 283, 284,
	285, 282, 0, 286, 0, 287, 288, 289, 290, 291,
	292, 0, 293, 294, 295, 0, 296, 297, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 300, 301, 0,
	302, 551, 552, 0, 306, 303, 304, 0, 307, 305,
	0, 308, 309, 310, 0, 0, 311, 312, 313, 0,
	314, 315, 0, 316, 317, 318, 0, 319, 320, 553,
	321, 322, 323, 325, 327, 324, 328, 329, 330, 331,
	554, 555, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 556, 0, 0, 0, 335, 0, 336, 0,
	0, 0, 337, 338, 557, 558, 339, 340, 0, 341,
	559, 0, 560, 342, 0, 343, 344, 345, 346, 347,
	1407, 562, 563, 408, 0, 348, 349, 0, 350, 351,
	352, 353, 0, 0, 0, 0, 354, 355, 357, 0,
	0, 356, 564, 565, 0, 566, 0, 358, 359, 0,
	567, 0, 360, 361, 362, 0, 363, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 0, 370, 372, 371,
	0, 373, 568, 0, 374, 375, 0, 0, 376, 377,
	378, 0, 0, 379, 380, 381, 382, 0, 383, 384,
	386, 388, 385, 387, 392, 389, 390, 391, 394, 0,
	393, 0, 395, 396, 397, 403, 404, 400, 401, 402,
	405, 399, 0, 398, 0, 0, 0, 406, 0, 569,
	407, 570, 409, 410, 0, 0, 411, 0, 0, 0,
	413, 414, 415, 0, 0, 416, 417, 571, 0, 418,
	0, 572, 419, 420, 412, 421, 422, 423, 424, 425,
	426, 427, 428, 0, 429, 430, 573, 574, 575, 431,
	576, 432, 433, 0, 434, 0, 435, 436, 437, 438,
	439, 440, 441, 577, 443, 442, 444, 0, 445, 0,
	0, 0, 0, 0, 446, 0, 448, 449, 450, 447,
	451, 452, 453, 454, 0, 455, 456, 457, 0, 458,
	459, 460, 461, 578, 462, 0, 463, 464, 470, 471,
	465, 466, 472, 473, 474, 475, 476, 0, 478, 479,
	477, 480, 481, 482, 0, 483, 467, 468, 484, 485,
	0, 486, 487, 488, 489, 490, 491, 579, 0, 492,
	0, 493, 494, 495, 496, 469, 497, 502, 580, 498,
	499, 500, 501, 581, 0, 504, 505, 0, 503, 0,
	506, 507, 508, 509, 510, 511, 326, 512, 0, 513,
	582, 583, 584, 585, 0, 520, 0, 514, 515, 586,
	516, 587, 0, 517, 518, 519, 0, 521, 522, 0,
	0, 523, 524, 525, 527, 528, 526, 529, 0, 530,
	0, 0, 531, 532, 533, 588, 589, 590, 243, 535,
	534, 591, 0, 0, 0, 0, 536, 537, 592, 538,
	539, 540, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 541,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 542, 543, 0, 265, 544, 266, 545, 0,
	546, 267, 268, 269, 270, 271, 0, 0, 0, 272,
	547, 548, 549, 0, 273, 274, 550, 0, 0, 0,
	275, 276, 277, 278, 279, 280, 281, 0, 0, 283,
	284, 285, 282, 0, 286, 0, 287, 288, 289, 290,
	291, 292, 0, 293, 294, 295, 0, 296, 297, 0,
	0, 0, 0, 0, 0, 0, 298, 299, 300, 301,
	0, 302, 551, 552, 0, 306, 303, 304, 0, 307,
	305, 0, 308, 309, 310, 0, 0, 311, 312, 313,
	0, 314, 315, 0, 316, 317, 318, 0, 319, 320,
	553, 321, 322, 323, 325, 327, 324, 328, 329, 330,
	331, 554, 555, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 556, 0, 0, 0, 335, 0, 336,
	0, 0, 0, 337, 338, 557, 558, 339, 340, 0,
	341, 559, 0, 560, 342, 0, 343, 344, 345, 346,
	347, 1348, 562, 563, 408, 0, 348, 349, 0, 350,
	351, 352, 353, 0, 0, 0, 0, 354, 355, 357,
	0, 0, 356, 564, 565, 0, 566, 0, 358, 359,
	0, 567, 0, 360, 361, 362, 0, 363, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 0, 370, 372,
	371, 0, 373, 568, 0, 374, 375, 0, 0, 376,
	377, 378, 0, 0, 379, 380, 381, 382, 0, 383,
	384, 386, 388, 385, 387, 392, 389, 390, 391, 394,
	0, 393, 0, 395, 396, 397, 403, 404, 400, 401,
	402, 405, 399, 0, 398, 0, 0, 0, 406, 0,
	569, 407, 570, 409, 410, 0, 0, 411, 0, 0,
	0, 413, 414, 415, 0, 0, 416, 417, 571, 0,
	418, 0, 572, 419, 420, 412, 421, 422, 423, 424,
	425, 426, 427, 428, 0, 429, 430, 573, 574, 575,
	431, 576, 432, 433, 0, 434, 0, 435, 436, 437,
	438, 439, 440, 441, 577, 443, 442, 444, 0, 445,
	0, 0, 0, 0, 0, 446, 0, 448, 449, 450,
	447, 451, 452, 453, 454, 0, 455, 456, 457, 0,
	458, 459, 460, 461, 578, 462, 0, 463, 464, 470,
	471, 465, 466, 472, 473, 474, 475, 476, 0, 478,
	479, 477, 480, 481, 482, 0, 483, 467, 468, 484,
	485, 0, 486, 487, 488, 489, 490, 491, 579, 0,
	492, 0, 493, 494, 495, 496, 469, 497, 502, 580,
	498, 499, 500, 501, 581, 0, 504, 505, 0, 503,
	0, 506, 507, 508, 509, 510, 511, 326, 512, 0,
	513, 582, 583, 584, 585, 0, 520, 0, 514, 515,
	586, 516, 587, 0, 517, 518, 519, 0, 521, 522,
	0, 0, 523, 524, 525, 527, 528, 526, 529, 0,
	530, 0, 0, 531, 532, 533, 588, 589, 590, 243,
	535, 534, 591, 0, 0, 0, 0, 536, 537, 592,
	538, 539, 540, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 542, 543, 0, 265, 544, 266, 545,
	0, 546, 267, 268, 269, 270, 271, 0, 0, 0,
	272, 547, 548, 549, 0, 273, 274, 550, 0, 0,
	0, 275, 276, 277, 278, 279, 280, 281, 0, 0,
	283, 284, 285, 282, 0, 286, 0, 287, 288, 289,
	290, 291, 292, 0, 293, 294, 295, 0, 296, 297,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 300,
	301, 0, 302, 551, 552, 0, 306, 303, 304, 0,
	307, 305, 0, 308, 309, 310, 0, 0, 311, 312,
	313, 0, 314, 315, 0, 316, 317, 318, 0, 319,
	320, 553, 321, 322, 323, 325, 327, 324, 328, 329,
	330, 331, 554, 555, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 556, 0, 0, 0, 335, 0,
	336, 0, 0, 0, 337, 338, 557, 558, 339, 340,
	0, 341, 559, 0, 560, 342, 0, 343, 344, 345,
	346, 347, 561, 562, 563, 408, 0, 348, 349, 0,
	350, 351, 352, 353, 0, 0, 0, 0, 354, 355,
	357, 0, 0, 356, 564, 565, 0, 566, 0, 358,
	359, 0, 567, 0, 360, 361, 362, 0, 363, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 0, 370,
	372, 371, 0, 373, 568, 0, 374, 375, 0, 0,
	376, 377, 378, 0, 0, 379, 380, 381, 382, 0,
	383, 384, 386, 388, 385, 387, 392, 389, 390, 391,
	394, 0, 393, 0, 395, 396, 397, 403, 404, 400,
	401, 402, 405, 399, 0, 398, 0, 0, 0, 406,
	0, 569, 407, 570, 409, 410, 0, 0, 411, 0,
	0, 0, 413, 414, 415, 0, 0, 416, 417, 571,
	0, 418, 0, 572, 419, 420, 412, 421, 422, 423,
	424, 425, 426, 427, 428, 0, 429, 430, 573, 574,
	575, 431, 576, 432, 433, 0, 434, 0, 435, 436,
	437, 438, 439, 440, 441, 577, 1086, 442, 444, 0,
	445, 0, 0, 0, 0, 0, 446, 0, 448, 449,
	450, 447, 451, 452, 453, 454, 0, 455, 456, 457,
	0, 458, 459, 460, 461, 578, 462, 0, 463, 464,
	470, 471, 465, 466, 472, 473, 474, 475, 476, 0,
	478, 479, 477, 480, 481, 482, 0, 483, 467, 468,
	484, 485, 0, 486, 487, 488, 489, 490, 491, 579,
	0, 492, 0, 493, 494, 495, 496, 469, 497, 502,
	580, 498, 499, 500, 501, 581, 0, 504, 505, 0,
	503, 0, 506, 507, 508, 509, 510, 511, 326, 512,
	0, 513, 582, 583, 584, 585, 0, 520, 0, 514,
	515, 586, 516, 587, 0, 517, 518, 519, 0, 521,
	522, 0, 0, 523, 524, 525, 527, 528, 526, 529,
	0, 530, 0, 0, 531, 532, 533, 588, 589, 590,
	243, 535, 534, 591, 0, 0, 0, 0, 536, 537,
	592, 538, 539, 540, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 542, 543, 0, 265, 544, 266,
	545, 0, 546, 267, 268, 269, 270, 271, 0, 0,
	0, 272, 547, 548, 549, 0, 273, 274, 550, 0,
	0, 0, 275, 276, 277, 278, 279, 280, 281, 0,
	0, 283, 284, 285, 282, 0, 286, 0, 287, 288,
	289, 290, 291, 292, 0, 293, 294, 295, 0, 296,
	297, 0, 0, 0, 0, 0, 0, 0, 298, 299,
	300, 301, 0, 302, 551, 552, 0, 306, 303, 304,
	0, 307, 305, 0, 308, 309, 310, 0, 0, 311,
	312, 313, 0, 314, 315, 0, 316, 317, 318, 0,
	319, 320, 553, 321, 322, 323, 325, 327, 324, 328,
	329, 330, 331, 554, 555, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 556, 0, 0, 0, 335,
	0, 336, 0, 0, 0, 337, 338, 557, 558, 339,
	340, 0, 341, 559, 0, 560, 0, 0, 343, 344,
	345, 346, 347, 561, 562, 563, 408, 0, 348, 349,
	0, 350, 351, 352, 353, 0, 0, 0, 0, 354,
	355, 357, 0, 0, 356, 564, 565, 0, 566, 0,
	358, 359, 0, 567, 0, 360, 361, 362, 0, 363,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 0,
	370, 372, 371, 0, 373, 568, 0, 374, 375, 0,
	0, 376, 377, 378, 0, 0, 379, 380, 381, 382,
	0, 383, 384, 386, 388, 385, 387, 392, 389, 390,
	391, 394, 0, 393, 0, 395, 396, 397, 403, 404,
	400, 401, 402, 405, 399, 0, 398, 0, 0, 0,
	406, 0, 569, 407, 570, 409, 410, 0, 0, 411,
	0, 0, 0, 413, 414, 415, 0, 0, 416, 417,
	571, 0, 418, 0, 572, 419, 420, 412, 421, 422,
	0, 424, 425, 426, 427, 428, 0, 429, 430, 573,
	574, 575, 431, 576, 432, 433, 0, 434, 0, 435,
	436, 437, 438, 0, 440, 441, 577, 443, 442, 444,
	0, 445, 0, 0, 0, 0, 0, 446, 0, 448,
	449, 450, 447, 451, 452, 453, 454, 0, 455, 456,
	457, 0, 458, 459, 460, 461, 578, 0, 0, 463,
	464, 470, 471, 465, 466, 472, 473, 474, 475, 476,
	0, 478, 479, 477, 480, 481, 482, 0, 483, 467,
	468, 484, 485, 0, 486, 487, 488, 489, 490, 491,
	579, 0, 492, 0, 493, 494, 495, 496, 469, 497,
	502, 580, 498, 499, 500, 501, 581, 0, 504, 505,
	0, 503, 0, 506, 507, 508, 509, 510, 511, 326,
	512, 0, 513, 582, 583, 584, 585, 0, 520, 0,
	514, 515, 586, 516, 587, 0, 517, 518, 519, 0,
	521, 522, 0, 0, 523, 524, 525, 527, 528, 526,
	529, 0, 530, 0, 0, 531, 532, 533, 588, 589,
	590, 0, 535, 534, 591, 0, 0, 0, 0, 536,
	537, 592, 538, 539, 540, 1617, 1618, 0, 1650, 1651,
	1652, 1660, 1661, 1662, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1653, 1648, 0, 0,
	0, 0, 0, 0, 1620, 0, 0, 0, 0, 0,
	0, 0, 1666, 0, 0, 0, 0, 0, 0, 1617,
	1618, 0, 1650, 1651, 1652, 1660, 1661, 1662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1619, 0, 0,
	1653, 1648, 0, 0, 0, 0, 0, 1639, 1620, 0,
	0, 0, 0, 0, 0, 1636, 1666, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1639, 0, 0, 0, 0, 0, 0, 0, 1636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1642, 1643, 1644, 1645,
	0, 0, 0, 0, 0, 0, 1625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 0, 0, 1667, 0,
	1642, 1643, 1644, 1645, 1647, 1649, 0, 0, 0, 0,
	1625, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1663, 0, 1664, 0, 0, 0, 0, 0, 0, 1634,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 1657,
	0, 0, 1667, 0, 0, 0, 0, 1655, 1647, 1649,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 1663, 0, 1664, 0, 0, 0,
	0, 0, 0, 1634, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1665, 0, 0,
	0, 1655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 1654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1665, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1654, 0,
	0, 0, 0, 0, 0, 0, 1646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1617, 1618, 1641, 1650, 1651, 1652,
	1660, 1661, 1662, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1653, 1648, 0, 0, 0,
	1646, 1658, 0, 1620, 0, 0, 0, 0, 0, 0,
	0, 1666, 0, 0, 0, 0, 0, 0, 0, 0,
	1641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1619, 0, 0, 0,
	0, 0, 0, 0, 0, 1658, 1639, 0, 0, 0,
	0, 0, 1617, 1618, 1636, 1650, 1651, 1652, 1660, 1661,
	1662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1653, 1648, 0, 0, 0, 0, 0,
	0, 1620, 0, 0, 0, 0, 0, 0, 0, 1666,
	0, 0, 0, 1656, 0, 0, 0, 1631, 1632, 1638,
	1659, 1637, 1633, 0, 1630, 1628, 1629, 1621, 1622, 1623,
	1624, 1626, 1627, 0, 1619, 0, 0, 0, 0, 0,
	0, 2285, 0, 0, 1639, 1642, 1643, 1644, 1645, 0,
	0, 0, 1636, 0, 0, 1625, 0, 1656, 0, 0,
	0, 1631, 1632, 1638, 1659, 1637, 1633, 0, 1630, 1628,
	1629, 1621, 1622, 1623, 1624, 1626, 1627, 0, 0, 0,
	0, 4036, 0, 0, 1657, 0, 0, 1667, 0, 0,
	0, 0, 0, 1647, 1649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1663,
	0, 1664, 0, 0, 0, 0, 0, 0, 1634, 1635,
	0, 0, 0, 1642, 1643, 1644, 1645, 0, 0, 0,
	0, 0, 0, 1625, 0, 0, 1655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 0, 1667, 0, 0, 0, 0,
	0, 1647, 1649, 0, 0, 0, 1665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1663, 0, 1664,
	0, 0, 0, 1654, 0, 0, 1634, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1646, 0, 0, 0, 0,
	0, 0, 0, 0, 1665, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1641, 0, 0, 0, 0,
	0, 1654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1658, 0, 1617, 1618, 0, 1650, 1651, 1652, 1660, 1661,
	1662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1653, 1648, 0, 0, 0, 0, 0,
	0, 1620, 0, 1646, 0, 0, 0, 0, 0, 1666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1619, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1639, 0, 0, 0, 1658, 0,
	0, 0, 1636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1656, 0, 0, 0, 1631, 1632, 1638, 1659,
	1637, 1633, 0, 1630, 1628, 1629, 1621, 1622, 1623, 1624,
	1626, 1627, 0, 0, 0, 0, 4032, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1642, 1643, 1644, 1645, 0, 0, 0,
	0, 0, 0, 1625, 0, 0, 0, 0, 0, 0,
	1656, 0, 0, 0, 1631, 1632, 1638, 1659, 1637, 1633,
	0, 1630, 1628, 1629, 1621, 1622, 1623, 1624, 1626, 1627,
	0, 0, 1657, 0, 3942, 1667, 0, 0, 0, 0,
	0, 1647, 1649, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1663, 0, 1664,
	0, 0, 0, 0, 0, 0, 1634, 1635, 1617, 1618,
	0, 1650, 1651, 1652, 1660, 1661, 1662, 0, 0, 0,
	0, 0, 0, 0, 1655, 0, 0, 0, 0, 1653,
	1648, 0, 0, 0, 0, 1640, 0, 1620, 0, 0,
	0, 0, 0, 0, 0, 1666, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1665, 0, 0, 0, 0, 0,
	1619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1639, 1654, 0, 0, 0, 0, 0, 0, 1636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1617, 1618, 0, 1650, 1651, 1652, 1660, 1661,
	1662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1653, 1648, 0, 0, 0, 0, 0,
	0, 1620, 0, 1646, 0, 0, 0, 0, 0, 1666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1641, 0, 0, 0, 0, 0, 1642,
	1643, 1644, 1645, 0, 1619, 0, 0, 0, 0, 1625,
	0, 0, 0, 0, 1639, 0, 0, 0, 1658, 0,
	0, 0, 1636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1657, 0,
	0, 1667, 0, 0, 0, 0, 0, 1647, 1649, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1663, 0, 1664, 0, 0, 0, 0,
	0, 0, 1634, 1635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 1642, 1643, 1644, 1645, 0, 0, 0,
	0, 1640, 0, 1625, 0, 0, 0, 0, 0, 0,
	1656, 0, 0, 0, 1631, 1632, 1638, 1659, 1637, 1633,
	0, 1630, 1628, 1629, 1621, 1622, 1623, 1624, 1626, 1627,
	1665, 0, 1657, 0, 3941, 1667, 0, 0, 0, 0,
	0, 1647, 1649, 0, 0, 0, 0, 1654, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1663, 0, 1664,
	0, 0, 0, 0, 0, 0, 1634, 1635, 1617, 1618,
	0, 1650, 1651, 1652, 1660, 1661, 1662, 0, 0, 0,
	0, 0, 0, 0, 1655, 0, 0, 0, 0, 1653,
	1648, 0, 0, 0, 0, 1640, 0, 1620, 0, 1646,
	0, 0, 0, 0, 0, 1666, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1641,
	0, 0, 0, 0, 1665, 0, 0, 0, 0, 0,
	1619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1639, 1654, 0, 0, 1658, 0, 0, 0, 1636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1641, 0, 0, 0, 0, 0, 1642,
	1643, 1644, 1645, 0, 0, 0, 0, 0, 0, 1625,
	0, 0, 0, 0, 0, 0, 1656, 0, 1658, 0,
	1631, 1632, 1638, 1659, 1637, 1633, 0, 1630, 1628, 1629,
	1621, 1622, 1623, 1624, 1626, 1627, 0, 0, 1657, 0,
	3789, 1667, 0, 0, 0, 0, 0, 1647, 1649, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1663, 0, 1664, 0, 0, 0, 0,
	0, 0, 1634, 1635, 1617, 1618, 0, 1650, 1651, 1652,
	1660, 1661, 1662, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 0, 0, 1653, 1648, 0, 0, 0,
	0, 1640, 0, 1620, 0, 0, 0, 0, 0, 0,
	1656, 1666, 0, 0, 1631, 1632, 1638, 1659, 1637, 1633,
	0, 1630, 1628, 1629, 1621, 1622, 1623, 1624, 1626, 1627,
	1665, 0, 0, 0, 3650, 0, 1619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1639, 1654, 0, 0,
	0, 0, 0, 0, 1636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1617, 1618,
	0, 1650, 1651, 1652, 1660, 1661, 1662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1653,
	1648, 0, 0, 0, 0, 0, 0, 1620, 0, 1646,
	0, 0, 0, 0, 0, 1666, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1641,
	0, 0, 0, 0, 0, 1642, 1643, 1644, 1645, 0,
	1619, 0, 0, 0, 0, 1625, 0, 0, 0, 0,
	1639, 0, 0, 0, 1658, 0, 0, 0, 1636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1657, 0, 0, 1667, 0, 0,
	0, 0, 0, 1647, 1649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1663,
	0, 1664, 0, 0, 0, 0, 0, 0, 1634, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1655, 0, 0, 1642,
	1643, 1644, 1645, 0, 0, 0, 0, 1640, 0, 1625,
	0, 0, 0, 0, 0, 0, 1656, 0, 0, 0,
	1631, 1632, 1638, 1659, 1637, 1633, 0, 1630, 1628, 1629,
	1621, 1622, 1623, 1624, 1626, 1627, 1665, 0, 1657, 0,
	3594, 1667, 0, 0, 0, 0, 0, 1647, 1649, 0,
	0, 0, 0, 1654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1663, 0, 1664, 0, 0, 0, 0,
	0, 0, 1634, 1635, 1617, 1618, 0, 1650, 1651, 1652,
	1660, 1661, 1662, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 0, 0, 1653, 1648, 0, 0, 0,
	0, 1640, 0, 1620, 0, 1646, 0, 0, 0, 0,
	0, 1666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1641, 0, 0, 0, 0,
	1665, 0, 0, 0, 0, 0, 1619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1639, 1654, 0, 0,
	1658, 0, 0, 0, 1636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1641,
	0, 0, 0, 0, 0, 1642, 1643, 1644, 1645, 0,
	0, 0, 0, 0, 0, 1625, 0, 0, 0, 0,
	0, 0, 1656, 0, 1658, 0, 1631, 1632, 1638, 1659,
	1637, 1633, 0, 1630, 1628, 1629, 1621, 1622, 1623, 1624,
	1626, 1627, 0, 0, 1657, 0, 3593, 1667, 0, 0,
	0, 0, 0, 1647, 1649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1663,
	0, 1664, 0, 0, 0, 0, 0, 0, 1634, 1635,
	1617, 1618, 0, 1650, 1651, 1652, 1660, 1661, 1662, 0,
	0, 0, 0, 0, 0, 0, 1655, 0, 0, 0,
	0, 1653, 1648, 0, 0, 0, 0, 1640, 0, 1620,
	0, 0, 0, 0, 0, 0, 1656, 1666, 0, 0,
	1631, 1632, 1638, 1659, 1637, 1633, 0, 1630, 1628, 1629,
	1621, 1622, 1623, 1624, 1626, 1627, 1665, 0, 0, 0,
	3592, 0, 1619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1639, 1654, 0, 0, 0, 0, 0, 0,
	1636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1617, 1618, 0, 1650, 1651, 1652,
	1660, 1661, 1662, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1653, 1648, 0, 0, 0,
	0, 0, 0, 1620, 0, 1646, 0, 0, 0, 0,
	0, 1666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1641, 0, 0, 0, 0,
	0, 1642, 1643, 1644, 1645, 0, 1619, 0, 0, 0,
	0, 1625, 0, 0, 0, 0, 1639, 0, 0, 0,
	1658, 0, 0, 0, 1636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1657, 0, 0, 1667, 0, 0, 0, 0, 0, 1647,
	1649, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1663, 0, 1664, 0, 0,
	0, 0, 0, 0, 1634, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 0, 1642, 1643, 1644, 1645, 0,
	0, 0, 0, 1640, 0, 1625, 0, 0, 0, 0,
	0, 0, 1656, 0, 0, 0, 1631, 1632, 1638, 1659,
	1637, 1633, 0, 1630, 1628, 1629, 1621, 1622, 1623, 1624,
	1626, 1627, 1665, 0, 1657, 0, 3294, 1667, 0, 0,
	0, 0, 0, 1647, 1649, 0, 0, 0, 0, 1654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1663,
	0, 1664, 0, 0, 0, 0, 0, 0, 1634, 1635,
	1617, 1618, 0, 1650, 1651, 1652, 1660, 1661, 1662, 0,
	0, 0, 0, 0, 0, 0, 1655, 0, 0, 0,
	0, 1653, 1648, 0, 0, 0, 0, 1640, 0, 1620,
	0, 1646, 0, 0, 0, 0, 0, 1666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1641, 0, 0, 0, 0, 1665, 0, 0, 0,
	0, 0, 1619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1639, 1654, 0, 0, 1658, 0, 0, 0,
	1636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1641, 0, 0, 0, 0,
	0, 1642, 1643, 1644, 1645, 0, 0, 0, 0, 0,
	0, 1625, 0, 0, 0, 0, 0, 0, 1656, 0,
	1658, 0, 1631, 1632, 1638, 1659, 1637, 1633, 0, 1630,
	1628, 1629, 1621, 1622, 1623, 1624, 1626, 1627, 0, 0,
	1657, 0, 2858, 1667, 0, 0, 0, 0, 0, 1647,
	1649, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1663, 0, 1664, 0, 0,
	0, 0, 0, 0, 1634, 1635, 1617, 1618, 0, 1650,
	1651, 1652, 1660, 1661, 1662, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 0, 0, 0, 1653, 1648, 0,
	0, 0, 0, 1640, 0, 1620, 0, 0, 0, 0,
	0, 0, 1656, 1666, 0, 0, 1631, 1632, 1638, 1659,
	1637, 1633, 0, 1630, 1628, 1629, 1621, 1622, 1623, 1624,
	1626, 1627, 1665, 0, 0, 0, 2857, 0, 1619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1639, 1654,
	0, 0, 0, 0, 0, 0, 1636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1617, 1618, 0, 1650, 1651, 1652, 1660, 1661, 1662, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1653, 1648, 0, 0, 0, 0, 0, 0, 1620,
	0, 1646, 0, 0, 0, 0, 0, 1666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1641, 0, 0, 0, 0, 0, 1642, 1643, 1644,
	1645, 0, 1619, 0, 0, 0, 0, 1625, 0, 0,
	0, 0, 1639, 0, 0, 0, 1658, 0, 0, 0,
	1636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1657, 0, 0, 1667,
	0, 0, 0, 0, 0, 1647, 1649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1663, 0, 1664, 0, 0, 0, 0, 0, 0,
	1634, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1655, 0,
	0, 1642, 1643, 1644, 1645, 0, 0, 0, 0, 1640,
	0, 1625, 0, 0, 0, 0, 0, 0, 1656, 0,
	0, 0, 1631, 1632, 1638, 1659, 1637, 1633, 0, 1630,
	1628, 1629, 1621, 1622, 1623, 1624, 1626, 1627, 1665, 0,
	1657, 0, 2856, 1667, 0, 0, 0, 0, 0, 1647,
	1649, 0, 0, 0, 0, 1654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1663, 0, 1664, 0, 0,
	0, 0, 0, 0, 1634, 1635, 1617, 1618, 0, 1650,
	1651, 1652, 1660, 1661, 1662, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 0, 0, 0, 1653, 1648, 0,
	0, 0, 0, 1640, 0, 1620, 0, 1646, 0, 0,
	0, 0, 0, 1666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1641, 0, 0,
	0, 0, 1665, 0, 0, 0, 0, 0, 1619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1639, 1654,
	0, 0, 1658, 0, 0, 0, 1636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1641, 0, 0, 0, 0, 0, 1642, 1643, 1644,
	1645, 0, 0, 0, 0, 0, 0, 1625, 4158, 0,
	0, 0, 0, 0, 1656, 0, 1658, 0, 1631, 1632,
	1638, 1659, 1637, 1633, 0, 1630, 1628, 1629, 1621, 1622,
	1623, 1624, 1626, 1627, 0, 0, 1657, 0, 2855, 1667,
	0, 0, 0, 0, 0, 1647, 1649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1663, 0, 1664, 0, 0, 0, 0, 0, 0,
	1634, 1635, 0, 0, 1617, 1618, 0, 1650, 1651, 1652,
	1660, 1661, 1662, 0, 0, 0, 0, 0, 1655, 0,
	0, 0, 0, 0, 0, 1653, 1648, 0, 0, 1640,
	0, 2793, 0, 1620, 0, 0, 0, 0, 1656, 0,
	0, 1666, 1631, 1632, 1638, 1659, 1637, 1633, 0, 1630,
	1628, 1629, 1621, 1622, 1623, 1624, 1626, 1627, 1665, 0,
	2822, 0, 0, 0, 0, 0, 1619, 0, 0, 0,
	0, 0, 0, 0, 0, 1654, 1639, 0, 0, 0,
	0, 0, 0, 0, 1636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2794, 0, 0, 0, 0, 0, 0, 1646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1641, 0, 0,
	0, 0, 0, 0, 0, 1642, 1643, 1644, 1645, 0,
	0, 0, 0, 1617, 1618, 1625, 1650, 1651, 1652, 1660,
	1661, 1662, 1658, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1653, 1648, 0, 0, 0, 0,
	0, 0, 1620, 0, 1657, 0, 0, 1667, 0, 0,
	1666, 0, 0, 1647, 1649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1663,
	0, 1664, 0, 0, 0, 1619, 0, 0, 1634, 1635,
	0, 0, 0, 0, 0, 1639, 0, 0, 0, 0,
	0, 0, 0, 1636, 0, 0, 1655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 1656, 0, 0, 0, 1631, 1632,
	1638, 1659, 1637, 1633, 0, 1630, 1628, 1629, 1621, 1622,
	1623, 1624, 1626, 1627, 0, 0, 1665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 1643, 1644, 1645, 0, 0,
	0, 0, 0, 0, 1625, 0, 2918, 0, 0, 2917,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1657, 0, 1646, 1667, 0, 0, 0,
	0, 0, 1647, 1649, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1641, 0, 0, 1663, 0,
	1664, 0, 2405, 0, 0, 0, 0, 1634, 1635, 1617,
	1618, 0, 1650, 1651, 1652, 1660, 1661, 1662, 0, 0,
	1658, 0, 0, 0, 0, 1655, 0, 0, 0, 0,
	1653, 1648, 0, 0, 0, 2404, 1640, 0, 1620, 0,
	0, 0, 0, 0, 0, 0, 1666, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1665, 0, 0, 0, 0,
	0, 1619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1639, 1654, 0, 0, 0, 0, 0, 0, 1636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1656, 0, 0, 0, 1631, 1632, 1638, 1659,
	1637, 1633, 0, 1630, 1628, 1629, 1621, 1622, 1623, 1624,
	1626, 1627, 0, 0, 1646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1641, 0, 0, 0, 0, 0,
	1642, 1643, 1644, 1645, 0, 0, 0, 0, 1617, 1618,
	1625, 1650, 1651, 1652, 1660, 1661, 1662, 0, 0, 1658,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1653,
	1648, 0, 0, 0, 0, 0, 0, 1620, 0, 1657,
	0, 0, 1667, 0, 0, 1666, 0, 0, 1647, 1649,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1663, 0, 1664, 0, 0, 0,
	1619, 0, 0, 1634, 1635, 0, 0, 0, 0, 0,
	1639, 0, 0, 0, 0, 0, 0, 0, 1636, 0,
	0, 1655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 1656, 0, 0, 0, 1631, 1632, 1638, 1659, 1637,
	1633, 0, 1630, 1628, 1629, 1621, 1622, 1623, 1624, 1626,
	1627, 1665, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1642,
	1643, 1644, 1645, 0, 0, 0, 0, 1617, 1618, 1625,
	1650, 1651, 1652, 1660, 1661, 1662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1653, 1648,
	0, 0, 0, 0, 0, 0, 1620, 0, 1657, 0,
	1646, 1667, 0, 0, 1666, 0, 0, 1647, 1649, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1641, 0, 0, 1663, 0, 1664, 0, 0, 0, 1619,
	0, 0, 1634, 1635, 0, 0, 0, 0, 0, 1639,
	0, 0, 0, 0, 0, 1658, 0, 1636, 0, 0,
	1655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1654, 943, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1642, 1643,
	1644, 1645, 0, 0, 0, 0, 0, 0, 1625, 0,
	0, 0, 0, 0, 0, 0, 0, 1656, 0, 0,
	0, 1631, 1632, 1638, 1659, 1637, 1633, 0, 1630, 1628,
	1629, 1621, 1622, 1623, 1624, 1626, 1627, 1657, 0, 1646,
	1667, 0, 0, 0, 0, 0, 1647, 1649, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1641,
	0, 0, 1663, 0, 1664, 0, 0, 0, 0, 0,
	0, 1634, 1635, 1617, 1618, 0, 1650, 1651, 1652, 1660,
	1661, 1662, 0, 0, 1658, 0, 0, 0, 0, 1655,
	0, 0, 0, 0, 1653, 1648, 0, 0, 0, 0,
	1640, 0, 1620, 0, 0, 0, 0, 0, 0, 0,
	1666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1665,
	0, 0, 0, 0, 0, 1619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1639, 1654, 0, 0, 0,
	0, 0, 0, 1636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1656, 0, 0, 0,
	1631, 1632, 1638, 1659, 1637, 1633, 0, 1630, 1628, 1629,
	1621, 1622, 1623, 1624, 1626, 1627, 0, 0, 1646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1641, 0,
	0, 0, 0, 0, 1642, 1643, 1644, 1645, 0, 0,
	0, 0, 0, 0, 1625, 0, 0, 0, 0, 2924,
	0, 0, 0, 1658, 0, 0, 0, 0, 1617, 1618,
	0, 1650, 1651, 1652, 1660, 1661, 1662, 0, 0, 0,
	0, 0, 0, 1657, 0, 0, 1667, 0, 0, 1653,
	1648, 0, 1647, 1649, 2919, 0, 0, 1620, 0, 0,
	0, 3275, 0, 0, 0, 1666, 0, 0, 1663, 0,
	1664, 0, 0, 0, 0, 0, 0, 1634, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1619, 0, 0, 0, 0, 1655, 0, 0, 0, 0,
	1639, 0, 0, 0, 0, 0, 1640, 0, 1636, 0,
	0, 0, 0, 0, 0, 1656, 0, 0, 0, 1631,
	1632, 1638, 1659, 1637, 1633, 0, 1630, 1628, 1629, 1621,
	1622, 1623, 1624, 1626, 1627, 1665, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1642,
	1643, 1644, 1645, 0, 0, 0, 0, 0, 0, 1625,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1657, 0,
	0, 1667, 0, 0, 1641, 0, 0, 1647, 1649, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1663, 0, 1664, 0, 0, 0, 1658,
	0, 0, 1634, 1635, 1617, 1618, 0, 1650, 1651, 1652,
	1660, 1661, 1662, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 0, 0, 1653, 1648, 0, 0, 0,
	0, 1640, 0, 1620, 0, 0, 0, 0, 0, 0,
	0, 1666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1665, 0, 0, 0, 0, 0, 1619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1639, 1654, 0, 0,
	0, 0, 0, 0, 1636, 0, 0, 0, 0, 0,
	0, 1656, 0, 0, 0, 1631, 1632, 1638, 1659, 1637,
	1633, 0, 1630, 1628, 1629, 1621, 1622, 1623, 1624, 1626,
	1627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1641,
	0, 0, 0, 0, 0, 1642, 1643, 1644, 1645, 0,
	0, 0, 0, 1617, 1618, 1625, 1650, 1651, 1652, 1660,
	1661, 1662, 0, 0, 1658, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1653, 1648, 0, 0, 0, 2859,
	0, 0, 1620, 0, 1657, 0, 0, 1667, 0, 0,
	1666, 0, 0, 1647, 1649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1663,
	0, 1664, 0, 0, 0, 1619, 0, 0, 1634, 1635,
	0, 0, 0, 0, 0, 1639, 0, 0, 0, 0,
	0, 0, 0, 1636, 0, 0, 1655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 1656, 0, 0, 0,
	1631, 1632, 1638, 1659, 1637, 1633, 0, 1630, 1628, 1629,
	1621, 1622, 1623, 1624, 1626, 1627, 1665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 1643, 1644, 1645, 0, 0,
	0, 0, 0, 2886, 1625, 0, 0, 0, 0, 1617,
	1618, 0, 1650, 1651, 1652, 1660, 1661, 1662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1653, 1648, 0, 1657, 0, 1646, 1667, 0, 1620, 0,
	0, 0, 1647, 1649, 0, 0, 1666, 0, 0, 0,
	0, 0, 0, 0, 0, 1641, 0, 0, 1663, 0,
	1664, 0, 0, 0, 0, 0, 0, 1634, 1635, 0,
	0, 1619, 0, 0, 0, 0, 0, 0, 0, 0,
	1658, 1639, 0, 0, 0, 1655, 0, 0, 0, 1636,
	0, 0, 0, 0, 0, 0, 1640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1665, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1642, 1643, 1644, 1645, 0, 0, 0, 0, 0, 0,
	1625, 0, 1656, 0, 0, 0, 1631, 1632, 1638, 1659,
	1637, 1633, 0, 1630, 1628, 1629, 1621, 1622, 1623, 1624,
	1626, 1627, 0, 0, 1646, 0, 0, 0, 0, 1657,
	0, 0, 1667, 0, 0, 0, 0, 0, 1647, 1649,
	0, 0, 0, 0, 1641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1663, 0, 1664, 0, 0, 0,
	0, 0, 0, 1634, 1635, 0, 0, 1617, 1618, 1658,
	1650, 1651, 1652, 1660, 1661, 1662, 0, 0, 0, 0,
	0, 1655, 0, 0, 0, 0, 0, 0, 1653, 1648,
	0, 0, 1640, 0, 0, 0, 1620, 0, 0, 0,
	0, 0, 0, 0, 1666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1665, 0, 0, 0, 0, 0, 0, 0, 1619,
	0, 0, 0, 0, 0, 0, 0, 0, 1654, 1639,
	0, 0, 0, 0, 0, 0, 0, 1636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1656, 0, 0, 0, 1631, 1632, 1638, 1659, 1637,
	1633, 0, 1630, 1628, 1629, 1621, 1622, 1623, 1624, 1626,
	1627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1641, 0, 0, 0, 0, 0, 0, 0, 1642, 1643,
	1644, 1645, 0, 0, 0, 0, 1617, 1618, 1625, 1650,
	1651, 1652, 1660, 1661, 1662, 1658, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1648, 0,
	0, 0, 0, 0, 0, 1620, 0, 1657, 0, 0,
	1667, 0, 0, 1666, 0, 0, 1647, 1649, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1663, 0, 1664, 0, 0, 0, 1619, 0,
	0, 1634, 1635, 0, 0, 0, 0, 0, 1639, 0,
	0, 0, 0, 0, 0, 0, 1636, 0, 0, 1655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 1656, 0, 0,
	0, 1631, 1632, 1638, 1659, 1637, 1633, 0, 1630, 1628,
	1629, 1621, 1622, 1623, 1624, 1626, 1627, 0, 0, 1665,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1642, 1643, 1644,
	1645, 0, 0, 0, 0, 0, 0, 1625, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1657, 0, 1646, 1667,
	0, 0, 0, 0, 0, 1647, 1649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1641, 0,
	0, 1663, 0, 1664, 0, 0, 0, 0, 0, 0,
	1634, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1658, 0, 0, 0, 0, 1655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1665, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1656, 0, 0, 0, 1631,
	1632, 1638, 1659, 1637, 1633, 0, 1630, 1628, 1629, 1621,
	1622, 1623, 1624, 1626, 1627, 0, 0, 1646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1658, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1656, 0, 0, 0, 1631, 1632,
	1638, 1659, 1637, 1633, 0, 1630, 1628, 1629, 1621, 1622,
	1623, 1624, 1626, 1627,
}
var sqlPact = [...]int{

	6208, -1000, -1000, -1000, -1000, 221, -1000, -1000, 220, 218,
	217, 216, 215, 214, 211, 210, 207, -1000, -1000, -1000,
	-1000, -1000, -1000, 198, -1000, -1000, 187, -1000, 186, 183,
	181, -1000, -1000, 178, -1000, 177, -1000, -1000, -1000, -1000,
	176, 171, 169, 77648, 77161, 78129, 2105, 94603, 82951, 1807,
	69393, 94116, 68906, 93629, 93142, 2505, 168, -1000, 92655, 167,
	165, 164, -1000, 92168, -1000, 1732, -1000, 163, 2007, 56717,
	162, 161, 159, 2023, 157, -1000, 156, 155, -1000, 9817,
	1552, -1000, 153, 152, -1000, 9013, 255, 81983, 150, 149,
	2351, 148, 147, 56229, 141, 137, 2275, 2649, -1000, -1000,
	1927, -1000, -1000, 135, 130, 129, 128, 126, 121, 117,
	114, 112, 110, -1000, 102, 96, 95, 92, 91, 90,
	89, 87, -1000, 81, 80, 79, 78, 76, 74, 73,
	72, 69, 68, 67, 66, -1000, 12037, 65, 1757, 1561,
	1557, 1556, 1549, 1545, 975, 63, 62, 59, 58, 56,
	54, 52, 46, 45, -1000, 44, 40, 38, 37, 36,
	30, 27, 26, 142, 25, 22, 21, 20, 19, 13,
	9, 2017, -1000, 1664, 904, 26893, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 100375, 95084, 7, -41, 6, -1000,
	3085, 1040, 46944, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 318,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 543, 1696, 771, -1000, -1000,
	-1000, 91687, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2102, -54, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 770,
	-1000, 2093, 125, 2051, -1000, -1000, -1000, -1000, -1000, 95084,
	-1000, 1010, -1000, -1000, 3485, 3484, 1871, 769, 91206, -1000,
	1498, -1000, 929, 28426, -1000, 1221, -1000, 28426, 317, -1000,
	-1000, -1000, -1000, -1000, -1000, 3481, 3479, 3477, 3476, -1000,
	-1000, 68419, 20707, 67932, 67445, 90719, 20210, 76674, 76187, 90232,
	63563, 1006, -1000, -1000, -1000, 1327, -1000, -1000, -1000, -1000,
	-1000, -1000, -11, 61078, 3278, 95084, -1000, 306, -1000, -1000,
	-1000, -1000, -1000, -1000, 40395, 867, 39872, 624, 39349, 422,
	-1000, -1000, -1000, 63066, -1000, 3475, 3473, 1089, 3472, 3016,
	99894, 1640, 3471, 1746, 1206, 3468, 3459, 3458, 3457, 3448,
	3446, 1328, 89745, 2711, 89258, 1646, 62569, 1002, 75700, 78129,
	2429, 88771, 1300, 1299, -1000, -1000, -1000, -1000, 2921, 2630,
	2628, 52838, -1000, -1000, 3444, 3443, 3442, 3438, 3435, 99413,
	1629, 3434, 2295, 3432, 3431, 3430, 3429, 3427, 3424, 3423,
	-1000, 75213, 1001, 74726, 74239, 3146, 88284, 73752, 87797, 62072,
	38826, 887, -1000, -1000, -1000, 48906, 5220, 5057, 87310, 50893,
	78129, 78129, -1000, -1000, -1000, -1000, -1000, 38303, 535, 37780,
	645, -1000, -1000, 49408, 2644, -1000, -1000, -1000, -1000, 37257,
	533, 36734, 607, 95084, -1000, 2710, 1782, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1850,
	1510, 3315, 2490, 61575, 1820, 1343, 3083, 2847, 2846, 1436,
	3422, 2365, 2844, 2842, 2835, 2808, 2775, 1632, 2359, 531,
	26370, 2684, 1665, 36211, 1541, 1487, 2773, 2767, 3333, 1812,
	1794, 1907, 66958, 3421, 3420, 3054, 2756, 2745, 2636, -1000,
	-1000, -1000, -1000, 1408, -1000, -1000, -1000, -1000, -1000, 69874,
	-1000, -1000, 1182, -1000, -1000, 1182, -1000, -1000, -1000, -1000,
	-1000, 1259, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1664, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1856, -1000, 1867, -1000, -1000, 2314,
	3047, 3047, 3047, 3114, 521, 517, -1000, 142, -1000, -1000,
	106178, -1000, -1000, 40906, 40906, 40906, 40906, 40906, 40906, 40906,
	1932, -1000, 768, -1000, -1000, 809, -1000, 767, 665, -1000,
	-1000, -1000, -1000, -1000, -1000, 766, -1000, -1000, -1000, -1000,
	-1000, -1000, 3278, -1000, 23244, -1000, -1000, -1000, 448, 765,
	40906, -1000, -1000, 3349, 3348, 1011, -1000, 300, 939, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2705, 763, 762, -1000, 760, 757, 755, 752, 751,
	-1000, -1000, -1000, 749, 747, 746, 745, 742, 727, 726,
	725, -1000, 1834, -1000, -1000, -1000, -1000, -1000, -1000, 698,
	697, 697, 697, -1000, 996, -1000, -1000, -1000, 340, 695,
	335, 692, 690, 687, -1000, 723, 722, 721, 720, 719,
	718, 716, 715, 714, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	991, -1000, -1000, -1000, -1000, -12, 95084, -1000, 543, -12,
	-1000, -1000, 712, -1000, 30482, 30482, 30482, -1000, -1000, 2092,
	40906, -1000, 2579, -1000, -6, -6, 876, 47916, -1000, 45954,
	876, 262, 796, 52350, -1000, 2635, -1000, -1000, 711, 298,
	-1000, -1000, -1000, -1000, 21202, 2632, 95084, 95084, 78129, 78129,
	78129, 2950, 40906, -1000, -1000, 58641, 95084, 78610, 3232, 59122,
	58160, 95084, 2704, -1000, 3045, -1000, -1000, 95084, -1000, 40906,
	-1000, 3226, 1465, 64543, 3158, -31, -1000, -1000, -1000, -1000,
	-1000, -1000, 2268, 2287, 1107, 2135, 1254, -1000, 28426, 3004,
	-1000, -1000, -1000, 272, 21202, -1000, -1000, -1000, -1000, -1000,
	2629, 2910, 1293, -1000, 2132, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1631, 2909, -1000, 2246, 2905, 1594,
	-1000, -1000, 2095, -1000, -1000, 3036, -1000, -1000, 2014, 2902,
	-5, -1000, -1000, 2031, -1000, -1000, 1887, -1000, -1000, 971,
	2898, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	73265, 50398, 49408, 61078, -16, -1000, -1000, -1000, -1000, -39,
	-1000, 19713, 106178, -1000, -1000, -1000, -1000, 1673, 106178, 903,
	-1000, -1000, 2897, -1000, 106178, 899, -1000, -1000, 2894, -1000,
	2696, -1000, -1000, -1000, -1000, 3419, -1000, 3418, 2204, 3417,
	3415, 3413, -1000, 1598, 1817, 3412, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 72784, 2090, -1000, -1000, 71810, -1000, 2203,
	-1000, 72297, 1000, -1000, 971, 2201, -1000, 81496, 952, -1000,
	3411, 3144, 2461, 971, 2200, -1000, -1000, -1000, -1000, -1000,
	54290, -1000, 54290, -1000, 54290, -1000, 1474, -1000, 98932, -6,
	-6, 3278, -1000, -1000, -1000, -1000, -1000, 2893, 3410, 3409,
	3403, -1000, 95084, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	191, 2892, -1000, -1000, 81015, 191, 2890, -1000, 191, 2889,
	-1000, 80534, -1000, -1000, 2085, 2886, -1000, 203, 2880, -1000,
	-1000, 195, 2879, -1000, -1000, -102, 2876, -1000, -1000, 106178,
	-1000, -1000, -1000, -42, -1000, -1000, -1000, 1040, -1000, 48404,
	-1000, 48404, 86823, 64058, 948, 693, 55741, 106178, -1000, -1000,
	-1000, -1000, 106178, -1000, -1000, -1000, -204, -1000, -1000, 64058,
	49408, 106178, -1000, -1000, -1000, -1000, 106178, -1000, -1000, -1000,
	64058, 71810, -1000, 86336, 71329, -1000, -1000, 1326, 2325, -1000,
	-1000, -1000, 64058, 1239, 64058, 64058, 64058, -1000, 85849, -1000,
	-1000, 1880, 1569, 3040, 1864, 78129, -1000, 1781, -1000, -1000,
	-1000, 3072, -1000, 2685, -1000, 57679, 80053, -1000, 79572, -1000,
	79091, -1000, 78129, -1000, 78129, -1000, 3402, 3401, 3400, -1000,
	3399, 3062, -1000, 106178, 3052, -1000, 3398, 3154, 2684, 106178,
	-1000, 2873, 1564, 1554, 95084, -1000, -1000, 95084, -1000, 95084,
	-1000, -1000, -1000, 1370, -1000, -1000, 2261, -1000, -1000, -1000,
	-1000, 78129, -1000, -1000, -1000, -1000, -1000, -1000, 2682, -1000,
	1578, -1000, 1707, -1000, 1325, -1000, -1000, 206, -1000, -1000,
	-31, -1000, 98451, -1000, 2314, -1000, 95084, -1000, 2279, 2665,
	2681, 1324, 2116, 2358, -1000, 35688, 2341, 43461, 2128, 142,
	-1000, -1000, 142, 142, 27915, -1000, -1000, 59122, 59122, 21202,
	1287, 40906, 40906, 40906, 40906, 40906, 40906, 40906, 40906, 40906,
	40906, 40906, 40906, 40906, 40906, 40906, 40906, 40906, 40906, 40906,
	40906, 40906, 40906, 40906, 40906, 40906, 40906, 40906, 40906, 40906,
	40906, 40906, 40906, 40906, 40906, 40906, 2094, 40906, 1255, 40906,
	40906, 40906, 40906, 1767, -1000, -1000, 1803, 572, 1845, -1000,
	3298, 3298, 3298, 466, 466, 106565, 106565, 565, 3397, 809,
	-1000, 40906, -1000, 118, 40906, 21699, -1000, 517, 7504, 2267,
	-1000, 514, 22222, -1000, -1000, -1000, 23244, 665, 35165, 40906,
	984, 106178, -1000, -1000, 1418, 3311, 19218, 2721, 2528, 706,
	801, 791, 25847, 25324, 24801, 24278, 777, 40906, 40906, 40906,
	40906, 40906, 40906, 40906, 40906, -1000, -1000, 3326, -1000, 3311,
	-1000, -1000, -1000, -1000, 3311, 1285, 1283, 3311, -1000, 3311,
	3311, 2744, 2744, 34654, 34131, 33608, 43972, 33085, 40906, 23755,
	32562, 32039, -1000, 95084, -12, 3225, 40906, 105, -1000, 104908,
	-1000, 105, 105, 705, -44, 106178, 2439, 2439, 47430, 2197,
	1995, 1995, 1995, -1000, 876, 15229, 876, 84883, 2011, 876,
	876, 265, 295, 513, 45468, 2579, 84883, 784, 702, 5,
	3, 2, -1000, -1000, 1, -3, -1000, -1000, 78129, 701,
	21699, 21202, 254, 1359, -53, 2396, 2392, 2381, -1000, 2377,
	1708, -58, 1253, 78129, -79, -1000, 431, -59, -1000, 1268,
	249, 3311, -1000, -1000, -1000, -1000, -1000, 3396, 3395, -1000,
	988, 700, 699, 833, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 698, 697, 697, 697, -1000, 340, 695, 335,
	692, 690, 687, -1000, -1000, -1000, -1000, -1000, 2624, 78129,
	-39, 78610, 78129, 894, -60, 1094, -31, -1000, -1000, -1000,
	64543, 1182, -1000, 1558, -1000, -1000, -1000, -1000, -1000, -1000,
	1339, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1011, -1000,
	-1000, -1000, -1000, -1000, -1000, 3317, 3313, -13, -1000, -1000,
	21202, -1000, -33, 1503, 1668, -1000, 66471, 2260, 3042, 3027,
	1443, -1000, 1368, 1247, 3112, 69874, 3175, 3206, 871, -1000,
	2620, -1000, -1000, 926, 1571, 1663, 1245, 69874, 2246, -1000,
	59122, -1000, 2411, 3109, 1354, 1350, 1354, 1354, 1348, -1000,
	69874, 1662, 1240, 1236, -1000, 1225, 1170, -1000, -35, 3168,
	3205, 234, -1000, 2618, 1166, -1000, -1000, 78129, 21202, 1469,
	1467, 1660, 1160, -14, -1000, 3164, 3163, 1153, 1150, -1000,
	2781, -1000, 64058, 1588, 2869, 2488, 843, 2487, -1000, -1000,
	843, -16, 61078, 95084, 245, -1000, 118, 40906, 40906, 118,
	40906, 118, 3153, -1000, -1000, 2863, -1000, -1000, -1000, 3394,
	1797, 2283, -1000, -1000, 684, 2196, 2614, 95084, 2413, -29,
	78129, -1000, 2862, 2246, 2194, -1000, -1000, 70842, -1000, 2855,
	543, 2192, -1000, 625, 3393, -1000, 97970, -1000, 3045, 1302,
	2845, 1047, 530, 3220, -1000, 530, 54771, -1000, 95084, -1000,
	-1000, 95084, -1000, -1000, -1000, 3391, -1000, 78129, -1000, -1000,
	78129, 191, 2843, -1000, 78129, -1000, 78129, 190, 2840, -1000,
	-1000, 95084, -1000, 78129, 78129, -1000, 95084, 95084, 64058, 64058,
	4204, 65509, -66, -67, 503, -1000, 85368, 95084, 1045, 65990,
	95084, 2991, 967, 49408, -1000, -72, -204, 2486, 948, 948,
	843, -1000, 843, -1000, 78129, 2678, -1000, -1000, 64058, 948,
	948, 948, -1000, -1000, -1000, -1000, 3390, 3389, -1000, -1000,
	-1000, 969, 78129, 95084, 78129, -1000, -1000, 95084, -1000, 95084,
	-1000, 969, 95084, 969, 95084, 969, 95084, -1000, -1000, -1000,
	-1000, -1000, -1000, 118, 40906, -1000, -1000, 3388, 1504, -1000,
	2671, -1000, 2667, -1000, 32, -1000, -1000, -1000, -1000, -1000,
	1744, 78129, 78129, 78129, 78129, 95084, 78129, -1000, 69874, -1000,
	2279, 2665, -1000, -1000, -1000, -1000, -1000, -1000, 1304, 2058,
	-1000, 2352, -1000, 1388, -1000, -1000, -1000, 106178, 44467, -1000,
	-1000, 106178, 1738, -1000, 42950, 42439, -1000, -1000, 1562, 78129,
	2426, -1000, 2426, -162, -1000, 104523, 2350, 78129, -1000, -1000,
	-1000, -1000, -1000, 924, 596, 596, 1199, 1199, 1199, 1199,
	3145, 4358, 4546, 3334, 4998, 4998, 4809, 4809, 4809, 4809,
	4809, 4998, 556, 466, 466, 556, 556, 556, 556, 556,
	466, 466, 466, 4998, 4998, 4998, 106565, 106406, 8440, 40906,
	40906, 1148, 1747, 572, 8058, 40906, 6794, 6794, 6794, 6794,
	-1000, 1406, -1000, -1000, -1000, -1000, 2613, 683, 43972, 43972,
	-1000, -1000, -1000, -1000, 22733, 40906, -1000, -1000, -1000, -1000,
	31516, -1000, -1000, 104069, -281, 501, -155, -32, -1000, 40906,
	40906, 40906, 498, -1000, 240, 40906, 95084, -1000, 101344, 781,
	-148, -1000, -74, 1346, -1000, 40906, -1000, -1000, 1146, -1000,
	1144, 1143, 1142, -1000, 681, 496, -1000, 236, -1000, 1998,
	679, 676, 40906, -1000, -1000, -1000, -1000, -1000, 103975, -1000,
	-1000, 103749, -1000, -1000, 103523, -1000, -1000, 103429, -1000, -1000,
	-1000, 106012, 14638, 14479, 14085, 7419, 12926, 10639, -77, 491,
	-82, 477, 917, 874, 476, 472, 471, -83, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -84, 470, -1000, 2611,
	-155, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 467,
	-1000, 465, -1000, 105853, -155, 464, 5547, -1000, 43972, 43972,
	43972, -1000, 463, -1000, 104682, -1000, 105627, 31005, 31005, 31005,
	455, 105452, 40906, -155, -85, -1000, -90, -1000, -1000, 526,
	-91, 981, 30482, 46456, 21202, -1000, 981, 981, 40906, -1000,
	40906, 2369, -1000, -1000, -1000, 2346, 1751, 2439, 47430, -1000,
	-1000, -1000, -1000, 84883, -1000, 3278, 2875, -1000, 84883, -1000,
	-1000, 95084, 543, -1000, 84883, 84883, 21202, 876, -1000, 876,
	84883, 603, -1000, -1000, -1000, -1000, -1000, 454, 51378, -32,
	235, 21202, 971, -1000, 2433, 2433, 2433, 2433, -1000, -1000,
	95084, 1139, -28, 3219, -1000, 1844, -1000, 59122, -1000, 806,
	1070, 21202, -1000, -1000, -1000, 674, -1000, 3311, 3311, -1000,
	3311, 95084, 2610, 104, -1000, 28426, -1000, 1182, -1000, -1000,
	1468, -1000, 1808, -1000, 1243, -1000, -1000, -1000, -1000, 28426,
	-1000, 1560, 95084, 95084, 78129, -1000, 95084, -1000, 2190, 97489,
	2187, 59122, 95084, -1000, -1000, 673, 672, 2339, 2332, 1042,
	95084, 95084, 2320, 97008, 96527, 95084, 1958, 40906, 60597, 2044,
	1982, 118, 118, -1000, -1000, 118, 671, 1251, 78129, 78129,
	95084, 78129, 1583, -1000, -1000, -1000, -1000, -1000, 70355, -1000,
	-1000, 3325, 3320, -1000, 1354, -1000, -1000, -1000, 1354, 2246,
	1547, 95084, 78129, 60597, 1659, 95084, 1852, 118, 118, -1000,
	-1000, 118, 670, 21202, 1898, -1000, 2727, 95084, 3346, 95084,
	95084, 95084, 60597, 3060, 96046, 95084, 95084, 60597, 2781, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 60112, 1044, 971, 1639, 1136, 69874,
	49408, 963, 49408, 2466, -1000, -1000, 18723, -1000, 106178, 106178,
	-1000, 106178, -1000, 57198, 95084, -1000, 998, 95084, 65990, 942,
	2833, 53809, -39, 948, 64058, 78129, -29, 95084, -1000, 2246,
	2831, 543, 2183, -1000, 64058, 3215, 2809, 669, 3387, 3384,
	-1000, 2087, 2180, -1000, -1000, 95565, 2934, 872, 95084, 981,
	47430, 1862, -1000, 51865, 1019, 95084, 1737, 86, -1000, -1000,
	-1000, 18, 95084, -1000, 3383, -1000, -1000, 191, -1000, 78129,
	191, 191, -1000, 78129, 78129, 2085, -1000, 203, -1000, 195,
	-1000, -102, -1000, -1000, 4204, 4204, 948, -232, 668, -1000,
	901, 900, 49903, 64058, -92, -1000, -1000, -1000, -1000, -1000,
	78129, 95084, 764, 2460, 95084, -93, -1000, 229, 667, -1000,
	2529, -1000, -1000, 967, 49408, 2609, -1000, -1000, 977, -1000,
	1318, 948, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -7, -39, -39, -1000, 969, -1000, 969, -1000, 969,
	-1000, 106178, -1000, -1000, 1491, 1489, 95084, -1000, 21202, 95084,
	78129, 21202, 78129, 2661, 2656, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1061, -1000, 1738, 2057, -1000, 665, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2248, -1000,
	-30, 27915, 2133, -1000, -1000, 78129, -8, 40906, 40906, 6579,
	5998, 40906, 43972, 43972, -1000, 40906, 5641, -1000, -1000, -1000,
	-1000, -1000, 2602, 661, 40906, 59122, 5581, 5457, -1000, 451,
	8300, 556, -1000, 40906, -1000, 442, 29971, -1000, 105067, -51,
	-100, -1000, 15737, -155, -101, -1000, -1000, 795, -1000, 2931,
	-1000, 40906, 105226, 2226, 1929, 1671, 1520, 3311, 3344, 18228,
	-1000, 55256, 982, 2021, 103203, -1000, -1000, -1000, -1000, 59122,
	59122, 40906, 40906, -1000, 40906, 40906, 40906, -1000, -1000, -1000,
	3311, 918, -1000, -1000, -1000, 918, -1000, -1000, 1354, -1000,
	1354, -1000, 40906, -1000, -1000, 2590, 40906, -1000, 59122, 59122,
	43972, 43972, 43972, 43972, 43972, 43972, 43972, 43972, 43972, 43972,
	43972, 43972, 43972, 43972, 43972, 43972, 43972, 43972, 43972, 2305,
	43972, 3267, 3267, 3267, -1000, 2648, 2590, 40906, 40906, 59122,
	441, 439, 438, -1000, 40906, -155, -1000, -1000, 4204, 660,
	-1000, 2232, -1000, 2526, -1000, 40906, -1000, -138, -1000, 2579,
	-1000, -1000, 2526, 2526, -108, 106178, 47430, 47430, -1000, 658,
	40906, 2319, -1000, -1000, 780, -279, -1000, 898, -1000, -1000,
	-1000, -1000, -1000, 543, -1000, -1000, -1000, 224, 84883, 84883,
	778, -1000, -115, -1000, -1000, -120, -1000, 3214, 429, 21202,
	-1000, -1000, 3031, -1000, -1000, -1000, -1000, -1000, -1000, -39,
	95084, 2022, 3343, -1000, 3319, 790, 775, 119, 3311, 426,
	425, 423, -39, 95084, 95084, -1000, -31, -1000, -1000, -1000,
	40906, -1000, -1000, 3038, 1131, 1129, -1000, -1000, 2799, -1000,
	2176, -1000, 1023, -1000, 1758, -1000, 40906, 40906, 656, 652,
	3382, 1669, 3381, 1043, 2797, 2085, 2792, 2085, -1000, -1000,
	933, -1000, 106178, -1000, -1000, -1000, -1000, 651, 650, -1000,
	-33, 1492, 1637, 976, -1000, -1000, 40906, 40906, 84402, -1000,
	406, 3036, -9, -1000, -1000, 1628, 1128, -1000, -1000, -1000,
	-1000, 2246, 1593, 1124, -1000, -1000, -1000, 974, -1000, -1000,
	973, -1000, -1000, 40906, -1000, -35, 1122, 3171, 2175, 78129,
	1120, -1000, 1119, -1000, -1000, -1000, 3161, 2085, 2791, 1140,
	-1000, -1000, -1000, -1000, -1000, 59617, -1000, 95084, 78129, 1523,
	843, -1000, 2126, 843, 963, 2588, -1000, 2410, 3380, 78129,
	3379, 420, -121, -37, 59122, 3213, -1000, 2096, 648, 78129,
	915, -1000, 3278, -1000, -1000, -1000, -1000, 78129, 3212, 2789,
	971, 118, 78129, 3342, -1000, -1000, 78129, 2788, 2082, 2174,
	2276, 872, 65028, -1000, 971, 2016, -73, -1000, 1737, 29448,
	3030, -127, -1000, -1000, -1000, 981, 54771, 47430, 40906, 3370,
	-128, -1000, -1000, 191, -1000, -1000, -1000, 190, -1000, -1000,
	-1000, -1000, -1000, -1000, 83436, 83436, 64058, 64058, 64058, 948,
	95084, 95084, 65990, -1000, 633, 95084, 95084, 630, -1000, 95084,
	95084, 3369, 64058, -38, 626, -1000, 897, 896, 895, -1000,
	-1000, -1000, -1000, -1000, -1000, -204, 118, -1000, 2047, 78129,
	-1000, 17733, -1000, -1000, -1000, -1000, -1000, 969, -1000, -1000,
	1908, 2127, 1908, 1723, 1720, -1000, 2054, -1000, -1000, -1000,
	-1000, 2418, 3065, 21202, 3150, 6794, 40906, 40906, 338, 493,
	369, 6794, 40906, 40906, 59122, 9097, -129, 40906, 40906, -1000,
	40906, 774, 106178, 3339, 40906, 413, 412, -1000, -1000, -1000,
	3307, -1000, -1000, -1000, 106178, 40906, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 411, -1000, 106, -1000, -1000, -1000, 100856,
	-1000, 40906, 410, 3108, -1000, 407, 405, 4903, 6764, 102977,
	102883, 102657, 403, -1000, -1000, 398, 397, 106178, 2648, 106178,
	-1000, -1000, 930, 930, 1320, 1320, 1320, 1320, 3267, 738,
	820, 381, 294, 294, 294, 647, 803, 803, 294, 294,
	294, 2575, 2293, 617, 6901, -1000, -1000, 106178, 106178, 396,
	-1000, -1000, -1000, -155, 395, 4204, -1000, 2522, 3107, 106178,
	-1000, 47430, 2522, 2522, -1000, -1000, 1751, 95084, 106178, 47430,
	-1000, 2875, -1000, 16243, -1000, 21202, -1000, -1000, -1000, -1000,
	3278, -1000, 51378, -1000, 616, -1000, 33, 3031, -1000, 892,
	-1000, -39, -1000, -1000, 773, 3368, 788, 21202, 380, -1000,
	-1000, -1000, -39, -39, 106178, 95084, 95084, 95084, 2786, -1000,
	1994, -1000, 1042, 102431, -136, -1000, 104523, 40906, 95084, -1000,
	-1000, 1667, 2357, 1082, -1000, 3048, 95084, -1000, 95084, -1000,
	-1000, 95084, 95084, 78129, 95084, 2768, -141, 106178, -40, -1000,
	885, -1000, 1340, -1000, 17238, 95084, 78129, 95084, 78129, 1987,
	2764, -153, 21202, -1000, 3338, 3337, 2785, 3078, 3335, 95084,
	-1000, 95084, 78129, 2989, -1000, -1000, -1000, -1000, 1574, 1109,
	963, -55, 613, -1000, 880, -1000, -1000, 879, 963, -1000,
	64058, 49408, -1000, 543, -1000, 2438, -1000, 82464, 2010, 118,
	-1000, 3366, 83921, 610, -1000, 2043, -1000, 739, 2246, 118,
	78129, -1000, -1000, 543, 379, -56, -1000, 1037, 21202, 78129,
	2784, 2285, 872, 65028, -1000, 1302, 2358, -1000, -65, -1000,
	612, 118, 2016, -1000, -73, 106178, -1000, 878, -1000, -1000,
	-1000, -159, -1000, -1000, 354, -1000, 2988, 2987, -1000, 2537,
	40906, 609, 608, 95084, 2986, -1000, -1000, -161, 2967, 2967,
	64058, 49408, 64058, 967, -1000, 2131, -1000, -1000, -1000, -1000,
	-1000, 21202, 1548, -1000, 606, 601, -1000, -1000, -1000, -1000,
	3065, 6794, 6794, 40906, 40906, 40906, 6794, 9097, -166, -1000,
	6794, 6794, -155, -1000, -1000, 105067, -1000, -1000, -1000, 106178,
	-1000, 16743, 1913, -1000, 102337, -1000, 27915, -1000, -1000, 40906,
	40906, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 43972,
	2573, 600, 59122, -1000, -1000, 348, 953, 40906, 40906, 2579,
	953, 953, -1000, -167, -1000, -1000, -1000, 3278, 33, -1000,
	-1000, 3363, 21202, -1000, 64058, 786, -1000, 3361, -1000, -1000,
	-1000, -1000, -1000, 95084, -1000, 95084, -1000, 21202, 95084, 2536,
	2155, -1000, -1000, 2318, 595, 43972, 78129, 866, -1000, 3243,
	2545, 1760, 40906, 2133, -168, -169, 2144, -1000, -1000, 2130,
	40906, -1000, 59122, 587, 2085, 2085, -175, -176, -1000, -1000,
	40906, 1103, 95084, 28937, -1000, 3360, 3036, -1000, -1000, -1000,
	-1000, 95084, 40906, 1102, -1000, -1000, -1000, 3332, 2085, 21202,
	-1000, 2085, 2085, 3078, 1081, 95084, 78129, -1000, 1999, 1999,
	64058, 49408, -1000, -102, 963, 3203, 1852, 2484, -1000, -1000,
	-1000, -1000, 2304, -1000, -1000, 95084, 2302, 957, -1000, -181,
	-1000, 877, 873, 65990, 942, 940, -1000, -1000, -1000, 543,
	3202, -1000, 3331, 578, 95084, 2081, 576, 21202, -1000, 872,
	65028, -1000, 2934, 1737, -1000, 2940, 95084, 3022, -1000, 2358,
	572, -1000, 948, 571, 569, 2330, 2330, -182, 40906, 40906,
	-183, 568, 948, -1000, -184, -1000, -1000, -1000, -1000, -107,
	-1000, 839, 516, -1000, -1000, 78129, 78129, 40906, 40906, -1000,
	6794, 6794, 6794, -1000, 337, -1000, -1000, 2016, 3097, -1000,
	-122, 102111, 101791, 7325, 43972, 59122, -189, -1000, -1000, 95084,
	106178, -155, -1000, -1000, -1000, 597, -1000, -1000, 3359, -1000,
	-1000, 1961, -1000, -1000, -1000, 95084, 2164, -1000, 1039, 40906,
	6901, 564, 40906, -1000, 3200, -1000, 2423, 2587, 2438, 563,
	-1000, -1000, -1000, -1000, -1000, 1036, 1775, -1000, -1000, 106178,
	3078, 40906, -1000, -1000, 561, 558, 106178, 557, 868, 2572,
	-1000, -1000, -1000, -1000, 106178, 555, 3171, -1000, -1000, -1000,
	-1000, 2085, 78129, -1000, -1000, -1000, -190, -1000, -1000, 1786,
	118, 942, -1000, 1957, 2010, 554, -1000, -1000, 2068, 2390,
	-1000, 83921, 28426, 28426, 320, 3198, 940, -1000, 3274, -1000,
	3194, 118, -1000, 40906, -1000, 78129, 40906, 2080, 65028, -1000,
	2276, -1000, 1237, -191, 95084, 1737, -1000, -1000, 64058, 64058,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1036, -192, -197, -1000, 64058, -1000, -1000, 2131, -1000,
	95084, -1000, 95084, -1000, -1000, -198, -199, -1000, 1965, 40906,
	27915, -1000, -1000, 7325, -205, -1000, -139, -1000, 3188, -1000,
	-1000, -1000, -1000, 2783, 2515, 101713, 2239, 95084, 101388, -1000,
	2583, -1000, -1000, 1852, 95084, 2438, 2507, 78129, 1038, -206,
	1908, 1908, 40906, 27404, 1954, 40906, -1000, -1000, 3078, -1000,
	2557, 3289, -1000, 2068, 78129, 95084, -1000, 3068, -1000, 2984,
	-1000, -1000, -1000, 2438, 118, -1000, -1000, 118, -1000, -207,
	1037, -213, 78129, -1000, 2285, 1421, -1000, 981, -1000, -1000,
	-214, -215, 1760, 1036, 947, -220, -1000, -223, -229, -1000,
	-1000, 263, 41928, 41928, 41928, -155, -162, -1000, 95084, 553,
	2755, 962, -1000, 2069, 1614, 208, 1051, -1000, -1000, 2545,
	-231, -1000, 960, 543, -1000, 40906, 1036, -234, -1000, 1017,
	-236, -1000, 1016, -239, -1000, 2568, -1000, -247, 2085, 958,
	3138, -1000, -1000, -1000, -1000, 541, -249, -1000, -1000, 2137,
	-1000, 1852, 957, -1000, 1036, 540, 1760, 539, -1000, 54771,
	-1000, 948, 948, 2438, 1760, 981, 536, 948, -1000, -1000,
	-1000, 2918, -1000, 44962, 2019, 1717, 104295, 2918, 2918, -1000,
	-1000, 95084, 3126, -1000, 2073, 2071, 1399, -1000, -1000, -1000,
	-1000, -1000, -1000, 981, -1000, 3121, 2239, 106178, 2438, -1000,
	1908, 2472, -1000, 1908, 2559, -1000, 1945, -1000, -1000, -1000,
	2779, 3303, 95084, -1000, 95084, 1697, 1694, 3356, 942, 2068,
	1760, 40906, 2438, 40906, -237, -1000, -1000, 1852, 2438, -1000,
	-1000, -1000, 1699, 3210, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 863, -1000, 2968, -1000, 1057, 1906, 1906, -1000,
	859, 2069, -1000, -1000, 534, -1000, 529, -1000, 1686, -1000,
	-1000, -250, -1000, -1000, 3354, -1000, 2068, -1000, 2438, -252,
	1852, -255, -1000, 947, 1852, 1713, -1000, -1000, 2006, 41417,
	40906, -1000, 3251, -1000, -1000, 2321, -1000, 40906, 2545, 40906,
	40906, 2033, 2052, -1000, -1000, 1852, 1036, 947, 1760, 981,
	947, -1000, -1000, -1000, 106178, -1000, -1000, -1000, 106178, -1000,
	-261, -262, 53324, -1000, -1000, -1000, 947, 1760, 981, 2438,
	-1000, 981, 1852, 1101, -232, 83436, 981, 2438, -1000, 1852,
	-1000, -1000, 525, -268, -1000, 1852, 947, 40906, -1000, 947,
	981, -269, 981, -1000, 1852, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4112, 4111, 4110, 4108, 4107, 4106, 4105, 4102, 4101,
	4098, 4097, 4095, 4090, 4088, 4086, 4084, 4083, 4081, 4080,
	4078, 4076, 4075, 4074, 4073, 4072, 4071, 4069, 4068, 4067,
	4066, 4065, 4064, 4063, 4062, 4057, 4055, 4054, 4052, 4051,
	4050, 4048, 4047, 4045, 4043, 4042, 4039, 4038, 4036, 4034,
	4032, 4031, 4029, 4027, 38, 4022, 4012, 4011, 4010, 4008,
	4006, 3996, 3995, 3992, 3991, 3990, 3989, 3984, 3983, 3982,
	3981, 3977, 3975, 47, 3972, 240, 3970, 3964, 3963, 3957,
	3956, 3955, 3953, 3951, 3950, 3949, 3946, 3943, 239, 3939,
	130, 3935, 3933, 3932, 3930, 3929, 238, 3921, 3917, 3916,
	3914, 245, 3903, 3896, 3892, 3891, 3889, 3887, 3885, 3882,
	3880, 107, 129, 3878, 3876, 87, 3874, 3872, 3871, 3870,
	3869, 3868, 3867, 3865, 3864, 3862, 208, 3857, 235, 3856,
	3855, 3854, 3853, 3841, 3840, 3839, 3837, 3836, 3835, 3831,
	3829, 3827, 3826, 3825, 3824, 3821, 3819, 3818, 3815, 3813,
	3811, 3803, 3802, 3800, 3797, 3794, 3793, 3789, 3782, 3777,
	242, 169, 3775, 3774, 234, 229, 3773, 3772, 3771, 3768,
	3767, 108, 8, 51, 3764, 3755, 61, 66, 63, 83,
	85, 81, 3754, 90, 3753, 105, 41, 3752, 14, 18,
	136, 205, 8876, 203, 3751, 3747, 3746, 204, 158, 3745,
	199, 3744, 3742, 3736, 3735, 75, 68, 148, 147, 143,
	140, 92, 3733, 3732, 82, 56, 43, 32, 3731, 3730,
	3729, 3236, 119, 3728, 228, 201, 135, 3727, 3725, 3724,
	1229, 3723, 40, 3721, 417, 54, 116, 13, 100, 3720,
	126, 27, 3719, 170, 37, 3718, 127, 78, 72, 8413,
	8587, 3717, 86, 52, 64, 45, 142, 139, 171, 102,
	175, 181, 179, 146, 327, 3715, 214, 3714, 3193, 57,
	132, 3713, 3712, 3708, 59, 162, 88, 3707, 3705, 53,
	1, 3, 7, 144, 16, 98, 17, 3699, 21, 3698,
	3697, 3696, 3695, 26, 141, 3693, 244, 3692, 164, 39,
	31, 3691, 29, 184, 3688, 190, 99, 3684, 3682, 226,
	173, 151, 3681, 80, 194, 3676, 3675, 3670, 3669, 3668,
	111, 24, 110, 3664, 3662, 117, 202, 160, 3660, 42,
	3659, 145, 84, 114, 243, 166, 188, 96, 192, 152,
	193, 3658, 3657, 3656, 157, 3655, 3654, 186, 150, 3652,
	3650, 182, 246, 34, 62, 195, 58, 161, 134, 3647,
	178, 3645, 3644, 3643, 247, 156, 183, 2, 15, 69,
	109, 33, 5, 198, 122, 269, 95, 3640, 4835, 1557,
	2002, 3639, 3635, 120, 97, 55, 101, 137, 227, 48,
	3634, 3632, 65, 3631, 3629, 3628, 3626, 154, 3620, 3619,
	3618, 112, 125, 155, 3617, 79, 73, 12, 106, 221,
	231, 91, 187, 174, 216, 3616, 153, 3615, 44, 200,
	3614, 167, 215, 3607, 3606, 232, 3605, 121, 752, 50,
	128, 3604, 189, 3602, 3601, 3597, 3595, 3594, 3593, 3592,
	230, 196, 3589, 3586, 3585, 103, 165, 3584, 224, 159,
	168, 76, 35, 3583, 77, 2382, 3581, 225, 197, 46,
	138, 3580, 724, 104, 0, 11336, 10160, 6680, 10641, 3578,
	1904, 3576, 3574, 3561, 180, 118, 3560, 3559, 3558, 93,
	3556, 60, 3554, 3551, 49, 3549, 19, 6, 10, 20,
	22, 1218, 428, 3548, 3547, 89, 113, 123, 3546, 241,
	191, 3539, 3537, 3536, 3535, 74, 3534, 30, 3533, 28,
	3532, 3529, 36, 9, 25, 3528, 3526, 207, 3523, 185,
	211, 3521, 131, 3519, 3181, 115, 3518, 3517, 220, 71,
	3516, 223, 3515, 3141, 3514, 3513, 11, 3512, 3511, 206,
	149, 177, 3510, 3509, 133, 3508, 3503, 3502, 219, 3496,
	3494, 23, 3493, 4, 3492, 3490, 172, 3069, 3489, 3488,
	67, 3339, 163,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 41, 41, 9, 9, 9, 9, 9,
	29, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 16, 16, 30, 30, 17, 17, 32, 32,
	18, 18, 33, 33, 528, 528, 21, 35, 22, 36,
	15, 529, 529, 529, 529, 28, 23, 37, 25, 25,
	25, 25, 25, 174, 174, 174, 174, 20, 20, 31,
	31, 208, 208, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 527, 527, 210, 210,
	209, 204, 204, 530, 530, 211, 211, 211, 213, 213,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 429,
	429, 429, 460, 460, 460, 543, 543, 544, 544, 544,
	544, 544, 114, 114, 43, 43, 43, 43, 43, 522,
	522, 176, 176, 176, 178, 178, 177, 177, 177, 177,
	64, 64, 535, 535, 536, 536, 534, 537, 537, 537,
	175, 175, 175, 110, 110, 110, 110, 111, 111, 112,
	112, 179, 179, 179, 181, 181, 180, 180, 180, 180,
	180, 180, 180, 180, 185, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 92, 92, 462, 462, 463, 463,
	170, 170, 171, 171, 171, 171, 172, 172, 173, 173,
	173, 57, 182, 182, 184, 184, 183, 183, 45, 45,
	45, 45, 45, 45, 45, 46, 46, 46, 46, 46,
	47, 47, 47, 47, 47, 47, 48, 48, 48, 48,
	48, 48, 55, 55, 55, 55, 161, 161, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 546, 546, 547, 547,
	548, 548, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 70, 70,
	295, 295, 267, 267, 71, 71, 71, 72, 72, 73,
	73, 59, 59, 520, 520, 310, 310, 420, 420, 75,
	75, 330, 330, 76, 76, 76, 76, 76, 76, 77,
	77, 77, 77, 77, 77, 77, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	85, 85, 85, 85, 85, 86, 86, 86, 83, 83,
	83, 80, 80, 80, 79, 79, 79, 84, 84, 84,
	519, 258, 258, 82, 82, 82, 260, 260, 81, 81,
	81, 311, 311, 87, 87, 87, 87, 268, 88, 88,
	88, 88, 88, 88, 88, 88, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 422,
	422, 89, 89, 89, 390, 390, 93, 93, 93, 345,
	345, 94, 94, 94, 94, 94, 95, 95, 95, 95,
	95, 113, 113, 113, 113, 113, 524, 524, 303, 303,
	224, 224, 224, 224, 103, 103, 103, 103, 104, 104,
	104, 105, 105, 166, 166, 120, 120, 120, 120, 120,
	119, 119, 119, 119, 119, 119, 49, 49, 49, 50,
	50, 51, 51, 52, 52, 53, 53, 54, 54, 54,
	54, 54, 122, 122, 540, 540, 124, 121, 121, 121,
	123, 123, 123, 123, 125, 126, 126, 126, 126, 126,
	126, 126, 126, 127, 127, 454, 454, 319, 319, 452,
	452, 471, 471, 453, 453, 272, 272, 272, 272, 272,
	273, 273, 273, 461, 461, 461, 461, 461, 461, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 167,
	167, 168, 169, 169, 169, 169, 148, 148, 148, 160,
	160, 160, 160, 160, 160, 160, 151, 151, 151, 138,
	138, 129, 129, 129, 129, 129, 129, 129, 133, 133,
	133, 133, 133, 133, 133, 133, 130, 130, 140, 140,
	140, 140, 140, 134, 134, 135, 135, 137, 137, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 131, 131,
	131, 131, 142, 142, 142, 142, 352, 352, 352, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	159, 159, 159, 159, 159, 159, 538, 538, 539, 539,
	155, 155, 155, 155, 155, 155, 404, 404, 149, 149,
	149, 149, 154, 154, 154, 154, 335, 335, 146, 146,
	146, 147, 147, 147, 152, 152, 153, 150, 150, 156,
	156, 156, 156, 132, 132, 132, 550, 550, 550, 157,
	157, 145, 145, 158, 158, 158, 158, 158, 158, 158,
	158, 144, 144, 144, 143, 143, 143, 143, 136, 521,
	521, 517, 517, 517, 517, 517, 517, 517, 517, 518,
	518, 523, 523, 98, 98, 98, 98, 98, 106, 106,
	106, 106, 106, 99, 99, 99, 99, 99, 101, 101,
	100, 100, 100, 100, 65, 65, 65, 14, 14, 14,
	66, 66, 188, 188, 188, 189, 189, 280, 280, 280,
	280, 186, 186, 187, 187, 67, 67, 551, 551, 551,
	531, 531, 531, 532, 532, 532, 532, 532, 532, 274,
	274, 275, 275, 370, 370, 370, 370, 370, 278, 278,
	278, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	281, 281, 212, 212, 212, 284, 285, 285, 282, 282,
	283, 283, 283, 287, 287, 286, 289, 289, 288, 369,
	480, 480, 482, 482, 482, 482, 482, 482, 482, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	552, 552, 478, 478, 478, 479, 474, 474, 475, 475,
	475, 475, 475, 276, 276, 277, 277, 277, 277, 476,
	477, 301, 301, 407, 481, 481, 483, 483, 485, 553,
	553, 553, 553, 553, 553, 554, 554, 554, 368, 368,
	367, 367, 293, 293, 486, 486, 486, 486, 487, 487,
	487, 487, 487, 490, 489, 488, 488, 488, 488, 488,
	69, 69, 69, 332, 332, 331, 331, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 163, 163, 227, 227, 63, 63, 63, 12,
	12, 12, 533, 533, 533, 68, 68, 68, 68, 68,
	68, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 526, 526, 525, 525, 228,
	228, 556, 556, 74, 74, 74, 74, 74, 74, 74,
	423, 423, 424, 424, 62, 62, 62, 62, 62, 353,
	353, 351, 351, 350, 350, 300, 300, 406, 232, 232,
	205, 205, 205, 27, 26, 19, 19, 24, 24, 39,
	39, 39, 39, 42, 42, 38, 38, 38, 38, 40,
	40, 34, 34, 541, 541, 542, 542, 102, 102, 107,
	107, 107, 107, 107, 108, 108, 108, 108, 109, 109,
	109, 109, 118, 118, 162, 162, 162, 162, 162, 162,
	162, 44, 44, 44, 44, 56, 56, 56, 56, 116,
	558, 558, 558, 117, 117, 117, 557, 557, 225, 225,
	364, 364, 365, 365, 559, 559, 366, 366, 366, 366,
	219, 218, 220, 220, 61, 61, 61, 214, 214, 215,
	215, 216, 216, 217, 217, 560, 560, 96, 96, 96,
	165, 165, 266, 266, 266, 360, 360, 360, 294, 294,
	238, 238, 363, 363, 361, 361, 361, 361, 329, 329,
	329, 164, 164, 308, 308, 321, 321, 322, 322, 417,
	417, 323, 115, 115, 192, 192, 190, 190, 190, 190,
	190, 190, 190, 190, 197, 197, 198, 198, 199, 199,
	200, 201, 201, 201, 201, 312, 312, 202, 202, 202,
	191, 191, 191, 193, 193, 193, 193, 193, 193, 193,
	196, 196, 196, 196, 203, 203, 203, 195, 195, 497,
	497, 497, 499, 499, 501, 501, 500, 500, 496, 496,
	498, 498, 555, 555, 334, 334, 334, 291, 292, 290,
	290, 298, 298, 296, 297, 297, 299, 299, 405, 405,
	405, 206, 206, 206, 326, 326, 326, 326, 327, 327,
	356, 356, 354, 354, 354, 354, 355, 355, 357, 357,
	357, 358, 358, 359, 359, 325, 325, 386, 386, 194,
	194, 194, 305, 305, 305, 306, 306, 376, 376, 376,
	376, 376, 376, 377, 377, 375, 375, 375, 375, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 409, 410,
	410, 307, 307, 411, 362, 362, 515, 515, 515, 516,
	516, 403, 403, 412, 412, 412, 412, 412, 412, 401,
	401, 402, 402, 418, 419, 419, 338, 338, 338, 338,
	336, 336, 339, 339, 339, 339, 337, 337, 413, 413,
	413, 413, 328, 328, 414, 414, 414, 414, 415, 371,
	372, 372, 425, 425, 425, 425, 427, 304, 304, 304,
	304, 304, 473, 472, 472, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 441, 441, 441, 441, 441, 441,
	441, 441, 442, 442, 442, 442, 442, 442, 442, 428,
	428, 428, 428, 428, 432, 432, 432, 431, 431, 431,
	431, 431, 431, 431, 431, 431, 431, 431, 433, 433,
	438, 438, 439, 439, 439, 434, 435, 440, 440, 440,
	440, 561, 561, 444, 444, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 430, 430, 430, 437, 437, 437,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 346, 346, 348, 348, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 380, 380, 380, 380, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 491, 491, 491, 491, 491, 491, 491,
	491, 382, 382, 494, 494, 495, 495, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 502, 502, 503, 503,
	505, 505, 506, 506, 507, 508, 508, 508, 509, 510,
	510, 504, 504, 511, 511, 511, 511, 512, 512, 513,
	513, 513, 513, 513, 514, 514, 514, 514, 514, 392,
	392, 393, 393, 399, 399, 399, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 229, 229, 229, 229, 229, 317, 317, 315,
	315, 315, 318, 318, 316, 316, 314, 314, 313, 313,
	389, 389, 387, 387, 391, 391, 340, 340, 443, 443,
	443, 443, 443, 443, 443, 443, 341, 341, 341, 349,
	342, 342, 343, 343, 343, 343, 343, 383, 384, 344,
	344, 344, 385, 385, 394, 398, 398, 397, 396, 396,
	395, 395, 373, 373, 374, 374, 324, 324, 562, 562,
	320, 320, 416, 416, 416, 416, 270, 270, 309, 309,
	269, 269, 261, 261, 262, 262, 262, 262, 302, 302,
	400, 400, 445, 445, 446, 446, 447, 447, 448, 448,
	449, 450, 451, 388, 388, 248, 247, 235, 236, 246,
	245, 244, 234, 237, 241, 242, 243, 239, 240, 254,
	253, 252, 259, 250, 251, 421, 233, 263, 263, 264,
	264, 264, 265, 265, 265, 265, 230, 230, 231, 231,
	255, 255, 256, 257, 257, 249, 249, 249, 221, 221,
	221, 222, 222, 223, 223, 459, 459, 456, 456, 456,
	457, 457, 457, 458, 458, 458, 458, 455, 455, 455,
	455, 455, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 465, 465, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 467, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 470, 470,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 3,
	6, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 3, 2, 1, 1, 3,
	1, 3, 2, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 3, 6, 4, 6,
	7, 9, 5, 2, 8, 6, 8, 7, 2, 0,
	1, 2, 5, 0, 1, 3, 3, 1, 1, 3,
	12, 3, 1, 0, 1, 1, 2, 3, 3, 0,
	5, 7, 0, 5, 6, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 6, 2, 0, 1, 2, 3, 1, 1, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 6, 6, 6, 6, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 3, 3, 4,
	3, 4, 7, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 2, 0, 1, 0,
	1, 0, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 1, 2, 1, 2, 1, 2, 7, 3,
	2, 0, 1, 3, 3, 1, 0, 1, 2, 2,
	1, 6, 5, 1, 2, 1, 3, 2, 0, 9,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	1, 1, 3, 4, 6, 3, 1, 3, 3, 5,
	3, 1, 3, 2, 2, 2, 2, 1, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	3, 5, 7, 2, 3, 0, 3, 5, 2, 3,
	0, 2, 3, 2, 3, 2, 6, 4, 7, 7,
	2, 6, 4, 7, 7, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	2, 4, 3, 2, 2, 1, 2, 1, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 1, 1, 5, 3, 2, 6,
	3, 3, 4, 4, 3, 1, 3, 2, 3, 3,
	1, 3, 1, 2, 1, 1, 2, 2, 3, 1,
	1, 1, 1, 1, 3, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	2, 1, 3, 3, 3, 3, 2, 3, 3, 1,
	1, 1, 1, 1, 2, 2, 5, 7, 3, 3,
	3, 4, 4, 6, 5, 5, 5, 3, 4, 4,
	3, 4, 4, 3, 4, 4, 5, 3, 5, 5,
	5, 7, 3, 3, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 4, 3,
	4, 3, 3, 4, 4, 5, 0, 1, 1, 3,
	2, 4, 3, 3, 5, 3, 4, 3, 5, 3,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 2, 0, 4, 2,
	3, 4, 2, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 3, 4, 3, 1, 1, 1, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 3,
	4, 10, 10, 3, 5, 5, 5, 3, 5, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 6, 3, 6, 6, 3,
	11, 14, 1, 2, 3, 0, 4, 0, 4, 5,
	4, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 1, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	8, 0, 1, 1, 0, 2, 1, 0, 1, 0,
	9, 9, 3, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 1, 2, 8, 4, 2, 5, 5, 5, 2,
	1, 3, 11, 12, 8, 5, 3, 1, 5, 9,
	7, 11, 3, 3, 0, 2, 4, 3, 3, 1,
	5, 1, 3, 1, 2, 0, 1, 2, 2, 0,
	1, 3, 3, 2, 2, 1, 1, 1, 4, 0,
	6, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 4, 2, 2, 2, 4, 7, 3, 4,
	6, 3, 1, 1, 1, 8, 10, 11, 7, 10,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	3, 0, 1, 8, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 17, 20, 16, 19, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 3, 2, 0,
	1, 1, 0, 9, 6, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 7, 8, 9, 6,
	8, 6, 8, 1, 0, 2, 0, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	2, 3, 2, 2, 8, 11, 3, 3, 0, 3,
	0, 3, 0, 3, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 8, 5, 3, 4, 3, 0, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 3, 3, 5, 1, 3, 3, 4,
	5, 2, 2, 0, 2, 2, 1, 1, 1, 0,
	1, 0, 2, 2, 5, 4, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 0, 3, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 2, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 6, 6, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 3, 0,
	5, 4, 1, 2, 1, 4, 1, 1, 2, 1,
	1, 1, 1, 1, 0, 1, 2, 5, 1, 4,
	2, 5, 1, 4, 3, 3, 0, 1, 2, 4,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 1, 0, 1, 4, 1, 3, 3,
	3, 5, 2, 2, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	5, 6, 6, 7, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	2, 1, 5, 5, 6, 3, 1, 1, 1, 2,
	2, 2, 4, 3, 5, 6, 8, 6, 5, 4,
	3, 2, 2, 4, 1, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	6, 8, 8, 6, 4, 6, 6, 6, 4, 1,
	3, 3, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 1,
	2, 3, 2, 3, 2, 3, 1, 0, 1, 3,
	1, 3, 3, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 2,
	3, 0, 3, 3, 2, 2, 1, 2, 2, 3,
	2, 1, 1, 1, 5, 1, 2, 4, 2, 0,
	1, 0, 3, 5, 1, 0, 1, 2, 1, 0,
	1, 3, 3, 2, 1, 1, 1, 3, 1, 3,
	3, 1, 1, 1, 1, 5, 3, 1, 1, 3,
	1, 1, 1, 1, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 525, -90, -87, -57, -55, -93, -94,
	-76, -95, -89, -113, -118, -102, -114, -120, -162, -167,
	-168, -169, -3, -43, -45, -58, -75, -77, -88, -97,
	-96, -98, -103, -110, -106, -92, -49, -115, -119, -128,
	-163, -164, -165, 31, 30, 96, 77, 147, 122, 130,
	185, 338, 374, 385, 366, 355, -123, -124, 402, -44,
	-56, -117, -116, 70, 123, 361, -4, -12, 28, 44,
	-46, -47, -48, 60, -63, -60, -70, -64, -545, 98,
	-498, -78, -81, -109, -549, 135, 154, 203, -99, -100,
	327, -104, -105, 368, -107, -108, 370, 155, -51, -50,
	149, -190, -192, -121, -122, -166, -129, -130, -131, -132,
	-133, -134, -135, -136, -137, -138, -139, -140, -141, -159,
	-142, -143, -144, -145, -150, -146, -147, -148, -149, -151,
	-152, -154, -155, -156, -157, -158, 406, -153, 460, 47,
	420, 79, 139, 378, 21, -5, -6, -7, -8, -9,
	-10, -11, -14, -13, -59, -61, -62, -65, -66, -67,
	-74, -68, -69, -497, -79, -80, -83, -85, -86, -82,
	-84, 367, -193, -191, 522, 474, -16, -21, -22, -17,
	-18, -20, -23, -19, -24, -30, -35, -36, -32, -33,
	-31, -34, -37, -38, -39, -40, -41, -42, -26, -28,
	-29, -27, -15, -25, 492, 500, -196, -194, -195, -203,
	394, 482, 436, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, -268, 2, -250, -255, -256, -257, -249,
	-221, -467, -470, 4, -464, -468, 160, 212, 292, 21,
	22, 23, 24, 25, 26, 28, 29, 40, 41, 43,
	42, 44, 45, 46, 47, 51, 53, 57, 58, 59,
	60, 61, 65, 70, 71, 76, 77, 78, 79, 80,
	81, 82, 88, 85, 86, 87, 90, 92, 93, 94,
	95, 96, 97, 99, 100, 101, 103, 104, 112, 113,
	114, 115, 117, 122, 123, 126, 121, 125, 128, 129,
	130, 133, 134, 135, 137, 138, 140, 141, 142, 144,
	145, 147, 148, 149, 152, 150, 443, 151, 153, 154,
	155, 156, 166, 167, 168, 173, 175, 179, 180, 183,
	184, 186, 190, 192, 193, 194, 195, 196, 202, 203,
	205, 206, 207, 208, 213, 214, 218, 215, 224, 225,
	229, 230, 231, 233, 237, 238, 239, 240, 241, 242,
	244, 246, 245, 248, 251, 252, 255, 256, 257, 260,
	261, 262, 263, 265, 266, 269, 267, 270, 268, 272,
	273, 274, 271, 277, 275, 279, 280, 281, 290, 288,
	284, 285, 286, 282, 283, 287, 294, 297, 200, 299,
	300, 303, 321, 307, 308, 309, 312, 313, 316, 319,
	320, 322, 323, 324, 325, 326, 327, 328, 329, 331,
	332, 336, 338, 339, 341, 343, 344, 345, 346, 347,
	348, 349, 352, 351, 353, 355, 361, 366, 363, 364,
	365, 367, 368, 369, 370, 372, 373, 374, 376, 377,
	378, 379, 381, 383, 384, 387, 388, 403, 404, 422,
	385, 386, 389, 390, 391, 392, 393, 397, 395, 396,
	398, 399, 400, 402, 405, 406, 408, 409, 410, 411,
	412, 413, 416, 418, 419, 420, 421, 423, 426, 427,
	428, 429, 424, 435, 432, 433, 437, 438, 439, 440,
	441, 442, 444, 446, 454, 455, 457, 460, 461, 462,
	452, 464, 465, 468, 469, 470, 473, 471, 472, 474,
	476, 479, 480, 481, 487, 486, 493, 494, 496, 497,
	498, 35, 48, 49, 52, 54, 56, 66, 67, 68,
	72, 118, 119, 146, 157, 158, 169, 181, 182, 187,
	189, 197, 198, 199, 219, 220, 222, 227, 249, 296,
	298, 314, 318, 333, 334, 335, 337, 350, 380, 414,
	425, 430, 447, 448, 449, 450, 456, 458, 482, 483,
	484, 488, 495, -268, 2, -250, 305, -243, 2, -221,
	-221, 338, 27, 2, 27, 332, 396, 438, 440, 2,
	-524, -303, 2, 27, -224, -221, 98, 185, 394, -243,
	2, -524, -303, 24, 2, -221, 2, -225, 2, 385,
	-221, 266, 2, 525, 90, 257, 71, 380, 399, -126,
	455, -125, 447, 389, -127, -454, 2, 277, -221, 525,
	525, 525, 27, -233, -221, 436, 212, 114, 433, 525,
	2, 436, 324, 486, 395, 114, 347, 212, 462, 389,
	-533, 266, 376, 188, 475, -522, 2, -517, 4, -468,
	-464, -262, -261, 436, 441, 114, -257, -249, 515, -256,
	525, 525, 525, 2, 230, 231, 346, 345, 399, 400,
	525, 525, 525, 387, 2, 26, 63, 89, 94, 120,
	156, 176, 179, 310, -546, 321, 344, 398, 435, 444,
	457, -532, 421, 65, 389, -531, -533, 266, 462, 133,
	-350, 114, 257, 184, 469, 440, 438, 467, 126, 218,
	472, 471, 525, 525, 26, 63, 74, 94, 133, 156,
	176, 179, -548, 321, 344, 383, 398, 435, 444, 457,
	2, 486, 266, 395, 436, 212, 114, 462, 389, -533,
	387, 388, 342, -90, 2, 522, 31, 30, 402, -185,
	436, 223, 2, -221, 525, 525, 2, 230, 231, 387,
	388, 525, 525, 177, -517, 2, 525, 525, 2, 230,
	231, 387, 388, 223, 2, 65, 391, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 2, -160, 399,
	421, 194, 45, 44, 71, 27, 343, 76, 325, 115,
	141, 186, 212, 213, 238, 89, 90, -352, 43, 231,
	230, 388, -538, 387, -404, 437, 390, 396, 432, 242,
	385, 455, 98, 476, 377, 498, 347, 348, 150, 4,
	114, 277, 401, 447, 257, 384, 328, 81, 525, -555,
	2, 436, -557, 2, 455, 455, 2, -557, 2, -557,
	2, -557, 2, -558, 455, 495, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, -191, -193, -192, 525, 525, 525, 525,
	525, 525, 525, -160, 399, 2, 71, 27, -296, -298,
	466, 221, 143, 311, -190, -192, 2, -497, -452, 2,
	-378, -471, -380, 513, 514, 506, 434, 64, 291, 499,
	-392, 120, 467, 305, -470, -381, -394, 146, 380, -318,
	8, 9, 5, 6, 7, -230, -382, -388, 459, 159,
	295, -265, 526, 10, 522, -494, -192, -393, 36, 189,
	62, -456, -264, -231, -428, 222, -263, -249, -491, -492,
	4, -464, -465, -457, -431, -439, -435, -436, -442, -221,
	-467, 74, 106, 107, 105, 110, 109, 259, 258, 111,
	108, 401, 475, 63, 35, 197, 198, 227, 296, 199,
	72, -493, 134, -466, 219, 220, 414, 49, 350, 169,
	119, 118, 298, 54, 52, 483, -440, 116, 447, 448,
	449, 450, 181, 182, 56, 157, 158, 318, 335, 430,
	456, 458, 187, 249, 102, 178, 217, 201, 226, 228,
	232, 250, 253, 278, 289, 293, 315, 317, 375, 407,
	-561, 484, 425, 66, 67, -499, 351, -500, -243, -499,
	525, 525, 527, 525, -290, -291, -292, 2, 27, 131,
	522, 2, -408, 2, -409, -413, -192, 243, -412, 522,
	-410, 520, -250, 306, -495, 381, -491, -492, -230, -249,
	-264, 4, -464, -466, 524, -293, 522, 114, 436, 75,
	212, -345, 522, -221, 27, 305, 451, 527, -390, 522,
	305, 177, 308, -221, 486, 2, 2, 403, 2, 522,
	-126, 68, 455, 42, 399, -365, 2, -366, -218, -219,
	-220, -418, 229, 341, 349, 501, 498, -452, -540, 177,
	505, 451, -452, -319, 524, 2, 2, 2, 2, 2,
	-413, 197, -250, 2, -247, -455, 4, -464, -468, -465,
	-469, -467, 27, 30, 31, 32, 34, 36, 37, 38,
	39, 55, 62, 63, 69, 73, 75, 84, 89, 98,
	105, 106, 108, 107, 109, 110, 111, 120, 124, 127,
	131, 132, 136, 139, 143, 159, 161, 174, 176, 177,
	185, 188, 191, 204, 216, 221, 223, 243, 247, 254,
	258, 259, 291, 295, 301, 305, 306, 310, 311, 330,
	340, 354, 371, 394, 401, 417, 431, 436, 445, 451,
	453, 459, 466, 467, 475, 477, 485, 489, 490, 491,
	492, -470, 74, 2, -413, 197, 2, -252, 197, -413,
	-255, 2, -234, -221, 2, -246, -455, 2, -269, 197,
	-250, -251, -255, -253, 2, -255, -259, 2, -221, -462,
	197, 2, -459, 10, -458, 5, 4, -464, -468, -465,
	486, 223, 451, 527, -309, -261, -262, -451, 8, -302,
	-221, 524, -378, 2, -115, -101, 2, 174, -378, 197,
	2, -115, 197, 2, -378, 197, 2, -115, 197, 2,
	-535, 2, -462, 2, 2, 457, 2, 94, 197, -221,
	436, 113, 2, 365, -547, 383, 461, 2, 2, 2,
	2, 2, 2, 436, -239, 2, -221, 174, -259, 197,
	2, 395, -556, 351, -462, 197, 2, 486, -253, 2,
	-253, 212, 225, -234, 197, 2, 440, 438, 440, 438,
	177, 2, 223, 2, 223, 2, -414, 2, -415, -409,
	-250, 520, 2, 2, 2, 2, 2, 197, -221, 436,
	113, 2, 241, 2, 2, 2, 2, 2, 2, 2,
	-311, 197, 2, -250, 486, -311, 197, 2, -311, 197,
	2, -351, 2, 84, -234, 197, 2, -258, 197, 2,
	-253, -260, 197, 2, -259, -463, 197, 2, -462, -378,
	2, -115, 2, -422, 2, -421, -458, 482, -90, 522,
	-90, 522, 399, 522, -462, -250, -250, -378, 2, -115,
	-101, 2, -378, 2, -115, 2, -112, -111, -462, 522,
	177, -378, 2, -115, -101, 2, -378, 2, -115, 2,
	-185, 174, 2, 114, 436, -160, 2, 174, 477, 2,
	8, 2, 204, -462, 390, 348, 166, 2, 403, 2,
	404, 71, -352, 498, 71, 177, 2, 177, 2, -335,
	2, 492, 2, -521, 2, 305, 177, 2, 177, 2,
	177, 2, 177, 2, 177, 2, 345, 400, 231, 2,
	-115, 489, -101, -378, 489, 2, -539, 174, 388, -378,
	2, 454, 240, 151, 177, -335, 2, 177, 2, 177,
	2, 5, 2, 346, 422, 2, 229, 341, 422, 2,
	-250, -550, 2, 436, 486, 395, 2, 2, 85, 86,
	177, 2, 177, 2, 177, 498, 2, -328, -413, -364,
	-365, -364, 451, -296, -298, -160, 403, 2, -197, -326,
	-199, 174, -354, -355, -200, 254, 161, 301, -201, -334,
	27, 131, -334, -334, 58, 523, 523, 11, 12, 73,
	40, 513, 514, 515, 516, 172, 517, 518, 511, 512,
	510, 503, 504, 508, 235, 236, 91, 507, 505, 83,
	264, 382, 162, 163, 164, 165, 362, 210, 33, 211,
	14, 15, 16, 32, 310, 253, 499, 201, 407, 506,
	17, 18, 19, 226, 228, 293, 48, 204, -229, -271,
	-378, -378, -378, -378, -378, -378, -378, 317, 522, -324,
	-373, 520, -192, 522, 522, 522, -451, -192, -378, -392,
	523, -316, 522, -192, -392, -387, 522, 380, 520, 522,
	-395, -378, 5, 5, 5, 522, 524, -502, 493, 174,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 337, -433, 522, -432, 522,
	-432, -432, 487, -430, 522, 500, 494, 522, -430, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 487, 527, -499, -293, 522, -320, -416, -378,
	515, -320, -320, 305, -313, -378, 102, -338, 232, 278,
	178, 250, 375, 217, -375, 526, -375, -403, 500, -192,
	-410, -249, -192, -412, 522, -408, -403, -91, -451, -75,
	-88, -96, -115, -128, -164, -165, 515, -250, 522, 177,
	522, 524, -455, 177, -302, -234, -250, -263, -264, -269,
	130, -313, -517, 462, -302, -224, 37, -389, -425, -426,
	-473, 526, -472, -428, -438, -434, -437, 333, 334, -457,
	52, 483, -440, 222, 4, -464, -466, 219, 220, 414,
	49, 350, 169, 119, 118, 298, 54, 447, 448, 449,
	450, 181, 182, 56, 484, 425, 66, 67, -517, 462,
	-302, 174, -351, -454, -313, 37, -365, 2, 120, -459,
	42, -559, 527, 252, -273, 263, 290, 193, 306, 496,
	299, -461, 5, 4, -388, -400, 120, 257, 222, -445,
	-447, 8, -446, 9, -448, 513, 514, -453, -452, 104,
	524, -455, -208, 363, 402, -207, 23, 28, 135, 480,
	152, -283, 214, 320, 324, 146, 418, 470, -528, -529,
	386, 442, 443, 87, 299, 402, 363, 146, -331, -333,
	37, 112, 281, 319, 59, 207, 268, 269, 420, 488,
	146, 402, 363, 320, -529, 95, 363, -529, -210, 418,
	470, -528, -529, 386, 363, -209, -283, 146, 526, 23,
	363, 402, 320, -543, -544, 135, 28, 363, 320, -525,
	-496, 492, 146, -413, 197, -536, -111, 244, 5, 10,
	-111, -309, 527, 527, -455, 515, 388, 387, 146, 146,
	146, 146, 174, 2, 2, 291, 2, 2, 2, 179,
	-531, -548, 2, 2, -250, 197, -295, 305, -520, -310,
	436, -250, 291, -252, 197, 2, -255, 486, -525, 291,
	-254, 197, -250, 37, 522, 2, -351, 2, 212, -496,
	291, -414, -266, -250, -409, -266, 402, -243, 37, -375,
	-375, 146, 2, 2, 2, -221, -211, 527, 61, 369,
	146, -311, 197, -211, 146, -211, 146, -270, 197, -269,
	-211, 146, -211, 527, 146, -211, 527, 146, 527, 146,
	523, 527, -422, -422, -462, -173, 492, 177, 98, 522,
	522, -185, -419, 527, -418, -463, -112, -462, -462, -520,
	-234, 2, -250, 2, 436, 233, -462, -173, 204, -462,
	-462, -462, -454, 27, 404, 2, 345, 400, 86, 404,
	2, -250, 436, 114, 212, 77, -523, 174, -518, 376,
	-517, -250, 114, -250, 114, -250, 114, -250, -250, 2,
	2, 2, 2, 82, 82, 2, 44, -539, 174, 2,
	454, 2, 454, 2, -221, -221, -221, 421, 252, -250,
	174, 436, 212, 436, 212, 114, 436, -211, 527, -225,
	-197, -326, -454, -327, -326, -198, -197, -200, 174, 349,
	471, 281, 405, 237, -355, -354, 27, -378, -359, 168,
	280, -378, -357, -380, 513, 514, -446, -448, -312, 299,
	-191, -191, -191, -299, -405, -378, 340, 212, -427, -425,
	-425, -248, -455, 447, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, 253,
	201, 407, 48, 204, -378, 451, -378, -378, -378, -378,
	275, 291, 295, 459, 159, 468, 131, 299, -562, 431,
	39, -385, -192, -317, 522, -399, 34, 417, 27, -392,
	522, 2, -373, -378, -374, -314, -313, -313, 523, 485,
	27, 131, 515, 2, 523, 527, 37, 523, -378, -314,
	-391, -387, -313, -398, -397, 489, -346, -347, 497, 271,
	117, 195, 270, -348, 393, -449, 8, -455, 515, -503,
	167, 188, 522, 523, 2, 523, 2, 523, -378, 2,
	523, -378, 2, 523, -378, 2, 523, -378, 2, 523,
	2, -378, -378, -378, -378, -378, -378, -378, -313, 8,
	-449, -449, 447, 447, -449, -449, -449, -441, 333, 255,
	334, 183, 274, 272, 273, 182, -441, -340, 2, -443,
	-313, 4, 497, 271, 117, 195, 270, 393, 5, -340,
	2, -341, 2, -378, -313, -342, -379, -380, 513, 514,
	506, -392, -343, 2, -378, -314, -378, 55, 247, 453,
	-344, -378, 177, -313, -313, 2, -313, 2, -500, 37,
	-313, -305, 527, 177, 37, 4, -305, -305, 522, 523,
	527, -339, 192, 267, 262, -339, -408, -338, 232, -336,
	315, -336, -336, -403, -235, 520, 528, -455, -403, -402,
	-401, 37, -243, 312, -403, -403, 524, 523, -402, 521,
	-515, 522, 525, 525, 525, 525, 525, -250, 522, -313,
	-455, 524, 423, 523, 226, 226, 226, 226, 381, 523,
	451, -519, -258, 492, -90, 307, 523, 527, -304, 36,
	520, 524, -449, 2, 2, -444, 487, 522, 522, -347,
	522, 177, -519, -303, -254, -540, 523, 455, -366, -272,
	349, 416, 364, 397, 433, 8, 9, 8, 9, 527,
	-455, 527, -541, 89, 451, 75, 389, -369, 197, 75,
	-474, -237, 89, -475, -221, 69, 467, 340, 176, 144,
	-541, 89, 340, -541, 89, 89, 402, 421, 451, 58,
	-413, 40, 40, 27, -115, 248, 177, 498, 436, 212,
	389, 451, -413, -333, -425, 112, 268, 269, 58, -450,
	-445, 513, 514, -450, 58, -450, -450, -450, 492, -252,
	-413, 389, 451, 451, 451, 451, 527, 40, 40, 27,
	-115, 248, 177, 451, -269, -235, 481, 41, 481, 451,
	41, 389, 451, 527, 41, 41, 451, 451, -526, -226,
	101, 286, 261, 287, 93, 283, 92, 282, 99, 284,
	100, 285, -227, -228, 326, 479, -462, 402, 363, 146,
	204, -419, 204, -419, -261, -221, 524, -115, -378, -378,
	-115, -378, -115, 44, 146, 2, -556, 241, 522, -276,
	291, 177, -302, -420, 223, 527, -310, 146, -332, -331,
	291, -254, 197, 2, 146, -293, 291, 140, 522, 347,
	2, -236, 197, -222, -221, -351, -214, 439, 146, -330,
	477, -360, -115, 522, 120, 37, -360, -321, -322, -417,
	-323, -237, 522, -243, -221, 2, -250, -311, -211, 146,
	-311, -311, -211, 527, 146, -234, -253, -258, -259, -260,
	-462, -463, -90, -421, 523, 523, 523, -172, 309, -171,
	-221, 5, -185, 477, -275, -370, -369, -478, -479, -474,
	253, 212, 467, 225, 160, -294, -238, -237, 113, -179,
	492, -111, 523, -419, 204, -173, -173, -419, -419, -250,
	174, -462, -173, -173, -173, 2, 2, -335, -250, -234,
	-269, -250, -302, -302, -335, -234, -335, -234, -335, -234,
	-115, -378, 2, 399, 174, 174, 524, -335, 347, 114,
	436, 324, 212, -250, -269, -250, -269, -234, -250, -413,
	-327, -198, 306, 237, 405, -357, -358, -380, 380, 381,
	-358, 380, 381, 8, 9, 8, 9, -202, 409, 294,
	-311, 527, -205, 38, 127, 237, -250, 498, 142, -378,
	-378, 451, -562, 431, -385, 142, -378, 275, 295, 459,
	159, 468, 131, 299, 177, 522, -379, -379, 523, -315,
	-378, -378, 521, 530, 523, -298, 527, -296, -378, -313,
	-313, 523, 524, -313, -302, 521, 521, 527, 523, -396,
	-397, 136, -378, 451, 451, 451, 451, 522, 523, 524,
	-508, 316, 522, 522, -378, 523, 523, 523, 523, 37,
	527, 527, 527, 523, 527, 527, 527, 523, 523, 523,
	527, 523, 498, 498, 523, 523, 523, 523, 527, 523,
	527, 523, 177, 523, 523, -349, 330, 523, 11, 12,
	513, 514, 515, 516, 172, 517, 518, 511, 512, 510,
	503, 504, 505, 83, 264, 382, 14, 15, 16, 226,
	204, -379, -379, -379, 523, -383, -384, 177, 174, 37,
	-344, -344, -344, 523, 177, -313, 523, 523, 522, -501,
	266, 291, 523, -372, -371, 490, -416, -306, 2, -408,
	-245, -455, -372, -372, -313, -378, 232, 232, -337, 477,
	305, -339, -408, -402, -451, -377, -376, 175, 38, 127,
	288, 200, -402, -243, -293, -402, -402, -455, -403, -403,
	-401, 523, -516, -451, 523, -307, -411, -495, -298, 524,
	-455, -182, -496, -161, 5, 295, -161, -161, -161, -302,
	451, 24, 331, -425, 520, 521, 8, -455, 522, -449,
	-449, -449, -302, 177, 177, -452, -365, 465, 80, 349,
	447, -452, -207, 363, -237, -237, -250, -259, 291, -369,
	197, -213, 291, -425, -244, -221, 522, 522, 237, 237,
	477, -237, -244, 237, 197, -237, 197, -244, -244, -527,
	349, 300, -378, -460, -459, 111, 401, 256, 347, 292,
	-208, 363, 402, -115, -115, -115, 522, -540, 477, 130,
	-250, -269, -250, -259, -254, 402, 363, 289, -263, -450,
	-450, -331, 402, 363, -259, -252, -460, 389, -234, -209,
	-115, -115, -115, 522, -235, -210, 363, 5, 197, -237,
	5, -221, -237, -259, -460, -544, 23, -237, 197, -237,
	-259, -460, -226, -462, 295, 473, -525, 389, 451, -413,
	-111, -176, 492, -111, -170, 208, 515, -522, -221, 486,
	-221, -274, -277, -275, -237, -188, -189, 494, 492, 146,
	-267, -250, 520, -173, -462, -250, -259, 146, -293, 291,
	-462, 37, 146, 522, 2, 2, 305, 291, -236, 197,
	-215, 137, -560, 505, -234, -372, -306, -329, -363, 371,
	305, -294, 482, -243, -329, -308, 527, 177, 505, 524,
	-294, 2, -211, -311, -211, -211, -269, -270, -211, -211,
	-211, -90, -90, -173, 527, 522, 505, 505, 522, -462,
	-462, 523, 527, -250, -236, 212, 212, -242, -222, 523,
	527, 524, 522, -181, 309, -180, 138, 239, 224, 410,
	411, 412, 413, 129, -179, -112, 177, -52, 492, 436,
	-173, 526, -335, -335, -335, 399, 399, -221, -246, -234,
	-250, -247, -269, 174, 174, 471, -358, 306, 260, -405,
	-206, 297, -250, 526, -378, -378, 142, 142, -378, -379,
	-379, -378, 142, 177, 522, -378, -389, 32, 32, 523,
	527, -374, -378, 523, 485, -298, -298, 523, 515, -455,
	526, 523, -387, 139, -378, 445, 271, 195, 270, -348,
	270, -348, -348, -449, 5, -455, 515, -509, -240, 522,
	-221, 490, -297, 311, 523, -427, -425, -378, -378, -378,
	-378, -378, -449, -430, -430, -445, -445, -378, -383, -378,
	-427, -425, -379, -379, -379, -379, -379, -379, -379, -379,
	-379, -379, -379, -379, -379, -379, -379, -379, -379, -379,
	-379, 131, 291, 299, -379, -384, -383, -378, -378, -425,
	523, 523, 523, -313, -90, 522, 266, -325, 188, -378,
	-419, 527, -325, -325, 523, -408, -408, 522, -378, 232,
	521, 527, 529, 505, -293, 524, -401, -402, 521, 523,
	527, 523, 527, -362, 37, 523, -455, -184, -183, 128,
	51, -302, 308, 5, 8, 520, 521, 524, -449, 523,
	523, 523, -302, -302, -378, 451, 451, 146, 291, 479,
	-480, -475, 144, -378, -300, -406, -378, 522, 522, 2,
	-204, 135, 402, -542, 2, 477, 146, -211, 146, -211,
	496, 522, 522, 451, 389, 492, -313, -378, -174, 120,
	-454, -529, 526, -529, 526, 389, 451, 389, 451, 492,
	492, -313, 451, -429, 46, 25, 291, -253, 451, 451,
	-211, 146, 462, 402, -462, 295, -259, -254, 402, 363,
	-419, -178, 309, -177, 138, 373, 129, 239, -419, -176,
	177, 223, 2, -254, 2, 523, 523, 527, -481, 37,
	303, 303, 522, -250, -71, 492, -418, -451, -252, 37,
	146, -525, -115, -254, -423, -424, 5, -250, 146, 305,
	291, -216, 246, -560, -459, -496, -298, -329, -320, 292,
	88, 523, -372, -322, -306, -378, 2, 523, -211, -211,
	-171, -172, -462, -462, -462, -173, -185, -185, -370, -278,
	522, -236, -222, 522, -185, -238, 2, -463, 527, 522,
	505, 505, 505, -419, -115, 309, -250, 515, -335, -285,
	-284, 324, 299, -285, 380, 380, 306, 168, 242, -205,
	-235, -378, -378, 142, 32, 32, -378, -378, -389, 523,
	-378, -378, -313, 521, 5, -378, 523, 523, 8, -378,
	523, 524, -510, -221, -378, 523, 58, 523, 523, 527,
	527, 523, 523, 523, 523, 523, 523, 523, -384, 177,
	131, 299, 522, 523, 523, -90, -386, 191, 58, -408,
	-386, -386, -337, -302, -408, -376, -235, 520, -455, -451,
	-411, 522, 524, -183, 505, 521, 2, 520, -455, 523,
	-237, -237, -369, 146, -482, 89, -484, 73, 160, 98,
	291, 295, 467, 340, 69, 120, 354, -552, 37, 502,
	523, 523, 527, -205, -300, -302, 291, 428, 120, 291,
	120, 113, 462, 76, -237, -244, -302, -302, -250, -259,
	153, 523, 527, 505, 2, 515, 515, -259, -254, -259,
	-252, 322, 153, 523, -235, 5, 5, 146, -232, 73,
	5, -237, -237, -253, 113, 389, 451, -176, 527, 522,
	505, 505, -176, -463, -111, -293, -281, 215, -237, -479,
	-476, -477, 340, -483, -485, 160, 340, -115, 2, -187,
	-186, -221, 5, 522, -276, 309, 521, -332, -115, -254,
	-293, 523, 527, -353, 477, -235, -250, 146, -217, 245,
	-560, -459, -214, -356, -354, -361, 522, 305, -115, -298,
	505, 523, 523, 113, 113, 206, 145, -300, 522, 522,
	-302, 113, 523, -180, -181, -462, -111, -462, -179, -53,
	-54, 212, 89, 329, -247, 436, 212, 522, 522, -205,
	-378, -378, -378, 523, -298, -455, 515, -504, 324, 523,
	-405, -378, -378, -379, 177, 522, -389, 523, -505, 491,
	-378, -313, -505, -505, 523, -451, 2, -462, 520, 2,
	-369, -244, -248, -241, -221, 160, 197, 295, 237, 522,
	-379, -250, 522, 2, 29, -553, 124, 216, -368, -554,
	97, 429, 205, -406, -206, 523, 523, 295, 295, -378,
	-425, 522, -211, -211, 523, 523, -378, 451, -454, 96,
	-452, 2, -529, -234, -378, 451, 5, -211, -248, -211,
	-211, -232, 462, -259, -254, -177, -178, -462, -111, -176,
	37, -282, -283, 204, -481, 237, -241, 237, -551, 492,
	523, 527, 505, 505, -274, -188, -72, -73, 452, -418,
	-293, 37, 5, 522, -221, 305, 522, -235, -560, -459,
	-215, -329, 132, -302, 89, -356, -385, -173, 522, 522,
	-279, 78, 90, 121, 196, 180, 213, 421, 426, 27,
	-279, 523, -300, -300, 523, 522, -173, 523, 527, 27,
	522, 27, 522, -250, -269, -313, -313, 523, -298, 58,
	527, 523, 523, -379, -389, 523, -506, -507, -240, 521,
	2, -484, -241, 291, 477, -378, -223, 522, -378, 37,
	216, 125, 202, -281, 522, -367, 477, 354, -232, -300,
	522, 522, 522, 505, 177, 522, -429, -211, -253, 523,
	-534, 352, -115, -188, 322, 522, -280, 305, 113, 281,
	-186, -452, -452, 523, 37, -73, 9, 37, -115, -300,
	-250, -300, 305, -459, -216, 471, 292, 523, -244, -329,
	-463, -463, -367, 523, 523, -463, -54, -302, -302, 523,
	523, -511, 347, 381, 190, -313, -299, 523, 527, 37,
	146, 192, 523, -486, 265, -221, 523, 125, 202, -282,
	-302, -281, 192, -250, -530, 477, 523, -287, -286, -284,
	-289, -288, -284, -313, -452, 96, 322, -313, -232, -537,
	178, -536, 5, 10, -280, -250, -301, -407, -237, 79,
	113, -281, -115, -115, 523, -353, 523, -250, -217, 402,
	-371, 523, 523, -368, -367, -189, 492, 523, 523, 523,
	523, -512, -513, 48, 464, 104, -378, -512, -512, -507,
	-509, 160, 492, -487, -490, -489, 305, 408, 178, 323,
	523, 428, 488, -553, 523, 492, -293, -378, -367, 523,
	527, 482, 523, 527, 482, 523, 177, 523, -211, -175,
	492, 44, 522, 523, 527, 339, 126, 135, -282, -551,
	-367, 522, -368, 522, -321, -173, -173, -281, -368, -372,
	-173, -514, 144, -513, 336, 173, 380, 336, 173, -514,
	-514, -241, 53, -489, 305, -490, 305, 471, 126, -372,
	53, -486, -281, -286, 204, -288, 177, 322, 149, -536,
	29, -302, -407, 381, 381, 2, -188, -280, -368, -300,
	-281, -300, -372, -282, -281, 104, 188, 446, 281, 32,
	505, -488, 281, 369, 61, 402, -488, 505, -487, 522,
	522, 387, 523, 2, -280, -281, 523, -282, 523, -189,
	-282, 380, 313, -513, -378, 22, 295, 120, -378, -553,
	-313, -313, 309, -212, 61, 369, -282, -367, -189, -368,
	-372, -189, 523, 523, -172, 522, -189, -368, -372, -281,
	-372, -282, 451, -172, -372, -281, -282, 522, 523, -282,
	-189, -313, -189, -372, 523, -372, -282,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 476, 477, 479, 480, 481, 483, 484, 486,
	488, 490, 491, 492, 494, 495, 497, 498, 499, 500,
	501, 503, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 565, 567, 0, 1174,
	1176, 1178, 1180, 0, 701, 0, 32, 33, 0, -2,
	278, 280, 282, 0, 308, 310, 311, 313, 315, -2,
	0, 409, 410, 412, 414, -2, -2, 0, 863, 865,
	0, 554, 556, 0, 868, 870, 0, 0, 576, 577,
	0, 1262, -2, 570, 572, 574, 639, 641, 643, 645,
	647, 649, 651, 653, 654, 656, 658, 660, 662, 664,
	666, 668, 670, 671, 673, 675, 677, 679, 681, 683,
	685, 687, 689, 691, 693, 695, -2, 697, -2, -2,
	0, -2, -2, -2, 1192, 36, 38, 40, 42, 44,
	46, 48, 50, 52, 360, 361, 363, 365, 367, 369,
	372, 374, 376, 1320, 416, 418, 420, 422, 424, 426,
	428, 0, -2, 1332, 0, 0, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 83, 84, 85, 86, 87,
	88, 89, 90, 66, 67, 69, 70, 71, 75, 76,
	77, 78, 81, 64, 0, 0, 1293, 1295, 1297, 1299,
	-2, 0, 0, 5, 9, 11, 13, 15, 17, 19,
	21, 23, 25, 478, 482, 485, 487, 489, 493, 496,
	502, 504, 506, 463, 464, 467, 1953, 1970, 1971, 1972,
	1975, 1976, 1977, 1978, 1979, 1980, 2365, 2446, 2447, 2002,
	2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
	2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022,
	2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032,
	2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042,
	2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052,
	2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062,
	2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072,
	2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082,
	2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092,
	2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112,
	2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122,
	2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132,
	2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142,
	2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152,
	2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162,
	2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172,
	2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182,
	2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192,
	2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202,
	2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212,
	2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222,
	2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232,
	2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242,
	2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252,
	2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262,
	2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272,
	2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282,
	2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292,
	2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302,
	2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312,
	2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322,
	2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332,
	2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342,
	2343, 2344, 2345, 465, 466, 1023, 0, 530, 528, 1946,
	531, 2185, 533, 535, 403, 404, 405, 406, 407, 408,
	0, 547, 540, 546, 548, 550, 551, 552, 553, 525,
	523, 0, 547, 2005, 545, 1172, 1173, 1157, 1158, 2223,
	1199, 0, 193, 566, -2, -2, -2, 2331, -2, 598,
	-2, 605, 2335, 2225, 610, 0, 612, -2, 615, 1175,
	1177, 1179, 699, 700, 1956, 0, 0, 0, 0, 34,
	35, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1072, 1073, 1074, 0, 198, 200, -2, -2,
	-2, -2, 0, 0, 2263, 2053, 1914, 1972, 1917, 1912,
	279, 281, 283, 284, 0, 0, 0, 0, 0, 0,
	309, 312, 314, -2, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 918, 910, 911, 1123, 0, 0,
	0, 0, 411, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	415, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 340, 468, 469, 0, 1321, 1321, 0, 0,
	0, 0, 253, 244, 864, 866, 867, 0, 0, 0,
	0, 555, 557, 0, 0, 226, 869, 871, 872, 0,
	0, 0, 0, 0, 255, 0, 0, 571, 573, 575,
	640, 642, 644, 646, 648, 650, 652, 655, 657, 659,
	661, 663, 665, 667, 669, 672, 674, 676, 678, 680,
	682, 684, 686, 688, 690, 692, 694, 696, 706, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 788, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 709,
	711, 712, 713, 0, 768, 786, 787, 796, 698, 0,
	1063, 1322, 1201, 1182, 1196, 1201, 1184, 1185, 1186, 1187,
	1188, 1193, 1195, 1189, 1190, 1191, 37, 39, 41, 43,
	45, 47, 49, 51, 53, 362, 364, 366, 368, 370,
	373, 375, 377, -2, 1291, 1292, 417, 419, 421, 423,
	425, 427, 429, 558, 0, 560, 0, 710, -2, 0,
	1326, 1326, 1326, 0, 0, 1292, 1290, 0, 563, 564,
	619, 620, 1557, 0, 0, 0, 0, 0, 0, 0,
	1811, 1643, 0, 621, -2, 1674, 1676, 2306, 2331, 1810,
	1678, 1679, 1680, 1681, 1682, 0, 1684, 1685, 1686, 1687,
	1688, 1689, 0, 1691, 0, 1696, 1697, 1698, 0, 2313,
	1891, 1966, -2, 0, 0, 2319, 1962, 0, 1777, 1714,
	-2, -2, 1989, 1968, 1489, 1490, 1491, 1492, 1493, -2,
	-2, 2348, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 1727, 1728, 0, 2294, 2314, 2315, 2320, 2322, 2316,
	2303, 1739, 2065, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1516, 1525, -2, -2,
	-2, -2, -2, -2, -2, 2307, 2308, 2325, 2328, 2334,
	2339, 2340, 2312, 2321, 2349, 2350, 2351, 2352, 2353, 2354,
	2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364,
	1517, -2, -2, -2, -2, 1309, 2196, 1312, 1023, 1310,
	1294, 1296, 0, 1298, 0, 0, 0, 1303, 1329, 1327,
	0, 1370, 1307, 1308, 1388, 1388, 1412, 0, 1393, 0,
	1412, 1321, 1438, 0, 1399, 2215, 1715, 1716, 0, 1972,
	1967, -2, -2, 2346, 0, 0, 0, 0, 0, 0,
	0, 526, 0, 532, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 1198, 1122, 568, 569, 0, 593, 0,
	597, 2302, -2, 2013, 2234, -2, 601, 1202, 1206, 1207,
	1208, 1209, 0, 0, 0, 0, 0, 607, 0, 0,
	594, 595, 613, 616, 0, 702, 703, 704, 705, 63,
	0, 2314, 1438, 65, 0, 1936, 1997, 1998, 1999, 2000,
	2001, 2347, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373,
	2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383,
	2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393,
	2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403,
	2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413,
	2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423,
	2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433,
	2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443,
	2444, 2445, 2348, 68, 0, 2314, 72, 0, 2314, 0,
	-2, 79, 0, 1942, 82, 0, 1939, 91, 0, 2314,
	0, 1911, -2, 0, 178, 1950, 0, 889, 1952, -2,
	2314, 1071, 256, 257, 1985, 1986, 1993, 1994, 1995, 1996,
	0, 0, 0, 0, 856, 1908, 1913, 857, 1932, 858,
	1918, 0, 285, 286, 287, 288, 289, 0, 290, 2314,
	292, 293, 0, 295, 296, 2314, 298, 299, 0, 301,
	0, 211, 212, 317, 318, 0, 320, 0, 2314, 0,
	0, 0, 326, -2, 341, 0, 338, 329, 330, 332,
	333, 334, 335, 0, 381, 379, 1947, 0, 884, 2314,
	886, 0, 0, 1102, -2, 2314, 1068, 0, 1108, 1104,
	0, -2, 0, 1319, 2314, 1216, 914, 915, 916, 917,
	0, 400, 0, 1229, 0, 1231, 0, 1252, 1444, 1388,
	1388, 0, 342, 343, 344, 345, 346, 2314, 0, 0,
	0, 351, 0, 353, 354, 355, 356, 357, 358, 359,
	167, 2314, 434, 461, 0, 167, 2314, 437, 167, 2314,
	440, 0, 443, 1121, 167, 2314, 446, 167, 2314, 449,
	451, 167, 2314, 455, 456, 458, 2314, 460, 258, 1168,
	1169, 1170, 1171, 0, -2, 519, 1955, -2, 471, 0,
	472, 0, -2, 0, 270, 0, 0, 873, 874, 875,
	876, 877, 880, 881, 882, 883, 1425, 229, 227, 0,
	0, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	0, 0, 578, 0, 0, 707, 708, 0, 0, 718,
	719, 720, 0, 270, 2226, 2193, 2085, 727, 0, 730,
	733, -2, 0, 0, 0, 0, 737, 0, 742, 743,
	744, 0, 746, 862, 748, 0, 0, 750, 0, 754,
	0, 757, 0, 759, 0, 761, -2, -2, -2, 772,
	-2, 0, 775, 777, 0, 779, -2, 0, 788, 784,
	785, 0, 0, 0, 0, 804, 805, 0, 810, 0,
	813, 814, 815, 0, 817, 818, 0, 820, 821, 822,
	823, 0, 825, 826, -2, -2, 830, 832, 0, 839,
	0, 843, 0, 847, 0, 714, 715, 167, 1442, 1181,
	-2, 1183, 0, -2, 0, 559, 0, 562, 1349, 1277,
	1274, 0, 1346, 1347, 1278, 0, 0, 0, 1285, 0,
	1324, 1325, 0, 0, 0, 1264, 1265, 0, 0, 0,
	0, 1816, 1817, 1818, 1819, 1820, 1821, 1824, 1825, 1822,
	1823, 1826, 1827, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 1830, 1831, 0, 0, 1833, 0, 1835, 0, 0,
	0, 0, 0, 0, 1622, 1624, 1899, 0, 0, 1832,
	1562, 1563, 1564, 1565, 1566, 1601, 1602, 0, 0, 1675,
	1896, 1895, 1677, 0, 1847, 0, 1690, -2, 0, 1811,
	1842, 0, 0, 1699, 1700, 1701, 0, 0, 1847, 0,
	0, 1890, 1711, 1712, 1554, 0, 0, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1503, 1502, 0, 1504, 0,
	1505, 1506, 1513, 1526, 0, 0, 0, 0, 1530, 0,
	0, 0, 0, 0, 0, 0, 1871, -2, 0, 0,
	0, 0, 1518, 0, 1311, 0, 0, 1374, 1900, 1904,
	1905, 1374, 1374, 0, 0, 1848, 1435, 1435, 0, 0,
	1431, 1431, 1431, 1429, 1412, 0, 1412, 1422, 0, 1412,
	1412, 0, -2, 1393, 0, 0, 1422, 0, 1406, 507,
	509, 511, 513, 514, 515, 517, 1439, 1440, 0, 0,
	0, 0, 1973, 0, 0, 0, 0, 0, 1958, 0,
	0, 0, 0, 2272, 537, 549, 1321, 0, 1850, 1461,
	1465, 0, 1467, 1468, 1469, 1470, 1471, 0, 0, 1462,
	-2, 1514, 1516, 1537, 1990, 1991, 1992, 1497, 1498, 1499,
	1500, 1501, 1509, 1496, 1496, 1496, 1507, 1536, 1528, 1536,
	1532, 1482, 1483, 1484, 1519, 1520, 1521, 1522, 0, 2272,
	542, 0, 0, 0, 0, 0, -2, 603, 608, 609,
	0, 0, 1204, 0, 1210, 630, 631, 632, 1212, 1213,
	0, 606, 633, 634, 635, 636, 637, 638, 0, 1920,
	1921, 1922, 1923, 1926, 1927, 0, 0, 604, 623, 611,
	0, 617, 92, 1154, 0, 131, 0, 1154, 1154, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 0, 116,
	127, 104, 105, 0, 0, 0, 0, 0, 73, 1045,
	0, 1048, 0, 0, 0, 0, 0, 0, 0, 1061,
	0, 0, 0, 0, 115, 0, 0, 110, 94, 0,
	0, 0, 117, 129, 0, 158, 160, 0, 0, 0,
	0, 0, 0, 177, 185, 0, 0, 0, 0, 1069,
	0, 1318, 0, 0, 2314, 0, 1425, 2123, -2, -2,
	1425, 855, 0, 0, 1973, 1916, 0, 0, 0, 0,
	0, 0, 0, 319, 321, 0, 323, 324, 325, 0,
	1101, 0, 331, 371, 994, 2314, 0, 0, 398, 393,
	0, 395, 0, 1044, 2314, 1042, 1951, 0, 1066, 0,
	1023, 2314, 1949, 0, 0, 1109, 1982, 1118, 1122, 1218,
	0, 402, 0, 1232, 1234, 0, 0, 1445, 0, 1447,
	1448, 0, 348, 349, 350, 0, 430, 0, 165, 166,
	0, 167, 2314, 435, 0, 438, 0, 167, 2314, 1906,
	444, 0, 447, 0, 0, 453, 0, 0, 0, 0,
	1321, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 233, 0, 1424, 0, 1425, 227, 270, 270,
	1425, 580, 1425, 582, 0, 0, 721, 722, 0, 270,
	270, 270, 728, 729, 731, 732, -2, -2, 840, 734,
	735, 807, 0, 0, 0, 806, 747, 0, 849, 2211,
	860, 807, 2053, 807, 2053, 807, 2053, 758, 760, 763,
	799, 771, 776, 0, 0, 781, 789, -2, 0, 791,
	0, 793, 0, 795, 807, 808, 811, 816, 819, 824,
	0, 0, 0, 0, 0, 0, 0, 1062, 0, 1194,
	1349, 1277, 561, 1268, 1348, 1269, 1276, 1279, 0, 0,
	1281, 0, 1283, 0, 1344, 1345, 1352, 1353, 0, 1363,
	1364, 1356, 0, -2, 0, 0, 1359, 1360, 1287, 0,
	1304, 1305, 1306, 1333, 1336, 1132, 0, 2446, 1558, 1456,
	1559, 1560, 1935, 0, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, -2, -2, -2, -2, -2, -2,
	-2, -2, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, -2, -2, -2, 1599, 1600, -2, 1834,
	1836, 0, 1899, 0, -2, 0, -2, -2, -2, -2,
	1619, 0, 1621, 1626, 1628, 1630, 0, 0, 0, 0,
	1898, 1640, 1882, 1883, 0, 0, 1813, 1814, 1815, 1625,
	0, 1644, 1897, 1894, 0, 0, 1846, 1332, 1703, 0,
	0, 0, 0, 1710, 1695, 1844, 0, 1843, 0, 0,
	0, 1854, 0, 1889, 1885, 0, 1933, 1553, 1540, 1541,
	1542, 1543, 1544, 1545, 1555, 0, 1930, 1959, 1965, 1787,
	0, 0, 0, 1740, 1741, 1742, 1743, 1744, 0, 1746,
	1747, 0, 1749, 1750, 0, 1752, 1753, 0, 1755, 1756,
	1757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 0, 0, 1759, 0,
	1857, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	1761, 0, 1763, 1848, 1868, 0, 0, 1645, 0, 0,
	0, 1811, 0, 1766, 1848, 1876, 0, 0, 0, 0,
	0, 1848, 0, 1881, 0, 1773, 0, 1775, 1313, 0,
	0, 1451, 0, 0, 0, 1903, 1451, 1451, 0, 1369,
	0, 0, 1432, 1433, 1434, 0, 0, 1435, 0, 1426,
	1430, 1427, 1428, 1422, 1385, 0, 0, 1937, 1422, 1391,
	1421, 0, 1023, 1411, 1422, 1422, 0, -2, 1395, 1412,
	0, 0, 508, 510, 512, 516, 518, 0, 0, 1332,
	-2, 0, -2, 1022, 0, 0, 0, 0, 527, 529,
	0, 0, 450, 0, 521, 0, 524, 0, 1452, 1455,
	0, 0, 1466, 1472, 1473, 0, -2, 0, 0, 1538,
	0, 0, 0, 0, 192, 0, 596, 0, 1203, 1211,
	0, 627, 0, 629, 0, 1924, 1928, 1925, 1929, 0,
	618, 0, 0, 0, 0, 1153, 0, 135, 2314, 0,
	169, 0, 0, 987, 1943, 0, 0, 0, 0, 2072,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 101, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 1046, 1047, 1049, 1056, 1058, 0, 1052,
	1931, 0, 0, 1053, 0, 1055, 1057, 1059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	107, 0, 0, 0, 0, 1910, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1097, 1095,
	1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090,
	1091, 1092, 1093, 1094, 0, 0, -2, 0, 0, 0,
	0, 203, 0, 261, 1909, 1919, 0, 878, 879, 291,
	294, 297, 300, 199, 0, 327, 0, 0, 920, 895,
	0, 0, 380, 270, 0, 0, 394, 0, 1040, 1043,
	0, 1023, 2314, 1080, 0, 0, 0, 0, 0, 0,
	1107, 0, 2314, 1938, 1981, 1982, 1220, 1226, 0, 1451,
	0, 1250, 1235, 0, 0, 0, 1250, 1254, 1255, 1257,
	1258, 0, 0, 1446, 0, 352, 462, 167, 432, 0,
	167, 167, 441, 0, 0, 167, 452, 167, 457, 167,
	259, 459, 470, 520, 1321, 1321, 270, 268, 2168, 266,
	263, 265, 0, 0, 0, 921, 923, 924, 925, 926,
	0, 1982, 0, 2112, 1982, 0, 1238, 1240, 0, 223,
	0, 230, 228, 233, 0, 0, 392, 579, 584, 716,
	0, 270, 724, 725, 726, 765, 801, 736, 738, 739,
	740, 0, 861, 859, 749, 807, 752, 807, 755, 807,
	774, 778, 783, 790, 0, 0, 0, 803, 0, 0,
	0, 0, 0, 0, 0, 844, 845, 846, 848, 1443,
	1272, 1273, 1275, 0, 1284, 0, 0, 1358, -2, -2,
	1357, 1361, 1362, -2, -2, -2, -2, 1280, 0, 1289,
	1286, 0, 1343, 1130, 1131, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1641, 0, -2, 1620, 1623, 1627,
	1629, 1631, 0, 0, 0, 0, 0, 0, 1837, 0,
	1839, 1642, 1892, 1895, 1809, 0, 0, 1331, 1332, 1332,
	0, 1709, 0, 1845, 0, 1852, 1853, 0, 1702, 0,
	1886, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1713, 0, 0, 0, 0, 1745, 1748, 1751, 1754, 0,
	0, 0, 0, 1734, 0, 0, 0, 1738, 1508, 1494,
	0, 1536, 1534, 1535, 1529, 1536, 1533, 1486, 0, 1485,
	0, 1758, 0, 1760, 1762, 0, 0, 1764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1648, 1649, 1650, 1765, 1874, 1875, 0, 0, 0,
	0, 0, 0, 1771, 0, 1880, 1772, 1774, 1321, 0,
	1314, 0, 1371, 1366, 1450, 0, 1901, 1425, 1373, 1375,
	1902, 1940, 1366, 1366, 0, 1849, 0, 0, 1416, 0,
	0, 0, 1418, 1389, 0, 0, 1383, 0, 1379, 1380,
	1381, 1382, 1390, 1023, 1420, 1392, 1396, 1959, 0, 1422,
	0, 1407, 0, 1409, 1441, 0, 1401, 1404, 0, 0,
	1974, 271, 0, 302, 306, 307, 303, 304, 305, 536,
	0, 0, 0, 1851, 0, 1457, 0, 1463, 0, 0,
	0, 0, 541, 0, 0, 592, -2, 625, 626, 628,
	0, 624, 132, 1154, 0, 0, 1135, 1137, 0, 137,
	2314, 146, 0, 961, 0, 1941, 0, 0, 0, 0,
	0, 1156, 0, 0, 2314, 167, 2314, 167, 149, 152,
	0, 157, 154, 155, 182, 183, 184, 0, 0, 952,
	93, 1154, 0, 96, 100, 108, 0, 0, 0, 114,
	0, 0, 0, 1139, 1145, 0, 0, 1050, 1051, 1054,
	1060, 74, 0, 0, 1143, 1149, 80, 0, 1134, 159,
	98, 102, 109, 0, 1151, 95, 0, 181, 0, 0,
	0, 173, 0, 174, 175, 186, 0, 167, 2314, 0,
	887, 888, 1096, 1064, 1065, 0, 1070, 0, 0, 0,
	1425, 195, 0, 1425, 203, 0, 1915, 0, 0, 0,
	0, 0, 0, 919, 1005, 0, 892, 0, 0, 0,
	386, 382, 0, 391, 397, 396, 885, 0, 0, 0,
	-2, 0, 0, 1111, 1105, 1106, 0, 0, 0, 2314,
	1222, 1226, 0, 1225, 1319, 1332, 401, 1227, 1250, 0,
	0, 0, 1237, 1233, 1230, 1451, 0, 0, 0, 0,
	0, 347, 431, 167, 436, 439, 1907, 167, 445, 448,
	454, 473, 474, 245, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 930, 0, 1982, 1982, 0, 1945, 0,
	0, 0, 0, 231, 0, 234, 0, 0, 0, 239,
	240, 241, 242, 243, 224, 1425, 0, 581, 0, 0,
	723, 0, 751, 753, 756, 792, 794, 807, 833, 834,
	947, 0, 947, 0, 0, 1282, 0, 1355, 1288, 1337,
	1338, 0, 1132, 0, 1561, 1604, 0, 0, -2, 0,
	0, 1608, 0, 0, 0, -2, 0, 0, 0, 1838,
	1840, 0, 1894, 1704, 0, 0, 0, 1708, 1692, 1693,
	0, 1812, 1855, 1884, 1888, 0, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 0, 1934, 1960, 1964, 1785, 1786, 1790,
	1948, 0, 0, 0, 1717, 0, 0, 0, 0, 0,
	0, 0, 0, 1527, 1531, 0, 0, 1856, 1867, 1869,
	1646, 1647, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, -2, -2, -2, 1664, 1665, 1666, -2, -2,
	-2, 0, 0, 0, 1870, 1872, 1873, 1877, 1878, 0,
	1768, 1769, 1770, 1879, 0, 1321, 1315, 1368, 0, 1449,
	1372, 0, 1368, 1368, 1328, 1414, 0, 0, 1437, 0,
	1386, 0, 1387, 0, 1419, 0, 1394, 1397, 1398, 1408,
	0, 1400, 0, 1403, 0, 1704, -2, 272, 274, 0,
	277, 539, 538, 522, 0, 0, 1459, 0, 0, 1511,
	1515, 1539, 544, 543, 1423, 0, 0, 0, 0, 168,
	959, 986, 0, 0, 0, 1125, 1132, 0, 0, 992,
	139, 0, 0, 0, 147, 0, 0, 144, 0, 151,
	156, 0, 0, 0, 0, 0, 0, 111, 112, 113,
	0, 118, 0, 119, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 0, 0, 0, 1129, 0, 0,
	188, 0, 0, 0, 1099, 1100, 1140, 1146, 0, 0,
	203, 201, 0, 204, 0, 207, 208, 0, 203, 197,
	0, 0, 322, 1023, 328, 941, 993, 0, 995, 0,
	893, 0, 0, 994, 378, 0, 385, 0, 1044, 0,
	0, 1067, 1078, 1023, 0, 1110, 1112, 1120, 0, 0,
	0, 1224, 1226, 0, 1217, 1218, 1351, 1228, 1248, -2,
	1247, 0, 1332, 1256, 1253, 1259, 1260, 0, 433, 442,
	267, 0, 262, 264, 0, 248, 0, 0, 922, 927,
	0, 0, 0, 0, 0, 1239, 1241, 0, 0, 0,
	0, 0, 0, 233, 254, 0, 717, 741, 802, 835,
	946, 0, 0, 837, 0, 0, 1354, 1341, 1342, 1339,
	1132, 1606, 1610, 0, 0, 0, 1612, -2, 0, 1634,
	-2, -2, 1841, 1893, 1683, 1332, 1705, 1707, 1694, 1887,
	1556, 0, 1792, 1789, 0, 1776, 0, 1729, 1730, 0,
	0, 1733, 1735, 1736, 1737, 1495, 1488, 1487, 1866, 0,
	0, 0, 0, 1767, 1316, 0, 1781, 0, 0, 1376,
	1781, 1781, 1415, 0, 1417, 1384, 1377, 0, 1960, 1410,
	1402, 0, 0, 275, 0, 1453, 1458, 0, 1464, 1510,
	133, 134, 136, 0, 960, 0, 963, 0, 0, 0,
	0, 970, 971, 0, 0, 0, 0, 0, 980, 0,
	1009, 1019, 0, 1343, 0, 0, 0, 141, 162, 0,
	0, 1155, 0, 0, 167, 167, 0, 0, 1136, 1138,
	0, 0, 0, 0, 121, 0, 0, 1141, 1147, 1144,
	1150, 0, 0, 0, 1152, 179, 180, 0, 167, 0,
	172, 167, 167, 1129, 0, 0, 0, 194, 0, 0,
	0, 0, 196, 260, 203, 0, 949, 0, 1005, 997,
	998, 999, 0, 1004, 1006, 0, 0, 907, 894, 0,
	903, 0, 0, 920, 895, 0, 383, 1041, 1075, 1023,
	0, 1103, 0, 0, 0, 0, 0, 0, 1214, 1226,
	0, 1219, 1220, 1250, 1350, 0, 0, 0, 1236, 1351,
	0, 269, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 235, 0, 236, 237, 238, 225, 583,
	585, 0, 0, 591, 945, 0, 0, 0, 0, 1340,
	1614, -2, -2, 1635, 0, 1961, 1963, 1332, 0, 1778,
	1334, 0, 0, -2, 0, 0, 0, 1317, 1300, 0,
	1367, 1365, 1301, 1302, 1436, 0, 1405, 276, 0, 1460,
	138, 0, 964, 965, 1944, 967, 0, 969, 972, 0,
	975, 1984, 0, 979, 0, 988, 1010, 0, 941, 0,
	1015, 1016, 1017, 1126, 1127, 1021, 0, 140, 142, 161,
	1129, 0, 143, 150, 0, 0, 97, 0, 0, 2044,
	124, 122, 120, 1133, 99, 0, 181, 187, 1128, 176,
	189, 167, 0, 1142, 1148, 205, 0, 206, 209, 0,
	0, 895, 948, 0, 996, 0, 1007, 1008, 897, 0,
	896, 0, 0, 0, 0, 0, 384, 387, 0, 390,
	0, 0, 1113, 0, 1119, 0, 0, 0, 0, 1221,
	1222, 399, 0, 0, 0, 1250, 1261, 247, 0, 0,
	928, 931, 932, 933, 934, 935, 936, 937, 938, 939,
	929, 1021, 0, 0, 985, 0, 252, 232, 0, 587,
	0, 589, 0, 836, 838, 0, 0, 1706, 1796, 0,
	0, 1731, 1732, -2, 0, 1672, 1780, 1782, 0, 1378,
	1454, 962, 966, 0, 0, 0, 1027, 0, 0, 981,
	0, 1013, 1014, 949, 0, 941, 0, 0, 164, 0,
	0, 0, 0, 0, 0, 0, 171, 190, 1129, 202,
	219, 0, 1076, 897, 0, 0, 905, 0, 908, 0,
	904, 901, 902, 941, 0, 388, 389, 0, 1079, 0,
	1120, 0, 0, 1223, 1224, 0, 1243, 1244, 1246, 1251,
	0, 0, 1019, 1021, 895, 0, 586, 0, 0, 841,
	842, 0, 0, 0, 0, 1791, 1335, 1673, 0, 0,
	0, 0, 974, 1032, 0, 0, 0, 1011, 1012, 1009,
	0, 990, 0, 1023, 145, 0, 1021, 0, 953, 0,
	0, 956, 0, 0, 125, 2044, 123, 0, 167, 222,
	0, 216, 214, 215, 890, 0, 0, 1001, 1003, 0,
	909, 949, 907, 1077, 1021, 0, 1019, 0, 1215, 0,
	1245, 270, 270, 941, 1019, 1451, 0, 270, 588, 590,
	1788, 1808, 1797, -2, 2274, 2050, 0, 1808, 1808, 1783,
	1784, 0, 0, 976, 1028, 1029, 0, 1024, 1025, 1026,
	1983, 977, 978, 1451, 1018, 0, 1027, 163, 941, 950,
	0, 0, 951, 0, 0, 128, 0, 130, 191, 210,
	0, 0, 0, 1000, 0, 0, 0, 0, 895, 897,
	1019, 0, 941, 0, 1451, 249, 250, 949, 941, 984,
	251, 1793, 0, 0, 1799, 1800, 1801, 1802, 1803, 1794,
	1795, 968, 0, 1030, 0, 1031, 0, 0, 0, 989,
	0, 1032, 148, 954, 0, 957, 0, 126, 0, 217,
	218, 0, 1002, 898, 0, 900, 897, 906, 941, 0,
	949, 0, 1242, 895, 949, 0, 1805, 1806, 0, 0,
	0, 1033, 0, 1036, 1037, 0, 1034, 0, 1009, 0,
	0, 0, 944, 899, 891, 949, 1021, 895, 1019, 1451,
	895, 1804, 1807, 1798, 973, 1035, 1038, 1039, 1020, 991,
	0, 0, 0, 940, 942, 943, 895, 1019, 1451, 941,
	982, 1451, 949, 0, 220, 0, 1451, 941, 1116, 949,
	983, 955, 0, 0, 1114, 949, 895, 0, 221, 895,
	1451, 0, 1451, 1117, 949, 1115, 958,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 511, 3, 517, 512, 3,
	522, 523, 515, 513, 527, 514, 524, 516, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 530, 3,
	503, 505, 504, 508, 526, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 520, 3, 521, 518, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 528, 510, 529, 506,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 507, 57846, 509, 57847, 519, 57848, 525, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1213
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1218
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1220
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1223
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1224
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1225
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1226
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1227
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1228
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1229
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1230
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1231
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1238
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1254
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1255
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1256
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1257
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1258
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1259
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1341
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1354
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1371
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1375
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1379
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1396
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1400
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1421
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1453
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1457
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1461
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1467
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1471
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1477
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1486
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1497
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1501
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1507
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1515
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1525
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1529
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1539
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1550
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1557
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1569
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1576
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1584
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1589
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1593
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1598
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1604
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1612
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1623
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1633
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1643
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1652
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1663
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1669
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1677
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1681
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1685
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1689
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1695
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1700
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1711
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1715
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1725
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1732
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1742
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1747
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1752
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1757
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1762
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1772
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1777
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1791
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1803
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1813
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1820
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 148:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1824
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1832
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1839
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1857
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1862
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1869
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1877
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1889
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1893
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.union.val = nil
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1921
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1928
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1942
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1971
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1982
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2003
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2012
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2021
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2030
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2034
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2037
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2041
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2081
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{Name: sqlDollar[5].union.unresolvedObjectName(), Concurrently: sqlDollar[4].union.bool()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2084
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2123
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2133
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2153
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2161
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2169
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2173
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2188
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2197
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2201
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2305
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = nil
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2322
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2332
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2348
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 221:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2358
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2362
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2402
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2411
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2420
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2424
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2460
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2464
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2473
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2489
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2497
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2501
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2544
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2549
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2553
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2559
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2564
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2569
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2574
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2579
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2583
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2602
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2610
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2632
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2638
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2642
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2646
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2666
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2670
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2674
		{
			sqlVAL.union.val = nil
		}
	case 271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2686
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2698
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2708
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2712
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2724
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2732
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2733
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2734
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2735
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2745
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2753
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2759
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2762
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2772
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2789
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2798
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2808
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2817
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2825
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2827
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2831
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2834
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2846
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2865
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2870
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2882
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2884
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2885
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2886
		{
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2887
		{
			return helpWith(sqllex, "CREATE")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2890
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2891
		{
			return unimplemented(sqllex, "create cast")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2892
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2893
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2894
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2895
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2896
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2897
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2898
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2899
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2900
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2901
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2902
		{
			return unimplemented(sqllex, "create operator")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2903
		{
			return unimplemented(sqllex, "create publication")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2904
		{
			return unimplemented(sqllex, "create rule")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2905
		{
			return unimplemented(sqllex, "create server")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2906
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2907
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2908
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2911
		{
		}
	case 337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2912
		{
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2915
		{
		}
	case 339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2916
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2919
		{
		}
	case 341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2920
		{
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2923
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2924
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2925
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2926
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2927
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2928
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2929
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2930
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2931
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2932
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2933
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2934
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2935
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2936
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2937
		{
			return unimplemented(sqllex, "drop server")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2938
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2940
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2944
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2945
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2946
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2947
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2948
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2950
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2951
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2952
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2953
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2963
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2979
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2985
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3011
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3021
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3032
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3052
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3060
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3070
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3074
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3084
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3095
		{

			sqlVAL.union.val = nil
		}
	case 399:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3119
		{
			return helpWith(sqllex, "DELETE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3122
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3123
		{
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3134
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3135
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3136
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3137
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3138
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3147
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3148
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3149
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3150
		{
			return helpWith(sqllex, "DROP")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3153
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3154
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3155
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3156
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3157
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3158
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3159
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3192
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3200
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3204
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3207
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3215
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3219
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3222
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3230
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3247
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3255
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3270
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3277
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3292
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3330
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3355
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3359
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3364
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3384
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3393
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3415
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3422
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3424
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3432
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3440
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3448
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3456
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3467
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "DELETE")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3476
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3477
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3478
		{
			return helpWith(sqllex, "INSERT")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3481
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3483
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3486
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3492
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3493
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3498
		{
			return helpWith(sqllex, "DELETE")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3499
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3500
		{
			return helpWith(sqllex, "INSERT")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3502
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3506
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3507
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3511
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3525
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3533
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3566
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3574
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3592
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3607
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3627
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3642
		{
			return helpWith(sqllex, "GRANT")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3666
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3677
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3686
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3714
		{
			return helpWith(sqllex, "RESET")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3715
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3723
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3727
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3730
		{
			return helpWith(sqllex, "RESET")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3738
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3755
		{
			return helpWith(sqllex, "USE")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3759
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3760
		{
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3761
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3762
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3766
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3767
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3768
		{
			return helpWith(sqllex, "USE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3784
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3802
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3820
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3828
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3832
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3836
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3842
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3852
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3856
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3860
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3864
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3879
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3882
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3908
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3934
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3937
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3942
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3946
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3965
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3977
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3982
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3987
		{
			return unimplemented(sqllex, "set from current")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3988
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3996
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4001
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4008
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4018
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4022
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4050
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4054
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4064
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4072
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4082
		{
			sqlVAL.union.val = tree.Low
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4086
		{
			sqlVAL.union.val = tree.Normal
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4090
		{
			sqlVAL.union.val = tree.High
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4101
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4105
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4109
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4114
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4118
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4132
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4137
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4138
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4142
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4146
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4149
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4152
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4153
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4154
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4155
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4156
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4157
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4158
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4159
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4160
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4162
		{
			return helpWith(sqllex, "SHOW")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4163
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4168
		{
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4169
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4172
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4176
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4181
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4186
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4191
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4201
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4202
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4214
		{
			sqlVAL.str = "client_encoding"
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			sqlVAL.str = "timezone"
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4218
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4232
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4236
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4251
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4259
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4273
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4281
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4299
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4308
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4316
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4326
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4330
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4333
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4335
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4338
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4340
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4344
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4347
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4355
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4358
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4366
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4374
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4381
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4389
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4402
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4415
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4434
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4444
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4447
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4456
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4467
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4472
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4483
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4485
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4488
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4492
		{
			sqlVAL.union.val = true
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = true
		}
	case 768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = false
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4514
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4515
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4521
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4528
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4546
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4556
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4562
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4570
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4578
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4586
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4592
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4596
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4607
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4610
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4612
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4615
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4617
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4621
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4624
		{
			sqlVAL.union.val = true
		}
	case 797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = false
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4636
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4638
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4641
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4649
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4672
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4675
		{
			sqlVAL.union.val = true
		}
	case 807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = false
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4687
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4690
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4701
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4704
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4711
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4715
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4722
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4735
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4743
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4748
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4753
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4757
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4769
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4773
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4789
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4800
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4812
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4820
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4842
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4846
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4857
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4871
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4880
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4885
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4889
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4896
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4908
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5028
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5032
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5036
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5075
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5084
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5088
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5096
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5105
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 862:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5129
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5130
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5131
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5141
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5142
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5143
		{
			return helpWith(sqllex, "RESUME")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5153
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5161
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5163
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5167
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5170
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5179
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5194
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5202
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5204
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5210
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5224
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5230
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5258
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5297
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5312
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5330
		{

			sqlVAL.union.val = nil
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5336
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = nil
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5346
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5357
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5362
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5367
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5378
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5384
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 905:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5394
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5408
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5423
		{
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5424
		{
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5425
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5451
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5452
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5464
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5493
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5497
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5503
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5508
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5509
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5511
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5512
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5514
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5515
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5521
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5537
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5542
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5553
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5560
		{
			sqlVAL.str = ""
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 950:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5573
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5580
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5593
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 955:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 958:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5637
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5658
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5712
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5716
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5723
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5731
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5745
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5749
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5756
		{
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5757
		{
		}
	case 982:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5762
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5790
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5814
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5843
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5855
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5866
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5877
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5883
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5893
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5908
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5932
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5942
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5973
		{
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5974
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5975
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5976
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5977
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5978
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6012
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6022
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6050
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6134
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6143
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6151
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6155
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6158
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6162
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6165
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6167
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6177
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6180
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6182
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6184
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6186
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6187
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6190
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6192
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6194
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6205
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6223
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6230
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6238
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6245
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = true
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6255
		{

			sqlVAL.union.val = true
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = false
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6270
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6284
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6296
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6308
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6318
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6328
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6356
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6372
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6389
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = nil
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6405
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6414
		{
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6415
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6431
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6433
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6435
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6437
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6439
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6441
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6479
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6497
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6516
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6533
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6550
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6554
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = false
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = true
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = false
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = true
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = false
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6599
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6608
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6630
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.str = ""
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6635
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6639
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6661
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6667
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6681
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6689
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6695
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6705
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6737
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6743
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6755
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6761
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6775
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6781
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6793
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6798
		{
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6799
		{
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6802
		{
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6803
		{
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6811
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6814
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6832
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6838
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6841
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6862
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6870
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6891
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6899
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6910
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6914
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6915
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6916
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6935
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6940
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6950
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6953
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6955
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6958
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6967
		{
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6968
		{
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6969
		{
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6979
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6983
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6986
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6989
		{
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6990
		{
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7014
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7018
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7031
		{
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7033
		{
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7037
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7042
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7050
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7062
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7102
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.str = ""
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7116
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.str = ""
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.str = ""
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7136
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.str = ""
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7145
		{
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7146
		{
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7158
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7165
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7172
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7190
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7194
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7203
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7208
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7222
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7252
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7260
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7269
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7270
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7278
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7304
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7316
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7348
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7352
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7458
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7462
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7481
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7492
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7498
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7533
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7534
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7535
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7557
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7596
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7640
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7656
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7661
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7667
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = true
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7681
		{
			sqlVAL.union.val = false
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7687
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7709
		{
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7710
		{
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7714
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = nil
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7723
		{
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7724
		{
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = true
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = false
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = false
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = true
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7753
		{
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7754
		{
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7762
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7789
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7795
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7816
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7821
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7837
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7850
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7870
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7883
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7938
		{
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7939
		{
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7942
		{
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7943
		{
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7970
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7996
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7998
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8013
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8035
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8040
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8045
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8056
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8068
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8087
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8126
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8136
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8146
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8171
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8182
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8212
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8223
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8245
		{
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8247
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8250
		{
			sqlVAL.union.val = nil
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8251
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8260
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = true
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8270
		{
			sqlVAL.union.val = false
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8290
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.str = tree.AstFull
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.str = tree.AstRight
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.str = tree.AstInner
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8364
		{
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8365
		{
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.str = tree.AstHash
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.str = ""
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8427
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8432
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8450
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8456
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8462
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8472
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8482
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8501
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8514
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8522
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8523
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8541
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8543
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8551
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8564
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8571
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8580
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8620
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8632
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8633
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = types.Geography
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8658
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8666
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8692
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8700
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = nil
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = types.Int2
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.union.val = types.Int
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.union.val = types.Float4
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8735
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = types.Float
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8743
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8751
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8759
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8767
		{
			sqlVAL.union.val = types.Bool
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8773
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.union.val = types.Float
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8792
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8798
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8820
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8842
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8846
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.union.val = types.String
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = true
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = false
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.union.val = types.Date
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8869
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8877
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8891
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8900
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8908
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8925
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = true
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = false
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = false
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = types.Interval
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8949
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9024
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9033
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9048
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = nil
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9078
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9138
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9155
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9231
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9390
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9404
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9444
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9448
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9456
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9478
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9672
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9677
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9703
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9712
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9727
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9757
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9768
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9769
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9784
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9793
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9859
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9880
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9890
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9894
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9984
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9989
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9998
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10007
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10016
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10025
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10030
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10035
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10040
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10042
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10045
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10054
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10055
		{
			return unimplemented(sqllex, "treat")
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10076
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10078
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10081
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10118
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10128
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.str = ""
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10203
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10217
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10230
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10290
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10298
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10327
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = tree.Any
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = tree.Some
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = tree.All
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10352
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = tree.Div
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = tree.LT
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = tree.GT
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = tree.LE
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = tree.GE
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = tree.NE
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = tree.Like
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10497
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10534
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10541
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10683
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10688
		{
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10689
		{
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10720
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10738
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10761
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10769
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10842
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10858
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10867
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10878
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10887
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10895
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10907
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11085
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11098
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11105
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.str = ""
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
